[{"original_method":"public void createTopBarElements() {\n\t\t// 1. Create view groups and controls\n\t\tstatusBar = createStatusBar();\n\t\tstatusBar.setBackgroundDrawable(view.getResources().getDrawable(R.drawable.box_top).mutate());\n\t\t\n\t\trightStack = new MapStackControl(view.getContext());\n\t\trightStack.addStackView(createDistanceControl());\n\t\trightStack.addStackView(createAltitudeControl());\n\t\trightStack.addCollapsedView(createSpeedControl());\n\t\trightStack.addCollapsedView(createTimeControl());\n\t\t\n\t\tleftStack = new MapStackControl(view.getContext());\n\t\tleftStack.addStackView(createNextInfoControl());\n\t\tleftStack.addStackView(createMiniMapControl());\n\t\t\n\t\t// 2. Preparations\n\t\tRect topRectPadding = new Rect();\n\t\tview.getResources().getDrawable(R.drawable.box_top).getPadding(topRectPadding);\n\t\t\n\t\tSTATUS_BAR_MARGIN_X = (int) (STATUS_BAR_MARGIN_X * scaleCoefficient);\n\t\tstatusBar.measure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);\n\t\tRect statusBarPadding = new Rect();\n\t\tstatusBar.getBackground().getPadding(statusBarPadding);\n\t\t// 3. put into frame parent layout controls\n\t\tFrameLayout parent = (FrameLayout) view.getParent();\n\t\t// status bar hides own top part \n\t\tint topMargin = statusBar.getMeasuredHeight()  - statusBarPadding.top - statusBarPadding.bottom;\n\t\t// we want that status bar lays over map stack controls\n\t\ttopMargin -= topRectPadding.top;\n\n\t\tFrameLayout.LayoutParams flp = new FrameLayout.LayoutParams(android.view.ViewGroup.LayoutParams.FILL_PARENT,\n\t\t\t\tandroid.view.ViewGroup.LayoutParams.WRAP_CONTENT, Gravity.RIGHT);\n\t\tflp.rightMargin = STATUS_BAR_MARGIN_X;\n\t\tflp.topMargin = topMargin;\n\t\trightStack.setLayoutParams(flp);\n\t\t\n\t\t\n\t\tflp = new FrameLayout.LayoutParams(android.view.ViewGroup.LayoutParams.FILL_PARENT,\n\t\t\t\tandroid.view.ViewGroup.LayoutParams.WRAP_CONTENT, Gravity.LEFT);\n\t\tflp.leftMargin = STATUS_BAR_MARGIN_X;\n\t\tflp.topMargin = topMargin;\n\t\tleftStack.setLayoutParams(flp);\n\n\t\tflp = new FrameLayout.LayoutParams(android.view.ViewGroup.LayoutParams.FILL_PARENT,\n\t\t\t\tandroid.view.ViewGroup.LayoutParams.WRAP_CONTENT, Gravity.TOP);\n\t\tflp.leftMargin = STATUS_BAR_MARGIN_X;\n\t\tflp.rightMargin = STATUS_BAR_MARGIN_X;\n\t\tflp.topMargin = -topRectPadding.top;\n\t\tstatusBar.setLayoutParams(flp);\n\n\t\tparent.addView(rightStack);\n\t\tparent.addView(leftStack);\n\t\tparent.addView(statusBar);\n\t}","id":39000,"modified_method":"public void createTopBarElements() {\n\t\t// 1. Create view groups and controls\n\t\tstatusBar = createStatusBar();\n\t\tstatusBar.setBackgroundDrawable(view.getResources().getDrawable(R.drawable.box_top));\n\t\t\n\t\trightStack = new MapStackControl(view.getContext());\n\t\trightStack.addStackView(createDistanceControl());\n\t\trightStack.addStackView(createAltitudeControl());\n\t\trightStack.addCollapsedView(createSpeedControl());\n\t\trightStack.addCollapsedView(createTimeControl());\n\t\t\n\t\tleftStack = new MapStackControl(view.getContext());\n\t\tleftStack.addStackView(createNextInfoControl());\n\t\tleftStack.addStackView(createMiniMapControl());\n\t\t\n\t\t// 2. Preparations\n\t\tRect topRectPadding = new Rect();\n\t\tview.getResources().getDrawable(R.drawable.box_top).getPadding(topRectPadding);\n\t\t\n\t\tSTATUS_BAR_MARGIN_X = (int) (STATUS_BAR_MARGIN_X * scaleCoefficient);\n\t\tstatusBar.measure(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);\n\t\tRect statusBarPadding = new Rect();\n\t\tstatusBar.getBackground().getPadding(statusBarPadding);\n\t\t// 3. put into frame parent layout controls\n\t\tFrameLayout parent = (FrameLayout) view.getParent();\n\t\t// status bar hides own top part \n\t\tint topMargin = statusBar.getMeasuredHeight()  - statusBarPadding.top - statusBarPadding.bottom;\n\t\t// we want that status bar lays over map stack controls\n\t\ttopMargin -= topRectPadding.top;\n\n\t\tFrameLayout.LayoutParams flp = new FrameLayout.LayoutParams(android.view.ViewGroup.LayoutParams.FILL_PARENT,\n\t\t\t\tandroid.view.ViewGroup.LayoutParams.WRAP_CONTENT, Gravity.RIGHT);\n\t\tflp.rightMargin = STATUS_BAR_MARGIN_X;\n\t\tflp.topMargin = topMargin;\n\t\trightStack.setLayoutParams(flp);\n\t\t\n\t\t\n\t\tflp = new FrameLayout.LayoutParams(android.view.ViewGroup.LayoutParams.FILL_PARENT,\n\t\t\t\tandroid.view.ViewGroup.LayoutParams.WRAP_CONTENT, Gravity.LEFT);\n\t\tflp.leftMargin = STATUS_BAR_MARGIN_X;\n\t\tflp.topMargin = topMargin;\n\t\tleftStack.setLayoutParams(flp);\n\n\t\tflp = new FrameLayout.LayoutParams(android.view.ViewGroup.LayoutParams.FILL_PARENT,\n\t\t\t\tandroid.view.ViewGroup.LayoutParams.WRAP_CONTENT, Gravity.TOP);\n\t\tflp.leftMargin = STATUS_BAR_MARGIN_X;\n\t\tflp.rightMargin = STATUS_BAR_MARGIN_X;\n\t\tflp.topMargin = -topRectPadding.top;\n\t\tstatusBar.setLayoutParams(flp);\n\n\t\tparent.addView(rightStack);\n\t\tparent.addView(leftStack);\n\t\tparent.addView(statusBar);\n\t}","commit_id":"79484705fe8e1e3456904f4dbb11dc29725e3fcc","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void addCollapsedView(MapInfoControl v) {\n\t\tcollapsedViews.add(v);\n\t\tMapStackControl.this.addView(v);\n\t}","id":39001,"modified_method":"public void addCollapsedView(MapInfoControl v) {\n\t\tcollapsedViews.add(v);\n\t\tMapStackControl.this.addView(v, 1);\n\t}","commit_id":"79484705fe8e1e3456904f4dbb11dc29725e3fcc","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void addStackView(MapInfoControl v) {\n\t\tstackViews.add(v);\n\t\tMapStackControl.this.addView(v);\n\t}","id":39002,"modified_method":"public void addStackView(MapInfoControl v) {\n\t\tstackViews.add(v);\n\t\tMapStackControl.this.addView(v, 1);\n\t}","commit_id":"79484705fe8e1e3456904f4dbb11dc29725e3fcc","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public MapStackControl(Context context) {\n\t\tsuper(context);\n\t\tfinal Bitmap arrowDown = BitmapFactory.decodeResource(context.getResources(), R.drawable.arrow_down);\n\t\tfinal Bitmap arrowUp = BitmapFactory.decodeResource(context.getResources(), R.drawable.arrow_up);\n\t\tfinal Paint paintImg = new Paint();\n\t\tpaintImg.setAntiAlias(true);\n\t\tsetChildrenDrawingOrderEnabled(true);\n\t\texpandView = new ImageView(context) {\n\t\t\t@Override\n\t\t\tprotected void onDraw(Canvas canvas) {\n\t\t\t\tsuper.onDraw(canvas);\n\t\t\t\tint cx = (getLeft() + getRight()) / 2 - getLeft();\n\t\t\t\tint t = (int) (getBottom() - getTop() - 12 * MapInfoLayer.scaleCoefficient);\n\n\t\t\t\tif (!isCollapsed) {\n\t\t\t\t\tcanvas.drawBitmap(arrowUp, cx - arrowUp.getWidth() / 2, t - arrowUp.getHeight(), paintImg);\n\t\t\t\t} else {\n\t\t\t\t\tcanvas.drawBitmap(arrowDown, cx - arrowDown.getWidth() / 2, t - arrowUp.getHeight(), paintImg);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\texpandView.setImageDrawable(context.getResources().getDrawable(R.drawable.box_expand).mutate());\n\t\texpandView.setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tisCollapsed = !isCollapsed;\n\t\t\t\tMapStackControl.this.requestLayout();\n\t\t\t\tMapStackControl.this.invalidate();\n\t\t\t}\n\t\t});\n\t\tMapStackControl.this.addView(expandView);\n\t}","id":39003,"modified_method":"public MapStackControl(Context context) {\n\t\tsuper(context);\n\t\tfinal Bitmap arrowDown = BitmapFactory.decodeResource(context.getResources(), R.drawable.arrow_down);\n\t\tfinal Bitmap arrowUp = BitmapFactory.decodeResource(context.getResources(), R.drawable.arrow_up);\n\t\tfinal Paint paintImg = new Paint();\n\t\tpaintImg.setAntiAlias(true);\n\t\texpandView = new ImageView(context) {\n\t\t\t@Override\n\t\t\tprotected void onDraw(Canvas canvas) {\n\t\t\t\tsuper.onDraw(canvas);\n\t\t\t\tint cx = (getLeft() + getRight()) / 2 - getLeft();\n\t\t\t\tint t = (int) (getBottom() - getTop() - 12 * MapInfoLayer.scaleCoefficient);\n\n\t\t\t\tif (!isCollapsed) {\n\t\t\t\t\tcanvas.drawBitmap(arrowUp, cx - arrowUp.getWidth() / 2, t - arrowUp.getHeight(), paintImg);\n\t\t\t\t} else {\n\t\t\t\t\tcanvas.drawBitmap(arrowDown, cx - arrowDown.getWidth() / 2, t - arrowUp.getHeight(), paintImg);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\texpandView.setImageDrawable(context.getResources().getDrawable(R.drawable.box_expand));\n\t\texpandView.setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tisCollapsed = !isCollapsed;\n\t\t\t\tMapStackControl.this.requestLayout();\n\t\t\t\tMapStackControl.this.invalidate();\n\t\t\t}\n\t\t});\n\t\tMapStackControl.this.addView(expandView);\n\t}","commit_id":"79484705fe8e1e3456904f4dbb11dc29725e3fcc","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Test\n  public void testCrossNSDatasetAccessWithAuthMapReduce() throws Exception {\n    createAuthNamespace();\n    getNamespaceAdmin().create(new NamespaceMeta.Builder()\n                                 .setName(DatasetCrossNSAccessWithMAPApp.DATASET_INPUT_SPACE).build());\n    getNamespaceAdmin().create(new NamespaceMeta.Builder()\n                                 .setName(DatasetCrossNSAccessWithMAPApp.DATASET_OUTPUT_SPACE).build());\n    NamespaceId datasetInputSpace = new NamespaceId(DatasetCrossNSAccessWithMAPApp.DATASET_INPUT_SPACE);\n    NamespaceId datasetOutputSpace = new NamespaceId(DatasetCrossNSAccessWithMAPApp.DATASET_OUTPUT_SPACE);\n\n    addDatasetInstance(datasetInputSpace.toId(), \"keyValueTable\", \"table1\").create();\n    addDatasetInstance(datasetOutputSpace.toId(), \"keyValueTable\", \"table2\").create();\n    DataSetManager<KeyValueTable> tableManager = getDataset(datasetInputSpace.toId(), \"table1\");\n    KeyValueTable inputTable = tableManager.get();\n    inputTable.write(\"hello\", \"world\");\n    tableManager.flush();\n\n    ApplicationManager appManager = deployApplication(AUTH_NAMESPACE.toId(), DatasetCrossNSAccessWithMAPApp.class);\n    Map<String, String> argsForMR = ImmutableMap.of(DatasetCrossNSAccessWithMAPApp.INPUT_KEY, \"table1\",\n                                                    DatasetCrossNSAccessWithMAPApp.OUTPUT_KEY, \"table2\");\n    MapReduceManager mrManager = appManager.getMapReduceManager(DatasetCrossNSAccessWithMAPApp.MAPREDUCE_PROGRAM);\n    // Switch to Bob. Should fail as Bob do not have access to the dataset namespace\n    SecurityRequestContext.setUserId(BOB.getName());\n    try {\n      mrManager.start(argsForMR);\n      mrManager.waitForFinish(5, TimeUnit.MINUTES);\n      Assert.fail(\"Should fail here since bob does not have the privileges on input dataspace.\");\n    } catch (Exception e) {\n      // Expected\n    }\n\n    // Switch back to Alice\n    SecurityRequestContext.setUserId(ALICE.getName());\n    // Verify nothing write to the output dataset\n    DataSetManager<KeyValueTable> outTableManager = getDataset(datasetOutputSpace.toId(), \"table2\");\n    KeyValueTable outputTable = outTableManager.get();\n    Assert.assertNull(outputTable.read(\"hello\"));\n\n    // Run again with Alice who has the privileges\n    mrManager.start(argsForMR);\n    mrManager.waitForFinish(5, TimeUnit.MINUTES);\n    appManager.stopAll();\n    // Verify results\n    outTableManager = getDataset(datasetOutputSpace.toId(), \"table2\");\n    outputTable = outTableManager.get();\n    Assert.assertEquals(\"world\", Bytes.toString(outputTable.read(\"hello\")));\n    getNamespaceAdmin().delete(datasetInputSpace.toId());\n    getNamespaceAdmin().delete(datasetOutputSpace.toId());\n  }","id":39004,"modified_method":"@Test\n  public void testCrossNSDatasetAccessWithAuthMapReduce() throws Exception {\n    createAuthNamespace();\n    getNamespaceAdmin().create(new NamespaceMeta.Builder()\n                                 .setName(DatasetCrossNSAccessWithMAPApp.DATASET_INPUT_SPACE).build());\n    getNamespaceAdmin().create(new NamespaceMeta.Builder()\n                                 .setName(DatasetCrossNSAccessWithMAPApp.DATASET_OUTPUT_SPACE).build());\n    NamespaceId datasetInputSpace = new NamespaceId(DatasetCrossNSAccessWithMAPApp.DATASET_INPUT_SPACE);\n    NamespaceId datasetOutputSpace = new NamespaceId(DatasetCrossNSAccessWithMAPApp.DATASET_OUTPUT_SPACE);\n\n    addDatasetInstance(datasetInputSpace.toId(), \"keyValueTable\", \"table1\").create();\n    addDatasetInstance(datasetOutputSpace.toId(), \"keyValueTable\", \"table2\").create();\n    DataSetManager<KeyValueTable> tableManager = getDataset(datasetInputSpace.toId(), \"table1\");\n    KeyValueTable inputTable = tableManager.get();\n    inputTable.write(\"hello\", \"world\");\n    tableManager.flush();\n\n    ApplicationManager appManager = deployApplication(AUTH_NAMESPACE.toId(), DatasetCrossNSAccessWithMAPApp.class);\n    Map<String, String> argsForMR = ImmutableMap.of(DatasetCrossNSAccessWithMAPApp.INPUT_KEY, \"table1\",\n                                                    DatasetCrossNSAccessWithMAPApp.OUTPUT_KEY, \"table2\");\n    MapReduceManager mrManager = appManager.getMapReduceManager(DatasetCrossNSAccessWithMAPApp.MAPREDUCE_PROGRAM);\n\n    // give BOB ALL permission in the\n    grantAndAssertSuccess(AUTH_NAMESPACE, BOB, EnumSet.of(Action.ALL));\n\n    // Switch to BOB and run the  mapreduce job. The job will fail at the runtime since BOB does not have permission\n    // on the input and output datasets in another namespaces.\n    SecurityRequestContext.setUserId(BOB.getName());\n    verifyProgramFailure(argsForMR, mrManager);\n\n    // Switch back to Alice\n    SecurityRequestContext.setUserId(ALICE.getName());\n    // Verify nothing write to the output dataset\n    verifyDatasetIsEmpty(datasetOutputSpace, \"table2\");\n\n    // give privilege to BOB on the input dataset\n    grantAndAssertSuccess(new DatasetId(DatasetCrossNSAccessWithMAPApp.DATASET_INPUT_SPACE, \"table1\"), BOB,\n                          EnumSet.of(Action.READ));\n\n    // switch back to bob and try running again. this will still fail since bob does not have access on the output\n    // dataset\n    SecurityRequestContext.setUserId(BOB.getName());\n    verifyProgramFailure(argsForMR, mrManager);\n\n    // Switch back to Alice\n    SecurityRequestContext.setUserId(ALICE.getName());\n    // Verify nothing write to the output dataset\n    verifyDatasetIsEmpty(datasetOutputSpace, \"table2\");\n\n    // give privilege to BOB on the output dataset\n    grantAndAssertSuccess(new DatasetId(DatasetCrossNSAccessWithMAPApp.DATASET_OUTPUT_SPACE, \"table2\"), BOB,\n                          EnumSet.of(Action.WRITE));\n\n    // switch back to BOB and run MR again. this should work\n    SecurityRequestContext.setUserId(BOB.getName());\n    mrManager.start(argsForMR);\n    mrManager.waitForFinish(5, TimeUnit.MINUTES);\n    appManager.stopAll();\n    // Verify results as alice\n    SecurityRequestContext.setUserId(ALICE.getName());\n    DataSetManager<KeyValueTable> outTableManager = getDataset(datasetOutputSpace.toId(), \"table2\");\n    KeyValueTable outputTable = outTableManager.get();\n    Assert.assertEquals(\"world\", Bytes.toString(outputTable.read(\"hello\")));\n    getNamespaceAdmin().delete(datasetInputSpace.toId());\n    getNamespaceAdmin().delete(datasetOutputSpace.toId());\n  }","commit_id":"1fd05209845b07a39288b3a74fd5152826743c07","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testCrossNSDatasetAccessWithAuthFlowlet() throws Exception {\n    createAuthNamespace();\n    getNamespaceAdmin().create(new NamespaceMeta.Builder()\n                                 .setName(CrossNsDatasetAccessApp.DATASET_OUTPUT_SPACE).build());\n    NamespaceId datasetOutputSpace = new NamespaceId(CrossNsDatasetAccessApp.DATASET_OUTPUT_SPACE);\n    addDatasetInstance(datasetOutputSpace.toId(), \"keyValueTable\", \"store\");\n    ApplicationManager appManager = deployApplication(AUTH_NAMESPACE.toId(), CrossNsDatasetAccessApp.class);\n\n    // Send stream and run the flowlet as BOB. Should fail\n    StreamManager streamManager = getStreamManager(AUTH_NAMESPACE.toId(), CrossNsDatasetAccessApp.STREAM_NAME);\n    for (int i = 0; i < 10; i++) {\n      streamManager.send(String.valueOf(i).getBytes());\n    }\n    SecurityRequestContext.setUserId(BOB.getName());\n    try {\n      FlowManager flowManager = appManager.getFlowManager(CrossNsDatasetAccessApp.FLOW_NAME);\n      flowManager.start();\n      Assert.fail(\"Bob shouldn't have the privlege to write to the dataset\");\n    } catch (Exception e) {\n      // Expected\n    }\n\n    // Switch back to ALICE. Should Success\n    SecurityRequestContext.setUserId(ALICE.getName());\n    FlowManager flowManager = appManager.getFlowManager(CrossNsDatasetAccessApp.FLOW_NAME);\n    flowManager.start();\n    for (int i = 0; i < 10; i++) {\n      streamManager.send(String.valueOf(i).getBytes());\n    }\n    flowManager.getFlowletMetrics(\"saver\").waitForProcessed(10, 30, TimeUnit.SECONDS);\n\n    DataSetManager<KeyValueTable> dataSetManager = getDataset(datasetOutputSpace.toId(), \"store\");\n    KeyValueTable results = dataSetManager.get();\n    for (int i = 0; i < 10; i++) {\n      byte[] key = String.valueOf(i).getBytes(Charsets.UTF_8);\n      Assert.assertArrayEquals(key, results.read(key));\n    }\n\n    flowManager.stop();\n    getNamespaceAdmin().delete(datasetOutputSpace.toId());\n  }","id":39005,"modified_method":"@Test\n  public void testCrossNSDatasetAccessWithAuthFlowlet() throws Exception {\n    createAuthNamespace();\n    getNamespaceAdmin().create(new NamespaceMeta.Builder()\n                                 .setName(CrossNsDatasetAccessApp.DATASET_OUTPUT_SPACE).build());\n    NamespaceId datasetOutputSpace = new NamespaceId(CrossNsDatasetAccessApp.DATASET_OUTPUT_SPACE);\n    addDatasetInstance(datasetOutputSpace.toId(), \"keyValueTable\", \"store\");\n    ApplicationManager appManager = deployApplication(AUTH_NAMESPACE.toId(), CrossNsDatasetAccessApp.class);\n\n    // give BOB ALL permissions on the auth namespace so he can execute programs and also read the stream.\n    grantAndAssertSuccess(AUTH_NAMESPACE, BOB, EnumSet.of(Action.ALL));\n\n    // switch to BOB\n    SecurityRequestContext.setUserId(BOB.getName());\n\n    // Send data to stream as BOB this ensures that BOB can do stuff in auth namespace\n    StreamManager streamManager = getStreamManager(AUTH_NAMESPACE.toId(), CrossNsDatasetAccessApp.STREAM_NAME);\n    for (int i = 0; i < 10; i++) {\n      streamManager.send(String.valueOf(i).getBytes());\n    }\n\n    // But trying to run a flow as BOB will fail since this flow writes to a dataset in another namespace in which\n    // is not accessible to BOB.\n    final FlowManager flowManager = appManager.getFlowManager(CrossNsDatasetAccessApp.FLOW_NAME);\n    flowManager.start();\n    // wait for flow to be running\n    Tasks.waitFor(true, new Callable<Boolean>() {\n      @Override\n      public Boolean call() throws Exception {\n        return flowManager.isRunning();\n      }\n    }, 120, TimeUnit.SECONDS);\n\n    // The above will be a runtime failure after the flow start since it will not be able to use the dataset in the\n    // another namespace. Since the failure will lead to no metrics being emitted we cannot actually check it tried\n    // processing or not. So stop the flow and check that the output dataset is empty\n    flowManager.stop();\n    SecurityRequestContext.setUserId(ALICE.getName());\n\n    DataSetManager<KeyValueTable> dataSetManager = getDataset(datasetOutputSpace.toId(), \"store\");\n    KeyValueTable results = dataSetManager.get();\n\n    CloseableIterator<KeyValue<byte[], byte[]>> scan = results.scan(null, null);\n    Assert.assertFalse(scan.hasNext());\n\n    // Give BOB permission to write to the dataset in another namespace\n    grantAndAssertSuccess(new DatasetId(datasetOutputSpace.getNamespace(), \"store\"),\n                          BOB, EnumSet.of(Action.WRITE));\n\n    // switch back to BOB to run flow again\n    SecurityRequestContext.setUserId(BOB.getName());\n\n    // running the flow now should pass and write data in another namespace successfully\n    flowManager.start();\n    flowManager.getFlowletMetrics(\"saver\").waitForProcessed(10, 30, TimeUnit.SECONDS);\n\n    // switch back to alice and verify the data its fine now to verify the run record here because if the flow failed\n    // to write we will not see any data\n    SecurityRequestContext.setUserId(ALICE.getName());\n\n    dataSetManager = getDataset(datasetOutputSpace.toId(), \"store\");\n    results = dataSetManager.get();\n\n    for (int i = 0; i < 10; i++) {\n      byte[] key = String.valueOf(i).getBytes(Charsets.UTF_8);\n      Assert.assertArrayEquals(key, results.read(key));\n    }\n    flowManager.stop();\n    getNamespaceAdmin().delete(datasetOutputSpace.toId());\n  }","commit_id":"1fd05209845b07a39288b3a74fd5152826743c07","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testCrossNSDatasetAccessWithAuthSpark() throws Exception {\n    createAuthNamespace();\n    NamespaceMeta inputDatasetNSMeta = new NamespaceMeta.Builder().setName(\"inputDatasetNS\").build();\n    getNamespaceAdmin().create(inputDatasetNSMeta);\n    addDatasetInstance(inputDatasetNSMeta.getNamespaceId().toId(), \"keyValueTable\", \"input\").create();\n    DataSetManager<KeyValueTable> inTableManager = getDataset(inputDatasetNSMeta.getNamespaceId().toId(), \"input\");\n    inTableManager.get().write(\"hello\", \"world\");\n    inTableManager.flush();\n\n    ApplicationManager spark = deployApplication(AUTH_NAMESPACE.toId(), TestSparkCrossNSDatasetApp.class);\n    SparkManager sparkManager = spark.getSparkManager(\"SparkCrossNSDatasetProgram\");\n\n    // Switch to Bob. Should fail as Bob do not have access to the dataset namespace\n    SecurityRequestContext.setUserId(BOB.getName());\n    ImmutableMap<String, String> args = ImmutableMap.of(\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.INPUT_DATASET_NAMESPACE,\n      inputDatasetNSMeta.getNamespaceId().getNamespace(),\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.INPUT_DATASET_NAME, \"input\"\n    );\n    try {\n      sparkManager.start(args);\n      sparkManager.waitForFinish(120, TimeUnit.SECONDS);\n      Assert.fail(\"Should fail here since bob does not have the privileges on input dataspace.\");\n    } catch (Exception e) {\n      // Expected\n    }\n    // Switch back to Alice\n    SecurityRequestContext.setUserId(ALICE.getName());\n    // Verify nothing write to the output dataset\n    DataSetManager<KeyValueTable> datasetManager = getDataset(AUTH_NAMESPACE.toId(), \"outputDataset\");\n    Assert.assertNull(datasetManager.get().read(\"hello\"));\n\n    // Run again with Alice who has the privileges\n    sparkManager.start(args);\n    sparkManager.waitForFinish(120, TimeUnit.SECONDS);\n    spark.stopAll();\n    // Verify the results written in DEFAULT by spark2\n    datasetManager = getDataset(AUTH_NAMESPACE.toId(), \"outputDataset\");\n    Assert.assertEquals(\"world\", Bytes.toString(datasetManager.get().read(\"hello\")));\n    getNamespaceAdmin().delete(inputDatasetNSMeta.getNamespaceId().toId());\n  }","id":39006,"modified_method":"@Test\n  public void testCrossNSDatasetAccessWithAuthSpark() throws Exception {\n    createAuthNamespace();\n    NamespaceMeta inputDatasetNSMeta = new NamespaceMeta.Builder().setName(\"inputDatasetNS\").build();\n    NamespaceMeta outputDatasetNSMeta = new NamespaceMeta.Builder().setName(\"outputDatasetNS\").build();\n    getNamespaceAdmin().create(inputDatasetNSMeta);\n    getNamespaceAdmin().create(outputDatasetNSMeta);\n    addDatasetInstance(inputDatasetNSMeta.getNamespaceId().toId(), \"keyValueTable\", \"input\").create();\n    addDatasetInstance(outputDatasetNSMeta.getNamespaceId().toId(), \"keyValueTable\", \"output\").create();\n    // write sample stuff in input dataset\n    DataSetManager<KeyValueTable> inTableManager = getDataset(inputDatasetNSMeta.getNamespaceId().toId(), \"input\");\n    inTableManager.get().write(\"hello\", \"world\");\n    inTableManager.flush();\n\n    ApplicationManager spark = deployApplication(AUTH_NAMESPACE.toId(), TestSparkCrossNSDatasetApp.class);\n    SparkManager sparkManager = spark.getSparkManager(\"SparkCrossNSDatasetProgram\");\n\n    // give BOB ALL permission on the auth namespace\n    grantAndAssertSuccess(AUTH_NAMESPACE, BOB, EnumSet.of(Action.ALL));\n\n    // Switch to Bob and run the spark program. this will fail because bob does not have access to either input or\n    // output dataset\n    SecurityRequestContext.setUserId(BOB.getName());\n    ImmutableMap<String, String> args = ImmutableMap.of(\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.INPUT_DATASET_NAMESPACE,\n      inputDatasetNSMeta.getNamespaceId().getNamespace(),\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.INPUT_DATASET_NAME, \"input\",\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.OUTPUT_DATASET_NAMESPACE,\n      outputDatasetNSMeta.getNamespaceId().getNamespace(),\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.OUTPUT_DATASET_NAME, \"output\"\n    );\n\n    verifyProgramFailure(args, sparkManager);\n\n    SecurityRequestContext.setUserId(ALICE.getName());\n    // Verify nothing write to the output dataset\n    verifyDatasetIsEmpty(outputDatasetNSMeta.getNamespaceId(), \"output\");\n\n    // give privilege to BOB on the input dataset\n    grantAndAssertSuccess(new DatasetId(inputDatasetNSMeta.getNamespaceId().getNamespace(), \"input\"), BOB,\n                          EnumSet.of(Action.READ));\n\n    // switch back to bob and try running again. this will still fail since bob does not have access on the output\n    // dataset\n    SecurityRequestContext.setUserId(BOB.getName());\n    verifyProgramFailure(args, sparkManager);\n\n    // Switch back to Alice\n    SecurityRequestContext.setUserId(ALICE.getName());\n    // Verify nothing write to the output dataset\n    verifyDatasetIsEmpty(outputDatasetNSMeta.getNamespaceId(), \"output\");\n\n    // give privilege to BOB on the output dataset\n    grantAndAssertSuccess(new DatasetId(outputDatasetNSMeta.getNamespaceId().getNamespace(), \"output\"), BOB,\n                          EnumSet.of(Action.WRITE));\n\n    // switch back to BOB and run spark again. this should work\n    SecurityRequestContext.setUserId(BOB.getName());\n\n    sparkManager.start(args);\n    sparkManager.waitForFinish(120, TimeUnit.SECONDS);\n    spark.stopAll();\n\n    // Verify the results as alice\n    SecurityRequestContext.setUserId(ALICE.getName());\n    DataSetManager<KeyValueTable> datasetManager = getDataset(outputDatasetNSMeta.getNamespaceId().toId(), \"output\");\n    Assert.assertEquals(\"world\", Bytes.toString(datasetManager.get().read(\"hello\")));\n    getNamespaceAdmin().delete(inputDatasetNSMeta.getNamespaceId().toId());\n    getNamespaceAdmin().delete(outputDatasetNSMeta.getNamespaceId().toId());\n  }","commit_id":"1fd05209845b07a39288b3a74fd5152826743c07","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testSparkCrossNS() throws Exception {\n    // Test for reading stream cross namespace, reading and writing to dataset cross namespace\n    // TestSparkStreamIntegrationApp deployed in default namespace\n    // which reads a stream from streamNS and writes to a dataset in its own ns (default)\n    // TestSparkCrossNSDatasetApp deployed at crossNSDatasetAppNS:\n    //  reading from the dataset in default (created by TestSparkStreamIntegrationApp) and write to a dataset\n    // in outputDatasetNS\n    NamespaceMeta streamNSMeta = new NamespaceMeta.Builder().setName(\"streamNS\").build();\n    NamespaceMeta crossNSDatasetAppNS = new NamespaceMeta.Builder().setName(\"crossNSDatasetAppNS\").build();\n    NamespaceMeta outputDatasetNS = new NamespaceMeta.Builder().setName(\"outputDatasetNS\").build();\n    getNamespaceAdmin().create(streamNSMeta);\n    getNamespaceAdmin().create(crossNSDatasetAppNS);\n    getNamespaceAdmin().create(outputDatasetNS);\n    addDatasetInstance(outputDatasetNS.getNamespaceId().toId(), \"keyValueTable\", \"finalDataset\");\n\n    StreamManager streamManager = getStreamManager(streamNSMeta.getNamespaceId().toId(), \"testStream\");\n    streamManager.createStream();\n    for (int i = 0; i < 50; i++) {\n      streamManager.send(String.valueOf(i));\n    }\n\n    // deploy TestSparkStreamIntegrationApp in default namespace\n    ApplicationManager spark1 = deployApplication(TestSparkStreamIntegrationApp.class);\n\n    ImmutableMap<String, String> args = ImmutableMap.of(\n      TestSparkStreamIntegrationApp.SparkStreamProgram.INPUT_STREAM_NAMESPACE,\n      streamNSMeta.getNamespaceId().getNamespace(),\n      TestSparkStreamIntegrationApp.SparkStreamProgram.INPUT_STREAM_NAME,\n      \"testStream\"\n    );\n\n    SparkManager sparkManager = spark1.getSparkManager(\"SparkStreamProgram\").start(args);\n    sparkManager.waitForFinish(120, TimeUnit.SECONDS);\n    // Verify the results written in default namespace by spark1\n    DataSetManager<KeyValueTable> datasetManager = getDataset(\"result\");\n    verifyDatasetResult(datasetManager);\n\n    // deploy the cross  ns dataset app in datasetNS namespace\n    ApplicationManager spark2 = deployApplication(crossNSDatasetAppNS.getNamespaceId().toId(),\n                                                  TestSparkCrossNSDatasetApp.class);\n    args = ImmutableMap.of(\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.INPUT_DATASET_NAMESPACE,\n      NamespaceId.DEFAULT.getNamespace(),\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.INPUT_DATASET_NAME, \"result\",\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.OUTPUT_DATASET_NAMESPACE,\n      outputDatasetNS.getNamespaceId().getNamespace(),\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.OUTPUT_DATASET_NAME, \"finalDataset\"\n    );\n\n    sparkManager = spark2.getSparkManager(\"SparkCrossNSDatasetProgram\").start(args);\n    sparkManager.waitForFinish(120, TimeUnit.SECONDS);\n    // Verify the results written in DEFAULT by spark2\n    datasetManager = getDataset(outputDatasetNS.getNamespaceId().toId(), \"finalDataset\");\n    verifyDatasetResult(datasetManager);\n  }","id":39007,"modified_method":"@Test\n  public void testSparkCrossNS() throws Exception {\n    // Test for reading stream cross namespace, reading and writing to dataset cross namespace\n    // TestSparkStreamIntegrationApp deployed in default namespace\n    // which reads a stream from streamNS and writes to a dataset in its own ns (default)\n    // TestSparkCrossNSDatasetApp deployed at crossNSDatasetAppNS:\n    //  reading from the dataset in default (created by TestSparkStreamIntegrationApp) and write to a dataset\n    // in outputDatasetNS\n    NamespaceMeta streamNSMeta = new NamespaceMeta.Builder().setName(\"streamNS\").build();\n    NamespaceMeta crossNSDatasetAppNS = new NamespaceMeta.Builder().setName(\"crossNSDatasetAppNS\").build();\n    NamespaceMeta outputDatasetNS = new NamespaceMeta.Builder().setName(\"outputDatasetNS\").build();\n    getNamespaceAdmin().create(streamNSMeta);\n    getNamespaceAdmin().create(crossNSDatasetAppNS);\n    getNamespaceAdmin().create(outputDatasetNS);\n    addDatasetInstance(outputDatasetNS.getNamespaceId().toId(), \"keyValueTable\", \"finalDataset\");\n\n    StreamManager streamManager = getStreamManager(streamNSMeta.getNamespaceId().toId(), \"testStream\");\n    streamManager.createStream();\n    for (int i = 0; i < 50; i++) {\n      streamManager.send(String.valueOf(i));\n    }\n\n    // deploy TestSparkStreamIntegrationApp in default namespace\n    ApplicationManager spark1 = deployApplication(TestSparkStreamIntegrationApp.class);\n\n    Map<String, String> args = ImmutableMap.of(\n      TestSparkStreamIntegrationApp.SparkStreamProgram.INPUT_STREAM_NAMESPACE,\n      streamNSMeta.getNamespaceId().getNamespace(),\n      TestSparkStreamIntegrationApp.SparkStreamProgram.INPUT_STREAM_NAME,\n      \"testStream\"\n    );\n\n    SparkManager sparkManager = spark1.getSparkManager(\"SparkStreamProgram\").start(args);\n    sparkManager.waitForFinish(120, TimeUnit.SECONDS);\n    // Verify the results written in default namespace by spark1\n    DataSetManager<KeyValueTable> datasetManager = getDataset(\"result\");\n    verifyDatasetResult(datasetManager);\n\n    // deploy the cross  ns dataset app in datasetNS namespace\n    ApplicationManager spark2 = deployApplication(crossNSDatasetAppNS.getNamespaceId().toId(),\n                                                  TestSparkCrossNSDatasetApp.class);\n    args = ImmutableMap.of(\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.INPUT_DATASET_NAMESPACE,\n      NamespaceId.DEFAULT.getNamespace(),\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.INPUT_DATASET_NAME, \"result\",\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.OUTPUT_DATASET_NAMESPACE,\n      outputDatasetNS.getNamespaceId().getNamespace(),\n      TestSparkCrossNSDatasetApp.SparkCrossNSDatasetProgram.OUTPUT_DATASET_NAME, \"finalDataset\"\n    );\n\n    sparkManager = spark2.getSparkManager(\"SparkCrossNSDatasetProgram\").start(args);\n    sparkManager.waitForFinish(120, TimeUnit.SECONDS);\n    // Verify the results written in DEFAULT by spark2\n    datasetManager = getDataset(outputDatasetNS.getNamespaceId().toId(), \"finalDataset\");\n    verifyDatasetResult(datasetManager);\n  }","commit_id":"1fd05209845b07a39288b3a74fd5152826743c07","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testScalaSparkCrossNSStream() throws Exception {\n    // create a namespace for stream and create the stream in it\n    NamespaceMeta crossNSStreamMeta = new NamespaceMeta.Builder().setName(\"streamSpaceForSpark\").build();\n    getNamespaceAdmin().create(crossNSStreamMeta);\n    StreamManager streamManager = getStreamManager(crossNSStreamMeta.getNamespaceId().toId(), \"testStream\");\n\n    // create a namespace for dataset and add the dataset instance in it\n    NamespaceMeta crossNSDatasetMeta = new NamespaceMeta.Builder().setName(\"crossNSDataset\").build();\n    getNamespaceAdmin().create(crossNSDatasetMeta);\n    addDatasetInstance(crossNSDatasetMeta.getNamespaceId().toId(), \"keyValueTable\", \"count\");\n\n    // write something to the stream\n    streamManager.createStream();\n    for (int i = 0; i < 50; i++) {\n      streamManager.send(String.valueOf(i));\n    }\n\n    // deploy the spark app in another namespace (default)\n    ApplicationManager applicationManager = deploy(SparkAppUsingObjectStore.class);\n\n    ImmutableMap<String, String> args = ImmutableMap.of(ScalaCrossNSProgram.STREAM_NAMESPACE(),\n                                                        crossNSStreamMeta.getNamespaceId().getNamespace(),\n                                                        ScalaCrossNSProgram.DATASET_NAMESPACE(),\n                                                        crossNSDatasetMeta.getNamespaceId().getNamespace(),\n                                                        ScalaCrossNSProgram.DATASET_NAME(), \"count\");\n    SparkManager sparkManager =\n      applicationManager.getSparkManager(ScalaCrossNSProgram.class.getSimpleName()).start(args);\n    sparkManager.waitForFinish(1, TimeUnit.MINUTES);\n\n    // get the dataset from the other namespace where we expect it to exist and compare the data\n    DataSetManager<KeyValueTable> countManager = getDataset(crossNSDatasetMeta.getNamespaceId().toId(), \"count\");\n    KeyValueTable results = countManager.get();\n    for (int i = 0; i < 50; i++) {\n      byte[] key = String.valueOf(i).getBytes(Charsets.UTF_8);\n      Assert.assertArrayEquals(key, results.read(key));\n    }\n  }","id":39008,"modified_method":"@Test\n  public void testScalaSparkCrossNSStream() throws Exception {\n    // create a namespace for stream and create the stream in it\n    NamespaceMeta crossNSStreamMeta = new NamespaceMeta.Builder().setName(\"streamSpaceForSpark\").build();\n    getNamespaceAdmin().create(crossNSStreamMeta);\n    StreamManager streamManager = getStreamManager(crossNSStreamMeta.getNamespaceId().toId(), \"testStream\");\n\n    // create a namespace for dataset and add the dataset instance in it\n    NamespaceMeta crossNSDatasetMeta = new NamespaceMeta.Builder().setName(\"crossNSDataset\").build();\n    getNamespaceAdmin().create(crossNSDatasetMeta);\n    addDatasetInstance(crossNSDatasetMeta.getNamespaceId().toId(), \"keyValueTable\", \"count\");\n\n    // write something to the stream\n    streamManager.createStream();\n    for (int i = 0; i < 50; i++) {\n      streamManager.send(String.valueOf(i));\n    }\n\n    // deploy the spark app in another namespace (default)\n    ApplicationManager applicationManager = deploy(SparkAppUsingObjectStore.class);\n\n    Map<String, String> args = ImmutableMap.of(ScalaCrossNSProgram.STREAM_NAMESPACE(),\n                                               crossNSStreamMeta.getNamespaceId().getNamespace(),\n                                               ScalaCrossNSProgram.DATASET_NAMESPACE(),\n                                               crossNSDatasetMeta.getNamespaceId().getNamespace(),\n                                               ScalaCrossNSProgram.DATASET_NAME(), \"count\");\n    SparkManager sparkManager =\n      applicationManager.getSparkManager(ScalaCrossNSProgram.class.getSimpleName()).start(args);\n    sparkManager.waitForFinish(1, TimeUnit.MINUTES);\n\n    // get the dataset from the other namespace where we expect it to exist and compare the data\n    DataSetManager<KeyValueTable> countManager = getDataset(crossNSDatasetMeta.getNamespaceId().toId(), \"count\");\n    KeyValueTable results = countManager.get();\n    for (int i = 0; i < 50; i++) {\n      byte[] key = String.valueOf(i).getBytes(Charsets.UTF_8);\n      Assert.assertArrayEquals(key, results.read(key));\n    }\n  }","commit_id":"1fd05209845b07a39288b3a74fd5152826743c07","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testScalaSparkCrossNSDataset() throws Exception {\n    // Deploy and create a dataset in namespace datasetSpaceForSpark\n    NamespaceMeta inputDSNSMeta = new NamespaceMeta.Builder().setName(\"datasetSpaceForSpark\").build();\n    getNamespaceAdmin().create(inputDSNSMeta);\n    deploy(inputDSNSMeta.getNamespaceId(), SparkAppUsingObjectStore.class);\n    DataSetManager<ObjectStore<String>> keysManager = getDataset(inputDSNSMeta.getNamespaceId().toId(), \"keys\");\n    prepareInputData(keysManager);\n\n    ImmutableMap<String, String> args = ImmutableMap.of(ScalaCharCountProgram.INPUT_DATASET_NAMESPACE(),\n                                                        inputDSNSMeta.getNamespaceId().getNamespace(),\n                                                        ScalaCharCountProgram.INPUT_DATASET_NAME(), \"keys\");\n\n    ApplicationManager applicationManager = deploy(SparkAppUsingObjectStore.class);\n    SparkManager sparkManager =\n      applicationManager.getSparkManager(ScalaCharCountProgram.class.getSimpleName()).start(args);\n    sparkManager.waitForFinish(1, TimeUnit.MINUTES);\n\n    DataSetManager<KeyValueTable> countManager = getDataset(\"count\");\n    checkOutputData(countManager);\n  }","id":39009,"modified_method":"@Test\n  public void testScalaSparkCrossNSDataset() throws Exception {\n    // Deploy and create a dataset in namespace datasetSpaceForSpark\n    NamespaceMeta inputDSNSMeta = new NamespaceMeta.Builder().setName(\"datasetSpaceForSpark\").build();\n    getNamespaceAdmin().create(inputDSNSMeta);\n    deploy(inputDSNSMeta.getNamespaceId(), SparkAppUsingObjectStore.class);\n    DataSetManager<ObjectStore<String>> keysManager = getDataset(inputDSNSMeta.getNamespaceId().toId(), \"keys\");\n    prepareInputData(keysManager);\n\n    Map<String, String> args = ImmutableMap.of(ScalaCharCountProgram.INPUT_DATASET_NAMESPACE(),\n                                               inputDSNSMeta.getNamespaceId().getNamespace(),\n                                               ScalaCharCountProgram.INPUT_DATASET_NAME(), \"keys\");\n\n    ApplicationManager applicationManager = deploy(SparkAppUsingObjectStore.class);\n    SparkManager sparkManager =\n      applicationManager.getSparkManager(ScalaCharCountProgram.class.getSimpleName()).start(args);\n    sparkManager.waitForFinish(1, TimeUnit.MINUTES);\n\n    DataSetManager<KeyValueTable> countManager = getDataset(\"count\");\n    checkOutputData(countManager);\n  }","commit_id":"1fd05209845b07a39288b3a74fd5152826743c07","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public void configure() {\n      setName(\"SparkCrossNSDatasetProgram\");\n      setDescription(\"Test Spark with Datasets from other namespace\");\n      setMainClass(SparkCrossNSDatasetProgram.class);\n    }","id":39010,"modified_method":"@Override\n    public void configure() {\n      setName(SparkCrossNSDatasetProgram.class.getSimpleName());\n      setDescription(\"Test Spark with Datasets from other namespace\");\n      setMainClass(SparkCrossNSDatasetProgram.class);\n    }","commit_id":"1fd05209845b07a39288b3a74fd5152826743c07","url":"https://github.com/caskdata/cdap"},{"original_method":"public KBArticle updateKBArticle(\n\t\t\tlong userId, long resourcePrimKey, String title, String content,\n\t\t\tString description, String[] sections, String dirName,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\t// KB article\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\t\tint version = KBArticleConstants.DEFAULT_VERSION;\n\t\tint status = WorkflowConstants.STATUS_DRAFT;\n\n\t\tvalidate(title, content);\n\n\t\tKBArticle oldKBArticle = getLatestKBArticle(\n\t\t\tresourcePrimKey, WorkflowConstants.STATUS_ANY);\n\n\t\tlong oldResourcePrimKey = oldKBArticle.getResourcePrimKey();\n\t\tlong oldGroupId = oldKBArticle.getGroupId();\n\t\tDate oldCreateDate = oldKBArticle.getCreateDate();\n\t\tlong oldRootResourcePrimKey = oldKBArticle.getRootResourcePrimKey();\n\t\tlong oldParentResourcePrimKey = oldKBArticle.getParentResourcePrimKey();\n\t\tint oldVersion = oldKBArticle.getVersion();\n\t\tdouble oldPriority = oldKBArticle.getPriority();\n\t\tint oldViewCount = oldKBArticle.getViewCount();\n\t\tint oldStatus = oldKBArticle.getStatus();\n\n\t\tKBArticle kbArticle = null;\n\n\t\tif (oldStatus == WorkflowConstants.STATUS_APPROVED) {\n\t\t\tlong kbArticleId = counterLocalService.increment();\n\n\t\t\tkbArticle = kbArticlePersistence.create(kbArticleId);\n\t\t\tversion = oldVersion + 1;\n\t\t}\n\t\telse {\n\t\t\tkbArticle = oldKBArticle;\n\t\t\tversion = oldVersion;\n\t\t}\n\n\t\tif (oldStatus == WorkflowConstants.STATUS_PENDING) {\n\t\t\tstatus = WorkflowConstants.STATUS_PENDING;\n\t\t}\n\n\t\tkbArticle.setResourcePrimKey(oldResourcePrimKey);\n\t\tkbArticle.setGroupId(oldGroupId);\n\t\tkbArticle.setCompanyId(user.getCompanyId());\n\t\tkbArticle.setUserId(user.getUserId());\n\t\tkbArticle.setUserName(user.getFullName());\n\t\tkbArticle.setCreateDate(oldCreateDate);\n\t\tkbArticle.setModifiedDate(serviceContext.getModifiedDate(null));\n\t\tkbArticle.setRootResourcePrimKey(oldRootResourcePrimKey);\n\t\tkbArticle.setParentResourcePrimKey(oldParentResourcePrimKey);\n\t\tkbArticle.setVersion(version);\n\t\tkbArticle.setTitle(title);\n\t\tkbArticle.setContent(content);\n\t\tkbArticle.setDescription(description);\n\t\tkbArticle.setPriority(oldPriority);\n\t\tkbArticle.setSections(\n\t\t\tStringUtil.merge(AdminUtil.escapeSections(sections)));\n\t\tkbArticle.setViewCount(oldViewCount);\n\t\tkbArticle.setLatest(true);\n\t\tkbArticle.setMain(false);\n\t\tkbArticle.setStatus(status);\n\n\t\tkbArticlePersistence.update(kbArticle);\n\n\t\tif (oldVersion < version) {\n\t\t\toldKBArticle.setLatest(false);\n\n\t\t\tkbArticlePersistence.update(oldKBArticle);\n\t\t}\n\n\t\t// Resources\n\n\t\tif ((serviceContext.getGroupPermissions() != null) ||\n\t\t\t(serviceContext.getGuestPermissions() != null)) {\n\n\t\t\tupdateKBArticleResources(\n\t\t\t\tkbArticle, serviceContext.getGroupPermissions(),\n\t\t\t\tserviceContext.getGuestPermissions());\n\t\t}\n\n\t\t// Asset\n\n\t\tupdateKBArticleAsset(\n\t\t\tuserId, kbArticle, serviceContext.getAssetCategoryIds(),\n\t\t\tserviceContext.getAssetTagNames());\n\n\t\t// Attachments\n\n\t\tupdateKBArticleAttachments(\n\t\t\tuserId, kbArticle, oldVersion, dirName, serviceContext);\n\n\t\t// Workflow\n\n\t\tWorkflowHandlerRegistryUtil.startWorkflowInstance(\n\t\t\tuser.getCompanyId(), kbArticle.getGroupId(), userId,\n\t\t\tKBArticle.class.getName(), resourcePrimKey, kbArticle,\n\t\t\tserviceContext);\n\n\t\treturn kbArticle;\n\t}","id":39011,"modified_method":"public KBArticle updateKBArticle(\n\t\t\tlong userId, long resourcePrimKey, String title, String content,\n\t\t\tString description, String[] sections, String dirName,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\t// KB article\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\t\tint version = KBArticleConstants.DEFAULT_VERSION;\n\t\tint status = WorkflowConstants.STATUS_DRAFT;\n\n\t\tvalidate(title, content);\n\n\t\tKBArticle oldKBArticle = getLatestKBArticle(\n\t\t\tresourcePrimKey, WorkflowConstants.STATUS_ANY);\n\n\t\tlong oldResourcePrimKey = oldKBArticle.getResourcePrimKey();\n\t\tlong oldGroupId = oldKBArticle.getGroupId();\n\t\tDate oldCreateDate = oldKBArticle.getCreateDate();\n\t\tlong oldRootResourcePrimKey = oldKBArticle.getRootResourcePrimKey();\n\t\tlong oldParentResourcePrimKey = oldKBArticle.getParentResourcePrimKey();\n\t\tint oldVersion = oldKBArticle.getVersion();\n\t\tdouble oldPriority = oldKBArticle.getPriority();\n\t\tint oldViewCount = oldKBArticle.getViewCount();\n\t\tint oldStatus = oldKBArticle.getStatus();\n\n\t\tKBArticle kbArticle = null;\n\n\t\tif (oldStatus == WorkflowConstants.STATUS_APPROVED) {\n\t\t\tlong kbArticleId = counterLocalService.increment();\n\n\t\t\tkbArticle = kbArticlePersistence.create(kbArticleId);\n\t\t\tversion = oldVersion + 1;\n\t\t}\n\t\telse {\n\t\t\tkbArticle = oldKBArticle;\n\t\t\tversion = oldVersion;\n\t\t}\n\n\t\tif (oldStatus == WorkflowConstants.STATUS_PENDING) {\n\t\t\tstatus = WorkflowConstants.STATUS_PENDING;\n\t\t}\n\n\t\tif (!kbArticle.isDraft()) {\n\t\t\tkbArticle.setUserId(user.getUserId());\n\t\t\tkbArticle.setUserName(user.getFullName());\n\t\t}\n\n\t\tkbArticle.setResourcePrimKey(oldResourcePrimKey);\n\t\tkbArticle.setGroupId(oldGroupId);\n\t\tkbArticle.setCompanyId(user.getCompanyId());\n\t\tkbArticle.setCreateDate(oldCreateDate);\n\t\tkbArticle.setModifiedDate(serviceContext.getModifiedDate(null));\n\t\tkbArticle.setRootResourcePrimKey(oldRootResourcePrimKey);\n\t\tkbArticle.setParentResourcePrimKey(oldParentResourcePrimKey);\n\t\tkbArticle.setVersion(version);\n\t\tkbArticle.setTitle(title);\n\t\tkbArticle.setContent(content);\n\t\tkbArticle.setDescription(description);\n\t\tkbArticle.setPriority(oldPriority);\n\t\tkbArticle.setSections(\n\t\t\tStringUtil.merge(AdminUtil.escapeSections(sections)));\n\t\tkbArticle.setViewCount(oldViewCount);\n\t\tkbArticle.setLatest(true);\n\t\tkbArticle.setMain(false);\n\t\tkbArticle.setStatus(status);\n\n\t\tkbArticlePersistence.update(kbArticle);\n\n\t\tif (oldVersion < version) {\n\t\t\toldKBArticle.setLatest(false);\n\n\t\t\tkbArticlePersistence.update(oldKBArticle);\n\t\t}\n\n\t\t// Resources\n\n\t\tif ((serviceContext.getGroupPermissions() != null) ||\n\t\t\t(serviceContext.getGuestPermissions() != null)) {\n\n\t\t\tupdateKBArticleResources(\n\t\t\t\tkbArticle, serviceContext.getGroupPermissions(),\n\t\t\t\tserviceContext.getGuestPermissions());\n\t\t}\n\n\t\t// Asset\n\n\t\tupdateKBArticleAsset(\n\t\t\tuserId, kbArticle, serviceContext.getAssetCategoryIds(),\n\t\t\tserviceContext.getAssetTagNames());\n\n\t\t// Attachments\n\n\t\tupdateKBArticleAttachments(\n\t\t\tuserId, kbArticle, oldVersion, dirName, serviceContext);\n\n\t\t// Workflow\n\n\t\tWorkflowHandlerRegistryUtil.startWorkflowInstance(\n\t\t\tuser.getCompanyId(), kbArticle.getGroupId(), userId,\n\t\t\tKBArticle.class.getName(), resourcePrimKey, kbArticle,\n\t\t\tserviceContext);\n\n\t\treturn kbArticle;\n\t}","commit_id":"5e9a90c35185428575163021790ebe8027e08820","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void doUpdateOAuthConsumer(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tlong gadgetId = ParamUtil.getLong(actionRequest, \"gadgetId\");\n\t\tString serviceName = ParamUtil.getString(actionRequest, \"serviceName\");\n\t\tString consumerKey = ParamUtil.getString(actionRequest, \"consumerKey\");\n\t\tString consumerSecret = ParamUtil.getString(\n\t\t\tactionRequest, \"consumerSecret\");\n\n\t\tString keyType = ParamUtil.getString(actionRequest, \"keyType\");\n\t\tlong oAuthConsumerId = ParamUtil.getLong(\n\t\t\t\tactionRequest, \"oAuthConsumerId\");\n\n\t\tif (oAuthConsumerId <= 0) {\n\t\t\tThemeDisplay themeDisplay =\n\t\t\t\t(ThemeDisplay)actionRequest.getAttribute(\n\t\t\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t\tOAuthConsumerLocalServiceUtil.addOAuthConsumer(\n\t\t\t\tthemeDisplay.getCompanyId(), gadgetId, serviceName,\n\t\t\t\tconsumerKey, consumerSecret, keyType, StringPool.BLANK,\n\t\t\t\tStringPool.BLANK);\n\t\t}\n\t\telse {\n\t\t\tOAuthConsumerLocalServiceUtil.updateOAuthConsumer(\n\t\t\t\toAuthConsumerId, consumerKey, consumerSecret, keyType,\n\t\t\t\tStringPool.BLANK, StringPool.BLANK);\n\t\t}\n\t}","id":39012,"modified_method":"protected void doUpdateOAuthConsumer(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong oAuthConsumerId = ParamUtil.getLong(\n\t\t\tactionRequest, \"oAuthConsumerId\");\n\n\t\tlong gadgetId = ParamUtil.getLong(actionRequest, \"gadgetId\");\n\t\tString serviceName = ParamUtil.getString(actionRequest, \"serviceName\");\n\t\tString consumerKey = ParamUtil.getString(actionRequest, \"consumerKey\");\n\t\tString consumerSecret = ParamUtil.getString(\n\t\t\tactionRequest, \"consumerSecret\");\n\t\tString keyType = ParamUtil.getString(actionRequest, \"keyType\");\n\n\t\tif (oAuthConsumerId <= 0) {\n\t\t\tOAuthConsumerLocalServiceUtil.addOAuthConsumer(\n\t\t\t\tthemeDisplay.getCompanyId(), gadgetId, serviceName, consumerKey,\n\t\t\t\tconsumerSecret, keyType, StringPool.BLANK, StringPool.BLANK);\n\t\t}\n\t\telse {\n\t\t\tOAuthConsumerLocalServiceUtil.updateOAuthConsumer(\n\t\t\t\toAuthConsumerId, consumerKey, consumerSecret, keyType,\n\t\t\t\tStringPool.BLANK, StringPool.BLANK);\n\t\t}\n\t}","commit_id":"7f09f70552e1015266e2ef6e653822abfcc3a3ce","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void deleteGadget(Gadget gadget)\n\t\tthrows PortalException, SystemException {\n\n\t\tlong gadgetId = gadget.getGadgetId();\n\n\t\toAuthConsumerLocalService.deleteOAuthConsumers(gadgetId);\n\n\t\tgadgetLocalService.destroyGadget(\n\t\t\tgadget.getUuid(), gadget.getCompanyId(), gadget.getName());\n\n\t\tgadgetPersistence.remove(gadget);\n\t}","id":39013,"modified_method":"public void deleteGadget(Gadget gadget)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Gadget\n\n\t\tgadgetLocalService.destroyGadget(\n\t\t\tgadget.getUuid(), gadget.getCompanyId(), gadget.getName());\n\n\t\tgadgetPersistence.remove(gadget);\n\n\t\t// OAuth consumer\n\n\t\toAuthConsumerLocalService.deleteOAuthConsumers(gadget.getGadgetId());\n\t}","commit_id":"7f09f70552e1015266e2ef6e653822abfcc3a3ce","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void deleteOAuthConsumer(OAuthConsumer oAuthConsumer)\n\t\tthrows PortalException, SystemException {\n\n\t\tlong gadgetId = oAuthConsumer.getGadgetId();\n\t\tString serviceName = oAuthConsumer.getServiceName();\n\n\t\tOAuthTokenLocalServiceUtil.deleteOAuthTokens(gadgetId, serviceName);\n\n\t\toAuthConsumerPersistence.remove(oAuthConsumer);\n\t}","id":39014,"modified_method":"public void deleteOAuthConsumer(OAuthConsumer oAuthConsumer)\n\t\tthrows SystemException {\n\n\t\t// OAuth consumer\n\n\t\toAuthConsumerPersistence.remove(oAuthConsumer);\n\n\t\t// OAuth tokens\n\n\t\toAuthTokenLocalService.deleteOAuthTokens(\n\t\t\toAuthConsumer.getGadgetId(), oAuthConsumer.getServiceName());\n\t}","commit_id":"7f09f70552e1015266e2ef6e653822abfcc3a3ce","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public OAuthConsumer addOAuthConsumer(\n\t\t\tlong companyId, long gadgetId, String serviceName,\n\t\t\tString consumerKey, String consumerSecret, String keyType,\n\t\t\tString callbackUrl, String keyName)\n\t\tthrows PortalException, SystemException {\n\n\t\tDate now = new Date();\n\n\t\tlong oAuthConsumerId = counterLocalService.increment();\n\n\t\tOAuthConsumer oAuthConsumer = oAuthConsumerPersistence.create(\n\t\t\toAuthConsumerId);\n\n\t\toAuthConsumer.setCompanyId(companyId);\n\t\toAuthConsumer.setCreateDate(now);\n\t\toAuthConsumer.setModifiedDate(now);\n\t\toAuthConsumer.setGadgetId(gadgetId);\n\t\toAuthConsumer.setServiceName(serviceName);\n\t\toAuthConsumer.setConsumerKey(consumerKey);\n\t\toAuthConsumer.setConsumerSecret(consumerSecret);\n\t\toAuthConsumer.setKeyType(keyType);\n\t\toAuthConsumer.setCallbackUrl(callbackUrl);\n\t\toAuthConsumer.setKeyName(keyName);\n\n\t\toAuthConsumerPersistence.update(oAuthConsumer, false);\n\n\t\treturn oAuthConsumer;\n\t}","id":39015,"modified_method":"public OAuthConsumer addOAuthConsumer(\n\t\t\tlong companyId, long gadgetId, String serviceName,\n\t\t\tString consumerKey, String consumerSecret, String keyType,\n\t\t\tString keyName, String callbackURL)\n\t\tthrows SystemException {\n\n\t\tDate now = new Date();\n\n\t\tlong oAuthConsumerId = counterLocalService.increment();\n\n\t\tOAuthConsumer oAuthConsumer = oAuthConsumerPersistence.create(\n\t\t\toAuthConsumerId);\n\n\t\toAuthConsumer.setCompanyId(companyId);\n\t\toAuthConsumer.setCreateDate(now);\n\t\toAuthConsumer.setModifiedDate(now);\n\t\toAuthConsumer.setGadgetId(gadgetId);\n\t\toAuthConsumer.setServiceName(serviceName);\n\t\toAuthConsumer.setConsumerKey(consumerKey);\n\t\toAuthConsumer.setConsumerSecret(consumerSecret);\n\t\toAuthConsumer.setKeyType(keyType);\n\t\toAuthConsumer.setKeyName(keyName);\n\t\toAuthConsumer.setCallbackURL(callbackURL);\n\n\t\toAuthConsumerPersistence.update(oAuthConsumer, false);\n\n\t\treturn oAuthConsumer;\n\t}","commit_id":"7f09f70552e1015266e2ef6e653822abfcc3a3ce","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public OAuthConsumer getOAuthConsumer(long gadgetId, String serviceName)\n\t\tthrows PortalException, SystemException {\n\n\t\tOAuthConsumer oAuthConsumer = oAuthConsumerPersistence.findByG_S(\n\t\t\tgadgetId, serviceName);\n\n\t\treturn oAuthConsumer;\n\t}","id":39016,"modified_method":"public OAuthConsumer getOAuthConsumer(long gadgetId, String serviceName)\n\t\tthrows PortalException, SystemException {\n\n\t\treturn oAuthConsumerPersistence.findByG_S(gadgetId, serviceName);\n\t}","commit_id":"7f09f70552e1015266e2ef6e653822abfcc3a3ce","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void deleteOAuthConsumers(long gadgetId)\n\t\tthrows PortalException, SystemException {\n\n\t\toAuthConsumerPersistence.removeByGadgetId(gadgetId);\n\t}","id":39017,"modified_method":"public void deleteOAuthConsumers(long gadgetId)\n\t\tthrows SystemException {\n\n\t\tList<OAuthConsumer> oAuthConsumers =\n\t\t\toAuthConsumerPersistence.findByGadgetId(gadgetId);\n\n\t\tfor (OAuthConsumer oAuthConsumer : oAuthConsumers) {\n\t\t\tdeleteOAuthConsumer(oAuthConsumer);\n\t\t}\n\t}","commit_id":"7f09f70552e1015266e2ef6e653822abfcc3a3ce","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public OAuthConsumer updateOAuthConsumer(\n\t\t\tlong oAuthConsumerId, String consumerKey, String consumerSecret,\n\t\t\tString keyType, String callbackUrl, String keyName)\n\t\tthrows PortalException, SystemException {\n\n\t\tOAuthConsumer oAuthConsumer =\n\t\t\toAuthConsumerPersistence.findByPrimaryKey(oAuthConsumerId);\n\n\t\tif (keyType.equals(Constants.RSA_PRIVATE)) {\n\t\t\tconsumerSecret = ShindigUtil.convertFromOpenSsl(consumerSecret);\n\t\t}\n\n\t\toAuthConsumer.setConsumerKey(consumerKey);\n\t\toAuthConsumer.setConsumerSecret(consumerSecret);\n\t\toAuthConsumer.setKeyType(keyType);\n\t\toAuthConsumer.setCallbackUrl(callbackUrl);\n\t\toAuthConsumer.setKeyName(keyName);\n\n\t\toAuthConsumerPersistence.update(oAuthConsumer, false);\n\n\t\treturn oAuthConsumer;\n\t}","id":39018,"modified_method":"public OAuthConsumer updateOAuthConsumer(\n\t\t\tlong oAuthConsumerId, String consumerKey, String consumerSecret,\n\t\t\tString keyType, String keyName, String callbackURL)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (keyType.equals(OAuthConsumerConstants.KEY_TYPE_RSA_PRIVATE)) {\n\t\t\tconsumerSecret = ShindigUtil.convertFromOpenSsl(consumerSecret);\n\t\t}\n\n\t\tOAuthConsumer oAuthConsumer = oAuthConsumerPersistence.findByPrimaryKey(\n\t\t\toAuthConsumerId);\n\n\t\toAuthConsumer.setConsumerKey(consumerKey);\n\t\toAuthConsumer.setConsumerSecret(consumerSecret);\n\t\toAuthConsumer.setKeyType(keyType);\n\t\toAuthConsumer.setKeyName(keyName);\n\t\toAuthConsumer.setCallbackURL(callbackURL);\n\n\t\toAuthConsumerPersistence.update(oAuthConsumer, false);\n\n\t\treturn oAuthConsumer;\n\t}","commit_id":"7f09f70552e1015266e2ef6e653822abfcc3a3ce","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"/**\n\t * NOTE FOR DEVELOPERS:\n\t *\n\t * Never reference this class directly. All methods that expect a o auth token model instance should use the {@link OAuthToken} interface instead.\n\t */\n\tpublic OAuthTokenImpl() {\n\t}","id":39019,"modified_method":"public OAuthTokenImpl() {\n\t}","commit_id":"7f09f70552e1015266e2ef6e653822abfcc3a3ce","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void deleteOAuthToken(\n\t\t\tlong userId, long gadgetId, long moduleId, String serviceName,\n\t\t\tString tokenName)\n\t\tthrows PortalException, SystemException {\n\n\t\tOAuthToken oAuthToken = oAuthTokenPersistence.findByU_G_M_S_T(\n\t\t\t\tuserId, gadgetId, moduleId, serviceName, tokenName);\n\n\t\toAuthTokenPersistence.remove(oAuthToken);\n\t}","id":39020,"modified_method":"public void deleteOAuthToken(\n\t\t\tlong userId, long gadgetId, String serviceName, long moduleId,\n\t\t\tString tokenName)\n\t\tthrows PortalException, SystemException {\n\n\t\toAuthTokenPersistence.removeByU_G_S_M_T(\n\t\t\tuserId, gadgetId, serviceName, moduleId, tokenName);\n\t}","commit_id":"7f09f70552e1015266e2ef6e653822abfcc3a3ce","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public OAuthToken getOAuthToken(\n\t\t\tlong userId, long gadgetId, long moduleId, String serviceName,\n\t\t\tString tokenName)\n\t\tthrows PortalException, SystemException {\n\n\t\treturn oAuthTokenPersistence.findByU_G_M_S_T(\n\t\t\tuserId, gadgetId, moduleId, serviceName, tokenName);\n\t}","id":39021,"modified_method":"public OAuthToken getOAuthToken(\n\t\t\tlong userId, long gadgetId, String serviceName, long moduleId,\n\t\t\tString tokenName)\n\t\tthrows PortalException, SystemException {\n\n\t\treturn oAuthTokenPersistence.findByU_G_S_M_T(\n\t\t\tuserId, gadgetId, serviceName, moduleId, tokenName);\n\t}","commit_id":"7f09f70552e1015266e2ef6e653822abfcc3a3ce","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public OAuthToken addOAuthToken(\n\t\t\tlong userId, long gadgetId, long moduleId, String serviceName,\n\t\t\tString tokenName, String accessToken, String tokenSecret,\n\t\t\tString sessionHandle, long tokenExpireMillis)\n\t\tthrows PortalException, SystemException {\n\n\t\tUser user = UserLocalServiceUtil.getUser(userId);\n\n\t\tDate now = new Date();\n\n\t\tlong oAuthTokenId = counterLocalService.increment();\n\n\t\tOAuthToken oAuthToken = oAuthTokenPersistence.create(oAuthTokenId);\n\n\t\toAuthToken.setCompanyId(user.getCompanyId());\n\t\toAuthToken.setCreateDate(now);\n\t\toAuthToken.setModifiedDate(now);\n\t\toAuthToken.setUserId(userId);\n\t\toAuthToken.setGadgetId(gadgetId);\n\t\toAuthToken.setModuleId(moduleId);\n\t\toAuthToken.setServiceName(serviceName);\n\t\toAuthToken.setTokenName(tokenName);\n\t\toAuthToken.setAccessToken(accessToken);\n\t\toAuthToken.setTokenSecret(tokenSecret);\n\t\toAuthToken.setSessionHandle(sessionHandle);\n\t\toAuthToken.setTokenExpireMillis(tokenExpireMillis);\n\n\t\toAuthTokenPersistence.update(oAuthToken, false);\n\n\t\treturn oAuthToken;\n\t}","id":39022,"modified_method":"public OAuthToken addOAuthToken(\n\t\t\tlong userId, long gadgetId, String serviceName, long moduleId,\n\t\t\tString accessToken, String tokenName, String tokenSecret,\n\t\t\tString sessionHandle, int expiration)\n\t\tthrows PortalException, SystemException {\n\n\t\tUser user = UserLocalServiceUtil.getUser(userId);\n\t\tDate now = new Date();\n\n\t\tlong oAuthTokenId = counterLocalService.increment();\n\n\t\tOAuthToken oAuthToken = oAuthTokenPersistence.create(oAuthTokenId);\n\n\t\toAuthToken.setCompanyId(user.getCompanyId());\n\t\toAuthToken.setUserId(user.getUserId());\n\t\toAuthToken.setUserName(user.getFullName());\n\t\toAuthToken.setCreateDate(now);\n\t\toAuthToken.setModifiedDate(now);\n\t\toAuthToken.setGadgetId(gadgetId);\n\t\toAuthToken.setServiceName(serviceName);\n\t\toAuthToken.setModuleId(moduleId);\n\t\toAuthToken.setAccessToken(accessToken);\n\t\toAuthToken.setTokenName(tokenName);\n\t\toAuthToken.setTokenSecret(tokenSecret);\n\t\toAuthToken.setSessionHandle(sessionHandle);\n\t\toAuthToken.setExpiration(expiration);\n\n\t\toAuthTokenPersistence.update(oAuthToken, false);\n\n\t\treturn oAuthToken;\n\t}","commit_id":"7f09f70552e1015266e2ef6e653822abfcc3a3ce","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public static String convertFromOpenSsl(String key) {\n\t\treturn key.replaceAll(\"-----[A-Z ]*-----\", \"\").replace(\"\\n\", \"\");\n\t}","id":39023,"modified_method":"public static String convertFromOpenSsl(String key) {\n\t\tkey = key.replaceAll(_OPEN_SSL_A_Z, StringPool.BLANK);\n\t\tkey = key.replace(StringPool.NEW_LINE, StringPool.BLANK);\n\n\t\treturn key;\n\t}","commit_id":"7f09f70552e1015266e2ef6e653822abfcc3a3ce","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"private void loadFile(File file, Collection col) throws Exception {\n    \t//System.out.println(\"******* loadFile \"+file.getName());\n    \t\n    \tif (file.getName().endsWith(\".html\") \n    \t\t\t|| file.getName().endsWith(\".xsd\")\n    \t\t\t|| file.getName().equals(\"badxml.xml\")\n    \t\t\t|| file.getName().equals(\"BCisInvalid.xml\")\n    \t\t\t|| file.getName().equals(\"InvalidUmlaut.xml\")\n    \t\t\t|| file.getName().equals(\"InvalidXMLId.xml\")\n    \t\t\t|| file.getName().equals(\"invalid-xml.xml\")\n\t\t\t)\n    \t\treturn;\n    \t\n    \tif (!(file.exists() && file.canRead()))\n    \t\treturn;\n    \t\n        MimeType mime = getMimeTable().getContentTypeFor( file.getName() );\n        if (mime != null && mime.isXMLType()) {\n        \tIndexInfo info = col.validateXMLResource(null, broker, \n            \t\tXmldbURI.create(file.getName()), \n            \t\tnew InputSource(new FileInputStream(file))\n            \t);\n            //info.getDocument().getMetadata().setMimeType();\n            col.store(null, broker, info, new InputSource(new FileInputStream(file)), false);\n        } else {\n        \tTransactionManager txManager = db.getTransactionManager();\n        \tTxn txn = txManager.beginTransaction();\n\n        \tcol.addBinaryResource(txn, broker, \n            \t\tXmldbURI.create(file.getName()), \n            \t\tnew FileInputStream(file), \n            \t\tMimeType.BINARY_TYPE.getName(), file.length());\n\n\t\t\ttxManager.commit(txn);\n        }\n    \t//System.out.println(file);\n    }","id":39024,"modified_method":"private void loadFile(File file, Collection col) throws Exception {\n    \t//System.out.println(\"******* loadFile \"+file.getName());\n    \t\n    \tif (file.getName().endsWith(\".html\") \n    \t\t\t|| file.getName().endsWith(\".xsd\")\n    \t\t\t|| file.getName().equals(\"badxml.xml\")\n    \t\t\t|| file.getName().equals(\"BCisInvalid.xml\")\n    \t\t\t|| file.getName().equals(\"InvalidUmlaut.xml\")\n    \t\t\t|| file.getName().equals(\"InvalidXMLId.xml\")\n    \t\t\t|| file.getName().equals(\"invalid-xml.xml\")\n\t\t\t)\n    \t\treturn;\n    \t\n    \tif (!(file.exists() && file.canRead()))\n    \t\treturn;\n    \t\n        MimeType mime = getMimeTable().getContentTypeFor( file.getName() );\n        if (mime != null && mime.isXMLType()) {\n        \tIndexInfo info = col.validateXMLResource(null, broker, \n            \t\tXmldbURI.create(file.getName()), \n            \t\tnew InputSource(new FileInputStream(file))\n            \t);\n            //info.getDocument().getMetadata().setMimeType();\n        \t\n        \tFileInputStream is = new FileInputStream(file);\n        \ttry {\n        \t    col.store(null, broker, info, new InputSource(is), false);\n        \t} finally {\n        \t    is.close();\n        \t}\n        } else {\n        \tTransactionManager txManager = db.getTransactionManager();\n        \tTxn txn = txManager.beginTransaction();\n\n            FileInputStream is = new FileInputStream(file);\n            try {\n            \tcol.addBinaryResource(txn, broker, \n                \t\tXmldbURI.create(file.getName()), \n                \t\tis, \n                \t\tMimeType.BINARY_TYPE.getName(), file.length());\n            } finally {\n                is.close();\n            }\n\n\t\t\ttxManager.commit(txn);\n        }\n    \t//System.out.println(file);\n    }","commit_id":"26f48e65c60faffd963a595aa632e3ffec73cb21","url":"https://github.com/eXist-db/exist"},{"original_method":"private void loadFile(File file, Collection col) throws Exception {\n        //System.out.println(\"******* loadFile \"+file.getName());\n        \n        if (file.getName().endsWith(\".html\") \n                || file.getName().endsWith(\".xsd\")\n//                || file.getName().equals(\"badxml.xml\")\n//                || file.getName().equals(\"BCisInvalid.xml\")\n//                || file.getName().equals(\"InvalidUmlaut.xml\")\n//                || file.getName().equals(\"InvalidXMLId.xml\")\n//                || file.getName().equals(\"invalid-xml.xml\")\n            )\n            return;\n        \n        if (!(file.exists() && file.canRead()))\n            return;\n        \n        MimeType mime = getMimeTable().getContentTypeFor( file.getName() );\n        if (mime != null && mime.isXMLType()) {\n            IndexInfo info = col.validateXMLResource(null, broker, \n                    XmldbURI.create(file.getName()), \n                    new InputSource(new FileInputStream(file))\n                );\n            //info.getDocument().getMetadata().setMimeType();\n            col.store(null, broker, info, new InputSource(new FileInputStream(file)), false);\n        } else {\n            TransactionManager txManager = db.getTransactionManager();\n            Txn txn = txManager.beginTransaction();\n\n            col.addBinaryResource(txn, broker, \n                    XmldbURI.create(file.getName()), \n                    new FileInputStream(file), \n                    MimeType.BINARY_TYPE.getName(), file.length());\n\n            txManager.commit(txn);\n        }\n        //System.out.println(file);\n    }","id":39025,"modified_method":"private void loadFile(File file, Collection col) throws Exception {\n//        System.out.println(\"******* loadFile \"+file.getName());\n        \n        if (file.getName().endsWith(\".html\") \n                || file.getName().endsWith(\".xsd\")\n//                || file.getName().equals(\"\")\n            )\n            return;\n        \n        if (!(file.exists() && file.canRead()))\n            return;\n        \n        TransactionManager txManager = db.getTransactionManager();\n        Txn txn = null;\n        try {\n            MimeType mime = getMimeTable().getContentTypeFor( file.getName() );\n            if (mime != null && mime.isXMLType()) {\n                txn = txManager.beginTransaction();\n\n                IndexInfo info = col.validateXMLResource(txn, broker, \n                        XmldbURI.create(file.getName()), \n                        new InputSource(new FileInputStream(file))\n                    );\n                //info.getDocument().getMetadata().setMimeType();\n                FileInputStream is = new FileInputStream(file);\n                try {\n                    col.store(txn, broker, info, new InputSource(is), false);\n                } finally {\n                    is.close();\n                }\n\n                txManager.commit(txn);\n            } else {\n                txn = txManager.beginTransaction();\n    \n                FileInputStream is = new FileInputStream(file);\n                try {\n                    col.addBinaryResource(txn, broker, \n                            XmldbURI.create(file.getName()), \n                            is, \n                            MimeType.BINARY_TYPE.getName(), file.length());\n                } finally {\n                    is.close();\n                }\n    \n                txManager.commit(txn);\n            }\n        } catch (Exception e) {\n            if (txn != null) {\n                txManager.abort(txn);\n            }\n            System.out.println(\"fail to load file \"+file.getName());\n            e.printStackTrace();\n        }\n        //System.out.println(file);\n    }","commit_id":"26f48e65c60faffd963a595aa632e3ffec73cb21","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * @param args\n     * @throws Exception \n     */\n    public static void main(String[] args) throws Exception {\n        XQTS_To_junit convertor = new XQTS_To_junit();\n        try {\n            convertor.startup();\n            convertor.create();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            convertor.shutdown();\n        }\n    }","id":39026,"modified_method":"/**\n     * @param args\n     * @throws Exception \n     */\n    public static void main(String[] args) throws Exception {\n        XQTS_To_junit convertor = new XQTS_To_junit();\n        try {\n            convertor.startup();\n            convertor.load();\n            convertor.create();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            convertor.shutdown();\n        }\n    }","commit_id":"26f48e65c60faffd963a595aa632e3ffec73cb21","url":"https://github.com/eXist-db/exist"},{"original_method":"@Override\n    public void loadTS() throws Exception {\n        System.out.println(\"loading XQTS...\");\n        XQTS_To_junit convertor = new XQTS_To_junit();\n        convertor.init();\n        try {\n            convertor.load();\n            System.out.println(\"loaded QT3.\");\n        } finally {\n            convertor.release();\n        }\n    }","id":39027,"modified_method":"@Override\n    public void loadTS() throws Exception {\n        System.out.println(\"loading XQTS...\");\n        XQTS_To_junit convertor = new XQTS_To_junit();\n        try {\n            convertor.init();\n            convertor.load();\n            System.out.println(\"loaded QT3.\");\n        } finally {\n            convertor.release();\n        }\n    }","commit_id":"26f48e65c60faffd963a595aa632e3ffec73cb21","url":"https://github.com/eXist-db/exist"},{"original_method":"public void process(User user, HttpServletRequest request,\n            HttpServletResponse response, String path) throws ServletException, IOException {\n    \tDBBroker broker = null;\n\t\tCollection collection = null;\n\t\tDocumentImpl resource = null;\n\t\ttry {\n\t\t\tbroker = pool.get(user);\n\t\t\tcollection = broker.openCollection(path, Lock.READ_LOCK);\n\t\t\tif(collection == null) {\n                //TODO : use dedicated function in XmldbURI\n\t\t\t\tint pos = path.lastIndexOf(\"/\");\n\t\t\t\tString collName = path.substring(0, pos);\n\t\t\t\tString docName = path.substring(pos + 1);\n\t\t\t\tcollection = broker.openCollection(collName, Lock.READ_LOCK);\n\t\t\t\tif(collection == null) {\n\t\t\t\t\tLOG.debug(\"No resource or collection found for path: \" + path);\n\t\t\t\t\tresponse.sendError(HttpServletResponse.SC_NOT_FOUND, NOT_FOUND_ERR);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresource = collection.getDocumentWithLock(broker, docName, Lock.READ_LOCK);\n\t\t\t\tif(resource == null) {\n\t\t\t\t\tLOG.debug(\"No resource found for path: \" + path);\n\t\t\t\t\tresponse.sendError(HttpServletResponse.SC_NOT_FOUND, NOT_FOUND_ERR);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t        String destination = request.getHeader(\"Destination\");\n\t        String destPath = null;\n\t        try {\n\t            URI uri = new URI(destination);\n\t            String host = uri.getHost();\n\t            int port = uri.getPort();\n\t            if(!(host.equals(request.getServerName()) && port == request.getServerPort())) {\n\t                response.sendError(HttpServletResponse.SC_NOT_IMPLEMENTED,\n\t                        \"Copying to a different server is not yet implemented\");\n\t                return;\n\t            }\n\t            destPath = uri.getPath();\n\t            if(destPath.startsWith(request.getContextPath()))\n\t                destPath = destPath.substring(request.getContextPath().length());\n\t            if(destPath.startsWith(request.getServletPath()))\n\t                destPath = destPath.substring(request.getServletPath().length());\n\t        } catch (URISyntaxException e) {\n\t            response.sendError(HttpServletResponse.SC_BAD_REQUEST, \"Malformed URL in destination header\");\n\t        }\n\t        if(resource != null)\n\t            copyResource(user, broker, request, response, collection, resource, destPath);\n\t        else\n\t            copyCollection(user, broker, request, response, collection, destPath);\n\t\t} catch (EXistException e) {\n\t\t\tthrow new ServletException(\"Failed to copy: \" + e.getMessage(), e);\n\t\t} catch (LockException e) {\n\t\t\tthrow new ServletException(\"Failed to copy: \" + e.getMessage(), e);\n\t\t} finally {\n\t\t\tif(collection != null)\n\t\t\t\tcollection.release();\n\t\t\tif(resource != null)\n\t\t\t\tresource.getUpdateLock().release(Lock.READ_LOCK);\n\t\t\tpool.release(broker);\n\t\t}\n    }","id":39028,"modified_method":"public void process(User user, HttpServletRequest request,\n            HttpServletResponse response, String path)\n            throws ServletException, IOException {\n        DBBroker broker = null;\n        Collection collection = null;\n        DocumentImpl resource = null;\n        \n        try {\n            broker = pool.get(user);\n            collection = broker.openCollection(path, Lock.READ_LOCK);\n            if(collection == null) {\n                //TODO : use dedicated function in XmldbURI\n                int pos = path.lastIndexOf(\"/\");\n                String collName = path.substring(0, pos);\n                String docName = path.substring(pos + 1);\n                \n                collection = broker.openCollection(collName, Lock.READ_LOCK);\n                if(collection == null) {\n                    LOG.debug(\"No resource or collection found for path: \" + path);\n                    response.sendError(HttpServletResponse.SC_NOT_FOUND, NOT_FOUND_ERR);\n                    return;\n                }\n                \n                resource = collection.getDocumentWithLock(broker, docName, Lock.READ_LOCK);\n                if(resource == null) {\n                    LOG.debug(\"No resource found for path: \" + path);\n                    response.sendError(HttpServletResponse.SC_NOT_FOUND, NOT_FOUND_ERR);\n                    return;\n                }\n            }\n            \n            String destination = request.getHeader(\"Destination\");\n            String destPath = null;\n            try {\n                URI uri = new URI(destination);\n                String host = uri.getHost();\n                int port = uri.getPort();\n                if(!(host.equals(request.getServerName()) && port == request.getServerPort())) {\n                    response.sendError(HttpServletResponse.SC_NOT_IMPLEMENTED,\n                            \"Copying to a different server is not yet implemented\");\n                    return;\n                }\n                \n                destPath = uri.getPath();\n                \n                if(destPath.startsWith(request.getContextPath()))\n                    destPath = destPath.substring(request.getContextPath().length());\n                \n                if(destPath.startsWith(request.getServletPath()))\n                    destPath = destPath.substring(request.getServletPath().length());\n                \n            } catch (URISyntaxException e) {\n                response.sendError(HttpServletResponse.SC_BAD_REQUEST, \"Malformed URL in destination header\");\n            }\n            \n            if(resource != null)\n                copyResource(user, broker, request, response, collection, resource, destPath);\n            else\n                copyCollection(user, broker, request, response, collection, destPath);\n            \n        } catch (EXistException e) {\n            LOG.error(e);\n            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, e.getMessage());\n                        \n        } catch (LockException e) {\n            LOG.debug(e.getMessage());\n            response.sendError(SC_RESOURCE_IS_LOCKED, e.getMessage());\n            \n        } finally {\n            if(collection != null)\n                collection.release();\n            \n            if(resource != null)\n                resource.getUpdateLock().release(Lock.READ_LOCK);\n            \n            pool.release(broker);\n        }\n    }","commit_id":"13ac4cafbaa4871914c160b92b83b2eb801574ae","url":"https://github.com/eXist-db/exist"},{"original_method":"public void read(VariableByteInput istream) throws IOException, EOFException {\n\t\tcreated = istream.readLong();\n\t\tlastModified = istream.readLong();\n        mimeType = istream.readUTF();\n\t    pageCount = istream.readInt();\n\t    userLock = istream.readInt();\n\t    if (istream.readByte() == HAS_DOCTYPE) { \n            docType = new DocumentTypeImpl();\n\t\t    ((DocumentTypeImpl) docType).read(istream);\n        } else\n            docType = null;\n\t}","id":39029,"modified_method":"public void read(VariableByteInput istream) throws IOException, EOFException {\n        created = istream.readLong();\n        lastModified = istream.readLong();\n        mimeType = istream.readUTF();\n        pageCount = istream.readInt();\n        userLock = istream.readInt();\n        \n        if (istream.readByte() == HAS_DOCTYPE) {\n            docType = new DocumentTypeImpl();\n            ((DocumentTypeImpl) docType).read(istream);\n        } else {\n            docType = null;\n        }\n        \n        // TODO added by dwes\n        if(istream.readByte() == HAS_LOCKTOKEN){\n            lockToken = new LockToken();\n            lockToken.read(istream);\n        } else {\n            lockToken = null;\n        }\n    }","commit_id":"13ac4cafbaa4871914c160b92b83b2eb801574ae","url":"https://github.com/eXist-db/exist"},{"original_method":"public void write(VariableByteOutputStream ostream) throws IOException {\n\t\tostream.writeLong(created);\n\t\tostream.writeLong(lastModified);\n        ostream.writeUTF(mimeType);\n        ostream.writeInt(pageCount);\n        ostream.writeInt(userLock);\n        if (docType != null) {\n            ostream.writeByte(HAS_DOCTYPE);\n            ((DocumentTypeImpl) docType).write(ostream);\n        } else {\n            ostream.writeByte((byte) 0);\n        }\n\t}","id":39030,"modified_method":"public void write(VariableByteOutputStream ostream) throws IOException {\n        ostream.writeLong(created);\n        ostream.writeLong(lastModified);\n        ostream.writeUTF(mimeType);\n        ostream.writeInt(pageCount);\n        ostream.writeInt(userLock);\n        \n        if (docType != null) {\n            ostream.writeByte(HAS_DOCTYPE);\n            ((DocumentTypeImpl) docType).write(ostream);\n        } else {\n            ostream.writeByte((byte) 0);\n        }\n\n        // TODO added by dwes\n        if (lockToken != null) {\n            ostream.writeByte(HAS_LOCKTOKEN);\n            lockToken.write(ostream);\n        } else {\n            ostream.writeByte((byte) 0);\n        }\n\n        \n    }","commit_id":"13ac4cafbaa4871914c160b92b83b2eb801574ae","url":"https://github.com/eXist-db/exist"},{"original_method":"public void process(User user, HttpServletRequest request,\n\t\t\tHttpServletResponse response, String path) throws ServletException, IOException {\n\t\tDBBroker broker = null;\n\t\tbyte[] contentData = null;\n\t\tDocumentImpl resource = null;\n        Collection collection = null;\n\t\ttry {\n\t\t\tbroker = pool.get();\n\t\t\tresource = broker.getXMLResource(path, Lock.READ_LOCK);\n\t\t\tif(resource == null) {\n                collection = broker.openCollection(path, Lock.READ_LOCK);\n                if(collection == null)\n                \tresponse.sendError(HttpServletResponse.SC_NOT_FOUND);\n\t\t\t\tcollectionListing(broker, collection, request, response);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(!resource.getPermissions().validate(user, Permission.READ)) {\n\t\t\t\tresponse.sendError(HttpServletResponse.SC_FORBIDDEN, READ_PERMISSION_DENIED);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tDocumentMetadata metadata = resource.getMetadata();\n\t\t\tresponse.setContentType(metadata.getMimeType());\n\t\t\tresponse.addDateHeader(\"Last-Modified\", metadata.getLastModified());\n\t\t\t\n\t\t\tif(resource.getResourceType() == DocumentImpl.XML_FILE) {\n\t\t\t\tSerializer serializer = broker.getSerializer();\n\t\t\t\tserializer.reset();\n\t\t\t\ttry {\n\t\t\t\t\tserializer.setProperties(WebDAV.OUTPUT_PROPERTIES);\n\t\t\t\t\tString content = serializer.serialize(resource);\n\t\t\t\t\tcontentData = content.getBytes(\"UTF-8\");\n\t\t\t\t} catch (SAXException e) {\n\t\t\t\t\tthrow new ServletException(SERIALIZE_ERROR + e.getMessage(), e);\n\t\t\t\t}\n\t\t\t} else\n\t\t\t\tcontentData = broker.getBinaryResource((BinaryDocument)resource);\n\t\t} catch (EXistException e) {\n\t\t\tthrow new ServletException(SERIALIZE_ERROR + e.getMessage(), e);\n\t\t} catch (PermissionDeniedException e) {\n\t\t\tresponse.sendError(HttpServletResponse.SC_FORBIDDEN, READ_PERMISSION_DENIED);\n\t\t} finally {\n\t\t\tif(resource != null)\n\t\t\t\tresource.getUpdateLock().release(Lock.READ_LOCK);\n            if(collection != null)\n                collection.release();\n\t\t\tpool.release(broker);\n\t\t}\n\t\tif(contentData == null) {\n\t\t\tresponse.sendError(HttpServletResponse.SC_NOT_FOUND);\n\t\t\treturn;\n\t\t}\n\t\tresponse.setContentLength(contentData.length);\n\t\tServletOutputStream os = response.getOutputStream();\n\t\tos.write(contentData);\n\t\tos.flush();\n\t}","id":39031,"modified_method":"public void process(User user, HttpServletRequest request,\n            HttpServletResponse response, String path)\n            throws ServletException, IOException {\n        \n        DBBroker broker = null;\n        byte[] contentData = null;\n        DocumentImpl resource = null;\n        Collection collection = null;\n        \n        try {\n            broker = pool.get(user);\n            resource = broker.getXMLResource(path, Lock.READ_LOCK);\n            \n            if(resource == null) {\n                collection = broker.openCollection(path, Lock.READ_LOCK);\n                if(collection == null){\n                    response.sendError(HttpServletResponse.SC_NOT_FOUND);\n                    \n                } else {\n                    collectionListing(broker, collection, request, response);\n                }\n                return;\n            }\n            \n            if(!resource.getPermissions().validate(user, Permission.READ)) {\n                response.sendError(HttpServletResponse.SC_FORBIDDEN, \n                                   READ_PERMISSION_DENIED);\n                return;\n            }\n            \n            DocumentMetadata metadata = resource.getMetadata();\n            response.setContentType(metadata.getMimeType());\n            response.addDateHeader(\"Last-Modified\", metadata.getLastModified());\n            \n            if(resource.getResourceType() == DocumentImpl.XML_FILE) {\n                Serializer serializer = broker.getSerializer();\n                serializer.reset();\n                try {\n                    serializer.setProperties(WebDAV.OUTPUT_PROPERTIES);\n                    String content = serializer.serialize(resource);\n                    contentData = content.getBytes(\"UTF-8\");\n                    \n                } catch (SAXException e) {\n                    LOG.error(e);\n                    throw new ServletException(SERIALIZE_ERROR + e.getMessage(), e);\n                }\n                \n            } else {\n                contentData = broker.getBinaryResource((BinaryDocument)resource);\n            }\n            \n            // TODO all data is serialized here to bytearray. for large files this\n            // is far from efficient. Implement streaming, XML content already supports\n            // this.\n            \n            // Serve out content\n            if(contentData == null) {\n                LOG.debug(\"content data is empty. No data could be retrieved.\");\n                response.sendError(HttpServletResponse.SC_NOT_FOUND); // TODO is this correct Code?\n                return;\n            }\n            response.setContentLength(contentData.length);\n            ServletOutputStream os = response.getOutputStream();\n            os.write(contentData);\n            os.flush();\n            \n        } catch (EXistException e) {\n            throw new ServletException(SERIALIZE_ERROR + e.getMessage(), e);\n            \n        } catch (PermissionDeniedException e) {\n            LOG.error(e);\n            response.sendError(HttpServletResponse.SC_FORBIDDEN, READ_PERMISSION_DENIED);\n            return;\n            \n        } finally {\n            if(resource != null)\n                resource.getUpdateLock().release(Lock.READ_LOCK);\n            \n            if(collection != null)\n                collection.release();\n            \n            pool.release(broker);\n        }\n        \n    }","commit_id":"13ac4cafbaa4871914c160b92b83b2eb801574ae","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * Display a listing of the collection contents.\n     *  \n     * @param collection\n     * @param response\n     * @throws IOException \n     */\n    private void collectionListing(DBBroker broker, Collection collection, \n    \t\tHttpServletRequest request, HttpServletResponse response) \n    throws ServletException, IOException {\n    \t// the collection listing is generated by an XQuery\n        XQuery xquery = broker.getXQueryService();\n        XQueryContext context;\n        try {\n        \tif(compiled == null)\n        \t\tcontext = xquery.newContext(AccessContext.WEBDAV);\n        \telse {\n        \t\tcompiled.reset();\n        \t\tcontext = compiled.getContext();\n        \t}\n            context.declareVariable(\"collection\", collection.getName());\n            context.declareVariable(\"uri\", request.getRequestURI());\n            if(compiled == null)\n            \tcompiled = \n            \t\txquery.compile(context, new ClassLoaderSource(\"org/exist/http/webdav/methods/collection.xq\"));\n            \n            Sequence result = xquery.execute(compiled, null);\n            Serializer serializer = broker.getSerializer();\n            serializer.reset();\n            serializer.setProperties(WebDAV.OUTPUT_PROPERTIES);\n            String content = serializer.serialize((NodeValue)result.itemAt(0));\n            byte[] contentData = content.getBytes(\"UTF-8\");\n            \n            response.setContentType(\"text/html; charset=UTF-8\");\n            response.setContentLength(contentData.length);\n            response.addDateHeader(\"Last-Modified\", collection.getCreationTime());\n            ServletOutputStream os = response.getOutputStream();\n            os.write(contentData);\n            os.flush();\n        } catch (XPathException e) {\n            throw new ServletException(\"Failed to compile xquery\", e);\n        } catch (SAXException e) {\n            throw new ServletException(\"Failed to serialize query results\", e);\n        }\n    }","id":39032,"modified_method":"/**\n     * Display a listing of the collection contents.\n     *\n     * @param collection\n     * @param response\n     * @throws IOException\n     */\n    private void collectionListing(DBBroker broker, Collection collection,\n            HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        // the collection listing is generated by an XQuery\n        XQuery xquery = broker.getXQueryService();\n        XQueryContext context;\n        try {\n            if(compiled == null)\n                context = xquery.newContext(AccessContext.WEBDAV);\n            else {\n                compiled.reset();\n                context = compiled.getContext();\n            }\n            \n            context.declareVariable(\"collection\", collection.getName());\n            context.declareVariable(\"uri\", request.getRequestURI());\n            \n            if(compiled == null){\n                compiled = xquery.compile(\n                        context, new ClassLoaderSource(COLLECTION_XQ));\n            }\n            \n            \n            Sequence result = xquery.execute(compiled, null);\n            Serializer serializer = broker.getSerializer();\n            serializer.reset();\n            serializer.setProperties(WebDAV.OUTPUT_PROPERTIES);\n            String content = serializer.serialize((NodeValue)result.itemAt(0));\n            byte[] contentData = content.getBytes(\"UTF-8\");\n            \n            response.setContentType(\"text/html; charset=UTF-8\");\n            response.setContentLength(contentData.length);\n            response.addDateHeader(\"Last-Modified\", collection.getCreationTime());\n            \n            ServletOutputStream os = response.getOutputStream();\n            os.write(contentData);\n            os.flush();\n            \n        } catch (XPathException e) {\n            throw new ServletException(\"Failed to compile xquery\", e);\n            \n        } catch (SAXException e) {\n            throw new ServletException(\"Failed to serialize query results\", e);\n        }\n    }","commit_id":"13ac4cafbaa4871914c160b92b83b2eb801574ae","url":"https://github.com/eXist-db/exist"},{"original_method":"public void process(User user, HttpServletRequest request,\n            HttpServletResponse response, String path) throws ServletException, IOException {\n    \tDBBroker broker = null;\n\t\tCollection collection = null;\n\t\tDocumentImpl resource = null;\n\t\ttry {\n\t\t\tbroker = pool.get(user);\n\t\t\tcollection = broker.openCollection(path, org.exist.storage.lock.Lock.WRITE_LOCK);\n\t\t\tif(collection == null) {\n                ///TODO : use dedicated function in XmldbURI\n\t\t\t\tint pos = path.lastIndexOf(\"/\");\n\t\t\t\tString collName = path.substring(0, pos);\n\t\t\t\tString docName = path.substring(pos + 1);\n\t\t\t\tLOG.debug(\"collection = \" + collName + \"; doc = \" + docName);\n\t\t\t\tcollection = broker.openCollection(collName, org.exist.storage.lock.Lock.WRITE_LOCK);\n\t\t\t\tif(collection == null) {\n\t\t\t\t\tLOG.debug(\"No resource or collection found for path: \" + path);\n\t\t\t\t\tresponse.sendError(HttpServletResponse.SC_NOT_FOUND, NOT_FOUND_ERR);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresource = collection.getDocument(broker, docName);\n\t\t\t\tif(resource == null) {\n\t\t\t\t\tLOG.debug(\"No resource found for path: \" + path);\n\t\t\t\t\tresponse.sendError(HttpServletResponse.SC_NOT_FOUND, NOT_FOUND_ERR);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(resource == null) {\n\t\t\t    response.sendError(HttpServletResponse.SC_BAD_REQUEST, \"Lock on collections is not supported yet\");\n\t\t\t    return;\n\t\t\t}\n\t\t\tDocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();\n\t\t\tdocFactory.setNamespaceAware(true);\n\t\t\tDocumentBuilder docBuilder;\n\t        try {\n\t            docBuilder = docFactory.newDocumentBuilder();\n\t        } catch (ParserConfigurationException e1) {\n\t            throw new ServletException(WebDAVUtil.XML_CONFIGURATION_ERR, e1);\n\t        }\n\t\t\tDocument doc = WebDAVUtil.parseRequestContent(request, response, docBuilder);\n\t\t\tElement lockinfo = doc.getDocumentElement();\n\t\t\tif(!(lockinfo.getLocalName().equals(\"lockinfo\") && \n\t\t\t\t\tlockinfo.getNamespaceURI().equals(WebDAV.DAV_NS))) {\n\t\t\t\tLOG.debug(WebDAVUtil.UNEXPECTED_ELEMENT_ERR + lockinfo.getNodeName());\n\t\t\t\tresponse.sendError(HttpServletResponse.SC_BAD_REQUEST,\n\t\t\t\t\t\tWebDAVUtil.UNEXPECTED_ELEMENT_ERR + lockinfo.getNodeName());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint scope = SCOPE_EXCLUSIVE;\n\t\t\tString owner = null;\n\t\t\t\n\t\t\tNode node = lockinfo.getFirstChild();\n\t\t\twhile(node != null) {\n\t\t\t    if(node.getNodeType() == Node.ELEMENT_NODE) {\n\t\t\t        if(node.getNamespaceURI().equals(WebDAV.DAV_NS)) {\n\t\t\t            if(\"lockscope\".equals(node.getLocalName())) {\n\t\t\t                Node scopeNode = WebDAVUtil.firstElementNode(node);\n\t\t\t                if(\"exclusive\".equals(scopeNode.getLocalName()))\n\t\t\t                    scope = SCOPE_EXCLUSIVE;\n\t\t\t                else if(\"shared\".equals(scopeNode.getLocalName()))\n\t\t\t                    scope = SCOPE_SHARED;\n\t\t\t            }\n\t\t\t            if(\"locktype\".equals(node.getLocalName())) {\n\t\t\t                Node typeNode = WebDAVUtil.firstElementNode(node);\n\t\t\t                if(!\"write\".equals(typeNode.getLocalName())) {\n\t\t\t                     response.sendError(HttpServletResponse.SC_BAD_REQUEST,\n\t\t\t                             WebDAVUtil.UNEXPECTED_ELEMENT_ERR + typeNode.getNodeName());\n\t\t\t                     return;\n\t\t\t                }\n\t\t\t            }\n\t\t\t            if(\"owner\".equals(node.getLocalName())) {\n\t\t\t                Node href = WebDAVUtil.firstElementNode(node);\n\t\t\t                owner = WebDAVUtil.getElementContent(href);\n\t\t\t            }\n\t\t\t        }\n\t\t\t    }\n\t\t\t    node = node.getNextSibling();\n\t\t\t}\n\t\t\tLOG.debug(\"Received lock request [\" + scope + \"] for owner \" + owner);\n\t\t\tif(resource != null)\n\t\t\t    lockResource(request, response, resource, scope);\n\t\t} catch (EXistException e) {\n\t\t\tthrow new ServletException(e);\n\t\t} finally {\n\t\t\tif(collection != null)\n\t\t\t\tcollection.release();\n\t\t}\n    }","id":39033,"modified_method":"public void process(User user, HttpServletRequest request,\n            HttpServletResponse response, String path)\n            throws ServletException, IOException {\n        \n        DBBroker broker = null;\n        Collection collection = null;\n        DocumentImpl resource = null;\n        try {\n            // Get resource\n            broker = pool.get(user);\n            \n            try {\n                resource = broker.getXMLResource(path,  org.exist.storage.lock.Lock.READ_LOCK);\n            } catch (PermissionDeniedException ex) {\n                LOG.error(ex);\n                response.sendError(HttpServletResponse.SC_UNAUTHORIZED);\n                return;\n            }\n            \n            if(resource == null) {\n                // No document found, maybe a collection\n                collection = broker.openCollection(path, org.exist.storage.lock.Lock.READ_LOCK);\n                if(collection == null){\n                    response.sendError(HttpServletResponse.SC_NOT_FOUND,\n                            NOT_FOUND_ERR + \" \" + path);\n                    \n                } else {\n                    LOG.debug(\"Locking on collections not supported yet.\");\n                    response.sendError(HttpServletResponse.SC_NOT_IMPLEMENTED,\n                            \"Locking on collections not supported yet.\");\n                }\n                return;\n            }\n            \n            \n            // TODO get information from webDAV client XML\n            //LockToken lockToken = getLockParameters(request, response);\n            \n            // Fill in default information\n            LockToken lockToken = new LockToken();\n            lockToken.setOwner(user.getName());\n            lockToken.setType(LockToken.LOCK_TYPE_WRITE);\n            lockToken.setTimeOut(LockToken.LOCK_TIMEOUT_INFINITE);\n            lockToken.setScope(LockToken.LOCK_SCOPE_EXCLUSIVE);\n            lockToken.setDepth(LockToken.LOCK_DEPTH_0);\n            \n            if(lockToken==null){\n                // Error has been handled,skip test\n                LOG.debug(\"No Locktoken. Stopped Lock request\");\n                pool.release(broker);\n                return;\n            }\n            \n            LOG.debug(\"Received lock request [\" + lockToken.getScope() + \"] \"\n                    +\"for owner \" + lockToken.getOwner());\n            \n            // Get current userlock\n            User lock = resource.getUserLock();\n            \n            // Check if Resource is already locked.\n            if( lock!=null && !lock.getName().equals(user.getName()) ){\n                LOG.debug(\"Resource is locked.\");\n                response.sendError(SC_RESOURCE_IS_LOCKED,\n                        \"Resource is locked by user \"+ user.getName() +\".\");\n                return;\n            }\n            \n            // Check for request fo shared lock.\n            if(lockToken.getScope() == LockToken.LOCK_SCOPE_SHARED) {\n                LOG.debug(\"Shared locks are not implemented.\");\n                response.sendError(HttpServletResponse.SC_NOT_IMPLEMENTED,\n                        \"Shared locks are not implemented.\");\n                return;\n            }\n            \n            // Fill UUID\n            lockToken.createOpaqueLockToken();\n            resource.getMetadata().setLockToken(lockToken);\n            resource.setUserLock(user);\n            \n            // Make token persistant\n            TransactionManager transact = pool.getTransactionManager();\n            Txn transaction = transact.beginTransaction();\n            broker.storeXMLResource(transaction, resource);\n            transact.commit(transaction);\n            \n            LOG.debug(\"Sucessfully locked '\"+path+\"'.\");\n            \n            // Write XML response to client\n            lockResource(request, response, resource, lockToken);\n            \n        } catch (EXistException e) {\n            LOG.error(e);\n            throw new ServletException(e);\n            \n        } finally {\n            \n            if(resource!=null){\n                resource.getUpdateLock().release();\n            }\n            \n            if(collection != null){\n                collection.release();\n            }\n            \n            if(pool != null){\n                pool.release(broker);\n            }\n            \n        }\n    }","commit_id":"13ac4cafbaa4871914c160b92b83b2eb801574ae","url":"https://github.com/eXist-db/exist"},{"original_method":"private void lockResource(HttpServletRequest request, HttpServletResponse response,\n            DocumentImpl resource, int scope) throws ServletException, IOException {\n        if(scope == SCOPE_SHARED) {\n            response.sendError(HttpServletResponse.SC_NOT_IMPLEMENTED, \"Shared locks are not implemented\");\n            return;\n        }\n    }","id":39034,"modified_method":"private void lockResource(HttpServletRequest request, HttpServletResponse response,\n            DocumentImpl resource, LockToken lockToken) throws ServletException, IOException {\n        \n        response.setStatus(HttpServletResponse.SC_OK);\n        response.setContentType(\"text/xml\");\n        response.setCharacterEncoding(\"utf-8\");\n        \n        ServletOutputStream sos = response.getOutputStream();\n        sos.println(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\");\n        sos.println(\"<D:prop xmlns:D=\\\"DAV:\\\">\");\n        sos.println(\"<D:lockdiscovery>\");\n        \n        sos.println(\"<D:activelock>\");\n        \n        // Lock Type\n        sos.println(\"<D:locktype>\");\n        switch( lockToken.getType() ){\n            case LockToken.LOCK_TYPE_WRITE :\n                sos.println(\"<D:write/>\");\n                break;\n            default:\n                // This should never be reached\n                sos.println(\"<D:write/>\");\n                break;\n        }\n        sos.println(\"<\/D:locktype>\");\n        \n        // Lockscope\n        sos.println(\"<D:lockscope>\");\n        switch( lockToken.getScope() ){\n            case LockToken.LOCK_SCOPE_EXCLUSIVE :\n                sos.println(\"<D:exclusive/>\");\n                break;\n            case LockToken.LOCK_SCOPE_SHARED :\n                sos.println(\"<D:shared/>\");\n                break;\n            default:\n                // This should never be reached\n                sos.println(\"<D:exclusive/>\");\n                break;\n        }\n        sos.println(\"<\/D:lockscope>\");\n        \n        // Depth\n        switch( lockToken.getDepth() ){\n            case LockToken.LOCK_DEPTH_INFINIY :\n                sos.println(\"<D:depth>Infinity<\/D:depth>\");\n                break;\n            case LockToken.LOCK_DEPTH_0 :\n                sos.println(\"<D:depth>0<\/D:depth>\");\n                break;\n            case LockToken.LOCK_DEPTH_1 :\n                sos.println(\"<D:depth>1<\/D:depth>\");\n                break;\n            case LockToken.LOCK_DEPTH_NOT_SET :\n                // This should never be reached\n                sos.println(\"<D:depth>not set<\/D:depth>\");\n                break;\n            default:\n                // This should never be reached\n                sos.println(\"<D:depth>null<\/D:depth>\");\n                break;\n        }\n        \n        // Owner\n        sos.println(\"<D:owner>\");\n        sos.println(\"<D:href>\"+lockToken.getOwner()+\"<\/D:href>\");\n        sos.println(\"<\/D:owner>\");\n        \n        // Timeout\n        if( lockToken.getTimeOut() == LockToken.LOCK_TIMEOUT_INFINITE ){\n            sos.println(\"<D:timeout>Infinite<\/D:timeout>\");\n        } else {\n            sos.println(\"<D:timeout>Second-\"+lockToken.getTimeOut()+\"<\/D:timeout>\");\n        }\n        \n        // Lock token\n        sos.println(\"<D:locktoken>\");\n        sos.println(\"<D:href>opaquelocktoken:\"+lockToken.getOpaqueLockToken()+\"<\/D:href>\");\n        sos.println(\"<\/D:locktoken>\");\n        \n        sos.println(\"<\/D:activelock>\");\n        sos.println(\"<\/D:lockdiscovery>\");\n        sos.println(\"<\/D:prop>\");\n        sos.flush();\n    }","commit_id":"13ac4cafbaa4871914c160b92b83b2eb801574ae","url":"https://github.com/eXist-db/exist"},{"original_method":"public void process(User user, HttpServletRequest request,\n\t\t\tHttpServletResponse response, String path) throws ServletException, IOException {\n\t\tresponse.addHeader(\"DAV\", \"1\");\n\t\tresponse.addHeader(\"Allow\", \"OPTIONS, GET, HEAD, PUT, PROPFIND,MKCOL\");\n\t\t\n\t\t// MS specific\n\t\tresponse.addHeader(\"MS-Author-Via\", \"DAV\");\n\t}","id":39035,"modified_method":"public void process(User user, HttpServletRequest request,\n\t\t\tHttpServletResponse response, String path) throws ServletException, IOException {\n            \n                // TODO DWES change to 2\n\t\tresponse.addHeader(\"DAV\", \"1\");\n\t\tresponse.addHeader(\"Allow\", \"OPTIONS, GET, HEAD, PUT, PROPFIND, MKCOL, LOCK, UNLOCK\");\n\t\t\n\t\t// MS specific\n\t\tresponse.addHeader(\"MS-Author-Via\", \"DAV\");\n\t}","commit_id":"13ac4cafbaa4871914c160b92b83b2eb801574ae","url":"https://github.com/eXist-db/exist"},{"original_method":"private void writeResourceProperties(User user, DAVProperties searchedProperties, \n\t\t\tint type, Collection collection, DocumentImpl resource, SAXSerializer serializer, String servletPath) throws SAXException {\n\t\tif(!resource.getPermissions().validate(user, Permission.READ))\n\t\t\treturn;\n\t\tDocumentMetadata metadata = resource.getMetadata();\n\t\tAttributesImpl attrs = new AttributesImpl();\n\t\tsearchedProperties.reset();\n\t\tserializer.startElement(WebDAV.DAV_NS, \"response\", \"D:response\", attrs);\n\t\t// write D:href\n\t\tserializer.startElement(WebDAV.DAV_NS, \"href\", \"D:href\", attrs);\n        ///TODO : use dedicated function in XmldbURI\n\t\tserializer.characters(servletPath + collection.getName() + \"/\" + resource.getFileName());\n\t\tserializer.endElement(WebDAV.DAV_NS, \"href\", \"D:href\");\n\t\t\n\t\tserializer.startElement(WebDAV.DAV_NS, \"propstat\", \"D:propstat\", attrs);\n\t\tserializer.startElement(WebDAV.DAV_NS, \"prop\", \"D:prop\", attrs);\n\t\t\n\t\tif(shouldIncludeProperty(type, searchedProperties, DISPLAY_NAME_PROP)) {\n\t\t\t// write D:displayname\n\t\t\twriteSimpleElement(DISPLAY_NAME_PROP, resource.getFileName(), serializer);\n\t\t}\n\t\t\n\t\tif(shouldIncludeProperty(type, searchedProperties, RESOURCE_TYPE_PROP)) {\n\t\t\twriteEmptyElement(RESOURCE_TYPE_PROP, serializer);\n\t\t}\n\t\t\n\t\tif(shouldIncludeProperty(type, searchedProperties, CREATION_DATE_PROP)) {\n\t\t\tlong created = metadata.getCreated();\n\t\t\twriteSimpleElement(CREATION_DATE_PROP, creationDateFormat.format(new Date(created)), serializer);\n\t\t}\n\t\t\n\t\tif(shouldIncludeProperty(type, searchedProperties, LAST_MODIFIED_PROP)) {\n\t\t\tlong modified = metadata.getLastModified();\n\t\t\twriteSimpleElement(LAST_MODIFIED_PROP, modificationDateFormat.format(new Date(modified)), serializer);\n\t\t}\n\t\t\n\t\tif(shouldIncludeProperty(type, searchedProperties, CONTENT_LENGTH_PROP)) {\n\t\t    writeSimpleElement(CONTENT_LENGTH_PROP, Long.toString(resource.getContentLength()), serializer);\n\t\t}\n\t\t\n\t\tif(shouldIncludeProperty(type, searchedProperties, CONTENT_TYPE_PROP)) {\n            writeSimpleElement(CONTENT_TYPE_PROP, metadata.getMimeType(), serializer);\n\t\t}\n\t\t\n\t\tif(shouldIncludeProperty(type, searchedProperties, SUPPORTED_LOCK_PROP)) {\n\t\t    serializer.startElement(WebDAV.DAV_NS, \"supportedlock\", \"D:supportedlock\", attrs);\n\t\t    serializer.startElement(WebDAV.DAV_NS, \"lockentry\", \"D:lockentry\", attrs);\n\t\t    serializer.startElement(WebDAV.DAV_NS, \"lockscope\", \"D:lockscope\", attrs);\n\t\t    writeEmptyElement(EXCLUSIVE_LOCK_PROP, serializer);\n\t\t    serializer.endElement(WebDAV.DAV_NS, \"lockscope\", \"D:lockscope\");\n\t\t    serializer.startElement(WebDAV.DAV_NS, \"locktype\", \"D:locktype\", attrs);\n\t\t    writeEmptyElement(WRITE_LOCK_PROP, serializer);\n\t\t    serializer.endElement(WebDAV.DAV_NS, \"locktype\", \"D:locktype\");\n\t\t    serializer.endElement(WebDAV.DAV_NS, \"lockentry\", \"D:lockentry\");\n\t\t    serializer.endElement(WebDAV.DAV_NS, \"supportedlock\", \"D:supportedlock\");\n\t\t}\n\t\t\n\t\tserializer.endElement(WebDAV.DAV_NS, \"prop\", \"D:prop\");\n\t\twriteSimpleElement(STATUS_PROP, \"HTTP/1.1 200 OK\", serializer);\n\t\t\n\t\tserializer.endElement(WebDAV.DAV_NS, \"propstat\", \"D:propstat\");\n\n\t\tif(type == FIND_BY_PROPERTY) {\n\t\t\tList unvisited = searchedProperties.unvisitedProperties();\n\t\t\tif(unvisited.size() > 0) {\n\t\t\t\t// there were unsupported properties. Report these to the client.\n\t\t\t\tserializer.startElement(WebDAV.DAV_NS, \"propstat\", \"D:propstat\", attrs);\n\t\t\t\tserializer.startElement(WebDAV.DAV_NS, \"prop\", \"D:prop\", attrs);\n\t\t\t\tfor(Iterator i = unvisited.iterator(); i.hasNext(); ) {\n\t\t\t\t\twriteEmptyElement((QName)i.next(), serializer);\n\t\t\t\t}\n\t\t\t\tserializer.endElement(WebDAV.DAV_NS, \"prop\", \"D:prop\");\n\t\t\t\twriteSimpleElement(STATUS_PROP, \"HTTP/1.1 404 Not Found\", serializer);\n\t\t\t\tserializer.endElement(WebDAV.DAV_NS, \"propstat\", \"D:propstat\");\n\t\t\t}\n\t\t}\n\t\tserializer.endElement(WebDAV.DAV_NS, \"response\", \"D:response\");\n\t}","id":39036,"modified_method":"private void writeResourceProperties(User user, DAVProperties searchedProperties,\n            int type, Collection collection, DocumentImpl resource, SAXSerializer serializer, String servletPath) throws SAXException {\n        if(!resource.getPermissions().validate(user, Permission.READ))\n            return;\n        DocumentMetadata metadata = resource.getMetadata();\n        AttributesImpl attrs = new AttributesImpl();\n        searchedProperties.reset();\n        serializer.startElement(WebDAV.DAV_NS, \"response\", \"D:response\", attrs);\n        // write D:href\n        serializer.startElement(WebDAV.DAV_NS, \"href\", \"D:href\", attrs);\n        ///TODO : use dedicated function in XmldbURI\n        serializer.characters(servletPath + collection.getName() + \"/\" + resource.getFileName());\n        serializer.endElement(WebDAV.DAV_NS, \"href\", \"D:href\");\n        \n        serializer.startElement(WebDAV.DAV_NS, \"propstat\", \"D:propstat\", attrs);\n        serializer.startElement(WebDAV.DAV_NS, \"prop\", \"D:prop\", attrs);\n        \n        if(shouldIncludeProperty(type, searchedProperties, DISPLAY_NAME_PROP)) {\n            // write D:displayname\n            writeSimpleElement(DISPLAY_NAME_PROP, resource.getFileName(), serializer);\n        }\n        \n        if(shouldIncludeProperty(type, searchedProperties, RESOURCE_TYPE_PROP)) {\n            writeEmptyElement(RESOURCE_TYPE_PROP, serializer);\n        }\n        \n        if(shouldIncludeProperty(type, searchedProperties, CREATION_DATE_PROP)) {\n            long created = metadata.getCreated();\n            writeSimpleElement(CREATION_DATE_PROP, creationDateFormat.format(new Date(created)), serializer);\n        }\n        \n        if(shouldIncludeProperty(type, searchedProperties, LAST_MODIFIED_PROP)) {\n            long modified = metadata.getLastModified();\n            writeSimpleElement(LAST_MODIFIED_PROP, modificationDateFormat.format(new Date(modified)), serializer);\n        }\n        \n        if(shouldIncludeProperty(type, searchedProperties, CONTENT_LENGTH_PROP)) {\n            writeSimpleElement(CONTENT_LENGTH_PROP, Long.toString(resource.getContentLength()), serializer);\n        }\n        \n        if(shouldIncludeProperty(type, searchedProperties, CONTENT_TYPE_PROP)) {\n            writeSimpleElement(CONTENT_TYPE_PROP, metadata.getMimeType(), serializer);\n        }\n        \n        if(shouldIncludeProperty(type, searchedProperties, SUPPORTED_LOCK_PROP)) {\n            serializer.startElement(WebDAV.DAV_NS, \"supportedlock\", \"D:supportedlock\", attrs);\n            serializer.startElement(WebDAV.DAV_NS, \"lockentry\", \"D:lockentry\", attrs);\n            serializer.startElement(WebDAV.DAV_NS, \"lockscope\", \"D:lockscope\", attrs);\n            writeEmptyElement(EXCLUSIVE_LOCK_PROP, serializer);\n            serializer.endElement(WebDAV.DAV_NS, \"lockscope\", \"D:lockscope\");\n            serializer.startElement(WebDAV.DAV_NS, \"locktype\", \"D:locktype\", attrs);\n            writeEmptyElement(WRITE_LOCK_PROP, serializer);\n            serializer.endElement(WebDAV.DAV_NS, \"locktype\", \"D:locktype\");\n            serializer.endElement(WebDAV.DAV_NS, \"lockentry\", \"D:lockentry\");\n            serializer.endElement(WebDAV.DAV_NS, \"supportedlock\", \"D:supportedlock\");\n        }\n        \n        if(shouldIncludeProperty(type, searchedProperties, LOCK_DISCOVERY_PROP)){\n            DocumentMetadata meta = resource.getMetadata();\n            LockToken token = null;\n            \n            if( meta!=null ){\n                token = meta.getLockToken();\n            } else {\n                LOG.info(\"No Document meta data\");\n            }\n            \n            serializer.startElement(WebDAV.DAV_NS, \"lockdiscovery\", \"D:lockdiscovery\", attrs);\n            if(token==null){\n                LOG.info(\"No lock token\");\n            } else {               \n                \n                serializer.startElement(WebDAV.DAV_NS, \"activelock\", \"D:activelock\", attrs);\n                \n                String lockType;\n                switch(token.getType()){\n                    case LockToken.LOCK_TYPE_WRITE : lockType=\"write\"; break;\n                    default : lockType=\"none\";\n                }\n                writeSimpleElement(LOCKTYPE_PROP, lockType, serializer);\n                \n                String lockScope;\n                switch(token.getScope()){\n                    case LockToken.LOCK_SCOPE_EXCLUSIVE : lockScope=\"exclusive\"; break;\n                    case LockToken.LOCK_SCOPE_SHARED : lockScope=\"sahred\"; break;\n                    default : lockScope=\"none\";\n                }\n                writeSimpleElement(LOCK_SCOPE_PROP, lockScope, serializer);\n                \n                String lockDepth;\n                switch(token.getDepth()){\n                    case LockToken.LOCK_DEPTH_INFINIY : lockDepth=\"Infinity\"; break;\n                    case LockToken.LOCK_DEPTH_1: lockDepth=\"1\"; break;\n                    case LockToken.LOCK_DEPTH_0: lockDepth=\"0\"; break;\n                    default : lockDepth=\"none\";\n                }\n                writeSimpleElement(LOCK_DEPTH_PROP, lockDepth, serializer);\n                \n                writeSimpleElement(LOCK_OWNER_PROP, token.getOwner(), serializer);\n                \n                writeSimpleElement(LOCK_TIMEOUT_PROP, \"\"+token.getTimeOut(), serializer);\n                \n                \n                serializer.startElement(WebDAV.DAV_NS, \"locktoken\", \"D:locktoken\", attrs);\n                \n                serializer.startElement(WebDAV.DAV_NS, \"href\", \"D:href\", attrs);\n                serializer.characters( \"opaquelocktoken:\"+token.getOpaqueLockToken() );\n                serializer.endElement(WebDAV.DAV_NS, \"href\", \"D:href\");\n                \n                serializer.endElement(WebDAV.DAV_NS, \"locktoken\", \"D:locktoken\");\n                \n                \n                serializer.endElement(WebDAV.DAV_NS, \"activelock\", \"D:activelock\");\n            }\n            serializer.endElement(WebDAV.DAV_NS, \"lockdiscovery\", \"D:lockdiscovery\");\n        }\n        serializer.endElement(WebDAV.DAV_NS, \"prop\", \"D:prop\");\n        writeSimpleElement(STATUS_PROP, \"HTTP/1.1 200 OK\", serializer);\n        \n        serializer.endElement(WebDAV.DAV_NS, \"propstat\", \"D:propstat\");\n        \n        if(type == FIND_BY_PROPERTY) {\n            List unvisited = searchedProperties.unvisitedProperties();\n            if(unvisited.size() > 0) {\n                // there were unsupported properties. Report these to the client.\n                serializer.startElement(WebDAV.DAV_NS, \"propstat\", \"D:propstat\", attrs);\n                serializer.startElement(WebDAV.DAV_NS, \"prop\", \"D:prop\", attrs);\n                for(Iterator i = unvisited.iterator(); i.hasNext(); ) {\n                    writeEmptyElement((QName)i.next(), serializer);\n                }\n                serializer.endElement(WebDAV.DAV_NS, \"prop\", \"D:prop\");\n                writeSimpleElement(STATUS_PROP, \"HTTP/1.1 404 Not Found\", serializer);\n                serializer.endElement(WebDAV.DAV_NS, \"propstat\", \"D:propstat\");\n            }\n        }\n        serializer.endElement(WebDAV.DAV_NS, \"response\", \"D:response\");\n    }","commit_id":"13ac4cafbaa4871914c160b92b83b2eb801574ae","url":"https://github.com/eXist-db/exist"},{"original_method":"public void process(User user, HttpServletRequest request,\n\t\t\tHttpServletResponse response, String path) throws ServletException, IOException {\n\t\tFile tempFile = saveRequestContent(request);\n\t\tString url = tempFile.toURI().toASCIIString();\n\t\tString contentType = request.getContentType();\n\t\tDBBroker broker = null;\n\t\tCollection collection = null;\n\t\tboolean collectionLocked = true;\n        TransactionManager transact = pool.getTransactionManager();\n        Txn txn = transact.beginTransaction();\n\t\ttry {\n\t\t\tbroker = pool.get(user);\n            ///TODO : use dedicated function in XmldbURI\n\t\t\tif(path == null)\n\t\t\t\tpath = \"\";\n\t\t\tif(path.endsWith(\"/\"))\n\t\t\t\tpath = path.substring(0, path.length() - 1);\n\t\t\tint p = path.lastIndexOf(\"/\");\n            //TODO : strange test here -pb\n\t\t\tif(p < 1) {\n                transact.abort(txn);\n\t\t\t\tresponse.sendError(HttpServletResponse.SC_CONFLICT, \"No collection specified for PUT\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tString collectionName = path.substring(0, p);\n\t\t\tpath = path.substring(p + 1);\n\t\t\t\n\t\t\tcollection = broker.openCollection(collectionName, Lock.WRITE_LOCK);\n\t\t\tif(collection == null) {\n                transact.abort(txn);\n\t\t\t\tresponse.sendError(HttpServletResponse.SC_CONFLICT, \"Parent collection \" + collectionName +\n\t\t\t\t\" not found\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(collection.hasChildCollection(path)) {\n                transact.abort(txn);\n\t\t\t\tresponse.sendError(HttpServletResponse.SC_CONFLICT, \"Cannot overwrite an existing collection with a resource\");\n\t\t\t\treturn;\n\t\t\t}\n            MimeType mime;\n\t\t\tif(contentType == null) {\n\t\t\t\tmime = MimeTable.getInstance().getContentTypeFor(path);\n                if (mime != null)\n                    contentType = mime.getName();\n\t\t\t} else {\n\t\t\t    mime = MimeTable.getInstance().getContentType(contentType);\n            }\n            if (mime == null)\n                mime = MimeType.BINARY_TYPE;\n\t\t\tLOG.debug(\"storing document \" + path + \"; content-type = \" + contentType);\n            \n\t\t\tif(mime.isXMLType()) {\n\t\t\t\tInputSource is = new InputSource(url);\n\t\t\t\tIndexInfo info = collection.validateXMLResource(txn, broker, path, is);\n                info.getDocument().getMetadata().setMimeType(contentType);\n\t\t\t\tcollection.release();\n\t\t\t\tcollectionLocked = false;\n\t\t\t\tcollection.store(txn, broker, info, is, false);\n\t\t\t} else {\n\t\t\t\tbyte[] chunk = new byte[4096];\n\t\t\t\tByteArrayOutputStream os = new ByteArrayOutputStream();\n\t\t\t\tFileInputStream is = new FileInputStream(tempFile);\n\t\t\t\tint l;\n\t\t\t\twhile((l = is.read(chunk)) > -1) {\n\t\t\t\t\tos.write(chunk, 0, l);\n\t\t\t\t}\n\t\t\t\tcollection.addBinaryResource(txn, broker, path, os.toByteArray(), contentType);\n\t\t\t}\n            transact.commit(txn);\n\t\t} catch (EXistException e) {\n            transact.abort(txn);\n\t\t\tthrow new ServletException(\"Failed to store resource: \" + e.getMessage(), e);\n\t\t} catch (PermissionDeniedException e) {\n            transact.abort(txn);\n\t\t\tresponse.sendError(HttpServletResponse.SC_FORBIDDEN);\n\t\t} catch (TriggerException e) {\n            transact.abort(txn);\n\t\t\tresponse.sendError(HttpServletResponse.SC_FORBIDDEN);\n\t\t} catch (SAXException e) {\n            transact.abort(txn);\n\t\t\tresponse.sendError(HttpServletResponse.SC_BAD_REQUEST);\n\t\t} catch (LockException e) {\n            transact.abort(txn);\n\t\t\tresponse.sendError(HttpServletResponse.SC_CONFLICT);\n\t\t} finally {\n\t\t\tif(collectionLocked && collection != null)\n\t\t\t\tcollection.release();\n\t\t\tpool.release(broker);\n\t\t}\n        tempFile.delete();\n\t\tresponse.setStatus(HttpServletResponse.SC_CREATED);\n\t}","id":39037,"modified_method":"public void process(User user, HttpServletRequest request,\n            HttpServletResponse response, String path) throws ServletException, IOException {\n        File tempFile = saveRequestContent(request);\n        String url = tempFile.toURI().toASCIIString();\n        String contentType = request.getContentType();\n        DBBroker broker = null;\n        Collection collection = null;\n        boolean collectionLocked = true;\n        TransactionManager transact = pool.getTransactionManager();\n        Txn txn = transact.beginTransaction();\n        try {\n            broker = pool.get(user);\n            ///TODO : use dedicated function in XmldbURI\n            if(path == null)\n                path = \"\";\n            if(path.endsWith(\"/\"))\n                path = path.substring(0, path.length() - 1);\n            int p = path.lastIndexOf(\"/\");\n            //TODO : strange test here -pb\n            // \"/\" should be rewritten to \"/db\"? -dw\n//            if(p < 1) {\n//                transact.abort(txn);\n//                response.sendError(HttpServletResponse.SC_CONFLICT, \"No collection specified for PUT\");\n//                return;\n//            }\n            String collectionName = path.substring(0, p);\n            path = path.substring(p + 1);\n            \n            LOG.debug(\"collectionName='\"+collectionName+\"';  path=\"+path+\"';\" );\n            \n            collection = broker.openCollection(collectionName, Lock.READ_LOCK);// WRITE\n            if(collection == null) {\n                transact.abort(txn);\n                response.sendError(HttpServletResponse.SC_CONFLICT, \"Parent collection \" + collectionName +\n                        \" not found\");\n                return;\n            }\n            if(collection.hasChildCollection(path)) {\n                transact.abort(txn);\n                response.sendError(HttpServletResponse.SC_CONFLICT, \"Cannot overwrite an existing collection with a resource\");\n                return;\n            }\n            \n//            // Get old lock info\n//            LockToken lockToken=null;\n//            User lockUser=null;\n////            try {\n//            DocumentImpl resource = broker.getXMLResource(path, org.exist.storage.lock.Lock.WRITE_LOCK);\n//            \n//            if(resource==null){\n////\n//                \n//            } else {\n//                lockToken = resource.getMetadata().getLockToken();\n//                lockUser = resource.getUserLock();\n////                resource.setUserLock(null);\n////                resource.getMetadata().setLockToken(null);\n//            }\n//            \n////            } catch (PermissionDeniedException ex) {\n////                LOG.debug( ex.getMessage() );\n////                response.sendError();\n////                return;\n////            }\n            \n            MimeType mime;\n            if(contentType == null) {\n                mime = MimeTable.getInstance().getContentTypeFor(path);\n                if (mime != null)\n                    contentType = mime.getName();\n            } else {\n                mime = MimeTable.getInstance().getContentType(contentType);\n            }\n            if (mime == null)\n                mime = MimeType.BINARY_TYPE;\n            LOG.debug(\"storing document \" + path + \"; content-type = \" + contentType);\n            \n            if(mime.isXMLType()) {\n                InputSource is = new InputSource(url);\n                IndexInfo info = collection.validateXMLResource(txn, broker, path, is);\n                info.getDocument().getMetadata().setMimeType(contentType);\n//                info.getDocument().getMetadata().setLockToken(lockToken);\n//                info.getDocument().setUserLock(lockUser);\n                collection.release();\n                collectionLocked = false;\n                collection.store(txn, broker, info, is, false);\n            } else {\n                byte[] chunk = new byte[4096];\n                ByteArrayOutputStream os = new ByteArrayOutputStream();\n                FileInputStream is = new FileInputStream(tempFile);\n                int l;\n                while((l = is.read(chunk)) > -1) {\n                    os.write(chunk, 0, l);\n                }\n                \n                // Restore original lock information\n                DocumentImpl doc = collection.addBinaryResource(txn, broker, path, os.toByteArray(), contentType);\n//                doc.getMetadata().setLockToken(lockToken);\n//                doc.setUserLock(lockUser);\n                \n            }\n            transact.commit(txn);\n        } catch (EXistException e) {\n            transact.abort(txn);\n            //throw new ServletException(\"Failed to store resource: \" + e.getMessage(), e);\n            LOG.error(e);\n            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, e.getMessage());\n            return;\n        } catch (PermissionDeniedException e) {\n            transact.abort(txn);\n            LOG.debug(e);\n            response.sendError(HttpServletResponse.SC_FORBIDDEN);\n            return;\n        } catch (TriggerException e) {\n            transact.abort(txn);\n            LOG.debug(e);\n            response.sendError(HttpServletResponse.SC_FORBIDDEN);\n            return;\n        } catch (SAXException e) {\n            transact.abort(txn);\n            LOG.debug(e);\n            response.sendError(HttpServletResponse.SC_BAD_REQUEST);\n            return;\n        } catch (LockException e) {\n            transact.abort(txn);\n            LOG.debug(e);\n            response.sendError(HttpServletResponse.SC_CONFLICT);\n            return;\n        } finally {\n            if(collectionLocked && collection != null)\n                collection.release();\n            pool.release(broker);\n            tempFile.delete();\n        }\n        response.setStatus(HttpServletResponse.SC_CREATED);\n    }","commit_id":"13ac4cafbaa4871914c160b92b83b2eb801574ae","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Process a WebDAV request. The request is delegated to the corresponding\n\t * {@link WebDAVMethod} after authenticating the user.\n\t * \n\t * @param request\n\t * @param response\n\t * @throws ServletException\n\t * @throws IOException\n\t */\n\tpublic void process(HttpServletRequest request, HttpServletResponse response)\n\tthrows ServletException, IOException {\n\t\tUser user = authenticate(request, response);\n\t\tif(user == null)\n\t\t\treturn;\n\t\tString path = request.getPathInfo();\n\t\tif(path == null || path.length() == 0 || path.equals(\"/\")) {\n\t\t\tresponse.sendRedirect(request.getRequestURI() + DBBroker.ROOT_COLLECTION);\n\t\t\treturn;\n\t\t}\n\t\tif(path.endsWith(\"/\"))\n\t\t\tpath = path.substring(0, path.length() - 1);\n\t\tLOG.debug(\"path = \" + path + \"; method = \" + request.getMethod());\n\t\t\n\t\tWebDAVMethod method = null;\n\t\t\n\t\tmethod = WebDAVMethodFactory.create(request.getMethod(), pool);\n\t\tif(method == null) {\n\t\t\tresponse.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED,\n\t\t\t\t\t\"Method is not supported: \" + request.getMethod());\n\t\t\treturn;\n\t\t}\n\t\tmethod.process(user, request, response, path);\n\t}","id":39038,"modified_method":"/**\n     * Process a WebDAV request. The request is delegated to the corresponding\n     * {@link WebDAVMethod} after authenticating the user.\n     *\n     * @param request           an HttpServletRequest object that contains\n     *                          the request the client has made of the servlet\n     * @param response          an HttpServletResponse object that contains the\n     *                          response the servlet sends to the client\n     * @throws ServletException if the request could not be handled\n     * @throws IOException      if an input or output error is detected when\n     *                          the servlet handles the request\n     */\n    public void process(HttpServletRequest request, HttpServletResponse response)\n    throws ServletException, IOException {\n        User user = authenticate(request, response);\n        if(user == null)\n            return;\n        String path = request.getPathInfo();\n        if(path == null || path.length() == 0 || path.equals(\"/\")) {\n            response.sendRedirect(request.getRequestURI() + DBBroker.ROOT_COLLECTION);\n            return;\n        }\n        if(path.endsWith(\"/\"))\n            path = path.substring(0, path.length() - 1);\n        \n        LOG.debug(\"path='\" + path + \"'; method='\" + request.getMethod()\n        +\"'; user='\"+user.getName()\n        +\"'; Lock-Token='\" + request.getHeader(\"Lock-Token\")+\"';\");\n        \n        WebDAVMethod method = null;\n        \n        method = WebDAVMethodFactory.create(request.getMethod(), pool);\n        if(method == null) {\n            response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED,\n                    \"Method is not supported: \" + request.getMethod());\n            return;\n        }\n        method.process(user, request, response, path);\n    }","commit_id":"13ac4cafbaa4871914c160b92b83b2eb801574ae","url":"https://github.com/eXist-db/exist"},{"original_method":"public final static WebDAVMethod create(String method, BrokerPool pool) {\n        if(method.equals(\"OPTIONS\"))\n            return new Options();\n        else if(method.equals(\"GET\"))\n            return new Get(pool);\n        else if(method.equals(\"HEAD\"))\n            return new Head(pool);\n        else if(method.equals(\"PUT\"))\n            return new Put(pool);\n        else if(method.equals(\"DELETE\"))\n            return new Delete(pool);\n        else if(method.equals(\"MKCOL\"))\n            return new Mkcol(pool);\n        else if(method.equals(\"PROPFIND\"))\n            return new Propfind(pool);\n        else if(method.equals(\"MOVE\"))\n            return new Move(pool);\n        else if(method.equals(\"COPY\"))\n            return new Copy(pool);\n        else return null;\n    }","id":39039,"modified_method":"public final static WebDAVMethod create(String method, BrokerPool pool) {\n        if(method.equals(\"OPTIONS\"))\n            return new Options();\n        else if(method.equals(\"GET\"))\n            return new Get(pool);\n        else if(method.equals(\"HEAD\"))\n            return new Head(pool);\n        else if(method.equals(\"PUT\"))\n            return new Put(pool);\n        else if(method.equals(\"DELETE\"))\n            return new Delete(pool);\n        else if(method.equals(\"MKCOL\"))\n            return new Mkcol(pool);\n        else if(method.equals(\"PROPFIND\"))\n            return new Propfind(pool);\n        else if(method.equals(\"MOVE\"))\n            return new Move(pool);\n        else if(method.equals(\"COPY\"))\n            return new Copy(pool);\n        else if(method.equals(\"UNLOCK\"))\n            return new Unlock(pool);\n        else if(method.equals(\"LOCK\"))\n            return new Lock(pool);\n        else return null;\n    }","commit_id":"13ac4cafbaa4871914c160b92b83b2eb801574ae","url":"https://github.com/eXist-db/exist"},{"original_method":"protected boolean isStagingGroup(long groupId) throws PortalException {\n\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\tif (group.isLayout()) {\n\t\t\tgroup = GroupLocalServiceUtil.getGroup(group.getParentGroupId());\n\t\t}\n\n\t\tif (group.isStagingGroup()) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","id":39040,"modified_method":"protected boolean isStagingGroup(long groupId) {\n\t\tGroup group = getSiteGroup(groupId);\n\n\t\tif (group == null) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn group.isStagingGroup();\n\t}","commit_id":"cf2993f214b451000cdd40088a69f55d60702979","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected long getSiteGroupId(long groupId) {\n\t\tlong siteGroupId = groupId;\n\n\t\ttry {\n\t\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\t\tif (group.isLayout()) {\n\t\t\t\tsiteGroupId = group.getParentGroupId();\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Unable to retrieve site group\", e);\n\t\t\t}\n\t\t}\n\n\t\treturn siteGroupId;\n\t}","id":39041,"modified_method":"protected long getSiteGroupId(long groupId) {\n\t\tGroup group = getSiteGroup(groupId);\n\n\t\tif (group == null) {\n\t\t\treturn groupId;\n\t\t}\n\n\t\treturn group.getGroupId();\n\t}","commit_id":"cf2993f214b451000cdd40088a69f55d60702979","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void processServicePrePrincipalException(\n\t\t\tThrowable t, long userId, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows IOException, ServletException {\n\n\t\tif (userId > 0) {\n\t\t\tsendError(\n\t\t\t\tHttpServletResponse.SC_UNAUTHORIZED, t, request, response);\n\n\t\t\treturn;\n\t\t}\n\n\t\tString redirect =\n\t\t\trequest.getContextPath() + Portal.PATH_MAIN + \"/portal/login\";\n\n\t\tString currentURL = PortalUtil.getCurrentURL(request);\n\n\t\tredirect = HttpUtil.addParameter(redirect, \"redirect\", currentURL);\n\n\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\n\t\tif (plid > 0) {\n\t\t\ttry {\n\t\t\t\tLayout layout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\t\t\tif (layout.isPrivateLayout()) {\n\t\t\t\t\tplid = LayoutLocalServiceUtil.getDefaultPlid(\n\t\t\t\t\t\tlayout.getGroupId(), false);\n\t\t\t\t}\n\n\t\t\t\tredirect = HttpUtil.addParameter(redirect, \"p_l_id\", plid);\n\t\t\t}\n\t\t\tcatch (Exception e1) {\n\t\t\t}\n\t\t}\n\n\t\tresponse.sendRedirect(redirect);\n\t}","id":39042,"modified_method":"protected void processServicePrePrincipalException(\n\t\t\tThrowable t, long userId, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows IOException, ServletException {\n\n\t\tif (userId > 0) {\n\t\t\tsendError(\n\t\t\t\tHttpServletResponse.SC_UNAUTHORIZED, t, request, response);\n\n\t\t\treturn;\n\t\t}\n\n\t\tString redirect =\n\t\t\trequest.getContextPath() + Portal.PATH_MAIN + \"/portal/login\";\n\n\t\tString currentURL = PortalUtil.getCurrentURL(request);\n\n\t\tredirect = HttpUtil.addParameter(redirect, \"redirect\", currentURL);\n\n\t\tlong plid = ParamUtil.getLong(request, \"p_l_id\");\n\n\t\tif (plid > 0) {\n\t\t\ttry {\n\t\t\t\tLayout layout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\t\t\tif (layout.getGroup().isStagingGroup()) {\n\t\t\t\t\tGroup group = GroupLocalServiceUtil.getGroup(\n\t\t\t\t\t\tlayout.getCompanyId(), GroupConstants.GUEST);\n\n\t\t\t\t\tplid = group.getDefaultPublicPlid();\n\t\t\t\t}\n\t\t\t\telse if (layout.isPrivateLayout()) {\n\t\t\t\t\tplid = LayoutLocalServiceUtil.getDefaultPlid(\n\t\t\t\t\t\tlayout.getGroupId(), false);\n\t\t\t\t}\n\n\t\t\t\tredirect = HttpUtil.addParameter(redirect, \"p_l_id\", plid);\n\t\t\t}\n\t\t\tcatch (Exception e1) {\n\t\t\t}\n\t\t}\n\n\t\tresponse.sendRedirect(redirect);\n\t}","commit_id":"f6d8969e96c63e127075328556bea0a4d65af0a1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected boolean isViewableCommunity(\n\t\t\tUser user, long groupId, boolean privateLayout,\n\t\t\tPermissionChecker permissionChecker)\n\t\tthrows PortalException, SystemException {\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\t// Inactive communities are not viewable\n\n\t\tif (!group.isActive()) {\n\t\t\treturn false;\n\t\t}\n\t\telse if (group.isStagingGroup()) {\n\t\t\tGroup liveGroup = group.getLiveGroup();\n\n\t\t\tif (!liveGroup.isActive()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// User private layouts are only viewable by the user and anyone who can\n\t\t// update the user. The user must also be active.\n\n\t\tif (group.isUser()) {\n\t\t\tlong groupUserId = group.getClassPK();\n\n\t\t\tif (groupUserId == user.getUserId()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tUser groupUser = UserLocalServiceUtil.getUserById(groupUserId);\n\n\t\t\t\tif (!groupUser.isActive()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (privateLayout) {\n\t\t\t\t\tif (UserPermissionUtil.contains(\n\t\t\t\t\t\t\tpermissionChecker, groupUserId,\n\t\t\t\t\t\t\tgroupUser.getOrganizationIds(),\n\t\t\t\t\t\t\tActionKeys.UPDATE)) {\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Most public layouts are viewable\n\n\t\tif (!privateLayout) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Control panel layouts are only viewable by authenticated users\n\n\t\tif (group.getName().equals(GroupConstants.CONTROL_PANEL)) {\n\t\t\tif (user.isDefaultUser()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// If the current group is staging, the live group should be checked\n\t\t// for membership instead\n\n\t\tif (group.isStagingGroup()) {\n\t\t\tgroupId = group.getLiveGroupId();\n\t\t}\n\n\t\t// Community or organization layouts are only viewable by users who\n\t\t// belong to the community or organization, or by users who can update\n\t\t// the community or organization\n\n\t\tif (group.isCommunity()) {\n\t\t\tif (GroupLocalServiceUtil.hasUserGroup(user.getUserId(), groupId)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (GroupPermissionUtil.contains(\n\t\t\t\t\t\tpermissionChecker, groupId, ActionKeys.UPDATE)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (group.isOrganization()) {\n\t\t\tlong organizationId = group.getClassPK();\n\n\t\t\tif (OrganizationLocalServiceUtil.hasUserOrganization(\n\t\t\t\t\tuser.getUserId(), organizationId)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (OrganizationPermissionUtil.contains(\n\t\t\t\t\t\tpermissionChecker, organizationId, ActionKeys.UPDATE)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (group.isUserGroup()) {\n\t\t\tif (GroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, groupId, ActionKeys.MANAGE_LAYOUTS)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}","id":39043,"modified_method":"protected boolean isViewableCommunity(\n\t\t\tUser user, long groupId, boolean privateLayout,\n\t\t\tPermissionChecker permissionChecker)\n\t\tthrows PortalException, SystemException {\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\t// Inactive communities are not viewable\n\n\t\tif (!group.isActive()) {\n\t\t\treturn false;\n\t\t}\n\t\telse if (group.isStagingGroup()) {\n\t\t\tGroup liveGroup = group.getLiveGroup();\n\n\t\t\tif (!liveGroup.isActive()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// User private layouts are only viewable by the user and anyone who can\n\t\t// update the user. The user must also be active.\n\n\t\tif (group.isUser()) {\n\t\t\tlong groupUserId = group.getClassPK();\n\n\t\t\tif (groupUserId == user.getUserId()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tUser groupUser = UserLocalServiceUtil.getUserById(groupUserId);\n\n\t\t\t\tif (!groupUser.isActive()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (privateLayout) {\n\t\t\t\t\tif (UserPermissionUtil.contains(\n\t\t\t\t\t\t\tpermissionChecker, groupUserId,\n\t\t\t\t\t\t\tgroupUser.getOrganizationIds(),\n\t\t\t\t\t\t\tActionKeys.UPDATE)) {\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If the current group is staging, only users with editorial rights\n\t\t// can access it\n\n\t\tif (group.isStagingGroup()) {\n\t\t\tif (user.isDefaultUser()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (GroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, groupId, ActionKeys.APPROVE_PROPOSAL) ||\n\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, groupId, ActionKeys.ASSIGN_REVIEWER) ||\n\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, groupId, ActionKeys.MANAGE_LAYOUTS) ||\n\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, groupId, ActionKeys.MANAGE_STAGING) ||\n\t\t\t\tGroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, groupId, ActionKeys.PUBLISH_STAGING)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Most public layouts are viewable\n\n\t\tif (!privateLayout) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Control panel layouts are only viewable by authenticated users\n\n\t\tif (group.getName().equals(GroupConstants.CONTROL_PANEL)) {\n\t\t\tif (user.isDefaultUser()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Community or organization layouts are only viewable by users who\n\t\t// belong to the community or organization, or by users who can update\n\t\t// the community or organization\n\n\t\tif (group.isCommunity()) {\n\t\t\tif (GroupLocalServiceUtil.hasUserGroup(user.getUserId(), groupId)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (GroupPermissionUtil.contains(\n\t\t\t\t\t\tpermissionChecker, groupId, ActionKeys.UPDATE)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (group.isOrganization()) {\n\t\t\tlong organizationId = group.getClassPK();\n\n\t\t\tif (OrganizationLocalServiceUtil.hasUserOrganization(\n\t\t\t\t\tuser.getUserId(), organizationId)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (OrganizationPermissionUtil.contains(\n\t\t\t\t\t\tpermissionChecker, organizationId, ActionKeys.UPDATE)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (group.isUserGroup()) {\n\t\t\tif (GroupPermissionUtil.contains(\n\t\t\t\t\tpermissionChecker, groupId, ActionKeys.MANAGE_LAYOUTS)) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"f6d8969e96c63e127075328556bea0a4d65af0a1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public List<Calendar> getOtherCalendars(long[] calendarIds)\n\t\tthrows PortalException {\n\n\t\tList<Calendar> otherCalendars = new ArrayList<>();\n\n\t\tfor (long calendarId : calendarIds) {\n\t\t\tCalendar calendar = _calendarService.fetchCalendar(calendarId);\n\n\t\t\tif (calendar == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tCalendarResource calendarResource = calendar.getCalendarResource();\n\n\t\t\tif (!calendarResource.isActive()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tGroup scopeGroup = _themeDisplay.getScopeGroup();\n\t\t\tGroup calendarGroup = _groupLocalService.getGroup(\n\t\t\t\tcalendar.getGroupId());\n\n\t\t\tif (calendarGroup.isStagingGroup() &&\n\t\t\t\t(!scopeGroup.isStagingGroup() ||\n\t\t\t\t (scopeGroup.getGroupId() != calendarGroup.getGroupId()))) {\n\n\t\t\t\tcalendar = _calendarLocalService.fetchCalendarByUuidAndGroupId(\n\t\t\t\t\tcalendar.getUuid(), calendarGroup.getLiveGroupId());\n\n\t\t\t\tif (calendar == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (scopeGroup.isStagingGroup() &&\n\t\t\t\t\t (scopeGroup.getLiveGroupId() ==\n\t\t\t\t\t\t calendarGroup.getGroupId())) {\n\n\t\t\t\tGroup stagingGroup = calendarGroup.getStagingGroup();\n\n\t\t\t\tcalendar = _calendarLocalService.fetchCalendarByUuidAndGroupId(\n\t\t\t\t\tcalendar.getUuid(), stagingGroup.getGroupId());\n\t\t\t}\n\n\t\t\totherCalendars.add(calendar);\n\t\t}\n\n\t\treturn otherCalendars;\n\t}","id":39044,"modified_method":"public List<Calendar> getOtherCalendars(long[] calendarIds)\n\t\tthrows PortalException {\n\n\t\tList<Calendar> otherCalendars = new ArrayList<>();\n\n\t\tfor (long calendarId : calendarIds) {\n\t\t\tCalendar calendar = _calendarService.fetchCalendar(calendarId);\n\n\t\t\tif (calendar == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tCalendarResource calendarResource = calendar.getCalendarResource();\n\n\t\t\tif (!calendarResource.isActive()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tGroup scopeGroup = _themeDisplay.getScopeGroup();\n\n\t\t\tlong scopeGroupId = scopeGroup.getGroupId();\n\t\t\tlong scopeLiveGroupId = scopeGroup.getLiveGroupId();\n\n\t\t\tGroup calendarGroup = _groupLocalService.getGroup(\n\t\t\t\tcalendar.getGroupId());\n\n\t\t\tlong calendarGroupId = calendarGroup.getGroupId();\n\n\t\t\tif (scopeGroup.isStagingGroup()) {\n\t\t\t\tif (calendarGroup.isStagingGroup()) {\n\t\t\t\t\tif (scopeGroupId != calendarGroupId) {\n\t\t\t\t\t\tcalendar =\n\t\t\t\t\t\t\t_calendarLocalService.fetchCalendarByUuidAndGroupId(\n\t\t\t\t\t\t\t\tcalendar.getUuid(),\n\t\t\t\t\t\t\t\tcalendarGroup.getLiveGroupId());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (scopeLiveGroupId == calendarGroupId) {\n\t\t\t\t\tGroup stagingGroup = calendarGroup.getStagingGroup();\n\n\t\t\t\t\tcalendar =\n\t\t\t\t\t\t_calendarLocalService.fetchCalendarByUuidAndGroupId(\n\t\t\t\t\t\t\tcalendar.getUuid(), stagingGroup.getGroupId());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (calendarGroup.isStagingGroup()) {\n\t\t\t\tcalendar = _calendarLocalService.fetchCalendarByUuidAndGroupId(\n\t\t\t\t\tcalendar.getUuid(), calendarGroup.getLiveGroupId());\n\t\t\t}\n\n\t\t\tif (calendar == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\totherCalendars.add(calendar);\n\t\t}\n\n\t\treturn otherCalendars;\n\t}","commit_id":"4dc64187528d5876b374146a295e0f495a0a76a0","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void readRep(Repository rep, ObjectId id_step, List<DatabaseMeta> databases, Map<String,Counter> counters)\n        throws KettleException\n        {\n            try\n            {\n                splitField  = rep.getStepAttributeString(id_step, \"splitfield\"); //$NON-NLS-1$\n                delimiter   = rep.getStepAttributeString(id_step, \"delimiter\"); //$NON-NLS-1$\n\n                int nrfields = rep.countNrStepAttributes(id_step, \"field_name\"); //$NON-NLS-1$\n\n                allocate(nrfields);\n\n                for (int i=0;i<nrfields;i++)\n                {\n                    fieldName[i] = rep.getStepAttributeString(id_step, i, \"field_name\"); //$NON-NLS-1$\n                    fieldID[i]         =       rep.getStepAttributeString (id_step, i, \"field_id\"); //$NON-NLS-1$\n                    fieldRemoveID[i] = rep.getStepAttributeBoolean(id_step, i, \"field_idrem\"); //$NON-NLS-1$\n                    fieldType[i]        =  ValueMeta.getType( rep.getStepAttributeString (id_step, i, \"field_type\") ); //$NON-NLS-1$\n                    fieldFormat[i]      =       rep.getStepAttributeString (id_step, i, \"field_format\"); //$NON-NLS-1$\n                    fieldGroup[i]       =       rep.getStepAttributeString (id_step, i, \"field_group\"); //$NON-NLS-1$\n                    fieldDecimal[i]     =       rep.getStepAttributeString (id_step, i, \"field_decimal\"); //$NON-NLS-1$\n                    fieldLength[i]      =  (int)rep.getStepAttributeInteger(id_step, i, \"field_length\"); //$NON-NLS-1$\n                    fieldPrecision[i]   =  (int)rep.getStepAttributeInteger(id_step, i, \"field_precision\"); //$NON-NLS-1$\n                    fieldNullIf[i] = rep.getStepAttributeString(id_step, i, \"field_nullif\"); //$NON-NLS-1$\n                    fieldIfNull[i] = rep.getStepAttributeString(id_step, i, \"field_ifnull\"); //$NON-NLS-1$\n                    fieldTrimType[i] = (int)rep.getStepAttributeInteger(id_step, i, \"field_trimtype\"); //$NON-NLS-1$\n                }\n            }\n            catch(Exception e)\n            {\n                throw new KettleException(BaseMessages.getString(PKG, \"FieldSplitterMeta.Exception.UnexpectedErrorInReadingStepInfo\"), e); //$NON-NLS-1$\n            }\n        }","id":39045,"modified_method":"public void readRep(Repository rep, ObjectId id_step, List<DatabaseMeta> databases, Map<String,Counter> counters)\n        throws KettleException\n        {\n            try\n            {\n                splitField  = rep.getStepAttributeString(id_step, \"splitfield\"); //$NON-NLS-1$\n                delimiter   = rep.getStepAttributeString(id_step, \"delimiter\"); //$NON-NLS-1$\n\n                int nrfields = rep.countNrStepAttributes(id_step, \"field_name\"); //$NON-NLS-1$\n\n                allocate(nrfields);\n\n                for (int i=0;i<nrfields;i++)\n                {\n                    fieldName[i] = rep.getStepAttributeString(id_step, i, \"field_name\"); //$NON-NLS-1$\n                    fieldID[i]         =       rep.getStepAttributeString (id_step, i, \"field_id\"); //$NON-NLS-1$\n                    fieldRemoveID[i] = rep.getStepAttributeBoolean(id_step, i, \"field_idrem\"); //$NON-NLS-1$\n                    fieldType[i]        =  ValueMeta.getType( rep.getStepAttributeString (id_step, i, \"field_type\") ); //$NON-NLS-1$\n                    fieldFormat[i]      =       rep.getStepAttributeString (id_step, i, \"field_format\"); //$NON-NLS-1$\n                    fieldGroup[i]       =       rep.getStepAttributeString (id_step, i, \"field_group\"); //$NON-NLS-1$\n                    fieldDecimal[i]     =       rep.getStepAttributeString (id_step, i, \"field_decimal\"); //$NON-NLS-1$\n                    fieldLength[i]      =  (int)rep.getStepAttributeInteger(id_step, i, \"field_length\"); //$NON-NLS-1$\n                    fieldPrecision[i]   =  (int)rep.getStepAttributeInteger(id_step, i, \"field_precision\"); //$NON-NLS-1$\n                    fieldNullIf[i] = rep.getStepAttributeString(id_step, i, \"field_nullif\"); //$NON-NLS-1$\n                    fieldIfNull[i] = rep.getStepAttributeString(id_step, i, \"field_ifnull\"); //$NON-NLS-1$\n                    fieldTrimType[i] =  ValueMeta.getTrimTypeByCode(rep.getStepAttributeString(id_step, i, \"field_trimtype\")); //$NON-NLS-1$\n                }\n            }\n            catch(Exception e)\n            {\n                throw new KettleException(BaseMessages.getString(PKG, \"FieldSplitterMeta.Exception.UnexpectedErrorInReadingStepInfo\"), e); //$NON-NLS-1$\n            }\n        }","commit_id":"7e4659324427e51ce2b743e60e5efa1e0bf873eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void readRep(Repository rep, ObjectId id_step, List<DatabaseMeta> databases, Map<String, Counter> counters) throws KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tint nrfiles = rep.countNrStepAttributes(id_step, \"file_name\");\n\t\t\tfileTypeFilter=FileInputList.FileTypeFilter.getByName(rep.getStepAttributeString(id_step, \"filterfiletype\"));\r\n\t\t\t\r\n\t\t\tdynamicFilenameField  = rep.getStepAttributeString(id_step, \"filename_Field\");\r\n\t\t\tdynamicWildcardField  = rep.getStepAttributeString(id_step, \"wildcard_Field\");\r\n\t\t\tdynamicIncludeSubFolders  = rep.getStepAttributeBoolean(id_step, \"include_subfolders\");\r\n\t\t\t\r\n\t\t\tincludeRowNumber  = rep.getStepAttributeBoolean(id_step, \"rownum\");\r\n\t\t\tisaddresult  = rep.getStepAttributeBoolean(id_step, rep.getStepAttributeString(id_step, \"isaddresult\"));\r\n\t\t\tfilefield  = rep.getStepAttributeBoolean(id_step, \"filefield\");\r\n\t\t\trowNumberField    = rep.getStepAttributeString (id_step, \"rownum_field\");\r\n\t\t\trowLimit          = rep.getStepAttributeInteger(id_step, \"limit\");\n\t\t\t\t\t\t\n\t\t\tallocate(nrfiles);\n\n\t\t\tfor (int i = 0; i < nrfiles; i++)\n\t\t\t{\n\t\t\t\tfileName[i] = rep.getStepAttributeString(id_step, i, \"file_name\");\n\t\t\t\tfileMask[i] = rep.getStepAttributeString(id_step, i, \"file_mask\");\n\t\t\t\tfileRequired[i] = rep.getStepAttributeString(id_step, i, \"file_required\");\n\t\t\t\tif(!YES.equalsIgnoreCase(fileRequired[i])) fileRequired[i] = NO;\r\n                includeSubFolders[i] = rep.getStepAttributeString(id_step, i, \"include_subfolders\");\r\n                if(!YES.equalsIgnoreCase(includeSubFolders[i])) includeSubFolders[i] = NO;\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\tthrow new KettleException(\"Unexpected error reading step information from the repository\", e);\n\t\t}\n\t}","id":39046,"modified_method":"public void readRep(Repository rep, ObjectId id_step, List<DatabaseMeta> databases, Map<String, Counter> counters) throws KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tint nrfiles = rep.countNrStepAttributes(id_step, \"file_name\");\n\t\t\tfileTypeFilter=FileInputList.FileTypeFilter.getByName(rep.getStepAttributeString(id_step, \"filterfiletype\"));\r\n\t\t\t\r\n\t\t\tdynamicFilenameField  = rep.getStepAttributeString(id_step, \"filename_Field\");\r\n\t\t\tdynamicWildcardField  = rep.getStepAttributeString(id_step, \"wildcard_Field\");\r\n\t\t\tdynamicIncludeSubFolders  = rep.getStepAttributeBoolean(id_step, \"dynamic_include_subfolders\");\r\n\t\t\t\r\n\t\t\tincludeRowNumber  = rep.getStepAttributeBoolean(id_step, \"rownum\");\r\n\t\t\tisaddresult  = rep.getStepAttributeBoolean(id_step, rep.getStepAttributeString(id_step, \"isaddresult\"));\r\n\t\t\tfilefield  = rep.getStepAttributeBoolean(id_step, \"filefield\");\r\n\t\t\trowNumberField    = rep.getStepAttributeString (id_step, \"rownum_field\");\r\n\t\t\trowLimit          = rep.getStepAttributeInteger(id_step, \"limit\");\n\t\t\t\t\t\t\n\t\t\tallocate(nrfiles);\n\n\t\t\tfor (int i = 0; i < nrfiles; i++)\n\t\t\t{\n\t\t\t\tfileName[i] = rep.getStepAttributeString(id_step, i, \"file_name\");\n\t\t\t\tfileMask[i] = rep.getStepAttributeString(id_step, i, \"file_mask\");\n\t\t\t\tfileRequired[i] = rep.getStepAttributeString(id_step, i, \"file_required\");\n\t\t\t\tif(!YES.equalsIgnoreCase(fileRequired[i])) fileRequired[i] = NO;\r\n                includeSubFolders[i] = rep.getStepAttributeString(id_step, i, \"include_subfolders\");\r\n                if(!YES.equalsIgnoreCase(includeSubFolders[i])) includeSubFolders[i] = NO;\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\tthrow new KettleException(\"Unexpected error reading step information from the repository\", e);\n\t\t}\n\t}","commit_id":"7e4659324427e51ce2b743e60e5efa1e0bf873eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String getXML()\n\t{\n\t\tStringBuffer retval = new StringBuffer(300);\n\t\t\t\n\t\tretval.append(\"    <filter>\").append(Const.CR);\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"filterfiletype\",  fileTypeFilter.toString()));\n\t\tretval.append(\"    <\/filter>\").append(Const.CR);\n\t\t\r\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"rownum\",          includeRowNumber));\r\n\t    retval.append(\"    \").append(XMLHandler.addTagValue(\"isaddresult\",     isaddresult));\r\n\t    retval.append(\"    \").append(XMLHandler.addTagValue(\"filefield\",       filefield));\r\n\t    retval.append(\"    \").append(XMLHandler.addTagValue(\"rownum_field\",    rowNumberField));\n        retval.append(\"    \").append(XMLHandler.addTagValue(\"filename_Field\",  dynamicFilenameField));\r\n        retval.append(\"    \").append(XMLHandler.addTagValue(\"wildcard_Field\",  dynamicWildcardField));  \r\n        retval.append(\"    \").append(XMLHandler.addTagValue(\"include_subfolders\",     dynamicIncludeSubFolders));\r\n        retval.append(\"    \").append(XMLHandler.addTagValue(\"limit\", rowLimit));\r\n        \n\t\tretval.append(\"    <file>\").append(Const.CR);\n\t\t\n\t\tfor (int i = 0; i < fileName.length; i++)\n\t\t{\n\t\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"name\", fileName[i]));\n\t\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"filemask\", fileMask[i]));\n\t\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"file_required\", fileRequired[i]));\r\n\t\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"include_subfolders\", includeSubFolders[i]));\n\t\t}\n\t\tretval.append(\"    <\/file>\").append(Const.CR);\n\n\t\treturn retval.toString();\n\t}","id":39047,"modified_method":"public String getXML()\n\t{\n\t\tStringBuffer retval = new StringBuffer(300);\n\t\t\t\n\t\tretval.append(\"    <filter>\").append(Const.CR);\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"filterfiletype\",  fileTypeFilter.toString()));\n\t\tretval.append(\"    <\/filter>\").append(Const.CR);\n\t\t\r\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"rownum\",          includeRowNumber));\r\n\t    retval.append(\"    \").append(XMLHandler.addTagValue(\"isaddresult\",     isaddresult));\r\n\t    retval.append(\"    \").append(XMLHandler.addTagValue(\"filefield\",       filefield));\r\n\t    retval.append(\"    \").append(XMLHandler.addTagValue(\"rownum_field\",    rowNumberField));\n        retval.append(\"    \").append(XMLHandler.addTagValue(\"filename_Field\",  dynamicFilenameField));\r\n        retval.append(\"    \").append(XMLHandler.addTagValue(\"wildcard_Field\",  dynamicWildcardField));  \r\n        retval.append(\"    \").append(XMLHandler.addTagValue(\"dynamic_include_subfolders\",     dynamicIncludeSubFolders));\r\n        retval.append(\"    \").append(XMLHandler.addTagValue(\"limit\", rowLimit));\r\n        \n\t\tretval.append(\"    <file>\").append(Const.CR);\n\t\t\n\t\tfor (int i = 0; i < fileName.length; i++)\n\t\t{\n\t\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"name\", fileName[i]));\n\t\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"filemask\", fileMask[i]));\n\t\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"file_required\", fileRequired[i]));\r\n\t\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"include_subfolders\", includeSubFolders[i]));\n\t\t}\n\t\tretval.append(\"    <\/file>\").append(Const.CR);\n\n\t\treturn retval.toString();\n\t}","commit_id":"7e4659324427e51ce2b743e60e5efa1e0bf873eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep(Repository rep, ObjectId id_transformation, ObjectId id_step) throws KettleException\n\t{\n\t\ttry\n\t\t{\t\t\t\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"filterfiletype\", fileTypeFilter.toString());\n\t\t\t\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"rownum\",          includeRowNumber);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"isaddresult\",     isaddresult);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"filefield\",          filefield);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"filename_Field\",    dynamicFilenameField);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"wildcard_Field\",    dynamicWildcardField);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"include_subfolders\",    dynamicIncludeSubFolders);\r\n\t\t\t\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"rownum_field\",    rowNumberField);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"limit\",           rowLimit);\r\n\t\t\t\n\t\t\tfor (int i = 0; i < fileName.length; i++)\n\t\t\t{\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"file_name\", fileName[i]);\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"file_mask\", fileMask[i]);\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"file_required\", fileRequired[i]);\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"include_subfolders\", includeSubFolders[i]);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to save step information to the repository for id_step=\" + id_step, e);\n\t\t}\n\t}","id":39048,"modified_method":"public void saveRep(Repository rep, ObjectId id_transformation, ObjectId id_step) throws KettleException\n\t{\n\t\ttry\n\t\t{\t\t\t\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"filterfiletype\", fileTypeFilter.toString());\n\t\t\t\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"rownum\",          includeRowNumber);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"isaddresult\",     isaddresult);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"filefield\",          filefield);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"filename_Field\",    dynamicFilenameField);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"wildcard_Field\",    dynamicWildcardField);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"dynamic_include_subfolders\",    dynamicIncludeSubFolders);\r\n\t\t\t\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"rownum_field\",    rowNumberField);\r\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"limit\",           rowLimit);\r\n\t\t\t\n\t\t\tfor (int i = 0; i < fileName.length; i++)\n\t\t\t{\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"file_name\", fileName[i]);\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"file_mask\", fileMask[i]);\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"file_required\", fileRequired[i]);\r\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"include_subfolders\", includeSubFolders[i]);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to save step information to the repository for id_step=\" + id_step, e);\n\t\t}\n\t}","commit_id":"7e4659324427e51ce2b743e60e5efa1e0bf873eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void readData(Node stepnode) throws KettleXMLException\n\t{\n\t\ttry\n\t\t{\n\t\t\tNode filternode         = XMLHandler.getSubNode(stepnode, \"filter\");\n\t\t\tNode filterfiletypenode = XMLHandler.getSubNode(filternode, \"filterfiletype\");\n\t\t\tfileTypeFilter          = FileInputList.FileTypeFilter.getByName(XMLHandler.getNodeValue(filterfiletypenode));\n\t\t\t\r\n\t\t\tincludeRowNumber  = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"rownum\"));\r\n\t\t\tisaddresult  = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"isaddresult\"));\r\n\t\t\tfilefield  = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"filefield\"));\r\n\t\t\trowNumberField    = XMLHandler.getTagValue(stepnode, \"rownum_field\");\r\n\t\t\tdynamicFilenameField    = XMLHandler.getTagValue(stepnode, \"filename_Field\");\r\n\t\t\tdynamicWildcardField    = XMLHandler.getTagValue(stepnode, \"wildcard_Field\");\r\n\t\t\tdynamicIncludeSubFolders    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"include_subfolders\"));\r\n\t\t\t\r\n\t\t\t// Is there a limit on the number of rows we process?\r\n\t\t\trowLimit = Const.toLong(XMLHandler.getTagValue(stepnode, \"limit\"), 0L);\r\n\t\t\t\n\t\t\tNode filenode = XMLHandler.getSubNode(stepnode, \"file\");\n\t\t\tint nrfiles   = XMLHandler.countNodes(filenode, \"name\");\n\t\t\t\t\n\t\t\tallocate(nrfiles);\n\n\t\t\tfor (int i = 0; i < nrfiles; i++)\n\t\t\t{\n\t\t\t\tNode filenamenode     = XMLHandler.getSubNodeByNr(filenode, \"name\", i);\n\t\t\t\tNode filemasknode     = XMLHandler.getSubNodeByNr(filenode, \"filemask\", i);\n\t\t\t\tNode fileRequirednode = XMLHandler.getSubNodeByNr(filenode, \"file_required\", i);\r\n\t\t\t\tNode includeSubFoldersnode = XMLHandler.getSubNodeByNr(filenode, \"include_subfolders\", i);\n\t\t\t\tfileName[i]           = XMLHandler.getNodeValue(filenamenode);\n\t\t\t\tfileMask[i]           = XMLHandler.getNodeValue(filemasknode);\n\t\t\t\tfileRequired[i]       = XMLHandler.getNodeValue(fileRequirednode);\r\n\t\t\t\tincludeSubFolders[i] = XMLHandler.getNodeValue(includeSubFoldersnode);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\tthrow new KettleXMLException(\"Unable to load step info from XML\", e);\n\t\t}\n\t}","id":39049,"modified_method":"private void readData(Node stepnode) throws KettleXMLException\n\t{\n\t\ttry\n\t\t{\n\t\t\tNode filternode         = XMLHandler.getSubNode(stepnode, \"filter\");\n\t\t\tNode filterfiletypenode = XMLHandler.getSubNode(filternode, \"filterfiletype\");\n\t\t\tfileTypeFilter          = FileInputList.FileTypeFilter.getByName(XMLHandler.getNodeValue(filterfiletypenode));\n\t\t\t\r\n\t\t\tincludeRowNumber  = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"rownum\"));\r\n\t\t\tisaddresult  = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"isaddresult\"));\r\n\t\t\tfilefield  = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"filefield\"));\r\n\t\t\trowNumberField    = XMLHandler.getTagValue(stepnode, \"rownum_field\");\r\n\t\t\tdynamicFilenameField    = XMLHandler.getTagValue(stepnode, \"filename_Field\");\r\n\t\t\tdynamicWildcardField    = XMLHandler.getTagValue(stepnode, \"wildcard_Field\");\r\n\t\t\tdynamicIncludeSubFolders    = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(stepnode, \"dynamic_include_subfolders\"));\r\n\t\t\t\r\n\t\t\t// Is there a limit on the number of rows we process?\r\n\t\t\trowLimit = Const.toLong(XMLHandler.getTagValue(stepnode, \"limit\"), 0L);\r\n\t\t\t\n\t\t\tNode filenode = XMLHandler.getSubNode(stepnode, \"file\");\n\t\t\tint nrfiles   = XMLHandler.countNodes(filenode, \"name\");\n\t\t\t\t\n\t\t\tallocate(nrfiles);\n\n\t\t\tfor (int i = 0; i < nrfiles; i++)\n\t\t\t{\n\t\t\t\tNode filenamenode     = XMLHandler.getSubNodeByNr(filenode, \"name\", i);\n\t\t\t\tNode filemasknode     = XMLHandler.getSubNodeByNr(filenode, \"filemask\", i);\n\t\t\t\tNode fileRequirednode = XMLHandler.getSubNodeByNr(filenode, \"file_required\", i);\r\n\t\t\t\tNode includeSubFoldersnode = XMLHandler.getSubNodeByNr(filenode, \"include_subfolders\", i);\n\t\t\t\tfileName[i]           = XMLHandler.getNodeValue(filenamenode);\n\t\t\t\tfileMask[i]           = XMLHandler.getNodeValue(filemasknode);\n\t\t\t\tfileRequired[i]       = XMLHandler.getNodeValue(fileRequirednode);\r\n\t\t\t\tincludeSubFolders[i] = XMLHandler.getNodeValue(includeSubFoldersnode);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\tthrow new KettleXMLException(\"Unable to load step info from XML\", e);\n\t\t}\n\t}","commit_id":"7e4659324427e51ce2b743e60e5efa1e0bf873eb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\r\n\t * Get the contents of the control file as specified in the meta object\r\n\t * \r\n\t * @param meta\r\n\t *            the meta object to model the control file after\r\n\t * \r\n\t * @return a string containing the control file contents\r\n\t */\n\tpublic String getControlFileContents(OraBulkLoaderMeta meta, RowMetaInterface rm, Object[] r) throws KettleException\n\t{\n\t\tDatabaseMeta dm = meta.getDatabaseMeta();\n\t\tString inputName = \"'\" + environmentSubstitute(meta.getDataFile()) + \"'\";\n\t\t\n\t\tString loadAction = meta.getLoadAction();\n\n\t\tStringBuffer contents = new StringBuffer(500); \n\t\tcontents.append(\"OPTIONS(\").append(Const.CR);\n\t\tcontents.append(\"  ERRORS=\\'\").append(meta.getMaxErrors()).append(\"\\'\").append(Const.CR);\n\n \t    if ( meta.getCommitSize() != 0 && \n \t    \t\t! (meta.isDirectPath() && getStepMeta().getCopies() > 1 ))\n\t\t{\n \t       // For the second part of the above expressions: ROWS is not supported\n \t       // in parallel mode (by sqlldr).\n\t\t   contents.append(\"  , ROWS=\\'\").append(meta.getCommitSize()).append(\"\\'\").append(Const.CR);\n\t\t}\n \t    \n   \t    if ( meta.getBindSize() != 0 )\n   \t    {\n\t\t   contents.append(\"  , BINDSIZE=\\'\").append(meta.getBindSize()).append(\"\\'\").append(Const.CR);\n\t\t}\n\t\n\t    if ( meta.getReadSize() != 0 )\n\t    {\n\t\t   contents.append(\"  , READSIZE=\\'\").append(meta.getReadSize()).append(\"\\'\").append(Const.CR);\n\t\t}\n\t\n \t    contents.append(\")\").append(Const.CR);\n\t\t \t    \n\t\tcontents.append(\"LOAD DATA\").append(Const.CR);\r\n\t\tif ( !Const.isEmpty(meta.getCharacterSetName()) ) {\r\n\t\t\tcontents.append(\"CHARACTERSET \").append(meta.getCharacterSetName()).append(Const.CR);\r\n\t\t}\r\n\t\tif ( !OraBulkLoaderMeta.METHOD_AUTO_CONCURRENT.equals(meta.getLoadMethod()) ||\r\n\t\t\t\t!Const.isEmpty(meta.getAltRecordTerm()) ) {\r\n\t\t\tString infile = inputName;\r\n\t\t\t\r\n\t\t\tif (OraBulkLoaderMeta.METHOD_AUTO_CONCURRENT.equals(meta.getLoadMethod())) {\r\n\t\t\t\tinfile = \"''\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// For concurrent input, data command line argument must be specified\n\t\t\tcontents.append(\"INFILE \").append(infile);\r\n\t\t\tif (!Const.isEmpty(meta.getAltRecordTerm())) {\r\n\t\t\t\tcontents.append(\" \\\"STR x'\").append(\r\n\t\t\t\t\t\tencodeRecordTerminator(meta.getAltRecordTerm(), \r\n\t\t\t\t\t\t\t\tmeta.getEncoding())).append(\"'\\\"\");\t\t\t\t\r\n\t\t\t}\r\n\t\t\tcontents.append(Const.CR);\r\n\t\t}\r\n\t\tcontents.append(\"INTO TABLE \").append(dm.getQuotedSchemaTableCombination(environmentSubstitute(meta.getSchemaName()),\n\t\t            \t\t                                                     environmentSubstitute(meta.getTableName()))).append(\n\t\t                Const.CR).append(loadAction).append(Const.CR).append(\t\t                    \n                        \"FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"'\").append(Const.CR).append(\n                        \"(\");\n\n\t\tString streamFields[] = meta.getFieldStream();\n\t\tString tableFields[] = meta.getFieldTable();\t\t\n\t\tString dateMask[] = meta.getDateMask();\n\t\t\n\t\tif ( streamFields == null || streamFields.length == 0 )\n\t\t{\n\t\t\tthrow new KettleException(\"No fields defined to load to database\");\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < streamFields.length; i++)\n\t\t{\n\t\t\tif ( i!=0 ) contents.append(\", \").append(Const.CR);\n\t\t\tcontents.append(dm.quoteField(tableFields[i]));\n\t\t\t\n\t\t\tint pos = rm.indexOfValue(streamFields[i]);\n\t\t\tif (pos<0)\n\t\t\t{\n\t\t\t\tthrow new KettleException(\"Could not find field \" + \n\t\t\t\t\t\t                  streamFields[i] + \" in stream\");\n\t\t\t}\n\t\t\tValueMetaInterface v = rm.getValueMeta(pos);\n\t\t\tswitch ( v.getType() )\n\t\t\t{\n\t\t\t    case ValueMetaInterface.TYPE_STRING:\n\t\t\t    \tif ( v.getLength() > 255 )\n\t\t\t    \t{\n\t\t\t    \t\tcontents.append(\" CHAR(\").append(v.getLength()).append(\")\");\n\t\t\t    \t}\n\t\t\t    \telse\n\t\t\t    \t{\n\t\t\t    \t\tcontents.append(\" CHAR\");\n\t\t\t    \t}\t\t\t    \t\n\t\t\t    \tbreak;\n\t\t\t    case ValueMetaInterface.TYPE_INTEGER:\n\t\t\t    case ValueMetaInterface.TYPE_NUMBER:\n\t\t\t    case ValueMetaInterface.TYPE_BIGNUMBER:\n\t\t\t    \tbreak;\n\t\t\t    case ValueMetaInterface.TYPE_DATE:\t\t\t    \t\n\t\t\t    \tif ( OraBulkLoaderMeta.DATE_MASK_DATE.equals(dateMask[i]) )\n\t\t\t    \t{\n\t\t\t    \t    contents.append(\" DATE 'yyyy-mm-dd'\");\t\n\t\t\t    \t}\n\t\t\t    \telse if ( OraBulkLoaderMeta.DATE_MASK_DATETIME.equals(dateMask[i]) )\n\t\t\t    \t{\n\t\t\t    \t\tcontents.append(\" TIMESTAMP 'yyyy-mm-dd hh24:mi:ss.ff'\");\n\t\t\t    \t}\t\t\t    \t\n\t\t\t    \telse\n\t\t\t    \t{\n\t\t\t    \t\t// If not specified the default is date.\n\t\t\t    \t\tcontents.append(\" DATE 'yyyy-mm-dd'\");\n\t\t\t    \t}\n\t\t\t    \tbreak;\n\t\t\t    case ValueMetaInterface.TYPE_BINARY:\n\t\t\t    \tcontents.append(\" ENCLOSED BY '<startlob>' AND '<endlob>'\");\n\t\t\t    \tbreak;\n\t\t\t}\n\t\t}\n\t\tcontents.append(\")\");\t\t\n\t\t\n\t\treturn contents.toString();\n\t}","id":39050,"modified_method":"/**\r\n\t * Get the contents of the control file as specified in the meta object\r\n\t * \r\n\t * @param meta\r\n\t *            the meta object to model the control file after\r\n\t * \r\n\t * @return a string containing the control file contents\r\n\t */\n\tpublic String getControlFileContents(OraBulkLoaderMeta meta, RowMetaInterface rm, Object[] r) throws KettleException\n\t{\n\t\tDatabaseMeta dm = meta.getDatabaseMeta();\n\t\tString inputName = \"'\" + environmentSubstitute(meta.getDataFile()) + \"'\";\n\t\t\n\t\tString loadAction = meta.getLoadAction();\n\n\t\tStringBuffer contents = new StringBuffer(500); \n\t\tcontents.append(\"OPTIONS(\").append(Const.CR);\n\t\tcontents.append(\"  ERRORS=\\'\").append(meta.getMaxErrors()).append(\"\\'\").append(Const.CR);\n\n \t    if ( meta.getCommitSizeAsInt(this) != 0 && \n \t    \t\t! (meta.isDirectPath() && getStepMeta().getCopies() > 1 ))\n\t\t{\n \t       // For the second part of the above expressions: ROWS is not supported\n \t       // in parallel mode (by sqlldr).\n\t\t   contents.append(\"  , ROWS=\\'\").append(meta.getCommitSize()).append(\"\\'\").append(Const.CR);\n\t\t}\n \t    \n   \t    if ( meta.getBindSizeAsInt(this) != 0 )\n   \t    {\n\t\t   contents.append(\"  , BINDSIZE=\\'\").append(meta.getBindSize()).append(\"\\'\").append(Const.CR);\n\t\t}\n\t\n\t    if ( meta.getReadSizeAsInt(this) != 0 )\n\t    {\n\t\t   contents.append(\"  , READSIZE=\\'\").append(meta.getReadSize()).append(\"\\'\").append(Const.CR);\n\t\t}\n\t\n \t    contents.append(\")\").append(Const.CR);\n\t\t \t    \n\t\tcontents.append(\"LOAD DATA\").append(Const.CR);\r\n\t\tif ( !Const.isEmpty(meta.getCharacterSetName()) ) {\r\n\t\t\tcontents.append(\"CHARACTERSET \").append(meta.getCharacterSetName()).append(Const.CR);\r\n\t\t}\r\n\t\tif ( !OraBulkLoaderMeta.METHOD_AUTO_CONCURRENT.equals(meta.getLoadMethod()) ||\r\n\t\t\t\t!Const.isEmpty(meta.getAltRecordTerm()) ) {\r\n\t\t\tString infile = inputName;\r\n\t\t\t\r\n\t\t\tif (OraBulkLoaderMeta.METHOD_AUTO_CONCURRENT.equals(meta.getLoadMethod())) {\r\n\t\t\t\tinfile = \"''\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// For concurrent input, data command line argument must be specified\n\t\t\tcontents.append(\"INFILE \").append(infile);\r\n\t\t\tif (!Const.isEmpty(meta.getAltRecordTerm())) {\r\n\t\t\t\tcontents.append(\" \\\"STR x'\").append(\r\n\t\t\t\t\t\tencodeRecordTerminator(meta.getAltRecordTerm(), \r\n\t\t\t\t\t\t\t\tmeta.getEncoding())).append(\"'\\\"\");\t\t\t\t\r\n\t\t\t}\r\n\t\t\tcontents.append(Const.CR);\r\n\t\t}\r\n\t\tcontents.append(\"INTO TABLE \").append(dm.getQuotedSchemaTableCombination(environmentSubstitute(meta.getSchemaName()),\n\t\t            \t\t                                                     environmentSubstitute(meta.getTableName()))).append(\n\t\t                Const.CR).append(loadAction).append(Const.CR).append(\t\t                    \n                        \"FIELDS TERMINATED BY ',' ENCLOSED BY '\\\"'\").append(Const.CR).append(\n                        \"(\");\n\n\t\tString streamFields[] = meta.getFieldStream();\n\t\tString tableFields[] = meta.getFieldTable();\t\t\n\t\tString dateMask[] = meta.getDateMask();\n\t\t\n\t\tif ( streamFields == null || streamFields.length == 0 )\n\t\t{\n\t\t\tthrow new KettleException(\"No fields defined to load to database\");\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < streamFields.length; i++)\n\t\t{\n\t\t\tif ( i!=0 ) contents.append(\", \").append(Const.CR);\n\t\t\tcontents.append(dm.quoteField(tableFields[i]));\n\t\t\t\n\t\t\tint pos = rm.indexOfValue(streamFields[i]);\n\t\t\tif (pos<0)\n\t\t\t{\n\t\t\t\tthrow new KettleException(\"Could not find field \" + \n\t\t\t\t\t\t                  streamFields[i] + \" in stream\");\n\t\t\t}\n\t\t\tValueMetaInterface v = rm.getValueMeta(pos);\n\t\t\tswitch ( v.getType() )\n\t\t\t{\n\t\t\t    case ValueMetaInterface.TYPE_STRING:\n\t\t\t    \tif ( v.getLength() > 255 )\n\t\t\t    \t{\n\t\t\t    \t\tcontents.append(\" CHAR(\").append(v.getLength()).append(\")\");\n\t\t\t    \t}\n\t\t\t    \telse\n\t\t\t    \t{\n\t\t\t    \t\tcontents.append(\" CHAR\");\n\t\t\t    \t}\t\t\t    \t\n\t\t\t    \tbreak;\n\t\t\t    case ValueMetaInterface.TYPE_INTEGER:\n\t\t\t    case ValueMetaInterface.TYPE_NUMBER:\n\t\t\t    case ValueMetaInterface.TYPE_BIGNUMBER:\n\t\t\t    \tbreak;\n\t\t\t    case ValueMetaInterface.TYPE_DATE:\t\t\t    \t\n\t\t\t    \tif ( OraBulkLoaderMeta.DATE_MASK_DATE.equals(dateMask[i]) )\n\t\t\t    \t{\n\t\t\t    \t    contents.append(\" DATE 'yyyy-mm-dd'\");\t\n\t\t\t    \t}\n\t\t\t    \telse if ( OraBulkLoaderMeta.DATE_MASK_DATETIME.equals(dateMask[i]) )\n\t\t\t    \t{\n\t\t\t    \t\tcontents.append(\" TIMESTAMP 'yyyy-mm-dd hh24:mi:ss.ff'\");\n\t\t\t    \t}\t\t\t    \t\n\t\t\t    \telse\n\t\t\t    \t{\n\t\t\t    \t\t// If not specified the default is date.\n\t\t\t    \t\tcontents.append(\" DATE 'yyyy-mm-dd'\");\n\t\t\t    \t}\n\t\t\t    \tbreak;\n\t\t\t    case ValueMetaInterface.TYPE_BINARY:\n\t\t\t    \tcontents.append(\" ENCLOSED BY '<startlob>' AND '<endlob>'\");\n\t\t\t    \tbreak;\n\t\t\t}\n\t\t}\n\t\tcontents.append(\")\");\t\t\n\t\t\n\t\treturn contents.toString();\n\t}","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void setTableFieldCombo(){\r\n\t\tRunnable fieldLoader = new Runnable() {\r\n\t\t\tpublic void run() {\r\n\t\t\t\t//clear\r\n\t\t\t\tfor (int i = 0; i < tableFieldColumns.size(); i++) {\r\n\t\t\t\t\tColumnInfo colInfo = (ColumnInfo) tableFieldColumns.get(i);\r\n\t\t\t\t\tcolInfo.setComboValues(new String[] {});\r\n\t\t\t\t}\r\n\t\t\t\tif (!Const.isEmpty(wTable.getText())) {\r\n\t\t\t\t\tDatabaseMeta ci = transMeta.findDatabase(wConnection.getText());\r\n\t\t\t\t\tif (ci != null) {\r\n\t\t\t\t\t\tDatabase db = new Database(loggingObject, ci);\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tdb.connect();\r\n\r\n\t\t\t\t\t\t\tString schemaTable = ci\t.getQuotedSchemaTableCombination(transMeta.environmentSubstitute(wSchema\r\n\t\t\t\t\t\t\t\t\t\t\t.getText()), transMeta.environmentSubstitute(wTable.getText()));\r\n\t\t\t\t\t\t\tRowMetaInterface r = db.getTableFields(schemaTable);\r\n\t\t\t\t\t\t\tif (null != r) {\r\n\t\t\t\t\t\t\t\tString[] fieldNames = r.getFieldNames();\r\n\t\t\t\t\t\t\t\tif (null != fieldNames) {\r\n\t\t\t\t\t\t\t\t\tfor (int i = 0; i < tableFieldColumns.size(); i++) {\r\n\t\t\t\t\t\t\t\t\t\tColumnInfo colInfo = (ColumnInfo) tableFieldColumns.get(i);\r\n\t\t\t\t\t\t\t\t\t\tcolInfo.setComboValues(fieldNames);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (Exception e) {\r\n\t\t\t\t\t\t\tfor (int i = 0; i < tableFieldColumns.size(); i++) {\r\n\t\t\t\t\t\t\t\tColumnInfo colInfo = (ColumnInfo) tableFieldColumns\t.get(i);\r\n\t\t\t\t\t\t\t\tcolInfo.setComboValues(new String[] {});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// ignore any errors here. drop downs will not be\r\n\t\t\t\t\t\t\t// filled, but no problem for the user\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tshell.getDisplay().asyncExec(fieldLoader);\r\n\t}","id":39051,"modified_method":"private void setTableFieldCombo(){\r\n\t\tRunnable fieldLoader = new Runnable() {\r\n\t\t\tpublic void run() {\r\n\t\t\t  if(wTable == null || wTable.isDisposed()) {\r\n          return;\r\n        }\r\n        String table = wTable.getText();\r\n\t\t\t  \r\n\t\t\t\t//clear\r\n\t\t\t\tfor (int i = 0; i < tableFieldColumns.size(); i++) {\r\n\t\t\t\t\tColumnInfo colInfo = (ColumnInfo) tableFieldColumns.get(i);\r\n\t\t\t\t\tcolInfo.setComboValues(new String[] {});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!Const.isEmpty(table)) {\r\n\t\t\t\t\tDatabaseMeta ci = transMeta.findDatabase(wConnection.getText());\r\n\t\t\t\t\tif (ci != null) {\r\n\t\t\t\t\t\tDatabase db = new Database(loggingObject, ci);\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tdb.connect();\r\n\r\n\t\t\t\t\t\t\tString schemaTable = ci\t.getQuotedSchemaTableCombination(transMeta.environmentSubstitute(wSchema\r\n\t\t\t\t\t\t\t\t\t\t\t.getText()), transMeta.environmentSubstitute(table));\r\n\t\t\t\t\t\t\tRowMetaInterface r = db.getTableFields(schemaTable);\r\n\t\t\t\t\t\t\tif (null != r) {\r\n\t\t\t\t\t\t\t\tString[] fieldNames = r.getFieldNames();\r\n\t\t\t\t\t\t\t\tif (null != fieldNames) {\r\n\t\t\t\t\t\t\t\t\tfor (int i = 0; i < tableFieldColumns.size(); i++) {\r\n\t\t\t\t\t\t\t\t\t\tColumnInfo colInfo = (ColumnInfo) tableFieldColumns.get(i);\r\n\t\t\t\t\t\t\t\t\t\tcolInfo.setComboValues(fieldNames);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (Exception e) {\r\n\t\t\t\t\t\t\tfor (int i = 0; i < tableFieldColumns.size(); i++) {\r\n\t\t\t\t\t\t\t\tColumnInfo colInfo = (ColumnInfo) tableFieldColumns\t.get(i);\r\n\t\t\t\t\t\t\t\tcolInfo.setComboValues(new String[] {});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// ignore any errors here. drop downs will not be\r\n\t\t\t\t\t\t\t// filled, but no problem for the user\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t};\r\n\t\tshell.getDisplay().asyncExec(fieldLoader);\r\n\t}","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void getInfo(OraBulkLoaderMeta inf)\n\t{\n\t\tint nrfields = wReturn.nrNonEmpty();\n\n\t\tinf.allocate(nrfields);\n\n\t\tinf.setMaxErrors( Const.toInt(wMaxErrors.getText(), 0) );\n\t\tinf.setCommitSize( Const.toInt(wCommit.getText(), 0) );\n\t\tinf.setBindSize( Const.toInt(wBindSize.getText(), 0) );\n\t\tinf.setReadSize( Const.toInt(wReadSize.getText(), 0) );\n\t\tinf.setDbNameOverride(wDbNameOverride.getText());\n\n\t\tif(log.isDebug()) logDebug(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Log.FoundFields\", \"\" + nrfields)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\tfor (int i = 0; i < nrfields; i++)\n\t\t{\n\t\t\tTableItem item = wReturn.getNonEmpty(i);\n\t\t\tinf.getFieldTable()[i] = item.getText(1);\n\t\t\tinf.getFieldStream()[i] = item.getText(2);\n\t\t\tif ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DateMask.Label\").equals(item.getText(3)) )\n \t\t\t    inf.getDateMask()[i] = OraBulkLoaderMeta.DATE_MASK_DATE;\n\t\t\telse if ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DateTimeMask.Label\").equals(item.getText(3)) )\n\t\t\t\tinf.getDateMask()[i] = OraBulkLoaderMeta.DATE_MASK_DATETIME;\n\t\t\telse inf.getDateMask()[i] = \"\";\n\t\t}\n\n        inf.setSchemaName( wSchema.getText() );\n\t\tinf.setTableName( wTable.getText() );\n\t\tinf.setDatabaseMeta(  transMeta.findDatabase(wConnection.getText()) );\n\t\tinf.setSqlldr( wSqlldr.getText() );\n\t\tinf.setControlFile( wControlFile.getText() );\n\t\tinf.setDataFile( wDataFile.getText() );\n\t\tinf.setLogFile( wLogFile.getText() );\n\t\tinf.setBadFile( wBadFile.getText() );\n\t\tinf.setDiscardFile( wDiscardFile.getText() );\n\t\tinf.setEncoding( wEncoding.getText() );\r\n\t\tinf.setCharacterSetName( wCharacterSetName.getText() );\r\n\t\tinf.setAltRecordTerm( wAltRecordTerm.getText() );\n\t\tinf.setDirectPath( wDirectPath.getSelection() );\n\t\tinf.setEraseFiles( wEraseFiles.getSelection() );\r\n\t\tinf.setFailOnError( wFailOnError.getSelection() );\r\n\t\tinf.setFailOnWarning( wFailOnWarning.getSelection() );\n\n\t\t/*\n\t\t * Set the loadmethod\n\t\t */\n\t\tString method = wLoadMethod.getText();\n\t\tif ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AutoConcLoadMethod.Label\").equals(method) ) \n\t\t{\n\t\t\tinf.setLoadMethod(OraBulkLoaderMeta.METHOD_AUTO_CONCURRENT);\n\t\t}\n\t\telse if ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AutoEndLoadMethod.Label\").equals(method) ) \n\t\t{\n\t\t\tinf.setLoadMethod(OraBulkLoaderMeta.METHOD_AUTO_END);\n\t\t}\n\t\telse if ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ManualLoadMethod.Label\").equals(method) ) \n\t\t{\n\t\t\tinf.setLoadMethod(OraBulkLoaderMeta.METHOD_MANUAL);\n\t\t}\n\t\telse  \n\t\t{\n\t\t\tif(log.isDebug()) logDebug(\"Internal error: load_method set to default 'auto concurrent', value found '\" + method + \"'.\"); //$NON-NLS-1$\n\t\t\tinf.setLoadMethod(OraBulkLoaderMeta.METHOD_AUTO_END);\n\t\t}\t\n\t\t\n\t\t/*\n\t\t * Set the loadaction \n\t\t */\n\t\tString action = wLoadAction.getText();\n\t\tif ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AppendLoadAction.Label\").equals(action) ) \n\t\t{\n\t\t\tinf.setLoadAction(OraBulkLoaderMeta.ACTION_APPEND);\n\t\t}\n\t\telse if ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.InsertLoadAction.Label\").equals(action) )\n\t\t{\n\t\t\tinf.setLoadAction(OraBulkLoaderMeta.ACTION_INSERT);\n\t\t}\n\t\telse if ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ReplaceLoadAction.Label\").equals(action) )\n\t\t{\n\t\t\tinf.setLoadAction(OraBulkLoaderMeta.ACTION_REPLACE);\n\t\t}\n\t\telse if ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.TruncateLoadAction.Label\").equals(action) )\n\t\t{\n\t\t\tinf.setLoadAction(OraBulkLoaderMeta.ACTION_TRUNCATE);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(log.isDebug()) logDebug(\"Internal error: load_action set to default 'append', value found '\" + action + \"'.\"); //$NON-NLS-1$\n\t\t\tinf.setLoadAction(OraBulkLoaderMeta.ACTION_APPEND);\t\n\t\t}\n\n\t\tstepname = wStepname.getText(); // return value\n\t}","id":39052,"modified_method":"private void getInfo(OraBulkLoaderMeta inf)\n\t{\n\t\tint nrfields = wReturn.nrNonEmpty();\n\n\t\tinf.allocate(nrfields);\n\n\t\tinf.setMaxErrors( wMaxErrors.getText());\n\t\tinf.setCommitSize( wCommit.getText());\n\t\tinf.setBindSize( wBindSize.getText());\n\t\tinf.setReadSize( wReadSize.getText());\n\t\tinf.setDbNameOverride(wDbNameOverride.getText());\n\n\t\tif(log.isDebug()) logDebug(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Log.FoundFields\", \"\" + nrfields)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\tfor (int i = 0; i < nrfields; i++)\n\t\t{\n\t\t\tTableItem item = wReturn.getNonEmpty(i);\n\t\t\tinf.getFieldTable()[i] = item.getText(1);\n\t\t\tinf.getFieldStream()[i] = item.getText(2);\n\t\t\tif ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DateMask.Label\").equals(item.getText(3)) )\n \t\t\t    inf.getDateMask()[i] = OraBulkLoaderMeta.DATE_MASK_DATE;\n\t\t\telse if ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DateTimeMask.Label\").equals(item.getText(3)) )\n\t\t\t\tinf.getDateMask()[i] = OraBulkLoaderMeta.DATE_MASK_DATETIME;\n\t\t\telse inf.getDateMask()[i] = \"\";\n\t\t}\n\n        inf.setSchemaName( wSchema.getText() );\n\t\tinf.setTableName( wTable.getText() );\n\t\tinf.setDatabaseMeta(  transMeta.findDatabase(wConnection.getText()) );\n\t\tinf.setSqlldr( wSqlldr.getText() );\n\t\tinf.setControlFile( wControlFile.getText() );\n\t\tinf.setDataFile( wDataFile.getText() );\n\t\tinf.setLogFile( wLogFile.getText() );\n\t\tinf.setBadFile( wBadFile.getText() );\n\t\tinf.setDiscardFile( wDiscardFile.getText() );\n\t\tinf.setEncoding( wEncoding.getText() );\r\n\t\tinf.setCharacterSetName( wCharacterSetName.getText() );\r\n\t\tinf.setAltRecordTerm( wAltRecordTerm.getText() );\n\t\tinf.setDirectPath( wDirectPath.getSelection() );\n\t\tinf.setEraseFiles( wEraseFiles.getSelection() );\r\n\t\tinf.setFailOnError( wFailOnError.getSelection() );\r\n\t\tinf.setFailOnWarning( wFailOnWarning.getSelection() );\n\n\t\t/*\n\t\t * Set the loadmethod\n\t\t */\n\t\tString method = wLoadMethod.getText();\n\t\tif ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AutoConcLoadMethod.Label\").equals(method) ) \n\t\t{\n\t\t\tinf.setLoadMethod(OraBulkLoaderMeta.METHOD_AUTO_CONCURRENT);\n\t\t}\n\t\telse if ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AutoEndLoadMethod.Label\").equals(method) ) \n\t\t{\n\t\t\tinf.setLoadMethod(OraBulkLoaderMeta.METHOD_AUTO_END);\n\t\t}\n\t\telse if ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ManualLoadMethod.Label\").equals(method) ) \n\t\t{\n\t\t\tinf.setLoadMethod(OraBulkLoaderMeta.METHOD_MANUAL);\n\t\t}\n\t\telse  \n\t\t{\n\t\t\tif(log.isDebug()) logDebug(\"Internal error: load_method set to default 'auto concurrent', value found '\" + method + \"'.\"); //$NON-NLS-1$\n\t\t\tinf.setLoadMethod(OraBulkLoaderMeta.METHOD_AUTO_END);\n\t\t}\t\n\t\t\n\t\t/*\n\t\t * Set the loadaction \n\t\t */\n\t\tString action = wLoadAction.getText();\n\t\tif ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AppendLoadAction.Label\").equals(action) ) \n\t\t{\n\t\t\tinf.setLoadAction(OraBulkLoaderMeta.ACTION_APPEND);\n\t\t}\n\t\telse if ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.InsertLoadAction.Label\").equals(action) )\n\t\t{\n\t\t\tinf.setLoadAction(OraBulkLoaderMeta.ACTION_INSERT);\n\t\t}\n\t\telse if ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ReplaceLoadAction.Label\").equals(action) )\n\t\t{\n\t\t\tinf.setLoadAction(OraBulkLoaderMeta.ACTION_REPLACE);\n\t\t}\n\t\telse if ( BaseMessages.getString(PKG, \"OraBulkLoaderDialog.TruncateLoadAction.Label\").equals(action) )\n\t\t{\n\t\t\tinf.setLoadAction(OraBulkLoaderMeta.ACTION_TRUNCATE);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(log.isDebug()) logDebug(\"Internal error: load_action set to default 'append', value found '\" + action + \"'.\"); //$NON-NLS-1$\n\t\t\tinf.setLoadAction(OraBulkLoaderMeta.ACTION_APPEND);\t\n\t\t}\n\n\t\tstepname = wStepname.getText(); // return value\n\t}","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public int getBindSize() {\n\t\treturn bindSize;\n\t}","id":39053,"modified_method":"public String getBindSize() {\n\t\treturn bindSize;\n\t}","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void setReadSize(int readSize) {\n\t\tthis.readSize = readSize;\n\t}","id":39054,"modified_method":"public void setReadSize(String readSize) {\n\t\tthis.readSize = readSize;\n\t}","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void readData(Node stepnode, List<? extends SharedObjectInterface> databases)\n\t\tthrows KettleXMLException\n\t{\n\t\ttry\n\t\t{\n\t\t\tString csize, bsize, rsize, serror;\n\t\t\tint nrvalues;\n\n\t\t\tString con     = XMLHandler.getTagValue(stepnode, \"connection\");   //$NON-NLS-1$\n\t\t\tdatabaseMeta   = DatabaseMeta.findDatabase(databases, con);\n\t\t\t\n\t\t\tcsize          = XMLHandler.getTagValue(stepnode, \"commit\");       //$NON-NLS-1$\n\t\t\tcommitSize     = Const.toInt(csize, 0);\n\t\t\tbsize          = XMLHandler.getTagValue(stepnode, \"bind_size\");    //$NON-NLS-1$\n\t\t\tbindSize       = Const.toInt(bsize, 0);\n\t\t\trsize          = XMLHandler.getTagValue(stepnode, \"read_size\");    //$NON-NLS-1$\n\t\t\treadSize       = Const.toInt(rsize, 0);\n\t\t\tserror         = XMLHandler.getTagValue(stepnode, \"errors\");       //$NON-NLS-1$\n\t\t\tmaxErrors      = Const.toInt(serror, 50);      // default to 50.               \n\n            schemaName     = XMLHandler.getTagValue(stepnode, \"schema\");       //$NON-NLS-1$\n\t\t\ttableName      = XMLHandler.getTagValue(stepnode, \"table\");        //$NON-NLS-1$\n\t\t\t\n\t\t\tloadMethod     = XMLHandler.getTagValue(stepnode, \"load_method\");  //$NON-NLS-1$\n\t\t\tloadAction     = XMLHandler.getTagValue(stepnode, \"load_action\");  //$NON-NLS-1$\t\t\t\n\t\t\tsqlldr         = XMLHandler.getTagValue(stepnode, \"sqlldr\");       //$NON-NLS-1$\n\t\t\tcontrolFile    = XMLHandler.getTagValue(stepnode, \"control_file\"); //$NON-NLS-1$\n\t\t\tdataFile       = XMLHandler.getTagValue(stepnode, \"data_file\");    //$NON-NLS-1$\n\t\t\tlogFile        = XMLHandler.getTagValue(stepnode, \"log_file\");     //$NON-NLS-1$\n\t\t\tbadFile        = XMLHandler.getTagValue(stepnode, \"bad_file\");     //$NON-NLS-1$\n\t\t\tdiscardFile    = XMLHandler.getTagValue(stepnode, \"discard_file\"); //$NON-NLS-1$\n\t\t\tdirectPath     = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(stepnode, \"direct_path\")); //$NON-NLS-1$\n\t\t\teraseFiles     = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(stepnode, \"erase_files\")); //$NON-NLS-1$\n\t\t\tencoding       = XMLHandler.getTagValue(stepnode, \"encoding\");         //$NON-NLS-1$\n\t\t\tdbNameOverride = XMLHandler.getTagValue(stepnode, \"dbname_override\");  //$NON-NLS-1$#\r\n\t\t\t\r\n\t\t\tcharacterSetName = XMLHandler.getTagValue(stepnode, \"character_set\");                     //$NON-NLS-1$\r\n\t\t\tfailOnWarning    = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(stepnode, \"fail_on_warning\")); //$NON-NLS-1$\r\n\t\t\tfailOnError      = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(stepnode, \"fail_on_error\"));   //$NON-NLS-1$\r\n\t\t\taltRecordTerm    = XMLHandler.getTagValue(stepnode, \"alt_rec_term\");                           //$NON-NLS-1$\n\n\t\t\tnrvalues       = XMLHandler.countNodes(stepnode, \"mapping\");      //$NON-NLS-1$\n\t\t\tallocate(nrvalues);\n\n\t\t\tfor (int i=0;i<nrvalues;i++)\n\t\t\t{\n\t\t\t\tNode vnode = XMLHandler.getSubNodeByNr(stepnode, \"mapping\", i);    //$NON-NLS-1$\n\n\t\t\t\tfieldTable[i]      = XMLHandler.getTagValue(vnode, \"stream_name\"); //$NON-NLS-1$\n\t\t\t\tfieldStream[i]     = XMLHandler.getTagValue(vnode, \"field_name\");  //$NON-NLS-1$\n\t\t\t\tif (fieldStream[i]==null) fieldStream[i]=fieldTable[i];            // default: the same name!\n\t\t\t\tString locDateMask = XMLHandler.getTagValue(vnode, \"date_mask\");   //$NON-NLS-1$\n\t\t\t\tif(locDateMask==null) {\n\t\t\t\t\tdateMask[i] = \"\";\n\t\t\t\t} else\n                {\n                    if (OraBulkLoaderMeta.DATE_MASK_DATE.equals(locDateMask) ||\n                        OraBulkLoaderMeta.DATE_MASK_DATETIME.equals(locDateMask) )\n                    {\n                        dateMask[i] = locDateMask;\n                    }\n                    else\n                    {\n                    \tdateMask[i] = \"\";\n                    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tthrow new KettleXMLException(BaseMessages.getString(PKG, \"OraBulkLoaderMeta.Exception.UnableToReadStepInfoFromXML\"), e); //$NON-NLS-1$\n\t\t}\n\t}","id":39055,"modified_method":"private void readData(Node stepnode, List<? extends SharedObjectInterface> databases)\n\t\tthrows KettleXMLException\n\t{\n\t\ttry\n\t\t{\n\t\t\tString csize, bsize, rsize, serror;\n\t\t\tint nrvalues;\n\n\t\t\tString con     = XMLHandler.getTagValue(stepnode, \"connection\");   //$NON-NLS-1$\n\t\t\tdatabaseMeta   = DatabaseMeta.findDatabase(databases, con);\n\t\t\t\n\t\t\tcommitSize          = XMLHandler.getTagValue(stepnode, \"commit\");       //$NON-NLS-1$\r\n\t\t\tif(StringUtils.isEmpty(commitSize)) {\r\n\t\t\t  commitSize = Integer.toString(DEFAULT_COMMIT_SIZE);\r\n\t\t\t}\n\n\t\t\tbindSize          = XMLHandler.getTagValue(stepnode, \"bind_size\");    //$NON-NLS-1$\r\n\t\t\tif(StringUtils.isEmpty(bindSize)) {\r\n        bindSize = Integer.toString(DEFAULT_BIND_SIZE);\r\n      }\n\t\t\t\r\n\t\t\treadSize       = XMLHandler.getTagValue(stepnode, \"read_size\");    //$NON-NLS-1$\r\n\t\t\tif(StringUtils.isEmpty(readSize)) {\r\n        readSize = Integer.toString(DEFAULT_READ_SIZE);\r\n      }\n\r\n\t\t\tmaxErrors         = XMLHandler.getTagValue(stepnode, \"errors\");       //$NON-NLS-1$\r\n\t\t\tif(StringUtils.isEmpty(maxErrors)) {\r\n        maxErrors = Integer.toString(DEFAULT_MAX_ERRORS);\r\n      }\r\n\n            schemaName     = XMLHandler.getTagValue(stepnode, \"schema\");       //$NON-NLS-1$\n\t\t\ttableName      = XMLHandler.getTagValue(stepnode, \"table\");        //$NON-NLS-1$\n\t\t\t\n\t\t\tloadMethod     = XMLHandler.getTagValue(stepnode, \"load_method\");  //$NON-NLS-1$\n\t\t\tloadAction     = XMLHandler.getTagValue(stepnode, \"load_action\");  //$NON-NLS-1$\t\t\t\n\t\t\tsqlldr         = XMLHandler.getTagValue(stepnode, \"sqlldr\");       //$NON-NLS-1$\n\t\t\tcontrolFile    = XMLHandler.getTagValue(stepnode, \"control_file\"); //$NON-NLS-1$\n\t\t\tdataFile       = XMLHandler.getTagValue(stepnode, \"data_file\");    //$NON-NLS-1$\n\t\t\tlogFile        = XMLHandler.getTagValue(stepnode, \"log_file\");     //$NON-NLS-1$\n\t\t\tbadFile        = XMLHandler.getTagValue(stepnode, \"bad_file\");     //$NON-NLS-1$\n\t\t\tdiscardFile    = XMLHandler.getTagValue(stepnode, \"discard_file\"); //$NON-NLS-1$\n\t\t\tdirectPath     = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(stepnode, \"direct_path\")); //$NON-NLS-1$\n\t\t\teraseFiles     = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(stepnode, \"erase_files\")); //$NON-NLS-1$\n\t\t\tencoding       = XMLHandler.getTagValue(stepnode, \"encoding\");         //$NON-NLS-1$\n\t\t\tdbNameOverride = XMLHandler.getTagValue(stepnode, \"dbname_override\");  //$NON-NLS-1$#\r\n\t\t\t\r\n\t\t\tcharacterSetName = XMLHandler.getTagValue(stepnode, \"character_set\");                     //$NON-NLS-1$\r\n\t\t\tfailOnWarning    = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(stepnode, \"fail_on_warning\")); //$NON-NLS-1$\r\n\t\t\tfailOnError      = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(stepnode, \"fail_on_error\"));   //$NON-NLS-1$\r\n\t\t\taltRecordTerm    = XMLHandler.getTagValue(stepnode, \"alt_rec_term\");                           //$NON-NLS-1$\n\n\t\t\tnrvalues       = XMLHandler.countNodes(stepnode, \"mapping\");      //$NON-NLS-1$\n\t\t\tallocate(nrvalues);\n\n\t\t\tfor (int i=0;i<nrvalues;i++)\n\t\t\t{\n\t\t\t\tNode vnode = XMLHandler.getSubNodeByNr(stepnode, \"mapping\", i);    //$NON-NLS-1$\n\n\t\t\t\tfieldTable[i]      = XMLHandler.getTagValue(vnode, \"stream_name\"); //$NON-NLS-1$\n\t\t\t\tfieldStream[i]     = XMLHandler.getTagValue(vnode, \"field_name\");  //$NON-NLS-1$\n\t\t\t\tif (fieldStream[i]==null) fieldStream[i]=fieldTable[i];            // default: the same name!\n\t\t\t\tString locDateMask = XMLHandler.getTagValue(vnode, \"date_mask\");   //$NON-NLS-1$\n\t\t\t\tif(locDateMask==null) {\n\t\t\t\t\tdateMask[i] = \"\";\n\t\t\t\t} else\n                {\n                    if (OraBulkLoaderMeta.DATE_MASK_DATE.equals(locDateMask) ||\n                        OraBulkLoaderMeta.DATE_MASK_DATETIME.equals(locDateMask) )\n                    {\n                        dateMask[i] = locDateMask;\n                    }\n                    else\n                    {\n                    \tdateMask[i] = \"\";\n                    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tthrow new KettleXMLException(BaseMessages.getString(PKG, \"OraBulkLoaderMeta.Exception.UnableToReadStepInfoFromXML\"), e); //$NON-NLS-1$\n\t\t}\n\t}","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void setDefault()\n\t{\n\t\tfieldTable   = null;\n\t\tdatabaseMeta = null;\n\t\tcommitSize   = 100000;            // The bigger the better for Oracle \n\t\tbindSize     = 0;                 // Use platform default         \n\t\treadSize     = 0;                 // Use platform default\n\t\tmaxErrors    = 50;\n        schemaName   = \"\";                //$NON-NLS-1$\n\t\ttableName    = BaseMessages.getString(PKG, \"OraBulkLoaderMeta.DefaultTableName\"); //$NON-NLS-1$\n\t\tloadMethod   = METHOD_AUTO_END;\n\t\tloadAction   = ACTION_APPEND;\n\t\tsqlldr       = \"sqlldr\";                              //$NON-NLS-1$\n\t\tcontrolFile  = \"control${Internal.Step.CopyNr}.cfg\";  //$NON-NLS-1$\n\t\tdataFile     = \"load${Internal.Step.CopyNr}.dat\";     //$NON-NLS-1$\n\t\tlogFile      = \"\";                                    //$NON-NLS-1$\n\t\tbadFile      = \"\";                                    //$NON-NLS-1$\n\t\tdiscardFile  = \"\";                                    //$NON-NLS-1$\n\t\tencoding     = \"\";                                    //$NON-NLS-1$\n\t\tdbNameOverride = \"\";\n\t\t\t\n\t\tdirectPath   = false;\n\t\teraseFiles   = true;\r\n\t\t\r\n\t\tcharacterSetName   = \"\"; //$NON-NLS-1$\r\n\t\tfailOnWarning      = false;\r\n\t\tfailOnError        = false;\r\n\t\taltRecordTerm      = \"\"; //$NON-NLS-1$\n\n\t\tint nrvalues = 0;\n\t\tallocate(nrvalues);\n\t}","id":39056,"modified_method":"public void setDefault()\n\t{\n\t\tfieldTable   = null;\n\t\tdatabaseMeta = null;\n\t\tcommitSize   = Integer.toString(DEFAULT_COMMIT_SIZE);\n\t\tbindSize     = Integer.toString(DEFAULT_BIND_SIZE);                 // Use platform default         \n\t\treadSize     = Integer.toString(DEFAULT_READ_SIZE);                 // Use platform default\n\t\tmaxErrors    = Integer.toString(DEFAULT_MAX_ERRORS);\n        schemaName   = \"\";                //$NON-NLS-1$\n\t\ttableName    = BaseMessages.getString(PKG, \"OraBulkLoaderMeta.DefaultTableName\"); //$NON-NLS-1$\n\t\tloadMethod   = METHOD_AUTO_END;\n\t\tloadAction   = ACTION_APPEND;\n\t\tsqlldr       = \"sqlldr\";                              //$NON-NLS-1$\n\t\tcontrolFile  = \"control${Internal.Step.CopyNr}.cfg\";  //$NON-NLS-1$\n\t\tdataFile     = \"load${Internal.Step.CopyNr}.dat\";     //$NON-NLS-1$\n\t\tlogFile      = \"\";                                    //$NON-NLS-1$\n\t\tbadFile      = \"\";                                    //$NON-NLS-1$\n\t\tdiscardFile  = \"\";                                    //$NON-NLS-1$\n\t\tencoding     = \"\";                                    //$NON-NLS-1$\n\t\tdbNameOverride = \"\";\n\t\t\t\n\t\tdirectPath   = false;\n\t\teraseFiles   = true;\r\n\t\t\r\n\t\tcharacterSetName   = \"\"; //$NON-NLS-1$\r\n\t\tfailOnWarning      = false;\r\n\t\tfailOnError        = false;\r\n\t\taltRecordTerm      = \"\"; //$NON-NLS-1$\n\n\t\tint nrvalues = 0;\n\t\tallocate(nrvalues);\n\t}","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n     * @return Returns the commitSize.\n     */\n    public int getCommitSize()\n    {\n        return commitSize;\n    }","id":39057,"modified_method":"/**\n     * @return Returns the commitSize.\n     */\n    public String getCommitSize()\n    {\n        return commitSize;\n    }","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void setMaxErrors(int maxErrors) {\n\t\tthis.maxErrors = maxErrors;\n\t}","id":39058,"modified_method":"public void setMaxErrors(String maxErrors) {\n\t\tthis.maxErrors = maxErrors;\n\t}","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public int getReadSize() {\n\t\treturn readSize;\n\t}","id":39059,"modified_method":"public String getReadSize() {\n\t\treturn readSize;\n\t}","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n     * @param commitSize The commitSize to set.\n     */\n    public void setCommitSize(int commitSize)\n    {\n        this.commitSize = commitSize;\n    }","id":39060,"modified_method":"/**\n     * @param commitSize The commitSize to set.\n     */\n    public void setCommitSize(String commitSize)\n    {\n        this.commitSize = commitSize;\n    }","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void readRep(Repository rep, ObjectId id_step, List<DatabaseMeta> databases, Map<String, Counter> counters)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tdatabaseMeta = rep.loadDatabaseMetaFromStepAttribute(id_step, \"id_connection\", databases);  //$NON-NLS-1$\r\n\n\t\t\tcommitSize     = (int)rep.getStepAttributeInteger(id_step, \"commit\");         //$NON-NLS-1$\n\t\t\tbindSize       = (int)rep.getStepAttributeInteger(id_step, \"bind_size\");      //$NON-NLS-1$\n\t\t\treadSize       = (int)rep.getStepAttributeInteger(id_step, \"read_size\");      //$NON-NLS-1$\n\t\t\tmaxErrors      = (int)rep.getStepAttributeInteger(id_step, \"errors\");         //$NON-NLS-1$\n            schemaName     =      rep.getStepAttributeString(id_step,  \"schema\");         //$NON-NLS-1$\n\t\t\ttableName      =      rep.getStepAttributeString(id_step,  \"table\");          //$NON-NLS-1$\n\t\t\tloadMethod     =      rep.getStepAttributeString(id_step,  \"load_method\");    //$NON-NLS-1$\n\t\t\tloadAction     =      rep.getStepAttributeString(id_step,  \"load_action\");    //$NON-NLS-1$\n\t\t\tsqlldr         =      rep.getStepAttributeString(id_step,  \"sqlldr\");         //$NON-NLS-1$\t\t\t\n\t\t\tcontrolFile    =      rep.getStepAttributeString(id_step,  \"control_file\");   //$NON-NLS-1$\n\t\t\tdataFile       =      rep.getStepAttributeString(id_step,  \"data_file\");      //$NON-NLS-1$\n\t\t\tlogFile        =      rep.getStepAttributeString(id_step,  \"log_file\");       //$NON-NLS-1$\n\t\t\tbadFile        =      rep.getStepAttributeString(id_step,  \"bad_file\");       //$NON-NLS-1$\n\t\t\tdiscardFile    =      rep.getStepAttributeString(id_step,  \"discard_file\");   //$NON-NLS-1$\n\t\t\t\n\t\t\tdirectPath     =      rep.getStepAttributeBoolean(id_step, \"direct_path\");    //$NON-NLS-1$\n\t\t\teraseFiles     =      rep.getStepAttributeBoolean(id_step, \"erase_files\");    //$NON-NLS-1$\n\t\t\tencoding       =      rep.getStepAttributeString(id_step,  \"encoding\");       //$NON-NLS-1$\n\t\t\tdbNameOverride =      rep.getStepAttributeString(id_step,  \"dbname_override\");//$NON-NLS-1$\r\n\t\t\t\r\n\t\t\tcharacterSetName =    rep.getStepAttributeString(id_step,  \"character_set\"); //$NON-NLS-1$\r\n\t\t\tfailOnWarning    = \t  rep.getStepAttributeBoolean(id_step, \"fail_on_warning\");    //$NON-NLS-1$\r\n\t\t\tfailOnError      =    rep.getStepAttributeBoolean(id_step, \"fail_on_error\");      //$NON-NLS-1$\r\n\t\t\taltRecordTerm    =    rep.getStepAttributeString(id_step,  \"alt_rec_term\");       //$NON-NLS-1$\n\t\t\t\n\t\t\tint nrvalues = rep.countNrStepAttributes(id_step, \"stream_name\");             //$NON-NLS-1$\n\n\t\t\tallocate(nrvalues);\n\n\t\t\tfor (int i=0;i<nrvalues;i++)\n\t\t\t{\n\t\t\t\tfieldTable[i]  = rep.getStepAttributeString(id_step, i, \"stream_name\");   //$NON-NLS-1$\n\t\t\t\tfieldStream[i] = rep.getStepAttributeString(id_step, i, \"field_name\");    //$NON-NLS-1$\n\t\t\t\tdateMask[i]    = rep.getStepAttributeString(id_step, i, \"date_mask\");     //$NON-NLS-1$\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tthrow new KettleException(BaseMessages.getString(PKG, \"OraBulkLoaderMeta.Exception.UnexpectedErrorReadingStepInfoFromRepository\"), e); //$NON-NLS-1$\n\t\t}\n\t}","id":39061,"modified_method":"public void readRep(Repository rep, ObjectId id_step, List<DatabaseMeta> databases, Map<String, Counter> counters)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tdatabaseMeta = rep.loadDatabaseMetaFromStepAttribute(id_step, \"id_connection\", databases);  //$NON-NLS-1$\r\n\n\t\t\tcommitSize     =      rep.getStepAttributeString(id_step, \"commit\");         //$NON-NLS-1$\n\t\t\tbindSize       =      rep.getStepAttributeString(id_step, \"bind_size\");      //$NON-NLS-1$\n\t\t\treadSize       =      rep.getStepAttributeString(id_step, \"read_size\");      //$NON-NLS-1$\n\t\t\tmaxErrors      =      rep.getStepAttributeString(id_step, \"errors\");         //$NON-NLS-1$\n            schemaName     =      rep.getStepAttributeString(id_step,  \"schema\");         //$NON-NLS-1$\n\t\t\ttableName      =      rep.getStepAttributeString(id_step,  \"table\");          //$NON-NLS-1$\n\t\t\tloadMethod     =      rep.getStepAttributeString(id_step,  \"load_method\");    //$NON-NLS-1$\n\t\t\tloadAction     =      rep.getStepAttributeString(id_step,  \"load_action\");    //$NON-NLS-1$\n\t\t\tsqlldr         =      rep.getStepAttributeString(id_step,  \"sqlldr\");         //$NON-NLS-1$\t\t\t\n\t\t\tcontrolFile    =      rep.getStepAttributeString(id_step,  \"control_file\");   //$NON-NLS-1$\n\t\t\tdataFile       =      rep.getStepAttributeString(id_step,  \"data_file\");      //$NON-NLS-1$\n\t\t\tlogFile        =      rep.getStepAttributeString(id_step,  \"log_file\");       //$NON-NLS-1$\n\t\t\tbadFile        =      rep.getStepAttributeString(id_step,  \"bad_file\");       //$NON-NLS-1$\n\t\t\tdiscardFile    =      rep.getStepAttributeString(id_step,  \"discard_file\");   //$NON-NLS-1$\n\t\t\t\n\t\t\tdirectPath     =      rep.getStepAttributeBoolean(id_step, \"direct_path\");    //$NON-NLS-1$\n\t\t\teraseFiles     =      rep.getStepAttributeBoolean(id_step, \"erase_files\");    //$NON-NLS-1$\n\t\t\tencoding       =      rep.getStepAttributeString(id_step,  \"encoding\");       //$NON-NLS-1$\n\t\t\tdbNameOverride =      rep.getStepAttributeString(id_step,  \"dbname_override\");//$NON-NLS-1$\r\n\t\t\t\r\n\t\t\tcharacterSetName =    rep.getStepAttributeString(id_step,  \"character_set\"); //$NON-NLS-1$\r\n\t\t\tfailOnWarning    = \t  rep.getStepAttributeBoolean(id_step, \"fail_on_warning\");    //$NON-NLS-1$\r\n\t\t\tfailOnError      =    rep.getStepAttributeBoolean(id_step, \"fail_on_error\");      //$NON-NLS-1$\r\n\t\t\taltRecordTerm    =    rep.getStepAttributeString(id_step,  \"alt_rec_term\");       //$NON-NLS-1$\n\t\t\t\n\t\t\tint nrvalues = rep.countNrStepAttributes(id_step, \"stream_name\");             //$NON-NLS-1$\n\n\t\t\tallocate(nrvalues);\n\n\t\t\tfor (int i=0;i<nrvalues;i++)\n\t\t\t{\n\t\t\t\tfieldTable[i]  = rep.getStepAttributeString(id_step, i, \"stream_name\");   //$NON-NLS-1$\n\t\t\t\tfieldStream[i] = rep.getStepAttributeString(id_step, i, \"field_name\");    //$NON-NLS-1$\n\t\t\t\tdateMask[i]    = rep.getStepAttributeString(id_step, i, \"date_mask\");     //$NON-NLS-1$\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tthrow new KettleException(BaseMessages.getString(PKG, \"OraBulkLoaderMeta.Exception.UnexpectedErrorReadingStepInfoFromRepository\"), e); //$NON-NLS-1$\n\t\t}\n\t}","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void setBindSize(int bindSize) {\n\t\tthis.bindSize = bindSize;\n\t}","id":39062,"modified_method":"public void setBindSize(String bindSize) {\n\t\tthis.bindSize = bindSize;\n\t}","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public int getMaxErrors() {\n\t\treturn maxErrors;\n\t}","id":39063,"modified_method":"public String getMaxErrors() {\n\t\treturn maxErrors;\n\t}","commit_id":"210d5df8aed0fdad7b49b5cd12ea3556eaa27eab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void readRep(Repository rep, ObjectId id_step, List<DatabaseMeta> databases, Map<String, Counter> counters)\r\n            throws KettleException\r\n\r\n    {\r\n        try\r\n        {\r\n            script = rep.getStepAttributeString(id_step, \"script\"); //$NON-NLS-1$\r\n            matcher = rep.getStepAttributeString(id_step, \"matcher\"); //$NON-NLS-1$\r\n            resultfieldname = rep.getStepAttributeString(id_step, \"resultfieldname\"); //$NON-NLS-1$\r\n            usevar = rep.getStepAttributeBoolean(id_step, \"usevar\");\r\n            allowcapturegroups = rep.getStepAttributeBoolean(id_step, \"allowcapturegroups\");\r\n            canoneq = rep.getStepAttributeBoolean(id_step, \"canoneq\");\r\n            caseinsensitive = rep.getStepAttributeBoolean(id_step, \"caseinsensitive\");\r\n            comment = rep.getStepAttributeBoolean(id_step, \"comment\");\r\n            multiline = rep.getStepAttributeBoolean(id_step, \"multiline\");\r\n            dotall = rep.getStepAttributeBoolean(id_step, \"dotall\");\r\n            unicode = rep.getStepAttributeBoolean(id_step, \"unicode\");\r\n            unix = rep.getStepAttributeBoolean(id_step, \"unix\");\r\n\r\n            int nrfields = rep.countNrStepAttributes(id_step, \"field_name\");\r\n\r\n            allocate(nrfields);\r\n\r\n            for (int i = 0; i < nrfields; i++)\r\n            {\r\n                fieldName[i] = rep.getStepAttributeString(id_step, i, \"field_name\");\r\n                fieldType[i] = ValueMeta.getType(rep.getStepAttributeString(id_step, i, \"field_type\"));\r\n\r\n                fieldFormat[i] = rep.getStepAttributeString(id_step, i, \"field_format\");\r\n                fieldGroup[i] = rep.getStepAttributeString(id_step, i, \"field_group\"); //$NON-NLS-1$\r\n                fieldDecimal[i] = rep.getStepAttributeString(id_step, i, \"field_decimal\"); //$NON-NLS-1$\r\n                fieldLength[i] = (int) rep.getStepAttributeInteger(id_step, i, \"field_length\"); //$NON-NLS-1$\r\n                fieldPrecision[i] = (int) rep.getStepAttributeInteger(id_step, i, \"field_precision\"); //$NON-NLS-1$\r\n                fieldNullIf[i] = rep.getStepAttributeString(id_step, i, \"field_nullif\"); //$NON-NLS-1$\r\n                fieldIfNull[i] = rep.getStepAttributeString(id_step, i, \"field_ifnull\"); //$NON-NLS-1$\r\n                fieldTrimType[i] = (int) rep.getStepAttributeInteger(id_step, i, \"field_trimtype\"); //$NON-NLS-1$\r\n            }\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            throw new KettleException(\r\n                    BaseMessages.getString(PKG, \"RegexEvalMeta.Exception.UnexpectedErrorInReadingStepInfo\"), e); //$NON-NLS-1$\r\n        }\r\n    }","id":39064,"modified_method":"public void readRep(Repository rep, ObjectId id_step, List<DatabaseMeta> databases, Map<String, Counter> counters)\r\n            throws KettleException\r\n\r\n    {\r\n        try\r\n        {\r\n            script = rep.getStepAttributeString(id_step, \"script\"); //$NON-NLS-1$\r\n            matcher = rep.getStepAttributeString(id_step, \"matcher\"); //$NON-NLS-1$\r\n            resultfieldname = rep.getStepAttributeString(id_step, \"resultfieldname\"); //$NON-NLS-1$\r\n            usevar = rep.getStepAttributeBoolean(id_step, \"usevar\");\r\n            allowcapturegroups = rep.getStepAttributeBoolean(id_step, \"allowcapturegroups\");\r\n            canoneq = rep.getStepAttributeBoolean(id_step, \"canoneq\");\r\n            caseinsensitive = rep.getStepAttributeBoolean(id_step, \"caseinsensitive\");\r\n            comment = rep.getStepAttributeBoolean(id_step, \"comment\");\r\n            multiline = rep.getStepAttributeBoolean(id_step, \"multiline\");\r\n            dotall = rep.getStepAttributeBoolean(id_step, \"dotall\");\r\n            unicode = rep.getStepAttributeBoolean(id_step, \"unicode\");\r\n            unix = rep.getStepAttributeBoolean(id_step, \"unix\");\r\n\r\n            int nrfields = rep.countNrStepAttributes(id_step, \"field_name\");\r\n\r\n            allocate(nrfields);\r\n\r\n            for (int i = 0; i < nrfields; i++)\r\n            {\r\n                fieldName[i] = rep.getStepAttributeString(id_step, i, \"field_name\");\r\n                fieldType[i] = ValueMeta.getType(rep.getStepAttributeString(id_step, i, \"field_type\"));\r\n\r\n                fieldFormat[i] = rep.getStepAttributeString(id_step, i, \"field_format\");\r\n                fieldGroup[i] = rep.getStepAttributeString(id_step, i, \"field_group\"); //$NON-NLS-1$\r\n                fieldDecimal[i] = rep.getStepAttributeString(id_step, i, \"field_decimal\"); //$NON-NLS-1$\r\n                fieldLength[i] = (int) rep.getStepAttributeInteger(id_step, i, \"field_length\"); //$NON-NLS-1$\r\n                fieldPrecision[i] = (int) rep.getStepAttributeInteger(id_step, i, \"field_precision\"); //$NON-NLS-1$\r\n                fieldNullIf[i] = rep.getStepAttributeString(id_step, i, \"field_nullif\"); //$NON-NLS-1$\r\n                fieldIfNull[i] = rep.getStepAttributeString(id_step, i, \"field_ifnull\"); //$NON-NLS-1$\r\n                fieldTrimType[i] = ValueMeta.getTrimTypeByCode(rep.getStepAttributeString(id_step, i, \"field_trimtype\"));  //$NON-NLS-1$\r\n            }\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            throw new KettleException(\r\n                    BaseMessages.getString(PKG, \"RegexEvalMeta.Exception.UnexpectedErrorInReadingStepInfo\"), e); //$NON-NLS-1$\r\n        }\r\n    }","commit_id":"982f6b65bef0a7e5756ef0a80930713a5b22fc44","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * Get the contents of the control file as specified in the meta object\n\t * \n\t * @param meta the meta object to model the control file after\n\t * \n\t * @return a string containing the control file contents\n\t */\n\tpublic String getControlFileContents(GPLoadMeta meta, RowMetaInterface rm, Object[] r) throws KettleException\n\t{\n\t\tDatabaseMeta dm = meta.getDatabaseMeta();\n\n\t\tStringBuffer contents = new StringBuffer(500);\n\t\t\n\t\t// Source: GP Admin Guide 3.3.6, page 635:\n\t\t//\n\t\tcontents.append(\"VERSION: 1.0.0.1\").append(Const.CR);\n        contents.append(\"DATABASE: \").append(environmentSubstitute(dm.getDatabaseName())).append(Const.CR);\n        contents.append(\"USER: \").append(environmentSubstitute(dm.getUsername())).append(Const.CR);\n        contents.append(\"HOST: \").append(environmentSubstitute(dm.getHostname())).append(Const.CR);\n        contents.append(\"PORT: \").append(environmentSubstitute(dm.getDatabasePortNumberString())).append(Const.CR);\n        contents.append(\"GPLOAD:\").append(Const.CR);\n        contents.append(\"   INPUT:\").append(Const.CR);\n        \n        contents.append(\"    - SOURCE: \").append(Const.CR);\n\n        //  Add a LOCAL_HOSTS section\n        //  We first check to see if the array has any elements\n        //  if so we proceed with the string building - if not we do not add LOCAL_HOSTNAME section.\n        String[] localHosts = meta.getLocalHosts();\n        String stringLocalHosts = null;\n        if (localHosts.length > 0) {\n           StringBuilder sbLocalHosts = new StringBuilder();\n           String trimmedAndSubstitutedLocalHost;\n           for (String localHost: localHosts) {\n              trimmedAndSubstitutedLocalHost = environmentSubstitute(localHost.trim());\n              if (!Const.isEmpty(trimmedAndSubstitutedLocalHost)) {\n                 sbLocalHosts.append(\"          - \").append(trimmedAndSubstitutedLocalHost).append(Const.CR);\n              }\n           }\n           stringLocalHosts = sbLocalHosts.toString();\n           if (!Const.isEmpty(stringLocalHosts)) {\n              contents.append(\"      - LOCAL_HOSTNAME: \").append(Const.CR).append(stringLocalHosts);\n           }\n        }\n        \n        //  Add a PORT section if we have a port\n        if (!Const.isEmpty(meta.getMasterPort())) {\n           String substritutedAndTrimmedMasterPort = environmentSubstitute(meta.getMasterPort().trim());\n           if (!Const.isEmpty(substritutedAndTrimmedMasterPort)) {\n              contents.append(\"      - PORT: \").append(substritutedAndTrimmedMasterPort).append(Const.CR);\n           }\n        }\n        \n        // TODO: Stream to a temporary file and then bulk load OR optionally stream to a named pipe (like MySQL bulk loader)\n        // TODO: allow LOCAL_HOSTNAME/PORT/PORT_RANGE to be specified\n        //\n        \n        \n        //  If we don't have a local hosts list built\n        if (Const.isEmpty(stringLocalHosts)) {\n           \n           // then we surround the file name with brackets\n           String inputName = \"'\" + environmentSubstitute(meta.getDataFile()) + \"'\";\n           contents.append(\"        FILE: \").append('[').append(inputName).append(']').append(Const.CR);\n        }\n        else {\n           \n           // \n           contents.append(\"        FILE: \").append(Const.CR).append(\"          - \").append(environmentSubstitute(meta.getDataFile())).append(Const.CR);\n        }\n        \n        // COLUMNS is optional, takes the existing fields in the table\n        // contents.append(\"    - COLUMNS:\").append(Const.CR);\n        \n        // See also page 155 for formatting information & escaping\n        //\n        contents.append(\"    - FORMAT: TEXT\").append(Const.CR);\n        contents.append(\"    - DELIMITER: '\").append(environmentSubstitute(meta.getDelimiter())).append(\"'\").append(Const.CR);\n        \n        // TODO: implement escape character, null_as\n        //\n        // contents.append(\"    - ESCAPE: '\").append(environmentSubstitute(meta.getEscapeCharacter)).append(\"'\").append(Const.CR);\n        \n        contents.append(\"    - QUOTE: '\").append(environmentSubstitute(meta.getEnclosure())).append(\"'\").append(Const.CR);\n        contents.append(\"    - HEADER: FALSE\").append(Const.CR);\n        \n        // TODO: implement database encoding support\n        // contents.append(\"    - ENCODING: \").append(Const.CR);\n        \n        contents.append(\"    - ERROR_LIMIT: \").append(meta.getMaxErrors()).append(Const.CR);\n        \n        if (!Const.isEmpty(meta.getErrorTableName())) {\n           contents.append(\"    - ERROR_TABLE: \").append(meta.getErrorTableName()).append(Const.CR);\n        }\n        \n        contents.append(\"   OUTPUT:\").append(Const.CR);\n\n        String tableName = dm.getQuotedSchemaTableCombination(\n            environmentSubstitute(meta.getSchemaName()),\n            environmentSubstitute(meta.getTableName()));\n\n        contents.append(\"    - TABLE: \").append(tableName).append(Const.CR);\n        contents.append(\"    - MODE: \").append(meta.getLoadAction()).append(Const.CR);\n\n        // TODO: add support for MATCH_COLUMNS, UPDATE_COLUMN, UPDATE_CONDITION, MAPPING\n        // TODO: add suport for BEFORE and AFTER SQL\n\n        /*\n           String streamFields[] = meta.getFieldStream();\n    \t\tString tableFields[] = meta.getFieldTable();\n    \n    \t\tif ( streamFields == null || streamFields.length == 0 )\n    \t\t{\n    \t\t\tthrow new KettleException(\"No fields defined to load to database\");\n    \t\t}\n    \n    \t\tfor (int i = 0; i < streamFields.length; i++)\n    \t\t{\n    \t\t\tif ( i!=0 ) contents.append(\", \");\n    \t\t\tcontents.append(dm.quoteField(tableFields[i]));\n            }\n        */\n\n\t\treturn contents.toString();\n\t}","id":39065,"modified_method":"/**\n\t * Get the contents of the control file as specified in the meta object\n\t * \n\t * @param meta the meta object to model the control file after\n\t * \n\t * @return a string containing the control file contents\n\t */\n\tpublic String getControlFileContents(GPLoadMeta meta, RowMetaInterface rm, Object[] r) throws KettleException\t{\n\n      String tableFields[] = meta.getFieldTable();\n      boolean matchColumn[] = meta.getMatchColumn();\n      boolean updateColumn[] = meta.getUpdateColumn();\n      \n      //  TODO:  All this validation could be placed in it's own method,\n      \n      //  table name validation \n      DatabaseMeta databaseMeta = meta.getDatabaseMeta();\n      String schemaName = meta.getSchemaName();\n      String targetTablename = meta.getTableName();\n      \n      //  TODO:  What is schema name to a GreenPlum database?\n      //  Testing has been with an empty schema name\n      //  We will set it to an empty string if it is null\n      //  If it is not null then we will process what it is\n      if (schemaName == null) {\n         schemaName = \"\";\n      }\n      \n      if (targetTablename == null) {\n         throw new KettleException(BaseMessages.getString(PKG, \"GPLoad.Exception.TargetTableNameMissing\"));\n      }\n      targetTablename = environmentSubstitute(targetTablename).trim();\n      if (Const.isEmpty(targetTablename)) {\n         throw new KettleException(BaseMessages.getString(PKG, \"GPLoad.Exception.TargetTableNameMissing\"));\n      }\n      \n      targetTablename = databaseMeta.getQuotedSchemaTableCombination(\n          environmentSubstitute(meta.getSchemaName()),\n          environmentSubstitute(meta.getTableName()));\n      \n      String loadAction = meta.getLoadAction();\n\t         \n      //  match and update column verification\n      if (loadAction.equalsIgnoreCase(GPLoadMeta.ACTION_MERGE) || loadAction.equalsIgnoreCase(GPLoadMeta.ACTION_UPDATE)) {\n         \n         //  throw an exception if we don't have match columns\n         if (matchColumn == null) {\n            throw new KettleException(BaseMessages.getString(PKG, \"GPLoad.Exception.MatchColumnsNeeded\"));\n         }\n         \n         if (!meta.hasMatchColumn()) {\n            throw new KettleException(BaseMessages.getString(PKG, \"GPLoad.Exception.MatchColumnsNeeded\"));\n         }\n         \n         //  throw an exception if we don't have any update columns\n         if (updateColumn == null) {\n            throw new KettleException(BaseMessages.getString(PKG, \"GPLoad.Exception.UpdateColumnsNeeded\"));\n         }\n         \n         if (!meta.hasUpdateColumn()) {\n            throw new KettleException(BaseMessages.getString(PKG, \"GPLoad.Exception.UpdateColumnsNeeded\"));\n         }    \n      }\n\n      //  data file validation\n      String dataFilename = meta.getDataFile();\n      if (!Const.isEmpty(dataFilename)) {\n         dataFilename = environmentSubstitute(dataFilename).trim();\n      }\n      if (Const.isEmpty(dataFilename)) {\n         throw new KettleException(BaseMessages.getString(PKG, \"GPload.Exception.DataFileMissing\"));\n      }\n\n      //  delimiter validation\n      String delimiter = meta.getDelimiter();\n      if (!Const.isEmpty(delimiter)) {\n         delimiter = environmentSubstitute(delimiter).trim();\n      }\n      if (Const.isEmpty(delimiter)) {\n         throw new KettleException(BaseMessages.getString(PKG, \"GPload.Exception.DelimiterMissing\"));\n      }\n      \n      //  Now we start building the contents\n\t\tStringBuffer contents = new StringBuffer(1000);\n\t\t\n\t\t// Source: GP Admin Guide 3.3.6, page 635:\n\t\tcontents.append(GPLoad.GPLOAD_YAML_VERSION).append(Const.CR);\n      contents.append(\"DATABASE: \").append(environmentSubstitute(databaseMeta.getDatabaseName())).append(Const.CR);\n      contents.append(\"USER: \").append(environmentSubstitute(databaseMeta.getUsername())).append(Const.CR);\n      contents.append(\"HOST: \").append(environmentSubstitute(databaseMeta.getHostname())).append(Const.CR);\n      contents.append(\"PORT: \").append(environmentSubstitute(databaseMeta.getDatabasePortNumberString())).append(Const.CR);\n      contents.append(\"GPLOAD:\").append(Const.CR);\n      contents.append(GPLoad.INDENT).append(\"INPUT: \").append(Const.CR);\n      contents.append(GPLoad.INDENT).append(\"- SOURCE: \").append(Const.CR);\n\n      //  Add a LOCAL_HOSTS section\n      //  We first check to see if the array has any elements\n      //  if so we proceed with the string building - if not we do not add LOCAL_HOSTNAME section.\n      String[] localHosts = meta.getLocalHosts();\n      String stringLocalHosts = null;\n      if (!Const.isEmpty(localHosts)) {\n         StringBuilder sbLocalHosts = new StringBuilder();\n         String trimmedAndSubstitutedLocalHost;\n         for (String localHost: localHosts) {\n            trimmedAndSubstitutedLocalHost = environmentSubstitute(localHost.trim());\n            if (!Const.isEmpty(trimmedAndSubstitutedLocalHost)) {\n                sbLocalHosts.append(GPLoad.INDENT).append(GPLoad.INDENT).append(GPLoad.SPACE_PADDED_DASH).append(trimmedAndSubstitutedLocalHost).append(Const.CR);\n            }\n         }\n         stringLocalHosts = sbLocalHosts.toString();\n         if (!Const.isEmpty(stringLocalHosts)) {\n            contents.append(GPLoad.INDENT).append(\"- LOCAL_HOSTNAME: \").append(Const.CR).append(stringLocalHosts);\n         }\n      }\n        \n      //  Add a PORT section if we have a port\n      String masterPort = meta.getMasterPort();\n      if (!Const.isEmpty(masterPort)) {\n         masterPort = environmentSubstitute(meta.getMasterPort().trim());\n         if (!Const.isEmpty(masterPort)) {\n            contents.append(GPLoad.INDENT).append(\"- PORT: \").append(masterPort).append(Const.CR);\n         }\n      }\n        \n      // TODO: Stream to a temporary file and then bulk load OR optionally stream to a named pipe (like MySQL bulk loader)\n      dataFilename = GPLoad.SINGLE_QUOTE + environmentSubstitute(dataFilename) + GPLoad.SINGLE_QUOTE;\n      contents.append(GPLoad.INDENT).append(GPLoad.INDENT).append(\"FILE: \").append(GPLoad.OPEN_BRACKET).append(dataFilename).append(GPLoad.CLOSE_BRACKET).append(Const.CR);\n       \n      //  columns\n      if (tableFields.length > 0) {\n         contents.append(GPLoad.INDENT).append(\"- COLUMNS: \").append(Const.CR);\n         \n         for (String columnName: tableFields) {     \n            contents.append(GPLoad.INDENT).append(GPLoad.INDENT).append(GPLoad.SPACE_PADDED_DASH).append(databaseMeta.quoteField(columnName)).append(GPLoad.COLON).append(Const.CR);\n         }\n      }\n      \n      // See also page 155 for formatting information & escaping\n      // delimiter validation should have been perfomed\n      contents.append(GPLoad.INDENT).append(\"- FORMAT: TEXT\").append(Const.CR);\n      contents.append(GPLoad.INDENT).append(\"- DELIMITER: \").append(GPLoad.SINGLE_QUOTE).append(delimiter).append(GPLoad.SINGLE_QUOTE).append(Const.CR);\n        \n      // TODO: implement escape character, null_as\n      // TODO: test what happens when a single quote is specified- can we specify a single quiote within doubole quotes then?\n      String enclosure = meta.getEnclosure();\n      \n      //  For enclosure we do a null check.  !Const.isEmpty will be true if the string is empty.\n      //  it is ok to have an empty string\n      if (enclosure != null) {\n         enclosure = environmentSubstitute(meta.getEnclosure());\n      }\n      else {\n         enclosure = \"\";\n      }\n      contents.append(GPLoad.INDENT).append(\"- QUOTE: \").append(GPLoad.SINGLE_QUOTE).append(enclosure).append(GPLoad.SINGLE_QUOTE).append(Const.CR);\n      contents.append(GPLoad.INDENT).append(\"- HEADER: FALSE\").append(Const.CR);\n        \n      // TODO: implement database encoding support\n      // contents.append(\"    - ENCODING: \").append(Const.CR);\n      \n      //  Max errors\n      String maxErrors = meta.getMaxErrors();\n      if (maxErrors == null) {\n         maxErrors = GPLoadMeta.MAX_ERRORS_DEFAULT;\n      }\n      else {\n         maxErrors = environmentSubstitute(maxErrors);\n         try {\n            if (Integer.valueOf(maxErrors) < 0) {\n               throw new KettleException(BaseMessages.getString(PKG, \"GPLoad.Exception.MaxErrorsInvalid\"));\n            }\n         }\n         catch (NumberFormatException nfe) {\n            throw new KettleException(BaseMessages.getString(PKG, \"GPLoad.Exception.MaxErrorsInvalid\"));\n         }\n      }\n\n      contents.append(GPLoad.INDENT).append(\"- ERROR_LIMIT: \").append(meta.getMaxErrors()).append(Const.CR);\n        \n      String errorTableName = meta.getErrorTableName(); \n      if (!Const.isEmpty(errorTableName)) {\n         errorTableName = environmentSubstitute(errorTableName).trim();\n         if (!Const.isEmpty(errorTableName)) {\n            contents.append(GPLoad.INDENT).append(\"- ERROR_TABLE: \").append(meta.getErrorTableName()).append(Const.CR);\n         }\n      }\n        \n      //--------------  OUTPUT section\n      \n      contents.append(GPLoad.INDENT).append(\"OUTPUT:\").append(Const.CR);\n\n      //  TODO: not too sure this has to be done\n      String tableName = databaseMeta.getQuotedSchemaTableCombination(\n          environmentSubstitute(meta.getSchemaName()),\n          environmentSubstitute(meta.getTableName()));\n\n      contents.append(GPLoad.INDENT).append(\"- TABLE: \").append(tableName).append(Const.CR);\n      contents.append(GPLoad.INDENT).append(\"- MODE: \").append(meta.getLoadAction()).append(Const.CR);\n      \n      // TODO: add support for MATCH_COLUMNS, UPDATE_COLUMN, UPDATE_CONDITION, MAPPING\n      // TODO: add support for BEFORE and AFTER SQL\n\n      //  if we have match columns then add the specification\n    \tif (meta.hasMatchColumn()) {\n    \t   contents.append(GPLoad.INDENT).append(\"- MATCH_COLUMNS: \").append(Const.CR);\n    \t\n    \t   for (int i=0; i < matchColumn.length; i++) {\n    \t      if (matchColumn[i]) {\n       \t\t   contents.append(GPLoad.INDENT).append(GPLoad.INDENT).append(GPLoad.SPACE_PADDED_DASH).append(databaseMeta.quoteField(tableFields[i])).append(Const.CR);\n       \t   }\n    \t   }\n    \t}\n    \t\n    \t//  if we have update columns then add the specification\n    \tif (meta.hasUpdateColumn()) {\n         contents.append(GPLoad.INDENT).append(\"- UPDATE_COLUMNS: \").append(Const.CR);\n         \n         for (int i=0; i < updateColumn.length; i++) {\n            if (updateColumn[i]) {\n               contents.append(GPLoad.INDENT).append(GPLoad.INDENT).append(GPLoad.SPACE_PADDED_DASH).append(databaseMeta.quoteField(tableFields[i])).append(Const.CR);\n            }\n         }\n    \t}\n    \t\n\t\treturn contents.toString();\n\t}","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void writeLine(RowMetaInterface mi, Object row[]) throws KettleException\n\t{\n        if ( first )\n        {\n            first = false;\n     \n            enclosure = meta.getEnclosure();\n            \n            // Setup up the fields we need to take for each of the rows\n            // as this speeds up processing.\n            fieldNumbers=new int[meta.getFieldStream().length];\n\t\t\tfor (int i=0;i<fieldNumbers.length;i++) \n\t\t\t{\n\t\t\t\tfieldNumbers[i]=mi.indexOfValue(meta.getFieldStream()[i]);\n\t\t\t\tif (fieldNumbers[i]<0)\n\t\t\t\t{\n\t\t\t\t\tthrow new KettleException(\"Could not find field \" + \n\t\t\t\t\t\t\t                  meta.getFieldStream()[i] + \" in stream\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsdfDate = new SimpleDateFormat(\"yyyy-MM-dd\");\n\t\t\tsdfDateTime = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\");\n        }\n        \n        // Write the data to the output\n        ValueMetaInterface v = null;\n        int number = 0;\n\t\tfor (int i=0;i<fieldNumbers.length;i++) \n\t\t{\n\t\t\tif ( i!=0 ) output.print(\",\");\n\t\t\tnumber = fieldNumbers[i];\n\t\t\tv = mi.getValueMeta(number);\n\t\t\tif ( row[number] == null)\n\t\t\t{\n\t\t\t\t// TODO (SB): special check for null in case of Strings.\n\t\t\t\toutput.print(enclosure);\n\t\t\t\toutput.print(enclosure);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tswitch ( v.getType() )\n\t\t\t\t{\n\t\t\t\tcase ValueMetaInterface.TYPE_STRING:\n\t\t\t\t\tString s = mi.getString(row, number);\n\t\t\t\t\tif ( s.indexOf(enclosure) >= 0 )\n\t\t\t\t\t\ts = createEscapedString(s, enclosure);\n\t\t\t\t\toutput.print(enclosure);\n\t\t\t\t\toutput.print(s);\n\t\t\t\t\toutput.print(enclosure);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ValueMetaInterface.TYPE_INTEGER:\n\t\t\t\t\tLong l = mi.getInteger(row, number);\n\t\t\t\t\tif (meta.getEncloseNumbers()) {\n\t\t\t\t\t   output.print(enclosure);\n\t\t\t\t\t   output.print(l);\n\t\t\t\t\t   output.print(enclosure);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t   output.print(l);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ValueMetaInterface.TYPE_NUMBER:\n\t\t\t\t\tDouble d = mi.getNumber(row, number);\n\t\t\t\t\tif (meta.getEncloseNumbers()) {\n   \t\t\t\t\toutput.print(enclosure);\n\t   \t\t\t\toutput.print(d);\n\t\t   \t\t\toutput.print(enclosure);\n\t\t\t\t\t}\n\t\t   \t\telse {\n\t\t   \t\t   output.print(d);\n\t\t   \t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ValueMetaInterface.TYPE_BIGNUMBER:\n\t\t\t\t\tBigDecimal bd = mi.getBigNumber(row, number);\n\t\t\t\t\tif (meta.getEncloseNumbers()) {\n   \t\t\t\t\toutput.print(enclosure);\n\t     \t\t\t\toutput.print(bd);\n\t\t\t   \t\toutput.print(enclosure);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t   output.print(bd);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ValueMetaInterface.TYPE_DATE:\n\t\t\t\t\tDate dt = mi.getDate(row, number);\n\t\t\t\t\toutput.print(enclosure);\n\t\t\t\t\tString mask = meta.getDateMask()[i];\n\t\t\t\t\tif ( GPLoadMeta.DATE_MASK_DATETIME.equals(mask))\n\t\t\t\t\t{\n\t\t\t\t\t\toutput.print(sdfDateTime.format(dt));\t\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// Default is date format\n\t\t\t\t\t\toutput.print(sdfDate.format(dt));\n\t\t\t\t\t}\t\t\t\t\t   \n\t\t\t\t\toutput.print(enclosure);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ValueMetaInterface.TYPE_BOOLEAN:\n\t\t\t\t\tBoolean b = mi.getBoolean(row, number);\n\t\t\t\t\toutput.print(enclosure);\n\t\t\t\t\tif ( b.booleanValue() )\n\t\t\t\t\t\toutput.print(\"Y\");\n\t\t\t\t\telse\n\t\t\t\t\t\toutput.print(\"N\");\n\t\t\t\t\toutput.print(enclosure);\n\t\t\t\t\tbreak;\t\t\t    \t\n\t\t\t\tcase ValueMetaInterface.TYPE_BINARY:\n\t\t\t\t\tbyte byt[] = mi.getBinary(row, number);\n\t\t\t\t\toutput.print(\"<startlob>\");\n\t\t\t\t\toutput.print(byt);\n\t\t\t\t\toutput.print(\"<endlob>\");\n\t\t\t\t\tbreak;\t\t\t    \n\t\t\t\tdefault:\n\t\t\t\t\tthrow new KettleException(\"Unsupported type\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\toutput.print(Const.CR);\n\t}","id":39066,"modified_method":"public void writeLine(RowMetaInterface mi, Object row[]) throws KettleException\n\t{\n        if ( first )\n        {\n            first = false;\n     \n            enclosure = meta.getEnclosure();\n            delimiter = meta.getDelimiter();\n            \n            // Setup up the fields we need to take for each of the rows\n            // as this speeds up processing.\n            fieldNumbers=new int[meta.getFieldStream().length];\n\t\t\tfor (int i=0;i<fieldNumbers.length;i++) \n\t\t\t{\n\t\t\t\tfieldNumbers[i]=mi.indexOfValue(meta.getFieldStream()[i]);\n\t\t\t\tif (fieldNumbers[i]<0)\n\t\t\t\t{\n\t\t\t\t\tthrow new KettleException(\"Could not find field \" + \n\t\t\t\t\t\t\t                  meta.getFieldStream()[i] + \" in stream\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsdfDate = new SimpleDateFormat(\"yyyy-MM-dd\");\n\t\t\tsdfDateTime = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\");\n        }\n        \n        // Write the data to the output\n        ValueMetaInterface v = null;\n        int number = 0;\n        \n\t\tfor (int i=0;i<fieldNumbers.length;i++) \n\t\t{\n\t\t   //  TODO:  variable substitution\n\t\t\tif ( i!=0 ) output.print(delimiter);\n\t\t\tnumber = fieldNumbers[i];\n\t\t\tv = mi.getValueMeta(number);\n\t\t\tif ( row[number] == null)\n\t\t\t{\n\t\t\t\t// TODO (SB): special check for null in case of Strings.\n\t\t\t\toutput.print(enclosure);\n\t\t\t\toutput.print(enclosure);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tswitch ( v.getType() )\n\t\t\t\t{\n\t\t\t\tcase ValueMetaInterface.TYPE_STRING:\n\t\t\t\t\tString s = mi.getString(row, number);\n\t\t\t\t\tif ( s.indexOf(enclosure) >= 0 )\n\t\t\t\t\t\ts = createEscapedString(s, enclosure);\n\t\t\t\t\toutput.print(enclosure);\n\t\t\t\t\toutput.print(s);\n\t\t\t\t\toutput.print(enclosure);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ValueMetaInterface.TYPE_INTEGER:\n\t\t\t\t\tLong l = mi.getInteger(row, number);\n\t\t\t\t\tif (meta.getEncloseNumbers()) {\n\t\t\t\t\t   output.print(enclosure);\n\t\t\t\t\t   output.print(l);\n\t\t\t\t\t   output.print(enclosure);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t   output.print(l);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ValueMetaInterface.TYPE_NUMBER:\n\t\t\t\t\tDouble d = mi.getNumber(row, number);\n\t\t\t\t\tif (meta.getEncloseNumbers()) {\n   \t\t\t\t\toutput.print(enclosure);\n\t   \t\t\t\toutput.print(d);\n\t\t   \t\t\toutput.print(enclosure);\n\t\t\t\t\t}\n\t\t   \t\telse {\n\t\t   \t\t   output.print(d);\n\t\t   \t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ValueMetaInterface.TYPE_BIGNUMBER:\n\t\t\t\t\tBigDecimal bd = mi.getBigNumber(row, number);\n\t\t\t\t\tif (meta.getEncloseNumbers()) {\n   \t\t\t\t\toutput.print(enclosure);\n\t     \t\t\t\toutput.print(bd);\n\t\t\t   \t\toutput.print(enclosure);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t   output.print(bd);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ValueMetaInterface.TYPE_DATE:\n\t\t\t\t\tDate dt = mi.getDate(row, number);\n\t\t\t\t\toutput.print(enclosure);\n\t\t\t\t\tString mask = meta.getDateMask()[i];\n\t\t\t\t\tif ( GPLoadMeta.DATE_MASK_DATETIME.equals(mask))\n\t\t\t\t\t{\n\t\t\t\t\t\toutput.print(sdfDateTime.format(dt));\t\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// Default is date format\n\t\t\t\t\t\toutput.print(sdfDate.format(dt));\n\t\t\t\t\t}\t\t\t\t\t   \n\t\t\t\t\toutput.print(enclosure);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ValueMetaInterface.TYPE_BOOLEAN:\n\t\t\t\t\tBoolean b = mi.getBoolean(row, number);\n\t\t\t\t\toutput.print(enclosure);\n\t\t\t\t\tif ( b.booleanValue() )\n\t\t\t\t\t\toutput.print(\"Y\");\n\t\t\t\t\telse\n\t\t\t\t\t\toutput.print(\"N\");\n\t\t\t\t\toutput.print(enclosure);\n\t\t\t\t\tbreak;\t\t\t    \t\n\t\t\t\tcase ValueMetaInterface.TYPE_BINARY:\n\t\t\t\t\tbyte byt[] = mi.getBinary(row, number);\n\t\t\t\t\toutput.print(\"<startlob>\");\n\t\t\t\t\toutput.print(byt);\n\t\t\t\t\toutput.print(\"<endlob>\");\n\t\t\t\t\tbreak;\t\t\t    \n\t\t\t\tdefault:\n\t\t\t\t\tthrow new KettleException(\"Unsupported type\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\toutput.print(Const.CR);\n\t}","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n    * Copy information from the meta-data input to the dialog fields.\n    */\n   public void getData() {\n      int i;\n      if (log.isDebug())\n         logDebug(BaseMessages\n               .getString(PKG, \"GPLoadDialog.Log.GettingKeyInfo\")); //$NON-NLS-1$\n\n      wMaxErrors.setText(\"\" + input.getMaxErrors()); //$NON-NLS-1$\n\n      if (input.getFieldTable() != null)\n         for (i = 0; i < input.getFieldTable().length; i++) {\n            TableItem item = wReturn.table.getItem(i);\n            if (input.getFieldTable()[i] != null)\n               item.setText(1, input.getFieldTable()[i]);\n            if (input.getFieldStream()[i] != null)\n               item.setText(2, input.getFieldStream()[i]);\n            String dateMask = input.getDateMask()[i];\n            if (dateMask != null) {\n               if (GPLoadMeta.DATE_MASK_DATE.equals(dateMask)) {\n                  item.setText(3, BaseMessages.getString(PKG,\n                        \"GPLoadDialog.DateMask.Label\"));\n               } else if (GPLoadMeta.DATE_MASK_DATETIME.equals(dateMask)) {\n                  item.setText(3, BaseMessages.getString(PKG,\n                        \"GPLoadDialog.DateTimeMask.Label\"));\n               } else {\n                  item.setText(3, \"\");\n               }\n            } else {\n               item.setText(3, \"\");\n            }\n         }\n\n      if (input.getLocalHosts() != null) {\n         for (i = 0; i < input.getLocalHosts().length; i++) {\n\n            TableItem item = wLocalHosts.table.getItem(i);\n            if (input.getLocalHosts()[i] != null) {\n               item.setText(1, input.getLocalHosts()[i]);\n            }\n         }\n      }\n\n      if (input.getDatabaseMeta() != null)\n         wConnection.setText(input.getDatabaseMeta().getName());\n      else {\n         if (transMeta.nrDatabases() == 1) {\n            wConnection.setText(transMeta.getDatabase(0).getName());\n         }\n      }\n      if (input.getSchemaName() != null)\n         wSchema.setText(input.getSchemaName());\n      if (input.getTableName() != null)\n         wTable.setText(input.getTableName());\n      if (input.getErrorTableName() != null)\n         wErrorTable.setText(input.getErrorTableName());\n      if (input.getGploadPath() != null)\n         wGploadPath.setText(input.getGploadPath());\n      if (input.getControlFile() != null)\n         wControlFile.setText(input.getControlFile());\n      if (input.getDataFile() != null)\n         wDataFile.setText(input.getDataFile());\n      if (input.getLogFile() != null)\n         wLogFile.setText(input.getLogFile());\n      if (input.getEncoding() != null)\n         wEncoding.setText(input.getEncoding());\n      if (input.getDbNameOverride() != null)\n         wDbNameOverride.setText(input.getDbNameOverride());\n      if (input.getMasterPort() != null)\n         wMasterPort.setText(input.getMasterPort());\n      wEraseFiles.setSelection(input.isEraseFiles());\n\n      String method = input.getLoadMethod();\n      // if ( GPLoadMeta.METHOD_AUTO_CONCURRENT.equals(method) )\n      // {\n      // wLoadMethod.select(0);\n      // }\n      if (GPLoadMeta.METHOD_AUTO_END.equals(method)) {\n         wLoadMethod.select(0);\n      } else if (GPLoadMeta.METHOD_MANUAL.equals(method)) {\n         wLoadMethod.select(1);\n      } else {\n         if (log.isDebug())\n            logDebug(\"Internal error: load_method set to default 'auto at end'\"); //$NON-NLS-1$\n         wLoadMethod.select(0);\n      }\n\n      String action = input.getLoadAction();\n      if (GPLoadMeta.ACTION_INSERT.equals(action)) {\n         wLoadAction.select(0);\n      } else if (GPLoadMeta.ACTION_UPDATE.equals(action)) {\n         wLoadAction.select(1);\n      } else if (GPLoadMeta.ACTION_MERGE.equals(action)) {\n         wLoadAction.select(2);\n      } else {\n         if (log.isDebug())\n            logDebug(\"Internal error: load_action set to default '\" + GPLoadMeta.ACTION_INSERT + \"'\"); //$NON-NLS-1$\n         wLoadAction.select(0);\n      }\n\n      wStepname.selectAll();\n      wReturn.setRowNums();\n      wReturn.optWidth(true);\n   }","id":39067,"modified_method":"/**\n    * Copy information from the meta-data input to the dialog fields.\n    */\n   public void getData() {\n      int i;\n      if (log.isDebug())\n         logDebug(BaseMessages\n               .getString(PKG, \"GPLoadDialog.Log.GettingKeyInfo\")); //$NON-NLS-1$\n\n      if (input.getMaxErrors() != null) {\n         wMaxErrors.setText(input.getMaxErrors()); //$NON-NLS-1$\n      }\n      \n      if (input.getFieldTable() != null)\n         for (i = 0; i < input.getFieldTable().length; i++) {\n            \n            TableItem item = wReturn.table.getItem(i);\n            if (input.getFieldTable()[i] != null)\n               item.setText(1, input.getFieldTable()[i]);\n            if (input.getFieldStream()[i] != null)\n               item.setText(2, input.getFieldStream()[i]);\n            String dateMask = input.getDateMask()[i];\n            if (dateMask != null) {\n               if (GPLoadMeta.DATE_MASK_DATE.equals(dateMask)) {\n                  item.setText(3, BaseMessages.getString(PKG,\n                        \"GPLoadDialog.DateMask.Label\"));\n               } else if (GPLoadMeta.DATE_MASK_DATETIME.equals(dateMask)) {\n                  item.setText(3, BaseMessages.getString(PKG,\n                        \"GPLoadDialog.DateTimeMask.Label\"));\n               } else {\n                  item.setText(3, \"\");\n               }\n            } else {\n               item.setText(3, \"\");\n            }\n            item.setText(4, (input.getMatchColumn()[i]?\"Y\":\"N\"));\n            item.setText(5, (input.getUpdateColumn()[i]?\"Y\":\"N\"));\n         }\n\n      if (input.getLocalHosts() != null) {\n         for (i = 0; i < input.getLocalHosts().length; i++) {\n\n            TableItem item = wLocalHosts.table.getItem(i);\n            if (input.getLocalHosts()[i] != null) {\n               item.setText(1, input.getLocalHosts()[i]);\n            }\n         }\n      }\n\n      if (input.getDatabaseMeta() != null)\n         wConnection.setText(input.getDatabaseMeta().getName());\n      else {\n         if (transMeta.nrDatabases() == 1) {\n            wConnection.setText(transMeta.getDatabase(0).getName());\n         }\n      }\n      if (input.getSchemaName() != null)\n         wSchema.setText(input.getSchemaName());\n      if (input.getTableName() != null)\n         wTable.setText(input.getTableName());\n      if (input.getErrorTableName() != null)\n         wErrorTable.setText(input.getErrorTableName());\n      if (input.getGploadPath() != null)\n         wGploadPath.setText(input.getGploadPath());\n      if (input.getControlFile() != null)\n         wControlFile.setText(input.getControlFile());\n      if (input.getDataFile() != null)\n         wDataFile.setText(input.getDataFile());\n      if (input.getDelimiter() != null) \n         wDelimiter.setText(input.getDelimiter());\n      if (input.getLogFile() != null)\n         wLogFile.setText(input.getLogFile());\n      if (input.getEncoding() != null)\n         wEncoding.setText(input.getEncoding());\n      if (input.getMasterPort() != null)\n         wMasterPort.setText(input.getMasterPort());\n      wEraseFiles.setSelection(input.isEraseFiles());\n\n      String method = input.getLoadMethod();\n      // if ( GPLoadMeta.METHOD_AUTO_CONCURRENT.equals(method) )\n      // {\n      // wLoadMethod.select(0);\n      // }\n      if (GPLoadMeta.METHOD_AUTO_END.equals(method)) {\n         wLoadMethod.select(0);\n      } else if (GPLoadMeta.METHOD_MANUAL.equals(method)) {\n         wLoadMethod.select(1);\n      } else {\n         if (log.isDebug())\n            logDebug(\"Internal error: load_method set to default 'auto at end'\"); //$NON-NLS-1$\n         wLoadMethod.select(0);\n      }\n\n      String action = input.getLoadAction();\n      if (GPLoadMeta.ACTION_INSERT.equals(action)) {\n         wLoadAction.select(0);\n      } else if (GPLoadMeta.ACTION_UPDATE.equals(action)) {\n         wLoadAction.select(1);\n      } else if (GPLoadMeta.ACTION_MERGE.equals(action)) {\n         wLoadAction.select(2);\n      } else {\n         if (log.isDebug())\n            logDebug(\"Internal error: load_action set to default '\" + GPLoadMeta.ACTION_INSERT + \"'\"); //$NON-NLS-1$\n         wLoadAction.select(0);\n      }\n\n      wStepname.selectAll();\n      wReturn.setRowNums();\n      wReturn.optWidth(true);\n   }","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void getInfo(GPLoadMeta inf) {\n      int nrfields = wReturn.nrNonEmpty();\n\n      inf.allocate(nrfields);\n\n      inf.setMaxErrors(Const.toInt(wMaxErrors.getText(), 0));\n\n      inf.setDbNameOverride(wDbNameOverride.getText());\n\n      if (log.isDebug())\n         logDebug(BaseMessages.getString(PKG,\n               \"GPLoadDialog.Log.FoundFields\", \"\" + nrfields)); //$NON-NLS-1$ //$NON-NLS-2$\n      for (int i = 0; i < nrfields; i++) {\n         TableItem item = wReturn.getNonEmpty(i);\n         inf.getFieldTable()[i] = item.getText(1);\n         inf.getFieldStream()[i] = item.getText(2);\n         if (BaseMessages.getString(PKG, \"GPLoadDialog.DateMask.Label\").equals(\n               item.getText(3)))\n            inf.getDateMask()[i] = GPLoadMeta.DATE_MASK_DATE;\n         else if (BaseMessages\n               .getString(PKG, \"GPLoadDialog.DateTimeMask.Label\").equals(\n                     item.getText(3)))\n            inf.getDateMask()[i] = GPLoadMeta.DATE_MASK_DATETIME;\n         else\n            inf.getDateMask()[i] = \"\";\n      }\n\n      int numberOfLocalHosts = wLocalHosts.nrNonEmpty();\n      inf.allocateLocalHosts(numberOfLocalHosts);\n\n      for (int i = 0; i < numberOfLocalHosts; i++) {\n         TableItem item = wLocalHosts.getNonEmpty(i);\n         inf.getLocalHosts()[i] = item.getText(1);\n      }\n\n      inf.setSchemaName(wSchema.getText());\n      inf.setTableName(wTable.getText());\n      inf.setErrorTableName(wErrorTable.getText());\n      inf.setDatabaseMeta(transMeta.findDatabase(wConnection.getText()));\n      inf.setGploadPath(wGploadPath.getText());\n      inf.setControlFile(wControlFile.getText());\n      inf.setDataFile(wDataFile.getText());\n      inf.setLogFile(wLogFile.getText());\n      inf.setEncoding(wEncoding.getText());\n      inf.setEraseFiles(wEraseFiles.getSelection());\n      inf.setMasterPort(wMasterPort.getText());\n\n      /*\n       * Set the loadmethod\n       */\n      String method = wLoadMethod.getText();\n      // if ( BaseMessages.getString(PKG,\n      // \"GPLoadDialog.AutoConcLoadMethod.Label\").equals(method) )\n      // {\n      // inf.setLoadMethod(GPLoadMeta.METHOD_AUTO_CONCURRENT);\n      // }\n      if (BaseMessages.getString(PKG, \"GPLoadDialog.AutoEndLoadMethod.Label\")\n            .equals(method)) {\n         inf.setLoadMethod(GPLoadMeta.METHOD_AUTO_END);\n      } else if (BaseMessages.getString(PKG,\n            \"GPLoadDialog.ManualLoadMethod.Label\").equals(method)) {\n         inf.setLoadMethod(GPLoadMeta.METHOD_MANUAL);\n      } else {\n         if (log.isDebug())\n            logDebug(\"Internal error: load_method set to default 'auto concurrent', value found '\" + method + \"'.\"); //$NON-NLS-1$\n         inf.setLoadMethod(GPLoadMeta.METHOD_AUTO_END);\n      }\n\n      /*\n       * Set the load action\n       */\n      String action = wLoadAction.getText();\n      if (BaseMessages.getString(PKG, \"GPLoadDialog.InsertLoadAction.Label\")\n            .equals(action)) {\n         inf.setLoadAction(GPLoadMeta.ACTION_INSERT);\n      } else if (BaseMessages.getString(PKG,\n            \"GPLoadDialog.UpdateLoadAction.Label\").equals(action)) {\n         inf.setLoadAction(GPLoadMeta.ACTION_UPDATE);\n      } else if (BaseMessages.getString(PKG,\n            \"GPLoadDialog.MergeLoadAction.Label\").equals(action)) {\n         inf.setLoadAction(GPLoadMeta.ACTION_MERGE);\n      } else {\n         if (log.isDebug())\n            logDebug(\"Internal error: load_action set to default 'append', value found '\" + action + \"'.\"); //$NON-NLS-1$\n         inf.setLoadAction(GPLoadMeta.ACTION_INSERT);\n      }\n\n      stepname = wStepname.getText(); // return value\n   }","id":39068,"modified_method":"private void getInfo(GPLoadMeta inf) {\n      int nrfields = wReturn.nrNonEmpty();\n\n      inf.allocate(nrfields);\n      inf.setMaxErrors(wMaxErrors.getText());\n\n      if (log.isDebug()) {\n         logDebug(BaseMessages.getString(PKG, \"GPLoadDialog.Log.FoundFields\", \"\" + nrfields)); //$NON-NLS-1$ //$NON-NLS-2$\n      }\n      \n      for (int i = 0; i < nrfields; i++) {\n      \n         TableItem item = wReturn.getNonEmpty(i);\n         inf.getFieldTable()[i] = item.getText(1);\n         inf.getFieldStream()[i] = item.getText(2);\n         \n         if (BaseMessages.getString(PKG, \"GPLoadDialog.DateMask.Label\").equals(\n               item.getText(3)))\n            inf.getDateMask()[i] = GPLoadMeta.DATE_MASK_DATE;\n         else if (BaseMessages\n               .getString(PKG, \"GPLoadDialog.DateTimeMask.Label\").equals(\n                     item.getText(3)))\n            inf.getDateMask()[i] = GPLoadMeta.DATE_MASK_DATETIME;\n         else\n            inf.getDateMask()[i] = \"\";\n         \n         inf.getMatchColumn()[i] = \"Y\".equalsIgnoreCase(item.getText(4));\n         inf.getUpdateColumn()[i] = \"Y\".equalsIgnoreCase(item.getText(5));\n      }\n\n      int numberOfLocalHosts = wLocalHosts.nrNonEmpty();\n      inf.allocateLocalHosts(numberOfLocalHosts);\n\n      for (int i = 0; i < numberOfLocalHosts; i++) {\n         TableItem item = wLocalHosts.getNonEmpty(i);\n         inf.getLocalHosts()[i] = item.getText(1);\n      }\n\n      inf.setSchemaName(wSchema.getText());\n      inf.setTableName(wTable.getText());\n      inf.setErrorTableName(wErrorTable.getText());\n      inf.setDatabaseMeta(transMeta.findDatabase(wConnection.getText()));\n      inf.setGploadPath(wGploadPath.getText());\n      inf.setControlFile(wControlFile.getText());\n      inf.setDataFile(wDataFile.getText());\n      inf.setLogFile(wLogFile.getText());\n      inf.setEncoding(wEncoding.getText());\n      inf.setEraseFiles(wEraseFiles.getSelection());\n      inf.setMasterPort(wMasterPort.getText());\n      inf.setDelimiter(wDelimiter.getText());\n\n      /*\n       * Set the loadmethod\n       */\n      String method = wLoadMethod.getText();\n      // if ( BaseMessages.getString(PKG,\n      // \"GPLoadDialog.AutoConcLoadMethod.Label\").equals(method) )\n      // {\n      // inf.setLoadMethod(GPLoadMeta.METHOD_AUTO_CONCURRENT);\n      // }\n      if (BaseMessages.getString(PKG, \"GPLoadDialog.AutoEndLoadMethod.Label\")\n            .equals(method)) {\n         inf.setLoadMethod(GPLoadMeta.METHOD_AUTO_END);\n      } else if (BaseMessages.getString(PKG,\n            \"GPLoadDialog.ManualLoadMethod.Label\").equals(method)) {\n         inf.setLoadMethod(GPLoadMeta.METHOD_MANUAL);\n      } else {\n         if (log.isDebug())\n            logDebug(\"Internal error: load_method set to default 'auto concurrent', value found '\" + method + \"'.\"); //$NON-NLS-1$\n         inf.setLoadMethod(GPLoadMeta.METHOD_AUTO_END);\n      }\n\n      /*\n       * Set the load action\n       */\n      String action = wLoadAction.getText();\n      if (BaseMessages.getString(PKG, \"GPLoadDialog.InsertLoadAction.Label\")\n            .equals(action)) {\n         inf.setLoadAction(GPLoadMeta.ACTION_INSERT);\n      } else if (BaseMessages.getString(PKG,\n            \"GPLoadDialog.UpdateLoadAction.Label\").equals(action)) {\n         inf.setLoadAction(GPLoadMeta.ACTION_UPDATE);\n      } else if (BaseMessages.getString(PKG,\n            \"GPLoadDialog.MergeLoadAction.Label\").equals(action)) {\n         inf.setLoadAction(GPLoadMeta.ACTION_MERGE);\n      } else {\n         if (log.isDebug())\n            logDebug(\"Internal error: load_action set to default 'append', value found '\" + action + \"'.\"); //$NON-NLS-1$\n         inf.setLoadAction(GPLoadMeta.ACTION_INSERT);\n      }\n\n      stepname = wStepname.getText(); // return value\n   }","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String open() {\n      Shell parent = getParent();\n      Display display = parent.getDisplay();\n\n      shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX\n            | SWT.MIN);\n      props.setLook(shell);\n      setShellImage(shell, input);\n\n      ModifyListener lsMod = new ModifyListener() {\n         public void modifyText(ModifyEvent e) {\n            input.setChanged();\n         }\n      };\n      FocusListener lsFocusLost = new FocusAdapter() {\n         public void focusLost(FocusEvent arg0) {\n            setTableFieldCombo();\n         }\n      };\n      changed = input.hasChanged();\n\n      FormLayout formLayout = new FormLayout();\n      formLayout.marginWidth = Const.FORM_MARGIN;\n      formLayout.marginHeight = Const.FORM_MARGIN;\n\n      shell.setLayout(formLayout);\n      shell.setText(BaseMessages.getString(PKG, \"GPLoadDialog.Shell.Title\")); //$NON-NLS-1$\n\n      int middle = props.getMiddlePct();\n      int margin = Const.MARGIN;\n\n      // Stepname line\n      wlStepname = new Label(shell, SWT.RIGHT);\n      wlStepname.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.Stepname.Label\")); //$NON-NLS-1$\n      props.setLook(wlStepname);\n      fdlStepname = new FormData();\n      fdlStepname.left = new FormAttachment(0, 0);\n      fdlStepname.right = new FormAttachment(middle, -margin);\n      fdlStepname.top = new FormAttachment(0, margin);\n      wlStepname.setLayoutData(fdlStepname);\n      wStepname = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n      wStepname.setText(stepname);\n      props.setLook(wStepname);\n      wStepname.addModifyListener(lsMod);\n      fdStepname = new FormData();\n      fdStepname.left = new FormAttachment(middle, 0);\n      fdStepname.top = new FormAttachment(0, margin);\n      fdStepname.right = new FormAttachment(100, 0);\n      wStepname.setLayoutData(fdStepname);\n\n      // Connection line\n      wConnection = addConnectionLine(shell, wStepname, middle, margin);\n      if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1)\n         wConnection.select(0);\n      wConnection.addModifyListener(lsMod);\n\n      // Schema line...\n      wlSchema = new Label(shell, SWT.RIGHT);\n      wlSchema.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.TargetSchema.Label\")); //$NON-NLS-1$\n      props.setLook(wlSchema);\n      fdlSchema = new FormData();\n      fdlSchema.left = new FormAttachment(0, 0);\n      fdlSchema.right = new FormAttachment(middle, -margin);\n      fdlSchema.top = new FormAttachment(wConnection, margin * 2);\n      wlSchema.setLayoutData(fdlSchema);\n\n      wSchema = new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT\n            | SWT.BORDER);\n      props.setLook(wSchema);\n      wSchema.addModifyListener(lsMod);\n      wSchema.addFocusListener(lsFocusLost);\n      fdSchema = new FormData();\n      fdSchema.left = new FormAttachment(middle, 0);\n      fdSchema.top = new FormAttachment(wConnection, margin * 2);\n      fdSchema.right = new FormAttachment(100, 0);\n      wSchema.setLayoutData(fdSchema);\n\n      // Table line...\n      wlTable = new Label(shell, SWT.RIGHT);\n      wlTable.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.TargetTable.Label\")); //$NON-NLS-1$\n      props.setLook(wlTable);\n      fdlTable = new FormData();\n      fdlTable.left = new FormAttachment(0, 0);\n      fdlTable.right = new FormAttachment(middle, -margin);\n      fdlTable.top = new FormAttachment(wSchema, margin);\n      wlTable.setLayoutData(fdlTable);\n\n      wbTable = new Button(shell, SWT.PUSH | SWT.CENTER);\n      props.setLook(wbTable);\n      wbTable\n            .setText(BaseMessages.getString(PKG, \"GPLoadDialog.Browse.Button\")); //$NON-NLS-1$\n      fdbTable = new FormData();\n      fdbTable.right = new FormAttachment(100, 0);\n      fdbTable.top = new FormAttachment(wSchema, margin);\n      wbTable.setLayoutData(fdbTable);\n      wTable = new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n      props.setLook(wTable);\n      wTable.addModifyListener(lsMod);\n      wTable.addFocusListener(lsFocusLost);\n      fdTable = new FormData();\n      fdTable.left = new FormAttachment(middle, 0);\n      fdTable.top = new FormAttachment(wSchema, margin);\n      fdTable.right = new FormAttachment(wbTable, -margin);\n      wTable.setLayoutData(fdTable);\n\n      // GPLoad line...\n      wlGploadPath = new Label(shell, SWT.RIGHT);\n      wlGploadPath.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.GPLoadPath.Label\")); //$NON-NLS-1$\n      props.setLook(wlGploadPath);\n      fdlGploadPath = new FormData();\n      fdlGploadPath.left = new FormAttachment(0, 0);\n      fdlGploadPath.right = new FormAttachment(middle, -margin);\n      fdlGploadPath.top = new FormAttachment(wTable, margin);\n      wlGploadPath.setLayoutData(fdlGploadPath);\n\n      wbGploadPath = new Button(shell, SWT.PUSH | SWT.CENTER);\n      props.setLook(wbGploadPath);\n      wbGploadPath.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.Browse.Button\")); //$NON-NLS-1$\n      fdbGploadPath = new FormData();\n      fdbGploadPath.right = new FormAttachment(100, 0);\n      fdbGploadPath.top = new FormAttachment(wTable, margin);\n      wbGploadPath.setLayoutData(fdbGploadPath);\n      wGploadPath = new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT\n            | SWT.BORDER);\n      props.setLook(wGploadPath);\n      wGploadPath.addModifyListener(lsMod);\n      fdGploadPath = new FormData();\n      fdGploadPath.left = new FormAttachment(middle, 0);\n      fdGploadPath.top = new FormAttachment(wTable, margin);\n      fdGploadPath.right = new FormAttachment(wbGploadPath, -margin);\n      wGploadPath.setLayoutData(fdGploadPath);\n\n      // Load Method line\n      wlLoadMethod = new Label(shell, SWT.RIGHT);\n      wlLoadMethod.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.LoadMethod.Label\"));\n      props.setLook(wlLoadMethod);\n      fdlLoadMethod = new FormData();\n      fdlLoadMethod.left = new FormAttachment(0, 0);\n      fdlLoadMethod.right = new FormAttachment(middle, -margin);\n      fdlLoadMethod.top = new FormAttachment(wGploadPath, margin);\n      wlLoadMethod.setLayoutData(fdlLoadMethod);\n      wLoadMethod = new CCombo(shell, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\n      // wLoadMethod.add(BaseMessages.getString(PKG,\n      // \"GPLoadDialog.AutoConcLoadMethod.Label\"));\n      wLoadMethod.add(BaseMessages.getString(PKG,\n            \"GPLoadDialog.AutoEndLoadMethod.Label\"));\n      wLoadMethod.add(BaseMessages.getString(PKG,\n            \"GPLoadDialog.ManualLoadMethod.Label\"));\n      wLoadMethod.select(0); // +1: starts at -1\n      wLoadMethod.addModifyListener(lsMod);\n\n      props.setLook(wLoadMethod);\n      fdLoadMethod = new FormData();\n      fdLoadMethod.left = new FormAttachment(middle, 0);\n      fdLoadMethod.top = new FormAttachment(wGploadPath, margin);\n      fdLoadMethod.right = new FormAttachment(100, 0);\n      wLoadMethod.setLayoutData(fdLoadMethod);\n\n      fdLoadMethod = new FormData();\n      fdLoadMethod.left = new FormAttachment(middle, 0);\n      fdLoadMethod.top = new FormAttachment(wGploadPath, margin);\n      fdLoadMethod.right = new FormAttachment(100, 0);\n      wLoadMethod.setLayoutData(fdLoadMethod);\n\n      // Load Action line\n      wlLoadAction = new Label(shell, SWT.RIGHT);\n      wlLoadAction.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.LoadAction.Label\"));\n      props.setLook(wlLoadAction);\n      fdlLoadAction = new FormData();\n      fdlLoadAction.left = new FormAttachment(0, 0);\n      fdlLoadAction.right = new FormAttachment(middle, -margin);\n      fdlLoadAction.top = new FormAttachment(wLoadMethod, margin);\n      wlLoadAction.setLayoutData(fdlLoadAction);\n      wLoadAction = new CCombo(shell, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\n      wLoadAction.add(BaseMessages.getString(PKG,\n            \"GPLoadDialog.InsertLoadAction.Label\"));\n      // wLoadAction.add(BaseMessages.getString(PKG,\n      // \"GPLoadDialog.UpdateLoadAction.Label\"));\n      // wLoadAction.add(BaseMessages.getString(PKG,\n      // \"GPLoadDialog.MergeLoadAction.Label\"));\n\n      wLoadAction.select(0); // +1: starts at -1\n      wLoadAction.addModifyListener(lsMod);\n\n      props.setLook(wLoadAction);\n      fdLoadAction = new FormData();\n      fdLoadAction.left = new FormAttachment(middle, 0);\n      fdLoadAction.top = new FormAttachment(wLoadMethod, margin);\n      fdLoadAction.right = new FormAttachment(100, 0);\n      wLoadAction.setLayoutData(fdLoadAction);\n\n      fdLoadAction = new FormData();\n      fdLoadAction.left = new FormAttachment(middle, 0);\n      fdLoadAction.top = new FormAttachment(wLoadMethod, margin);\n      fdLoadAction.right = new FormAttachment(100, 0);\n      wLoadAction.setLayoutData(fdLoadAction);\n\n      // MaxErrors file line\n      wlMaxErrors = new Label(shell, SWT.RIGHT);\n      wlMaxErrors.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.MaxErrors.Label\")); //$NON-NLS-1$\n      props.setLook(wlMaxErrors);\n      fdlMaxErrors = new FormData();\n      fdlMaxErrors.left = new FormAttachment(0, 0);\n      fdlMaxErrors.top = new FormAttachment(wLoadAction, margin);\n      fdlMaxErrors.right = new FormAttachment(middle, -margin);\n      wlMaxErrors.setLayoutData(fdlMaxErrors);\n      wMaxErrors = new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT\n            | SWT.BORDER);\n      props.setLook(wMaxErrors);\n      wMaxErrors.addModifyListener(lsMod);\n      fdMaxErrors = new FormData();\n      fdMaxErrors.left = new FormAttachment(middle, 0);\n      fdMaxErrors.top = new FormAttachment(wLoadAction, margin);\n      fdMaxErrors.right = new FormAttachment(100, 0);\n      wMaxErrors.setLayoutData(fdMaxErrors);\n\n      // Error Table line...\n      wlErrorTable = new Label(shell, SWT.RIGHT);\n      wlErrorTable.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.ErrorTable.Label\")); //$NON-NLS-1$\n      props.setLook(wlErrorTable);\n      fdlErrorTable = new FormData();\n      fdlErrorTable.left = new FormAttachment(0, 0);\n      fdlErrorTable.right = new FormAttachment(middle, -margin);\n      fdlErrorTable.top = new FormAttachment(wMaxErrors, margin);\n      wlErrorTable.setLayoutData(fdlErrorTable);\n\n      wbErrorTable = new Button(shell, SWT.PUSH | SWT.CENTER);\n      props.setLook(wbErrorTable);\n      wbErrorTable.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.Browse.Button\")); //$NON-NLS-1$\n      fdbErrorTable = new FormData();\n      fdbErrorTable.right = new FormAttachment(100, 0);\n      fdbErrorTable.top = new FormAttachment(wMaxErrors, margin);\n      wbErrorTable.setLayoutData(fdbErrorTable);\n      wErrorTable = new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT\n            | SWT.BORDER);\n      props.setLook(wErrorTable);\n      wErrorTable.addModifyListener(lsMod);\n      wErrorTable.addFocusListener(lsFocusLost);\n      fdErrorTable = new FormData();\n      fdErrorTable.left = new FormAttachment(middle, 0);\n      fdErrorTable.top = new FormAttachment(wMaxErrors, margin);\n      fdErrorTable.right = new FormAttachment(wbErrorTable, -margin);\n      wErrorTable.setLayoutData(fdErrorTable);\n\n      // Db Name Override line\n      wlDbNameOverride = new Label(shell, SWT.RIGHT);\n      wlDbNameOverride.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.DbNameOverride.Label\")); //$NON-NLS-1$\n      props.setLook(wlDbNameOverride);\n      fdlDbNameOverride = new FormData();\n      fdlDbNameOverride.left = new FormAttachment(0, 0);\n      fdlDbNameOverride.top = new FormAttachment(wMaxErrors, margin);\n      fdlDbNameOverride.right = new FormAttachment(middle, -margin);\n      wlDbNameOverride.setLayoutData(fdlDbNameOverride);\n      wDbNameOverride = new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT\n            | SWT.BORDER);\n      props.setLook(wDbNameOverride);\n      wDbNameOverride.addModifyListener(lsMod);\n      fdDbNameOverride = new FormData();\n      fdDbNameOverride.left = new FormAttachment(middle, 0);\n      fdDbNameOverride.top = new FormAttachment(wMaxErrors, margin);\n      fdDbNameOverride.right = new FormAttachment(100, 0);\n      wDbNameOverride.setLayoutData(fdDbNameOverride);\n\n      // Control file line\n      wlControlFile = new Label(shell, SWT.RIGHT);\n      wlControlFile.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.ControlFile.Label\")); //$NON-NLS-1$\n      props.setLook(wlControlFile);\n      fdlControlFile = new FormData();\n      fdlControlFile.left = new FormAttachment(0, 0);\n      fdlControlFile.top = new FormAttachment(wDbNameOverride, margin);\n      fdlControlFile.right = new FormAttachment(middle, -margin);\n      wlControlFile.setLayoutData(fdlControlFile);\n      wbControlFile = new Button(shell, SWT.PUSH | SWT.CENTER);\n      props.setLook(wbControlFile);\n      wbControlFile.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.Browse.Button\")); //$NON-NLS-1$\n      fdbControlFile = new FormData();\n      fdbControlFile.right = new FormAttachment(100, 0);\n      fdbControlFile.top = new FormAttachment(wDbNameOverride, margin);\n      wbControlFile.setLayoutData(fdbControlFile);\n      wControlFile = new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT\n            | SWT.BORDER);\n      props.setLook(wControlFile);\n      wControlFile.addModifyListener(lsMod);\n      fdControlFile = new FormData();\n      fdControlFile.left = new FormAttachment(middle, 0);\n      fdControlFile.top = new FormAttachment(wDbNameOverride, margin);\n      fdControlFile.right = new FormAttachment(wbControlFile, -margin);\n      wControlFile.setLayoutData(fdControlFile);\n\n      // Data file line\n      wlDataFile = new Label(shell, SWT.RIGHT);\n      wlDataFile.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.DataFile.Label\")); //$NON-NLS-1$\n      props.setLook(wlDataFile);\n      fdlDataFile = new FormData();\n      fdlDataFile.left = new FormAttachment(0, 0);\n      fdlDataFile.top = new FormAttachment(wControlFile, margin);\n      fdlDataFile.right = new FormAttachment(middle, -margin);\n      wlDataFile.setLayoutData(fdlDataFile);\n      wbDataFile = new Button(shell, SWT.PUSH | SWT.CENTER);\n      props.setLook(wbDataFile);\n      wbDataFile.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.Browse.Button\")); //$NON-NLS-1$\n      fdbDataFile = new FormData();\n      fdbDataFile.right = new FormAttachment(100, 0);\n      fdbDataFile.top = new FormAttachment(wControlFile, margin);\n      wbDataFile.setLayoutData(fdbDataFile);\n      wDataFile = new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT\n            | SWT.BORDER);\n      props.setLook(wDataFile);\n      wDataFile.addModifyListener(lsMod);\n      fdDataFile = new FormData();\n      fdDataFile.left = new FormAttachment(middle, 0);\n      fdDataFile.top = new FormAttachment(wControlFile, margin);\n      fdDataFile.right = new FormAttachment(wbDataFile, -margin);\n      wDataFile.setLayoutData(fdDataFile);\n\n      // Log file line\n      wlLogFile = new Label(shell, SWT.RIGHT);\n      wlLogFile.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.LogFile.Label\")); //$NON-NLS-1$\n      props.setLook(wlLogFile);\n      fdlLogFile = new FormData();\n      fdlLogFile.left = new FormAttachment(0, 0);\n      fdlLogFile.top = new FormAttachment(wDataFile, margin);\n      fdlLogFile.right = new FormAttachment(middle, -margin);\n      wlLogFile.setLayoutData(fdlLogFile);\n      wbLogFile = new Button(shell, SWT.PUSH | SWT.CENTER);\n      props.setLook(wbLogFile);\n      wbLogFile.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.Browse.Button\")); //$NON-NLS-1$\n      fdbLogFile = new FormData();\n      fdbLogFile.right = new FormAttachment(100, 0);\n      fdbLogFile.top = new FormAttachment(wDataFile, margin);\n      wbLogFile.setLayoutData(fdbLogFile);\n      wLogFile = new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT\n            | SWT.BORDER);\n      props.setLook(wLogFile);\n      wLogFile.addModifyListener(lsMod);\n      fdLogFile = new FormData();\n      fdLogFile.left = new FormAttachment(middle, 0);\n      fdLogFile.top = new FormAttachment(wDataFile, margin);\n      fdLogFile.right = new FormAttachment(wbLogFile, -margin);\n      wLogFile.setLayoutData(fdLogFile);\n\n      //\n      // Control encoding line\n      //\n      // The drop down is editable as it may happen an encoding may not be\n      // present\n      // on one machine, but you may want to use it on your execution server\n      //\n      wlEncoding = new Label(shell, SWT.RIGHT);\n      wlEncoding.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.Encoding.Label\"));\n      props.setLook(wlEncoding);\n      fdlEncoding = new FormData();\n      fdlEncoding.left = new FormAttachment(0, 0);\n      fdlEncoding.top = new FormAttachment(wLogFile, margin);\n      fdlEncoding.right = new FormAttachment(middle, -margin);\n      wlEncoding.setLayoutData(fdlEncoding);\n      wEncoding = new Combo(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n      wEncoding.setToolTipText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.Encoding.Tooltip\"));\n      wEncoding.setItems(encodings);\n      props.setLook(wEncoding);\n      fdEncoding = new FormData();\n      fdEncoding.left = new FormAttachment(middle, 0);\n      fdEncoding.top = new FormAttachment(wlLogFile, margin);\n      fdEncoding.right = new FormAttachment(100, 0);\n      wEncoding.setLayoutData(fdEncoding);\n      wEncoding.addModifyListener(lsMod);\n\n      // Erase files line\n      wlEraseFiles = new Label(shell, SWT.RIGHT);\n      wlEraseFiles.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.EraseFiles.Label\")); //$NON-NLS-1$\n      props.setLook(wlEraseFiles);\n      fdlEraseFiles = new FormData();\n      fdlEraseFiles.left = new FormAttachment(0, 0);\n      fdlEraseFiles.top = new FormAttachment(wEncoding, margin);\n      fdlEraseFiles.right = new FormAttachment(middle, -margin);\n      wlEraseFiles.setLayoutData(fdlEraseFiles);\n      wEraseFiles = new Button(shell, SWT.CHECK);\n      props.setLook(wEraseFiles);\n      fdEraseFiles = new FormData();\n      fdEraseFiles.left = new FormAttachment(middle, 0);\n      fdEraseFiles.top = new FormAttachment(wEncoding, margin);\n      fdEraseFiles.right = new FormAttachment(100, 0);\n      wEraseFiles.setLayoutData(fdEraseFiles);\n      wEraseFiles.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            input.setChanged();\n         }\n      });\n\n      // The Tab folder for Fields and Servers.\n      wTabFolder = new CTabFolder(shell, SWT.BORDER);\n      props.setLook(wTabFolder, PropsUI.WIDGET_STYLE_TAB);\n\n      // ////////////////////////\n      // Start of the Fields tab\n      // ////////////////////////\n      wFieldsTab = new CTabItem(wTabFolder, SWT.NONE);\n      wFieldsTab.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.FieldsTab.Title\"));\n\n      wFieldsComp = new Composite(wTabFolder, SWT.NONE);\n      props.setLook(wFieldsComp);\n\n      FormLayout tabFieldLayout = new FormLayout();\n      tabFieldLayout.marginWidth = 3;\n      tabFieldLayout.marginHeight = 3;\n      wFieldsComp.setLayout(tabFieldLayout);\n\n      // The field Label\n      wlReturn = new Label(wFieldsComp, SWT.NONE);\n      wlReturn.setText(BaseMessages.getString(PKG, \"GPLoadDialog.Fields.Label\")); //$NON-NLS-1$\n      props.setLook(wlReturn);\n      fdlReturn = new FormData();\n      fdlReturn.left = new FormAttachment(0, 0);\n      fdlReturn.top = new FormAttachment(0, margin);\n      wlReturn.setLayoutData(fdlReturn);\n\n      //  The Field Table\n      int UpInsCols = 3;\n      int UpInsRows = (input.getFieldTable() != null ? input.getFieldTable().length\n            : 1);\n\n      ciReturn = new ColumnInfo[UpInsCols];\n\n      ciReturn[0] = new ColumnInfo(\n            BaseMessages.getString(PKG, \"GPLoadDialog.ColumnInfo.TableField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n      ciReturn[1] = new ColumnInfo(\n            BaseMessages.getString(PKG, \"GPLoadDialog.ColumnInfo.StreamField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n      ciReturn[2] = new ColumnInfo(BaseMessages.getString(PKG,\n            \"GPLoadDialog.ColumnInfo.DateMask\"), ColumnInfo.COLUMN_TYPE_CCOMBO,\n            new String[] {\n                  \"\", //$NON-NLS-1$\n                  BaseMessages.getString(PKG, \"GPLoadDialog.DateMask.Label\"),\n                  BaseMessages\n                        .getString(PKG, \"GPLoadDialog.DateTimeMask.Label\") },\n            true);\n      tableFieldColumns.add(ciReturn[0]);\n      wReturn = new TableView(transMeta, wFieldsComp, SWT.BORDER\n            | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL,\n            ciReturn, UpInsRows, lsMod, props);\n\n      wGetLU = new Button(wFieldsComp, SWT.PUSH);\n      wGetLU.setText(BaseMessages\n            .getString(PKG, \"GPLoadDialog.GetFields.Label\")); //$NON-NLS-1$\n      fdGetLU = new FormData();\n      fdGetLU.top = new FormAttachment(0, margin);\n      fdGetLU.right = new FormAttachment(100, 0);\n      wGetLU.setLayoutData(fdGetLU);\n\n      wDoMapping = new Button(wFieldsComp, SWT.PUSH);\n      wDoMapping.setText(BaseMessages.getString(PKG,\n            \"GPLoadDialog.EditMapping.Label\")); //$NON-NLS-1$\n      fdDoMapping = new FormData();\n      fdDoMapping.top = new FormAttachment(wGetLU, margin);\n      fdDoMapping.right = new FormAttachment(100, 0);\n      wDoMapping.setLayoutData(fdDoMapping);\n\n      wDoMapping.addListener(SWT.Selection, new Listener() {\n         public void handleEvent(Event arg0) {\n            generateMappings();\n         }\n      });\n\n      fdReturn = new FormData();\n      fdReturn.left = new FormAttachment(0, 0);\n      fdReturn.top = new FormAttachment(wlReturn, margin);\n      fdReturn.right = new FormAttachment(wGetLU, -margin*2);\n      fdReturn.bottom = new FormAttachment(100, -2 * margin);\n      wReturn.setLayoutData(fdReturn);\n\n      fdFieldsComp = new FormData();\n      fdFieldsComp.left = new FormAttachment(0, 0);\n      fdFieldsComp.top = new FormAttachment(0, margin);\n      fdFieldsComp.right = new FormAttachment(100, 0);\n      fdFieldsComp.bottom = new FormAttachment(100, 0);\n      wFieldsComp.setLayoutData(fdFieldsComp);\n\n      wFieldsComp.layout();\n      wFieldsTab.setControl(wFieldsComp);\n\n      // ///////////////////////////////////////////////////////////\n      // / End of Fields tab\n      // ///////////////////////////////////////////////////////////\n\n      // ////////////////////////\n      // Start of the Local Hosts tab\n      // ////////////////////////\n      wLocalHostsTab = new CTabItem(wTabFolder, SWT.NONE);\n      wLocalHostsTab.setText(BaseMessages.getString(PKG, \"GPLoadDialog.LocalHostsTab.Title\"));\n\n      wLocalHostsComp = new Composite(wTabFolder, SWT.NONE);\n      props.setLook(wLocalHostsComp);\n\n      FormLayout tabLocalHostsLayout = new FormLayout();\n      tabLocalHostsLayout.marginWidth = 3;\n      tabLocalHostsLayout.marginHeight = 3;\n      wLocalHostsComp.setLayout(tabLocalHostsLayout);\n\n      // Master Port line...\n      wlMasterPort = new Label(wLocalHostsComp, SWT.NONE);\n      wlMasterPort.setText(BaseMessages.getString(PKG, \"GPLoadDialog.MasterPort.Label\")); //$NON-NLS-1$\n      props.setLook(wlMasterPort);\n      fdlMasterPort = new FormData();\n      fdlMasterPort.left = new FormAttachment(0, 0);\n      fdlMasterPort.right = new FormAttachment(middle, -margin);\n      fdlMasterPort.top = new FormAttachment(0, margin * 2);\n      wlMasterPort.setLayoutData(fdlMasterPort);\n\n      wMasterPort = new TextVar(transMeta, wLocalHostsComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n      props.setLook(wMasterPort);\n      wMasterPort.addModifyListener(lsMod);\n      wMasterPort.addFocusListener(lsFocusLost);\n      fdMasterPort = new FormData();\n      fdMasterPort.left = new FormAttachment(wlMasterPort, 0);\n      fdMasterPort.top = new FormAttachment(0, margin * 2);\n      fdMasterPort.right = new FormAttachment(100, 0);\n      wMasterPort.setLayoutData(fdMasterPort);\n      wMasterPort.addModifyListener(lsMod);\n\n      // Local Hosts Label\n      wlLocalHosts = new Label(wLocalHostsComp, SWT.NONE);\n      wlLocalHosts.setText(BaseMessages.getString(PKG, \"GPLoadDialog.LocalHosts.Label\")); //$NON-NLS-1$\n      props.setLook(wlLocalHosts);\n      fdlLocalHosts = new FormData();\n      fdlLocalHosts.left = new FormAttachment(0, 0);\n      fdlLocalHosts.top = new FormAttachment(wMasterPort, margin);\n      wlLocalHosts.setLayoutData(fdlLocalHosts);\n\n      // Local Hosts Table\n      int LocalHostsColumns = 1;\n      int LocalHostsRows = (input.getLocalHosts() != null ? input.getLocalHosts().length : 1);\n      ciLocalHosts = new ColumnInfo[LocalHostsColumns];\n      ciLocalHosts[0] = new ColumnInfo(\n            BaseMessages.getString(PKG, \"GPLoadDialog.ColumnInfo.LocalHosts\"), ColumnInfo.COLUMN_TYPE_TEXT, new String[] { \"\" }, false); //$NON-NLS-1$\n\n      localHostsColumns.add(ciReturn[0]);\n      wLocalHosts = new TableView(transMeta, wLocalHostsComp, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL,\n            ciLocalHosts, LocalHostsRows, lsMod, props);\n\n      fdLocalHostsComp = new FormData();\n      fdLocalHostsComp.left = new FormAttachment(0, 0);\n      fdLocalHostsComp.top = new FormAttachment(wlLocalHosts, 0);\n      fdLocalHostsComp.right = new FormAttachment(100, 0);\n      fdLocalHostsComp.bottom = new FormAttachment(100, 0);\n      wLocalHosts.setLayoutData(fdLocalHostsComp);\n\n      wLocalHostsComp.layout();\n      wLocalHostsTab.setControl(wLocalHostsComp);\n\n      // ///////////////////////////////////////////////////////////\n      // End of Tab Folder\n      // ///////////////////////////////////////////////////////////\n      FormData fdTabFolder = new FormData();\n      fdTabFolder.left = new FormAttachment(0, 0);\n      fdTabFolder.top = new FormAttachment(wEraseFiles, margin);\n      fdTabFolder.right = new FormAttachment(100, 0);\n      fdTabFolder.bottom = new FormAttachment(100, -50);\n      wTabFolder.setLayoutData(fdTabFolder);\n\n      // set the selection to the first tab\n      wTabFolder.setSelection(0);\n\n      // THE BUTTONS\n      wOK = new Button(shell, SWT.PUSH);\n      wOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\")); //$NON-NLS-1$\n      wSQL = new Button(shell, SWT.PUSH);\n      wSQL.setText(BaseMessages.getString(PKG, \"GPLoadDialog.SQL.Button\")); //$NON-NLS-1$\n      wCancel = new Button(shell, SWT.PUSH);\n      wCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\")); //$NON-NLS-1$\n\n      setButtonPositions(new Button[] { wOK, wSQL, wCancel }, margin, null);\n\n      //\n      // Search the fields in the background\n      //\n\n      final Runnable runnable = new Runnable() {\n         public void run() {\n            StepMeta stepMeta = transMeta.findStep(stepname);\n            if (stepMeta != null) {\n               try {\n                  RowMetaInterface row = transMeta.getPrevStepFields(stepMeta);\n\n                  // Remember these fields...\n                  for (int i = 0; i < row.size(); i++) {\n                     inputFields.put(row.getValueMeta(i).getName(),\n                           Integer.valueOf(i));\n                  }\n\n                  setComboBoxes();\n               } catch (KettleException e) {\n                  logError(BaseMessages.getString(PKG,\n                        \"System.Dialog.GetFieldsFailed.Message\"));\n               }\n            }\n         }\n      };\n      new Thread(runnable).start();\n\n      wbGploadPath.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n            dialog.setFilterExtensions(new String[] { \"*\" });\n            if (wGploadPath.getText() != null) {\n               dialog.setFileName(wGploadPath.getText());\n            }\n            dialog.setFilterNames(ALL_FILETYPES);\n            if (dialog.open() != null) {\n               wGploadPath.setText(dialog.getFilterPath()\n                     + Const.FILE_SEPARATOR + dialog.getFileName());\n            }\n         }\n      });\n\n      wbControlFile.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n            dialog.setFilterExtensions(new String[] { \"*\" });\n            if (wControlFile.getText() != null) {\n               dialog.setFileName(wControlFile.getText());\n            }\n            dialog.setFilterNames(ALL_FILETYPES);\n            if (dialog.open() != null) {\n               wControlFile.setText(dialog.getFilterPath()\n                     + Const.FILE_SEPARATOR + dialog.getFileName());\n            }\n         }\n      });\n\n      wbDataFile.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n            dialog.setFilterExtensions(new String[] { \"*\" });\n            if (wDataFile.getText() != null) {\n               dialog.setFileName(wDataFile.getText());\n            }\n            dialog.setFilterNames(ALL_FILETYPES);\n            if (dialog.open() != null) {\n               wDataFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                     + dialog.getFileName());\n            }\n         }\n      });\n\n      wbLogFile.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n            dialog.setFilterExtensions(new String[] { \"*\" });\n            if (wLogFile.getText() != null) {\n               dialog.setFileName(wLogFile.getText());\n            }\n            dialog.setFilterNames(ALL_FILETYPES);\n            if (dialog.open() != null) {\n               wLogFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                     + dialog.getFileName());\n            }\n         }\n      });\n\n      // Add listeners\n      lsOK = new Listener() {\n         public void handleEvent(Event e) {\n            ok();\n         }\n      };\n      lsGetLU = new Listener() {\n         public void handleEvent(Event e) {\n            getUpdate();\n         }\n      };\n      lsSQL = new Listener() {\n         public void handleEvent(Event e) {\n            create();\n         }\n      };\n      lsCancel = new Listener() {\n         public void handleEvent(Event e) {\n            cancel();\n         }\n      };\n\n      wOK.addListener(SWT.Selection, lsOK);\n      wGetLU.addListener(SWT.Selection, lsGetLU);\n      wSQL.addListener(SWT.Selection, lsSQL);\n      wCancel.addListener(SWT.Selection, lsCancel);\n\n      lsDef = new SelectionAdapter() {\n         public void widgetDefaultSelected(SelectionEvent e) {\n            ok();\n         }\n      };\n\n      wStepname.addSelectionListener(lsDef);\n      wSchema.addSelectionListener(lsDef);\n      wTable.addSelectionListener(lsDef);\n      wMaxErrors.addSelectionListener(lsDef);\n      wDbNameOverride.addSelectionListener(lsDef);\n      wControlFile.addSelectionListener(lsDef);\n      wDataFile.addSelectionListener(lsDef);\n      wLogFile.addSelectionListener(lsDef);\n\n      // Detect X or ALT-F4 or something that kills this window...\n      shell.addShellListener(new ShellAdapter() {\n         public void shellClosed(ShellEvent e) {\n            cancel();\n         }\n      });\n\n      wbTable.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            getTableName(wSchema, wTable);\n         }\n      });\n\n      wbErrorTable.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            getTableName(wSchema, wErrorTable);\n         }\n      });\n\n      // Set the shell size, based upon previous time...\n      setSize();\n\n      getData();\n      setTableFieldCombo();\n      input.setChanged(changed);\n\n      shell.open();\n      while (!shell.isDisposed()) {\n         if (!display.readAndDispatch())\n            display.sleep();\n      }\n      return stepname;\n   }","id":39069,"modified_method":"public String open() {\n      Shell parent = getParent();\n      Display display = parent.getDisplay();\n\n      shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX\n            | SWT.MIN);\n      props.setLook(shell);\n      setShellImage(shell, input);\n\n      ModifyListener lsMod = new ModifyListener() {\n         public void modifyText(ModifyEvent e) {\n            input.setChanged();\n         }\n      };\n      FocusListener lsFocusLost = new FocusAdapter() {\n         public void focusLost(FocusEvent arg0) {\n            setTableFieldCombo();\n         }\n      };\n      changed = input.hasChanged();\n\n      FormLayout formLayout = new FormLayout();\n      formLayout.marginWidth = Const.FORM_MARGIN;\n      formLayout.marginHeight = Const.FORM_MARGIN;\n\n      shell.setLayout(formLayout);\n      shell.setText(BaseMessages.getString(PKG, \"GPLoadDialog.Shell.Title\")); //$NON-NLS-1$\n\n      int middle = props.getMiddlePct();\n      int margin = Const.MARGIN;\n\n      // Stepname line\n      wlStepname = new Label(shell, SWT.RIGHT);\n      wlStepname.setText(BaseMessages.getString(PKG, \"GPLoadDialog.Stepname.Label\")); //$NON-NLS-1$\n      props.setLook(wlStepname);\n      fdlStepname = new FormData();\n      fdlStepname.left = new FormAttachment(0, 0);\n      fdlStepname.right = new FormAttachment(middle, -margin);\n      fdlStepname.top = new FormAttachment(0, margin);\n      wlStepname.setLayoutData(fdlStepname);\n      \n      wStepname = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n      wStepname.setText(stepname);\n      props.setLook(wStepname);\n      wStepname.addModifyListener(lsMod);\n      fdStepname = new FormData();\n      fdStepname.left = new FormAttachment(middle, 0);\n      fdStepname.top = new FormAttachment(0, margin);\n      fdStepname.right = new FormAttachment(100, 0);\n      wStepname.setLayoutData(fdStepname);\n\n      // Connection line\n      wConnection = addConnectionLine(shell, wStepname, middle, margin);\n      if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1)\n         wConnection.select(0);\n      wConnection.addModifyListener(lsMod);\n\n      // Schema line...\n      wlSchema = new Label(shell, SWT.RIGHT);\n      wlSchema.setText(BaseMessages.getString(PKG, \"GPLoadDialog.TargetSchema.Label\")); //$NON-NLS-1$\n      props.setLook(wlSchema);\n      fdlSchema = new FormData();\n      fdlSchema.left = new FormAttachment(0, 0);\n      fdlSchema.right = new FormAttachment(middle, -margin);\n      fdlSchema.top = new FormAttachment(wConnection, margin * 2);\n      wlSchema.setLayoutData(fdlSchema);\n\n      wSchema = new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n      props.setLook(wSchema);\n      wSchema.addModifyListener(lsMod);\n      wSchema.addFocusListener(lsFocusLost);\n      fdSchema = new FormData();\n      fdSchema.left = new FormAttachment(middle, 0);\n      fdSchema.top = new FormAttachment(wConnection, margin * 2);\n      fdSchema.right = new FormAttachment(100, 0);\n      wSchema.setLayoutData(fdSchema);\n\n      // Table line...\n      wlTable = new Label(shell, SWT.RIGHT);\n      wlTable.setText(BaseMessages.getString(PKG, \"GPLoadDialog.TargetTable.Label\")); //$NON-NLS-1$\n      props.setLook(wlTable);\n      fdlTable = new FormData();\n      fdlTable.left = new FormAttachment(0, 0);\n      fdlTable.right = new FormAttachment(middle, -margin);\n      fdlTable.top = new FormAttachment(wSchema, margin);\n      wlTable.setLayoutData(fdlTable);\n\n      wbTable = new Button(shell, SWT.PUSH | SWT.CENTER);\n      props.setLook(wbTable);\n      wbTable.setText(BaseMessages.getString(PKG, \"GPLoadDialog.Browse.Button\")); //$NON-NLS-1$\n      fdbTable = new FormData();\n      fdbTable.right = new FormAttachment(100, 0);\n      fdbTable.top = new FormAttachment(wSchema, margin);\n      wbTable.setLayoutData(fdbTable);\n      \n      wTable = new TextVar(transMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n      props.setLook(wTable);\n      wTable.addModifyListener(lsMod);\n      wTable.addFocusListener(lsFocusLost);\n      fdTable = new FormData();\n      fdTable.left = new FormAttachment(middle, 0);\n      fdTable.top = new FormAttachment(wSchema, margin);\n      fdTable.right = new FormAttachment(wbTable, -margin);\n      wTable.setLayoutData(fdTable);\n\n      // Load Method line\n      wlLoadMethod = new Label(shell, SWT.RIGHT);\n      wlLoadMethod.setText(BaseMessages.getString(PKG, \"GPLoadDialog.LoadMethod.Label\"));\n      props.setLook(wlLoadMethod);\n      fdlLoadMethod = new FormData();\n      fdlLoadMethod.left = new FormAttachment(0, 0);\n      fdlLoadMethod.right = new FormAttachment(middle, -margin);\n      fdlLoadMethod.top = new FormAttachment(wTable, margin);\n      wlLoadMethod.setLayoutData(fdlLoadMethod);\n      wLoadMethod = new CCombo(shell, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\n      // wLoadMethod.add(BaseMessages.getString(PKG,\n      // \"GPLoadDialog.AutoConcLoadMethod.Label\"));\n      wLoadMethod.add(BaseMessages.getString(PKG, \"GPLoadDialog.AutoEndLoadMethod.Label\"));\n      wLoadMethod.add(BaseMessages.getString(PKG, \"GPLoadDialog.ManualLoadMethod.Label\"));\n      wLoadMethod.select(0); // +1: starts at -1\n      wLoadMethod.addModifyListener(lsMod);\n\n      props.setLook(wLoadMethod);\n      fdLoadMethod = new FormData();\n      fdLoadMethod.left = new FormAttachment(middle, 0);\n      fdLoadMethod.top = new FormAttachment(wTable, margin);\n      fdLoadMethod.right = new FormAttachment(100, 0);\n      wLoadMethod.setLayoutData(fdLoadMethod);\n\n      // fdLoadMethod = new FormData();\n      // fdLoadMethod.left = new FormAttachment(middle, 0);\n      // fdLoadMethod.top = new FormAttachment(wGploadPath, margin);\n      // fdLoadMethod.right = new FormAttachment(100, 0);\n      // wLoadMethod.setLayoutData(fdLoadMethod);\n      \n      // Erase files line\n      wlEraseFiles = new Label(shell, SWT.RIGHT);\n      wlEraseFiles.setText(BaseMessages.getString(PKG, \"GPLoadDialog.EraseFiles.Label\")); //$NON-NLS-1$\n      props.setLook(wlEraseFiles);\n      fdlEraseFiles = new FormData();\n      fdlEraseFiles.left = new FormAttachment(0, 0);\n      fdlEraseFiles.top = new FormAttachment(wLoadMethod, margin);\n      fdlEraseFiles.right = new FormAttachment(middle, -margin);\n      wlEraseFiles.setLayoutData(fdlEraseFiles);\n      wEraseFiles = new Button(shell, SWT.CHECK);\n      props.setLook(wEraseFiles);\n      fdEraseFiles = new FormData();\n      fdEraseFiles.left = new FormAttachment(middle, 0);\n      fdEraseFiles.top = new FormAttachment(wLoadMethod, margin);\n      fdEraseFiles.right = new FormAttachment(100, 0);\n      wEraseFiles.setLayoutData(fdEraseFiles);\n      wEraseFiles.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            input.setChanged();\n         }\n      });\n\n      // The Tab folder for field/columns, localhosts and Greenplum configuration\n      wTabFolder = new CTabFolder(shell, SWT.BORDER);\n      props.setLook(wTabFolder, PropsUI.WIDGET_STYLE_TAB);\n\n      // we have a method to add each tab\n      addFieldTabItem(wTabFolder, margin, lsMod);\n      addLocalHostsTabItem(wTabFolder, margin, lsMod, lsFocusLost);\n      addGPConfigTabItem(wTabFolder, margin, lsMod, lsFocusLost);\n        \n      // ///////////////////////////////////////////////////////////\n      // End of Tab Folder\n      // ///////////////////////////////////////////////////////////\n      FormData fdTabFolder = new FormData();\n      fdTabFolder.left = new FormAttachment(0, 0);\n      fdTabFolder.top = new FormAttachment(wEraseFiles, margin);\n      fdTabFolder.right = new FormAttachment(100, 0);\n      fdTabFolder.bottom = new FormAttachment(100, -50);\n      wTabFolder.setLayoutData(fdTabFolder);\n      \n      // set the selection to the first tab\n      wTabFolder.setSelection(0);\n      \n      // THE BUTTONS\n      wOK = new Button(shell, SWT.PUSH);\n      wOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\")); //$NON-NLS-1$\n      wSQL = new Button(shell, SWT.PUSH);\n      wSQL.setText(BaseMessages.getString(PKG, \"GPLoadDialog.SQL.Button\")); //$NON-NLS-1$\n      wCancel = new Button(shell, SWT.PUSH);\n      wCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\")); //$NON-NLS-1$\n\n      setButtonPositions(new Button[] { wOK, wSQL, wCancel }, margin, wTabFolder);\n\n      //\n      // Search the fields in the background\n      //\n\n      final Runnable runnable = new Runnable() {\n         public void run() {\n            StepMeta stepMeta = transMeta.findStep(stepname);\n            if (stepMeta != null) {\n               try {\n                  RowMetaInterface row = transMeta.getPrevStepFields(stepMeta);\n\n                  // Remember these fields...\n                  for (int i = 0; i < row.size(); i++) {\n                     inputFields.put(row.getValueMeta(i).getName(),\n                           Integer.valueOf(i));\n                  }\n\n                  setComboBoxes();\n               } catch (KettleException e) {\n                  logError(BaseMessages.getString(PKG,\n                        \"System.Dialog.GetFieldsFailed.Message\"));\n               }\n            }\n         }\n      };\n      new Thread(runnable).start();\n\n      wbGploadPath.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n            dialog.setFilterExtensions(new String[] { \"*\" });\n            if (wGploadPath.getText() != null) {\n               dialog.setFileName(wGploadPath.getText());\n            }\n            dialog.setFilterNames(ALL_FILETYPES);\n            if (dialog.open() != null) {\n               wGploadPath.setText(dialog.getFilterPath()\n                     + Const.FILE_SEPARATOR + dialog.getFileName());\n            }\n         }\n      });\n\n      wbControlFile.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n            dialog.setFilterExtensions(new String[] { \"*\" });\n            if (wControlFile.getText() != null) {\n               dialog.setFileName(wControlFile.getText());\n            }\n            dialog.setFilterNames(ALL_FILETYPES);\n            if (dialog.open() != null) {\n               wControlFile.setText(dialog.getFilterPath()\n                     + Const.FILE_SEPARATOR + dialog.getFileName());\n            }\n         }\n      });\n\n      wbDataFile.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n            dialog.setFilterExtensions(new String[] { \"*\" });\n            if (wDataFile.getText() != null) {\n               dialog.setFileName(wDataFile.getText());\n            }\n            dialog.setFilterNames(ALL_FILETYPES);\n            if (dialog.open() != null) {\n               wDataFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                     + dialog.getFileName());\n            }\n         }\n      });\n\n      wbLogFile.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n            dialog.setFilterExtensions(new String[] { \"*\" });\n            if (wLogFile.getText() != null) {\n               dialog.setFileName(wLogFile.getText());\n            }\n            dialog.setFilterNames(ALL_FILETYPES);\n            if (dialog.open() != null) {\n               wLogFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                     + dialog.getFileName());\n            }\n         }\n      });\n\n      // Add listeners\n      lsOK = new Listener() {\n         public void handleEvent(Event e) {\n            ok();\n         }\n      };\n      lsGetLU = new Listener() {\n         public void handleEvent(Event e) {\n            getUpdate();\n         }\n      };\n      lsSQL = new Listener() {\n         public void handleEvent(Event e) {\n            create();\n         }\n      };\n      lsCancel = new Listener() {\n         public void handleEvent(Event e) {\n            cancel();\n         }\n      };\n\n      wOK.addListener(SWT.Selection, lsOK);\n      wGetLU.addListener(SWT.Selection, lsGetLU);\n      wSQL.addListener(SWT.Selection, lsSQL);\n      wCancel.addListener(SWT.Selection, lsCancel);\n\n      lsDef = new SelectionAdapter() {\n         public void widgetDefaultSelected(SelectionEvent e) {\n            ok();\n         }\n      };\n\n      wStepname.addSelectionListener(lsDef);\n      wSchema.addSelectionListener(lsDef);\n      wTable.addSelectionListener(lsDef);\n      wMaxErrors.addSelectionListener(lsDef);\n      wControlFile.addSelectionListener(lsDef);\n      wDataFile.addSelectionListener(lsDef);\n      wLogFile.addSelectionListener(lsDef);\n\n      // Detect X or ALT-F4 or something that kills this window...\n      shell.addShellListener(new ShellAdapter() {\n         public void shellClosed(ShellEvent e) {\n            cancel();\n         }\n      });\n\n      wbTable.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            getTableName(wSchema, wTable);\n         }\n      });\n\n      wbErrorTable.addSelectionListener(new SelectionAdapter() {\n         public void widgetSelected(SelectionEvent e) {\n            getTableName(wSchema, wErrorTable);\n         }\n      });\n\n      // Set the shell size, based upon previous time...\n      setSize();\n\n      getData();\n      setTableFieldCombo();\n      input.setChanged(changed);\n\n      shell.open();\n      while (!shell.isDisposed()) {\n         if (!display.readAndDispatch())\n            display.sleep();\n      }\n      return stepname;\n   }","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void readRep(Repository rep, ObjectId id_step, List<DatabaseMeta> databases, Map<String, Counter> counters)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tdatabaseMeta = rep.loadDatabaseMetaFromStepAttribute(id_step, \"id_connection\", databases);\n     \t\tmaxErrors      = (int)rep.getStepAttributeInteger(id_step, \"errors\");         //$NON-NLS-1$\n         schemaName     =      rep.getStepAttributeString(id_step,  \"schema\");         //$NON-NLS-1$\n\t\t\ttableName      =      rep.getStepAttributeString(id_step,  \"table\");          //$NON-NLS-1$\n\t\t\terrorTableName =      rep.getStepAttributeString(id_step,  \"error_table\");    //$NON-NLS-1$\n\t\t\tloadMethod     =      rep.getStepAttributeString(id_step,  \"load_method\");    //$NON-NLS-1$\n\t\t\tloadAction     =      rep.getStepAttributeString(id_step,  \"load_action\");    //$NON-NLS-1$\n\t\t\tgploadPath     =      rep.getStepAttributeString(id_step,  \"gpload_path\");    //$NON-NLS-1$\n\t\t\tcontrolFile    =      rep.getStepAttributeString(id_step,  \"control_file\");   //$NON-NLS-1$\n\t\t\tdataFile       =      rep.getStepAttributeString(id_step,  \"data_file\");      //$NON-NLS-1$\n\t\t\tlogFile        =      rep.getStepAttributeString(id_step,  \"log_file\");       //$NON-NLS-1$\n\t\t\teraseFiles     =      rep.getStepAttributeBoolean(id_step, \"erase_files\");    //$NON-NLS-1$\n\t\t\tencoding       =      rep.getStepAttributeString(id_step,  \"encoding\");       //$NON-NLS-1$\n\t\t\tdbNameOverride =      rep.getStepAttributeString(id_step,  \"dbname_override\");//$NON-NLS-1$\n\t\t\tmasterPort     =      rep.getStepAttributeString(id_step, \"master_port\");    //$NON-NLS-1$\n\t\t\tencloseNumbers =      (rep.getStepAttributeString(id_step, \"enclose_numbers\").equalsIgnoreCase(\"Y\")?true:false); //$NON-NLS-1$  \n\t\n\t\t\tint numberOfLocalHosts = rep.countNrStepAttributes(id_step, \"local_hosts\");\n\t\t\tallocateLocalHosts(numberOfLocalHosts);\n         for (int i=0; i< numberOfLocalHosts; i++) {\n            localHosts[i] = rep.getStepAttributeString(id_step, i, \"local_host\");   //$NON-NLS-1$\n         }\n\t\t\t\n         int nrvalues = rep.countNrStepAttributes(id_step, \"stream_name\");             //$NON-NLS-1$\n         allocate(nrvalues);\n\n         for (int i=0;i<nrvalues;i++)\n         {\n            fieldTable[i]  = rep.getStepAttributeString(id_step, i, \"stream_name\");   //$NON-NLS-1$\n            fieldStream[i] = rep.getStepAttributeString(id_step, i, \"field_name\");    //$NON-NLS-1$\n            dateMask[i]    = rep.getStepAttributeString(id_step, i, \"date_mask\");     //$NON-NLS-1$\n         }\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tthrow new KettleException(BaseMessages.getString(PKG, \"GPLoadMeta.Exception.UnexpectedErrorReadingStepInfoFromRepository\"), e); //$NON-NLS-1$\n\t\t}\n\t}","id":39070,"modified_method":"public void readRep(Repository rep, ObjectId id_step, List<DatabaseMeta> databases, Map<String, Counter> counters)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tdatabaseMeta = rep.loadDatabaseMetaFromStepAttribute(id_step, \"id_connection\", databases);\n     \t\tmaxErrors      =      rep.getStepAttributeString(id_step, \"errors\");         //$NON-NLS-1$\n         schemaName     =      rep.getStepAttributeString(id_step,  \"schema\");         //$NON-NLS-1$\n\t\t\ttableName      =      rep.getStepAttributeString(id_step,  \"table\");          //$NON-NLS-1$\n\t\t\terrorTableName =      rep.getStepAttributeString(id_step,  \"error_table\");    //$NON-NLS-1$\n\t\t\tloadMethod     =      rep.getStepAttributeString(id_step,  \"load_method\");    //$NON-NLS-1$\n\t\t\tloadAction     =      rep.getStepAttributeString(id_step,  \"load_action\");    //$NON-NLS-1$\n\t\t\tgploadPath     =      rep.getStepAttributeString(id_step,  \"gpload_path\");    //$NON-NLS-1$\n\t\t\tcontrolFile    =      rep.getStepAttributeString(id_step,  \"control_file\");   //$NON-NLS-1$\n\t\t\tdataFile       =      rep.getStepAttributeString(id_step,  \"data_file\");      //$NON-NLS-1$\n\t\t\tdelimiter       =     rep.getStepAttributeString(id_step,  \"delimiter\");      //$NON-NLS-1$\n         logFile        =      rep.getStepAttributeString(id_step,  \"log_file\");       //$NON-NLS-1$\n\t\t\teraseFiles     =      rep.getStepAttributeBoolean(id_step, \"erase_files\");    //$NON-NLS-1$\n\t\t\tencoding       =      rep.getStepAttributeString(id_step,  \"encoding\");       //$NON-NLS-1$\n\t\t\tmasterPort     =      rep.getStepAttributeString(id_step, \"master_port\");    //$NON-NLS-1$\n\t\t\tencloseNumbers =      (rep.getStepAttributeString(id_step, \"enclose_numbers\").equalsIgnoreCase(\"Y\")?true:false); //$NON-NLS-1$  \n\t\n\t\t\tint numberOfLocalHosts = rep.countNrStepAttributes(id_step, \"local_hosts\");\n\t\t\tallocateLocalHosts(numberOfLocalHosts);\n         for (int i=0; i< numberOfLocalHosts; i++) {\n            localHosts[i] = rep.getStepAttributeString(id_step, i, \"local_host\");   //$NON-NLS-1$\n         }\n\t\t\t\n         int nrvalues = rep.countNrStepAttributes(id_step, \"stream_name\");             //$NON-NLS-1$\n         allocate(nrvalues);\n\n         for (int i=0;i<nrvalues;i++)\n         {\n            fieldTable[i]  = rep.getStepAttributeString(id_step, i, \"stream_name\");   //$NON-NLS-1$\n            fieldStream[i] = rep.getStepAttributeString(id_step, i, \"field_name\");    //$NON-NLS-1$\n            dateMask[i]    = rep.getStepAttributeString(id_step, i, \"date_mask\");     //$NON-NLS-1$\n            matchColumn[i] = rep.getStepAttributeBoolean(id_step, i, \"match_column\");     //$NON-NLS-1$\n            updateColumn[i] = rep.getStepAttributeBoolean(id_step, i, \"update_column\");     //$NON-NLS-1$\n         }\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tthrow new KettleException(BaseMessages.getString(PKG, \"GPLoadMeta.Exception.UnexpectedErrorReadingStepInfoFromRepository\"), e); //$NON-NLS-1$\n\t\t}\n\t}","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep(Repository rep, ObjectId id_transformation, ObjectId id_step)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\trep.saveDatabaseMetaStepAttribute(id_transformation, id_step, \"id_connection\", databaseMeta);\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"errors\",          maxErrors);     //$NON-NLS-1$\n         rep.saveStepAttribute(id_transformation, id_step, \"schema\",          schemaName);    //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"table\",           tableName);     //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"errorTable\",      errorTableName);     //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"load_method\",     loadMethod);    //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"load_action\",     loadAction);    //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"gpload_path\",     gploadPath);        //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"control_file\",    controlFile);   //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"data_file\",       dataFile);      //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"log_file\",        logFile);       //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"erase_files\",     eraseFiles);    //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"encoding\",        encoding);      //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"dbname_override\", dbNameOverride);//$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"enclose_numbers\", (encloseNumbers?\"Y\":\"N\"));//$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"master_port\", masterPort);//$NON-NLS-1$\n\n\t\t\tfor (int i=0;i <localHosts.length; i++) {\n\t\t\t   rep.saveStepAttribute(id_transformation, id_step, i, \"local_host\", fieldTable[i]);  //$NON-NLS-1$\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i=0;i<fieldTable.length;i++)\n\t\t\t{\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"stream_name\", fieldTable[i]);  //$NON-NLS-1$\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_name\",  fieldStream[i]); //$NON-NLS-1$\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"date_mask\",   dateMask[i]);    //$NON-NLS-1$\n\t\t\t}\n\n\t\t\t// Also, save the step-database relationship!\n\t\t\tif (databaseMeta!=null) rep.insertStepDatabase(id_transformation, id_step, databaseMeta.getObjectId());\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tthrow new KettleException(BaseMessages.getString(PKG, \"GPLoadMeta.Exception.UnableToSaveStepInfoToRepository\")+id_step, e); //$NON-NLS-1$\n\t\t}\n\t}","id":39071,"modified_method":"public void saveRep(Repository rep, ObjectId id_transformation, ObjectId id_step)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\trep.saveDatabaseMetaStepAttribute(id_transformation, id_step, \"id_connection\", databaseMeta);\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"errors\",          maxErrors);     //$NON-NLS-1$\n         rep.saveStepAttribute(id_transformation, id_step, \"schema\",          schemaName);    //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"table\",           tableName);     //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"errorTable\",      errorTableName);     //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"load_method\",     loadMethod);    //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"load_action\",     loadAction);    //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"gpload_path\",     gploadPath);        //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"control_file\",    controlFile);   //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"data_file\",       dataFile);      //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"delimiter\",       delimiter);      //$NON-NLS-1$\n         rep.saveStepAttribute(id_transformation, id_step, \"log_file\",        logFile);       //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"erase_files\",     eraseFiles);    //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"encoding\",        encoding);      //$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"enclose_numbers\", (encloseNumbers?\"Y\":\"N\"));//$NON-NLS-1$\n\t\t\trep.saveStepAttribute(id_transformation, id_step, \"master_port\", masterPort);//$NON-NLS-1$\n\n\t\t\tfor (int i=0;i <localHosts.length; i++) {\n\t\t\t   rep.saveStepAttribute(id_transformation, id_step, i, \"local_host\", fieldTable[i]);  //$NON-NLS-1$\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i=0;i<fieldTable.length;i++)\n\t\t\t{\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"stream_name\", fieldTable[i]);  //$NON-NLS-1$\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"field_name\",  fieldStream[i]); //$NON-NLS-1$\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"date_mask\",   dateMask[i]);    //$NON-NLS-1$\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"match_column\",   matchColumn[i]);    //$NON-NLS-1$\n\t\t\t\trep.saveStepAttribute(id_transformation, id_step, i, \"update_column\",   updateColumn[i]);    //$NON-NLS-1$\n\t\t\t}\n\n\t\t\t// Also, save the step-database relationship!\n\t\t\tif (databaseMeta!=null) rep.insertStepDatabase(id_transformation, id_step, databaseMeta.getObjectId());\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tthrow new KettleException(BaseMessages.getString(PKG, \"GPLoadMeta.Exception.UnableToSaveStepInfoToRepository\")+id_step, e); //$NON-NLS-1$\n\t\t}\n\t}","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String getDelimiter() {\n\t\treturn \",\";\n\t}","id":39072,"modified_method":"public String getDelimiter() {\n\t\treturn delimiter;\n\t}","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String getXML()\n\t{\n        StringBuffer retval = new StringBuffer(300);\n\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"connection\",   databaseMeta==null?\"\":databaseMeta.getName())); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"errors\",       maxErrors));     //$NON-NLS-1$ //$NON-NLS-2$\n        retval.append(\"    \").append(XMLHandler.addTagValue(\"schema\",       schemaName));    //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"table\",        tableName));     //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"error_table\",  errorTableName));     //$NON-NLS-1$ //$NON-NLS-2$\n      retval.append(\"    \").append(XMLHandler.addTagValue(\"load_method\",  loadMethod));    //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"load_action\",  loadAction));    //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"gpload_path\",  gploadPath));        //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"control_file\", controlFile));   //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"data_file\",    dataFile));      //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"log_file\",     logFile));       //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"erase_files\",  eraseFiles));    //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"encoding\",     encoding));      //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"dbname_override\", dbNameOverride));      //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"enclose_numbers\", (encloseNumbers?\"Y\":\"N\")));      //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"master_port\",     masterPort));       //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\n\t\tfor (int i=0;i<fieldTable.length;i++)\n\t\t{\n\t\t\tretval.append(\"      <mapping>\").append(Const.CR); //$NON-NLS-1$\n\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"stream_name\", fieldTable[i])); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"field_name\",  fieldStream[i])); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"date_mask\",   dateMask[i])); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\tretval.append(\"      <\/mapping>\").append(Const.CR); //$NON-NLS-1$\n\t\t}\n\t\t\n\t\tretval.append(\"      <local_hosts>\").append(Const.CR); //$NON-NLS-1$\n\t\tfor (String localHost: localHosts) {\n\t\t   retval.append(\"        \").append(XMLHandler.addTagValue(\"local_host\", localHost)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t}\n\t\tretval.append(\"      <\/local_hosts>\").append(Const.CR); //$NON-NLS-1$\n\t\t\n\t\treturn retval.toString();\n\t}","id":39073,"modified_method":"public String getXML()\n\t{\n        StringBuffer retval = new StringBuffer(300);\n\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"connection\",   databaseMeta==null?\"\":databaseMeta.getName())); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"errors\",       maxErrors));     //$NON-NLS-1$ //$NON-NLS-2$\n      retval.append(\"    \").append(XMLHandler.addTagValue(\"schema\",       schemaName));    //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"table\",        tableName));     //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"error_table\",  errorTableName));     //$NON-NLS-1$ //$NON-NLS-2$\n      retval.append(\"    \").append(XMLHandler.addTagValue(\"load_method\",  loadMethod));    //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"load_action\",  loadAction));    //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"gpload_path\",  gploadPath));        //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"control_file\", controlFile));   //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"data_file\",    dataFile));      //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"delimiter\",    delimiter));      //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"log_file\",     logFile));       //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"erase_files\",  eraseFiles));    //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"encoding\",     encoding));      //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"enclose_numbers\", (encloseNumbers?\"Y\":\"N\")));      //$NON-NLS-1$ //$NON-NLS-2$\n\t\tretval.append(\"    \").append(XMLHandler.addTagValue(\"master_port\",     masterPort));       //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\n\t\tfor (int i=0;i<fieldTable.length;i++)\n\t\t{\n\t\t\tretval.append(\"      <mapping>\").append(Const.CR); //$NON-NLS-1$\n\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"stream_name\", fieldTable[i])); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"field_name\",  fieldStream[i])); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"date_mask\",   dateMask[i])); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"match_column\",   (matchColumn[i]?\"Y\":\"N\"))); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\tretval.append(\"        \").append(XMLHandler.addTagValue(\"update_column\",   (updateColumn[i]?\"Y\":\"N\"))); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\tretval.append(\"      <\/mapping>\").append(Const.CR); //$NON-NLS-1$\n\t\t}\n\t\t\n\t\tretval.append(\"      <local_hosts>\").append(Const.CR); //$NON-NLS-1$\n\t\tfor (String localHost: localHosts) {\n\t\t   retval.append(\"        \").append(XMLHandler.addTagValue(\"local_host\", localHost)); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t}\n\t\tretval.append(\"      <\/local_hosts>\").append(Const.CR); //$NON-NLS-1$\n\t\t\n\t\treturn retval.toString();\n\t}","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public int getMaxErrors() {\n\t\treturn maxErrors;\n\t}","id":39074,"modified_method":"public String getMaxErrors() {\n\t\treturn maxErrors;\n\t}","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void setDefault()\n\t{\n\t\tfieldTable   = null;\n\t\tdatabaseMeta = null;\n\t\tmaxErrors    = 50;\n      schemaName   = \"\";                //$NON-NLS-1$\n      masterPort   = \n\t\ttableName    = BaseMessages.getString(PKG, \"GPLoadMeta.DefaultTableName\"); //$NON-NLS-1$\n\t\terrorTableName = BaseMessages.getString(PKG, \"GPLocal.ErrorTable.Prefix\")+tableName;\n\t\tloadMethod   = METHOD_AUTO_END;\n\t\tloadAction   = ACTION_INSERT;\n\t\tgploadPath   = \"/usr/local/greenplum-db/bin/gpload\";                              //$NON-NLS-1$\n\t\tcontrolFile  = \"control${Internal.Step.CopyNr}.cfg\";  //$NON-NLS-1$\n\t\tdataFile     = \"load${Internal.Step.CopyNr}.dat\";     //$NON-NLS-1$\n\t\tlogFile      = \"\";                                    //$NON-NLS-1$\n      encoding     = \"\";                                    //$NON-NLS-1$\n\t\tdbNameOverride = \"\";\n\t\tencloseNumbers = false;\n      eraseFiles   = true;\n\n\t\tallocate(0);\t\n\t\tallocateLocalHosts(0);\n\t}","id":39075,"modified_method":"public void setDefault()\n\t{\n\t   \n\t   //  TODO: Make non empty defaults public static Strings\n\t   \n\t\tfieldTable   = null;\n\t\tdatabaseMeta = null;\n\t\tmaxErrors    = GPLoadMeta.MAX_ERRORS_DEFAULT;\n      schemaName   = \"\";                //$NON-NLS-1$\n      masterPort   = \"\";\n\t\ttableName    = BaseMessages.getString(PKG, \"GPLoadMeta.DefaultTableName\"); //$NON-NLS-1$\n\t\terrorTableName = \"\"; //BaseMessages.getString(PKG, \"GPLocal.ErrorTable.Prefix\")+tableName;\n\t\tloadMethod   = METHOD_AUTO_END;\n\t\tloadAction   = ACTION_INSERT;\n\t\tgploadPath   = \"/usr/local/greenplum-db/bin/gpload\";                              //$NON-NLS-1$\n\t\tcontrolFile  = \"control${Internal.Step.CopyNr}.cfg\";  //$NON-NLS-1$\n\t\tdataFile     = \"load${Internal.Step.CopyNr}.dat\";     //$NON-NLS-1$\n\t\tlogFile      = \"\";                                    //$NON-NLS-1$\n      encoding     = \"\";                                    //$NON-NLS-1$\n\t\tdelimiter = \",\";\n\t\tencloseNumbers = false;\n      eraseFiles   = true;\n\n\t\tallocate(0);\t\n\t\tallocateLocalHosts(0);\n\t}","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void allocate(int nrvalues)\n\t{\n\t\tfieldTable  = new String[nrvalues];\n\t\tfieldStream = new String[nrvalues];\n\t\tdateMask    = new String[nrvalues];\n\t}","id":39076,"modified_method":"public void allocate(int nrvalues)\n\t{\n\t\tfieldTable  = new String[nrvalues];\n\t\tfieldStream = new String[nrvalues];\n\t\tdateMask    = new String[nrvalues];\n\t\tmatchColumn = new boolean[nrvalues];\n\t\tupdateColumn = new boolean[nrvalues];\n\t\t\n\t}","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void setMaxErrors(int maxErrors) {\n\t\tthis.maxErrors = maxErrors;\n\t}","id":39077,"modified_method":"public void setMaxErrors(String maxErrors) {\n\t\tthis.maxErrors = maxErrors;\n\t}","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public Object clone()\n\t{\n\t\tGPLoadMeta retval = (GPLoadMeta)super.clone();\n\t\tint nrvalues  = fieldTable.length;\n\n\t\tretval.allocate(nrvalues);\n\n\t\tfor (int i=0;i<nrvalues;i++)\n\t\t{\n\t\t\tretval.fieldTable[i]  = fieldTable[i];\n\t\t\tretval.fieldStream[i] = fieldStream[i];\n\t\t\tretval.dateMask[i]    = dateMask[i];\n\t\t}\n\t\treturn retval;\n\t}","id":39078,"modified_method":"public Object clone()\n\t{\n\t\tGPLoadMeta retval = (GPLoadMeta)super.clone();\n\t\tint nrvalues  = fieldTable.length;\n\n\t\tretval.allocate(nrvalues);\n\n\t\tfor (int i=0;i<nrvalues;i++)\n\t\t{\n\t\t\tretval.fieldTable[i]  = fieldTable[i];\n\t\t\tretval.fieldStream[i] = fieldStream[i];\n\t\t\tretval.dateMask[i]    = dateMask[i];\n\t\t\tretval.matchColumn[i] = matchColumn[i];\n\t\t\tretval.updateColumn[i] = updateColumn[i];\n\t\t}\n\t\treturn retval;\n\t}","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void readData(Node stepnode, List<? extends SharedObjectInterface> databases)\n\t\tthrows KettleXMLException\n\t{\n\t\ttry\n\t\t{\n\t\t\tString con     = XMLHandler.getTagValue(stepnode, \"connection\");   //$NON-NLS-1$\n\t\t\tdatabaseMeta   = DatabaseMeta.findDatabase(databases, con);\n\n\t\t\tString serror   = XMLHandler.getTagValue(stepnode, \"errors\");       //$NON-NLS-1$\n\t\t\tmaxErrors      = Const.toInt(serror, 50);      // default to 50.               \n\n            schemaName     = XMLHandler.getTagValue(stepnode, \"schema\");       //$NON-NLS-1$\n\t\t\ttableName      = XMLHandler.getTagValue(stepnode, \"table\");        //$NON-NLS-1$\n\t\t\terrorTableName      = XMLHandler.getTagValue(stepnode, \"error_table\");        //$NON-NLS-1$\n         \n\t\t\tloadMethod     = XMLHandler.getTagValue(stepnode, \"load_method\");  //$NON-NLS-1$\n\t\t\tloadAction     = XMLHandler.getTagValue(stepnode, \"load_action\");  //$NON-NLS-1$\t\t\t\n\t\t\tgploadPath     = XMLHandler.getTagValue(stepnode, \"gpload_path\");       //$NON-NLS-1$\n\t\t\tcontrolFile    = XMLHandler.getTagValue(stepnode, \"control_file\"); //$NON-NLS-1$\n\t\t\tdataFile       = XMLHandler.getTagValue(stepnode, \"data_file\");    //$NON-NLS-1$\n\t\t\tlogFile        = XMLHandler.getTagValue(stepnode, \"log_file\");     //$NON-NLS-1$\n\t\t\teraseFiles     = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(stepnode, \"erase_files\")); //$NON-NLS-1$\n\t\t\tencoding       = XMLHandler.getTagValue(stepnode, \"encoding\");         //$NON-NLS-1$\n\t\t\tdbNameOverride = XMLHandler.getTagValue(stepnode, \"dbname_override\");  //$NON-NLS-1$\n\n\t\t\tNode localHostsNode = XMLHandler.getSubNode(stepnode, \"local_hosts\");\n\t\t\tint nLocalHosts = XMLHandler.countNodes(localHostsNode, \"local_host\");//$NON-NLS-1$\n\t\t\tallocateLocalHosts(nLocalHosts);\n\t\t\tfor (int i=0; i<nLocalHosts; i++) {\n\t\t\t   Node localHostNode = XMLHandler.getSubNodeByNr(localHostsNode, \"local_host\", i);    //$NON-NLS-1$\n\t\t\t   localHosts[i]      = XMLHandler.getNodeValue(localHostNode); //$NON-NLS-1$\n\t\t\t}\n\t\t\tmasterPort = XMLHandler.getTagValue(stepnode, \"master_port\");        //$NON-NLS-1$\n\t\t\t\n\t\t\tint nrvalues = XMLHandler.countNodes(stepnode, \"mapping\");      //$NON-NLS-1$\n\t\t\tallocate(nrvalues);\n\n\t\t\tfor (int i=0;i<nrvalues;i++)\n\t\t\t{\n\t\t\t\tNode vnode = XMLHandler.getSubNodeByNr(stepnode, \"mapping\", i);    //$NON-NLS-1$\n\n\t\t\t\tfieldTable[i]      = XMLHandler.getTagValue(vnode, \"stream_name\"); //$NON-NLS-1$\n\t\t\t\tfieldStream[i]     = XMLHandler.getTagValue(vnode, \"field_name\");  //$NON-NLS-1$\n\t\t\t\tif (fieldStream[i]==null) fieldStream[i]=fieldTable[i];            // default: the same name!\n\t\t\t\tString locDateMask = XMLHandler.getTagValue(vnode, \"date_mask\");   //$NON-NLS-1$\n\t\t\t\tif(locDateMask==null) {\n\t\t\t\t\tdateMask[i] = \"\";\n\t\t\t\t} \n\t\t\t\telse\n                {\n                    if (GPLoadMeta.DATE_MASK_DATE.equals(locDateMask) ||\n                        GPLoadMeta.DATE_MASK_DATETIME.equals(locDateMask) )\n                    {\n                        dateMask[i] = locDateMask;\n                    }\n                    else\n                    {\n                    \tdateMask[i] = \"\";\n                    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tthrow new KettleXMLException(BaseMessages.getString(PKG, \"GPLoadMeta.Exception.UnableToReadStepInfoFromXML\"), e); //$NON-NLS-1$\n\t\t}\n\t}","id":39079,"modified_method":"private void readData(Node stepnode, List<? extends SharedObjectInterface> databases)\n\t\tthrows KettleXMLException\n\t{\n\t\ttry\n\t\t{\n\t\t\tString con     = XMLHandler.getTagValue(stepnode, \"connection\");   //$NON-NLS-1$\n\t\t\tdatabaseMeta   = DatabaseMeta.findDatabase(databases, con);\n\t\t\tmaxErrors      = XMLHandler.getTagValue(stepnode, \"errors\");       //$NON-NLS-1$  \n         schemaName     = XMLHandler.getTagValue(stepnode, \"schema\");       //$NON-NLS-1$\n\t\t\ttableName      = XMLHandler.getTagValue(stepnode, \"table\");        //$NON-NLS-1$\n\t\t\terrorTableName = XMLHandler.getTagValue(stepnode, \"error_table\");        //$NON-NLS-1$\n\t\t\tloadMethod     = XMLHandler.getTagValue(stepnode, \"load_method\");  //$NON-NLS-1$\n\t\t\tloadAction     = XMLHandler.getTagValue(stepnode, \"load_action\");  //$NON-NLS-1$\t\t\t\n\t\t\tgploadPath     = XMLHandler.getTagValue(stepnode, \"gpload_path\");       //$NON-NLS-1$\n\t\t\tcontrolFile    = XMLHandler.getTagValue(stepnode, \"control_file\"); //$NON-NLS-1$\n\t\t\tdataFile       = XMLHandler.getTagValue(stepnode, \"data_file\");    //$NON-NLS-1$\n\t\t\tdelimiter      = XMLHandler.getTagValue(stepnode, \"delimiter\");    //$NON-NLS-1$\n\t\t\tlogFile        = XMLHandler.getTagValue(stepnode, \"log_file\");     //$NON-NLS-1$\n\t\t\teraseFiles     = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(stepnode, \"erase_files\")); //$NON-NLS-1$\n\t\t\tencoding       = XMLHandler.getTagValue(stepnode, \"encoding\");         //$NON-NLS-1$\n\n\t\t\tNode localHostsNode = XMLHandler.getSubNode(stepnode, \"local_hosts\");\n\t\t\tint nLocalHosts = XMLHandler.countNodes(localHostsNode, \"local_host\");//$NON-NLS-1$\n\t\t\tallocateLocalHosts(nLocalHosts);\n\t\t\tfor (int i=0; i<nLocalHosts; i++) {\n\t\t\t   Node localHostNode = XMLHandler.getSubNodeByNr(localHostsNode, \"local_host\", i);    //$NON-NLS-1$\n\t\t\t   localHosts[i]      = XMLHandler.getNodeValue(localHostNode); //$NON-NLS-1$\n\t\t\t}\n\t\t\tmasterPort = XMLHandler.getTagValue(stepnode, \"master_port\");        //$NON-NLS-1$\n\t\t\t\n\t\t\tint nrvalues = XMLHandler.countNodes(stepnode, \"mapping\");      //$NON-NLS-1$\n\t\t\tallocate(nrvalues);\n\n\t\t\tfor (int i=0;i<nrvalues;i++)\n\t\t\t{\n\t\t\t\tNode vnode = XMLHandler.getSubNodeByNr(stepnode, \"mapping\", i);    //$NON-NLS-1$\n\n\t\t\t\tfieldTable[i]      = XMLHandler.getTagValue(vnode, \"stream_name\"); //$NON-NLS-1$\n\t\t\t\tfieldStream[i]     = XMLHandler.getTagValue(vnode, \"field_name\");  //$NON-NLS-1$\n\t\t\t\tif (fieldStream[i]==null) fieldStream[i]=fieldTable[i];            // default: the same name!\n\t\t\t\tString locDateMask = XMLHandler.getTagValue(vnode, \"date_mask\");   //$NON-NLS-1$\n\t\t\t\tif(locDateMask==null) {\n\t\t\t\t\tdateMask[i] = \"\";\n\t\t\t\t} \n\t\t\t\telse\n                {\n                    if (GPLoadMeta.DATE_MASK_DATE.equals(locDateMask) ||\n                        GPLoadMeta.DATE_MASK_DATETIME.equals(locDateMask) )\n                    {\n                        dateMask[i] = locDateMask;\n                    }\n                    else\n                    {\n                    \tdateMask[i] = \"\";\n                    }\n\t\t\t\t}\n\t\t\t\t                  \n\t\t\t\t\n\t\t\t\tmatchColumn[i] = (\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(vnode, \"match_column\"))); \n\t\t\t\tupdateColumn[i] = (\"Y\".equalsIgnoreCase(XMLHandler.getTagValue(vnode, \"update_column\")));  //$NON-NLS-1$\n\t\t\t}\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tthrow new KettleXMLException(BaseMessages.getString(PKG, \"GPLoadMeta.Exception.UnableToReadStepInfoFromXML\"), e); //$NON-NLS-1$\n\t\t}\n\t}","commit_id":"4dd353767967d9cf82f4d178707df5b780e3c871","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * @return the code in string format\n\t */\n\tpublic String getCodeDesc() { \n\t\tif (!Const.isEmpty(validatorField.getErrorCode())) return validatorField.getErrorCode();\n\t\treturn errorCode[code];\n\t}","id":39080,"modified_method":"/**\n     * @return the code in string format\n     */\n    public String getCodeDesc() { \n        if (!Const.isEmpty(validatorField.getErrorCode())) {\n            String validatorCode = validator.environmentSubstitute(validatorField.getErrorCode());\n            return validatorCode;\n        }\n        return errorCode[code];\n    }","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@Override\n\tpublic String getMessage() {\n\t\tif (!Const.isEmpty(validatorField.getErrorDescription())) return validatorField.getErrorDescription();\n\t\treturn super.getMessage();\n\t}","id":39081,"modified_method":"@Override\n    public String getMessage() {\n        if (!Const.isEmpty(validatorField.getErrorDescription())) {\n            return validator.environmentSubstitute(validatorField.getErrorDescription());\n        }\n        \n        return super.getMessage();\n    }","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * Constructs a new Throwable with the specified detail message.\n\t * @param code - the error code, see the static members of this class.\n\t * @param message - the detail message. The detail message is saved for later retrieval by the getMessage() method.\n\t */\n\tpublic KettleValidatorException(Validation validatorField, int code, String message, String fieldname)\n\t{\n\t\tsuper(message);\n\t\tthis.validatorField = validatorField;\n\t\tthis.code = code;\n\t\tthis.fieldname = fieldname;\n\t}","id":39082,"modified_method":"/**\n\t * Constructs a new Throwable with the specified detail message.\n\t * \n\t * @param Validator - the instance of Validator that this object will reference use environmenSubsitute invokation.  The class is probably where this object is being created.\n     * @param validatorField - the Validation in which the failure happened and this exception is to be created for.\n\t * @param code - the error code, see the static members of this class.\n\t * @param message - the detail message. The detail message is saved for later retrieval by the getMessage() method.\n\t * @param fieldName - the name of the field that failed Validation.\n\t */\n\tpublic KettleValidatorException(Validator validator, Validation validatorField, int code, String message, String fieldname)\n\t{\n\t\tsuper(message);\n\t\tthis.validator = validator;\n\t\tthis.validatorField = validatorField;\n\t\tthis.code = code;\n\t\tthis.fieldname = fieldname;\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * @return the maximumLength\n\t */\n\tpublic int getMaximumLength() {\n\t\treturn maximumLength;\n\t}","id":39083,"modified_method":"/**\n\t * @return the maximumLength\n\t */\n\tpublic String getMaximumLength() {\n\t\treturn maximumLength;\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * @return the minimumLength\n\t */\n\tpublic int getMinimumLength() {\n\t\treturn minimumLength;\n\t}","id":39084,"modified_method":"/**\n\t * @return the minimumLength\n\t */\n\tpublic String getMinimumLength() {\n\t\treturn minimumLength;\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public Validation(Repository rep, ObjectId id_step, int i) throws KettleException {\n\t\tfieldName = rep.getStepAttributeString(id_step, i, \"validator_field_name\");\n\t\tname = rep.getStepAttributeString(id_step, i, \"validator_field_validation_name\");\n\t\tif (Const.isEmpty(name)) name = fieldName; // remain backward compatible\n\t\t\n\t\tmaximumLength = (int)rep.getStepAttributeInteger(id_step, i, \"validator_field_max_length\");\n\t\tminimumLength = (int)rep.getStepAttributeInteger(id_step, i, \"validator_field_min_length\");\n\n\t\tnullAllowed = rep.getStepAttributeBoolean(id_step, i, \"validator_field_null_allowed\");\n\t\tonlyNullAllowed = rep.getStepAttributeBoolean(id_step, i, \"validator_field_only_null_allowed\");\n\t\tonlyNumericAllowed = rep.getStepAttributeBoolean(id_step, i, \"validator_field_only_numeric_allowed\");\n\n\t\tdataType = ValueMeta.getType( rep.getStepAttributeString(id_step, i, \"validator_field_data_type\") );\n\t\tdataTypeVerified = rep.getStepAttributeBoolean(id_step, i, \"validator_field_data_type_verified\");\n\t\tconversionMask = rep.getStepAttributeString(id_step, i, \"validator_field_conversion_mask\");\n\t\tdecimalSymbol = rep.getStepAttributeString(id_step, i, \"validator_field_decimal_symbol\");\n\t\tgroupingSymbol = rep.getStepAttributeString(id_step, i, \"validator_field_grouping_symbol\");\n\n\t\tminimumValue = rep.getStepAttributeString(id_step, i, \"validator_field_min_value\");\n\t\tmaximumValue = rep.getStepAttributeString(id_step, i, \"validator_field_max_value\");\n\n\t\tstartString = rep.getStepAttributeString(id_step, i, \"validator_field_start_string\");\n\t\tendString = rep.getStepAttributeString(id_step, i, \"validator_field_end_string\");\n\t\tstartStringNotAllowed = rep.getStepAttributeString(id_step, i, \"validator_field_start_string_not_allowed\");\n\t\tendStringNotAllowed = rep.getStepAttributeString(id_step, i, \"validator_field_end_string_not_allowed\");\n\n\t\tregularExpression = rep.getStepAttributeString(id_step, i, \"validator_field_regular_expression\");\n\t\tregularExpressionNotAllowed = rep.getStepAttributeString(id_step, i, \"validator_field_regular_expression_not_allowed\");\n\n\t\terrorCode = rep.getStepAttributeString(id_step, i, \"validator_field_error_code\");\n\t\terrorDescription = rep.getStepAttributeString(id_step, i, \"validator_field_error_description\");\n\n\t\tsourcingValues = rep.getStepAttributeBoolean(id_step, i, \"validator_field_is_sourcing_values\");\n\t\tsourcingStepName = rep.getStepAttributeString(id_step, i, \"validator_field_sourcing_step\");\n\t\tsourcingField = rep.getStepAttributeString(id_step, i, \"validator_field_sourcing_field\");\n\t\t\n\t\tList<String> allowed = new ArrayList<String>();\n\t\t\n\t\tint nr = 1;\n\t\tString value = rep.getStepAttributeString(id_step, i, \"validator_field_value_\"+nr);\n\t\twhile (value!=null) {\n\t\t\tallowed.add(value);\n\t\t\tnr++;\n\t\t\tvalue = rep.getStepAttributeString(id_step, i, \"validator_field_value_\"+nr);\n\t\t}\n\t\tallowedValues = allowed.toArray(new String[allowed.size()]);\n\t}","id":39085,"modified_method":"public Validation(Repository rep, ObjectId id_step, int i) throws KettleException {\n\t\tfieldName = rep.getStepAttributeString(id_step, i, \"validator_field_name\");\n\t\tname = rep.getStepAttributeString(id_step, i, \"validator_field_validation_name\");\n\t\tif (Const.isEmpty(name)) name = fieldName; // remain backward compatible\n\t\t\n\t\tmaximumLength = rep.getStepAttributeString(id_step, i, \"validator_field_max_length\");\n\t\tminimumLength = rep.getStepAttributeString(id_step, i, \"validator_field_min_length\");\n\n\t\tnullAllowed = rep.getStepAttributeBoolean(id_step, i, \"validator_field_null_allowed\");\n\t\tonlyNullAllowed = rep.getStepAttributeBoolean(id_step, i, \"validator_field_only_null_allowed\");\n\t\tonlyNumericAllowed = rep.getStepAttributeBoolean(id_step, i, \"validator_field_only_numeric_allowed\");\n\n\t\tdataType = ValueMeta.getType( rep.getStepAttributeString(id_step, i, \"validator_field_data_type\") );\n\t\tdataTypeVerified = rep.getStepAttributeBoolean(id_step, i, \"validator_field_data_type_verified\");\n\t\tconversionMask = rep.getStepAttributeString(id_step, i, \"validator_field_conversion_mask\");\n\t\tdecimalSymbol = rep.getStepAttributeString(id_step, i, \"validator_field_decimal_symbol\");\n\t\tgroupingSymbol = rep.getStepAttributeString(id_step, i, \"validator_field_grouping_symbol\");\n\n\t\tminimumValue = rep.getStepAttributeString(id_step, i, \"validator_field_min_value\");\n\t\tmaximumValue = rep.getStepAttributeString(id_step, i, \"validator_field_max_value\");\n\n\t\tstartString = rep.getStepAttributeString(id_step, i, \"validator_field_start_string\");\n\t\tendString = rep.getStepAttributeString(id_step, i, \"validator_field_end_string\");\n\t\tstartStringNotAllowed = rep.getStepAttributeString(id_step, i, \"validator_field_start_string_not_allowed\");\n\t\tendStringNotAllowed = rep.getStepAttributeString(id_step, i, \"validator_field_end_string_not_allowed\");\n\n\t\tregularExpression = rep.getStepAttributeString(id_step, i, \"validator_field_regular_expression\");\n\t\tregularExpressionNotAllowed = rep.getStepAttributeString(id_step, i, \"validator_field_regular_expression_not_allowed\");\n\n\t\terrorCode = rep.getStepAttributeString(id_step, i, \"validator_field_error_code\");\n\t\terrorDescription = rep.getStepAttributeString(id_step, i, \"validator_field_error_description\");\n\n\t\tsourcingValues = rep.getStepAttributeBoolean(id_step, i, \"validator_field_is_sourcing_values\");\n\t\tsourcingStepName = rep.getStepAttributeString(id_step, i, \"validator_field_sourcing_step\");\n\t\tsourcingField = rep.getStepAttributeString(id_step, i, \"validator_field_sourcing_field\");\n\t\t\n\t\tList<String> allowed = new ArrayList<String>();\n\t\t\n\t\tint nr = 1;\n\t\tString value = rep.getStepAttributeString(id_step, i, \"validator_field_value_\"+nr);\n\t\twhile (value!=null) {\n\t\t\tallowed.add(value);\n\t\t\tnr++;\n\t\t\tvalue = rep.getStepAttributeString(id_step, i, \"validator_field_value_\"+nr);\n\t\t}\n\t\tallowedValues = allowed.toArray(new String[allowed.size()]);\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * @param maximumLength the maximumLength to set\n\t */\n\tpublic void setMaximumLength(int maximumLength) {\n\t\tthis.maximumLength = maximumLength;\n\t}","id":39086,"modified_method":"/**\n\t * @param maximumLength the maximumLength to set\n\t */\n\tpublic void setMaximumLength(String maximumLength) {\n\t\tthis.maximumLength = maximumLength;\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public Validation() {\n\t\tmaximumLength=-1;\n\t\tminimumLength=-1;\n\t\tnullAllowed=true;\n\t\tonlyNullAllowed=false;\n\t\tonlyNumericAllowed=false;\n\t}","id":39087,"modified_method":"public Validation() {\n\t\tmaximumLength=\"\";\n\t\tminimumLength=\"\";\n\t\tnullAllowed=true;\n\t\tonlyNullAllowed=false;\n\t\tonlyNumericAllowed=false;\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public Validation(Node calcnode) throws KettleXMLException {\n\t\tthis();\n\n\t\tfieldName = XMLHandler.getTagValue(calcnode, \"name\");\n\t\tname = XMLHandler.getTagValue(calcnode, \"validation_name\");\n\t\tif (Const.isEmpty(name)) name = fieldName; // remain backward compatible \n\t\t\n\t\tmaximumLength = Const.toInt(XMLHandler.getTagValue(calcnode, \"max_length\"), -1);\n\t\tminimumLength = Const.toInt(XMLHandler.getTagValue(calcnode, \"min_length\"), -1);\n\n\t\tnullAllowed = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(calcnode, \"null_allowed\"));\n\t\tonlyNullAllowed = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(calcnode, \"only_null_allowed\"));\n\t\tonlyNumericAllowed = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(calcnode, \"only_numeric_allowed\"));\n\n\t\tdataType = ValueMeta.getType( XMLHandler.getTagValue(calcnode, \"data_type\") );\n\t\tdataTypeVerified = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(calcnode, \"data_type_verified\"));\n\t\tconversionMask = XMLHandler.getTagValue(calcnode, \"conversion_mask\");\n\t\tdecimalSymbol = XMLHandler.getTagValue(calcnode, \"decimal_symbol\");\n\t\tgroupingSymbol = XMLHandler.getTagValue(calcnode, \"grouping_symbol\");\n\n\t\tminimumValue = XMLHandler.getTagValue(calcnode, \"min_value\");\n\t\tmaximumValue = XMLHandler.getTagValue(calcnode, \"max_value\");\n\n\t\tstartString = XMLHandler.getTagValue(calcnode, \"start_string\");\n\t\tendString = XMLHandler.getTagValue(calcnode, \"end_string\");\n\t\tstartStringNotAllowed = XMLHandler.getTagValue(calcnode, \"start_string_not_allowed\");\n\t\tendStringNotAllowed = XMLHandler.getTagValue(calcnode, \"end_string_not_allowed\");\n\n\t\tregularExpression = XMLHandler.getTagValue(calcnode, \"regular_expression\");\n\t\tregularExpressionNotAllowed = XMLHandler.getTagValue(calcnode, \"regular_expression_not_allowed\");\n\n\t\terrorCode = XMLHandler.getTagValue(calcnode, \"error_code\");\n\t\terrorDescription = XMLHandler.getTagValue(calcnode, \"error_description\");\n\t\t\n\t\tsourcingValues = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(calcnode, \"is_sourcing_values\"));\n\t\tsourcingStepName = XMLHandler.getTagValue(calcnode, \"sourcing_step\");\n\t\tsourcingField = XMLHandler.getTagValue(calcnode, \"sourcing_field\");\n\t\t\n\t\tNode allowedValuesNode = XMLHandler.getSubNode(calcnode, XML_TAG_ALLOWED);\n\t\tint nrValues = XMLHandler.countNodes(allowedValuesNode, \"value\");\n\t\tallowedValues = new String[nrValues];\n\t\tfor (int i=0;i<nrValues;i++) {\n\t\t\tNode allowedNode = XMLHandler.getSubNodeByNr(allowedValuesNode, \"value\", i);\n\t\t\tallowedValues[i] = XMLHandler.getNodeValue(allowedNode);\n\t\t}\n\t}","id":39088,"modified_method":"public Validation(Node calcnode) throws KettleXMLException {\n\t\tthis();\n\n\t\tfieldName = XMLHandler.getTagValue(calcnode, \"name\");\n\t\tname = XMLHandler.getTagValue(calcnode, \"validation_name\");\n\t\tif (Const.isEmpty(name)) name = fieldName; // remain backward compatible \n\t\t\n\t\tmaximumLength = XMLHandler.getTagValue(calcnode, \"max_length\");\n\t\tminimumLength = XMLHandler.getTagValue(calcnode, \"min_length\");\n\n\t\tnullAllowed = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(calcnode, \"null_allowed\"));\n\t\tonlyNullAllowed = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(calcnode, \"only_null_allowed\"));\n\t\tonlyNumericAllowed = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(calcnode, \"only_numeric_allowed\"));\n\n\t\tdataType = ValueMeta.getType( XMLHandler.getTagValue(calcnode, \"data_type\") );\n\t\tdataTypeVerified = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(calcnode, \"data_type_verified\"));\n\t\tconversionMask = XMLHandler.getTagValue(calcnode, \"conversion_mask\");\n\t\tdecimalSymbol = XMLHandler.getTagValue(calcnode, \"decimal_symbol\");\n\t\tgroupingSymbol = XMLHandler.getTagValue(calcnode, \"grouping_symbol\");\n\n\t\tminimumValue = XMLHandler.getTagValue(calcnode, \"min_value\");\n\t\tmaximumValue = XMLHandler.getTagValue(calcnode, \"max_value\");\n\n\t\tstartString = XMLHandler.getTagValue(calcnode, \"start_string\");\n\t\tendString = XMLHandler.getTagValue(calcnode, \"end_string\");\n\t\tstartStringNotAllowed = XMLHandler.getTagValue(calcnode, \"start_string_not_allowed\");\n\t\tendStringNotAllowed = XMLHandler.getTagValue(calcnode, \"end_string_not_allowed\");\n\n\t\tregularExpression = XMLHandler.getTagValue(calcnode, \"regular_expression\");\n\t\tregularExpressionNotAllowed = XMLHandler.getTagValue(calcnode, \"regular_expression_not_allowed\");\n\n\t\terrorCode = XMLHandler.getTagValue(calcnode, \"error_code\");\n\t\terrorDescription = XMLHandler.getTagValue(calcnode, \"error_description\");\n\t\t\n\t\tsourcingValues = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(calcnode, \"is_sourcing_values\"));\n\t\tsourcingStepName = XMLHandler.getTagValue(calcnode, \"sourcing_step\");\n\t\tsourcingField = XMLHandler.getTagValue(calcnode, \"sourcing_field\");\n\t\t\n\t\tNode allowedValuesNode = XMLHandler.getSubNode(calcnode, XML_TAG_ALLOWED);\n\t\tint nrValues = XMLHandler.countNodes(allowedValuesNode, \"value\");\n\t\tallowedValues = new String[nrValues];\n\t\tfor (int i=0;i<nrValues;i++) {\n\t\t\tNode allowedNode = XMLHandler.getSubNodeByNr(allowedValuesNode, \"value\", i);\n\t\t\tallowedValues[i] = XMLHandler.getNodeValue(allowedNode);\n\t\t}\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * @param minimumLength the minimumLength to set\n\t */\n\tpublic void setMinimumLength(int minimumLength) {\n\t\tthis.minimumLength = minimumLength;\n\t}","id":39089,"modified_method":"/**\n\t * @param minimumLength the minimumLength to set\n\t */\n\tpublic void setMinimumLength(String minimumLength) {\n\t\tthis.minimumLength = minimumLength;\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean init(StepMetaInterface smi, StepDataInterface sdi)\n\t{\n\t\tmeta=(ValidatorMeta)smi;\n\t\tdata=(ValidatorData)sdi;\n\t\t\n\t\tif (super.init(smi, sdi))\n\t\t{\r\n\t\t\tdata.constantsMeta = new ValueMetaInterface[meta.getValidations().size()];\r\n\t\t\tdata.minimumValue = new Object[meta.getValidations().size()];\r\n\t\t\tdata.maximumValue = new Object[meta.getValidations().size()];\r\n\t\t\tdata.listValues = new Object[meta.getValidations().size()][];\r\n\t\t\tdata.patternExpected = new Pattern[meta.getValidations().size()];\r\n\t\t\tdata.patternDisallowed = new Pattern[meta.getValidations().size()];\r\n\r\n\t\t\tfor (int i=0;i<meta.getValidations().size();i++) {\r\n\t\t\t\tValidation field = meta.getValidations().get(i);\r\n\t\t\t\tdata.constantsMeta[i] = new ValueMeta(field.getFieldName(), field.getDataType());\r\n\t\t\t\tdata.constantsMeta[i].setConversionMask(field.getConversionMask());\r\n\t\t\t\tdata.constantsMeta[i].setDecimalSymbol(field.getDecimalSymbol());\r\n\t\t\t\tdata.constantsMeta[i].setGroupingSymbol(field.getGroupingSymbol());\r\n\t\t\t\t\r\n\t\t\t\tValueMetaInterface stringMeta = data.constantsMeta[i].clone();\r\n\t\t\t\tstringMeta.setType(ValueMetaInterface.TYPE_STRING);\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tdata.minimumValue[i] = Const.isEmpty(field.getMinimumValue()) ? null : data.constantsMeta[i].convertData(stringMeta, field.getMinimumValue());\r\n\t\t\t\t\tdata.maximumValue[i] = Const.isEmpty(field.getMaximumValue()) ? null : data.constantsMeta[i].convertData(stringMeta, field.getMaximumValue());\r\n\t\t\t\t\tint listSize = field.getAllowedValues()!=null ? field.getAllowedValues().length : 0;\r\n\t\t\t\t\tdata.listValues[i] = new Object[listSize];\r\n\t\t\t\t\tfor (int s=0;s<listSize;s++) {\r\n\t\t\t\t\t\tdata.listValues[i][s] = Const.isEmpty(field.getAllowedValues()[s]) ? null : data.constantsMeta[i].convertData(stringMeta, field.getAllowedValues()[s]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (KettleValueException e) {\r\n\t\t\t\t\tif (field.getDataType()==ValueMetaInterface.TYPE_NONE) {\r\n\t\t\t\t\t\tlogError(BaseMessages.getString(PKG, \"Validator.Exception.SpecifyDataType\"), e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlogError(BaseMessages.getString(PKG, \"Validator.Exception.DataConversionErrorEncountered\"), e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!Const.isEmpty(field.getRegularExpression())) {\r\n\t\t\t\t\tdata.patternExpected[i] = Pattern.compile(field.getRegularExpression());\r\n\t\t\t\t}\r\n\t\t\t\tif (!Const.isEmpty(field.getRegularExpressionNotAllowed())) {\r\n\t\t\t\t\tdata.patternDisallowed[i] = Pattern.compile(field.getRegularExpressionNotAllowed());\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t    return true;\n\t\t}\n\t\treturn false;\n\t}","id":39090,"modified_method":"public boolean init(StepMetaInterface smi, StepDataInterface sdi)\n\t{\n\t\tmeta=(ValidatorMeta)smi;\n\t\tdata=(ValidatorData)sdi;\n\t\t\n\t\tif (super.init(smi, sdi))\n\t\t{\r\n\t\t    //  initialize arrays of validation data\r\n\t\t\tdata.constantsMeta = new ValueMetaInterface[meta.getValidations().size()];\r\n\t\t\tdata.minimumValueAsString = new String[meta.getValidations().size()];\r\n            data.maximumValueAsString = new String[meta.getValidations().size()];\r\n            data.fieldsMinimumLengthAsInt = new int[meta.getValidations().size()];\r\n            data.fieldsMaximumLengthAsInt = new int[meta.getValidations().size()];\r\n            data.minimumValue = new Object[meta.getValidations().size()];\r\n\t\t\tdata.maximumValue = new Object[meta.getValidations().size()];\r\n\t\t\tdata.listValues = new Object[meta.getValidations().size()][];\r\n\t\t\tdata.errorCode = new String[meta.getValidations().size()];\r\n\t\t    data.errorDescription = new String[meta.getValidations().size()];\r\n\t\t    data.conversionMask = new String[meta.getValidations().size()];\r\n\t\t    data.decimalSymbol = new String[meta.getValidations().size()];\r\n\t\t    data.groupingSymbol = new String[meta.getValidations().size()];\r\n\t\t    data.maximumLength = new String[meta.getValidations().size()];\r\n\t\t    data.minimumLength = new String[meta.getValidations().size()];\r\n\t\t    data.startString = new String[meta.getValidations().size()];\r\n\t\t    data.endString = new String[meta.getValidations().size()];\r\n\t\t    data.startStringNotAllowed = new String[meta.getValidations().size()];\r\n\t\t    data.endStringNotAllowed = new String[meta.getValidations().size()];\r\n\t\t    data.regularExpression = new String[meta.getValidations().size()];\r\n\t\t    data.regularExpressionNotAllowed = new String[meta.getValidations().size()];\r\n\t\t    data.patternExpected = new Pattern[meta.getValidations().size()];\r\n            data.patternDisallowed = new Pattern[meta.getValidations().size()];\r\n            \r\n\t\t\tfor (int i=0;i<meta.getValidations().size();i++) {\r\n\t\t\t    \r\n\t\t\t\tValidation field = meta.getValidations().get(i);\r\n\t\t\t\tdata.constantsMeta[i] = new ValueMeta(field.getFieldName(), field.getDataType());\r\n\t\t\t\tdata.constantsMeta[i].setConversionMask(field.getConversionMask());\r\n\t\t\t\tdata.constantsMeta[i].setDecimalSymbol(field.getDecimalSymbol());\r\n\t\t\t\tdata.constantsMeta[i].setGroupingSymbol(field.getGroupingSymbol());\r\n\t\t        data.errorCode[i] = environmentSubstitute(Const.NVL(field.getErrorCode(), \"\"));\r\n\t\t        data.errorDescription[i] = environmentSubstitute(Const.NVL(field.getErrorDescription(), \"\"));\r\n\t\t        data.conversionMask[i] = environmentSubstitute(Const.NVL(field.getConversionMask(), \"\"));\r\n\t\t        data.decimalSymbol[i] = environmentSubstitute(Const.NVL(field.getDecimalSymbol(), \"\"));\r\n\t\t        data.groupingSymbol[i] = environmentSubstitute(Const.NVL(field.getGroupingSymbol(), \"\"));\r\n\t\t        data.maximumLength[i] = environmentSubstitute(Const.NVL(field.getMaximumLength(), \"\"));\r\n\t\t        data.minimumLength[i] = environmentSubstitute(Const.NVL(field.getMinimumLength(), \"\"));\r\n\t\t        data.maximumValueAsString[i] = environmentSubstitute(Const.NVL(field.getMaximumValue(), \"\"));\r\n                data.minimumValueAsString[i] = environmentSubstitute(Const.NVL(field.getMinimumValue(), \"\"));\r\n                data.startString[i] = environmentSubstitute(Const.NVL(field.getStartString(), \"\"));\r\n\t\t        data.endString[i] = environmentSubstitute(Const.NVL(field.getEndString(), \"\"));\r\n\t\t        data.startStringNotAllowed[i] = environmentSubstitute(Const.NVL(field.getStartStringNotAllowed(), \"\"));\r\n\t\t        data.endStringNotAllowed[i] = environmentSubstitute(Const.NVL(field.getEndStringNotAllowed(), \"\"));\r\n\t\t        data.regularExpression[i] = environmentSubstitute(Const.NVL(field.getRegularExpression(), \"\"));\r\n\t\t        data.regularExpressionNotAllowed[i] = environmentSubstitute(Const.NVL(field.getRegularExpressionNotAllowed(), \"\"));\r\n\t\t\t\t\r\n\t\t\t\tValueMetaInterface stringMeta = data.constantsMeta[i].clone();\r\n\t\t\t\tstringMeta.setType(ValueMetaInterface.TYPE_STRING);\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tdata.minimumValue[i] = Const.isEmpty(data.minimumValueAsString[i]) ? null : data.constantsMeta[i].convertData(stringMeta, data.minimumValueAsString[i]);\r\n                    data.maximumValue[i] = Const.isEmpty(data.maximumValueAsString[i]) ? null : data.constantsMeta[i].convertData(stringMeta, data.maximumValueAsString[i]);\r\n                    \r\n                    try {\r\n                        data.fieldsMinimumLengthAsInt[i] = Integer.valueOf(Const.NVL(data.minimumLength[i], \"-1\"));\r\n                    }\r\n                    catch (NumberFormatException nfe) {\r\n                        throw new KettleValueException(\"Caught a number format exception converting minimum length with value \"+data.minimumLength[i]+\" to an int.\", nfe);\r\n                    }\r\n                    \r\n                    try {\r\n                        data.fieldsMaximumLengthAsInt[i] = Integer.valueOf(Const.NVL(data.maximumLength[i], \"-1\"));\r\n                    }\r\n                    catch (NumberFormatException nfe) {\r\n                        throw new KettleValueException(\"Caught a number format exception converting minimum length with value \"+data.maximumLength[i]+\" to an int.\", nfe);\r\n                    }\r\n                    \r\n                    int listSize = field.getAllowedValues()!=null ? field.getAllowedValues().length : 0;\r\n\t\t\t\t\tdata.listValues[i] = new Object[listSize];\r\n\t\t\t\t\tfor (int s=0;s<listSize;s++) {\r\n\t\t\t\t\t\tdata.listValues[i][s] = Const.isEmpty(field.getAllowedValues()[s]) ? null : data.constantsMeta[i].convertData(stringMeta, environmentSubstitute(field.getAllowedValues()[s]));\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (KettleValueException e) {\r\n\t\t\t\t\tif (field.getDataType()==ValueMetaInterface.TYPE_NONE) {\r\n\t\t\t\t\t\tlogError(BaseMessages.getString(PKG, \"Validator.Exception.SpecifyDataType\"), e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlogError(BaseMessages.getString(PKG, \"Validator.Exception.DataConversionErrorEncountered\"), e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!Const.isEmpty(data.regularExpression[i])) {\r\n\t\t\t\t\tdata.patternExpected[i] = Pattern.compile(field.getRegularExpression());\r\n\t\t\t\t}\r\n\t\t\t\tif (!Const.isEmpty(data.regularExpressionNotAllowed[i])) {\r\n\t\t\t\t\tdata.patternDisallowed[i] = Pattern.compile(field.getRegularExpressionNotAllowed());\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t    return true;\n\t\t}\n\t\treturn false;\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * @param inputRowMeta the input row metadata\n\t * @param r the input row (data)\n\t * @throws KettleValidatorException in case there is a validation error, details are stored in the exception.\n\t */\n    private List<KettleValidatorException> validateFields(RowMetaInterface inputRowMeta, Object[] r) throws KettleValidatorException, KettleValueException\n    {\r\n    \tList<KettleValidatorException> exceptions = new ArrayList<KettleValidatorException>();\r\n    \t\n        for (int i=0;i<meta.getValidations().size();i++)\n        {\n            Validation field = meta.getValidations().get(i);\r\n            \r\n            int valueIndex = data.fieldIndexes[i];\r\n            ValueMetaInterface validatorMeta = data.constantsMeta[i];\r\n            \r\n            ValueMetaInterface valueMeta = inputRowMeta.getValueMeta(valueIndex);\r\n            Object valueData = r[valueIndex];\r\n\r\n            // Check for null\r\n            //\r\n            boolean isNull = valueMeta.isNull(valueData);\r\n            if (!field.isNullAllowed() && isNull) {\r\n            \tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_NULL_VALUE_NOT_ALLOWED, BaseMessages.getString(PKG, \"Validator.Exception.NullNotAllowed\", field.getFieldName(), inputRowMeta.getString(r)), field.getFieldName());\r\n            \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n            }\r\n            \r\n            if (field.isOnlyNullAllowed() && !isNull) {\r\n            \tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_ONLY_NULL_VALUE_ALLOWED, BaseMessages.getString(PKG, \"Validator.Exception.OnlyNullAllowed\", field.getFieldName(), inputRowMeta.getString(r)), field.getFieldName());\r\n            \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n            }\r\n            \r\n            // Check the data type!\r\n            //\r\n            if (field.isDataTypeVerified() && field.getDataType()!=ValueMetaInterface.TYPE_NONE) {\r\n            \t\r\n            \t// Same data type?\r\n            \t//\r\n            \tif (field.getDataType() != valueMeta.getType()) {\r\n            \t\tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_UNEXPECTED_DATA_TYPE, BaseMessages.getString(PKG, \"Validator.Exception.UnexpectedDataType\", field.getFieldName(), valueMeta.toStringMeta(), validatorMeta.toStringMeta()), field.getFieldName());\r\n                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n            \t}\r\n            }\r\n            \r\n            // Check various things if the value is not null..\r\n            //\r\n            if ( !isNull) {\r\n            \t \r\n            \tif (field.getMinimumLength()>=0 || \r\n            \t\tfield.getMaximumLength()>=0 || \r\n            \t\tdata.minimumValue[i]!=null || \r\n            \t\tdata.maximumValue[i]!=null || \r\n            \t\tdata.listValues[i].length>0 ||\r\n            \t\tfield.isSourcingValues() ||\r\n            \t\t!Const.isEmpty(field.getStartString()) ||\r\n            \t\t!Const.isEmpty(field.getEndString()) ||\r\n            \t\t!Const.isEmpty(field.getStartStringNotAllowed()) ||\r\n            \t\t!Const.isEmpty(field.getEndStringNotAllowed()) ||\r\n            \t\tfield.isOnlyNumericAllowed() ||\r\n            \t\tdata.patternExpected[i]!=null ||\r\n            \t\tdata.patternDisallowed[i]!=null\r\n            \t\t) {\r\n            \t\r\n\t            \tString stringValue = valueMeta.getString(valueData);\r\n\t            \t\r\n\t            \t// Minimum length\r\n\t            \t//\r\n\t            \tif (field.getMinimumLength()>=0 && stringValue.length()<field.getMinimumLength() ) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_SHORTER_THAN_MINIMUM_LENGTH, BaseMessages.getString(PKG, \"Validator.Exception.ShorterThanMininumLength\", field.getFieldName(), valueMeta.getString(valueData), Integer.toString(stringValue.length()), Integer.toString(field.getMinimumLength())), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t            \t\r\n\t            \t// Maximum length\r\n\t            \t//\r\n\t            \tif (field.getMaximumLength()>=0 && stringValue.length()>field.getMaximumLength() ) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_LONGER_THAN_MAXIMUM_LENGTH, BaseMessages.getString(PKG, \"Validator.Exception.LongerThanMaximumLength\", field.getFieldName(), valueMeta.getString(valueData), Integer.toString(stringValue.length()), Integer.toString(field.getMaximumLength())), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t            \t\r\n\t            \t// Minimal value\r\n\t            \t//\r\n\t            \tif (data.minimumValue[i]!=null && valueMeta.compare(valueData, validatorMeta, data.minimumValue[i])<0) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_LOWER_THAN_ALLOWED_MINIMUM, BaseMessages.getString(PKG, \"Validator.Exception.LowerThanMinimumValue\", field.getFieldName(), valueMeta.getString(valueData), data.constantsMeta[i].getString(data.minimumValue[i])), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t\r\n\t            \t// Maximum value\r\n\t            \t//\r\n\t            \tif (data.maximumValue[i]!=null && valueMeta.compare(valueData, validatorMeta, data.maximumValue[i])>0) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_HIGHER_THAN_ALLOWED_MAXIMUM, BaseMessages.getString(PKG, \"Validator.Exception.HigherThanMaximumValue\", field.getFieldName(), valueMeta.getString(valueData), data.constantsMeta[i].getString(data.maximumValue[i])), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t            \t\r\n\t            \t// In list?\r\n\t            \t//\r\n\t            \tif (field.isSourcingValues() || data.listValues[i].length > 0) {\r\n\t            \t    boolean found = false;\r\n\t            \t    for (Object object : data.listValues[i]) {\r\n\t            \t        if (object!=null && data.listValues[i]!=null && valueMeta.compare(valueData, validatorMeta, object)==0) {\r\n\t            \t            found=true;\r\n\t            \t        }\r\n\t            \t    }\r\n\t            \t    if (!found) {\r\n\t            \t        KettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_VALUE_NOT_IN_LIST, BaseMessages.getString(PKG, \"Validator.Exception.NotInList\", field.getFieldName(), valueMeta.getString(valueData)), field.getFieldName());\r\n\t            \t        if (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t    }\r\n\t            \t}\r\n\r\n\t            \t// Numeric data or strings with only \r\n\t\t            if (field.isOnlyNumericAllowed()) {\r\n\t\t            \tif (valueMeta.isNumeric() || !containsOnlyDigits(valueMeta.getString(valueData)) ) {\r\n\t\t            \t\tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_NON_NUMERIC_DATA, BaseMessages.getString(PKG, \"Validator.Exception.NonNumericDataNotAllowed\", field.getFieldName(), valueMeta.toStringMeta()), field.getFieldName());\r\n\t\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t\t            \t}\r\n\t\t            }\r\n\t            \t\r\n\t            \t// Does not start with string value\r\n\t            \t//\r\n\t            \tif (!Const.isEmpty(field.getStartString()) && !stringValue.startsWith(field.getStartString())) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_DOES_NOT_START_WITH_STRING, BaseMessages.getString(PKG, \"Validator.Exception.DoesNotStartWithString\", field.getFieldName(), valueMeta.getString(valueData), field.getStartString()), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t\r\n\t            \t// Ends with string value\r\n\t            \t//\r\n\t            \tif (!Const.isEmpty(field.getEndString()) && !stringValue.endsWith(field.getEndString())) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_DOES_NOT_END_WITH_STRING, BaseMessages.getString(PKG, \"Validator.Exception.DoesNotStartWithString\", field.getFieldName(), valueMeta.getString(valueData), field.getEndString()), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t\r\n\t            \t// Starts with string value\r\n\t            \t//\r\n\t            \tif (!Const.isEmpty(field.getStartStringNotAllowed()) && stringValue.startsWith(field.getStartStringNotAllowed())) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_STARTS_WITH_STRING, BaseMessages.getString(PKG, \"Validator.Exception.StartsWithString\", field.getFieldName(), valueMeta.getString(valueData), field.getStartStringNotAllowed()), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t\r\n\t            \t// Ends with string value\r\n\t            \t//\r\n\t            \tif (!Const.isEmpty(field.getEndStringNotAllowed()) && stringValue.endsWith(field.getEndStringNotAllowed())) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_ENDS_WITH_STRING, BaseMessages.getString(PKG, \"Validator.Exception.EndsWithString\", field.getFieldName(), valueMeta.getString(valueData), field.getEndStringNotAllowed()), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\r\n\t            \t// Matching regular expression allowed?\r\n\t            \t//\r\n\t            \tif (data.patternExpected[i]!=null) {\r\n\t            \t\tMatcher matcher = data.patternExpected[i].matcher(stringValue);\r\n\t            \t\tif (!matcher.matches()) {\r\n\t            \t\t\tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_MATCHING_REGULAR_EXPRESSION_EXPECTED, BaseMessages.getString(PKG, \"Validator.Exception.MatchingRegExpExpected\", field.getFieldName(), valueMeta.getString(valueData), field.getRegularExpression()), field.getFieldName());\r\n\t                    \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t\t}\r\n\t            \t}\r\n\r\n\t            \t// Matching regular expression NOT allowed?\r\n\t            \t//\r\n\t            \tif (data.patternDisallowed[i]!=null) {\r\n\t            \t\tMatcher matcher = data.patternDisallowed[i].matcher(stringValue);\r\n\t            \t\tif (matcher.matches()) {\r\n\t            \t\t\tKettleValidatorException exception = new KettleValidatorException(field, KettleValidatorException.ERROR_MATCHING_REGULAR_EXPRESSION_NOT_ALLOWED, BaseMessages.getString(PKG, \"Validator.Exception.MatchingRegExpNotAllowed\", field.getFieldName(), valueMeta.getString(valueData), field.getRegularExpressionNotAllowed()), field.getFieldName());\r\n\t                    \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t\t}\r\n\t            \t}\r\n\r\n            \t}\r\n            }\r\n        }\r\n        \r\n        return exceptions;\n    }","id":39091,"modified_method":"/**\n\t * @param inputRowMeta the input row metadata\n\t * @param r the input row (data)\n\t * @throws KettleValidatorException in case there is a validation error, details are stored in the exception.\n\t */\n    private List<KettleValidatorException> validateFields(RowMetaInterface inputRowMeta, Object[] r) throws KettleValidatorException, KettleValueException\n    {\r\n    \tList<KettleValidatorException> exceptions = new ArrayList<KettleValidatorException>();\r\n        \r\n    \tfor (int i=0;i<meta.getValidations().size();i++)\n        {\n            Validation field = meta.getValidations().get(i);          \r\n            \r\n            int valueIndex = data.fieldIndexes[i];\r\n            ValueMetaInterface validatorMeta = data.constantsMeta[i];\r\n            \r\n            ValueMetaInterface valueMeta = inputRowMeta.getValueMeta(valueIndex);\r\n            Object valueData = r[valueIndex];\r\n\r\n            // Check for null\r\n            //\r\n            boolean isNull = valueMeta.isNull(valueData);\r\n            if (!field.isNullAllowed() && isNull) {\r\n            \tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_NULL_VALUE_NOT_ALLOWED, BaseMessages.getString(PKG, \"Validator.Exception.NullNotAllowed\", field.getFieldName(), inputRowMeta.getString(r)), field.getFieldName());\r\n            \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n            }\r\n            \r\n            if (field.isOnlyNullAllowed() && !isNull) {\r\n            \tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_ONLY_NULL_VALUE_ALLOWED, BaseMessages.getString(PKG, \"Validator.Exception.OnlyNullAllowed\", field.getFieldName(), inputRowMeta.getString(r)), field.getFieldName());\r\n            \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n            }\r\n            \r\n            // Check the data type!\r\n            //\r\n            if (field.isDataTypeVerified() && field.getDataType()!=ValueMetaInterface.TYPE_NONE) {\r\n            \t\r\n            \t// Same data type?\r\n            \t//\r\n            \tif (field.getDataType() != valueMeta.getType()) {\r\n            \t\tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_UNEXPECTED_DATA_TYPE, BaseMessages.getString(PKG, \"Validator.Exception.UnexpectedDataType\", field.getFieldName(), valueMeta.toStringMeta(), validatorMeta.toStringMeta()), field.getFieldName());\r\n                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n            \t}\r\n            }\r\n            \r\n            // Check various things if the value is not null..\r\n            //\r\n            if ( !isNull ) {\r\n            \t\r\n            \tif (data.fieldsMinimumLengthAsInt[i] >=0 || \r\n                    data.fieldsMaximumLengthAsInt[i] >=0 || \r\n                    data.minimumValue[i]!=null || \r\n                    data.maximumValue[i]!=null || \r\n                    data.listValues[i].length>0 ||\r\n                    field.isSourcingValues() ||\r\n                    !Const.isEmpty(data.startString[i]) ||\r\n                    !Const.isEmpty(data.endString[i]) ||\r\n                    !Const.isEmpty(data.startStringNotAllowed[i]) ||\r\n                    !Const.isEmpty(data.endStringNotAllowed[i]) ||\r\n                    field.isOnlyNumericAllowed() ||\r\n                    data.patternExpected[i]!=null ||\r\n                    data.patternDisallowed[i]!=null\r\n                  ) {\r\n            \r\n            \t\tString stringValue = valueMeta.getString(valueData);\r\n                \tint stringLength = stringValue.length();\r\n            \t\t\r\n\t            \t// Minimum length\r\n\t            \t//\r\n\t            \t//if (field.getMinimumLength()>=0 && stringValue.length()<field.getMinimumLength() ) {\r\n\t            \tif (data.fieldsMinimumLengthAsInt[i] >= 0 && stringLength < data.fieldsMinimumLengthAsInt[i] ) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_SHORTER_THAN_MINIMUM_LENGTH, BaseMessages.getString(PKG, \"Validator.Exception.ShorterThanMininumLength\", field.getFieldName(), valueMeta.getString(valueData), Integer.toString(stringValue.length()), field.getMinimumLength()), field.getFieldName());\r\n\t            \t\tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t            \t\r\n\t            \t// Maximum length\r\n\t            \t//\r\n\t            \t//if (field.getMaximumLength()>=0 && stringValue.length()>field.getMaximumLength() ) {\r\n\t\t            if (data.fieldsMaximumLengthAsInt[i] >= 0 && stringLength > data.fieldsMaximumLengthAsInt[i] ) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_LONGER_THAN_MAXIMUM_LENGTH, BaseMessages.getString(PKG, \"Validator.Exception.LongerThanMaximumLength\", field.getFieldName(), valueMeta.getString(valueData), Integer.toString(stringValue.length()), field.getMaximumLength()), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t            \t\r\n\t            \t// Minimal value\r\n\t            \t//\r\n\t            \tif (data.minimumValue[i]!=null && valueMeta.compare(valueData, validatorMeta, data.minimumValue[i])<0) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_LOWER_THAN_ALLOWED_MINIMUM, BaseMessages.getString(PKG, \"Validator.Exception.LowerThanMinimumValue\", field.getFieldName(), valueMeta.getString(valueData), data.constantsMeta[i].getString(data.minimumValue[i])), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t\r\n\t            \t// Maximum value\r\n\t            \t//\r\n\t            \tif (data.maximumValue[i]!=null && valueMeta.compare(valueData, validatorMeta, data.maximumValue[i])>0) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_HIGHER_THAN_ALLOWED_MAXIMUM, BaseMessages.getString(PKG, \"Validator.Exception.HigherThanMaximumValue\", field.getFieldName(), valueMeta.getString(valueData), data.constantsMeta[i].getString(data.maximumValue[i])), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t            \t\r\n\t            \t// In list?\r\n\t            \t//\r\n\t            \tif (field.isSourcingValues() || data.listValues[i].length > 0) {\r\n\t            \t    boolean found = false;\r\n\t            \t    for (Object object : data.listValues[i]) {\r\n\t            \t        if (object!=null && data.listValues[i]!=null && valueMeta.compare(valueData, validatorMeta, object)==0) {\r\n\t            \t            found=true;\r\n\t            \t        }\r\n\t            \t    }\r\n\t            \t    if (!found) {\r\n\t            \t        KettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_VALUE_NOT_IN_LIST, BaseMessages.getString(PKG, \"Validator.Exception.NotInList\", field.getFieldName(), valueMeta.getString(valueData)), field.getFieldName());\r\n\t            \t        if (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t    }\r\n\t            \t}\r\n\r\n\t            \t// Numeric data or strings with only \r\n\t\t            if (field.isOnlyNumericAllowed()) {\r\n\t\t            \tif (valueMeta.isNumeric() || !containsOnlyDigits(valueMeta.getString(valueData)) ) {\r\n\t\t            \t\tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_NON_NUMERIC_DATA, BaseMessages.getString(PKG, \"Validator.Exception.NonNumericDataNotAllowed\", field.getFieldName(), valueMeta.toStringMeta()), field.getFieldName());\r\n\t\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t\t            \t}\r\n\t\t            }\r\n\t            \t\r\n\t            \t// Does not start with string value\r\n\t            \t//\r\n\t            \tif (!Const.isEmpty(data.startString[i]) && !stringValue.startsWith(data.startString[i])) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_DOES_NOT_START_WITH_STRING, BaseMessages.getString(PKG, \"Validator.Exception.DoesNotStartWithString\", field.getFieldName(), valueMeta.getString(valueData), field.getStartString()), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t\r\n\t            \t// Ends with string value\r\n\t            \t//\r\n\t            \tif (!Const.isEmpty(data.endString[i]) && !stringValue.endsWith(data.endString[i])) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_DOES_NOT_END_WITH_STRING, BaseMessages.getString(PKG, \"Validator.Exception.DoesNotStartWithString\", field.getFieldName(), valueMeta.getString(valueData), field.getEndString()), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t\r\n\t            \t// Starts with string value\r\n\t            \t//\r\n\t            \tif (!Const.isEmpty(data.startStringNotAllowed[i]) && stringValue.startsWith(data.startStringNotAllowed[i])) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_STARTS_WITH_STRING, BaseMessages.getString(PKG, \"Validator.Exception.StartsWithString\", field.getFieldName(), valueMeta.getString(valueData), field.getStartStringNotAllowed()), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\t\r\n\t            \t// Ends with string value\r\n\t            \t//\r\n\t            \tif (!Const.isEmpty(data.endStringNotAllowed[i]) && stringValue.endsWith(data.endStringNotAllowed[i])) {\r\n\t            \t\tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_ENDS_WITH_STRING, BaseMessages.getString(PKG, \"Validator.Exception.EndsWithString\", field.getFieldName(), valueMeta.getString(valueData), field.getEndStringNotAllowed()), field.getFieldName());\r\n\t                \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t}\r\n\r\n\t            \t// Matching regular expression allowed?\r\n\t            \t//\r\n\t            \tif (data.patternExpected[i]!=null) {\r\n\t            \t\tMatcher matcher = data.patternExpected[i].matcher(stringValue);\r\n\t            \t\tif (!matcher.matches()) {\r\n\t            \t\t\tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_MATCHING_REGULAR_EXPRESSION_EXPECTED, BaseMessages.getString(PKG, \"Validator.Exception.MatchingRegExpExpected\", field.getFieldName(), valueMeta.getString(valueData), field.getRegularExpression()), field.getFieldName());\r\n\t                    \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t\t}\r\n\t            \t}\r\n\r\n\t            \t// Matching regular expression NOT allowed?\r\n\t            \t//\r\n\t            \tif (data.patternDisallowed[i]!=null) {\r\n\t            \t\tMatcher matcher = data.patternDisallowed[i].matcher(stringValue);\r\n\t            \t\tif (matcher.matches()) {\r\n\t            \t\t\tKettleValidatorException exception = new KettleValidatorException(this, field, KettleValidatorException.ERROR_MATCHING_REGULAR_EXPRESSION_NOT_ALLOWED, BaseMessages.getString(PKG, \"Validator.Exception.MatchingRegExpNotAllowed\", field.getFieldName(), valueMeta.getString(valueData), field.getRegularExpressionNotAllowed()), field.getFieldName());\r\n\t                    \tif (meta.isValidatingAll()) exceptions.add(exception); else throw exception;\r\n\t            \t\t}\r\n\t            \t}\r\n\r\n            \t}\r\n            }\r\n        }\r\n        \r\n        return exceptions;\n    }","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String open()\n\t{\n\t\tShell parent = getParent();\n\t\tDisplay display = parent.getDisplay();\n\n\t\tshell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN | SWT.MAX);\n \t\tprops.setLook(shell);\n \t\tsetShellImage(shell, input);\n        \n\t\tModifyListener lsMod = new ModifyListener() \n\t\t{\n\t\t\tpublic void modifyText(ModifyEvent e) \n\t\t\t{\n\t\t\t\tinput.setChanged();\n\t\t\t}\n\t\t};\n\t\tchanged = input.hasChanged();\n\n\t\tFormLayout formLayout = new FormLayout ();\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\n\n\t\tshell.setLayout(formLayout);\n\t\tshell.setText(BaseMessages.getString(PKG, \"ValidatorDialog.Shell.Title\")); //$NON-NLS-1$\n\t\t\n\t\tint middle = props.getMiddlePct();\n\t\tint margin = Const.MARGIN;\n\r\n\t\tRectangle imageBounds = GUIResource.getInstance().getImageInfoHop().getBounds();\r\n\t\t\n\t\t// Stepname line\r\n\t\t//\n\t\twlStepname=new Label(shell, SWT.RIGHT);\n\t\twlStepname.setText(BaseMessages.getString(PKG, \"ValidatorDialog.Stepname.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlStepname);\n\t\tfdlStepname=new FormData();\n\t\tfdlStepname.left = new FormAttachment(0, 0);\n\t\tfdlStepname.right= new FormAttachment(middle, -margin);\n\t\tfdlStepname.top  = new FormAttachment(0, margin);\n\t\twlStepname.setLayoutData(fdlStepname);\n\t\twStepname=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n\t\twStepname.setText(stepname);\n \t\tprops.setLook(wStepname);\n\t\twStepname.addModifyListener(lsMod);\n\t\tfdStepname=new FormData();\n\t\tfdStepname.left = new FormAttachment(middle, 0);\n\t\tfdStepname.top  = new FormAttachment(0, margin);\n\t\tfdStepname.right= new FormAttachment(100, 0);\n\t\twStepname.setLayoutData(fdStepname);\r\n\t\t\r\n\t\t// Some buttons\n\t\twOK=new Button(shell, SWT.PUSH);\n\t\twOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\")); //$NON-NLS-1$\n\t\twNew=new Button(shell, SWT.PUSH);\r\n\t\twNew.setText(BaseMessages.getString(PKG, \"ValidatorDialog.NewButton.Label\")); //$NON-NLS-1$\r\n\t\twClear=new Button(shell, SWT.PUSH);\r\n\t\twClear.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ClearButton.Label\")); //$NON-NLS-1$\r\n\t\twCancel=new Button(shell, SWT.PUSH);\n\t\twCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\")); //$NON-NLS-1$\n\t\t\n\t\tsetButtonPositions(new Button[] { wOK, wNew, wClear, wCancel }, margin, null);\r\n\r\n\t\t// List of fields to the left...\r\n\t\t//\r\n\t\tLabel wlFieldList = new Label(shell, SWT.LEFT);\r\n\t\twlFieldList.setText(BaseMessages.getString(PKG, \"ValidatorDialog.FieldList.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlFieldList);\r\n\t\tFormData fdlFieldList = new FormData();\r\n\t\tfdlFieldList.left = new FormAttachment(0, 0);\r\n\t\tfdlFieldList.right= new FormAttachment(middle, -margin);\r\n\t\tfdlFieldList.top  = new FormAttachment(wStepname, margin);\r\n\t\twlFieldList.setLayoutData(fdlFieldList);\r\n\t\twValidationsList=new List(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL);\r\n\t\t\r\n \t\tprops.setLook(wValidationsList);\r\n \t\twValidationsList.addSelectionListener(new SelectionAdapter() { \r\n\t\t\tpublic void widgetSelected(SelectionEvent event) {\r\n\t\t\t\tshowSelectedValidatorField(wValidationsList.getSelection()[0]);\r\n\t\t\t}\r\n\t\t});\r\n \t\t\r\n\t\tFormData fdFieldList = new FormData();\r\n\t\tfdFieldList.left   = new FormAttachment(0, 0);\r\n\t\tfdFieldList.top    = new FormAttachment(wlFieldList, margin);\r\n\t\tfdFieldList.right  = new FormAttachment(middle, -margin);\r\n\t\tfdFieldList.bottom = new FormAttachment(wOK, -margin*2);\r\n\t\twValidationsList.setLayoutData(fdFieldList);\r\n\r\n\t\t// General: an option to allow ALL the options to be checked.\r\n\t\t//\r\n\t\twValidateAll=new Button(shell, SWT.CHECK);\r\n\t\twValidateAll.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ValidateAll.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wValidateAll);\r\n\t\tFormData fdValidateAll = new FormData();\r\n\t\tfdValidateAll.left = new FormAttachment(middle, 0);\r\n\t\tfdValidateAll.right= new FormAttachment(100, 0);\r\n\t\tfdValidateAll.top  = new FormAttachment(wStepname, margin);\r\n\t\twValidateAll.setLayoutData(fdValidateAll);\r\n\t\twValidateAll.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent arg0) { setFlags(); } });\r\n\r\n\t\t// General: When validating all options, still output a single row, errors concatenated\r\n\t\t//\r\n\t\twConcatErrors=new Button(shell, SWT.CHECK);\r\n\t\twConcatErrors.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ConcatErrors.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wConcatErrors);\r\n\t\tFormData fdConcatErrors = new FormData();\r\n\t\tfdConcatErrors.left = new FormAttachment(middle, 0);\r\n\t\tfdConcatErrors.top  = new FormAttachment(wValidateAll, margin);\r\n\t\twConcatErrors.setLayoutData(fdConcatErrors);\r\n\r\n\t\t// The separator\r\n\t\t//\r\n\t\twConcatSeparator=new Text(shell, SWT.LEFT | SWT.SINGLE | SWT.BORDER);\r\n \t\tprops.setLook(wConcatSeparator);\r\n\t\tFormData fdConcatSeparator = new FormData();\r\n\t\tfdConcatSeparator.left = new FormAttachment(wConcatErrors, margin);\r\n\t\tfdConcatSeparator.right= new FormAttachment(100, 0);\r\n\t\tfdConcatSeparator.top  = new FormAttachment(wValidateAll, margin);\r\n\t\twConcatSeparator.setLayoutData(fdConcatSeparator);\r\n\r\n\t\t\r\n\t\t// Create a scrolled composite on the right side...\r\n\t\t//\r\n\t\tScrolledComposite wSComp = new ScrolledComposite(shell, SWT.H_SCROLL | SWT.V_SCROLL);\r\n\t\tprops.setLook(wSComp);\r\n\t\twSComp.setLayout(new FillLayout());\r\n\t\tFormData fdComp = new FormData();\r\n\t\tfdComp.left   = new FormAttachment(middle, 0);\r\n\t\tfdComp.top    = new FormAttachment(wConcatSeparator, 2*margin);\r\n\t\tfdComp.right  = new FormAttachment(100, 0);\r\n\t\tfdComp.bottom = new FormAttachment(wOK, -margin*2);\r\n\t\twSComp.setLayoutData(fdComp);\r\n\t\t\r\n\t\tComposite wComp = new Composite(wSComp, SWT.BORDER);\r\n\t\tprops.setLook(wComp);\r\n        FormLayout compLayout = new FormLayout();\r\n        compLayout.marginWidth  = 3;\r\n        compLayout.marginHeight = 3;\r\n        wComp.setLayout(compLayout);\r\n        \r\n        int extra = imageBounds.width;\r\n\t\t\r\n\t\t// Description (list key)\r\n\t\t//\r\n\t\twlDescription=new Label(wComp, SWT.RIGHT);\r\n\t\twlDescription.setText(BaseMessages.getString(PKG, \"ValidatorDialog.Description.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlDescription);\r\n\t\tFormData fdlDescription = new FormData();\r\n\t\tfdlDescription.left = new FormAttachment(0, 0);\r\n\t\tfdlDescription.right= new FormAttachment(middle, -margin);\r\n\t\tfdlDescription.top  = new FormAttachment(0, 0);\r\n\t\twlDescription.setLayoutData(fdlDescription);\r\n\t\twDescription=new Text(wComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wDescription);\r\n\t\tFormData fdDescription = new FormData();\r\n\t\tfdDescription.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdDescription.right= new FormAttachment(100, 0);\r\n\t\tfdDescription.top  = new FormAttachment(0, 0);\r\n\t\twDescription.setLayoutData(fdDescription);\r\n\t\twDescription.addModifyListener(new ModifyListener() {\r\n\t\t\tpublic void modifyText(ModifyEvent event) {\r\n\t\t\t\t// See if there is a selected Validation\r\n\t\t\t\t//\r\n\t\t\t\tif (wValidationsList!=null && wValidationsList.getItemCount()>0 && wValidationsList.getSelection().length==1) {\r\n\t\t\t\t\tint index = wValidationsList.getSelectionIndex();\r\n\t\t\t\t\tString description = wValidationsList.getItem(index);\r\n\t\t\t\t\tValidation validation = Validation.findValidation(selectionList, description);\r\n\t\t\t\t\tString newDescription = wDescription.getText();\r\n\t\t\t\t\tvalidation.setName(newDescription);\r\n\t\t\t\t\twValidationsList.setItem(index, newDescription);\r\n\t\t\t\t\twValidationsList.select(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// The name of the field to validate\r\n\t\t//\r\n\t\twlFieldName=new Label(wComp, SWT.RIGHT);\r\n\t\twlFieldName.setText(BaseMessages.getString(PKG, \"ValidatorDialog.FieldName.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlFieldName);\r\n\t\tFormData fdlFieldName = new FormData();\r\n\t\tfdlFieldName.left = new FormAttachment(0, 0);\r\n\t\tfdlFieldName.right= new FormAttachment(middle, -margin);\r\n\t\tfdlFieldName.top  = new FormAttachment(wDescription, margin);\r\n\t\twlFieldName.setLayoutData(fdlFieldName);\r\n\t\twFieldName=new CCombo(wComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wFieldName);\r\n\t\tFormData fdFieldName = new FormData();\r\n\t\tfdFieldName.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdFieldName.right= new FormAttachment(100, 0);\r\n\t\tfdFieldName.top  = new FormAttachment(wDescription, margin);\r\n\t\twFieldName.setLayoutData(fdFieldName);\r\n\t\t\r\n\t\t// TODO: grab field list in thread in the background...\r\n\t\t//\r\n\t\ttry {\r\n\t\t\tinputFields = transMeta.getPrevStepFields(stepMeta);\r\n\t\t\twFieldName.setItems(inputFields.getFieldNames());\r\n\t\t} catch (KettleStepException ex) {\r\n\t\t\tnew ErrorDialog(shell, BaseMessages.getString(PKG, \"ValidatorDialog.Exception.CantGetFieldsFromPreviousSteps.Title\"), BaseMessages.getString(PKG, \"ValidatorDialog.Exception.CantGetFieldsFromPreviousSteps.Message\"), ex);\r\n\t\t}\r\n\t\t\r\n\t\t// ErrorCode\r\n\t\t//\r\n\t\twlErrorCode=new Label(wComp, SWT.RIGHT);\r\n\t\twlErrorCode.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ErrorCode.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlErrorCode);\r\n\t\tFormData fdlErrorCode = new FormData();\r\n\t\tfdlErrorCode.left = new FormAttachment(0, 0);\r\n\t\tfdlErrorCode.right= new FormAttachment(middle, -margin);\r\n\t\tfdlErrorCode.top  = new FormAttachment(wFieldName, margin);\r\n\t\twlErrorCode.setLayoutData(fdlErrorCode);\r\n\t\twErrorCode=new TextVarWarning(transMeta, wComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wErrorCode);\r\n\t\tFormData fdErrorCode = new FormData();\r\n\t\tfdErrorCode.left = new FormAttachment(middle, margin);\r\n\t\tfdErrorCode.right= new FormAttachment(100, 0);\r\n\t\tfdErrorCode.top  = new FormAttachment(wFieldName, margin);\r\n\t\twErrorCode.setLayoutData(fdErrorCode);\r\n\t\taddSpacesWarning(wErrorCode);\r\n\r\n\t\t// ErrorDescription\r\n\t\t//\r\n\t\twlErrorDescription=new Label(wComp, SWT.RIGHT);\r\n\t\twlErrorDescription.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ErrorDescription.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlErrorDescription);\r\n\t\tFormData fdlErrorDescription = new FormData();\r\n\t\tfdlErrorDescription.left = new FormAttachment(0, 0);\r\n\t\tfdlErrorDescription.right= new FormAttachment(middle, -margin);\r\n\t\tfdlErrorDescription.top  = new FormAttachment(wErrorCode, margin);\r\n\t\twlErrorDescription.setLayoutData(fdlErrorDescription);\r\n\t\twErrorDescription=new TextVarWarning(transMeta, wComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wErrorDescription);\r\n\t\tFormData fdErrorDescription = new FormData();\r\n\t\tfdErrorDescription.left = new FormAttachment(middle, margin);\r\n\t\tfdErrorDescription.right= new FormAttachment(100, 0);\r\n\t\tfdErrorDescription.top  = new FormAttachment(wErrorCode, margin);\r\n\t\twErrorDescription.setLayoutData(fdErrorDescription);\r\n\t\taddSpacesWarning(wErrorDescription);\r\n\r\n\t\t// Data type validations & constants masks...\r\n\t\t// \r\n\t\twgType = new Group(wComp, SWT.NONE);\r\n\t\tprops.setLook(wgType);\r\n\t\twgType.setText(BaseMessages.getString(PKG, \"ValidatorDialog.TypeGroup.Label\"));\r\n\t\tFormLayout typeGroupLayout = new FormLayout();\r\n\t\ttypeGroupLayout.marginHeight = Const.FORM_MARGIN;\r\n\t\ttypeGroupLayout.marginWidth = Const.FORM_MARGIN;\r\n\t\twgType.setLayout(typeGroupLayout);\r\n\t\tFormData fdType = new FormData();\r\n\t\tfdType.left = new FormAttachment(0, 0);\r\n\t\tfdType.right= new FormAttachment(100, 0);\r\n\t\tfdType.top  = new FormAttachment(wErrorDescription, margin*2);\r\n\t\twgType.setLayoutData(fdType);\r\n\t\t\r\n\t\t// Check for data type correctness?\r\n\t\t//\r\n\t\twlDataTypeVerified=new Label(wgType, SWT.RIGHT);\r\n\t\twlDataTypeVerified.setText(BaseMessages.getString(PKG, \"ValidatorDialog.DataTypeVerified.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlDataTypeVerified);\r\n\t\tFormData fdldataTypeVerified = new FormData();\r\n\t\tfdldataTypeVerified.left = new FormAttachment(0, 0);\r\n\t\tfdldataTypeVerified.right= new FormAttachment(middle, -margin);\r\n\t\tfdldataTypeVerified.top  = new FormAttachment(0, 0);\r\n\t\twlDataTypeVerified.setLayoutData(fdldataTypeVerified);\r\n\t\twDataTypeVerified=new Button(wgType, SWT.CHECK);\r\n \t\tprops.setLook(wDataTypeVerified);\r\n\t\tFormData fddataTypeVerified = new FormData();\r\n\t\tfddataTypeVerified.left = new FormAttachment(middle, margin+extra);\r\n\t\tfddataTypeVerified.right= new FormAttachment(100, 0);\r\n\t\tfddataTypeVerified.top  = new FormAttachment(0, 0);\r\n\t\twDataTypeVerified.setLayoutData(fddataTypeVerified);\r\n\r\n\t\t// Data type\r\n\t\t//\r\n\t\twlDataType=new Label(wgType, SWT.RIGHT);\r\n\t\twlDataType.setText(BaseMessages.getString(PKG, \"ValidatorDialog.DataType.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlDataType);\r\n\t\tFormData fdlDataType = new FormData();\r\n\t\tfdlDataType.left = new FormAttachment(0, 0);\r\n\t\tfdlDataType.right= new FormAttachment(middle, -margin);\r\n\t\tfdlDataType.top  = new FormAttachment(wDataTypeVerified, margin);\r\n\t\twlDataType.setLayoutData(fdlDataType);\r\n\t\twDataType=new Combo(wgType, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\twDataType.setItems(ValueMeta.getTypes());\r\n \t\tprops.setLook(wDataType);\r\n\t\tFormData fdDataType = new FormData();\r\n\t\tfdDataType.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdDataType.right= new FormAttachment(100, 0);\r\n\t\tfdDataType.top  = new FormAttachment(wDataTypeVerified, margin);\r\n\t\twDataType.setLayoutData(fdDataType);\r\n\t\t\r\n\t\t// Conversion mask\r\n\t\t//\r\n\t\twlConversionMask=new Label(wgType, SWT.RIGHT);\r\n\t\twlConversionMask.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ConversionMask.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlConversionMask);\r\n\t\tFormData fdlConversionMask = new FormData();\r\n\t\tfdlConversionMask.left = new FormAttachment(0, 0);\r\n\t\tfdlConversionMask.right= new FormAttachment(middle, -margin);\r\n\t\tfdlConversionMask.top  = new FormAttachment(wDataType, margin);\r\n\t\twlConversionMask.setLayoutData(fdlConversionMask);\r\n\t\twConversionMask=new WarningText(wgType, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wConversionMask);\r\n\t\tFormData fdConversionMask = new FormData();\r\n\t\tfdConversionMask.left = new FormAttachment(middle, margin);\r\n\t\tfdConversionMask.right= new FormAttachment(100, 0);\r\n\t\tfdConversionMask.top  = new FormAttachment(wDataType, margin);\r\n\t\twConversionMask.setLayoutData(fdConversionMask);\r\n\t\taddSpacesWarning(wConversionMask);\r\n\r\n\t\t// Decimal Symbol\r\n\t\t//\r\n\t\twlDecimalSymbol=new Label(wgType, SWT.RIGHT);\r\n\t\twlDecimalSymbol.setText(BaseMessages.getString(PKG, \"ValidatorDialog.DecimalSymbol.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlDecimalSymbol);\r\n\t\tFormData fdlDecimalSymbol = new FormData();\r\n\t\tfdlDecimalSymbol.left = new FormAttachment(0, 0);\r\n\t\tfdlDecimalSymbol.right= new FormAttachment(middle, -margin);\r\n\t\tfdlDecimalSymbol.top  = new FormAttachment(wConversionMask, margin);\r\n\t\twlDecimalSymbol.setLayoutData(fdlDecimalSymbol);\r\n\t\twDecimalSymbol=new WarningText(wgType, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wDecimalSymbol);\r\n\t\tFormData fdDecimalSymbol = new FormData();\r\n\t\tfdDecimalSymbol.left = new FormAttachment(middle, margin);\r\n\t\tfdDecimalSymbol.right= new FormAttachment(100, 0);\r\n\t\tfdDecimalSymbol.top  = new FormAttachment(wConversionMask, margin);\r\n\t\twDecimalSymbol.setLayoutData(fdDecimalSymbol);\r\n\t\taddSpacesWarning(wDecimalSymbol);\r\n\t\t\r\n\t\t// Grouping Symbol\r\n\t\t//\r\n\t\twlGroupingSymbol=new Label(wgType, SWT.RIGHT);\r\n\t\twlGroupingSymbol.setText(BaseMessages.getString(PKG, \"ValidatorDialog.GroupingSymbol.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlGroupingSymbol);\r\n\t\tFormData fdlGroupingSymbol = new FormData();\r\n\t\tfdlGroupingSymbol.left = new FormAttachment(0, 0);\r\n\t\tfdlGroupingSymbol.right= new FormAttachment(middle, -margin);\r\n\t\tfdlGroupingSymbol.top  = new FormAttachment(wDecimalSymbol, margin);\r\n\t\twlGroupingSymbol.setLayoutData(fdlGroupingSymbol);\r\n\t\twGroupingSymbol=new WarningText(wgType, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wGroupingSymbol);\r\n\t\tFormData fdGroupingSymbol = new FormData();\r\n\t\tfdGroupingSymbol.left = new FormAttachment(middle, margin);\r\n\t\tfdGroupingSymbol.right= new FormAttachment(100, 0);\r\n\t\tfdGroupingSymbol.top  = new FormAttachment(wDecimalSymbol, margin);\r\n\t\twGroupingSymbol.setLayoutData(fdGroupingSymbol);\r\n\t\taddSpacesWarning(wGroupingSymbol);\r\n\t\t\r\n\t\t\r\n\t\t///////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t\t//\r\n\t\t// The data group...\r\n\t\t//\r\n\t\t//\r\n\t\twgData = new Group(wComp, SWT.NONE);\r\n\t\tprops.setLook(wgData);\r\n\t\twgData.setText(BaseMessages.getString(PKG, \"ValidatorDialog.DataGroup.Label\"));\r\n\t\tFormLayout dataGroupLayout = new FormLayout();\r\n\t\tdataGroupLayout.marginHeight = Const.FORM_MARGIN;\r\n\t\tdataGroupLayout.marginWidth = Const.FORM_MARGIN;\r\n\t\twgData.setLayout(dataGroupLayout);\r\n\t\tFormData fdData = new FormData();\r\n\t\tfdData.left = new FormAttachment(0, 0);\r\n\t\tfdData.right= new FormAttachment(100, 0);\r\n\t\tfdData.top  = new FormAttachment(wgType, margin);\r\n\t\twgData.setLayoutData(fdData);\r\n\t\t\r\n\t\t// Check for null?\r\n\t\t//\r\n\t\twlNullAllowed=new Label(wgData, SWT.RIGHT);\r\n\t\twlNullAllowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.NullAllowed.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlNullAllowed);\r\n\t\tFormData fdlNullAllowed = new FormData();\r\n\t\tfdlNullAllowed.left = new FormAttachment(0, 0);\r\n\t\tfdlNullAllowed.right= new FormAttachment(middle, -margin);\r\n\t\tfdlNullAllowed.top  = new FormAttachment(0, 0);\r\n\t\twlNullAllowed.setLayoutData(fdlNullAllowed);\r\n\t\twNullAllowed=new Button(wgData, SWT.CHECK);\r\n \t\tprops.setLook(wNullAllowed);\r\n\t\tFormData fdNullAllowed = new FormData();\r\n\t\tfdNullAllowed.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdNullAllowed.right= new FormAttachment(100, 0);\r\n\t\tfdNullAllowed.top  = new FormAttachment(0, 0);\r\n\t\twNullAllowed.setLayoutData(fdNullAllowed);\r\n\r\n\t\t// Only null allowed?\r\n\t\t//\r\n\t\twlOnlyNullAllowed=new Label(wgData, SWT.RIGHT);\r\n\t\twlOnlyNullAllowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.OnlyNullAllowed.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlOnlyNullAllowed);\r\n\t\tFormData fdlOnlyNullAllowed = new FormData();\r\n\t\tfdlOnlyNullAllowed.left = new FormAttachment(0, 0);\r\n\t\tfdlOnlyNullAllowed.right= new FormAttachment(middle, -margin);\r\n\t\tfdlOnlyNullAllowed.top  = new FormAttachment(wNullAllowed, margin);\r\n\t\twlOnlyNullAllowed.setLayoutData(fdlOnlyNullAllowed);\r\n\t\twOnlyNullAllowed=new Button(wgData, SWT.CHECK);\r\n \t\tprops.setLook(wOnlyNullAllowed);\r\n\t\tFormData fdOnlyNullAllowed = new FormData();\r\n\t\tfdOnlyNullAllowed.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdOnlyNullAllowed.right= new FormAttachment(100, 0);\r\n\t\tfdOnlyNullAllowed.top  = new FormAttachment(wNullAllowed, margin);\r\n\t\twOnlyNullAllowed.setLayoutData(fdOnlyNullAllowed);\r\n\r\n\t\t// Only numeric allowed?\r\n\t\t//\r\n\t\twlOnlyNumeric=new Label(wgData, SWT.RIGHT);\r\n\t\twlOnlyNumeric.setText(BaseMessages.getString(PKG, \"ValidatorDialog.OnlyNumeric.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlOnlyNumeric);\r\n\t\tFormData fdlOnlyNumeric = new FormData();\r\n\t\tfdlOnlyNumeric.left = new FormAttachment(0, 0);\r\n\t\tfdlOnlyNumeric.right= new FormAttachment(middle, -margin);\r\n\t\tfdlOnlyNumeric.top  = new FormAttachment(wOnlyNullAllowed, margin);\r\n\t\twlOnlyNumeric.setLayoutData(fdlOnlyNumeric);\r\n\t\twOnlyNumeric=new Button(wgData, SWT.CHECK);\r\n \t\tprops.setLook(wOnlyNumeric);\r\n\t\tFormData fdOnlyNumeric = new FormData();\r\n\t\tfdOnlyNumeric.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdOnlyNumeric.right= new FormAttachment(100, 0);\r\n\t\tfdOnlyNumeric.top  = new FormAttachment(wOnlyNullAllowed, margin);\r\n\t\twOnlyNumeric.setLayoutData(fdOnlyNumeric);\r\n\r\n\t\t// Maximum length\r\n\t\t//\r\n\t\twlMaxLength=new Label(wgData, SWT.RIGHT);\r\n\t\twlMaxLength.setText(BaseMessages.getString(PKG, \"ValidatorDialog.MaxLength.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlMaxLength);\r\n\t\tFormData fdlMaxLength = new FormData();\r\n\t\tfdlMaxLength.left = new FormAttachment(0, 0);\r\n\t\tfdlMaxLength.right= new FormAttachment(middle, -margin);\r\n\t\tfdlMaxLength.top  = new FormAttachment(wOnlyNumeric, margin);\r\n\t\twlMaxLength.setLayoutData(fdlMaxLength);\r\n\t\twMaxLength=new WarningText(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wMaxLength);\r\n\t\tFormData fdMaxLength = new FormData();\r\n\t\tfdMaxLength.left = new FormAttachment(middle, margin);\r\n\t\tfdMaxLength.right= new FormAttachment(100, 0);\r\n\t\tfdMaxLength.top  = new FormAttachment(wOnlyNumeric, margin);\r\n\t\twMaxLength.setLayoutData(fdMaxLength);\r\n\t\taddSpacesWarning(wMaxLength);\r\n\r\n\t\t// Minimum length\r\n\t\t//\r\n\t\twlMinLength=new Label(wgData, SWT.RIGHT);\r\n\t\twlMinLength.setText(BaseMessages.getString(PKG, \"ValidatorDialog.MinLength.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlMinLength);\r\n\t\tFormData fdlMinLength = new FormData();\r\n\t\tfdlMinLength.left = new FormAttachment(0, 0);\r\n\t\tfdlMinLength.right= new FormAttachment(middle, -margin);\r\n\t\tfdlMinLength.top  = new FormAttachment(wMaxLength, margin);\r\n\t\twlMinLength.setLayoutData(fdlMinLength);\r\n\t\twMinLength=new WarningText(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wMinLength);\r\n\t\tFormData fdMinLength = new FormData();\r\n\t\tfdMinLength.left = new FormAttachment(middle, margin);\r\n\t\tfdMinLength.right= new FormAttachment(100, 0);\r\n\t\tfdMinLength.top  = new FormAttachment(wMaxLength, margin);\r\n\t\twMinLength.setLayoutData(fdMinLength);\r\n\t\taddSpacesWarning(wMinLength);\r\n\r\n\t\t// Maximum value\r\n\t\t//\r\n\t\twlMaxValue=new Label(wgData, SWT.RIGHT);\r\n\t\twlMaxValue.setText(BaseMessages.getString(PKG, \"ValidatorDialog.MaxValue.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlMaxValue);\r\n\t\tFormData fdlMaxValue = new FormData();\r\n\t\tfdlMaxValue.left = new FormAttachment(0, 0);\r\n\t\tfdlMaxValue.right= new FormAttachment(middle, -margin);\r\n\t\tfdlMaxValue.top  = new FormAttachment(wMinLength, margin);\r\n\t\twlMaxValue.setLayoutData(fdlMaxValue);\r\n\t\twMaxValue=new WarningText(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wMaxValue);\r\n\t\tFormData fdMaxValue = new FormData();\r\n\t\tfdMaxValue.left = new FormAttachment(middle, margin);\r\n\t\tfdMaxValue.right= new FormAttachment(100, 0);\r\n\t\tfdMaxValue.top  = new FormAttachment(wMinLength, margin);\r\n\t\twMaxValue.setLayoutData(fdMaxValue);\r\n\t\taddSpacesWarning(wMaxValue);\r\n\t\t\r\n\t\t// Minimum value\r\n\t\t//\r\n\t\twlMinValue=new Label(wgData, SWT.RIGHT);\r\n\t\twlMinValue.setText(BaseMessages.getString(PKG, \"ValidatorDialog.MinValue.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlMinValue);\r\n\t\tFormData fdlMinValue = new FormData();\r\n\t\tfdlMinValue.left = new FormAttachment(0, 0);\r\n\t\tfdlMinValue.right= new FormAttachment(middle, -margin);\r\n\t\tfdlMinValue.top  = new FormAttachment(wMaxValue, margin);\r\n\t\twlMinValue.setLayoutData(fdlMinValue);\r\n\t\twMinValue=new WarningText(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wMinValue);\r\n\t\tFormData fdMinValue = new FormData();\r\n\t\tfdMinValue.left = new FormAttachment(middle, margin);\r\n\t\tfdMinValue.right= new FormAttachment(100, 0);\r\n\t\tfdMinValue.top  = new FormAttachment(wMaxValue, margin);\r\n\t\twMinValue.setLayoutData(fdMinValue);\r\n\t\taddSpacesWarning(wMinValue);\r\n\t\t\r\n\t\t// Expected start string\r\n\t\t//\r\n\t\twlStartStringExpected=new Label(wgData, SWT.RIGHT);\r\n\t\twlStartStringExpected.setText(BaseMessages.getString(PKG, \"ValidatorDialog.StartStringExpected.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlStartStringExpected);\r\n\t\tFormData fdlStartStringExpected = new FormData();\r\n\t\tfdlStartStringExpected.left = new FormAttachment(0, 0);\r\n\t\tfdlStartStringExpected.right= new FormAttachment(middle, -margin);\r\n\t\tfdlStartStringExpected.top  = new FormAttachment(wMinValue, margin);\r\n\t\twlStartStringExpected.setLayoutData(fdlStartStringExpected);\r\n\t\twStartStringExpected=new WarningText(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wStartStringExpected);\r\n\t\tFormData fdStartStringExpected = new FormData();\r\n\t\tfdStartStringExpected.left = new FormAttachment(middle, margin);\r\n\t\tfdStartStringExpected.right= new FormAttachment(100, 0);\r\n\t\tfdStartStringExpected.top  = new FormAttachment(wMinValue, margin);\r\n\t\twStartStringExpected.setLayoutData(fdStartStringExpected);\r\n\t\taddSpacesWarning(wStartStringExpected);\r\n\r\n\t\t// Expected End string\r\n\t\t//\r\n\t\twlEndStringExpected=new Label(wgData, SWT.RIGHT);\r\n\t\twlEndStringExpected.setText(BaseMessages.getString(PKG, \"ValidatorDialog.EndStringExpected.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlEndStringExpected);\r\n\t\tFormData fdlEndStringExpected = new FormData();\r\n\t\tfdlEndStringExpected.left = new FormAttachment(0, 0);\r\n\t\tfdlEndStringExpected.right= new FormAttachment(middle, -margin);\r\n\t\tfdlEndStringExpected.top  = new FormAttachment(wStartStringExpected, margin);\r\n\t\twlEndStringExpected.setLayoutData(fdlEndStringExpected);\r\n\t\twEndStringExpected=new WarningText(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wEndStringExpected);\r\n\t\tFormData fdEndStringExpected = new FormData();\r\n\t\tfdEndStringExpected.left = new FormAttachment(middle, margin);\r\n\t\tfdEndStringExpected.right= new FormAttachment(100, 0);\r\n\t\tfdEndStringExpected.top  = new FormAttachment(wStartStringExpected, margin);\r\n\t\twEndStringExpected.setLayoutData(fdEndStringExpected);\r\n\t\taddSpacesWarning(wEndStringExpected);\r\n\r\n\t\t// Disallowed start string\r\n\t\t//\r\n\t\twlStartStringDisallowed=new Label(wgData, SWT.RIGHT);\r\n\t\twlStartStringDisallowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.StartStringDisallowed.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlStartStringDisallowed);\r\n\t\tFormData fdlStartStringDisallowed = new FormData();\r\n\t\tfdlStartStringDisallowed.left = new FormAttachment(0, 0);\r\n\t\tfdlStartStringDisallowed.right= new FormAttachment(middle, -margin);\r\n\t\tfdlStartStringDisallowed.top  = new FormAttachment(wEndStringExpected, margin);\r\n\t\twlStartStringDisallowed.setLayoutData(fdlStartStringDisallowed);\r\n\t\twStartStringDisallowed=new WarningText(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wStartStringDisallowed);\r\n\t\tFormData fdStartStringDisallowed = new FormData();\r\n\t\tfdStartStringDisallowed.left = new FormAttachment(middle, margin);\r\n\t\tfdStartStringDisallowed.right= new FormAttachment(100, 0);\r\n\t\tfdStartStringDisallowed.top  = new FormAttachment(wEndStringExpected, margin);\r\n\t\twStartStringDisallowed.setLayoutData(fdStartStringDisallowed);\r\n\t\taddSpacesWarning(wStartStringDisallowed);\r\n\r\n\t\t// Disallowed End string\r\n\t\t//\r\n\t\twlEndStringDisallowed=new Label(wgData, SWT.RIGHT);\r\n\t\twlEndStringDisallowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.EndStringDisallowed.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlEndStringDisallowed);\r\n\t\tFormData fdlEndStringDisallowed = new FormData();\r\n\t\tfdlEndStringDisallowed.left = new FormAttachment(0, 0);\r\n\t\tfdlEndStringDisallowed.right= new FormAttachment(middle, -margin);\r\n\t\tfdlEndStringDisallowed.top  = new FormAttachment(wStartStringDisallowed, margin);\r\n\t\twlEndStringDisallowed.setLayoutData(fdlEndStringDisallowed);\r\n\t\twEndStringDisallowed=new WarningText(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wEndStringDisallowed);\r\n\t\tFormData fdEndStringDisallowed = new FormData();\r\n\t\tfdEndStringDisallowed.left = new FormAttachment(middle, margin);\r\n\t\tfdEndStringDisallowed.right= new FormAttachment(100, 0);\r\n\t\tfdEndStringDisallowed.top  = new FormAttachment(wStartStringDisallowed, margin);\r\n\t\twEndStringDisallowed.setLayoutData(fdEndStringDisallowed);\r\n\t\taddSpacesWarning(wEndStringDisallowed);\r\n\t\t\r\n\t\t// Expected regular expression\r\n\t\t//\r\n\t\twlRegExpExpected=new Label(wgData, SWT.RIGHT);\r\n\t\twlRegExpExpected.setText(BaseMessages.getString(PKG, \"ValidatorDialog.RegExpExpected.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlRegExpExpected);\r\n\t\tFormData fdlRegExpExpected = new FormData();\r\n\t\tfdlRegExpExpected.left = new FormAttachment(0, 0);\r\n\t\tfdlRegExpExpected.right= new FormAttachment(middle, -margin);\r\n\t\tfdlRegExpExpected.top  = new FormAttachment(wEndStringDisallowed, margin);\r\n\t\twlRegExpExpected.setLayoutData(fdlRegExpExpected);\r\n\t\twRegExpExpected=new WarningText(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wRegExpExpected);\r\n\t\tFormData fdRegExpExpected = new FormData();\r\n\t\tfdRegExpExpected.left = new FormAttachment(middle, margin);\r\n\t\tfdRegExpExpected.right= new FormAttachment(100, 0);\r\n\t\tfdRegExpExpected.top  = new FormAttachment(wEndStringDisallowed, margin);\r\n\t\twRegExpExpected.setLayoutData(fdRegExpExpected);\r\n\t\taddSpacesWarning(wRegExpExpected);\r\n\r\n\t\t// Disallowed regular expression\r\n\t\t//\r\n\t\twlRegExpDisallowed=new Label(wgData, SWT.RIGHT);\r\n\t\twlRegExpDisallowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.RegExpDisallowed.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlRegExpDisallowed);\r\n\t\tFormData fdlRegExpDisallowed = new FormData();\r\n\t\tfdlRegExpDisallowed.left = new FormAttachment(0, 0);\r\n\t\tfdlRegExpDisallowed.right= new FormAttachment(middle, -margin);\r\n\t\tfdlRegExpDisallowed.top  = new FormAttachment(wRegExpExpected, margin);\r\n\t\twlRegExpDisallowed.setLayoutData(fdlRegExpDisallowed);\r\n\t\twRegExpDisallowed=new WarningText(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wRegExpDisallowed);\r\n\t\tFormData fdRegExpDisallowed = new FormData();\r\n\t\tfdRegExpDisallowed.left = new FormAttachment(middle, margin);\r\n\t\tfdRegExpDisallowed.right= new FormAttachment(100, 0);\r\n\t\tfdRegExpDisallowed.top  = new FormAttachment(wRegExpExpected, margin);\r\n\t\twRegExpDisallowed.setLayoutData(fdRegExpDisallowed);\r\n\t\taddSpacesWarning(wRegExpDisallowed);\r\n\r\n\t\t// Allowed values: a list box.\r\n\t\t//\r\n\t\t// Add an entry\r\n\t\t//\r\n\t\twbAddAllowed = new Button(wgData, SWT.PUSH);\r\n\t\twbAddAllowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ButtonAddAllowed.Label\")); //$NON-NLS-1$\r\n\t\tFormData fdbAddAllowed = new FormData();\r\n\t\tfdbAddAllowed.right  = new FormAttachment(100, 0);\r\n\t\tfdbAddAllowed.top    = new FormAttachment(wRegExpDisallowed, margin);\r\n\t\twbAddAllowed.setLayoutData(fdbAddAllowed);\r\n\t\twbAddAllowed.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { addAllowedValue(); } });\r\n\r\n\t\t// Remove an entry\r\n\t\t//\r\n\t\twbRemoveAllowed = new Button(wgData, SWT.PUSH);\r\n\t\twbRemoveAllowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ButtonRemoveAllowed.Label\")); //$NON-NLS-1$\r\n\t\tFormData fdbRemoveAllowed = new FormData();\r\n\t\tfdbRemoveAllowed.right  = new FormAttachment(100, 0);\r\n\t\tfdbRemoveAllowed.top    = new FormAttachment(wbAddAllowed, margin);\r\n\t\twbRemoveAllowed.setLayoutData(fdbRemoveAllowed);\r\n\t\twbRemoveAllowed.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { removeAllowedValue(); } });\r\n\r\n\t\twlAllowedValues=new Label(wgData, SWT.RIGHT);\r\n\t\twlAllowedValues.setText(BaseMessages.getString(PKG, \"ValidatorDialog.AllowedValues.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlAllowedValues);\r\n\t\tFormData fdlAllowedValues = new FormData();\r\n\t\tfdlAllowedValues.left = new FormAttachment(0, 0);\r\n\t\tfdlAllowedValues.right= new FormAttachment(middle, -margin);\r\n\t\tfdlAllowedValues.top  = new FormAttachment(wRegExpDisallowed, margin);\r\n\t\twlAllowedValues.setLayoutData(fdlAllowedValues);\r\n\t\twAllowedValues=new List(wgData, SWT.MULTI | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wAllowedValues);\r\n \t\tFormData fdAllowedValues = new FormData();\r\n \t\tfdAllowedValues.left   = new FormAttachment(middle, margin+extra);\r\n \t\tfdAllowedValues.right  = new FormAttachment(wbRemoveAllowed, -20);\r\n \t\tfdAllowedValues.top    = new FormAttachment(wRegExpDisallowed, margin);\r\n \t\tfdAllowedValues.bottom = new FormAttachment(wRegExpDisallowed, 150);\r\n \t\twAllowedValues.setLayoutData(fdAllowedValues);\r\n \t\t\r\n \t\t// Source allowed values from another step? \r\n\t\t//\r\n\t\twlSourceValues=new Label(wgData, SWT.RIGHT);\r\n\t\twlSourceValues.setText(BaseMessages.getString(PKG, \"ValidatorDialog.SourceValues.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlSourceValues);\r\n\t\tFormData fdlSourceValues = new FormData();\r\n\t\tfdlSourceValues.left = new FormAttachment(0, 0);\r\n\t\tfdlSourceValues.right= new FormAttachment(middle, -margin);\r\n\t\tfdlSourceValues.top  = new FormAttachment(wAllowedValues, margin);\r\n\t\twlSourceValues.setLayoutData(fdlSourceValues);\r\n\t\twSourceValues=new Button(wgData, SWT.CHECK);\r\n \t\tprops.setLook(wSourceValues);\r\n\t\tFormData fdSourceValues = new FormData();\r\n\t\tfdSourceValues.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdSourceValues.right= new FormAttachment(100, 0);\r\n\t\tfdSourceValues.top  = new FormAttachment(wAllowedValues, margin);\r\n\t\twSourceValues.setLayoutData(fdSourceValues);\r\n\t\twSourceValues.addSelectionListener(new SelectionAdapter() {\r\n\t\t\r\n\t\t\t@Override\r\n\t\t\tpublic void widgetSelected(SelectionEvent arg0) {\r\n\t\t\t\tenableFields();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Source allowed values : source step\r\n\t\t//\r\n\t\twlSourceStep=new Label(wgData, SWT.RIGHT);\r\n\t\twlSourceStep.setText(BaseMessages.getString(PKG, \"ValidatorDialog.SourceStep.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlSourceStep);\r\n\t\tFormData fdlSourceStep = new FormData();\r\n\t\tfdlSourceStep.left = new FormAttachment(0, margin);\r\n\t\tfdlSourceStep.right= new FormAttachment(middle, -margin);\r\n\t\tfdlSourceStep.top  = new FormAttachment(wSourceValues, margin);\r\n\t\twlSourceStep.setLayoutData(fdlSourceStep);\r\n\t\twSourceStep=new Combo(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\tprops.setLook(wSourceStep);\r\n\t\tFormData fdSourceStep = new FormData();\r\n\t\tfdSourceStep.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdSourceStep.right= new FormAttachment(100, 0);\r\n\t\tfdSourceStep.top  = new FormAttachment(wSourceValues, margin);\r\n\t\twSourceStep.setLayoutData(fdSourceStep);\r\n\t\twSourceStep.addFocusListener(new FocusAdapter() { public void focusGained(org.eclipse.swt.events.FocusEvent e) { getSteps(); } } );\r\n\t\twSourceStep.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent arg0) { getSteps(); } } );\r\n\t\t\r\n\t\t// Source allowed values : source field\r\n\t\t//\r\n\t\twlSourceField=new Label(wgData, SWT.RIGHT);\r\n\t\twlSourceField.setText(BaseMessages.getString(PKG, \"ValidatorDialog.SourceField.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlSourceField);\r\n\t\tFormData fdlSourceField = new FormData();\r\n\t\tfdlSourceField.left = new FormAttachment(0, margin);\r\n\t\tfdlSourceField.right= new FormAttachment(middle, -margin);\r\n\t\tfdlSourceField.top  = new FormAttachment(wSourceStep, margin);\r\n\t\twlSourceField.setLayoutData(fdlSourceField);\r\n\t\twSourceField=new Combo(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\tprops.setLook(wSourceField);\r\n\t\tFormData fdSourceField = new FormData();\r\n\t\tfdSourceField.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdSourceField.right= new FormAttachment(100, 0);\r\n\t\tfdSourceField.top  = new FormAttachment(wSourceStep, margin);\r\n\t\twSourceField.setLayoutData(fdSourceField);\r\n\t\twSourceField.addFocusListener(new FocusAdapter() { public void focusGained(org.eclipse.swt.events.FocusEvent e) { getFields(); } } );\r\n\t\twSourceField.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent arg0) { getFields(); } } );\r\n\r\n\t\t\r\n \t\twComp.layout();\r\n        wComp.pack();\r\n        Rectangle bounds = wComp.getBounds();\r\n\t\t\r\n        wSComp.setContent(wComp);\r\n        wSComp.setExpandHorizontal(true);\r\n        wSComp.setExpandVertical(true);\r\n        wSComp.setMinWidth(bounds.width);\r\n        wSComp.setMinHeight(bounds.height);\r\n\n\n\t\t// Add listeners\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel(); } };\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();     } };\n\t\t\n\t\twCancel.addListener(SWT.Selection, lsCancel);\n\t\twOK.addListener    (SWT.Selection, lsOK    );\r\n\t\twClear.addSelectionListener(new SelectionAdapter() {\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\r\n\t\t\t\t// Clear the validation rules for a certain field...\r\n\t\t\t\t//\r\n\t\t\t\tint index = wValidationsList.getSelectionIndex();\r\n\t\t\t\tif (index>=0) {\r\n\t\t\t\t\tselectionList.remove(index);\r\n\t\t\t\t\tselectedField=null;\r\n\t\t\t\t\twValidationsList.remove(index);\r\n\t\t\t\t\tenableFields();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\n\r\n\t\twNew.addSelectionListener(new SelectionAdapter() {\r\n\t\t\t\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\r\n\t\t\t\t// Create a new validation rule page ...\r\n\t\t\t\t//\r\n\t\t\t\tEnterStringDialog enterStringDialog = new EnterStringDialog(shell, \"\", BaseMessages.getString(PKG, \"ValidatorDialog.EnterValidationRuleName.Title\"), BaseMessages.getString(PKG, \"ValidatorDialog.EnterValidationRuleName.Message\"));\r\n\t\t\t\tString description = enterStringDialog.open();\r\n\t\t\t\tif (description!=null) {\r\n\t\t\t\t\tif (Validation.findValidation(selectionList, description)!=null) {\r\n\t\t\t\t\t\tMessageBox messageBox = new MessageBox(shell, SWT.ICON_ERROR);\r\n\t\t\t\t\t\tmessageBox.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ValidationRuleNameAlreadyExists.Title\"));\r\n\t\t\t\t\t\tmessageBox.setMessage(BaseMessages.getString(PKG, \"ValidatorDialog.ValidationRuleNameAlreadyExists.Message\"));\r\n\t\t\t\t\t\tmessageBox.open();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsaveChanges();\r\n\t\t\t\t\tValidation validation = new Validation();\r\n\t\t\t\t\tvalidation.setName(description);\r\n\t\t\t\t\tselectionList.add(validation);\r\n\t\t\t\t\tselectedField = validation;\r\n\t\t\t\t\trefreshValidationsList();\r\n\t\t\t\t\twValidationsList.select(selectionList.size()-1);\r\n\t\t\t\t\tgetValidatorFieldData(validation);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\n\r\n\t\twStepname.addSelectionListener( lsDef );\r\n\t\twConversionMask.addSelectionListener(lsDef);\r\n\t\twGroupingSymbol.addSelectionListener(lsDef);\r\n\t\twDecimalSymbol.addSelectionListener(lsDef);\r\n\t\t\r\n\t\twMaxLength.addSelectionListener(lsDef);\r\n\t\twMinLength.addSelectionListener(lsDef);\r\n\t\twMaxValue.addSelectionListener(lsDef);\r\n\t\twMinValue.addSelectionListener(lsDef);\n\t\t\n\t\t// Detect X or ALT-F4 or something that kills this window...\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\n\n\n\t\t// Set the shell size, based upon previous time...\n\t\tsetSize();\n\t\t\n\t\tgetData();\n\t\tinput.setChanged(changed);\n\t\n\t\tshell.open();\n\t\twhile (!shell.isDisposed())\n\t\t{\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\n\t\t}\n\t\treturn stepname;\n\t}","id":39092,"modified_method":"public String open()\n\t{\n\t\tShell parent = getParent();\n\t\tDisplay display = parent.getDisplay();\n\n\t\tshell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MIN | SWT.MAX);\n \t\tprops.setLook(shell);\n \t\tsetShellImage(shell, input);\n        \n\t\tModifyListener lsMod = new ModifyListener() \n\t\t{\n\t\t\tpublic void modifyText(ModifyEvent e) \n\t\t\t{\n\t\t\t\tinput.setChanged();\n\t\t\t}\n\t\t};\n\t\tchanged = input.hasChanged();\n\n\t\tFormLayout formLayout = new FormLayout ();\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\n\n\t\tshell.setLayout(formLayout);\n\t\tshell.setText(BaseMessages.getString(PKG, \"ValidatorDialog.Shell.Title\")); //$NON-NLS-1$\n\t\t\n\t\tint middle = props.getMiddlePct();\n\t\tint margin = Const.MARGIN;\n\r\n\t\tRectangle imageBounds = GUIResource.getInstance().getImageInfoHop().getBounds();\r\n\t\t\n\t\t// Stepname line\r\n\t\t//\n\t\twlStepname=new Label(shell, SWT.RIGHT);\n\t\twlStepname.setText(BaseMessages.getString(PKG, \"ValidatorDialog.Stepname.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlStepname);\n\t\tfdlStepname=new FormData();\n\t\tfdlStepname.left = new FormAttachment(0, 0);\n\t\tfdlStepname.right= new FormAttachment(middle, -margin);\n\t\tfdlStepname.top  = new FormAttachment(0, margin);\n\t\twlStepname.setLayoutData(fdlStepname);\n\t\twStepname=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n\t\twStepname.setText(stepname);\n \t\tprops.setLook(wStepname);\n\t\twStepname.addModifyListener(lsMod);\n\t\tfdStepname=new FormData();\n\t\tfdStepname.left = new FormAttachment(middle, 0);\n\t\tfdStepname.top  = new FormAttachment(0, margin);\n\t\tfdStepname.right= new FormAttachment(100, 0);\n\t\twStepname.setLayoutData(fdStepname);\r\n\t\t\r\n\t\t// Some buttons\n\t\twOK=new Button(shell, SWT.PUSH);\n\t\twOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\")); //$NON-NLS-1$\n\t\twNew=new Button(shell, SWT.PUSH);\r\n\t\twNew.setText(BaseMessages.getString(PKG, \"ValidatorDialog.NewButton.Label\")); //$NON-NLS-1$\r\n\t\twClear=new Button(shell, SWT.PUSH);\r\n\t\twClear.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ClearButton.Label\")); //$NON-NLS-1$\r\n\t\twCancel=new Button(shell, SWT.PUSH);\n\t\twCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\")); //$NON-NLS-1$\n\t\t\n\t\tsetButtonPositions(new Button[] { wOK, wNew, wClear, wCancel }, margin, null);\r\n\r\n\t\t// List of fields to the left...\r\n\t\t//\r\n\t\tLabel wlFieldList = new Label(shell, SWT.LEFT);\r\n\t\twlFieldList.setText(BaseMessages.getString(PKG, \"ValidatorDialog.FieldList.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlFieldList);\r\n\t\tFormData fdlFieldList = new FormData();\r\n\t\tfdlFieldList.left = new FormAttachment(0, 0);\r\n\t\tfdlFieldList.right= new FormAttachment(middle, -margin);\r\n\t\tfdlFieldList.top  = new FormAttachment(wStepname, margin);\r\n\t\twlFieldList.setLayoutData(fdlFieldList);\r\n\t\twValidationsList=new List(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL);\r\n\t\t\r\n \t\tprops.setLook(wValidationsList);\r\n \t\twValidationsList.addSelectionListener(new SelectionAdapter() { \r\n\t\t\tpublic void widgetSelected(SelectionEvent event) {\r\n\t\t\t\tshowSelectedValidatorField(wValidationsList.getSelection()[0]);\r\n\t\t\t}\r\n\t\t});\r\n \t\t\r\n\t\tFormData fdFieldList = new FormData();\r\n\t\tfdFieldList.left   = new FormAttachment(0, 0);\r\n\t\tfdFieldList.top    = new FormAttachment(wlFieldList, margin);\r\n\t\tfdFieldList.right  = new FormAttachment(middle, -margin);\r\n\t\tfdFieldList.bottom = new FormAttachment(wOK, -margin*2);\r\n\t\twValidationsList.setLayoutData(fdFieldList);\r\n\r\n\t\t// General: an option to allow ALL the options to be checked.\r\n\t\t//\r\n\t\twValidateAll=new Button(shell, SWT.CHECK);\r\n\t\twValidateAll.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ValidateAll.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wValidateAll);\r\n\t\tFormData fdValidateAll = new FormData();\r\n\t\tfdValidateAll.left = new FormAttachment(middle, 0);\r\n\t\tfdValidateAll.right= new FormAttachment(100, 0);\r\n\t\tfdValidateAll.top  = new FormAttachment(wStepname, margin);\r\n\t\twValidateAll.setLayoutData(fdValidateAll);\r\n\t\twValidateAll.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent arg0) { setFlags(); } });\r\n\r\n\t\t// General: When validating all options, still output a single row, errors concatenated\r\n\t\t//\r\n\t\twConcatErrors=new Button(shell, SWT.CHECK);\r\n\t\twConcatErrors.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ConcatErrors.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wConcatErrors);\r\n\t\tFormData fdConcatErrors = new FormData();\r\n\t\tfdConcatErrors.left = new FormAttachment(middle, 0);\r\n\t\tfdConcatErrors.top  = new FormAttachment(wValidateAll, margin);\r\n\t\twConcatErrors.setLayoutData(fdConcatErrors);\r\n\t\twConcatErrors.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent arg0) { setFlags(); } });\r\n\t\t\r\n\t\t// The separator\r\n\t\t//\r\n \t\twConcatSeparator=new TextVarWarning(transMeta, shell, SWT.LEFT | SWT.SINGLE | SWT.BORDER);\r\n\t\tprops.setLook(wConcatSeparator);\r\n\t\tFormData fdConcatSeparator = new FormData();\r\n\t\tfdConcatSeparator.left = new FormAttachment(wConcatErrors, margin);\r\n\t\tfdConcatSeparator.right= new FormAttachment(100, 0);\r\n\t\tfdConcatSeparator.top  = new FormAttachment(wValidateAll, margin);\r\n\t\twConcatSeparator.setLayoutData(fdConcatSeparator);\r\n\r\n\t\t\r\n\t\t// Create a scrolled composite on the right side...\r\n\t\t//\r\n\t\tScrolledComposite wSComp = new ScrolledComposite(shell, SWT.H_SCROLL | SWT.V_SCROLL);\r\n\t\tprops.setLook(wSComp);\r\n\t\twSComp.setLayout(new FillLayout());\r\n\t\tFormData fdComp = new FormData();\r\n\t\tfdComp.left   = new FormAttachment(middle, 0);\r\n\t\tfdComp.top    = new FormAttachment(wConcatSeparator, 2*margin);\r\n\t\tfdComp.right  = new FormAttachment(100, 0);\r\n\t\tfdComp.bottom = new FormAttachment(wOK, -margin*2);\r\n\t\twSComp.setLayoutData(fdComp);\r\n\t\t\r\n\t\tComposite wComp = new Composite(wSComp, SWT.BORDER);\r\n\t\tprops.setLook(wComp);\r\n        FormLayout compLayout = new FormLayout();\r\n        compLayout.marginWidth  = 3;\r\n        compLayout.marginHeight = 3;\r\n        wComp.setLayout(compLayout);\r\n        \r\n        int extra = imageBounds.width;\r\n\t\t\r\n\t\t// Description (list key)\r\n\t\t//\r\n\t\twlDescription=new Label(wComp, SWT.RIGHT);\r\n\t\twlDescription.setText(BaseMessages.getString(PKG, \"ValidatorDialog.Description.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlDescription);\r\n\t\tFormData fdlDescription = new FormData();\r\n\t\tfdlDescription.left = new FormAttachment(0, 0);\r\n\t\tfdlDescription.right= new FormAttachment(middle, -margin);\r\n\t\tfdlDescription.top  = new FormAttachment(0, 0);\r\n\t\twlDescription.setLayoutData(fdlDescription);\r\n\t\twDescription=new Text(wComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wDescription);\r\n\t\tFormData fdDescription = new FormData();\r\n\t\tfdDescription.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdDescription.right= new FormAttachment(100, 0);\r\n\t\tfdDescription.top  = new FormAttachment(0, 0);\r\n\t\twDescription.setLayoutData(fdDescription);\r\n\t\twDescription.addModifyListener(new ModifyListener() {\r\n\t\t\tpublic void modifyText(ModifyEvent event) {\r\n\t\t\t\t// See if there is a selected Validation\r\n\t\t\t\t//\r\n\t\t\t\tif (wValidationsList!=null && wValidationsList.getItemCount()>0 && wValidationsList.getSelection().length==1) {\r\n\t\t\t\t\tint index = wValidationsList.getSelectionIndex();\r\n\t\t\t\t\tString description = wValidationsList.getItem(index);\r\n\t\t\t\t\tValidation validation = Validation.findValidation(selectionList, description);\r\n\t\t\t\t\tString newDescription = wDescription.getText();\r\n\t\t\t\t\tvalidation.setName(newDescription);\r\n\t\t\t\t\twValidationsList.setItem(index, newDescription);\r\n\t\t\t\t\twValidationsList.select(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// The name of the field to validate\r\n\t\t//\r\n\t\twlFieldName=new Label(wComp, SWT.RIGHT);\r\n\t\twlFieldName.setText(BaseMessages.getString(PKG, \"ValidatorDialog.FieldName.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlFieldName);\r\n\t\tFormData fdlFieldName = new FormData();\r\n\t\tfdlFieldName.left = new FormAttachment(0, 0);\r\n\t\tfdlFieldName.right= new FormAttachment(middle, -margin);\r\n\t\tfdlFieldName.top  = new FormAttachment(wDescription, margin);\r\n\t\twlFieldName.setLayoutData(fdlFieldName);\r\n\t\twFieldName=new CCombo(wComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wFieldName);\r\n\t\tFormData fdFieldName = new FormData();\r\n\t\tfdFieldName.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdFieldName.right= new FormAttachment(100, 0);\r\n\t\tfdFieldName.top  = new FormAttachment(wDescription, margin);\r\n\t\twFieldName.setLayoutData(fdFieldName);\r\n\t\t\r\n\t\t// TODO: grab field list in thread in the background...\r\n\t\t//\r\n\t\ttry {\r\n\t\t\tinputFields = transMeta.getPrevStepFields(stepMeta);\r\n\t\t\twFieldName.setItems(inputFields.getFieldNames());\r\n\t\t} catch (KettleStepException ex) {\r\n\t\t\tnew ErrorDialog(shell, BaseMessages.getString(PKG, \"ValidatorDialog.Exception.CantGetFieldsFromPreviousSteps.Title\"), BaseMessages.getString(PKG, \"ValidatorDialog.Exception.CantGetFieldsFromPreviousSteps.Message\"), ex);\r\n\t\t}\r\n\t\t\r\n\t\t// ErrorCode\r\n\t\t//\r\n\t\twlErrorCode=new Label(wComp, SWT.RIGHT);\r\n\t\twlErrorCode.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ErrorCode.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlErrorCode);\r\n\t\tFormData fdlErrorCode = new FormData();\r\n\t\tfdlErrorCode.left = new FormAttachment(0, 0);\r\n\t\tfdlErrorCode.right= new FormAttachment(middle, -margin);\r\n\t\tfdlErrorCode.top  = new FormAttachment(wFieldName, margin);\r\n\t\twlErrorCode.setLayoutData(fdlErrorCode);\r\n\t\twErrorCode=new TextVarWarning(transMeta, wComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wErrorCode);\r\n\t\tFormData fdErrorCode = new FormData();\r\n\t\tfdErrorCode.left = new FormAttachment(middle, margin);\r\n\t\tfdErrorCode.right= new FormAttachment(100, 0);\r\n\t\tfdErrorCode.top  = new FormAttachment(wFieldName, margin);\r\n\t\twErrorCode.setLayoutData(fdErrorCode);\r\n\t\taddSpacesWarning(wErrorCode);\r\n\r\n\t\t// ErrorDescription\r\n\t\t//\r\n\t\twlErrorDescription=new Label(wComp, SWT.RIGHT);\r\n\t\twlErrorDescription.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ErrorDescription.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlErrorDescription);\r\n\t\tFormData fdlErrorDescription = new FormData();\r\n\t\tfdlErrorDescription.left = new FormAttachment(0, 0);\r\n\t\tfdlErrorDescription.right= new FormAttachment(middle, -margin);\r\n\t\tfdlErrorDescription.top  = new FormAttachment(wErrorCode, margin);\r\n\t\twlErrorDescription.setLayoutData(fdlErrorDescription);\r\n\t\twErrorDescription=new TextVarWarning(transMeta, wComp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wErrorDescription);\r\n\t\tFormData fdErrorDescription = new FormData();\r\n\t\tfdErrorDescription.left = new FormAttachment(middle, margin);\r\n\t\tfdErrorDescription.right= new FormAttachment(100, 0);\r\n\t\tfdErrorDescription.top  = new FormAttachment(wErrorCode, margin);\r\n\t\twErrorDescription.setLayoutData(fdErrorDescription);\r\n\t\taddSpacesWarning(wErrorDescription);\r\n\r\n\t\t// Data type validations & constants masks...\r\n\t\t// \r\n\t\twgType = new Group(wComp, SWT.NONE);\r\n\t\tprops.setLook(wgType);\r\n\t\twgType.setText(BaseMessages.getString(PKG, \"ValidatorDialog.TypeGroup.Label\"));\r\n\t\tFormLayout typeGroupLayout = new FormLayout();\r\n\t\ttypeGroupLayout.marginHeight = Const.FORM_MARGIN;\r\n\t\ttypeGroupLayout.marginWidth = Const.FORM_MARGIN;\r\n\t\twgType.setLayout(typeGroupLayout);\r\n\t\tFormData fdType = new FormData();\r\n\t\tfdType.left = new FormAttachment(0, 0);\r\n\t\tfdType.right= new FormAttachment(100, 0);\r\n\t\tfdType.top  = new FormAttachment(wErrorDescription, margin*2);\r\n\t\twgType.setLayoutData(fdType);\r\n\t\t\r\n\t\t// Check for data type correctness?\r\n\t\t//\r\n\t\twlDataTypeVerified=new Label(wgType, SWT.RIGHT);\r\n\t\twlDataTypeVerified.setText(BaseMessages.getString(PKG, \"ValidatorDialog.DataTypeVerified.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlDataTypeVerified);\r\n\t\tFormData fdldataTypeVerified = new FormData();\r\n\t\tfdldataTypeVerified.left = new FormAttachment(0, 0);\r\n\t\tfdldataTypeVerified.right= new FormAttachment(middle, -margin);\r\n\t\tfdldataTypeVerified.top  = new FormAttachment(0, 0);\r\n\t\twlDataTypeVerified.setLayoutData(fdldataTypeVerified);\r\n\t\twDataTypeVerified=new Button(wgType, SWT.CHECK);\r\n \t\tprops.setLook(wDataTypeVerified);\r\n\t\tFormData fddataTypeVerified = new FormData();\r\n\t\tfddataTypeVerified.left = new FormAttachment(middle, margin+extra);\r\n\t\tfddataTypeVerified.right= new FormAttachment(100, 0);\r\n\t\tfddataTypeVerified.top  = new FormAttachment(0, 0);\r\n\t\twDataTypeVerified.setLayoutData(fddataTypeVerified);\r\n\r\n\t\t// Data type\r\n\t\t//\r\n\t\twlDataType=new Label(wgType, SWT.RIGHT);\r\n\t\twlDataType.setText(BaseMessages.getString(PKG, \"ValidatorDialog.DataType.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlDataType);\r\n\t\tFormData fdlDataType = new FormData();\r\n\t\tfdlDataType.left = new FormAttachment(0, 0);\r\n\t\tfdlDataType.right= new FormAttachment(middle, -margin);\r\n\t\tfdlDataType.top  = new FormAttachment(wDataTypeVerified, margin);\r\n\t\twlDataType.setLayoutData(fdlDataType);\r\n\t\twDataType=new Combo(wgType, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\twDataType.setItems(ValueMeta.getTypes());\r\n \t\tprops.setLook(wDataType);\r\n\t\tFormData fdDataType = new FormData();\r\n\t\tfdDataType.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdDataType.right= new FormAttachment(100, 0);\r\n\t\tfdDataType.top  = new FormAttachment(wDataTypeVerified, margin);\r\n\t\twDataType.setLayoutData(fdDataType);\r\n\t\t\r\n\t\t// Conversion mask\r\n\t\t//\r\n\t\twlConversionMask=new Label(wgType, SWT.RIGHT);\r\n\t\twlConversionMask.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ConversionMask.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlConversionMask);\r\n\t\tFormData fdlConversionMask = new FormData();\r\n\t\tfdlConversionMask.left = new FormAttachment(0, 0);\r\n\t\tfdlConversionMask.right= new FormAttachment(middle, -margin);\r\n\t\tfdlConversionMask.top  = new FormAttachment(wDataType, margin);\r\n\t\twlConversionMask.setLayoutData(fdlConversionMask);\r\n\t\twConversionMask=new TextVarWarning(transMeta, wgType, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wConversionMask);\r\n\t\tFormData fdConversionMask = new FormData();\r\n\t\tfdConversionMask.left = new FormAttachment(middle, margin);\r\n\t\tfdConversionMask.right= new FormAttachment(100, 0);\r\n\t\tfdConversionMask.top  = new FormAttachment(wDataType, margin);\r\n\t\twConversionMask.setLayoutData(fdConversionMask);\r\n\t\taddSpacesWarning(wConversionMask);\r\n\r\n\t\t// Decimal Symbol\r\n\t\t//\r\n\t\twlDecimalSymbol=new Label(wgType, SWT.RIGHT);\r\n\t\twlDecimalSymbol.setText(BaseMessages.getString(PKG, \"ValidatorDialog.DecimalSymbol.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlDecimalSymbol);\r\n\t\tFormData fdlDecimalSymbol = new FormData();\r\n\t\tfdlDecimalSymbol.left = new FormAttachment(0, 0);\r\n\t\tfdlDecimalSymbol.right= new FormAttachment(middle, -margin);\r\n\t\tfdlDecimalSymbol.top  = new FormAttachment(wConversionMask, margin);\r\n\t\twlDecimalSymbol.setLayoutData(fdlDecimalSymbol);\r\n\t\twDecimalSymbol=new TextVarWarning(transMeta, wgType, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wDecimalSymbol);\r\n\t\tFormData fdDecimalSymbol = new FormData();\r\n\t\tfdDecimalSymbol.left = new FormAttachment(middle, margin);\r\n\t\tfdDecimalSymbol.right= new FormAttachment(100, 0);\r\n\t\tfdDecimalSymbol.top  = new FormAttachment(wConversionMask, margin);\r\n\t\twDecimalSymbol.setLayoutData(fdDecimalSymbol);\r\n\t\taddSpacesWarning(wDecimalSymbol);\r\n\t\t\r\n\t\t// Grouping Symbol\r\n\t\t//\r\n\t\twlGroupingSymbol=new Label(wgType, SWT.RIGHT);\r\n\t\twlGroupingSymbol.setText(BaseMessages.getString(PKG, \"ValidatorDialog.GroupingSymbol.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlGroupingSymbol);\r\n\t\tFormData fdlGroupingSymbol = new FormData();\r\n\t\tfdlGroupingSymbol.left = new FormAttachment(0, 0);\r\n\t\tfdlGroupingSymbol.right= new FormAttachment(middle, -margin);\r\n\t\tfdlGroupingSymbol.top  = new FormAttachment(wDecimalSymbol, margin);\r\n\t\twlGroupingSymbol.setLayoutData(fdlGroupingSymbol);\r\n\t\twGroupingSymbol=new TextVarWarning(transMeta, wgType, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wGroupingSymbol);\r\n\t\tFormData fdGroupingSymbol = new FormData();\r\n\t\tfdGroupingSymbol.left = new FormAttachment(middle, margin);\r\n\t\tfdGroupingSymbol.right= new FormAttachment(100, 0);\r\n\t\tfdGroupingSymbol.top  = new FormAttachment(wDecimalSymbol, margin);\r\n\t\twGroupingSymbol.setLayoutData(fdGroupingSymbol);\r\n\t\taddSpacesWarning(wGroupingSymbol);\r\n\t\t\r\n\t\t\r\n\t\t///////////////////////////////////////////////////////////////////////////////////////////////////\r\n\t\t//\r\n\t\t// The data group...\r\n\t\t//\r\n\t\t//\r\n\t\twgData = new Group(wComp, SWT.NONE);\r\n\t\tprops.setLook(wgData);\r\n\t\twgData.setText(BaseMessages.getString(PKG, \"ValidatorDialog.DataGroup.Label\"));\r\n\t\tFormLayout dataGroupLayout = new FormLayout();\r\n\t\tdataGroupLayout.marginHeight = Const.FORM_MARGIN;\r\n\t\tdataGroupLayout.marginWidth = Const.FORM_MARGIN;\r\n\t\twgData.setLayout(dataGroupLayout);\r\n\t\tFormData fdData = new FormData();\r\n\t\tfdData.left = new FormAttachment(0, 0);\r\n\t\tfdData.right= new FormAttachment(100, 0);\r\n\t\tfdData.top  = new FormAttachment(wgType, margin);\r\n\t\twgData.setLayoutData(fdData);\r\n\t\t\r\n\t\t// Check for null?\r\n\t\t//\r\n\t\twlNullAllowed=new Label(wgData, SWT.RIGHT);\r\n\t\twlNullAllowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.NullAllowed.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlNullAllowed);\r\n\t\tFormData fdlNullAllowed = new FormData();\r\n\t\tfdlNullAllowed.left = new FormAttachment(0, 0);\r\n\t\tfdlNullAllowed.right= new FormAttachment(middle, -margin);\r\n\t\tfdlNullAllowed.top  = new FormAttachment(0, 0);\r\n\t\twlNullAllowed.setLayoutData(fdlNullAllowed);\r\n\t\twNullAllowed=new Button(wgData, SWT.CHECK);\r\n \t\tprops.setLook(wNullAllowed);\r\n\t\tFormData fdNullAllowed = new FormData();\r\n\t\tfdNullAllowed.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdNullAllowed.right= new FormAttachment(100, 0);\r\n\t\tfdNullAllowed.top  = new FormAttachment(0, 0);\r\n\t\twNullAllowed.setLayoutData(fdNullAllowed);\r\n\r\n\t\t// Only null allowed?\r\n\t\t//\r\n\t\twlOnlyNullAllowed=new Label(wgData, SWT.RIGHT);\r\n\t\twlOnlyNullAllowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.OnlyNullAllowed.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlOnlyNullAllowed);\r\n\t\tFormData fdlOnlyNullAllowed = new FormData();\r\n\t\tfdlOnlyNullAllowed.left = new FormAttachment(0, 0);\r\n\t\tfdlOnlyNullAllowed.right= new FormAttachment(middle, -margin);\r\n\t\tfdlOnlyNullAllowed.top  = new FormAttachment(wNullAllowed, margin);\r\n\t\twlOnlyNullAllowed.setLayoutData(fdlOnlyNullAllowed);\r\n\t\twOnlyNullAllowed=new Button(wgData, SWT.CHECK);\r\n \t\tprops.setLook(wOnlyNullAllowed);\r\n\t\tFormData fdOnlyNullAllowed = new FormData();\r\n\t\tfdOnlyNullAllowed.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdOnlyNullAllowed.right= new FormAttachment(100, 0);\r\n\t\tfdOnlyNullAllowed.top  = new FormAttachment(wNullAllowed, margin);\r\n\t\twOnlyNullAllowed.setLayoutData(fdOnlyNullAllowed);\r\n\r\n\t\t// Only numeric allowed?\r\n\t\t//\r\n\t\twlOnlyNumeric=new Label(wgData, SWT.RIGHT);\r\n\t\twlOnlyNumeric.setText(BaseMessages.getString(PKG, \"ValidatorDialog.OnlyNumeric.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlOnlyNumeric);\r\n\t\tFormData fdlOnlyNumeric = new FormData();\r\n\t\tfdlOnlyNumeric.left = new FormAttachment(0, 0);\r\n\t\tfdlOnlyNumeric.right= new FormAttachment(middle, -margin);\r\n\t\tfdlOnlyNumeric.top  = new FormAttachment(wOnlyNullAllowed, margin);\r\n\t\twlOnlyNumeric.setLayoutData(fdlOnlyNumeric);\r\n\t\twOnlyNumeric=new Button(wgData, SWT.CHECK);\r\n \t\tprops.setLook(wOnlyNumeric);\r\n\t\tFormData fdOnlyNumeric = new FormData();\r\n\t\tfdOnlyNumeric.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdOnlyNumeric.right= new FormAttachment(100, 0);\r\n\t\tfdOnlyNumeric.top  = new FormAttachment(wOnlyNullAllowed, margin);\r\n\t\twOnlyNumeric.setLayoutData(fdOnlyNumeric);\r\n\r\n\t\t// Maximum length\r\n\t\t//\r\n\t\twlMaxLength=new Label(wgData, SWT.RIGHT);\r\n\t\twlMaxLength.setText(BaseMessages.getString(PKG, \"ValidatorDialog.MaxLength.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlMaxLength);\r\n\t\tFormData fdlMaxLength = new FormData();\r\n\t\tfdlMaxLength.left = new FormAttachment(0, 0);\r\n\t\tfdlMaxLength.right= new FormAttachment(middle, -margin);\r\n\t\tfdlMaxLength.top  = new FormAttachment(wOnlyNumeric, margin);\r\n\t\twlMaxLength.setLayoutData(fdlMaxLength);\r\n\t\twMaxLength=new TextVarWarning(transMeta, wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wMaxLength);\r\n\t\tFormData fdMaxLength = new FormData();\r\n\t\tfdMaxLength.left = new FormAttachment(middle, margin);\r\n\t\tfdMaxLength.right= new FormAttachment(100, 0);\r\n\t\tfdMaxLength.top  = new FormAttachment(wOnlyNumeric, margin);\r\n\t\twMaxLength.setLayoutData(fdMaxLength);\r\n\t\taddSpacesWarning(wMaxLength);\r\n\r\n\t\t// Minimum length\r\n\t\t//\r\n\t\twlMinLength=new Label(wgData, SWT.RIGHT);\r\n\t\twlMinLength.setText(BaseMessages.getString(PKG, \"ValidatorDialog.MinLength.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlMinLength);\r\n\t\tFormData fdlMinLength = new FormData();\r\n\t\tfdlMinLength.left = new FormAttachment(0, 0);\r\n\t\tfdlMinLength.right= new FormAttachment(middle, -margin);\r\n\t\tfdlMinLength.top  = new FormAttachment(wMaxLength, margin);\r\n\t\twlMinLength.setLayoutData(fdlMinLength);\r\n\t\twMinLength=new TextVarWarning(transMeta, wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wMinLength);\r\n\t\tFormData fdMinLength = new FormData();\r\n\t\tfdMinLength.left = new FormAttachment(middle, margin);\r\n\t\tfdMinLength.right= new FormAttachment(100, 0);\r\n\t\tfdMinLength.top  = new FormAttachment(wMaxLength, margin);\r\n\t\twMinLength.setLayoutData(fdMinLength);\r\n\t\taddSpacesWarning(wMinLength);\r\n\r\n\t\t// Maximum value\r\n\t\t//\r\n\t\twlMaxValue=new Label(wgData, SWT.RIGHT);\r\n\t\twlMaxValue.setText(BaseMessages.getString(PKG, \"ValidatorDialog.MaxValue.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlMaxValue);\r\n\t\tFormData fdlMaxValue = new FormData();\r\n\t\tfdlMaxValue.left = new FormAttachment(0, 0);\r\n\t\tfdlMaxValue.right= new FormAttachment(middle, -margin);\r\n\t\tfdlMaxValue.top  = new FormAttachment(wMinLength, margin);\r\n\t\twlMaxValue.setLayoutData(fdlMaxValue);\r\n\t\twMaxValue=new TextVarWarning(transMeta, wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wMaxValue);\r\n\t\tFormData fdMaxValue = new FormData();\r\n\t\tfdMaxValue.left = new FormAttachment(middle, margin);\r\n\t\tfdMaxValue.right= new FormAttachment(100, 0);\r\n\t\tfdMaxValue.top  = new FormAttachment(wMinLength, margin);\r\n\t\twMaxValue.setLayoutData(fdMaxValue);\r\n\t\taddSpacesWarning(wMaxValue);\r\n\t\t\r\n\t\t// Minimum value\r\n\t\t//\r\n\t\twlMinValue=new Label(wgData, SWT.RIGHT);\r\n\t\twlMinValue.setText(BaseMessages.getString(PKG, \"ValidatorDialog.MinValue.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlMinValue);\r\n\t\tFormData fdlMinValue = new FormData();\r\n\t\tfdlMinValue.left = new FormAttachment(0, 0);\r\n\t\tfdlMinValue.right= new FormAttachment(middle, -margin);\r\n\t\tfdlMinValue.top  = new FormAttachment(wMaxValue, margin);\r\n\t\twlMinValue.setLayoutData(fdlMinValue);\r\n\t\twMinValue=new TextVarWarning(transMeta, wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wMinValue);\r\n\t\tFormData fdMinValue = new FormData();\r\n\t\tfdMinValue.left = new FormAttachment(middle, margin);\r\n\t\tfdMinValue.right= new FormAttachment(100, 0);\r\n\t\tfdMinValue.top  = new FormAttachment(wMaxValue, margin);\r\n\t\twMinValue.setLayoutData(fdMinValue);\r\n\t\taddSpacesWarning(wMinValue);\r\n\t\t\r\n\t\t// Expected start string\r\n\t\t//\r\n\t\twlStartStringExpected=new Label(wgData, SWT.RIGHT);\r\n\t\twlStartStringExpected.setText(BaseMessages.getString(PKG, \"ValidatorDialog.StartStringExpected.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlStartStringExpected);\r\n\t\tFormData fdlStartStringExpected = new FormData();\r\n\t\tfdlStartStringExpected.left = new FormAttachment(0, 0);\r\n\t\tfdlStartStringExpected.right= new FormAttachment(middle, -margin);\r\n\t\tfdlStartStringExpected.top  = new FormAttachment(wMinValue, margin);\r\n\t\twlStartStringExpected.setLayoutData(fdlStartStringExpected);\r\n\t\twStartStringExpected=new TextVarWarning(transMeta, wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wStartStringExpected);\r\n\t\tFormData fdStartStringExpected = new FormData();\r\n\t\tfdStartStringExpected.left = new FormAttachment(middle, margin);\r\n\t\tfdStartStringExpected.right= new FormAttachment(100, 0);\r\n\t\tfdStartStringExpected.top  = new FormAttachment(wMinValue, margin);\r\n\t\twStartStringExpected.setLayoutData(fdStartStringExpected);\r\n\t\taddSpacesWarning(wStartStringExpected);\r\n\r\n\t\t// Expected End string\r\n\t\t//\r\n\t\twlEndStringExpected=new Label(wgData, SWT.RIGHT);\r\n\t\twlEndStringExpected.setText(BaseMessages.getString(PKG, \"ValidatorDialog.EndStringExpected.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlEndStringExpected);\r\n\t\tFormData fdlEndStringExpected = new FormData();\r\n\t\tfdlEndStringExpected.left = new FormAttachment(0, 0);\r\n\t\tfdlEndStringExpected.right= new FormAttachment(middle, -margin);\r\n\t\tfdlEndStringExpected.top  = new FormAttachment(wStartStringExpected, margin);\r\n\t\twlEndStringExpected.setLayoutData(fdlEndStringExpected);\r\n\t\twEndStringExpected=new TextVarWarning(transMeta, wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wEndStringExpected);\r\n\t\tFormData fdEndStringExpected = new FormData();\r\n\t\tfdEndStringExpected.left = new FormAttachment(middle, margin);\r\n\t\tfdEndStringExpected.right= new FormAttachment(100, 0);\r\n\t\tfdEndStringExpected.top  = new FormAttachment(wStartStringExpected, margin);\r\n\t\twEndStringExpected.setLayoutData(fdEndStringExpected);\r\n\t\taddSpacesWarning(wEndStringExpected);\r\n\r\n\t\t// Disallowed start string\r\n\t\t//\r\n\t\twlStartStringDisallowed=new Label(wgData, SWT.RIGHT);\r\n\t\twlStartStringDisallowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.StartStringDisallowed.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlStartStringDisallowed);\r\n\t\tFormData fdlStartStringDisallowed = new FormData();\r\n\t\tfdlStartStringDisallowed.left = new FormAttachment(0, 0);\r\n\t\tfdlStartStringDisallowed.right= new FormAttachment(middle, -margin);\r\n\t\tfdlStartStringDisallowed.top  = new FormAttachment(wEndStringExpected, margin);\r\n\t\twlStartStringDisallowed.setLayoutData(fdlStartStringDisallowed);\r\n\t\twStartStringDisallowed=new TextVarWarning(transMeta, wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wStartStringDisallowed);\r\n\t\tFormData fdStartStringDisallowed = new FormData();\r\n\t\tfdStartStringDisallowed.left = new FormAttachment(middle, margin);\r\n\t\tfdStartStringDisallowed.right= new FormAttachment(100, 0);\r\n\t\tfdStartStringDisallowed.top  = new FormAttachment(wEndStringExpected, margin);\r\n\t\twStartStringDisallowed.setLayoutData(fdStartStringDisallowed);\r\n\t\taddSpacesWarning(wStartStringDisallowed);\r\n\r\n\t\t// Disallowed End string\r\n\t\t//\r\n\t\twlEndStringDisallowed=new Label(wgData, SWT.RIGHT);\r\n\t\twlEndStringDisallowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.EndStringDisallowed.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlEndStringDisallowed);\r\n\t\tFormData fdlEndStringDisallowed = new FormData();\r\n\t\tfdlEndStringDisallowed.left = new FormAttachment(0, 0);\r\n\t\tfdlEndStringDisallowed.right= new FormAttachment(middle, -margin);\r\n\t\tfdlEndStringDisallowed.top  = new FormAttachment(wStartStringDisallowed, margin);\r\n\t\twlEndStringDisallowed.setLayoutData(fdlEndStringDisallowed);\r\n\t\twEndStringDisallowed=new TextVarWarning(transMeta, wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wEndStringDisallowed);\r\n\t\tFormData fdEndStringDisallowed = new FormData();\r\n\t\tfdEndStringDisallowed.left = new FormAttachment(middle, margin);\r\n\t\tfdEndStringDisallowed.right= new FormAttachment(100, 0);\r\n\t\tfdEndStringDisallowed.top  = new FormAttachment(wStartStringDisallowed, margin);\r\n\t\twEndStringDisallowed.setLayoutData(fdEndStringDisallowed);\r\n\t\taddSpacesWarning(wEndStringDisallowed);\r\n\t\t\r\n\t\t// Expected regular expression\r\n\t\t//\r\n\t\twlRegExpExpected=new Label(wgData, SWT.RIGHT);\r\n\t\twlRegExpExpected.setText(BaseMessages.getString(PKG, \"ValidatorDialog.RegExpExpected.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlRegExpExpected);\r\n\t\tFormData fdlRegExpExpected = new FormData();\r\n\t\tfdlRegExpExpected.left = new FormAttachment(0, 0);\r\n\t\tfdlRegExpExpected.right= new FormAttachment(middle, -margin);\r\n\t\tfdlRegExpExpected.top  = new FormAttachment(wEndStringDisallowed, margin);\r\n\t\twlRegExpExpected.setLayoutData(fdlRegExpExpected);\r\n\t\twRegExpExpected=new TextVarWarning(transMeta, wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wRegExpExpected);\r\n\t\tFormData fdRegExpExpected = new FormData();\r\n\t\tfdRegExpExpected.left = new FormAttachment(middle, margin);\r\n\t\tfdRegExpExpected.right= new FormAttachment(100, 0);\r\n\t\tfdRegExpExpected.top  = new FormAttachment(wEndStringDisallowed, margin);\r\n\t\twRegExpExpected.setLayoutData(fdRegExpExpected);\r\n\t\taddSpacesWarning(wRegExpExpected);\r\n\r\n\t\t// Disallowed regular expression\r\n\t\t//\r\n\t\twlRegExpDisallowed=new Label(wgData, SWT.RIGHT);\r\n\t\twlRegExpDisallowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.RegExpDisallowed.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlRegExpDisallowed);\r\n\t\tFormData fdlRegExpDisallowed = new FormData();\r\n\t\tfdlRegExpDisallowed.left = new FormAttachment(0, 0);\r\n\t\tfdlRegExpDisallowed.right= new FormAttachment(middle, -margin);\r\n\t\tfdlRegExpDisallowed.top  = new FormAttachment(wRegExpExpected, margin);\r\n\t\twlRegExpDisallowed.setLayoutData(fdlRegExpDisallowed);\r\n\t\twRegExpDisallowed=new TextVarWarning(transMeta, wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wRegExpDisallowed);\r\n\t\tFormData fdRegExpDisallowed = new FormData();\r\n\t\tfdRegExpDisallowed.left = new FormAttachment(middle, margin);\r\n\t\tfdRegExpDisallowed.right= new FormAttachment(100, 0);\r\n\t\tfdRegExpDisallowed.top  = new FormAttachment(wRegExpExpected, margin);\r\n\t\twRegExpDisallowed.setLayoutData(fdRegExpDisallowed);\r\n\t\taddSpacesWarning(wRegExpDisallowed);\r\n\r\n\t\t// Allowed values: a list box.\r\n\t\t//\r\n\t\t// Add an entry\r\n\t\t//\r\n\t\twbAddAllowed = new Button(wgData, SWT.PUSH);\r\n\t\twbAddAllowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ButtonAddAllowed.Label\")); //$NON-NLS-1$\r\n\t\tFormData fdbAddAllowed = new FormData();\r\n\t\tfdbAddAllowed.right  = new FormAttachment(100, 0);\r\n\t\tfdbAddAllowed.top    = new FormAttachment(wRegExpDisallowed, margin);\r\n\t\twbAddAllowed.setLayoutData(fdbAddAllowed);\r\n\t\twbAddAllowed.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { addAllowedValue(); } });\r\n\r\n\t\t// Remove an entry\r\n\t\t//\r\n\t\twbRemoveAllowed = new Button(wgData, SWT.PUSH);\r\n\t\twbRemoveAllowed.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ButtonRemoveAllowed.Label\")); //$NON-NLS-1$\r\n\t\tFormData fdbRemoveAllowed = new FormData();\r\n\t\tfdbRemoveAllowed.right  = new FormAttachment(100, 0);\r\n\t\tfdbRemoveAllowed.top    = new FormAttachment(wbAddAllowed, margin);\r\n\t\twbRemoveAllowed.setLayoutData(fdbRemoveAllowed);\r\n\t\twbRemoveAllowed.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { removeAllowedValue(); } });\r\n\r\n\t\twlAllowedValues=new Label(wgData, SWT.RIGHT);\r\n\t\twlAllowedValues.setText(BaseMessages.getString(PKG, \"ValidatorDialog.AllowedValues.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlAllowedValues);\r\n\t\tFormData fdlAllowedValues = new FormData();\r\n\t\tfdlAllowedValues.left = new FormAttachment(0, 0);\r\n\t\tfdlAllowedValues.right= new FormAttachment(middle, -margin);\r\n\t\tfdlAllowedValues.top  = new FormAttachment(wRegExpDisallowed, margin);\r\n\t\twlAllowedValues.setLayoutData(fdlAllowedValues);\r\n\t\twAllowedValues=new List(wgData, SWT.MULTI | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wAllowedValues);\r\n \t\tFormData fdAllowedValues = new FormData();\r\n \t\tfdAllowedValues.left   = new FormAttachment(middle, margin+extra);\r\n \t\tfdAllowedValues.right  = new FormAttachment(wbRemoveAllowed, -20);\r\n \t\tfdAllowedValues.top    = new FormAttachment(wRegExpDisallowed, margin);\r\n \t\tfdAllowedValues.bottom = new FormAttachment(wRegExpDisallowed, 150);\r\n \t\twAllowedValues.setLayoutData(fdAllowedValues);\r\n \t\t\r\n \t\t// Source allowed values from another step? \r\n\t\t//\r\n\t\twlSourceValues=new Label(wgData, SWT.RIGHT);\r\n\t\twlSourceValues.setText(BaseMessages.getString(PKG, \"ValidatorDialog.SourceValues.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlSourceValues);\r\n\t\tFormData fdlSourceValues = new FormData();\r\n\t\tfdlSourceValues.left = new FormAttachment(0, 0);\r\n\t\tfdlSourceValues.right= new FormAttachment(middle, -margin);\r\n\t\tfdlSourceValues.top  = new FormAttachment(wAllowedValues, margin);\r\n\t\twlSourceValues.setLayoutData(fdlSourceValues);\r\n\t\twSourceValues=new Button(wgData, SWT.CHECK);\r\n \t\tprops.setLook(wSourceValues);\r\n\t\tFormData fdSourceValues = new FormData();\r\n\t\tfdSourceValues.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdSourceValues.right= new FormAttachment(100, 0);\r\n\t\tfdSourceValues.top  = new FormAttachment(wAllowedValues, margin);\r\n\t\twSourceValues.setLayoutData(fdSourceValues);\r\n\t\twSourceValues.addSelectionListener(new SelectionAdapter() {\r\n\t\t\r\n\t\t\t@Override\r\n\t\t\tpublic void widgetSelected(SelectionEvent arg0) {\r\n\t\t\t\tenableFields();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Source allowed values : source step\r\n\t\t//\r\n\t\twlSourceStep=new Label(wgData, SWT.RIGHT);\r\n\t\twlSourceStep.setText(BaseMessages.getString(PKG, \"ValidatorDialog.SourceStep.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlSourceStep);\r\n\t\tFormData fdlSourceStep = new FormData();\r\n\t\tfdlSourceStep.left = new FormAttachment(0, margin);\r\n\t\tfdlSourceStep.right= new FormAttachment(middle, -margin);\r\n\t\tfdlSourceStep.top  = new FormAttachment(wSourceValues, margin);\r\n\t\twlSourceStep.setLayoutData(fdlSourceStep);\r\n\t\twSourceStep=new Combo(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\tprops.setLook(wSourceStep);\r\n\t\tFormData fdSourceStep = new FormData();\r\n\t\tfdSourceStep.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdSourceStep.right= new FormAttachment(100, 0);\r\n\t\tfdSourceStep.top  = new FormAttachment(wSourceValues, margin);\r\n\t\twSourceStep.setLayoutData(fdSourceStep);\r\n\t\twSourceStep.addFocusListener(new FocusAdapter() { public void focusGained(org.eclipse.swt.events.FocusEvent e) { getSteps(); } } );\r\n\t\twSourceStep.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent arg0) { getSteps(); } } );\r\n\t\t\r\n\t\t// Source allowed values : source field\r\n\t\t//\r\n\t\twlSourceField=new Label(wgData, SWT.RIGHT);\r\n\t\twlSourceField.setText(BaseMessages.getString(PKG, \"ValidatorDialog.SourceField.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlSourceField);\r\n\t\tFormData fdlSourceField = new FormData();\r\n\t\tfdlSourceField.left = new FormAttachment(0, margin);\r\n\t\tfdlSourceField.right= new FormAttachment(middle, -margin);\r\n\t\tfdlSourceField.top  = new FormAttachment(wSourceStep, margin);\r\n\t\twlSourceField.setLayoutData(fdlSourceField);\r\n\t\twSourceField=new Combo(wgData, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\tprops.setLook(wSourceField);\r\n\t\tFormData fdSourceField = new FormData();\r\n\t\tfdSourceField.left = new FormAttachment(middle, margin+extra);\r\n\t\tfdSourceField.right= new FormAttachment(100, 0);\r\n\t\tfdSourceField.top  = new FormAttachment(wSourceStep, margin);\r\n\t\twSourceField.setLayoutData(fdSourceField);\r\n\t\twSourceField.addFocusListener(new FocusAdapter() { public void focusGained(org.eclipse.swt.events.FocusEvent e) { getFields(); } } );\r\n\t\twSourceField.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent arg0) { getFields(); } } );\r\n\r\n\t\t\r\n \t\twComp.layout();\r\n        wComp.pack();\r\n        Rectangle bounds = wComp.getBounds();\r\n\t\t\r\n        wSComp.setContent(wComp);\r\n        wSComp.setExpandHorizontal(true);\r\n        wSComp.setExpandVertical(true);\r\n        wSComp.setMinWidth(bounds.width);\r\n        wSComp.setMinHeight(bounds.height);\r\n\n\n\t\t// Add listeners\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel(); } };\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();     } };\n\t\t\n\t\twCancel.addListener(SWT.Selection, lsCancel);\n\t\twOK.addListener    (SWT.Selection, lsOK    );\r\n\t\twClear.addSelectionListener(new SelectionAdapter() {\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\r\n\t\t\t\t// Clear the validation rules for a certain field...\r\n\t\t\t\t//\r\n\t\t\t\tint index = wValidationsList.getSelectionIndex();\r\n\t\t\t\tif (index>=0) {\r\n\t\t\t\t\tselectionList.remove(index);\r\n\t\t\t\t\tselectedField=null;\r\n\t\t\t\t\twValidationsList.remove(index);\r\n\t\t\t\t\tenableFields();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\n\r\n\t\twNew.addSelectionListener(new SelectionAdapter() {\r\n\t\t\t\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) {\r\n\t\t\t\t// Create a new validation rule page ...\r\n\t\t\t\t//\r\n\t\t\t\tEnterStringDialog enterStringDialog = new EnterStringDialog(shell, \"\", BaseMessages.getString(PKG, \"ValidatorDialog.EnterValidationRuleName.Title\"), BaseMessages.getString(PKG, \"ValidatorDialog.EnterValidationRuleName.Message\"));\r\n\t\t\t\tString description = enterStringDialog.open();\r\n\t\t\t\tif (description!=null) {\r\n\t\t\t\t\tif (Validation.findValidation(selectionList, description)!=null) {\r\n\t\t\t\t\t\tMessageBox messageBox = new MessageBox(shell, SWT.ICON_ERROR);\r\n\t\t\t\t\t\tmessageBox.setText(BaseMessages.getString(PKG, \"ValidatorDialog.ValidationRuleNameAlreadyExists.Title\"));\r\n\t\t\t\t\t\tmessageBox.setMessage(BaseMessages.getString(PKG, \"ValidatorDialog.ValidationRuleNameAlreadyExists.Message\"));\r\n\t\t\t\t\t\tmessageBox.open();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsaveChanges();\r\n\t\t\t\t\tValidation validation = new Validation();\r\n\t\t\t\t\tvalidation.setName(description);\r\n\t\t\t\t\tselectionList.add(validation);\r\n\t\t\t\t\tselectedField = validation;\r\n\t\t\t\t\trefreshValidationsList();\r\n\t\t\t\t\twValidationsList.select(selectionList.size()-1);\r\n\t\t\t\t\tgetValidatorFieldData(validation);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\n\r\n\t\twStepname.addSelectionListener( lsDef );\r\n\t\twConversionMask.addSelectionListener(lsDef);\r\n\t\twGroupingSymbol.addSelectionListener(lsDef);\r\n\t\twDecimalSymbol.addSelectionListener(lsDef);\r\n\t\t\r\n\t\twMaxLength.addSelectionListener(lsDef);\r\n\t\twMinLength.addSelectionListener(lsDef);\r\n\t\twMaxValue.addSelectionListener(lsDef);\r\n\t\twMinValue.addSelectionListener(lsDef);\n\t\t\n\t\t// Detect X or ALT-F4 or something that kills this window...\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\n\n\n\t\t// Set the shell size, based upon previous time...\n\t\tsetSize();\n\t\t\n\t\tgetData();\n\t\tinput.setChanged(changed);\n\t\n\t\tshell.open();\n\t\twhile (!shell.isDisposed())\n\t\t{\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\n\t\t}\n\t\treturn stepname;\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"protected void setFlags() {\r\n\t\twConcatErrors.setEnabled(wValidateAll.getSelection());\r\n\t\twConcatSeparator.setEnabled(wValidateAll.getSelection());\r\n\t}","id":39093,"modified_method":"protected void setFlags() {\r\n\t\twConcatErrors.setEnabled(wValidateAll.getSelection());\r\n\t\twConcatSeparator.setEnabled(wConcatErrors.getSelection());\r\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\r\n\t * Add one entry to the list of allowed values...\r\n\t */\r\n\tprotected void addAllowedValue() {\r\n\t\tEnterStringDialog dialog = new EnterStringDialog(shell, \"\", BaseMessages.getString(PKG, \"ValidatorDialog.Dialog.AddAllowedValue.Title\"), BaseMessages.getString(PKG, \"ValidatorDialog.Dialog.AddAllowedValue.Message\"));\r\n\t\tString value = dialog.open();\r\n\t\tif (!Const.isEmpty(value)) {\r\n\t\t\twAllowedValues.add(value);\r\n\t\t}\r\n\t}","id":39094,"modified_method":"/**\r\n\t * Add one entry to the list of allowed values...\r\n\t */\r\n\tprotected void addAllowedValue() {\r\n\t\tEnterStringDialog dialog = new EnterStringDialog(shell, \"\", BaseMessages.getString(PKG, \"ValidatorDialog.Dialog.AddAllowedValue.Title\"), BaseMessages.getString(PKG, \"ValidatorDialog.Dialog.AddAllowedValue.Message\"), true, transMeta);\r\n\t\tString value = dialog.open();\r\n\t\tif (!Const.isEmpty(value)) {\r\n\t\t\twAllowedValues.add(value);\r\n\t\t}\r\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void getValidatorFieldData(Validation field) {\r\n\t\t\r\n\t\twDescription.setText(Const.NVL(field.getName(), \"\"));\r\n\t\twFieldName.setText(Const.NVL(field.getFieldName(), \"\"));\r\n\r\n\t\twErrorCode.setText(Const.NVL(field.getErrorCode(), \"\"));\r\n\t\twErrorDescription.setText(Const.NVL(field.getErrorDescription(), \"\"));\r\n\r\n\t\twDataTypeVerified.setSelection(field.isDataTypeVerified());\r\n\t\twDataType.setText(ValueMeta.getTypeDesc(field.getDataType()));\r\n\t\twConversionMask.setText(Const.NVL(field.getConversionMask(), \"\"));\r\n\t\twDecimalSymbol.setText(Const.NVL(field.getDecimalSymbol(), \"\"));\r\n\t\twGroupingSymbol.setText(Const.NVL(field.getGroupingSymbol(), \"\"));\r\n\t\t\r\n\t\twNullAllowed.setSelection(field.isNullAllowed());\r\n\t\twOnlyNullAllowed.setSelection(field.isOnlyNullAllowed());\r\n\t\twOnlyNumeric.setSelection(field.isOnlyNumericAllowed());\r\n\t\t\r\n\t\tif (field.getMaximumLength()>=0) wMaxLength.setText(Integer.toString(field.getMaximumLength())); else wMaxLength.setText(\"\"); \r\n\t\tif (field.getMinimumLength()>=0) wMinLength.setText(Integer.toString(field.getMinimumLength())); else wMinLength.setText(\"\"); \r\n\t\twMaxValue.setText(Const.NVL(field.getMaximumValue(), \"\"));\r\n\t\twMinValue.setText(Const.NVL(field.getMinimumValue(), \"\"));\r\n\t\twStartStringExpected.setText(Const.NVL(field.getStartString(), \"\"));\r\n\t\twEndStringExpected.setText(Const.NVL(field.getEndString(), \"\"));\r\n\t\twStartStringDisallowed.setText(Const.NVL(field.getStartStringNotAllowed(), \"\"));\r\n\t\twEndStringDisallowed.setText(Const.NVL(field.getEndStringNotAllowed(), \"\"));\r\n\t\twRegExpExpected.setText(Const.NVL(field.getRegularExpression(), \"\"));\r\n\t\twRegExpDisallowed.setText(Const.NVL(field.getRegularExpressionNotAllowed(), \"\"));\r\n\t\t\r\n\t\twAllowedValues.removeAll();\r\n\t\tif (field.getAllowedValues()!=null) {\r\n\t\t\tfor (String allowedValue : field.getAllowedValues()) {\r\n\t\t\t\twAllowedValues.add(Const.NVL(allowedValue, \"\"));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\twSourceValues.setSelection(field.isSourcingValues());\r\n\t\twSourceStep.setText( Const.NVL(field.getSourcingStepName(), \"\") );\r\n\t\twSourceField.setText(Const.NVL(field.getSourcingField(), \"\"));\r\n\t}","id":39095,"modified_method":"private void getValidatorFieldData(Validation field) {\r\n\t\t\r\n\t\twDescription.setText(Const.NVL(field.getName(), \"\"));\r\n\t\twFieldName.setText(Const.NVL(field.getFieldName(), \"\"));\r\n\r\n\t\twErrorCode.setText(Const.NVL(field.getErrorCode(), \"\"));\r\n\t\twErrorDescription.setText(Const.NVL(field.getErrorDescription(), \"\"));\r\n\r\n\t\twDataTypeVerified.setSelection(field.isDataTypeVerified());\r\n\t\twDataType.setText(ValueMeta.getTypeDesc(field.getDataType()));\r\n\t\twConversionMask.setText(Const.NVL(field.getConversionMask(), \"\"));\r\n\t\twDecimalSymbol.setText(Const.NVL(field.getDecimalSymbol(), \"\"));\r\n\t\twGroupingSymbol.setText(Const.NVL(field.getGroupingSymbol(), \"\"));\r\n\t\t\r\n\t\twNullAllowed.setSelection(field.isNullAllowed());\r\n\t\twOnlyNullAllowed.setSelection(field.isOnlyNullAllowed());\r\n\t\twOnlyNumeric.setSelection(field.isOnlyNumericAllowed());\r\n\t\twMaxLength.setText(Const.NVL(field.getMaximumLength(), \"\"));\r\n\t\twMinLength.setText(Const.NVL(field.getMinimumLength(), \"\"));\r\n\t\twMaxValue.setText(Const.NVL(field.getMaximumValue(), \"\"));\r\n\t\twMinValue.setText(Const.NVL(field.getMinimumValue(), \"\"));\r\n\t\twStartStringExpected.setText(Const.NVL(field.getStartString(), \"\"));\r\n\t\twEndStringExpected.setText(Const.NVL(field.getEndString(), \"\"));\r\n\t\twStartStringDisallowed.setText(Const.NVL(field.getStartStringNotAllowed(), \"\"));\r\n\t\twEndStringDisallowed.setText(Const.NVL(field.getEndStringNotAllowed(), \"\"));\r\n\t\twRegExpExpected.setText(Const.NVL(field.getRegularExpression(), \"\"));\r\n\t\twRegExpDisallowed.setText(Const.NVL(field.getRegularExpressionNotAllowed(), \"\"));\r\n\t\t\r\n\t\twAllowedValues.removeAll();\r\n\t\tif (field.getAllowedValues()!=null) {\r\n\t\t\tfor (String allowedValue : field.getAllowedValues()) {\r\n\t\t\t\twAllowedValues.add(Const.NVL(allowedValue, \"\"));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\twSourceValues.setSelection(field.isSourcingValues());\r\n\t\twSourceStep.setText( Const.NVL(field.getSourcingStepName(), \"\") );\r\n\t\twSourceField.setText(Const.NVL(field.getSourcingField(), \"\"));\r\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void saveChanges() {\r\n\t\tif (selectedField!=null) {\r\n\t\t\t// First grab the info from the dialog...\r\n\t\t\t// \r\n\t\t\tselectedField.setFieldName(wFieldName.getText());\r\n\r\n\t\t\tselectedField.setErrorCode(wErrorCode.getText());\r\n\t\t\tselectedField.setErrorDescription(wErrorDescription.getText());\r\n\r\n\t\t\tselectedField.setDataTypeVerified(wDataTypeVerified.getSelection());\r\n\t\t\tselectedField.setDataType(ValueMeta.getType(wDataType.getText()));\r\n\t\t\tselectedField.setConversionMask(wConversionMask.getText());\r\n\t\t\tselectedField.setDecimalSymbol(wDecimalSymbol.getText());\r\n\t\t\tselectedField.setGroupingSymbol(wGroupingSymbol.getText());\r\n\t\t\t\r\n\t\t\tselectedField.setNullAllowed(wNullAllowed.getSelection());\r\n\t\t\tselectedField.setOnlyNullAllowed(wOnlyNullAllowed.getSelection());\r\n\t\t\tselectedField.setOnlyNumericAllowed(wOnlyNumeric.getSelection());\r\n\t\t\t\r\n\t\t\tselectedField.setMaximumLength(Const.toInt(wMaxLength.getText(), -1));\r\n\t\t\tselectedField.setMinimumLength(Const.toInt(wMinLength.getText(), -1));\r\n\t\t\tselectedField.setMaximumValue(wMaxValue.getText());\r\n\t\t\tselectedField.setMinimumValue(wMinValue.getText());\r\n\t\t\t\r\n\t\t\tselectedField.setStartString(wStartStringExpected.getText());\r\n\t\t\tselectedField.setEndString(wEndStringExpected.getText());\r\n\t\t\tselectedField.setStartStringNotAllowed(wStartStringDisallowed.getText());\r\n\t\t\tselectedField.setEndStringNotAllowed(wEndStringDisallowed.getText());\r\n\r\n\t\t\tselectedField.setRegularExpression(wRegExpExpected.getText());\r\n\t\t\tselectedField.setRegularExpressionNotAllowed(wRegExpDisallowed.getText());\r\n\r\n\t\t\tselectedField.setAllowedValues(wAllowedValues.getItems());\r\n\t\t\t\r\n\t\t\tselectedField.setSourcingValues(wSourceValues.getSelection());\r\n\t\t\tselectedField.setSourcingField(wSourceField.getText());\r\n\r\n\t\t\t// Save the old info in the map\r\n\t\t\t// \r\n\t\t\t// selectionList.add(selectedField);\r\n\t\t}\r\n\t}","id":39096,"modified_method":"private void saveChanges() {\r\n\t\tif (selectedField!=null) {\r\n\t\t\t// First grab the info from the dialog...\r\n\t\t\t// \r\n\t\t\tselectedField.setFieldName(wFieldName.getText());\r\n\r\n\t\t\tselectedField.setErrorCode(wErrorCode.getText());\r\n\t\t\tselectedField.setErrorDescription(wErrorDescription.getText());\r\n\r\n\t\t\tselectedField.setDataTypeVerified(wDataTypeVerified.getSelection());\r\n\t\t\tselectedField.setDataType(ValueMeta.getType(wDataType.getText()));\r\n\t\t\tselectedField.setConversionMask(wConversionMask.getText());\r\n\t\t\tselectedField.setDecimalSymbol(wDecimalSymbol.getText());\r\n\t\t\tselectedField.setGroupingSymbol(wGroupingSymbol.getText());\r\n\t\t\t\r\n\t\t\tselectedField.setNullAllowed(wNullAllowed.getSelection());\r\n\t\t\tselectedField.setOnlyNullAllowed(wOnlyNullAllowed.getSelection());\r\n\t\t\tselectedField.setOnlyNumericAllowed(wOnlyNumeric.getSelection());\r\n\t\t\t\r\n\t\t\tselectedField.setMaximumLength(wMaxLength.getText());\r\n\t\t\tselectedField.setMinimumLength(wMinLength.getText());\r\n\t\t\tselectedField.setMaximumValue(wMaxValue.getText());\r\n\t\t\tselectedField.setMinimumValue(wMinValue.getText());\r\n\t\t\t\r\n\t\t\tselectedField.setStartString(wStartStringExpected.getText());\r\n\t\t\tselectedField.setEndString(wEndStringExpected.getText());\r\n\t\t\tselectedField.setStartStringNotAllowed(wStartStringDisallowed.getText());\r\n\t\t\tselectedField.setEndStringNotAllowed(wEndStringDisallowed.getText());\r\n\r\n\t\t\tselectedField.setRegularExpression(wRegExpExpected.getText());\r\n\t\t\tselectedField.setRegularExpressionNotAllowed(wRegExpDisallowed.getText());\r\n\r\n\t\t\tselectedField.setAllowedValues(wAllowedValues.getItems());\r\n\t\t\t\r\n\t\t\tselectedField.setSourcingValues(wSourceValues.getSelection());\r\n\t\t\tselectedField.setSourcingField(wSourceField.getText());\r\n\r\n\t\t\t// Save the old info in the map\r\n\t\t\t// \r\n\t\t\t// selectionList.add(selectedField);\r\n\t\t}\r\n\t}","commit_id":"8809f64eb28bc3f60631072681b015cdd8a1445d","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public WOComponent editMyInfo() {\n        EOEnterpriseObject user = user();\n        EditPageInterface epi = (EditPageInterface) D2W.factory().pageForConfigurationNamed(\"EditMyPeople\", this);\n        epi.setObject(user);\n        epi.setNextPage(context().page());\n        return (WOComponent) epi;\n    }","id":39097,"modified_method":"public WOComponent editMyInfo() {\n        People user = user();\n        EditPageInterface epi = (EditPageInterface) D2W.factory().pageForConfigurationNamed(\"EditMyPeople\", this);\n        EOEditingContext ec = ERXEC.newEditingContext();\n        ec.lock();\n        try {\n            user = (People) user.localInstanceIn(ec);\n            epi.setObject(user);\n            epi.setNextPage(context().page());\n            return (WOComponent) epi;\n      } finally {\n            ec.unlock();\n        }\n      }","commit_id":"4d21dbd3a94d652d81f2c39290d7419530c716d5","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * @return extracts the parameters from the expression as a List\n     */\n    protected List getParameters(GString gstring) {\n        Object[] values = gstring.getValues();\n        List answer = new ArrayList(values.length);\n        for (int i = 0; i < values.length; i++) {\n            if (values[i] != null) {\n                answer.add(values[i]);\n            }\n        }\n        return answer;\n    }","id":39098,"modified_method":"/**\n     * @return extracts the parameters from the expression as a List\n     */\n    protected List getParameters(GString gstring) {\n        return new ArrayList(Arrays.asList(gstring.getValues()));\n    }","commit_id":"f7ae54f45f0c7896d5b4f0ca52cc6cafefa68079","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * Appends the parameters to the given statement\n     */\n    protected void setParameters(List params, PreparedStatement statement) throws SQLException {\n        int i = 1;\n        for (Iterator iter = params.iterator(); iter.hasNext();) {\n            Object value = iter.next();\n            setObject(statement, i++, value);\n        }\n    }","id":39099,"modified_method":"/**\n     * Appends the parameters to the given statement\n     */\n    protected void setParameters(List params, PreparedStatement statement) throws SQLException {\n        int i = 1;\n        for (Iterator iter = params.iterator(); iter.hasNext();) {\n            Object value = iter.next();\n            if (value != null) {\n                setObject(statement, i++, value);\n            }\n        }\n    }","commit_id":"f7ae54f45f0c7896d5b4f0ca52cc6cafefa68079","url":"https://github.com/apache/groovy"},{"original_method":"/**\n\t * @see FormComponent#updateModel()\n\t */\n\tpublic void updateModel()\n\t{\n\t\tObject object = getModelObject();\n\t\tboolean isModelCollection = object instanceof Collection;\n\n\t\t/*\n\t\t * clear the model\n\t\t */\n\t\tif (isModelCollection)\n\t\t{\n\t\t\tmodelChanging();\n\n\t\t\t((Collection)object).clear();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgetModel().setObject(null);\n\t\t}\n\n\t\t/*\n\t\t * the input contains an array of full path of the selected option\n\t\t * components unless nothing was selected in which case the input\n\t\t * contains null\n\t\t */\n\t\tString[] paths = getInputAsArray();\n\n\t\t/*\n\t\t * if the input is null we do not need to do anything since the model\n\t\t * collection has already been cleared\n\t\t */\n\n\t\tif (paths != null && paths.length > 0)\n\t\t{\n\t\t\tif (!isModelCollection && paths.length > 1)\n\t\t\t{\n\t\t\t\tthrow new WicketRuntimeException(\n\t\t\t\t\t\t\"The model of Select component [\"\n\t\t\t\t\t\t\t\t+ getPath()\n\t\t\t\t\t\t\t\t+ \"] is not of type java.util.Collection, but more then one SelectOption component has been selected. Either remove the multiple attribute from the select tag or make the model of the Select component a collection\");\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < paths.length; i++)\n\t\t\t{\n\t\t\t\tString path = paths[i];\n\n\t\t\t\tif (path != null)\n\t\t\t\t{\n\t\t\t\t\t/*\n\t\t\t\t\t * option component path sans select component path =\n\t\t\t\t\t * relative path from group to option since we know the\n\t\t\t\t\t * option is child of select\n\t\t\t\t\t */\n\n\t\t\t\t\tpath = path.substring(getPath().length() + 1);\n\n\t\t\t\t\t// retrieve the selected checkbox component\n\t\t\t\t\tSelectOption option = (SelectOption)get(path);\n\n\t\t\t\t\tif (option == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new WicketRuntimeException(\n\t\t\t\t\t\t\t\t\"submitted http post value [\"\n\t\t\t\t\t\t\t\t\t\t+ paths.toString()\n\t\t\t\t\t\t\t\t\t\t+ \"] for SelectOption component [\"\n\t\t\t\t\t\t\t\t\t\t+ getPath()\n\t\t\t\t\t\t\t\t\t\t+ \"] contains an illegal relative path element [\"\n\t\t\t\t\t\t\t\t\t\t+ path\n\t\t\t\t\t\t\t\t\t\t+ \"] which does not point to an SelectOption component. Due to this the Select component cannot resolve the selected SelectOption component pointed to by the illegal value. A possible reason is that component hierarchy changed between rendering and form submission.\");\n\t\t\t\t\t}\n\n\t\t\t\t\t// assign the value\n\t\t\t\t\tif (isModelCollection)\n\t\t\t\t\t{\n\t\t\t\t\t\t((Collection)object).add(option.getModelObject());\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tsetModelObject(option.getModelObject());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isModelCollection)\n\t\t{\n\t\t\tmodelChanged();\n\t\t}\n\t}","id":39100,"modified_method":"/**\n\t * @see FormComponent#updateModel()\n\t */\n\tpublic void updateModel()\n\t{\n\t\tObject object = getModelObject();\n\t\tboolean isModelCollection = object instanceof Collection;\n\n\t\t/*\n\t\t * clear the model\n\t\t */\n\t\tif (isModelCollection)\n\t\t{\n\t\t\tmodelChanging();\n\n\t\t\t((Collection)object).clear();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tobject = null;\n\t\t}\n\n\t\t/*\n\t\t * the input contains an array of full path of the selected option\n\t\t * components unless nothing was selected in which case the input\n\t\t * contains null\n\t\t */\n\t\tString[] paths = getInputAsArray();\n\n\t\t/*\n\t\t * if the input is null we do not need to do anything since the model\n\t\t * collection has already been cleared\n\t\t */\n\n\t\tif (paths != null && paths.length > 0)\n\t\t{\n\t\t\tif (!isModelCollection && paths.length > 1)\n\t\t\t{\n\t\t\t\tthrow new WicketRuntimeException(\n\t\t\t\t\t\t\"The model of Select component [\"\n\t\t\t\t\t\t\t\t+ getPath()\n\t\t\t\t\t\t\t\t+ \"] is not of type java.util.Collection, but more then one SelectOption component has been selected. Either remove the multiple attribute from the select tag or make the model of the Select component a collection\");\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < paths.length; i++)\n\t\t\t{\n\t\t\t\tString path = paths[i];\n\n\t\t\t\tif (path != null)\n\t\t\t\t{\n\t\t\t\t\t/*\n\t\t\t\t\t * option component path sans select component path =\n\t\t\t\t\t * relative path from group to option since we know the\n\t\t\t\t\t * option is child of select\n\t\t\t\t\t */\n\n\t\t\t\t\tpath = path.substring(getPath().length() + 1);\n\n\t\t\t\t\t// retrieve the selected checkbox component\n\t\t\t\t\tSelectOption option = (SelectOption)get(path);\n\n\t\t\t\t\tif (option == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new WicketRuntimeException(\n\t\t\t\t\t\t\t\t\"submitted http post value [\"\n\t\t\t\t\t\t\t\t\t\t+ paths.toString()\n\t\t\t\t\t\t\t\t\t\t+ \"] for SelectOption component [\"\n\t\t\t\t\t\t\t\t\t\t+ getPath()\n\t\t\t\t\t\t\t\t\t\t+ \"] contains an illegal relative path element [\"\n\t\t\t\t\t\t\t\t\t\t+ path\n\t\t\t\t\t\t\t\t\t\t+ \"] which does not point to an SelectOption component. Due to this the Select component cannot resolve the selected SelectOption component pointed to by the illegal value. A possible reason is that component hierarchy changed between rendering and form submission.\");\n\t\t\t\t\t}\n\n\t\t\t\t\t// assign the value\n\t\t\t\t\tif (isModelCollection)\n\t\t\t\t\t{\n\t\t\t\t\t\t((Collection)object).add(option.getModelObject());\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tobject = option.getModelObject();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isModelCollection)\n\t\t{\n\t\t\tmodelChanged();\n\t\t}\n\n\t\t// force notify of model via setObject()\n\t\tgetModel().setObject(object);\n\t}","commit_id":"3f52b30aee5bbb612e191fefb945b246546fb741","url":"https://github.com/apache/wicket"},{"original_method":"@Override\n  public void setParameterValue(PreparedStatement statement, int index, Object value) throws SQLException {\n    if (value == null) {\n      statement.setNull(index, id);\n    } else {\n      statement.setObject(index, value, id);\n    }\n  }","id":39101,"modified_method":"@Override\n  public void setParameterValue(PreparedStatement statement, int index, Object value) throws SQLException {\n    if (value == null) {\n      statement.setNull(index, id);\n    } else {\n      if (value instanceof InputStream) {\n        try {\n          value = toByteArray((InputStream) value);\n        } catch (IOException e) {\n          throw new MuleRuntimeException(createStaticMessage(\"Could not consume inputStream in parameter of index \" + index), e);\n        }\n      }\n      statement.setObject(index, value, id);\n    }\n  }","commit_id":"bc655aab9e6ae44476dd8e6b4cde09ec28420dc1","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n\t * @see FormComponent#updateModel()\n\t */\n\tpublic void updateModel()\n\t{\n\t\tObject object = getModelObject();\n\t\tboolean isModelCollection = object instanceof Collection;\n\n\t\t/*\n\t\t * clear the model\n\t\t */\n\t\tif (isModelCollection)\n\t\t{\n\t\t\tmodelChanging();\n\n\t\t\t((Collection)object).clear();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tobject = null;\n\t\t}\n\n\t\t/*\n\t\t * the input contains an array of full path of the selected option\n\t\t * components unless nothing was selected in which case the input\n\t\t * contains null\n\t\t */\n\t\tString[] paths = getInputAsArray();\n\n\t\t/*\n\t\t * if the input is null we do not need to do anything since the model\n\t\t * collection has already been cleared\n\t\t */\n\n\t\tif (paths != null && paths.length > 0)\n\t\t{\n\t\t\tif (!isModelCollection && paths.length > 1)\n\t\t\t{\n\t\t\t\tthrow new WicketRuntimeException(\n\t\t\t\t\t\t\"The model of Select component [\"\n\t\t\t\t\t\t\t\t+ getPath()\n\t\t\t\t\t\t\t\t+ \"] is not of type java.util.Collection, but more then one SelectOption component has been selected. Either remove the multiple attribute from the select tag or make the model of the Select component a collection\");\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < paths.length; i++)\n\t\t\t{\n\t\t\t\tString path = paths[i];\n\n\t\t\t\tif (path != null)\n\t\t\t\t{\n\t\t\t\t\t/*\n\t\t\t\t\t * option component path sans select component path =\n\t\t\t\t\t * relative path from group to option since we know the\n\t\t\t\t\t * option is child of select\n\t\t\t\t\t */\n\n\t\t\t\t\tpath = path.substring(getPath().length() + 1);\n\n\t\t\t\t\t// retrieve the selected checkbox component\n\t\t\t\t\tSelectOption option = (SelectOption)get(path);\n\n\t\t\t\t\tif (option == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new WicketRuntimeException(\n\t\t\t\t\t\t\t\t\"submitted http post value [\"\n\t\t\t\t\t\t\t\t\t\t+ paths.toString()\n\t\t\t\t\t\t\t\t\t\t+ \"] for SelectOption component [\"\n\t\t\t\t\t\t\t\t\t\t+ getPath()\n\t\t\t\t\t\t\t\t\t\t+ \"] contains an illegal relative path element [\"\n\t\t\t\t\t\t\t\t\t\t+ path\n\t\t\t\t\t\t\t\t\t\t+ \"] which does not point to an SelectOption component. Due to this the Select component cannot resolve the selected SelectOption component pointed to by the illegal value. A possible reason is that component hierarchy changed between rendering and form submission.\");\n\t\t\t\t\t}\n\n\t\t\t\t\t// assign the value\n\t\t\t\t\tif (isModelCollection)\n\t\t\t\t\t{\n\t\t\t\t\t\t((Collection)object).add(option.getModelObject());\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tobject = option.getModelObject();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isModelCollection)\n\t\t{\n\t\t\tmodelChanged();\n\t\t}\n\n\t\t// force notify of model via setObject()\n\t\tgetModel().setObject(object);\n\t}","id":39102,"modified_method":"/**\n\t * @see FormComponent#updateModel()\n\t */\n\tpublic void updateModel()\n\t{\n\t\tObject object = getModelObject();\n\t\tboolean isModelCollection = object instanceof Collection;\n\n\t\tList converted = (List)getConvertedInput();\n\t\tif (!isModelCollection && converted.size() > 1)\n\t\t{\n\t\t\tthrow new WicketRuntimeException(\n\t\t\t\t\t\"The model of Select component [\"\n\t\t\t\t\t\t\t+ getPath()\n\t\t\t\t\t\t\t+ \"] is not of type java.util.Collection, but more then one SelectOption component has been selected. Either remove the multiple attribute from the select tag or make the model of the Select component a collection\");\n\t\t}\n\n\t\t/*\n\t\t * update the model\n\t\t */\n\t\tif (isModelCollection)\n\t\t{\n\t\t\tCollection modelCollection = (Collection)object;\n\t\t\tmodelChanging();\n\t\t\tmodelCollection.clear();\n\t\t\tif (converted != null)\n\t\t\t{\n\t\t\t\tmodelCollection.addAll(converted);\n\t\t\t}\n\t\t\tmodelChanged();\n\t\t\t// force notify of model update via setObject()\n\t\t\tgetModel().setObject(modelCollection);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tobject = null;\n\t\t\tif (converted != null)\n\t\t\t{\n\t\t\t\tobject = converted.get(0);\n\t\t\t}\n\t\t\tsetModelObject(object);\n\t\t}\n\t}","commit_id":"e3ba68903102d8ebd6a7449c95ef318ab8093afe","url":"https://github.com/apache/wicket"},{"original_method":"@Test\n  public void testNamespaceUserGrant() throws Exception {\n    AccessTestAction getAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE.getTableName());) {\n          return t.get(new Get(TEST_ROW));\n        }\n      }\n    };\n\n    String namespace = TEST_TABLE.getTableName().getNamespaceAsString();\n\n    // Grant namespace READ to USER_NONE, this should supersede any table permissions\n    grantOnNamespace(TEST_UTIL, USER_NONE.getShortName(), namespace, Permission.Action.READ);\n    // Now USER_NONE should be able to read\n    verifyAllowed(getAction, USER_NONE);\n\n    // Revoke namespace READ to USER_NONE\n    revokeFromNamespace(TEST_UTIL, USER_NONE.getShortName(), namespace, Permission.Action.READ);\n    verifyDenied(getAction, USER_NONE);\n  }","id":39103,"modified_method":"@Test\n  public void testNamespaceUserGrant() throws Exception {\n    AccessTestAction getAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE);) {\n          return t.get(new Get(TEST_ROW));\n        }\n      }\n    };\n\n    String namespace = TEST_TABLE.getNamespaceAsString();\n\n    // Grant namespace READ to USER_NONE, this should supersede any table permissions\n    grantOnNamespace(TEST_UTIL, USER_NONE.getShortName(), namespace, Permission.Action.READ);\n    // Now USER_NONE should be able to read\n    verifyAllowed(getAction, USER_NONE);\n\n    // Revoke namespace READ to USER_NONE\n    revokeFromNamespace(TEST_UTIL, USER_NONE.getShortName(), namespace, Permission.Action.READ);\n    verifyDenied(getAction, USER_NONE);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testTableDelete() throws Exception {\n    AccessTestAction deleteTable = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER\n            .preDeleteTable(ObserverContext.createAndPrepare(CP_ENV, null), TEST_TABLE.getTableName());\n        return null;\n      }\n    };\n\n    verifyAllowed(deleteTable, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER);\n    verifyDenied(deleteTable, USER_RW, USER_RO, USER_NONE);\n  }","id":39104,"modified_method":"@Test\n  public void testTableDelete() throws Exception {\n    AccessTestAction deleteTable = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER\n            .preDeleteTable(ObserverContext.createAndPrepare(CP_ENV, null), TEST_TABLE);\n        return null;\n      }\n    };\n\n    verifyAllowed(deleteTable, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER);\n    verifyDenied(deleteTable, USER_RW, USER_RO, USER_NONE);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testReservedCellTags() throws Exception {\n    AccessTestAction putWithReservedTag = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE.getTableName());) {\n          KeyValue kv = new KeyValue(TEST_ROW, TEST_FAMILY, TEST_QUALIFIER,\n            HConstants.LATEST_TIMESTAMP, HConstants.EMPTY_BYTE_ARRAY,\n            new Tag[] { new Tag(AccessControlLists.ACL_TAG_TYPE,\n              ProtobufUtil.toUsersAndPermissions(USER_OWNER.getShortName(),\n                new Permission(Permission.Action.READ)).toByteArray()) });\n          t.put(new Put(TEST_ROW).add(kv));\n        }\n        return null;\n      }\n    };\n\n    // Current user is superuser\n    verifyAllowed(putWithReservedTag, User.getCurrent());\n    // No other user should be allowed\n    verifyDenied(putWithReservedTag, USER_OWNER, USER_ADMIN, USER_CREATE, USER_RW, USER_RO);\n  }","id":39105,"modified_method":"@Test\n  public void testReservedCellTags() throws Exception {\n    AccessTestAction putWithReservedTag = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE);) {\n          KeyValue kv = new KeyValue(TEST_ROW, TEST_FAMILY, TEST_QUALIFIER,\n            HConstants.LATEST_TIMESTAMP, HConstants.EMPTY_BYTE_ARRAY,\n            new Tag[] { new Tag(AccessControlLists.ACL_TAG_TYPE,\n              ProtobufUtil.toUsersAndPermissions(USER_OWNER.getShortName(),\n                new Permission(Permission.Action.READ)).toByteArray()) });\n          t.put(new Put(TEST_ROW).add(kv));\n        }\n        return null;\n      }\n    };\n\n    // Current user is superuser\n    verifyAllowed(putWithReservedTag, User.getCurrent());\n    // No other user should be allowed\n    verifyDenied(putWithReservedTag, USER_OWNER, USER_ADMIN, USER_CREATE, USER_RW, USER_RO);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testTableModify() throws Exception {\n    AccessTestAction modifyTable = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        HTableDescriptor htd = new HTableDescriptor(TEST_TABLE.getTableName());\n        htd.addFamily(new HColumnDescriptor(TEST_FAMILY));\n        htd.addFamily(new HColumnDescriptor(\"fam_\" + User.getCurrent().getShortName()));\n        ACCESS_CONTROLLER.preModifyTable(ObserverContext.createAndPrepare(CP_ENV, null),\n          TEST_TABLE.getTableName(), htd);\n        return null;\n      }\n    };\n\n    verifyAllowed(modifyTable, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER);\n    verifyDenied(modifyTable, USER_RW, USER_RO, USER_NONE);\n  }","id":39106,"modified_method":"@Test\n  public void testTableModify() throws Exception {\n    AccessTestAction modifyTable = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        HTableDescriptor htd = new HTableDescriptor(TEST_TABLE);\n        htd.addFamily(new HColumnDescriptor(TEST_FAMILY));\n        htd.addFamily(new HColumnDescriptor(\"fam_\" + User.getCurrent().getShortName()));\n        ACCESS_CONTROLLER.preModifyTable(ObserverContext.createAndPrepare(CP_ENV, null),\n          TEST_TABLE, htd);\n        return null;\n      }\n    };\n\n    verifyAllowed(modifyTable, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER);\n    verifyDenied(modifyTable, USER_RW, USER_RO, USER_NONE);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testCoprocessorExec() throws Exception {\n    // Set up our ping endpoint service on all regions of our test table\n    for (JVMClusterUtil.RegionServerThread thread:\n        TEST_UTIL.getMiniHBaseCluster().getRegionServerThreads()) {\n      HRegionServer rs = thread.getRegionServer();\n      for (Region region: rs.getOnlineRegions(TEST_TABLE.getTableName())) {\n        region.getCoprocessorHost().load(PingCoprocessor.class,\n          Coprocessor.PRIORITY_USER, conf);\n      }\n    }\n\n    // Create users for testing, and grant EXEC privileges on our test table\n    // only to user A\n    User userA = User.createUserForTesting(conf, \"UserA\", new String[0]);\n    User userB = User.createUserForTesting(conf, \"UserB\", new String[0]);\n\n    grantOnTable(TEST_UTIL, userA.getShortName(),\n      TEST_TABLE.getTableName(), null, null,\n      Permission.Action.EXEC);\n\n    // Create an action for invoking our test endpoint\n    AccessTestAction execEndpointAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE.getTableName());) {\n          BlockingRpcChannel service = t.coprocessorService(HConstants.EMPTY_BYTE_ARRAY);\n          PingCoprocessor.newBlockingStub(service).noop(null, NoopRequest.newBuilder().build());\n        }\n        return null;\n      }\n    };\n\n    String namespace = TEST_TABLE.getTableName().getNamespaceAsString();\n    // Now grant EXEC to the entire namespace to user B\n    grantOnNamespace(TEST_UTIL, userB.getShortName(), namespace, Permission.Action.EXEC);\n    // User B should now be allowed also\n    verifyAllowed(execEndpointAction, userA, userB);\n\n    revokeFromNamespace(TEST_UTIL, userB.getShortName(), namespace, Permission.Action.EXEC);\n    // Verify that EXEC permission is checked correctly\n    verifyDenied(execEndpointAction, userB);\n    verifyAllowed(execEndpointAction, userA);\n  }","id":39107,"modified_method":"@Test\n  public void testCoprocessorExec() throws Exception {\n    // Set up our ping endpoint service on all regions of our test table\n    for (JVMClusterUtil.RegionServerThread thread:\n        TEST_UTIL.getMiniHBaseCluster().getRegionServerThreads()) {\n      HRegionServer rs = thread.getRegionServer();\n      for (Region region: rs.getOnlineRegions(TEST_TABLE)) {\n        region.getCoprocessorHost().load(PingCoprocessor.class,\n          Coprocessor.PRIORITY_USER, conf);\n      }\n    }\n\n    // Create users for testing, and grant EXEC privileges on our test table\n    // only to user A\n    User userA = User.createUserForTesting(conf, \"UserA\", new String[0]);\n    User userB = User.createUserForTesting(conf, \"UserB\", new String[0]);\n\n    grantOnTable(TEST_UTIL, userA.getShortName(),\n      TEST_TABLE, null, null,\n      Permission.Action.EXEC);\n    try {\n      // Create an action for invoking our test endpoint\n      AccessTestAction execEndpointAction = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          try (Connection conn = ConnectionFactory.createConnection(conf);\n              Table t = conn.getTable(TEST_TABLE);) {\n            BlockingRpcChannel service = t.coprocessorService(HConstants.EMPTY_BYTE_ARRAY);\n            PingCoprocessor.newBlockingStub(service).noop(null, NoopRequest.newBuilder().build());\n          }\n          return null;\n        }\n      };\n\n      String namespace = TEST_TABLE.getNamespaceAsString();\n      // Now grant EXEC to the entire namespace to user B\n      grantOnNamespace(TEST_UTIL, userB.getShortName(), namespace, Permission.Action.EXEC);\n      // User B should now be allowed also\n      verifyAllowed(execEndpointAction, userA, userB);\n\n      revokeFromNamespace(TEST_UTIL, userB.getShortName(), namespace, Permission.Action.EXEC);\n      // Verify that EXEC permission is checked correctly\n      verifyDenied(execEndpointAction, userB);\n      verifyAllowed(execEndpointAction, userA);\n    } finally {\n      // Cleanup, revoke the userA privileges\n      revokeFromTable(TEST_UTIL, userA.getShortName(), TEST_TABLE, null, null,\n        Permission.Action.EXEC);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testSnapshot() throws Exception {\n    Admin admin = TEST_UTIL.getHBaseAdmin();\n    final HTableDescriptor htd = admin.getTableDescriptor(TEST_TABLE.getTableName());\n    SnapshotDescription.Builder builder = SnapshotDescription.newBuilder();\n    builder.setName(TEST_TABLE.getTableName().getNameAsString() + \"-snapshot\");\n    builder.setTable(TEST_TABLE.getTableName().getNameAsString());\n    final SnapshotDescription snapshot = builder.build();\n    AccessTestAction snapshotAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          snapshot, htd);\n        return null;\n      }\n    };\n\n    AccessTestAction deleteAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preDeleteSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          snapshot);\n        return null;\n      }\n    };\n\n    AccessTestAction restoreAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preRestoreSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          snapshot, htd);\n        return null;\n      }\n    };\n\n    AccessTestAction cloneAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preCloneSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          null, null);\n        return null;\n      }\n    };\n\n    verifyAllowed(snapshotAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(snapshotAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(cloneAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(deleteAction, USER_CREATE, USER_RW, USER_RO, USER_NONE, USER_OWNER);\n\n    verifyAllowed(restoreAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(restoreAction, USER_CREATE, USER_RW, USER_RO, USER_NONE, USER_OWNER);\n\n    verifyAllowed(deleteAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(cloneAction, USER_CREATE, USER_RW, USER_RO, USER_NONE, USER_OWNER);\n  }","id":39108,"modified_method":"@Test\n  public void testSnapshot() throws Exception {\n    Admin admin = TEST_UTIL.getHBaseAdmin();\n    final HTableDescriptor htd = admin.getTableDescriptor(TEST_TABLE);\n    SnapshotDescription.Builder builder = SnapshotDescription.newBuilder();\n    builder.setName(TEST_TABLE.getNameAsString() + \"-snapshot\");\n    builder.setTable(TEST_TABLE.getNameAsString());\n    final SnapshotDescription snapshot = builder.build();\n    AccessTestAction snapshotAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          snapshot, htd);\n        return null;\n      }\n    };\n\n    AccessTestAction deleteAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preDeleteSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          snapshot);\n        return null;\n      }\n    };\n\n    AccessTestAction restoreAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preRestoreSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          snapshot, htd);\n        return null;\n      }\n    };\n\n    AccessTestAction cloneAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preCloneSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          null, null);\n        return null;\n      }\n    };\n\n    verifyAllowed(snapshotAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(snapshotAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(cloneAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(deleteAction, USER_CREATE, USER_RW, USER_RO, USER_NONE, USER_OWNER);\n\n    verifyAllowed(restoreAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(restoreAction, USER_CREATE, USER_RW, USER_RO, USER_NONE, USER_OWNER);\n\n    verifyAllowed(deleteAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(cloneAction, USER_CREATE, USER_RW, USER_RO, USER_NONE, USER_OWNER);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testReadWrite() throws Exception {\n    // action for checkAndDelete\n    AccessTestAction checkAndDeleteAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Delete d = new Delete(TEST_ROW);\n        d.deleteFamily(TEST_FAMILY);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE.getTableName());) {\n          t.checkAndDelete(TEST_ROW, TEST_FAMILY, TEST_QUALIFIER,\n              Bytes.toBytes(\"test_value\"), d);\n        }\n        return null;\n      }\n    };\n    verifyReadWrite(checkAndDeleteAction);\n\n    // action for checkAndPut()\n    AccessTestAction checkAndPut = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Put p = new Put(TEST_ROW);\n        p.add(TEST_FAMILY, TEST_QUALIFIER, Bytes.toBytes(1));\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE.getTableName());) {\n          t.checkAndPut(TEST_ROW, TEST_FAMILY, TEST_QUALIFIER,\n              Bytes.toBytes(\"test_value\"), p);\n        }\n        return null;\n      }\n    };\n    verifyReadWrite(checkAndPut);\n  }","id":39109,"modified_method":"@Test\n  public void testReadWrite() throws Exception {\n    // action for checkAndDelete\n    AccessTestAction checkAndDeleteAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Delete d = new Delete(TEST_ROW);\n        d.deleteFamily(TEST_FAMILY);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE);) {\n          t.checkAndDelete(TEST_ROW, TEST_FAMILY, TEST_QUALIFIER,\n              Bytes.toBytes(\"test_value\"), d);\n        }\n        return null;\n      }\n    };\n    verifyReadWrite(checkAndDeleteAction);\n\n    // action for checkAndPut()\n    AccessTestAction checkAndPut = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Put p = new Put(TEST_ROW);\n        p.add(TEST_FAMILY, TEST_QUALIFIER, Bytes.toBytes(1));\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE);) {\n          t.checkAndPut(TEST_ROW, TEST_FAMILY, TEST_QUALIFIER,\n              Bytes.toBytes(\"test_value\"), p);\n        }\n        return null;\n      }\n    };\n    verifyReadWrite(checkAndPut);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testMergeRegions() throws Exception {\n    final List<HRegion> regions = TEST_UTIL.getHBaseCluster().findRegionsForTable(TEST_TABLE.getTableName());\n    assertTrue(\"not enough regions: \" + regions.size(), regions.size() >= 2);\n\n    AccessTestAction action = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preMerge(\n            ObserverContext.createAndPrepare(RSCP_ENV, null),\n            regions.get(0),regions.get(1));\n        return null;\n      }\n    };\n\n    verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(action, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n  }","id":39110,"modified_method":"@Test\n  public void testMergeRegions() throws Exception {\n    final TableName tname = TableName.valueOf(\"testMergeRegions\");\n    createTestTable(tname);\n    try {\n      final List<HRegion> regions = TEST_UTIL.getHBaseCluster().findRegionsForTable(tname);\n      assertTrue(\"not enough regions: \" + regions.size(), regions.size() >= 2);\n\n      AccessTestAction action = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          ACCESS_CONTROLLER.preMerge(ObserverContext.createAndPrepare(RSCP_ENV, null),\n            regions.get(0), regions.get(1));\n          return null;\n        }\n      };\n\n      verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_OWNER);\n      verifyDenied(action, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n    } finally {\n      deleteTable(TEST_UTIL, tname);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testTableEnable() throws Exception {\n    AccessTestAction enableTable = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER\n            .preEnableTable(ObserverContext.createAndPrepare(CP_ENV, null), TEST_TABLE.getTableName());\n        return null;\n      }\n    };\n\n    verifyAllowed(enableTable, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER);\n    verifyDenied(enableTable, USER_RW, USER_RO, USER_NONE);\n  }","id":39111,"modified_method":"@Test\n  public void testTableEnable() throws Exception {\n    AccessTestAction enableTable = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER\n            .preEnableTable(ObserverContext.createAndPrepare(CP_ENV, null), TEST_TABLE);\n        return null;\n      }\n    };\n\n    verifyAllowed(enableTable, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER);\n    verifyDenied(enableTable, USER_RW, USER_RO, USER_NONE);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testTableTruncate() throws Exception {\n    AccessTestAction truncateTable = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER\n            .preTruncateTable(ObserverContext.createAndPrepare(CP_ENV, null),\n              TEST_TABLE.getTableName());\n        return null;\n      }\n    };\n\n    verifyAllowed(truncateTable, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER);\n    verifyDenied(truncateTable, USER_RW, USER_RO, USER_NONE);\n  }","id":39112,"modified_method":"@Test\n  public void testTableTruncate() throws Exception {\n    AccessTestAction truncateTable = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER\n            .preTruncateTable(ObserverContext.createAndPrepare(CP_ENV, null),\n              TEST_TABLE);\n        return null;\n      }\n    };\n\n    verifyAllowed(truncateTable, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER);\n    verifyDenied(truncateTable, USER_RW, USER_RO, USER_NONE);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testGlobalAuthorizationForNewRegisteredRS() throws Exception {\n    LOG.debug(\"Test for global authorization for a new registered RegionServer.\");\n    MiniHBaseCluster hbaseCluster = TEST_UTIL.getHBaseCluster();\n\n    // Since each RegionServer running on different user, add global\n    // permissions for the new user.\n    String currentUser = User.getCurrent().getShortName();\n    String activeUserForNewRs = currentUser + \".hfs.\" +\n      hbaseCluster.getLiveRegionServerThreads().size();\n    grantGlobal(TEST_UTIL, activeUserForNewRs,\n      Permission.Action.ADMIN, Permission.Action.CREATE, Permission.Action.READ,\n        Permission.Action.WRITE);\n\n    final Admin admin = TEST_UTIL.getHBaseAdmin();\n    HTableDescriptor htd = new HTableDescriptor(TEST_TABLE2);\n    htd.addFamily(new HColumnDescriptor(TEST_FAMILY));\n    createTable(TEST_UTIL, htd);\n\n    // Starting a new RegionServer.\n    JVMClusterUtil.RegionServerThread newRsThread = hbaseCluster\n        .startRegionServer();\n    final HRegionServer newRs = newRsThread.getRegionServer();\n\n    // Move region to the new RegionServer.\n    List<HRegionLocation> regions;\n    try (RegionLocator locator = systemUserConnection.getRegionLocator(TEST_TABLE2)) {\n      regions = locator.getAllRegionLocations();\n    }\n    HRegionLocation location = regions.get(0);\n    final HRegionInfo hri = location.getRegionInfo();\n    final ServerName server = location.getServerName();\n    try (HTable table = (HTable) systemUserConnection.getTable(TEST_TABLE2)) {\n      AccessTestAction moveAction = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          admin.move(hri.getEncodedNameAsBytes(),\n            Bytes.toBytes(newRs.getServerName().getServerName()));\n          return null;\n        }\n      };\n      SUPERUSER.runAs(moveAction);\n\n      final int RETRIES_LIMIT = 10;\n      int retries = 0;\n      while (newRs.getOnlineRegions(TEST_TABLE2).size() < 1 && retries < RETRIES_LIMIT) {\n        LOG.debug(\"Waiting for region to be opened. Already retried \" + retries\n            + \" times.\");\n        try {\n          Thread.sleep(1000);\n        } catch (InterruptedException e) {\n        }\n        retries++;\n        if (retries == RETRIES_LIMIT - 1) {\n          fail(\"Retry exhaust for waiting region to be opened.\");\n        }\n      }\n      // Verify write permission for user \"admin2\" who has the global\n      // permissions.\n      AccessTestAction putAction = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Put put = new Put(Bytes.toBytes(\"test\"));\n          put.add(TEST_FAMILY, Bytes.toBytes(\"qual\"), Bytes.toBytes(\"value\"));\n          table.put(put);\n          return null;\n        }\n      };\n      USER_ADMIN.runAs(putAction);\n    }\n  }","id":39113,"modified_method":"@Test\n  public void testGlobalAuthorizationForNewRegisteredRS() throws Exception {\n    LOG.debug(\"Test for global authorization for a new registered RegionServer.\");\n    MiniHBaseCluster hbaseCluster = TEST_UTIL.getHBaseCluster();\n\n    final Admin admin = TEST_UTIL.getHBaseAdmin();\n    HTableDescriptor htd = new HTableDescriptor(TEST_TABLE2);\n    htd.addFamily(new HColumnDescriptor(TEST_FAMILY));\n    createTable(TEST_UTIL, htd);\n\n    // Starting a new RegionServer.\n    JVMClusterUtil.RegionServerThread newRsThread = hbaseCluster\n        .startRegionServer();\n    final HRegionServer newRs = newRsThread.getRegionServer();\n\n    // Move region to the new RegionServer.\n    List<HRegionLocation> regions;\n    try (RegionLocator locator = systemUserConnection.getRegionLocator(TEST_TABLE2)) {\n      regions = locator.getAllRegionLocations();\n    }\n    HRegionLocation location = regions.get(0);\n    final HRegionInfo hri = location.getRegionInfo();\n    final ServerName server = location.getServerName();\n    try (HTable table = (HTable) systemUserConnection.getTable(TEST_TABLE2)) {\n      AccessTestAction moveAction = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          admin.move(hri.getEncodedNameAsBytes(),\n            Bytes.toBytes(newRs.getServerName().getServerName()));\n          return null;\n        }\n      };\n      SUPERUSER.runAs(moveAction);\n\n      final int RETRIES_LIMIT = 10;\n      int retries = 0;\n      while (newRs.getOnlineRegions(TEST_TABLE2).size() < 1 && retries < RETRIES_LIMIT) {\n        LOG.debug(\"Waiting for region to be opened. Already retried \" + retries\n            + \" times.\");\n        try {\n          Thread.sleep(1000);\n        } catch (InterruptedException e) {\n        }\n        retries++;\n        if (retries == RETRIES_LIMIT - 1) {\n          fail(\"Retry exhaust for waiting region to be opened.\");\n        }\n      }\n      // Verify write permission for user \"admin2\" who has the global\n      // permissions.\n      AccessTestAction putAction = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Put put = new Put(Bytes.toBytes(\"test\"));\n          put.add(TEST_FAMILY, Bytes.toBytes(\"qual\"), Bytes.toBytes(\"value\"));\n          table.put(put);\n          return null;\n        }\n      };\n      USER_ADMIN.runAs(putAction);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@AfterClass\n  public static void tearDownAfterClass() throws Exception {\n    TEST_UTIL.shutdownMiniCluster();\n  }","id":39114,"modified_method":"@AfterClass\n  public static void tearDownAfterClass() throws Exception {\n    cleanUp();\n    TEST_UTIL.shutdownMiniCluster();\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testAccessControlClientUserPerms() throws Exception {\n    // adding default prefix explicitly as it is not included in the table name.\n    assertEquals(NamespaceDescriptor.DEFAULT_NAMESPACE_NAME_STR,\n                 TEST_TABLE.getTableName().getNamespaceAsString());\n    final String regex = NamespaceDescriptor.DEFAULT_NAMESPACE_NAME_STR +\n      TableName.NAMESPACE_DELIM + TEST_TABLE.getTableName().getNameAsString();\n    User testUserPerms = User.createUserForTesting(conf, \"testUserPerms\", new String[0]);\n    assertEquals(0, testUserPerms.runAs(getPrivilegedAction(regex)).size());\n    // Grant TABLE ADMIN privs to testUserPerms\n    grantOnTable(TEST_UTIL, testUserPerms.getShortName(), TEST_TABLE.getTableName(), null,\n      null, Action.ADMIN);\n    List<UserPermission> perms = testUserPerms.runAs(getPrivilegedAction(regex));\n    assertNotNull(perms);\n    // USER_ADMIN, USER_CREATE, USER_RW, USER_RO, testUserPerms, USER_ADMIN_CF has row each.\n    assertEquals(6, perms.size());\n  }","id":39115,"modified_method":"@Test\n  public void testAccessControlClientUserPerms() throws Exception {\n    TableName tname = TableName.valueOf(\"testAccessControlClientUserPerms\");\n    createTestTable(tname);\n    try {\n      final String regex = tname.getNameWithNamespaceInclAsString();\n      User testUserPerms = User.createUserForTesting(conf, \"testUserPerms\", new String[0]);\n      assertEquals(0, testUserPerms.runAs(getPrivilegedAction(regex)).size());\n      // Grant TABLE ADMIN privs to testUserPerms\n      grantOnTable(TEST_UTIL, testUserPerms.getShortName(), tname, null, null, Action.ADMIN);\n      List<UserPermission> perms = testUserPerms.runAs(getPrivilegedAction(regex));\n      assertNotNull(perms);\n      // Superuser, testUserPerms\n      assertEquals(2, perms.size());\n    } finally {\n      deleteTable(TEST_UTIL, tname);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testBulkLoad() throws Exception {\n    FileSystem fs = TEST_UTIL.getTestFileSystem();\n    final Path dir = TEST_UTIL.getDataTestDirOnTestFS(\"testBulkLoad\");\n    fs.mkdirs(dir);\n    //need to make it globally writable\n    //so users creating HFiles have write permissions\n    fs.setPermission(dir, FsPermission.valueOf(\"-rwxrwxrwx\"));\n\n    AccessTestAction bulkLoadAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        int numRows = 3;\n\n        //Making the assumption that the test table won't split between the range\n        byte[][][] hfileRanges = {{{(byte)0}, {(byte)9}}};\n\n        Path bulkLoadBasePath = new Path(dir, new Path(User.getCurrent().getName()));\n        new BulkLoadHelper(bulkLoadBasePath)\n            .bulkLoadHFile(TEST_TABLE.getTableName(), TEST_FAMILY, TEST_QUALIFIER, hfileRanges, numRows);\n\n        return null;\n      }\n    };\n\n    // User performing bulk loads must have privilege to read table metadata\n    // (ADMIN or CREATE)\n    verifyAllowed(bulkLoadAction, SUPERUSER, USER_ADMIN, USER_OWNER, USER_CREATE);\n    verifyDenied(bulkLoadAction, USER_RW, USER_NONE, USER_RO);\n\n    // Reinit after the bulk upload\n    TEST_UTIL.getHBaseAdmin().disableTable(TEST_TABLE.getTableName());\n    TEST_UTIL.getHBaseAdmin().enableTable(TEST_TABLE.getTableName());\n  }","id":39116,"modified_method":"@Test\n  public void testBulkLoad() throws Exception {\n    try {\n      FileSystem fs = TEST_UTIL.getTestFileSystem();\n      final Path dir = TEST_UTIL.getDataTestDirOnTestFS(\"testBulkLoad\");\n      fs.mkdirs(dir);\n      // need to make it globally writable\n      // so users creating HFiles have write permissions\n      fs.setPermission(dir, FsPermission.valueOf(\"-rwxrwxrwx\"));\n\n      AccessTestAction bulkLoadAction = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          int numRows = 3;\n\n          // Making the assumption that the test table won't split between the range\n          byte[][][] hfileRanges = { { { (byte) 0 }, { (byte) 9 } } };\n\n          Path bulkLoadBasePath = new Path(dir, new Path(User.getCurrent().getName()));\n          new BulkLoadHelper(bulkLoadBasePath).bulkLoadHFile(TEST_TABLE, TEST_FAMILY,\n            TEST_QUALIFIER, hfileRanges, numRows);\n\n          return null;\n        }\n      };\n\n      // User performing bulk loads must have privilege to read table metadata\n      // (ADMIN or CREATE)\n      verifyAllowed(bulkLoadAction, SUPERUSER, USER_ADMIN, USER_OWNER, USER_CREATE);\n      verifyDenied(bulkLoadAction, USER_RW, USER_NONE, USER_RO);\n    } finally {\n      // Reinit after the bulk upload\n      TEST_UTIL.getHBaseAdmin().disableTable(TEST_TABLE);\n      TEST_UTIL.getHBaseAdmin().enableTable(TEST_TABLE);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testPostGrantRevokeAtQualifierLevel() throws Exception {\n    final TableName tableName =\n        TableName.valueOf(\"testGrantRevokeAtQualifierLevel\");\n    final byte[] family1 = Bytes.toBytes(\"f1\");\n    final byte[] family2 = Bytes.toBytes(\"f2\");\n    final byte[] qualifier = Bytes.toBytes(\"q\");\n\n    // create table\n    Admin admin = TEST_UTIL.getHBaseAdmin();\n    if (admin.tableExists(tableName)) {\n      deleteTable(TEST_UTIL, tableName);\n    }\n    HTableDescriptor htd = new HTableDescriptor(tableName);\n    htd.addFamily(new HColumnDescriptor(family1));\n    htd.addFamily(new HColumnDescriptor(family2));\n    createTable(TEST_UTIL, htd);\n\n    // create temp users\n    User user = User.createUserForTesting(TEST_UTIL.getConfiguration(), \"user\", new String[0]);\n\n    AccessTestAction getQualifierAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Get g = new Get(TEST_ROW);\n        g.addColumn(family1, qualifier);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(tableName)) {\n          t.get(g);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction putQualifierAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Put p = new Put(TEST_ROW);\n        p.add(family1, qualifier, Bytes.toBytes(\"v1\"));\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(tableName)) {\n          t.put(p);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction deleteQualifierAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Delete d = new Delete(TEST_ROW);\n        d.deleteColumn(family1, qualifier);\n        // d.deleteFamily(family1);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(tableName)) {\n          t.delete(d);\n        }\n        return null;\n      }\n    };\n\n    revokeFromTable(TEST_UTIL, user.getShortName(), tableName, family1, null);\n\n    verifyDenied(user, getQualifierAction);\n    verifyDenied(user, putQualifierAction);\n    verifyDenied(user, deleteQualifierAction);\n\n    grantOnTable(TEST_UTIL, user.getShortName(),\n      tableName, family1, qualifier,\n      Permission.Action.READ);\n\n    verifyAllowed(user, getQualifierAction);\n    verifyDenied(user, putQualifierAction);\n    verifyDenied(user, deleteQualifierAction);\n\n    // only grant write permission\n    // TODO: comment this portion after HBASE-3583\n    grantOnTable(TEST_UTIL, user.getShortName(),\n      tableName, family1, qualifier,\n      Permission.Action.WRITE);\n\n    verifyDenied(user, getQualifierAction);\n    verifyAllowed(user, putQualifierAction);\n    verifyAllowed(user, deleteQualifierAction);\n\n    // grant both read and write permission\n    grantOnTable(TEST_UTIL, user.getShortName(),\n      tableName, family1, qualifier,\n      Permission.Action.READ, Permission.Action.WRITE);\n\n    verifyAllowed(user, getQualifierAction);\n    verifyAllowed(user, putQualifierAction);\n    verifyAllowed(user, deleteQualifierAction);\n\n    // revoke family level permission won't impact column level\n    revokeFromTable(TEST_UTIL, user.getShortName(),\n      tableName, family1, qualifier);\n\n    verifyDenied(user, getQualifierAction);\n    verifyDenied(user, putQualifierAction);\n    verifyDenied(user, deleteQualifierAction);\n\n    // delete table\n    deleteTable(TEST_UTIL, tableName);\n  }","id":39117,"modified_method":"@Test\n  public void testPostGrantRevokeAtQualifierLevel() throws Exception {\n    final TableName tableName =\n        TableName.valueOf(\"testGrantRevokeAtQualifierLevel\");\n    final byte[] family1 = Bytes.toBytes(\"f1\");\n    final byte[] family2 = Bytes.toBytes(\"f2\");\n    final byte[] qualifier = Bytes.toBytes(\"q\");\n\n    // create table\n    Admin admin = TEST_UTIL.getHBaseAdmin();\n    if (admin.tableExists(tableName)) {\n      deleteTable(TEST_UTIL, tableName);\n    }\n    HTableDescriptor htd = new HTableDescriptor(tableName);\n    htd.addFamily(new HColumnDescriptor(family1));\n    htd.addFamily(new HColumnDescriptor(family2));\n    createTable(TEST_UTIL, htd);\n\n    try {\n      // create temp users\n      User user = User.createUserForTesting(TEST_UTIL.getConfiguration(), \"user\", new String[0]);\n\n      AccessTestAction getQualifierAction = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Get g = new Get(TEST_ROW);\n          g.addColumn(family1, qualifier);\n          try (Connection conn = ConnectionFactory.createConnection(conf);\n              Table t = conn.getTable(tableName)) {\n            t.get(g);\n          }\n          return null;\n        }\n      };\n\n      AccessTestAction putQualifierAction = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Put p = new Put(TEST_ROW);\n          p.add(family1, qualifier, Bytes.toBytes(\"v1\"));\n          try (Connection conn = ConnectionFactory.createConnection(conf);\n              Table t = conn.getTable(tableName)) {\n            t.put(p);\n          }\n          return null;\n        }\n      };\n\n      AccessTestAction deleteQualifierAction = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Delete d = new Delete(TEST_ROW);\n          d.deleteColumn(family1, qualifier);\n          // d.deleteFamily(family1);\n          try (Connection conn = ConnectionFactory.createConnection(conf);\n              Table t = conn.getTable(tableName)) {\n            t.delete(d);\n          }\n          return null;\n        }\n      };\n\n      revokeFromTable(TEST_UTIL, user.getShortName(), tableName, family1, null);\n\n      verifyDenied(user, getQualifierAction);\n      verifyDenied(user, putQualifierAction);\n      verifyDenied(user, deleteQualifierAction);\n\n      grantOnTable(TEST_UTIL, user.getShortName(), tableName, family1, qualifier,\n        Permission.Action.READ);\n\n      verifyAllowed(user, getQualifierAction);\n      verifyDenied(user, putQualifierAction);\n      verifyDenied(user, deleteQualifierAction);\n\n      // only grant write permission\n      // TODO: comment this portion after HBASE-3583\n      grantOnTable(TEST_UTIL, user.getShortName(), tableName, family1, qualifier,\n        Permission.Action.WRITE);\n\n      verifyDenied(user, getQualifierAction);\n      verifyAllowed(user, putQualifierAction);\n      verifyAllowed(user, deleteQualifierAction);\n\n      // grant both read and write permission\n      grantOnTable(TEST_UTIL, user.getShortName(), tableName, family1, qualifier,\n        Permission.Action.READ, Permission.Action.WRITE);\n\n      verifyAllowed(user, getQualifierAction);\n      verifyAllowed(user, putQualifierAction);\n      verifyAllowed(user, deleteQualifierAction);\n\n      // revoke family level permission won't impact column level\n      revokeFromTable(TEST_UTIL, user.getShortName(), tableName, family1, qualifier);\n\n      verifyDenied(user, getQualifierAction);\n      verifyDenied(user, putQualifierAction);\n      verifyDenied(user, deleteQualifierAction);\n    } finally {\n      // delete table\n      deleteTable(TEST_UTIL, tableName);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testAccessControlClientGrantRevoke() throws Exception {\n    // Create user for testing, who has no READ privileges by default.\n    User testGrantRevoke = User.createUserForTesting(conf, \"testGrantRevoke\", new String[0]);\n    AccessTestAction getAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE.getTableName());) {\n          return t.get(new Get(TEST_ROW));\n        }\n      }\n    };\n\n    verifyDenied(getAction, testGrantRevoke);\n\n    // Grant table READ permissions to testGrantRevoke.\n    try {\n      grantOnTableUsingAccessControlClient(TEST_UTIL, systemUserConnection, testGrantRevoke.getShortName(),\n          TEST_TABLE.getTableName(), null, null, Permission.Action.READ);\n    } catch (Throwable e) {\n      LOG.error(\"error during call of AccessControlClient.grant. \", e);\n    }\n\n    // Now testGrantRevoke should be able to read also\n    verifyAllowed(getAction, testGrantRevoke);\n\n    // Revoke table READ permission to testGrantRevoke.\n    try {\n      revokeFromTableUsingAccessControlClient(TEST_UTIL, systemUserConnection, testGrantRevoke.getShortName(),\n          TEST_TABLE.getTableName(), null, null, Permission.Action.READ);\n    } catch (Throwable e) {\n      LOG.error(\"error during call of AccessControlClient.revoke \", e);\n    }\n\n    // Now testGrantRevoke shouldn't be able read\n    verifyDenied(getAction, testGrantRevoke);\n  }","id":39118,"modified_method":"@Test\n  public void testAccessControlClientGrantRevoke() throws Exception {\n    // Create user for testing, who has no READ privileges by default.\n    User testGrantRevoke = User.createUserForTesting(conf, \"testGrantRevoke\", new String[0]);\n    AccessTestAction getAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE);) {\n          return t.get(new Get(TEST_ROW));\n        }\n      }\n    };\n\n    verifyDenied(getAction, testGrantRevoke);\n\n    // Grant table READ permissions to testGrantRevoke.\n    try {\n      grantOnTableUsingAccessControlClient(TEST_UTIL, systemUserConnection,\n        testGrantRevoke.getShortName(), TEST_TABLE, null, null, Permission.Action.READ);\n    } catch (Throwable e) {\n      LOG.error(\"error during call of AccessControlClient.grant. \", e);\n    }\n\n    // Now testGrantRevoke should be able to read also\n    verifyAllowed(getAction, testGrantRevoke);\n\n    // Revoke table READ permission to testGrantRevoke.\n    try {\n      revokeFromTableUsingAccessControlClient(TEST_UTIL, systemUserConnection,\n        testGrantRevoke.getShortName(), TEST_TABLE, null, null, Permission.Action.READ);\n    } catch (Throwable e) {\n      LOG.error(\"error during call of AccessControlClient.revoke \", e);\n    }\n\n    // Now testGrantRevoke shouldn't be able read\n    verifyDenied(getAction, testGrantRevoke);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testRead() throws Exception {\n    // get action\n    AccessTestAction getAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Get g = new Get(TEST_ROW);\n        g.addFamily(TEST_FAMILY);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE.getTableName())) {\n          t.get(g);\n        }\n        return null;\n      }\n    };\n    verifyRead(getAction);\n\n    // action for scanning\n    AccessTestAction scanAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Scan s = new Scan();\n        s.addFamily(TEST_FAMILY);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table table = conn.getTable(TEST_TABLE.getTableName())) {\n          ResultScanner scanner = table.getScanner(s);\n          try {\n            for (Result r = scanner.next(); r != null; r = scanner.next()) {\n              // do nothing\n            }\n          } catch (IOException e) {\n          } finally {\n            scanner.close();\n          }\n        }\n        return null;\n      }\n    };\n    verifyRead(scanAction);\n  }","id":39119,"modified_method":"@Test\n  public void testRead() throws Exception {\n    // get action\n    AccessTestAction getAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Get g = new Get(TEST_ROW);\n        g.addFamily(TEST_FAMILY);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE)) {\n          t.get(g);\n        }\n        return null;\n      }\n    };\n    verifyRead(getAction);\n\n    // action for scanning\n    AccessTestAction scanAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Scan s = new Scan();\n        s.addFamily(TEST_FAMILY);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table table = conn.getTable(TEST_TABLE)) {\n          ResultScanner scanner = table.getScanner(s);\n          try {\n            for (Result r = scanner.next(); r != null; r = scanner.next()) {\n              // do nothing\n            }\n          } catch (IOException e) {\n          } finally {\n            scanner.close();\n          }\n        }\n        return null;\n      }\n    };\n    verifyRead(scanAction);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testGrantRevoke() throws Exception {\n    AccessTestAction grantAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table acl = conn.getTable(AccessControlLists.ACL_TABLE_NAME)) {\n          BlockingRpcChannel service = acl.coprocessorService(TEST_TABLE.getTableName().getName());\n          AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n          ProtobufUtil.grant(protocol, USER_RO.getShortName(), TEST_TABLE.getTableName(),\n              TEST_FAMILY, null, Action.READ);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction revokeAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table acl = conn.getTable(AccessControlLists.ACL_TABLE_NAME)) {\n          BlockingRpcChannel service = acl.coprocessorService(TEST_TABLE.getTableName().getName());\n          AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n          ProtobufUtil.revoke(protocol, USER_RO.getShortName(), TEST_TABLE.getTableName(),\n              TEST_FAMILY, null, Action.READ);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction getTablePermissionsAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table acl = conn.getTable(AccessControlLists.ACL_TABLE_NAME)){\n          BlockingRpcChannel service = acl.coprocessorService(TEST_TABLE.getTableName().getName());\n          AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n          ProtobufUtil.getUserPermissions(protocol, TEST_TABLE.getTableName());\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction getGlobalPermissionsAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table acl = conn.getTable(AccessControlLists.ACL_TABLE_NAME);) {\n          BlockingRpcChannel service = acl.coprocessorService(HConstants.EMPTY_START_ROW);\n          AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n          ProtobufUtil.getUserPermissions(protocol);\n        }\n        return null;\n      }\n    };\n\n    verifyAllowed(grantAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(grantAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(revokeAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(revokeAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(getTablePermissionsAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(getTablePermissionsAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(getGlobalPermissionsAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(getGlobalPermissionsAction, USER_CREATE,\n        USER_OWNER, USER_RW, USER_RO, USER_NONE);\n  }","id":39120,"modified_method":"@Test\n  public void testGrantRevoke() throws Exception {\n    AccessTestAction grantAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table acl = conn.getTable(AccessControlLists.ACL_TABLE_NAME)) {\n          BlockingRpcChannel service = acl.coprocessorService(TEST_TABLE.getName());\n          AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n          ProtobufUtil.grant(protocol, USER_RO.getShortName(), TEST_TABLE, TEST_FAMILY, null,\n            Action.READ);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction revokeAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table acl = conn.getTable(AccessControlLists.ACL_TABLE_NAME)) {\n          BlockingRpcChannel service = acl.coprocessorService(TEST_TABLE.getName());\n          AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n          ProtobufUtil.revoke(protocol, USER_RO.getShortName(), TEST_TABLE, TEST_FAMILY, null,\n            Action.READ);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction getTablePermissionsAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table acl = conn.getTable(AccessControlLists.ACL_TABLE_NAME)){\n          BlockingRpcChannel service = acl.coprocessorService(TEST_TABLE.getName());\n          AccessControlService.BlockingInterface protocol =\n              AccessControlService.newBlockingStub(service);\n          ProtobufUtil.getUserPermissions(protocol, TEST_TABLE);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction getGlobalPermissionsAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table acl = conn.getTable(AccessControlLists.ACL_TABLE_NAME);) {\n          BlockingRpcChannel service = acl.coprocessorService(HConstants.EMPTY_START_ROW);\n          AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n          ProtobufUtil.getUserPermissions(protocol);\n        }\n        return null;\n      }\n    };\n\n    verifyAllowed(grantAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(grantAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n    try {\n      verifyAllowed(revokeAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n      verifyDenied(revokeAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n      verifyAllowed(getTablePermissionsAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n      verifyDenied(getTablePermissionsAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n      verifyAllowed(getGlobalPermissionsAction, SUPERUSER, USER_ADMIN);\n      verifyDenied(getGlobalPermissionsAction, USER_CREATE, USER_OWNER, USER_RW, USER_RO,\n        USER_NONE);\n    } finally {\n      // Cleanup, Grant the revoked permission back to the user\n      grantOnTable(TEST_UTIL, USER_RO.getShortName(), TEST_TABLE, TEST_FAMILY, null,\n        Permission.Action.READ);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testCheckPermissions() throws Exception {\n    // --------------------------------------\n    // test global permissions\n    AccessTestAction globalAdmin = new AccessTestAction() {\n      @Override\n      public Void run() throws Exception {\n        checkGlobalPerms(TEST_UTIL, Permission.Action.ADMIN);\n        return null;\n      }\n    };\n    // verify that only superuser can admin\n    verifyGlobal(globalAdmin);\n\n    // --------------------------------------\n    // test multiple permissions\n    AccessTestAction globalReadWrite = new AccessTestAction() {\n      @Override\n      public Void run() throws Exception {\n        checkGlobalPerms(TEST_UTIL, Permission.Action.READ, Permission.Action.WRITE);\n        return null;\n      }\n    };\n\n    verifyGlobal(globalReadWrite);\n\n    // --------------------------------------\n    // table/column/qualifier level permissions\n    final byte[] TEST_Q1 = Bytes.toBytes(\"q1\");\n    final byte[] TEST_Q2 = Bytes.toBytes(\"q2\");\n\n    User userTable = User.createUserForTesting(conf, \"user_check_perms_table\", new String[0]);\n    User userColumn = User.createUserForTesting(conf, \"user_check_perms_family\", new String[0]);\n    User userQualifier = User.createUserForTesting(conf, \"user_check_perms_q\", new String[0]);\n\n    grantOnTable(TEST_UTIL, userTable.getShortName(),\n      TEST_TABLE.getTableName(), null, null,\n      Permission.Action.READ);\n    grantOnTable(TEST_UTIL, userColumn.getShortName(),\n      TEST_TABLE.getTableName(), TEST_FAMILY, null,\n      Permission.Action.READ);\n    grantOnTable(TEST_UTIL, userQualifier.getShortName(),\n      TEST_TABLE.getTableName(), TEST_FAMILY, TEST_Q1,\n      Permission.Action.READ);\n\n    AccessTestAction tableRead = new AccessTestAction() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_UTIL, TEST_TABLE.getTableName(), null, null,\n          Permission.Action.READ);\n        return null;\n      }\n    };\n\n    AccessTestAction columnRead = new AccessTestAction() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_UTIL, TEST_TABLE.getTableName(), TEST_FAMILY, null,\n          Permission.Action.READ);\n        return null;\n      }\n    };\n\n    AccessTestAction qualifierRead = new AccessTestAction() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_UTIL, TEST_TABLE.getTableName(), TEST_FAMILY, TEST_Q1,\n          Permission.Action.READ);\n        return null;\n      }\n    };\n\n    AccessTestAction multiQualifierRead = new AccessTestAction() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_UTIL, TEST_TABLE.getTableName(), new Permission[] {\n            new TablePermission(TEST_TABLE.getTableName(), TEST_FAMILY, TEST_Q1,\n              Permission.Action.READ),\n            new TablePermission(TEST_TABLE.getTableName(), TEST_FAMILY, TEST_Q2,\n              Permission.Action.READ), });\n        return null;\n      }\n    };\n\n    AccessTestAction globalAndTableRead = new AccessTestAction() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_UTIL, TEST_TABLE.getTableName(),\n          new Permission[] { new Permission(Permission.Action.READ),\n            new TablePermission(TEST_TABLE.getTableName(), null, (byte[]) null,\n            Permission.Action.READ), });\n        return null;\n      }\n    };\n\n    AccessTestAction noCheck = new AccessTestAction() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_UTIL, TEST_TABLE.getTableName(), new Permission[0]);\n        return null;\n      }\n    };\n\n    verifyAllowed(tableRead, SUPERUSER, userTable);\n    verifyDenied(tableRead, userColumn, userQualifier);\n\n    verifyAllowed(columnRead, SUPERUSER, userTable, userColumn);\n    verifyDenied(columnRead, userQualifier);\n\n    verifyAllowed(qualifierRead, SUPERUSER, userTable, userColumn, userQualifier);\n\n    verifyAllowed(multiQualifierRead, SUPERUSER, userTable, userColumn);\n    verifyDenied(multiQualifierRead, userQualifier);\n\n    verifyAllowed(globalAndTableRead, SUPERUSER);\n    verifyDenied(globalAndTableRead, userTable, userColumn, userQualifier);\n\n    verifyAllowed(noCheck, SUPERUSER, userTable, userColumn, userQualifier);\n\n    // --------------------------------------\n    // test family level multiple permissions\n    AccessTestAction familyReadWrite = new AccessTestAction() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_UTIL, TEST_TABLE.getTableName(), TEST_FAMILY, null,\n          Permission.Action.READ, Permission.Action.WRITE);\n        return null;\n      }\n    };\n\n    verifyAllowed(familyReadWrite, SUPERUSER, USER_OWNER, USER_CREATE, USER_RW);\n    verifyDenied(familyReadWrite, USER_NONE, USER_RO);\n\n    // --------------------------------------\n    // check for wrong table region\n    CheckPermissionsRequest checkRequest = CheckPermissionsRequest.newBuilder()\n      .addPermission(AccessControlProtos.Permission.newBuilder()\n          .setType(AccessControlProtos.Permission.Type.Table)\n          .setTablePermission(\n              AccessControlProtos.TablePermission.newBuilder()\n                  .setTableName(ProtobufUtil.toProtoTableName(TEST_TABLE.getTableName()))\n                  .addAction(AccessControlProtos.Permission.Action.CREATE))\n      ).build();\n    Table acl = systemUserConnection.getTable(AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel channel = acl.coprocessorService(new byte[0]);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(channel);\n      try {\n        // but ask for TablePermissions for TEST_TABLE\n        protocol.checkPermissions(null, checkRequest);\n        fail(\"this should have thrown CoprocessorException\");\n      } catch (ServiceException ex) {\n        // expected\n      }\n    } finally {\n      acl.close();\n    }\n  }","id":39121,"modified_method":"@Test\n  public void testCheckPermissions() throws Exception {\n    // --------------------------------------\n    // test global permissions\n    AccessTestAction globalAdmin = new AccessTestAction() {\n      @Override\n      public Void run() throws Exception {\n        checkGlobalPerms(TEST_UTIL, Permission.Action.ADMIN);\n        return null;\n      }\n    };\n    // verify that only superuser can admin\n    verifyGlobal(globalAdmin);\n\n    // --------------------------------------\n    // test multiple permissions\n    AccessTestAction globalReadWrite = new AccessTestAction() {\n      @Override\n      public Void run() throws Exception {\n        checkGlobalPerms(TEST_UTIL, Permission.Action.READ, Permission.Action.WRITE);\n        return null;\n      }\n    };\n\n    verifyGlobal(globalReadWrite);\n\n    // --------------------------------------\n    // table/column/qualifier level permissions\n    final byte[] TEST_Q1 = Bytes.toBytes(\"q1\");\n    final byte[] TEST_Q2 = Bytes.toBytes(\"q2\");\n\n    User userTable = User.createUserForTesting(conf, \"user_check_perms_table\", new String[0]);\n    User userColumn = User.createUserForTesting(conf, \"user_check_perms_family\", new String[0]);\n    User userQualifier = User.createUserForTesting(conf, \"user_check_perms_q\", new String[0]);\n\n    grantOnTable(TEST_UTIL, userTable.getShortName(),\n      TEST_TABLE, null, null,\n      Permission.Action.READ);\n    grantOnTable(TEST_UTIL, userColumn.getShortName(),\n      TEST_TABLE, TEST_FAMILY, null,\n      Permission.Action.READ);\n    grantOnTable(TEST_UTIL, userQualifier.getShortName(),\n      TEST_TABLE, TEST_FAMILY, TEST_Q1,\n      Permission.Action.READ);\n\n    try {\n      AccessTestAction tableRead = new AccessTestAction() {\n        @Override\n        public Void run() throws Exception {\n          checkTablePerms(TEST_UTIL, TEST_TABLE, null, null, Permission.Action.READ);\n          return null;\n        }\n      };\n\n      AccessTestAction columnRead = new AccessTestAction() {\n        @Override\n        public Void run() throws Exception {\n          checkTablePerms(TEST_UTIL, TEST_TABLE, TEST_FAMILY, null, Permission.Action.READ);\n          return null;\n        }\n      };\n\n      AccessTestAction qualifierRead = new AccessTestAction() {\n        @Override\n        public Void run() throws Exception {\n          checkTablePerms(TEST_UTIL, TEST_TABLE, TEST_FAMILY, TEST_Q1, Permission.Action.READ);\n          return null;\n        }\n      };\n\n      AccessTestAction multiQualifierRead = new AccessTestAction() {\n        @Override\n        public Void run() throws Exception {\n          checkTablePerms(TEST_UTIL, TEST_TABLE, new Permission[] {\n              new TablePermission(TEST_TABLE, TEST_FAMILY, TEST_Q1, Permission.Action.READ),\n              new TablePermission(TEST_TABLE, TEST_FAMILY, TEST_Q2, Permission.Action.READ), });\n          return null;\n        }\n      };\n\n      AccessTestAction globalAndTableRead = new AccessTestAction() {\n        @Override\n        public Void run() throws Exception {\n          checkTablePerms(TEST_UTIL, TEST_TABLE, new Permission[] {\n              new Permission(Permission.Action.READ),\n              new TablePermission(TEST_TABLE, null, (byte[]) null, Permission.Action.READ), });\n          return null;\n        }\n      };\n\n      AccessTestAction noCheck = new AccessTestAction() {\n        @Override\n        public Void run() throws Exception {\n          checkTablePerms(TEST_UTIL, TEST_TABLE, new Permission[0]);\n          return null;\n        }\n      };\n\n      verifyAllowed(tableRead, SUPERUSER, userTable);\n      verifyDenied(tableRead, userColumn, userQualifier);\n\n      verifyAllowed(columnRead, SUPERUSER, userTable, userColumn);\n      verifyDenied(columnRead, userQualifier);\n\n      verifyAllowed(qualifierRead, SUPERUSER, userTable, userColumn, userQualifier);\n\n      verifyAllowed(multiQualifierRead, SUPERUSER, userTable, userColumn);\n      verifyDenied(multiQualifierRead, userQualifier);\n\n      verifyAllowed(globalAndTableRead, SUPERUSER);\n      verifyDenied(globalAndTableRead, userTable, userColumn, userQualifier);\n\n      verifyAllowed(noCheck, SUPERUSER, userTable, userColumn, userQualifier);\n\n      // --------------------------------------\n      // test family level multiple permissions\n      AccessTestAction familyReadWrite = new AccessTestAction() {\n        @Override\n        public Void run() throws Exception {\n          checkTablePerms(TEST_UTIL, TEST_TABLE, TEST_FAMILY, null, Permission.Action.READ,\n            Permission.Action.WRITE);\n          return null;\n        }\n      };\n\n      verifyAllowed(familyReadWrite, SUPERUSER, USER_OWNER, USER_CREATE, USER_RW);\n      verifyDenied(familyReadWrite, USER_NONE, USER_RO);\n\n      // --------------------------------------\n      // check for wrong table region\n      CheckPermissionsRequest checkRequest =\n          CheckPermissionsRequest\n              .newBuilder()\n              .addPermission(\n                AccessControlProtos.Permission\n                    .newBuilder()\n                    .setType(AccessControlProtos.Permission.Type.Table)\n                    .setTablePermission(\n                      AccessControlProtos.TablePermission.newBuilder()\n                          .setTableName(ProtobufUtil.toProtoTableName(TEST_TABLE))\n                          .addAction(AccessControlProtos.Permission.Action.CREATE))).build();\n      Table acl = systemUserConnection.getTable(AccessControlLists.ACL_TABLE_NAME);\n      try {\n        BlockingRpcChannel channel = acl.coprocessorService(new byte[0]);\n        AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(channel);\n        try {\n          // but ask for TablePermissions for TEST_TABLE\n          protocol.checkPermissions(null, checkRequest);\n          fail(\"this should have thrown CoprocessorException\");\n        } catch (ServiceException ex) {\n          // expected\n        }\n      } finally {\n        acl.close();\n      }\n\n    } finally {\n      revokeFromTable(TEST_UTIL, userTable.getShortName(), TEST_TABLE, null, null,\n        Permission.Action.READ);\n      revokeFromTable(TEST_UTIL, userColumn.getShortName(), TEST_TABLE, TEST_FAMILY, null,\n        Permission.Action.READ);\n      revokeFromTable(TEST_UTIL, userQualifier.getShortName(), TEST_TABLE, TEST_FAMILY, TEST_Q1,\n        Permission.Action.READ);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  // test put, delete, increment\n  public void testWrite() throws Exception {\n    // put action\n    AccessTestAction putAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Put p = new Put(TEST_ROW);\n        p.add(TEST_FAMILY, TEST_QUALIFIER, Bytes.toBytes(1));\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE.getTableName())) {\n          t.put(p);\n        }\n        return null;\n      }\n    };\n    verifyWrite(putAction);\n\n    // delete action\n    AccessTestAction deleteAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Delete d = new Delete(TEST_ROW);\n        d.deleteFamily(TEST_FAMILY);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE.getTableName())) {\n          t.delete(d);\n        }\n        return null;\n      }\n    };\n    verifyWrite(deleteAction);\n\n    // increment action\n    AccessTestAction incrementAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Increment inc = new Increment(TEST_ROW);\n        inc.addColumn(TEST_FAMILY, TEST_QUALIFIER, 1);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE.getTableName());) {\n          t.increment(inc);\n        }\n        return null;\n      }\n    };\n    verifyWrite(incrementAction);\n  }","id":39122,"modified_method":"@Test\n  // test put, delete, increment\n  public void testWrite() throws Exception {\n    // put action\n    AccessTestAction putAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Put p = new Put(TEST_ROW);\n        p.add(TEST_FAMILY, TEST_QUALIFIER, Bytes.toBytes(1));\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE)) {\n          t.put(p);\n        }\n        return null;\n      }\n    };\n    verifyWrite(putAction);\n\n    // delete action\n    AccessTestAction deleteAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Delete d = new Delete(TEST_ROW);\n        d.deleteFamily(TEST_FAMILY);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE)) {\n          t.delete(d);\n        }\n        return null;\n      }\n    };\n    verifyWrite(deleteAction);\n\n    // increment action\n    AccessTestAction incrementAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Increment inc = new Increment(TEST_ROW);\n        inc.addColumn(TEST_FAMILY, TEST_QUALIFIER, 1);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE);) {\n          t.increment(inc);\n        }\n        return null;\n      }\n    };\n    verifyWrite(incrementAction);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testAccessControlClientGlobalGrantRevoke() throws Exception {\n    // Create user for testing, who has no READ privileges by default.\n    User testGlobalGrantRevoke = User.createUserForTesting(conf,\n      \"testGlobalGrantRevoke\", new String[0]);\n    AccessTestAction getAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE.getTableName())) {\n          return t.get(new Get(TEST_ROW));\n        }\n      }\n    };\n\n    verifyDenied(getAction, testGlobalGrantRevoke);\n\n    // Grant table READ permissions to testGlobalGrantRevoke.\n    try {\n      grantGlobalUsingAccessControlClient(TEST_UTIL, systemUserConnection,\n          testGlobalGrantRevoke.getShortName(), Permission.Action.READ);\n    } catch (Throwable e) {\n      LOG.error(\"error during call of AccessControlClient.grant. \", e);\n    }\n\n    // Now testGlobalGrantRevoke should be able to read also\n    verifyAllowed(getAction, testGlobalGrantRevoke);\n\n    // Revoke table READ permission to testGlobalGrantRevoke.\n    try {\n      revokeGlobalUsingAccessControlClient(TEST_UTIL, systemUserConnection,\n          testGlobalGrantRevoke.getShortName(), Permission.Action.READ);\n    } catch (Throwable e) {\n      LOG.error(\"error during call of AccessControlClient.revoke \", e);\n    }\n\n    // Now testGlobalGrantRevoke shouldn't be able read\n    verifyDenied(getAction, testGlobalGrantRevoke);\n  }","id":39123,"modified_method":"@Test\n  public void testAccessControlClientGlobalGrantRevoke() throws Exception {\n    // Create user for testing, who has no READ privileges by default.\n    User testGlobalGrantRevoke = User.createUserForTesting(conf,\n      \"testGlobalGrantRevoke\", new String[0]);\n    AccessTestAction getAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE)) {\n          return t.get(new Get(TEST_ROW));\n        }\n      }\n    };\n\n    verifyDenied(getAction, testGlobalGrantRevoke);\n\n    // Grant table READ permissions to testGlobalGrantRevoke.\n    String userName = testGlobalGrantRevoke.getShortName();\n    try {\n      grantGlobalUsingAccessControlClient(TEST_UTIL, systemUserConnection,\n          userName, Permission.Action.READ);\n    } catch (Throwable e) {\n      LOG.error(\"error during call of AccessControlClient.grant. \", e);\n    }\n    try {\n      // Now testGlobalGrantRevoke should be able to read also\n      verifyAllowed(getAction, testGlobalGrantRevoke);\n\n      // Revoke table READ permission to testGlobalGrantRevoke.\n      try {\n        revokeGlobalUsingAccessControlClient(TEST_UTIL, systemUserConnection,\n          userName, Permission.Action.READ);\n      } catch (Throwable e) {\n        LOG.error(\"error during call of AccessControlClient.revoke \", e);\n      }\n\n      // Now testGlobalGrantRevoke shouldn't be able read\n      verifyDenied(getAction, testGlobalGrantRevoke);\n    } finally {\n      revokeGlobal(TEST_UTIL, userName, Permission.Action.READ);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testTruncatePerms() throws Exception {\n    try {\n      List<UserPermission> existingPerms = AccessControlClient.getUserPermissions(\n          systemUserConnection, TEST_TABLE.getTableName().getNameAsString());\n      assertTrue(existingPerms != null);\n      assertTrue(existingPerms.size() > 1);\n      TEST_UTIL.getHBaseAdmin().disableTable(TEST_TABLE.getTableName());\n      TEST_UTIL.truncateTable(TEST_TABLE.getTableName());\n      TEST_UTIL.waitTableAvailable(TEST_TABLE.getTableName());\n      List<UserPermission> perms = AccessControlClient.getUserPermissions(\n          systemUserConnection, TEST_TABLE.getTableName().getNameAsString());\n      assertTrue(perms != null);\n      assertEquals(existingPerms.size(), perms.size());\n    } catch (Throwable e) {\n      throw new HBaseIOException(e);\n    }\n  }","id":39124,"modified_method":"@Test\n  public void testTruncatePerms() throws Exception {\n    try {\n      List<UserPermission> existingPerms = AccessControlClient.getUserPermissions(\n          systemUserConnection, TEST_TABLE.getNameAsString());\n      assertTrue(existingPerms != null);\n      assertTrue(existingPerms.size() > 1);\n      TEST_UTIL.getHBaseAdmin().disableTable(TEST_TABLE);\n      TEST_UTIL.truncateTable(TEST_TABLE);\n      TEST_UTIL.waitTableAvailable(TEST_TABLE);\n      List<UserPermission> perms = AccessControlClient.getUserPermissions(\n          systemUserConnection, TEST_TABLE.getNameAsString());\n      assertTrue(perms != null);\n      assertEquals(existingPerms.size(), perms.size());\n    } catch (Throwable e) {\n      throw new HBaseIOException(e);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@BeforeClass\n  public static void setupBeforeClass() throws Exception {\n    // setup configuration\n    conf = TEST_UTIL.getConfiguration();\n    // Enable security\n    enableSecurity(conf);\n    // In this particular test case, we can't use SecureBulkLoadEndpoint because its doAs will fail\n    // to move a file for a random user\n    conf.set(CoprocessorHost.REGION_COPROCESSOR_CONF_KEY, AccessController.class.getName());\n    // Verify enableSecurity sets up what we require\n    verifyConfiguration(conf);\n\n    // Enable EXEC permission checking\n    conf.setBoolean(AccessControlConstants.EXEC_PERMISSION_CHECKS_KEY, true);\n\n    TEST_UTIL.startMiniCluster();\n    MasterCoprocessorHost cpHost =\n      TEST_UTIL.getMiniHBaseCluster().getMaster().getMasterCoprocessorHost();\n    cpHost.load(AccessController.class, Coprocessor.PRIORITY_HIGHEST, conf);\n    ACCESS_CONTROLLER = (AccessController) cpHost.findCoprocessor(AccessController.class.getName());\n    CP_ENV = cpHost.createEnvironment(AccessController.class, ACCESS_CONTROLLER,\n      Coprocessor.PRIORITY_HIGHEST, 1, conf);\n    RegionServerCoprocessorHost rsHost = TEST_UTIL.getMiniHBaseCluster().getRegionServer(0)\n      .getRegionServerCoprocessorHost();\n    RSCP_ENV = rsHost.createEnvironment(AccessController.class, ACCESS_CONTROLLER,\n      Coprocessor.PRIORITY_HIGHEST, 1, conf);\n\n    // Wait for the ACL table to become available\n    TEST_UTIL.waitUntilAllRegionsAssigned(AccessControlLists.ACL_TABLE_NAME);\n\n    // create a set of test users\n    SUPERUSER = User.createUserForTesting(conf, \"admin\", new String[] { \"supergroup\" });\n    USER_ADMIN = User.createUserForTesting(conf, \"admin2\", new String[0]);\n    USER_RW = User.createUserForTesting(conf, \"rwuser\", new String[0]);\n    USER_RO = User.createUserForTesting(conf, \"rouser\", new String[0]);\n    USER_OWNER = User.createUserForTesting(conf, \"owner\", new String[0]);\n    USER_CREATE = User.createUserForTesting(conf, \"tbl_create\", new String[0]);\n    USER_NONE = User.createUserForTesting(conf, \"nouser\", new String[0]);\n    USER_ADMIN_CF = User.createUserForTesting(conf, \"col_family_admin\", new String[0]);\n\n    systemUserConnection = TEST_UTIL.getConnection();\n  }","id":39125,"modified_method":"@BeforeClass\n  public static void setupBeforeClass() throws Exception {\n    // setup configuration\n    conf = TEST_UTIL.getConfiguration();\n    // Enable security\n    enableSecurity(conf);\n    // In this particular test case, we can't use SecureBulkLoadEndpoint because its doAs will fail\n    // to move a file for a random user\n    conf.set(CoprocessorHost.REGION_COPROCESSOR_CONF_KEY, AccessController.class.getName());\n    // Verify enableSecurity sets up what we require\n    verifyConfiguration(conf);\n\n    // Enable EXEC permission checking\n    conf.setBoolean(AccessControlConstants.EXEC_PERMISSION_CHECKS_KEY, true);\n\n    TEST_UTIL.startMiniCluster();\n    MasterCoprocessorHost cpHost =\n      TEST_UTIL.getMiniHBaseCluster().getMaster().getMasterCoprocessorHost();\n    cpHost.load(AccessController.class, Coprocessor.PRIORITY_HIGHEST, conf);\n    ACCESS_CONTROLLER = (AccessController) cpHost.findCoprocessor(AccessController.class.getName());\n    CP_ENV = cpHost.createEnvironment(AccessController.class, ACCESS_CONTROLLER,\n      Coprocessor.PRIORITY_HIGHEST, 1, conf);\n    RegionServerCoprocessorHost rsHost = TEST_UTIL.getMiniHBaseCluster().getRegionServer(0)\n      .getRegionServerCoprocessorHost();\n    RSCP_ENV = rsHost.createEnvironment(AccessController.class, ACCESS_CONTROLLER,\n      Coprocessor.PRIORITY_HIGHEST, 1, conf);\n\n    // Wait for the ACL table to become available\n    TEST_UTIL.waitUntilAllRegionsAssigned(AccessControlLists.ACL_TABLE_NAME);\n\n    // create a set of test users\n    SUPERUSER = User.createUserForTesting(conf, \"admin\", new String[] { \"supergroup\" });\n    USER_ADMIN = User.createUserForTesting(conf, \"admin2\", new String[0]);\n    USER_RW = User.createUserForTesting(conf, \"rwuser\", new String[0]);\n    USER_RO = User.createUserForTesting(conf, \"rouser\", new String[0]);\n    USER_OWNER = User.createUserForTesting(conf, \"owner\", new String[0]);\n    USER_CREATE = User.createUserForTesting(conf, \"tbl_create\", new String[0]);\n    USER_NONE = User.createUserForTesting(conf, \"nouser\", new String[0]);\n    USER_ADMIN_CF = User.createUserForTesting(conf, \"col_family_admin\", new String[0]);\n\n    systemUserConnection = TEST_UTIL.getConnection();\n    setUpTableAndUserPermissions();\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testSnapshotWithOwner() throws Exception {\n    Admin admin = TEST_UTIL.getHBaseAdmin();\n    final HTableDescriptor htd = admin.getTableDescriptor(TEST_TABLE.getTableName());\n    SnapshotDescription.Builder builder = SnapshotDescription.newBuilder();\n    builder.setName(TEST_TABLE.getTableName().getNameAsString() + \"-snapshot\");\n    builder.setTable(TEST_TABLE.getTableName().getNameAsString());\n    builder.setOwner(USER_OWNER.getName());\n    final SnapshotDescription snapshot = builder.build();\n    AccessTestAction snapshotAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n            snapshot, htd);\n        return null;\n      }\n    };\n    verifyAllowed(snapshotAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(snapshotAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    AccessTestAction deleteAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preDeleteSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          snapshot);\n        return null;\n      }\n    };\n    verifyAllowed(deleteAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(deleteAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    AccessTestAction restoreAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preRestoreSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          snapshot, htd);\n        return null;\n      }\n    };\n    verifyAllowed(restoreAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(restoreAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    AccessTestAction cloneAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preCloneSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          null, null);\n        return null;\n      }\n    };\n    // Clone by snapshot owner is not allowed , because clone operation creates a new table,\n    // which needs global admin permission.\n    verifyAllowed(cloneAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(cloneAction, USER_CREATE, USER_RW, USER_RO, USER_NONE, USER_OWNER);\n  }","id":39126,"modified_method":"@Test\n  public void testSnapshotWithOwner() throws Exception {\n    Admin admin = TEST_UTIL.getHBaseAdmin();\n    final HTableDescriptor htd = admin.getTableDescriptor(TEST_TABLE);\n    SnapshotDescription.Builder builder = SnapshotDescription.newBuilder();\n    builder.setName(TEST_TABLE.getNameAsString() + \"-snapshot\");\n    builder.setTable(TEST_TABLE.getNameAsString());\n    builder.setOwner(USER_OWNER.getName());\n    final SnapshotDescription snapshot = builder.build();\n    AccessTestAction snapshotAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n            snapshot, htd);\n        return null;\n      }\n    };\n    verifyAllowed(snapshotAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(snapshotAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    AccessTestAction deleteAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preDeleteSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          snapshot);\n        return null;\n      }\n    };\n    verifyAllowed(deleteAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(deleteAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    AccessTestAction restoreAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preRestoreSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          snapshot, htd);\n        return null;\n      }\n    };\n    verifyAllowed(restoreAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(restoreAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    AccessTestAction cloneAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preCloneSnapshot(ObserverContext.createAndPrepare(CP_ENV, null),\n          null, null);\n        return null;\n      }\n    };\n    // Clone by snapshot owner is not allowed , because clone operation creates a new table,\n    // which needs global admin permission.\n    verifyAllowed(cloneAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(cloneAction, USER_CREATE, USER_RW, USER_RO, USER_NONE, USER_OWNER);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testModifyColumn() throws Exception {\n    final HColumnDescriptor hcd = new HColumnDescriptor(TEST_FAMILY);\n    hcd.setMaxVersions(10);\n    AccessTestAction action = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preModifyColumnFamily(ObserverContext.createAndPrepare(CP_ENV, null),\n          TEST_TABLE.getTableName(), hcd);\n        return null;\n      }\n    };\n\n    verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER, USER_ADMIN_CF);\n    verifyDenied(action, USER_RW, USER_RO, USER_NONE);\n  }","id":39127,"modified_method":"@Test\n  public void testModifyColumn() throws Exception {\n    final HColumnDescriptor hcd = new HColumnDescriptor(TEST_FAMILY);\n    hcd.setMaxVersions(10);\n    AccessTestAction action = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preModifyColumnFamily(ObserverContext.createAndPrepare(CP_ENV, null),\n          TEST_TABLE, hcd);\n        return null;\n      }\n    };\n\n    verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER, USER_ADMIN_CF);\n    verifyDenied(action, USER_RW, USER_RO, USER_NONE);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testTableDisable() throws Exception {\n    AccessTestAction disableTable = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preDisableTable(ObserverContext.createAndPrepare(CP_ENV, null),\n          TEST_TABLE.getTableName());\n        return null;\n      }\n    };\n\n    AccessTestAction disableAclTable = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preDisableTable(ObserverContext.createAndPrepare(CP_ENV, null),\n            AccessControlLists.ACL_TABLE_NAME);\n        return null;\n      }\n    };\n\n    verifyAllowed(disableTable, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER);\n    verifyDenied(disableTable, USER_RW, USER_RO, USER_NONE);\n\n    // No user should be allowed to disable _acl_ table\n    verifyDenied(disableAclTable, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER, USER_RW, USER_RO);\n  }","id":39128,"modified_method":"@Test\n  public void testTableDisable() throws Exception {\n    AccessTestAction disableTable = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preDisableTable(ObserverContext.createAndPrepare(CP_ENV, null),\n          TEST_TABLE);\n        return null;\n      }\n    };\n\n    AccessTestAction disableAclTable = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preDisableTable(ObserverContext.createAndPrepare(CP_ENV, null),\n            AccessControlLists.ACL_TABLE_NAME);\n        return null;\n      }\n    };\n\n    verifyAllowed(disableTable, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER);\n    verifyDenied(disableTable, USER_RW, USER_RO, USER_NONE);\n\n    // No user should be allowed to disable _acl_ table\n    verifyDenied(disableAclTable, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER, USER_RW, USER_RO);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testAddColumn() throws Exception {\n    final HColumnDescriptor hcd = new HColumnDescriptor(\"fam_new\");\n    AccessTestAction action = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preAddColumnFamily(ObserverContext.createAndPrepare(CP_ENV, null), TEST_TABLE.getTableName(),\n          hcd);\n        return null;\n      }\n    };\n\n    verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER);\n    verifyDenied(action, USER_RW, USER_RO, USER_NONE);\n  }","id":39129,"modified_method":"@Test\n  public void testAddColumn() throws Exception {\n    final HColumnDescriptor hcd = new HColumnDescriptor(\"fam_new\");\n    AccessTestAction action = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preAddColumnFamily(ObserverContext.createAndPrepare(CP_ENV, null), TEST_TABLE,\n          hcd);\n        return null;\n      }\n    };\n\n    verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER);\n    verifyDenied(action, USER_RW, USER_RO, USER_NONE);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testSetQuota() throws Exception {\n    AccessTestAction setUserQuotaAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSetUserQuota(ObserverContext.createAndPrepare(CP_ENV, null),\n          null, null);\n        return null;\n      }\n    };\n\n    AccessTestAction setUserTableQuotaAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSetUserQuota(ObserverContext.createAndPrepare(CP_ENV, null),\n          null, TEST_TABLE.getTableName(), null);\n        return null;\n      }\n    };\n\n    AccessTestAction setUserNamespaceQuotaAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSetUserQuota(ObserverContext.createAndPrepare(CP_ENV, null),\n          null, (String)null, null);\n        return null;\n      }\n    };\n\n    AccessTestAction setTableQuotaAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSetTableQuota(ObserverContext.createAndPrepare(CP_ENV, null),\n          TEST_TABLE.getTableName(), null);\n        return null;\n      }\n    };\n\n    AccessTestAction setNamespaceQuotaAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSetNamespaceQuota(ObserverContext.createAndPrepare(CP_ENV, null),\n          null, null);\n        return null;\n      }\n    };\n\n    verifyAllowed(setUserQuotaAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(setUserQuotaAction, USER_CREATE, USER_RW, USER_RO, USER_NONE, USER_OWNER);\n\n    verifyAllowed(setUserTableQuotaAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(setUserTableQuotaAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(setUserNamespaceQuotaAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(setUserNamespaceQuotaAction, USER_CREATE, USER_RW, USER_RO, USER_NONE, USER_OWNER);\n\n    verifyAllowed(setTableQuotaAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(setTableQuotaAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(setNamespaceQuotaAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(setNamespaceQuotaAction, USER_CREATE, USER_RW, USER_RO, USER_NONE, USER_OWNER);\n  }","id":39130,"modified_method":"@Test\n  public void testSetQuota() throws Exception {\n    AccessTestAction setUserQuotaAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSetUserQuota(ObserverContext.createAndPrepare(CP_ENV, null),\n          null, null);\n        return null;\n      }\n    };\n\n    AccessTestAction setUserTableQuotaAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSetUserQuota(ObserverContext.createAndPrepare(CP_ENV, null), null,\n          TEST_TABLE, null);\n        return null;\n      }\n    };\n\n    AccessTestAction setUserNamespaceQuotaAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSetUserQuota(ObserverContext.createAndPrepare(CP_ENV, null),\n          null, (String)null, null);\n        return null;\n      }\n    };\n\n    AccessTestAction setTableQuotaAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSetTableQuota(ObserverContext.createAndPrepare(CP_ENV, null),\n          TEST_TABLE, null);\n        return null;\n      }\n    };\n\n    AccessTestAction setNamespaceQuotaAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preSetNamespaceQuota(ObserverContext.createAndPrepare(CP_ENV, null),\n          null, null);\n        return null;\n      }\n    };\n\n    verifyAllowed(setUserQuotaAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(setUserQuotaAction, USER_CREATE, USER_RW, USER_RO, USER_NONE, USER_OWNER);\n\n    verifyAllowed(setUserTableQuotaAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(setUserTableQuotaAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(setUserNamespaceQuotaAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(setUserNamespaceQuotaAction, USER_CREATE, USER_RW, USER_RO, USER_NONE,\n      USER_OWNER);\n\n    verifyAllowed(setTableQuotaAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(setTableQuotaAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(setNamespaceQuotaAction, SUPERUSER, USER_ADMIN);\n    verifyDenied(setNamespaceQuotaAction, USER_CREATE, USER_RW, USER_RO, USER_NONE, USER_OWNER);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testAppend() throws Exception {\n\n    AccessTestAction appendAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        byte[] row = TEST_ROW;\n        byte[] qualifier = TEST_QUALIFIER;\n        Put put = new Put(row);\n        put.add(TEST_FAMILY, qualifier, Bytes.toBytes(1));\n        Append append = new Append(row);\n        append.add(TEST_FAMILY, qualifier, Bytes.toBytes(2));\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE.getTableName())) {\n          t.put(put);\n          t.append(append);\n        }\n        return null;\n      }\n    };\n\n    verifyAllowed(appendAction, SUPERUSER, USER_ADMIN, USER_OWNER, USER_CREATE, USER_RW);\n    verifyDenied(appendAction, USER_RO, USER_NONE);\n  }","id":39131,"modified_method":"@Test\n  public void testAppend() throws Exception {\n\n    AccessTestAction appendAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        byte[] row = TEST_ROW;\n        byte[] qualifier = TEST_QUALIFIER;\n        Put put = new Put(row);\n        put.add(TEST_FAMILY, qualifier, Bytes.toBytes(1));\n        Append append = new Append(row);\n        append.add(TEST_FAMILY, qualifier, Bytes.toBytes(2));\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE)) {\n          t.put(put);\n          t.append(append);\n        }\n        return null;\n      }\n    };\n\n    verifyAllowed(appendAction, SUPERUSER, USER_ADMIN, USER_OWNER, USER_CREATE, USER_RW);\n    verifyDenied(appendAction, USER_RO, USER_NONE);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testPermissionList() throws Exception {\n    final TableName tableName =\n        TableName.valueOf(\"testPermissionList\");\n    final byte[] family1 = Bytes.toBytes(\"f1\");\n    final byte[] family2 = Bytes.toBytes(\"f2\");\n    final byte[] qualifier = Bytes.toBytes(\"q\");\n\n    // create table\n    Admin admin = TEST_UTIL.getHBaseAdmin();\n    if (admin.tableExists(tableName)) {\n      deleteTable(TEST_UTIL, tableName);\n    }\n    HTableDescriptor htd = new HTableDescriptor(tableName);\n    htd.addFamily(new HColumnDescriptor(family1));\n    htd.addFamily(new HColumnDescriptor(family2));\n    htd.setOwner(USER_OWNER);\n    createTable(TEST_UTIL, htd);\n\n    List<UserPermission> perms;\n    Table acl = systemUserConnection.getTable(AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName.getName());\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n    } finally {\n      acl.close();\n    }\n\n    UserPermission ownerperm = new UserPermission(\n      Bytes.toBytes(USER_OWNER.getName()), tableName, null, Action.values());\n    assertTrue(\"Owner should have all permissions on table\",\n        hasFoundUserPermission(ownerperm, perms));\n\n    User user = User.createUserForTesting(TEST_UTIL.getConfiguration(), \"user\", new String[0]);\n    byte[] userName = Bytes.toBytes(user.getShortName());\n\n    UserPermission up = new UserPermission(userName,\n      tableName, family1, qualifier, Permission.Action.READ);\n    assertFalse(\"User should not be granted permission: \" + up.toString(),\n        hasFoundUserPermission(up, perms));\n\n    // grant read permission\n    grantOnTable(TEST_UTIL, user.getShortName(),\n        tableName, family1, qualifier, Permission.Action.READ);\n\n    acl = systemUserConnection.getTable(AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName.getName());\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n    } finally {\n      acl.close();\n    }\n\n    UserPermission upToVerify = new UserPermission(\n      userName, tableName, family1, qualifier, Permission.Action.READ);\n    assertTrue(\"User should be granted permission: \" + upToVerify.toString(),\n        hasFoundUserPermission(upToVerify, perms));\n\n    upToVerify = new UserPermission(\n      userName, tableName, family1, qualifier, Permission.Action.WRITE);\n    assertFalse(\"User should not be granted permission: \" + upToVerify.toString(),\n        hasFoundUserPermission(upToVerify, perms));\n\n    // grant read+write\n    grantOnTable(TEST_UTIL, user.getShortName(),\n      tableName, family1, qualifier,\n      Permission.Action.WRITE, Permission.Action.READ);\n\n    acl = systemUserConnection.getTable(AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName.getName());\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n    } finally {\n      acl.close();\n    }\n\n    upToVerify = new UserPermission(userName, tableName, family1,\n      qualifier, Permission.Action.WRITE, Permission.Action.READ);\n    assertTrue(\"User should be granted permission: \" + upToVerify.toString(),\n        hasFoundUserPermission(upToVerify, perms));\n\n    // revoke\n    revokeFromTable(TEST_UTIL, user.getShortName(), tableName, family1, qualifier,\n        Permission.Action.WRITE, Permission.Action.READ);\n\n    acl = systemUserConnection.getTable(AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName.getName());\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n    } finally {\n      acl.close();\n    }\n\n    assertFalse(\"User should not be granted permission: \" + upToVerify.toString(),\n        hasFoundUserPermission(upToVerify, perms));\n\n    // disable table before modification\n    admin.disableTable(tableName);\n\n    User newOwner = User.createUserForTesting(conf, \"new_owner\", new String[] {});\n    htd.setOwner(newOwner);\n    admin.modifyTable(tableName, htd);\n\n    acl = systemUserConnection.getTable(AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName.getName());\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n    } finally {\n      acl.close();\n    }\n\n    UserPermission newOwnerperm = new UserPermission(\n      Bytes.toBytes(newOwner.getName()), tableName, null, Action.values());\n    assertTrue(\"New owner should have all permissions on table\",\n        hasFoundUserPermission(newOwnerperm, perms));\n\n    // delete table\n    deleteTable(TEST_UTIL, tableName);\n  }","id":39132,"modified_method":"@Test\n  public void testPermissionList() throws Exception {\n    final TableName tableName =\n        TableName.valueOf(\"testPermissionList\");\n    final byte[] family1 = Bytes.toBytes(\"f1\");\n    final byte[] family2 = Bytes.toBytes(\"f2\");\n    final byte[] qualifier = Bytes.toBytes(\"q\");\n\n    // create table\n    Admin admin = TEST_UTIL.getHBaseAdmin();\n    if (admin.tableExists(tableName)) {\n      deleteTable(TEST_UTIL, tableName);\n    }\n    HTableDescriptor htd = new HTableDescriptor(tableName);\n    htd.addFamily(new HColumnDescriptor(family1));\n    htd.addFamily(new HColumnDescriptor(family2));\n    htd.setOwner(USER_OWNER);\n    createTable(TEST_UTIL, htd);\n    try {\n      List<UserPermission> perms;\n      Table acl = systemUserConnection.getTable(AccessControlLists.ACL_TABLE_NAME);\n      try {\n        BlockingRpcChannel service = acl.coprocessorService(tableName.getName());\n        AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n        perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n      } finally {\n        acl.close();\n      }\n\n      UserPermission ownerperm =\n          new UserPermission(Bytes.toBytes(USER_OWNER.getName()), tableName, null, Action.values());\n      assertTrue(\"Owner should have all permissions on table\",\n        hasFoundUserPermission(ownerperm, perms));\n\n      User user = User.createUserForTesting(TEST_UTIL.getConfiguration(), \"user\", new String[0]);\n      byte[] userName = Bytes.toBytes(user.getShortName());\n\n      UserPermission up =\n          new UserPermission(userName, tableName, family1, qualifier, Permission.Action.READ);\n      assertFalse(\"User should not be granted permission: \" + up.toString(),\n        hasFoundUserPermission(up, perms));\n\n      // grant read permission\n      grantOnTable(TEST_UTIL, user.getShortName(), tableName, family1, qualifier,\n        Permission.Action.READ);\n\n      acl = systemUserConnection.getTable(AccessControlLists.ACL_TABLE_NAME);\n      try {\n        BlockingRpcChannel service = acl.coprocessorService(tableName.getName());\n        AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n        perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n      } finally {\n        acl.close();\n      }\n\n      UserPermission upToVerify =\n          new UserPermission(userName, tableName, family1, qualifier, Permission.Action.READ);\n      assertTrue(\"User should be granted permission: \" + upToVerify.toString(),\n        hasFoundUserPermission(upToVerify, perms));\n\n      upToVerify =\n          new UserPermission(userName, tableName, family1, qualifier, Permission.Action.WRITE);\n      assertFalse(\"User should not be granted permission: \" + upToVerify.toString(),\n        hasFoundUserPermission(upToVerify, perms));\n\n      // grant read+write\n      grantOnTable(TEST_UTIL, user.getShortName(), tableName, family1, qualifier,\n        Permission.Action.WRITE, Permission.Action.READ);\n\n      acl = systemUserConnection.getTable(AccessControlLists.ACL_TABLE_NAME);\n      try {\n        BlockingRpcChannel service = acl.coprocessorService(tableName.getName());\n        AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n        perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n      } finally {\n        acl.close();\n      }\n\n      upToVerify =\n          new UserPermission(userName, tableName, family1, qualifier, Permission.Action.WRITE,\n              Permission.Action.READ);\n      assertTrue(\"User should be granted permission: \" + upToVerify.toString(),\n        hasFoundUserPermission(upToVerify, perms));\n\n      // revoke\n      revokeFromTable(TEST_UTIL, user.getShortName(), tableName, family1, qualifier,\n        Permission.Action.WRITE, Permission.Action.READ);\n\n      acl = systemUserConnection.getTable(AccessControlLists.ACL_TABLE_NAME);\n      try {\n        BlockingRpcChannel service = acl.coprocessorService(tableName.getName());\n        AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n        perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n      } finally {\n        acl.close();\n      }\n\n      assertFalse(\"User should not be granted permission: \" + upToVerify.toString(),\n        hasFoundUserPermission(upToVerify, perms));\n\n      // disable table before modification\n      admin.disableTable(tableName);\n\n      User newOwner = User.createUserForTesting(conf, \"new_owner\", new String[] {});\n      htd.setOwner(newOwner);\n      admin.modifyTable(tableName, htd);\n\n      acl = systemUserConnection.getTable(AccessControlLists.ACL_TABLE_NAME);\n      try {\n        BlockingRpcChannel service = acl.coprocessorService(tableName.getName());\n        AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n        perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n      } finally {\n        acl.close();\n      }\n\n      UserPermission newOwnerperm =\n          new UserPermission(Bytes.toBytes(newOwner.getName()), tableName, null, Action.values());\n      assertTrue(\"New owner should have all permissions on table\",\n        hasFoundUserPermission(newOwnerperm, perms));\n    } finally {\n      // delete table\n      deleteTable(TEST_UTIL, tableName);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testDeleteColumn() throws Exception {\n    AccessTestAction action = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preDeleteColumnFamily(ObserverContext.createAndPrepare(CP_ENV, null),\n          TEST_TABLE.getTableName(), TEST_FAMILY);\n        return null;\n      }\n    };\n\n    verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER, USER_ADMIN_CF);\n    verifyDenied(action, USER_RW, USER_RO, USER_NONE);\n  }","id":39133,"modified_method":"@Test\n  public void testDeleteColumn() throws Exception {\n    AccessTestAction action = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preDeleteColumnFamily(ObserverContext.createAndPrepare(CP_ENV, null),\n          TEST_TABLE, TEST_FAMILY);\n        return null;\n      }\n    };\n\n    verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER, USER_ADMIN_CF);\n    verifyDenied(action, USER_RW, USER_RO, USER_NONE);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testTableDeletion() throws Exception {\n    User TABLE_ADMIN = User.createUserForTesting(conf, \"TestUser\", new String[0]);\n\n    // Grant TABLE ADMIN privs\n    grantOnTable(TEST_UTIL, TABLE_ADMIN.getShortName(),\n      TEST_TABLE.getTableName(), null, null,\n      Permission.Action.ADMIN);\n\n    AccessTestAction deleteTableAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Connection unmanagedConnection = ConnectionFactory.createConnection(TEST_UTIL.getConfiguration());\n        Admin admin = unmanagedConnection.getAdmin();\n        try {\n          deleteTable(TEST_UTIL, admin, TEST_TABLE.getTableName());\n        } finally {\n          admin.close();\n          unmanagedConnection.close();\n        }\n        return null;\n      }\n    };\n\n    verifyDenied(deleteTableAction, USER_RW, USER_RO, USER_NONE);\n    verifyAllowed(deleteTableAction, TABLE_ADMIN);\n  }","id":39134,"modified_method":"@Test\n  public void testTableDeletion() throws Exception {\n    User TABLE_ADMIN = User.createUserForTesting(conf, \"TestUser\", new String[0]);\n    final TableName tname = TableName.valueOf(\"testTableDeletion\");\n    createTestTable(tname);\n\n    // Grant TABLE ADMIN privs\n    grantOnTable(TEST_UTIL, TABLE_ADMIN.getShortName(), tname, null, null, Permission.Action.ADMIN);\n\n    AccessTestAction deleteTableAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Connection unmanagedConnection =\n            ConnectionFactory.createConnection(TEST_UTIL.getConfiguration());\n        Admin admin = unmanagedConnection.getAdmin();\n        try {\n          deleteTable(TEST_UTIL, admin, tname);\n        } finally {\n          admin.close();\n          unmanagedConnection.close();\n        }\n        return null;\n      }\n    };\n\n    verifyDenied(deleteTableAction, USER_RW, USER_RO, USER_NONE);\n    verifyAllowed(deleteTableAction, TABLE_ADMIN);\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testTableDescriptorsEnumeration() throws Exception {\n    User TABLE_ADMIN = User.createUserForTesting(conf, \"UserA\", new String[0]);\n\n    // Grant TABLE ADMIN privs\n    grantOnTable(TEST_UTIL, TABLE_ADMIN.getShortName(),\n      TEST_TABLE.getTableName(), null, null,\n      Permission.Action.ADMIN);\n\n    AccessTestAction listTablesAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(TEST_UTIL.getConfiguration());\n             Admin admin = conn.getAdmin()) {\n          return Arrays.asList(admin.listTables());\n        }\n      }\n    };\n\n    AccessTestAction getTableDescAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(TEST_UTIL.getConfiguration());\n            Admin admin = conn.getAdmin();) {\n          return admin.getTableDescriptor(TEST_TABLE.getTableName());\n        }\n      }\n    };\n\n    verifyAllowed(listTablesAction, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER, TABLE_ADMIN);\n    verifyIfEmptyList(listTablesAction, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(getTableDescAction, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER, TABLE_ADMIN);\n    verifyDenied(getTableDescAction, USER_RW, USER_RO, USER_NONE);\n  }","id":39135,"modified_method":"@Test\n  public void testTableDescriptorsEnumeration() throws Exception {\n    User TABLE_ADMIN = User.createUserForTesting(conf, \"UserA\", new String[0]);\n\n    // Grant TABLE ADMIN privs\n    grantOnTable(TEST_UTIL, TABLE_ADMIN.getShortName(), TEST_TABLE, null, null,\n      Permission.Action.ADMIN);\n    try {\n      AccessTestAction listTablesAction = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          try (Connection conn = ConnectionFactory.createConnection(TEST_UTIL.getConfiguration());\n              Admin admin = conn.getAdmin()) {\n            return Arrays.asList(admin.listTables());\n          }\n        }\n      };\n\n      AccessTestAction getTableDescAction = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          try (Connection conn = ConnectionFactory.createConnection(TEST_UTIL.getConfiguration());\n              Admin admin = conn.getAdmin();) {\n            return admin.getTableDescriptor(TEST_TABLE);\n          }\n        }\n      };\n\n      verifyAllowed(listTablesAction, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER, TABLE_ADMIN);\n      verifyIfEmptyList(listTablesAction, USER_RW, USER_RO, USER_NONE);\n\n      verifyAllowed(getTableDescAction, SUPERUSER, USER_ADMIN, USER_CREATE, USER_OWNER,\n        TABLE_ADMIN);\n      verifyDenied(getTableDescAction, USER_RW, USER_RO, USER_NONE);\n    } finally {\n      // Cleanup, revoke TABLE ADMIN privs\n      revokeFromTable(TEST_UTIL, TABLE_ADMIN.getShortName(), TEST_TABLE, null, null,\n        Permission.Action.ADMIN);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testPostGrantRevoke() throws Exception {\n    final TableName tableName =\n        TableName.valueOf(\"TempTable\");\n    final byte[] family1 = Bytes.toBytes(\"f1\");\n    final byte[] family2 = Bytes.toBytes(\"f2\");\n    final byte[] qualifier = Bytes.toBytes(\"q\");\n\n    // create table\n    Admin admin = TEST_UTIL.getHBaseAdmin();\n    if (admin.tableExists(tableName)) {\n      deleteTable(TEST_UTIL, tableName);\n    }\n    HTableDescriptor htd = new HTableDescriptor(tableName);\n    htd.addFamily(new HColumnDescriptor(family1));\n    htd.addFamily(new HColumnDescriptor(family2));\n    createTable(TEST_UTIL, htd);\n\n    // create temp users\n    User tblUser = User\n        .createUserForTesting(TEST_UTIL.getConfiguration(), \"tbluser\", new String[0]);\n    User gblUser = User\n        .createUserForTesting(TEST_UTIL.getConfiguration(), \"gbluser\", new String[0]);\n\n    // prepare actions:\n    AccessTestAction putActionAll = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"a\"));\n        p.add(family1, qualifier, Bytes.toBytes(\"v1\"));\n        p.add(family2, qualifier, Bytes.toBytes(\"v2\"));\n\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(tableName);) {\n          t.put(p);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction putAction1 = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"a\"));\n        p.add(family1, qualifier, Bytes.toBytes(\"v1\"));\n\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(tableName)) {\n          t.put(p);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction putAction2 = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"a\"));\n        p.add(family2, qualifier, Bytes.toBytes(\"v2\"));\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(tableName);) {\n          t.put(p);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction getActionAll = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Get g = new Get(TEST_ROW);\n        g.addFamily(family1);\n        g.addFamily(family2);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(tableName);) {\n          t.get(g);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction getAction1 = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Get g = new Get(TEST_ROW);\n        g.addFamily(family1);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(tableName)) {\n          t.get(g);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction getAction2 = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Get g = new Get(TEST_ROW);\n        g.addFamily(family2);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(tableName)) {\n          t.get(g);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction deleteActionAll = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Delete d = new Delete(TEST_ROW);\n        d.deleteFamily(family1);\n        d.deleteFamily(family2);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(tableName)) {\n          t.delete(d);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction deleteAction1 = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Delete d = new Delete(TEST_ROW);\n        d.deleteFamily(family1);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(tableName)) {\n          t.delete(d);\n        }\n        return null;\n      }\n    };\n\n    AccessTestAction deleteAction2 = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        Delete d = new Delete(TEST_ROW);\n        d.deleteFamily(family2);\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(tableName)) {\n          t.delete(d);\n        }\n        return null;\n      }\n    };\n\n    // initial check:\n    verifyDenied(tblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // grant table read permission\n    grantGlobal(TEST_UTIL, gblUser.getShortName(),\n      Permission.Action.READ);\n    grantOnTable(TEST_UTIL, tblUser.getShortName(),\n      tableName, null, null,\n      Permission.Action.READ);\n\n    // check\n    verifyAllowed(tblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyAllowed(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // grant table write permission while revoking read permissions\n    grantGlobal(TEST_UTIL, gblUser.getShortName(),\n      Permission.Action.WRITE);\n    grantOnTable(TEST_UTIL, tblUser.getShortName(),\n      tableName, null, null,\n      Permission.Action.WRITE);\n\n    verifyDenied(tblUser, getActionAll, getAction1, getAction2);\n    verifyAllowed(tblUser, putActionAll, putAction1, putAction2);\n    verifyAllowed(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyAllowed(gblUser, putActionAll, putAction1, putAction2);\n    verifyAllowed(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // revoke table permissions\n    revokeGlobal(TEST_UTIL, gblUser.getShortName());\n    revokeFromTable(TEST_UTIL, tblUser.getShortName(),\n      tableName, null, null);\n\n    verifyDenied(tblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // grant column family read permission\n    grantGlobal(TEST_UTIL, gblUser.getShortName(),\n      Permission.Action.READ);\n    grantOnTable(TEST_UTIL, tblUser.getShortName(),\n      tableName, family1, null, Permission.Action.READ);\n\n    // Access should be denied for family2\n    verifyAllowed(tblUser, getActionAll, getAction1);\n    verifyDenied(tblUser, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyAllowed(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // grant column family write permission\n    grantGlobal(TEST_UTIL, gblUser.getShortName(),\n      Permission.Action.WRITE);\n    grantOnTable(TEST_UTIL, tblUser.getShortName(),\n      tableName, family2, null, Permission.Action.WRITE);\n\n    // READ from family1, WRITE to family2 are allowed\n    verifyAllowed(tblUser, getActionAll, getAction1);\n    verifyAllowed(tblUser, putAction2, deleteAction2);\n    verifyDenied(tblUser, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1);\n\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyAllowed(gblUser, putActionAll, putAction1, putAction2);\n    verifyAllowed(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // revoke column family permission\n    revokeGlobal(TEST_UTIL, gblUser.getShortName());\n    revokeFromTable(TEST_UTIL, tblUser.getShortName(), tableName, family2, null);\n\n    // Revoke on family2 should not have impact on family1 permissions\n    verifyAllowed(tblUser, getActionAll, getAction1);\n    verifyDenied(tblUser, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // Should not have access as global permissions are completely revoked\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // delete table\n    deleteTable(TEST_UTIL, tableName);\n  }","id":39136,"modified_method":"@Test\n  public void testPostGrantRevoke() throws Exception {\n    final TableName tableName =\n        TableName.valueOf(\"TempTable\");\n    final byte[] family1 = Bytes.toBytes(\"f1\");\n    final byte[] family2 = Bytes.toBytes(\"f2\");\n    final byte[] qualifier = Bytes.toBytes(\"q\");\n\n    // create table\n    Admin admin = TEST_UTIL.getHBaseAdmin();\n    if (admin.tableExists(tableName)) {\n      deleteTable(TEST_UTIL, tableName);\n    }\n    HTableDescriptor htd = new HTableDescriptor(tableName);\n    htd.addFamily(new HColumnDescriptor(family1));\n    htd.addFamily(new HColumnDescriptor(family2));\n    createTable(TEST_UTIL, htd);\n    try {\n      // create temp users\n      User tblUser =\n          User.createUserForTesting(TEST_UTIL.getConfiguration(), \"tbluser\", new String[0]);\n      User gblUser =\n          User.createUserForTesting(TEST_UTIL.getConfiguration(), \"gbluser\", new String[0]);\n\n      // prepare actions:\n      AccessTestAction putActionAll = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Put p = new Put(Bytes.toBytes(\"a\"));\n          p.add(family1, qualifier, Bytes.toBytes(\"v1\"));\n          p.add(family2, qualifier, Bytes.toBytes(\"v2\"));\n\n          try (Connection conn = ConnectionFactory.createConnection(conf);\n              Table t = conn.getTable(tableName);) {\n            t.put(p);\n          }\n          return null;\n        }\n      };\n\n      AccessTestAction putAction1 = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Put p = new Put(Bytes.toBytes(\"a\"));\n          p.add(family1, qualifier, Bytes.toBytes(\"v1\"));\n\n          try (Connection conn = ConnectionFactory.createConnection(conf);\n              Table t = conn.getTable(tableName)) {\n            t.put(p);\n          }\n          return null;\n        }\n      };\n\n      AccessTestAction putAction2 = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Put p = new Put(Bytes.toBytes(\"a\"));\n          p.add(family2, qualifier, Bytes.toBytes(\"v2\"));\n          try (Connection conn = ConnectionFactory.createConnection(conf);\n              Table t = conn.getTable(tableName);) {\n            t.put(p);\n          }\n          return null;\n        }\n      };\n\n      AccessTestAction getActionAll = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Get g = new Get(TEST_ROW);\n          g.addFamily(family1);\n          g.addFamily(family2);\n          try (Connection conn = ConnectionFactory.createConnection(conf);\n              Table t = conn.getTable(tableName);) {\n            t.get(g);\n          }\n          return null;\n        }\n      };\n\n      AccessTestAction getAction1 = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Get g = new Get(TEST_ROW);\n          g.addFamily(family1);\n          try (Connection conn = ConnectionFactory.createConnection(conf);\n              Table t = conn.getTable(tableName)) {\n            t.get(g);\n          }\n          return null;\n        }\n      };\n\n      AccessTestAction getAction2 = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Get g = new Get(TEST_ROW);\n          g.addFamily(family2);\n          try (Connection conn = ConnectionFactory.createConnection(conf);\n              Table t = conn.getTable(tableName)) {\n            t.get(g);\n          }\n          return null;\n        }\n      };\n\n      AccessTestAction deleteActionAll = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Delete d = new Delete(TEST_ROW);\n          d.deleteFamily(family1);\n          d.deleteFamily(family2);\n          try (Connection conn = ConnectionFactory.createConnection(conf);\n              Table t = conn.getTable(tableName)) {\n            t.delete(d);\n          }\n          return null;\n        }\n      };\n\n      AccessTestAction deleteAction1 = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Delete d = new Delete(TEST_ROW);\n          d.deleteFamily(family1);\n          try (Connection conn = ConnectionFactory.createConnection(conf);\n              Table t = conn.getTable(tableName)) {\n            t.delete(d);\n          }\n          return null;\n        }\n      };\n\n      AccessTestAction deleteAction2 = new AccessTestAction() {\n        @Override\n        public Object run() throws Exception {\n          Delete d = new Delete(TEST_ROW);\n          d.deleteFamily(family2);\n          try (Connection conn = ConnectionFactory.createConnection(conf);\n              Table t = conn.getTable(tableName)) {\n            t.delete(d);\n          }\n          return null;\n        }\n      };\n\n      // initial check:\n      verifyDenied(tblUser, getActionAll, getAction1, getAction2);\n      verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n      verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n      verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n      verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n      verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n      // grant table read permission\n      grantGlobal(TEST_UTIL, gblUser.getShortName(), Permission.Action.READ);\n      grantOnTable(TEST_UTIL, tblUser.getShortName(), tableName, null, null, Permission.Action.READ);\n\n      // check\n      verifyAllowed(tblUser, getActionAll, getAction1, getAction2);\n      verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n      verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n      verifyAllowed(gblUser, getActionAll, getAction1, getAction2);\n      verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n      verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n      // grant table write permission while revoking read permissions\n      grantGlobal(TEST_UTIL, gblUser.getShortName(), Permission.Action.WRITE);\n      grantOnTable(TEST_UTIL, tblUser.getShortName(), tableName, null, null,\n        Permission.Action.WRITE);\n\n      verifyDenied(tblUser, getActionAll, getAction1, getAction2);\n      verifyAllowed(tblUser, putActionAll, putAction1, putAction2);\n      verifyAllowed(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n      verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n      verifyAllowed(gblUser, putActionAll, putAction1, putAction2);\n      verifyAllowed(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n      // revoke table permissions\n      revokeGlobal(TEST_UTIL, gblUser.getShortName());\n      revokeFromTable(TEST_UTIL, tblUser.getShortName(), tableName, null, null);\n\n      verifyDenied(tblUser, getActionAll, getAction1, getAction2);\n      verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n      verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n      verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n      verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n      verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n      // grant column family read permission\n      grantGlobal(TEST_UTIL, gblUser.getShortName(), Permission.Action.READ);\n      grantOnTable(TEST_UTIL, tblUser.getShortName(), tableName, family1, null,\n        Permission.Action.READ);\n\n      // Access should be denied for family2\n      verifyAllowed(tblUser, getActionAll, getAction1);\n      verifyDenied(tblUser, getAction2);\n      verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n      verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n      verifyAllowed(gblUser, getActionAll, getAction1, getAction2);\n      verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n      verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n      // grant column family write permission\n      grantGlobal(TEST_UTIL, gblUser.getShortName(), Permission.Action.WRITE);\n      grantOnTable(TEST_UTIL, tblUser.getShortName(), tableName, family2, null,\n        Permission.Action.WRITE);\n\n      // READ from family1, WRITE to family2 are allowed\n      verifyAllowed(tblUser, getActionAll, getAction1);\n      verifyAllowed(tblUser, putAction2, deleteAction2);\n      verifyDenied(tblUser, getAction2);\n      verifyDenied(tblUser, putActionAll, putAction1);\n      verifyDenied(tblUser, deleteActionAll, deleteAction1);\n\n      verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n      verifyAllowed(gblUser, putActionAll, putAction1, putAction2);\n      verifyAllowed(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n      // revoke column family permission\n      revokeGlobal(TEST_UTIL, gblUser.getShortName());\n      revokeFromTable(TEST_UTIL, tblUser.getShortName(), tableName, family2, null);\n\n      // Revoke on family2 should not have impact on family1 permissions\n      verifyAllowed(tblUser, getActionAll, getAction1);\n      verifyDenied(tblUser, getAction2);\n      verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n      verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n      // Should not have access as global permissions are completely revoked\n      verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n      verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n      verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n    } finally {\n      // delete table\n      deleteTable(TEST_UTIL, tableName);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testAccessControlClientGrantRevokeOnNamespace() throws Exception {\n    // Create user for testing, who has no READ privileges by default.\n    User testNS = User.createUserForTesting(conf, \"testNS\", new String[0]);\n    AccessTestAction getAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE.getTableName());) {\n          return t.get(new Get(TEST_ROW));\n        }\n      }\n    };\n\n    verifyDenied(getAction, testNS);\n\n    // Grant namespace READ to testNS, this should supersede any table permissions\n    try {\n      grantOnNamespaceUsingAccessControlClient(TEST_UTIL, systemUserConnection, testNS.getShortName(),\n          TEST_TABLE.getTableName().getNamespaceAsString(), Permission.Action.READ);\n    } catch (Throwable e) {\n      LOG.error(\"error during call of AccessControlClient.grant. \", e);\n    }\n\n    // Now testNS should be able to read also\n    verifyAllowed(getAction, testNS);\n\n    // Revoke namespace READ to testNS, this should supersede any table permissions\n    try {\n      revokeFromNamespaceUsingAccessControlClient(TEST_UTIL, systemUserConnection, testNS.getShortName(),\n          TEST_TABLE.getTableName().getNamespaceAsString(), Permission.Action.READ);\n    } catch (Throwable e) {\n      LOG.error(\"error during call of AccessControlClient.revoke \", e);\n    }\n\n    // Now testNS shouldn't be able read\n    verifyDenied(getAction, testNS);\n  }","id":39137,"modified_method":"@Test\n  public void testAccessControlClientGrantRevokeOnNamespace() throws Exception {\n    // Create user for testing, who has no READ privileges by default.\n    User testNS = User.createUserForTesting(conf, \"testNS\", new String[0]);\n    AccessTestAction getAction = new AccessTestAction() {\n      @Override\n      public Object run() throws Exception {\n        try(Connection conn = ConnectionFactory.createConnection(conf);\n            Table t = conn.getTable(TEST_TABLE);) {\n          return t.get(new Get(TEST_ROW));\n        }\n      }\n    };\n\n    verifyDenied(getAction, testNS);\n\n    String userName = testNS.getShortName();\n    String namespace = TEST_TABLE.getNamespaceAsString();\n    // Grant namespace READ to testNS, this should supersede any table permissions\n    try {\n      grantOnNamespaceUsingAccessControlClient(TEST_UTIL, systemUserConnection, userName,\n        namespace, Permission.Action.READ);\n    } catch (Throwable e) {\n      LOG.error(\"error during call of AccessControlClient.grant. \", e);\n    }\n    try {\n      // Now testNS should be able to read also\n      verifyAllowed(getAction, testNS);\n\n      // Revoke namespace READ to testNS, this should supersede any table permissions\n      try {\n        revokeFromNamespaceUsingAccessControlClient(TEST_UTIL, systemUserConnection, userName,\n          namespace, Permission.Action.READ);\n      } catch (Throwable e) {\n        LOG.error(\"error during call of AccessControlClient.revoke \", e);\n      }\n\n      // Now testNS shouldn't be able read\n      verifyDenied(getAction, testNS);\n    } finally {\n      revokeFromNamespace(TEST_UTIL, userName, namespace, Permission.Action.READ);\n    }\n  }","commit_id":"7662980798c82a239c4d446c290595836ed3a456","url":"https://github.com/apache/hbase"},{"original_method":"/**\n     * Instantiates a new event form.\n     */\n    public EventForm() {\n        setCaption(\"Event Detail\");\n        eventLayout.setSpacing(true);\n\n        eventUei.setRequired(true);\n        eventUei.setWidth(\"100%\");\n        eventLayout.addComponent(eventUei);\n\n        eventLabel.setRequired(true);\n        eventLabel.setWidth(\"100%\");\n        eventLayout.addComponent(eventLabel);\n\n        eventDescr.setWidth(\"100%\");\n        eventDescr.setRows(10);\n        eventDescr.setRequired(true);\n        eventDescr.setNullRepresentation(\"\");\n        eventLayout.addComponent(eventDescr);\n\n        logMsgDest.addItem(\"logndisplay\");\n        logMsgDest.addItem(\"logonly\");\n        logMsgDest.addItem(\"suppress\");\n        logMsgDest.addItem(\"donotpersist\");\n        logMsgDest.addItem(\"discardtraps\");\n        logMsgDest.setNullSelectionAllowed(false);\n        logMsgDest.setRequired(true);\n        eventLayout.addComponent(logMsgDest);\n\n        logMsgContent.setWidth(\"100%\");\n        logMsgContent.setRows(10);\n        logMsgContent.setRequired(true);\n        logMsgContent.setNullRepresentation(\"\");\n        eventLayout.addComponent(logMsgContent);\n\n        alarmDataAlarmType.addItem(new Integer(1));\n        alarmDataAlarmType.addItem(new Integer(2));\n        alarmDataAlarmType.addItem(new Integer(3));\n        alarmDataAlarmType.setDescription(\"<b>1<\/b> to be a problem that has a possible resolution, alarm-type set to <b>2<\/b> to be a resolution event, and alarm-type set to <b>3<\/b> for events that have no possible resolution\");\n        alarmDataAlarmType.setNullSelectionAllowed(false);\n        eventLayout.addComponent(alarmDataAlarmType);\n\n        alarmDataAutoClean.setWidth(\"100%\");\n        eventLayout.addComponent(alarmDataAutoClean);\n\n        alarmDataReductionKey.setWidth(\"100%\");\n        alarmDataReductionKey.setNullRepresentation(\"\");\n        eventLayout.addComponent(alarmDataReductionKey);\n\n        alarmDataClearKey.setWidth(\"100%\");\n        alarmDataClearKey.setNullRepresentation(\"\");\n        eventLayout.addComponent(alarmDataClearKey);\n\n        for (String sev : OnmsSeverity.names()) {\n            eventSeverity.addItem(sev.substring(0, 1).toUpperCase() + sev.substring(1).toLowerCase());\n        }\n        eventSeverity.setNullSelectionAllowed(false);\n        eventSeverity.setRequired(true);\n        eventLayout.addComponent(eventSeverity);\n\n        eventDescr.setWidth(\"100%\");\n        eventDescr.setRows(10);\n        eventDescr.setRequired(true);\n        eventDescr.setNullRepresentation(\"\");\n        eventLayout.addComponent(eventDescr);\n\n        eventOperInstruct.setWidth(\"100%\");\n        eventOperInstruct.setRows(10);\n        eventOperInstruct.setNullRepresentation(\"\");\n        eventLayout.addComponent(eventOperInstruct);\n\n        eventLayout.addComponent(maskElements);\n        eventLayout.addComponent(maskVarbinds);\n        eventLayout.addComponent(varbindsDecodes);\n\n        setEvent(createBasicEvent());\n        eventEditor.bindMemberFields(this);\n\n        setCompositionRoot(eventLayout);\n    }","id":39138,"modified_method":"/**\n     * Instantiates a new event form.\n     */\n    public EventForm() {\n        setCaption(\"Event Detail\");\n        eventLayout.setSpacing(true);\n\n        eventUei.setRequired(true);\n        eventUei.setWidth(\"100%\");\n        eventLayout.addComponent(eventUei);\n\n        eventLabel.setRequired(true);\n        eventLabel.setWidth(\"100%\");\n        eventLayout.addComponent(eventLabel);\n\n        eventDescr.setWidth(\"100%\");\n        eventDescr.setRows(10);\n        eventDescr.setRequired(true);\n        eventDescr.setNullRepresentation(\"\");\n        eventLayout.addComponent(eventDescr);\n\n        logMsgDest.addItem(\"logndisplay\");\n        logMsgDest.addItem(\"logonly\");\n        logMsgDest.addItem(\"suppress\");\n        logMsgDest.addItem(\"donotpersist\");\n        logMsgDest.addItem(\"discardtraps\");\n        logMsgDest.setNullSelectionAllowed(false);\n        logMsgDest.setRequired(true);\n        eventLayout.addComponent(logMsgDest);\n\n        logMsgContent.setWidth(\"100%\");\n        logMsgContent.setRows(10);\n        logMsgContent.setRequired(true);\n        logMsgContent.setNullRepresentation(\"\");\n        eventLayout.addComponent(logMsgContent);\n\n        alarmDataAlarmType.addItem(new Integer(1));\n        alarmDataAlarmType.addItem(new Integer(2));\n        alarmDataAlarmType.addItem(new Integer(3));\n        alarmDataAlarmType.setDescription(\"<b>1<\/b> to be a problem that has a possible resolution, alarm-type set to <b>2<\/b> to be a resolution event, and alarm-type set to <b>3<\/b> for events that have no possible resolution\");\n        alarmDataAlarmType.setNullSelectionAllowed(false);\n        eventLayout.addComponent(alarmDataAlarmType);\n\n        alarmDataAutoClean.setWidth(\"100%\");\n        eventLayout.addComponent(alarmDataAutoClean);\n\n        alarmDataReductionKey.setWidth(\"100%\");\n        alarmDataReductionKey.setNullRepresentation(\"\");\n        eventLayout.addComponent(alarmDataReductionKey);\n\n        alarmDataClearKey.setWidth(\"100%\");\n        alarmDataClearKey.setNullRepresentation(\"\");\n        eventLayout.addComponent(alarmDataClearKey);\n\n        for (String sev : OnmsSeverity.names()) {\n            eventSeverity.addItem(sev.substring(0, 1).toUpperCase() + sev.substring(1).toLowerCase());\n        }\n        eventSeverity.setNullSelectionAllowed(false);\n        eventSeverity.setRequired(true);\n        eventLayout.addComponent(eventSeverity);\n\n        eventDescr.setWidth(\"100%\");\n        eventDescr.setRows(10);\n        eventDescr.setRequired(true);\n        eventDescr.setNullRepresentation(\"\");\n        eventLayout.addComponent(eventDescr);\n\n        eventOperInstruct.setWidth(\"100%\");\n        eventOperInstruct.setRows(10);\n        eventOperInstruct.setNullRepresentation(\"\");\n        eventLayout.addComponent(eventOperInstruct);\n\n        eventLayout.addComponent(maskElements);\n        eventLayout.addComponent(maskVarbinds);\n        eventLayout.addComponent(varbindsDecodes);\n\n        setEvent(createBasicEvent());\n\n        eventEditor.bind(eventUei, \"uei\");\n        eventEditor.bind(eventLabel, \"eventLabel\");\n        eventEditor.bind(eventDescr, \"descr\");\n        eventEditor.bind(logMsgDest, \"logmsg.dest\");\n        eventEditor.bind(logMsgContent, \"logmsg.content\");\n        eventEditor.bind(eventSeverity, \"severity\");\n        eventEditor.bind(alarmDataAlarmType, \"alarmData.alarmType\");\n        eventEditor.bind(alarmDataAutoClean, \"alarmData.autoClean\");\n        eventEditor.bind(alarmDataReductionKey, \"alarmData.reductionKey\");\n        eventEditor.bind(alarmDataClearKey, \"alarmData.clearKey\");\n        eventEditor.bind(eventOperInstruct, \"operinstruct\");\n        eventEditor.bind(maskElements, \"mask.maskelementCollection\");\n        eventEditor.bind(maskVarbinds, \"mask.varbindCollection\");\n        eventEditor.bind(varbindsDecodes, \"varbindsdecodeCollection\");\n\n        setCompositionRoot(eventLayout);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Sets the event.\n     *\n     * @param event the new OpenNMS event\n     */\n    public void setEvent(org.opennms.netmgt.xml.eventconf.Event event) {\n        // Normalize the Event Content (required to avoid UI problems)\n        if (event.getMask() == null) {\n            event.setMask(new Mask());\n        }\n        if (event.getAlarmData() == null) {\n            event.setAlarmData(new AlarmData());\n        }\n        // Create the BeanItem\n        BeanItem<org.opennms.netmgt.xml.eventconf.Event> item = new BeanItem<org.opennms.netmgt.xml.eventconf.Event>(event);\n        item.addItemProperty(\"logMsgContent\", new NestedMethodProperty<String>(item.getBean(), \"logmsg.content\"));\n        item.addItemProperty(\"logMsgDest\", new NestedMethodProperty<String>(item.getBean(), \"logmsg.dest\"));\n        item.addItemProperty(\"alarmDataReductionKey\", new NestedMethodProperty<String>(item.getBean(), \"alarmData.ReductionKey\"));\n        item.addItemProperty(\"alarmDataClearKey\", new NestedMethodProperty<String>(item.getBean(), \"alarmData.ClearKey\"));\n        item.addItemProperty(\"alarmDataAlarmType\", new NestedMethodProperty<String>(item.getBean(), \"alarmData.AlarmType\"));\n        item.addItemProperty(\"alarmDataAutoClean\", new NestedMethodProperty<String>(item.getBean(), \"alarmData.AutoClean\"));\n        item.addItemProperty(\"maskElements\", new NestedMethodProperty<String>(item.getBean(), \"mask.maskelementCollection\"));\n        item.addItemProperty(\"maskVarbinds\", new NestedMethodProperty<String>(item.getBean(), \"mask.varbindCollection\"));\n        eventEditor.setItemDataSource(item);\n    }","id":39139,"modified_method":"/**\n     * Sets the event.\n     *\n     * @param event the new OpenNMS event\n     */\n    public void setEvent(org.opennms.netmgt.xml.eventconf.Event event) {\n        // Normalize the Event Content (required to avoid UI problems)\n        if (event.getMask() == null) {\n            event.setMask(new Mask());\n        }\n        if (event.getAlarmData() == null) {\n            event.setAlarmData(new AlarmData());\n        }\n        eventEditor.setItemDataSource(event);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Gets the event.\n     *\n     * @return the OpenNMS event\n     */\n    @SuppressWarnings(\"unchecked\")\n    public org.opennms.netmgt.xml.eventconf.Event getEvent() {\n        return ((BeanItem<org.opennms.netmgt.xml.eventconf.Event>) eventEditor.getItemDataSource()).getBean();\n    }","id":39140,"modified_method":"/**\n     * Gets the event.\n     *\n     * @return the OpenNMS event\n     */\n    public org.opennms.netmgt.xml.eventconf.Event getEvent() {\n        return eventEditor.getItemDataSource().getBean();\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Instantiates a new event panel.\n     *\n     * @param eventConfDao the OpenNMS Events Configuration DAO\n     * @param eventProxy the OpenNMS Events Proxy\n     * @param eventFile the events file\n     * @param events the OpenNMS events object\n     * @param logger the logger object\n     */\n    public EventPanel(final EventConfDao eventConfDao, final EventProxy eventProxy, final File eventFile, final Events events, final Logger logger) {\n\n        if (eventProxy == null) {\n            throw new RuntimeException(\"eventProxy cannot be null.\");\n        }\n\n        if (eventConfDao == null) {\n            throw new RuntimeException(\"eventConfDao cannot be null.\");\n        }\n\n        this.eventConfDao = eventConfDao;\n        this.eventProxy = eventProxy;\n        this.eventFile = eventFile;\n\n        setCaption(\"Events\");\n        addStyleName(\"light\");\n\n        final HorizontalLayout topToolbar = new HorizontalLayout();\n        topToolbar.addComponent(new Button(\"Save Events File\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(ClickEvent event) {\n                processEvents(events, logger);\n            }\n        }));\n        topToolbar.addComponent(new Button(\"Cancel\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                logger.info(\"Event processing has been canceled\");\n                cancel();\n            }\n        }));\n\n        final EventTable eventTable = new EventTable(events.getEventCollection());\n\n        final EventForm eventForm = new EventForm();\n        eventForm.setVisible(false);\n\n        final EditorToolbar bottomToolbar = new EditorToolbar() {\n            @Override\n            public void save() {\n                org.opennms.netmgt.xml.eventconf.Event event = eventForm.getEvent();\n                logger.info(\"Event \" + event.getUei() + \" has been \" + (isNew ? \"created.\" : \"updated.\"));\n                try {\n                    eventForm.getFieldGroup().commit();\n                    eventForm.setReadOnly(true);\n                    eventTable.refreshRowCache();\n                } catch (CommitException e) {\n                    String msg = \"Can't save the changes: \" + e.getMessage();\n                    logger.error(msg);\n                    Notification.show(msg, Notification.Type.ERROR_MESSAGE);\n                }\n            }\n            @Override\n            public void delete() {\n                Object eventId = eventTable.getValue();\n                if (eventId != null) {\n                    org.opennms.netmgt.xml.eventconf.Event event = eventTable.getEvent(eventId);\n                    logger.info(\"Event \" + event.getUei() + \" has been removed.\");\n                    eventTable.select(null);\n                    eventTable.removeItem(eventId);\n                    eventTable.refreshRowCache();\n                }\n            }\n            @Override\n            public void edit() {\n                eventForm.setReadOnly(false);\n            }\n            @Override\n            public void cancel() {\n                eventForm.getFieldGroup().discard();\n                eventForm.setReadOnly(true);\n            }\n        };\n        bottomToolbar.setVisible(false);\n\n        eventTable.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(ValueChangeEvent event) {\n                Object eventId = eventTable.getValue();\n                if (eventId != null) {\n                    eventForm.setEvent(eventTable.getEvent(eventId));\n                }\n                eventForm.setReadOnly(true);\n                eventForm.setVisible(eventId != null);\n                bottomToolbar.setReadOnly(true);\n                bottomToolbar.setVisible(eventId != null);\n            }\n        });   \n\n        final Button add = new Button(\"Add Event\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(ClickEvent event) {\n                eventTable.addEvent(eventForm.createBasicEvent());\n                eventForm.setReadOnly(false);\n                bottomToolbar.setReadOnly(false);\n                setIsNew(true);\n            }\n        });\n\n        final VerticalLayout mainLayout = new VerticalLayout();\n        mainLayout.setSpacing(true);\n        mainLayout.setMargin(true);\n        mainLayout.addComponent(topToolbar);\n        mainLayout.addComponent(eventTable);\n        mainLayout.addComponent(add);\n        mainLayout.addComponent(eventForm);\n        mainLayout.addComponent(bottomToolbar);\n        mainLayout.setComponentAlignment(topToolbar, Alignment.MIDDLE_RIGHT);\n        mainLayout.setComponentAlignment(add, Alignment.MIDDLE_RIGHT);\n\n        setContent(mainLayout);\n    }","id":39141,"modified_method":"/**\n     * Instantiates a new event panel.\n     *\n     * @param eventConfDao the OpenNMS Events Configuration DAO\n     * @param eventProxy the OpenNMS Events Proxy\n     * @param eventFile the events file\n     * @param events the OpenNMS events object\n     * @param logger the logger object\n     */\n    public EventPanel(final EventConfDao eventConfDao, final EventProxy eventProxy, final File eventFile, final Events events, final Logger logger) {\n\n        if (eventProxy == null) {\n            throw new RuntimeException(\"eventProxy cannot be null.\");\n        }\n\n        if (eventConfDao == null) {\n            throw new RuntimeException(\"eventConfDao cannot be null.\");\n        }\n\n        this.eventConfDao = eventConfDao;\n        this.eventProxy = eventProxy;\n        this.eventFile = eventFile;\n\n        setCaption(\"Events\");\n        addStyleName(\"light\");\n\n        final HorizontalLayout topToolbar = new HorizontalLayout();\n        topToolbar.addComponent(new Button(\"Save Events File\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(ClickEvent event) {\n                processEvents(events, logger);\n            }\n        }));\n        topToolbar.addComponent(new Button(\"Cancel\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                logger.info(\"Event processing has been canceled\");\n                cancel();\n            }\n        }));\n\n        final EventTable eventTable = new EventTable(events.getEventCollection());\n\n        final EventForm eventForm = new EventForm();\n        eventForm.setVisible(false);\n\n        final EditorToolbar bottomToolbar = new EditorToolbar() {\n            @Override\n            public void save() {\n                org.opennms.netmgt.xml.eventconf.Event event = eventForm.getEvent();\n                logger.info(\"Event \" + event.getUei() + \" has been \" + (isNew ? \"created.\" : \"updated.\"));\n                try {\n                    eventForm.commit();\n                    eventForm.setReadOnly(true);\n                    eventTable.refreshRowCache();\n                } catch (CommitException e) {\n                    String msg = \"Can't save the changes: \" + e.getMessage();\n                    logger.error(msg);\n                    Notification.show(msg, Notification.Type.ERROR_MESSAGE);\n                }\n            }\n            @Override\n            public void delete() {\n                Object eventId = eventTable.getValue();\n                if (eventId != null) {\n                    org.opennms.netmgt.xml.eventconf.Event event = eventTable.getEvent(eventId);\n                    logger.info(\"Event \" + event.getUei() + \" has been removed.\");\n                    eventTable.select(null);\n                    eventTable.removeItem(eventId);\n                    eventTable.refreshRowCache();\n                }\n            }\n            @Override\n            public void edit() {\n                eventForm.setReadOnly(false);\n            }\n            @Override\n            public void cancel() {\n                eventForm.discard();\n                eventForm.setReadOnly(true);\n            }\n        };\n        bottomToolbar.setVisible(false);\n\n        eventTable.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(ValueChangeEvent event) {\n                Object eventId = eventTable.getValue();\n                if (eventId != null) {\n                    eventForm.setEvent(eventTable.getEvent(eventId));\n                }\n                eventForm.setReadOnly(true);\n                eventForm.setVisible(eventId != null);\n                bottomToolbar.setReadOnly(true);\n                bottomToolbar.setVisible(eventId != null);\n            }\n        });   \n\n        final Button add = new Button(\"Add Event\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(ClickEvent event) {\n                eventTable.addEvent(eventForm.createBasicEvent());\n                eventForm.setReadOnly(false);\n                bottomToolbar.setReadOnly(false);\n                setIsNew(true);\n            }\n        });\n\n        final VerticalLayout mainLayout = new VerticalLayout();\n        mainLayout.setSpacing(true);\n        mainLayout.setMargin(true);\n        mainLayout.addComponent(topToolbar);\n        mainLayout.addComponent(eventTable);\n        mainLayout.addComponent(add);\n        mainLayout.addComponent(eventForm);\n        mainLayout.addComponent(bottomToolbar);\n        mainLayout.setComponentAlignment(topToolbar, Alignment.MIDDLE_RIGHT);\n        mainLayout.setComponentAlignment(add, Alignment.MIDDLE_RIGHT);\n\n        setContent(mainLayout);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Instantiates a new group form.\n     *\n     * @param resourceTypes the resource types\n     */\n    public GroupForm(final List<String> resourceTypes) {\n        setCaption(\"MIB Group Detail\");\n        groupLayout.setMargin(true);\n\n        name.setRequired(true);\n        name.setWidth(\"100%\");\n        groupLayout.addComponent(name);\n\n        ifType.addItem(\"ignore\");\n        ifType.addItem(\"all\");\n        ifType.setNullSelectionAllowed(false);\n        ifType.setRequired(true);\n        ifType.setImmediate(true);\n        ifType.setNewItemsAllowed(true);\n        groupLayout.addComponent(ifType);\n\n        mibObjs = new MibObjField(resourceTypes);\n        mibObjs.setCaption(\"MIB Objects\");\n        mibObjs.setRequired(true);\n        mibObjs.setImmediate(true);\n        mibObjs.setWidth(\"100%\");\n        groupLayout.addComponent(mibObjs);\n\n        setGroup(createBasicGroup());\n        groupEditor.bindMemberFields(this);\n\n        setCompositionRoot(groupLayout);\n    }","id":39142,"modified_method":"/**\n     * Instantiates a new group form.\n     *\n     * @param resourceTypes the resource types\n     */\n    public GroupForm(final List<String> resourceTypes) {\n        setCaption(\"MIB Group Detail\");\n        groupLayout.setMargin(true);\n\n        name.setRequired(true);\n        name.setWidth(\"100%\");\n        groupLayout.addComponent(name);\n\n        ifType.addItem(\"ignore\");\n        ifType.addItem(\"all\");\n        ifType.setNullSelectionAllowed(false);\n        ifType.setRequired(true);\n        ifType.setImmediate(true);\n        ifType.setNewItemsAllowed(true);\n        groupLayout.addComponent(ifType);\n\n        mibObjs = new MibObjField(resourceTypes);\n        mibObjs.setCaption(\"MIB Objects\");\n        mibObjs.setRequired(true);\n        mibObjs.setImmediate(true);\n        mibObjs.setWidth(\"100%\");\n        groupLayout.addComponent(mibObjs);\n\n        setGroup(createBasicGroup());\n\n        groupEditor.bind(name, \"name\");\n        groupEditor.bind(ifType, \"ifType\");\n        groupEditor.bind(mibObjs, \"mibObjs\");\n\n        setCompositionRoot(groupLayout);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Sets the group.\n     *\n     * @param group the new group\n     */\n    public void setGroup(Group group) {\n        groupEditor.setItemDataSource(new BeanItem<Group>(group));\n    }","id":39143,"modified_method":"/**\n     * Sets the group.\n     *\n     * @param group the new group\n     */\n    public void setGroup(Group group) {\n        groupEditor.setItemDataSource(group);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Gets the group.\n     *\n     * @return the group\n     */\n    @SuppressWarnings(\"unchecked\")\n    public Group getGroup() {\n        return ((BeanItem<Group>) groupEditor.getItemDataSource()).getBean();\n    }","id":39144,"modified_method":"/**\n     * Gets the group.\n     *\n     * @return the group\n     */\n    public Group getGroup() {\n        return groupEditor.getItemDataSource().getBean();\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Instantiates a new group panel.\n     *\n     * @param dataCollectionConfigDao the OpenNMS Data Collection Configuration DAO\n     * @param source the OpenNMS Data Collection Group object\n     * @param logger the logger object\n     */\n    public GroupPanel(final DataCollectionConfigDao dataCollectionConfigDao, final DatacollectionGroup source, final Logger logger) {\n\n        if (dataCollectionConfigDao == null) {\n            throw new RuntimeException(\"dataCollectionConfigDao cannot be null.\");\n        }\n\n        if (source == null) {\n            throw new RuntimeException(\"source cannot be null.\");\n        }\n\n        addStyleName(\"light\");\n\n        // Adding all resource types already defined on this source\n        final List<String> resourceTypes = new ArrayList<String>();\n        for (ResourceType type : source.getResourceTypes()) {\n            resourceTypes.add(type.getName());\n        }\n\n        // Adding all defined resource types\n        resourceTypes.addAll(dataCollectionConfigDao.getConfiguredResourceTypes().keySet());\n\n        groupTable = new GroupTable(source.getGroups());\n\n        final GroupForm groupForm = new GroupForm(resourceTypes);\n        groupForm.setVisible(false);\n\n        final EditorToolbar bottomToolbar = new EditorToolbar() {\n            @Override\n            public void save() {\n                Group group = groupForm.getGroup();\n                logger.info(\"SNMP Group \" + group.getName() + \" has been \" + (isNew ? \"created.\" : \"updated.\"));\n                try {\n                    groupForm.getFieldGroup().commit();\n                    groupForm.setReadOnly(true);\n                    groupTable.refreshRowCache();\n                } catch (CommitException e) {\n                    String msg = \"Can't save the changes: \" + e.getMessage();\n                    logger.error(msg);\n                    Notification.show(msg, Notification.Type.ERROR_MESSAGE);\n                }\n            }\n            @Override\n            public void delete() {\n                Object groupId = groupTable.getValue();\n                if (groupId != null) {\n                    Group group = groupTable.getGroup(groupId);\n                    logger.info(\"SNMP Group \" + group.getName() + \" has been removed.\");\n                    groupTable.select(null);\n                    groupTable.removeItem(groupId);\n                    groupTable.refreshRowCache();\n                }\n            }\n            @Override\n            public void edit() {\n                groupForm.setReadOnly(false);\n            }\n            @Override\n            public void cancel() {\n                groupForm.getFieldGroup().discard();\n                groupForm.setReadOnly(true);\n            }\n        };\n        bottomToolbar.setVisible(false);\n\n        groupTable.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(ValueChangeEvent event) {\n                Object groupId = groupTable.getValue();\n                if (groupId != null) {\n                    groupForm.setGroup(groupTable.getGroup(groupId));\n                }\n                groupForm.setReadOnly(true);\n                groupForm.setVisible(groupId != null);\n                bottomToolbar.setReadOnly(true);\n                bottomToolbar.setVisible(groupId != null);\n            }\n        });   \n\n        final Button add = new Button(\"Add SNMP Group\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(ClickEvent event) {\n                groupTable.addGroup(groupForm.createBasicGroup());\n                groupForm.setReadOnly(false);\n                bottomToolbar.setReadOnly(false);\n                setIsNew(true);\n            }\n        });\n\n        final VerticalLayout mainLayout = new VerticalLayout();\n        mainLayout.setSpacing(true);\n        mainLayout.setMargin(true);\n        mainLayout.addComponent(groupTable);\n        mainLayout.addComponent(add);\n        mainLayout.addComponent(groupForm);\n        mainLayout.addComponent(bottomToolbar);\n        mainLayout.setComponentAlignment(add, Alignment.MIDDLE_RIGHT);\n        setContent(mainLayout);\n    }","id":39145,"modified_method":"/**\n     * Instantiates a new group panel.\n     *\n     * @param dataCollectionConfigDao the OpenNMS Data Collection Configuration DAO\n     * @param source the OpenNMS Data Collection Group object\n     * @param logger the logger object\n     */\n    public GroupPanel(final DataCollectionConfigDao dataCollectionConfigDao, final DatacollectionGroup source, final Logger logger) {\n\n        if (dataCollectionConfigDao == null) {\n            throw new RuntimeException(\"dataCollectionConfigDao cannot be null.\");\n        }\n\n        if (source == null) {\n            throw new RuntimeException(\"source cannot be null.\");\n        }\n\n        addStyleName(\"light\");\n\n        // Adding all resource types already defined on this source\n        final List<String> resourceTypes = new ArrayList<String>();\n        for (ResourceType type : source.getResourceTypes()) {\n            resourceTypes.add(type.getName());\n        }\n\n        // Adding all defined resource types\n        resourceTypes.addAll(dataCollectionConfigDao.getConfiguredResourceTypes().keySet());\n\n        groupTable = new GroupTable(source.getGroups());\n\n        final GroupForm groupForm = new GroupForm(resourceTypes);\n        groupForm.setVisible(false);\n\n        final EditorToolbar bottomToolbar = new EditorToolbar() {\n            @Override\n            public void save() {\n                Group group = groupForm.getGroup();\n                logger.info(\"SNMP Group \" + group.getName() + \" has been \" + (isNew ? \"created.\" : \"updated.\"));\n                try {\n                    groupForm.commit();\n                    groupForm.setReadOnly(true);\n                    groupTable.refreshRowCache();\n                } catch (CommitException e) {\n                    String msg = \"Can't save the changes: \" + e.getMessage();\n                    logger.error(msg);\n                    Notification.show(msg, Notification.Type.ERROR_MESSAGE);\n                }\n            }\n            @Override\n            public void delete() {\n                Object groupId = groupTable.getValue();\n                if (groupId != null) {\n                    Group group = groupTable.getGroup(groupId);\n                    logger.info(\"SNMP Group \" + group.getName() + \" has been removed.\");\n                    groupTable.select(null);\n                    groupTable.removeItem(groupId);\n                    groupTable.refreshRowCache();\n                }\n            }\n            @Override\n            public void edit() {\n                groupForm.setReadOnly(false);\n            }\n            @Override\n            public void cancel() {\n                groupForm.discard();\n                groupForm.setReadOnly(true);\n            }\n        };\n        bottomToolbar.setVisible(false);\n\n        groupTable.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(ValueChangeEvent event) {\n                Object groupId = groupTable.getValue();\n                if (groupId != null) {\n                    groupForm.setGroup(groupTable.getGroup(groupId));\n                }\n                groupForm.setReadOnly(true);\n                groupForm.setVisible(groupId != null);\n                bottomToolbar.setReadOnly(true);\n                bottomToolbar.setVisible(groupId != null);\n            }\n        });   \n\n        final Button add = new Button(\"Add SNMP Group\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(ClickEvent event) {\n                groupTable.addGroup(groupForm.createBasicGroup());\n                groupForm.setReadOnly(false);\n                bottomToolbar.setReadOnly(false);\n                setIsNew(true);\n            }\n        });\n\n        final VerticalLayout mainLayout = new VerticalLayout();\n        mainLayout.setSpacing(true);\n        mainLayout.setMargin(true);\n        mainLayout.addComponent(groupTable);\n        mainLayout.addComponent(add);\n        mainLayout.addComponent(groupForm);\n        mainLayout.addComponent(bottomToolbar);\n        mainLayout.setComponentAlignment(add, Alignment.MIDDLE_RIGHT);\n        setContent(mainLayout);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Instantiates a new include collection window.\n     * \n     * @param dataCollectionConfigDao the data collection configuration DAO\n     * @param container the source list of elements\n     * @param wrapper the current selected value\n     */\n    public IncludeCollectionWindow(final DataCollectionConfigDao dataCollectionConfigDao,\n            final OnmsBeanContainer<IncludeCollectionWrapper> container,\n            final IncludeCollectionWrapper wrapper) {\n\n        setCaption(\"Include SystemDef/DataCollectionGroup\");\n        setModal(true);\n        setWidth(\"400px\");\n        setHeight(\"180px\");\n        setResizable(false);\n        setClosable(false);\n        addStyleName(\"dialog\");\n\n        final ComboBox valueField = new ComboBox(\"Value\");\n        valueField.setEnabled(false);\n        valueField.setRequired(true);\n        valueField.setImmediate(true);\n        valueField.setNewItemsAllowed(false);\n        valueField.setNullSelectionAllowed(false);\n\n        final ComboBox typeField = new ComboBox(\"Type\");\n        typeField.setRequired(true);\n        typeField.setImmediate(true);\n        typeField.setNewItemsAllowed(false);\n        typeField.setNullSelectionAllowed(false);\n        typeField.addItem(IncludeCollectionWrapper.DC_GROUP);\n        typeField.addItem(IncludeCollectionWrapper.SYSTEM_DEF);\n        typeField.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(Property.ValueChangeEvent event) {\n                String selected = (String) typeField.getValue();\n                if (selected == null) {\n                    return;\n                }\n                // Get available fields.\n                // FIXME If a new dcGroup is added, DataCollectionConfigDao is not able to reach it.\n                List<String> values = selected.equals(IncludeCollectionWrapper.SYSTEM_DEF) ? dataCollectionConfigDao.getAvailableSystemDefs()\n                    : dataCollectionConfigDao.getAvailableDataCollectionGroups();\n                // Remove already selected\n                for (IncludeCollectionWrapper obj : container.getOnmsBeans()) {\n                    if (obj.getType().equals(selected)) {\n                        values.remove(obj.getValue());\n                    }\n                }\n                // Updating combo-box\n                valueField.removeAllItems();\n                for (String v : values) {\n                    valueField.addItem(v);\n                }\n                if (wrapper.getValue() != null) {\n                    valueField.addItem(wrapper.getValue());\n                }\n                valueField.setEnabled(valueField.getItemIds().size() > 1);\n            }\n        });\n\n        formLayout.setImmediate(true);\n        formLayout.setWidth(\"100%\");\n        formLayout.addComponent(typeField);\n        formLayout.addComponent(valueField);\n\n        formEditor.bind(typeField, \"type\");\n        formEditor.bind(valueField, \"value\");\n        formEditor.setItemDataSource(new BeanItem<IncludeCollectionWrapper>(wrapper));\n\n        final HorizontalLayout toolbar = new HorizontalLayout();\n        toolbar.addComponent(okButton);\n        toolbar.addComponent(cancelButton);\n\n        final VerticalLayout layout = new VerticalLayout();\n        layout.addComponent(formLayout);\n        layout.addComponent(toolbar);\n        layout.setComponentAlignment(toolbar, Alignment.BOTTOM_RIGHT);\n        layout.setMargin(true);\n        setContent(layout);\n    }","id":39146,"modified_method":"/**\n     * Instantiates a new include collection window.\n     * \n     * @param dataCollectionConfigDao the data collection configuration DAO\n     * @param container the source list of elements\n     * @param wrapper the current selected value\n     */\n    public IncludeCollectionWindow(final DataCollectionConfigDao dataCollectionConfigDao,\n            final OnmsBeanContainer<IncludeCollectionWrapper> container,\n            final IncludeCollectionWrapper wrapper) {\n\n        setCaption(\"Include SystemDef/DataCollectionGroup\");\n        setModal(true);\n        setWidth(\"400px\");\n        setHeight(\"180px\");\n        setResizable(false);\n        setClosable(false);\n        addStyleName(\"dialog\");\n\n        final ComboBox valueField = new ComboBox(\"Value\");\n        valueField.setEnabled(false);\n        valueField.setRequired(true);\n        valueField.setImmediate(true);\n        valueField.setNewItemsAllowed(false);\n        valueField.setNullSelectionAllowed(false);\n\n        final ComboBox typeField = new ComboBox(\"Type\");\n        typeField.setRequired(true);\n        typeField.setImmediate(true);\n        typeField.setNewItemsAllowed(false);\n        typeField.setNullSelectionAllowed(false);\n        typeField.addItem(IncludeCollectionWrapper.DC_GROUP);\n        typeField.addItem(IncludeCollectionWrapper.SYSTEM_DEF);\n        typeField.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(Property.ValueChangeEvent event) {\n                String selected = (String) typeField.getValue();\n                if (selected == null) {\n                    return;\n                }\n                // Get available fields.\n                // FIXME If a new dcGroup is added, DataCollectionConfigDao is not able to reach it.\n                List<String> values = selected.equals(IncludeCollectionWrapper.SYSTEM_DEF) ? dataCollectionConfigDao.getAvailableSystemDefs()\n                    : dataCollectionConfigDao.getAvailableDataCollectionGroups();\n                // Remove already selected\n                for (IncludeCollectionWrapper obj : container.getOnmsBeans()) {\n                    if (obj.getType().equals(selected)) {\n                        values.remove(obj.getValue());\n                    }\n                }\n                // Updating combo-box\n                valueField.removeAllItems();\n                for (String v : values) {\n                    valueField.addItem(v);\n                }\n                if (wrapper.getValue() != null) {\n                    valueField.addItem(wrapper.getValue());\n                }\n                valueField.setEnabled(valueField.getItemIds().size() > 1);\n            }\n        });\n\n        formLayout.setImmediate(true);\n        formLayout.setWidth(\"100%\");\n        formLayout.addComponent(typeField);\n        formLayout.addComponent(valueField);\n\n        formEditor.bind(typeField, \"type\");\n        formEditor.bind(valueField, \"value\");\n        formEditor.setItemDataSource(wrapper);\n\n        final HorizontalLayout toolbar = new HorizontalLayout();\n        toolbar.addComponent(okButton);\n        toolbar.addComponent(cancelButton);\n\n        final VerticalLayout layout = new VerticalLayout();\n        layout.addComponent(formLayout);\n        layout.addComponent(toolbar);\n        layout.setComponentAlignment(toolbar, Alignment.BOTTOM_RIGHT);\n        layout.setMargin(true);\n        setContent(layout);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Gets the resource type.\n     *\n     * @return the resource type\n     */\n    @SuppressWarnings(\"unchecked\")\n    public ResourceType getResourceType() {\n        return ((BeanItem<ResourceType>) resourceTypeEditor.getItemDataSource()).getBean();\n    }","id":39147,"modified_method":"/**\n     * Gets the resource type.\n     *\n     * @return the resource type\n     */\n    public ResourceType getResourceType() {\n        return resourceTypeEditor.getItemDataSource().getBean();\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Sets the resource type.\n     *\n     * @param resourceType the new resource type\n     */\n    public void setResourceType(ResourceType resourceType) {\n        resourceTypeEditor.setItemDataSource(new BeanItem<ResourceType>(resourceType));\n    }","id":39148,"modified_method":"/**\n     * Sets the resource type.\n     *\n     * @param resourceType the new resource type\n     */\n    public void setResourceType(ResourceType resourceType) {\n        resourceTypeEditor.setItemDataSource(resourceType);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Instantiates a new resource type form.\n     */\n    public ResourceTypeForm() {\n        setCaption(\"Resource Type Detail\");\n        resourceTypeLayout.setMargin(true);\n\n        name.setRequired(true);\n        name.setWidth(\"100%\");\n        resourceTypeLayout.addComponent(name);\n\n        label.setRequired(true);\n        label.setWidth(\"100%\");\n        resourceTypeLayout.addComponent(label);\n\n        resourceLabel.setRequired(false);\n        resourceLabel.setWidth(\"100%\");\n        resourceTypeLayout.addComponent(resourceLabel);\n\n        resourceTypeLayout.addComponent(storageStrategy);\n        resourceTypeLayout.addComponent(persistenceSelectorStrategy);\n\n        setResourceType(createBasicResourceType());\n        resourceTypeEditor.bindMemberFields(this);\n\n        setCompositionRoot(resourceTypeLayout);\n\n    }","id":39149,"modified_method":"/**\n     * Instantiates a new resource type form.\n     */\n    public ResourceTypeForm() {\n        setCaption(\"Resource Type Detail\");\n        resourceTypeLayout.setMargin(true);\n\n        name.setRequired(true);\n        name.setWidth(\"100%\");\n        resourceTypeLayout.addComponent(name);\n\n        label.setRequired(true);\n        label.setWidth(\"100%\");\n        resourceTypeLayout.addComponent(label);\n\n        resourceLabel.setRequired(false);\n        resourceLabel.setWidth(\"100%\");\n        resourceTypeLayout.addComponent(resourceLabel);\n\n        resourceTypeLayout.addComponent(storageStrategy);\n        resourceTypeLayout.addComponent(persistenceSelectorStrategy);\n\n        setResourceType(createBasicResourceType());\n\n        resourceTypeEditor.bind(name, \"name\");\n        resourceTypeEditor.bind(label, \"label\");\n        resourceTypeEditor.bind(resourceLabel, \"resourceLabel\");\n        resourceTypeEditor.bind(storageStrategy, \"storageStrategy\");\n        resourceTypeEditor.bind(persistenceSelectorStrategy,  \"persistenceSelectorStrategy\");\n\n        setCompositionRoot(resourceTypeLayout);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Instantiates a new resource type panel.\n     *\n     * @param dataCollectionConfigDao the OpenNMS Data Collection Configuration DAO\n     * @param source the OpenNMS Data Collection ResourceType object\n     * @param logger the logger object\n     */\n    public ResourceTypePanel(final DataCollectionConfigDao dataCollectionConfigDao, final DatacollectionGroup source, final Logger logger) {\n\n        if (dataCollectionConfigDao == null)\n            throw new RuntimeException(\"dataCollectionConfigDao cannot be null.\");\n\n        if (source == null)\n            throw new RuntimeException(\"source cannot be null.\");\n\n        addStyleName(\"light\");\n\n        resourceTypeTable = new ResourceTypeTable(source.getResourceTypes());\n\n        final ResourceTypeForm resourceTypeForm = new ResourceTypeForm();\n        resourceTypeForm.setVisible(false);\n\n        final EditorToolbar bottomToolbar = new EditorToolbar() {\n            @Override\n            public void save() {\n                ResourceType resourceType = resourceTypeForm.getResourceType();\n                logger.info(\"Resource Type \" + resourceType.getName() + \" has been \" + (isNew ? \"created.\" : \"updated.\"));\n                try {\n                    resourceTypeForm.getFieldGroup().commit();\n                    resourceTypeForm.setReadOnly(true);\n                    resourceTypeTable.refreshRowCache();\n                } catch (CommitException e) {\n                    String msg = \"Can't save the changes: \" + e.getMessage();\n                    logger.error(msg);\n                    Notification.show(msg, Notification.Type.ERROR_MESSAGE);\n                }\n            }\n            @Override\n            public void delete() {\n                Object resourceTypeId = resourceTypeTable.getValue();\n                if (resourceTypeId != null) {\n                    ResourceType resourceType = resourceTypeTable.getResourceType(resourceTypeId);\n                    logger.info(\"SNMP ResourceType \" + resourceType.getName() + \" has been removed.\");\n                    resourceTypeTable.select(null);\n                    resourceTypeTable.removeItem(resourceTypeId);\n                    resourceTypeTable.refreshRowCache();\n                }\n            }\n            @Override\n            public void edit() {\n                resourceTypeForm.setReadOnly(false);\n            }\n            @Override\n            public void cancel() {\n                resourceTypeForm.getFieldGroup().discard();\n                resourceTypeForm.setReadOnly(true);\n            }\n        };\n        bottomToolbar.setVisible(false);\n\n        resourceTypeTable.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(ValueChangeEvent event) {\n                Object resourceTypeId = resourceTypeTable.getValue();\n                if (resourceTypeId != null) {\n                    resourceTypeForm.setResourceType(resourceTypeTable.getResourceType(resourceTypeId));\n                }\n                resourceTypeForm.setReadOnly(true);\n                resourceTypeForm.setVisible(resourceTypeId != null);\n                bottomToolbar.setReadOnly(true);\n                bottomToolbar.setVisible(resourceTypeId != null);\n            }\n        });   \n\n        final Button add = new Button(\"Add Resource Type\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(ClickEvent event) {\n                resourceTypeTable.addResourceType(resourceTypeForm.createBasicResourceType());\n                resourceTypeForm.setReadOnly(false);\n                bottomToolbar.setReadOnly(false);\n                setIsNew(true);\n            }\n        });\n\n        final VerticalLayout mainLayout = new VerticalLayout();\n        mainLayout.setSpacing(true);\n        mainLayout.setMargin(true);\n        mainLayout.addComponent(resourceTypeTable);\n        mainLayout.addComponent(add);\n        mainLayout.addComponent(resourceTypeForm);\n        mainLayout.addComponent(bottomToolbar);\n        mainLayout.setComponentAlignment(add, Alignment.MIDDLE_RIGHT);\n        setContent(mainLayout);\n    }","id":39150,"modified_method":"/**\n     * Instantiates a new resource type panel.\n     *\n     * @param dataCollectionConfigDao the OpenNMS Data Collection Configuration DAO\n     * @param source the OpenNMS Data Collection ResourceType object\n     * @param logger the logger object\n     */\n    public ResourceTypePanel(final DataCollectionConfigDao dataCollectionConfigDao, final DatacollectionGroup source, final Logger logger) {\n\n        if (dataCollectionConfigDao == null)\n            throw new RuntimeException(\"dataCollectionConfigDao cannot be null.\");\n\n        if (source == null)\n            throw new RuntimeException(\"source cannot be null.\");\n\n        addStyleName(\"light\");\n\n        resourceTypeTable = new ResourceTypeTable(source.getResourceTypes());\n\n        final ResourceTypeForm resourceTypeForm = new ResourceTypeForm();\n        resourceTypeForm.setVisible(false);\n\n        final EditorToolbar bottomToolbar = new EditorToolbar() {\n            @Override\n            public void save() {\n                ResourceType resourceType = resourceTypeForm.getResourceType();\n                logger.info(\"Resource Type \" + resourceType.getName() + \" has been \" + (isNew ? \"created.\" : \"updated.\"));\n                try {\n                    resourceTypeForm.commit();\n                    resourceTypeForm.setReadOnly(true);\n                    resourceTypeTable.refreshRowCache();\n                } catch (CommitException e) {\n                    String msg = \"Can't save the changes: \" + e.getMessage();\n                    logger.error(msg);\n                    Notification.show(msg, Notification.Type.ERROR_MESSAGE);\n                }\n            }\n            @Override\n            public void delete() {\n                Object resourceTypeId = resourceTypeTable.getValue();\n                if (resourceTypeId != null) {\n                    ResourceType resourceType = resourceTypeTable.getResourceType(resourceTypeId);\n                    logger.info(\"SNMP ResourceType \" + resourceType.getName() + \" has been removed.\");\n                    resourceTypeTable.select(null);\n                    resourceTypeTable.removeItem(resourceTypeId);\n                    resourceTypeTable.refreshRowCache();\n                }\n            }\n            @Override\n            public void edit() {\n                resourceTypeForm.setReadOnly(false);\n            }\n            @Override\n            public void cancel() {\n                resourceTypeForm.discard();\n                resourceTypeForm.setReadOnly(true);\n            }\n        };\n        bottomToolbar.setVisible(false);\n\n        resourceTypeTable.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(ValueChangeEvent event) {\n                Object resourceTypeId = resourceTypeTable.getValue();\n                if (resourceTypeId != null) {\n                    resourceTypeForm.setResourceType(resourceTypeTable.getResourceType(resourceTypeId));\n                }\n                resourceTypeForm.setReadOnly(true);\n                resourceTypeForm.setVisible(resourceTypeId != null);\n                bottomToolbar.setReadOnly(true);\n                bottomToolbar.setVisible(resourceTypeId != null);\n            }\n        });   \n\n        final Button add = new Button(\"Add Resource Type\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(ClickEvent event) {\n                resourceTypeTable.addResourceType(resourceTypeForm.createBasicResourceType());\n                resourceTypeForm.setReadOnly(false);\n                bottomToolbar.setReadOnly(false);\n                setIsNew(true);\n            }\n        });\n\n        final VerticalLayout mainLayout = new VerticalLayout();\n        mainLayout.setSpacing(true);\n        mainLayout.setMargin(true);\n        mainLayout.addComponent(resourceTypeTable);\n        mainLayout.addComponent(add);\n        mainLayout.addComponent(resourceTypeForm);\n        mainLayout.addComponent(bottomToolbar);\n        mainLayout.setComponentAlignment(add, Alignment.MIDDLE_RIGHT);\n        setContent(mainLayout);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Instantiates a new SNMP collection form.\n     *\n     * @param dataCollectionConfigDao the data collection configuration DAO\n     */\n    public SnmpCollectionForm(final DataCollectionConfigDao dataCollectionConfigDao) {\n        setCaption(\"SNMP Collection Detail\");\n        snmpCollectionLayout.setMargin(true);\n\n        name.setRequired(true);\n        name.setWidth(\"100%\");\n        snmpCollectionLayout.addComponent(name);\n\n        snmpStorageFlag.setRequired(true);\n        snmpStorageFlag.addItem(\"select\");\n        snmpStorageFlag.addItem(\"all\");\n        snmpCollectionLayout.addComponent(snmpStorageFlag);\n\n        rrd.setRequired(true);\n        rrd.setWidth(\"100%\");\n        snmpCollectionLayout.addComponent(rrd);\n\n        includeCollections = new IncludeCollectionField(dataCollectionConfigDao);\n        snmpCollectionLayout.addComponent(includeCollections);\n\n        setSnmpCollection(createBasicSnmpCollection());\n        snmpCollectionEditor.bindMemberFields(this);\n\n        setCompositionRoot(snmpCollectionLayout);\n    }","id":39151,"modified_method":"/**\n     * Instantiates a new SNMP collection form.\n     *\n     * @param dataCollectionConfigDao the data collection configuration DAO\n     */\n    public SnmpCollectionForm(final DataCollectionConfigDao dataCollectionConfigDao) {\n        setCaption(\"SNMP Collection Detail\");\n        snmpCollectionLayout.setMargin(true);\n\n        name.setRequired(true);\n        name.setWidth(\"100%\");\n        snmpCollectionLayout.addComponent(name);\n\n        snmpStorageFlag.setRequired(true);\n        snmpStorageFlag.addItem(\"select\");\n        snmpStorageFlag.addItem(\"all\");\n        snmpCollectionLayout.addComponent(snmpStorageFlag);\n\n        rrd.setRequired(true);\n        rrd.setWidth(\"100%\");\n        snmpCollectionLayout.addComponent(rrd);\n\n        includeCollections = new IncludeCollectionField(dataCollectionConfigDao);\n        snmpCollectionLayout.addComponent(includeCollections);\n\n        setSnmpCollection(createBasicSnmpCollection());\n        \n        snmpCollectionEditor.bind(name, \"name\");\n        snmpCollectionEditor.bind(snmpStorageFlag, \"snmpStorageFlag\");\n        snmpCollectionEditor.bind(rrd, \"rrd\");\n        snmpCollectionEditor.bind(includeCollections, \"includeCollections\");\n\n        setCompositionRoot(snmpCollectionLayout);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Gets the SNMP Collection.\n     *\n     * @return the SNMP Collection\n     */\n    @SuppressWarnings(\"unchecked\")\n    public SnmpCollection getSnmpCollection() {\n        return ((BeanItem<SnmpCollection>) snmpCollectionEditor.getItemDataSource()).getBean();\n    }","id":39152,"modified_method":"/**\n     * Gets the SNMP Collection.\n     *\n     * @return the SNMP Collection\n     */\n    public SnmpCollection getSnmpCollection() {\n       return snmpCollectionEditor.getItemDataSource().getBean();\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Sets the SNMP Collection.\n     *\n     * @param snmpCollection the new SNMP collection\n     */\n    public void setSnmpCollection(SnmpCollection snmpCollection) {\n        snmpCollectionEditor.setItemDataSource(new BeanItem<SnmpCollection>(snmpCollection));\n    }","id":39153,"modified_method":"/**\n     * Sets the SNMP Collection.\n     *\n     * @param snmpCollection the new SNMP collection\n     */\n    public void setSnmpCollection(SnmpCollection snmpCollection) {\n        snmpCollectionEditor.setItemDataSource(snmpCollection);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Instantiates a new SNMP collection panel.\n     *\n     * @param dataCollectionConfigDao the OpenNMS data collection configuration DAO\n     * @param logger the logger\n     */\n    public SnmpCollectionPanel(final DataCollectionConfigDao dataCollectionConfigDao, final Logger logger) {\n\n        if (dataCollectionConfigDao == null)\n            throw new RuntimeException(\"dataCollectionConfigDao cannot be null.\");\n\n        this.dataCollectionConfigDao = dataCollectionConfigDao;\n\n        setCaption(\"SNMP Collections\");\n        addStyleName(\"light\");\n\n        final List<SnmpCollection> snmpCollections = dataCollectionConfigDao.getRootDataCollection().getSnmpCollections();\n        final SnmpCollectionTable snmpCollectionTable = new SnmpCollectionTable(snmpCollections);\n\n        final SnmpCollectionForm snmpCollectionForm = new SnmpCollectionForm(dataCollectionConfigDao);\n        snmpCollectionForm.setVisible(false);\n\n        final EditorToolbar bottomToolbar = new EditorToolbar() {\n            @Override\n            public void save() {\n                SnmpCollection snmpCollection = snmpCollectionForm.getSnmpCollection();\n                logger.info(\"SNMP Collection \" + snmpCollection.getName() + \" has been \" + (isNew ? \"created.\" : \"updated.\"));\n                try {\n                    snmpCollectionForm.getFieldGroup().commit();\n                    snmpCollectionForm.setReadOnly(true);\n                    snmpCollectionTable.refreshRowCache();\n                    saveSnmpCollections(snmpCollectionTable.getSnmpCollections(), logger);\n                } catch (CommitException e) {\n                    String msg = \"Can't save the changes: \" + e.getMessage();\n                    logger.error(msg);\n                    Notification.show(msg, Notification.Type.ERROR_MESSAGE);\n                }\n            }\n            @Override\n            public void delete() {\n                Object snmpCollectionId = snmpCollectionTable.getValue();\n                if (snmpCollectionId != null) {\n                    SnmpCollection snmpCollection = snmpCollectionTable.getSnmpCollection(snmpCollectionId);\n                    logger.info(\"SNMP Collection \" + snmpCollection.getName() + \" has been removed.\");\n                    snmpCollectionTable.select(null);\n                    snmpCollectionTable.removeItem(snmpCollectionId);\n                    snmpCollectionTable.refreshRowCache();\n                    saveSnmpCollections(snmpCollectionTable.getSnmpCollections(), logger);\n                }\n            }\n            @Override\n            public void edit() {\n                snmpCollectionForm.setReadOnly(false);\n            }\n            @Override\n            public void cancel() {\n                snmpCollectionForm.getFieldGroup().discard();\n                snmpCollectionForm.setReadOnly(true);\n            }\n        };\n        bottomToolbar.setVisible(false);\n\n        snmpCollectionTable.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(ValueChangeEvent event) {\n                Object snmpCollectionId = snmpCollectionTable.getValue();\n                if (snmpCollectionId != null) {\n                    snmpCollectionForm.setSnmpCollection(snmpCollectionTable.getSnmpCollection(snmpCollectionId));\n                }\n                snmpCollectionForm.setReadOnly(true);\n                snmpCollectionForm.setVisible(snmpCollectionId != null);\n                bottomToolbar.setReadOnly(true);\n                bottomToolbar.setVisible(snmpCollectionId != null);\n            }\n        });   \n\n        final Button add = new Button(\"Add SNMP Collection\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(ClickEvent event) {\n                snmpCollectionTable.addSnmpCollection(snmpCollectionForm.createBasicSnmpCollection());\n                snmpCollectionForm.setReadOnly(false);\n                bottomToolbar.setReadOnly(false);\n                setIsNew(true);\n            }\n        });\n\n        final Button refresh = new Button(\"Refresh SNMP Collections\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                ConfirmDialog.show(getUI(),\n                                   \"Are you sure?\",\n                                   \"By doing this all unsaved changes on the SNMP collection will be lost.\",\n                                   \"Yes\",\n                                   \"No\",\n                                   new ConfirmDialog.Listener() {\n                    public void onClose(ConfirmDialog dialog) {\n                        if (dialog.isConfirmed()) {\n                            final List<SnmpCollection> snmpCollections = dataCollectionConfigDao.getRootDataCollection().getSnmpCollections();\n                            snmpCollectionTable.setSnmpCollections(snmpCollections);\n                            snmpCollectionTable.select(null);\n                            snmpCollectionForm.setVisible(false);\n                        }\n                    }\n                });\n            }\n        });\n\n        final HorizontalLayout tableToolbar = new HorizontalLayout();\n        tableToolbar.addComponent(add);\n        tableToolbar.addComponent(refresh);\n\n        final VerticalLayout mainLayout = new VerticalLayout();\n        mainLayout.setSpacing(true);\n        mainLayout.setMargin(true);\n        mainLayout.addComponent(snmpCollectionTable);\n        mainLayout.addComponent(tableToolbar);\n        mainLayout.addComponent(snmpCollectionForm);\n        mainLayout.addComponent(bottomToolbar);\n        mainLayout.setComponentAlignment(tableToolbar, Alignment.MIDDLE_RIGHT);\n        setContent(mainLayout);\n    }","id":39154,"modified_method":"/**\n     * Instantiates a new SNMP collection panel.\n     *\n     * @param dataCollectionConfigDao the OpenNMS data collection configuration DAO\n     * @param logger the logger\n     */\n    public SnmpCollectionPanel(final DataCollectionConfigDao dataCollectionConfigDao, final Logger logger) {\n\n        if (dataCollectionConfigDao == null)\n            throw new RuntimeException(\"dataCollectionConfigDao cannot be null.\");\n\n        this.dataCollectionConfigDao = dataCollectionConfigDao;\n\n        setCaption(\"SNMP Collections\");\n        addStyleName(\"light\");\n\n        final List<SnmpCollection> snmpCollections = dataCollectionConfigDao.getRootDataCollection().getSnmpCollections();\n        final SnmpCollectionTable snmpCollectionTable = new SnmpCollectionTable(snmpCollections);\n\n        final SnmpCollectionForm snmpCollectionForm = new SnmpCollectionForm(dataCollectionConfigDao);\n        snmpCollectionForm.setVisible(false);\n\n        final EditorToolbar bottomToolbar = new EditorToolbar() {\n            @Override\n            public void save() {\n                SnmpCollection snmpCollection = snmpCollectionForm.getSnmpCollection();\n                logger.info(\"SNMP Collection \" + snmpCollection.getName() + \" has been \" + (isNew ? \"created.\" : \"updated.\"));\n                try {\n                    snmpCollectionForm.commit();\n                    snmpCollectionForm.setReadOnly(true);\n                    snmpCollectionTable.refreshRowCache();\n                    saveSnmpCollections(snmpCollectionTable.getSnmpCollections(), logger);\n                } catch (CommitException e) {\n                    String msg = \"Can't save the changes: \" + e.getMessage();\n                    logger.error(msg);\n                    Notification.show(msg, Notification.Type.ERROR_MESSAGE);\n                }\n            }\n            @Override\n            public void delete() {\n                Object snmpCollectionId = snmpCollectionTable.getValue();\n                if (snmpCollectionId != null) {\n                    SnmpCollection snmpCollection = snmpCollectionTable.getSnmpCollection(snmpCollectionId);\n                    logger.info(\"SNMP Collection \" + snmpCollection.getName() + \" has been removed.\");\n                    snmpCollectionTable.select(null);\n                    snmpCollectionTable.removeItem(snmpCollectionId);\n                    snmpCollectionTable.refreshRowCache();\n                    saveSnmpCollections(snmpCollectionTable.getSnmpCollections(), logger);\n                }\n            }\n            @Override\n            public void edit() {\n                snmpCollectionForm.setReadOnly(false);\n            }\n            @Override\n            public void cancel() {\n                snmpCollectionForm.discard();\n                snmpCollectionForm.setReadOnly(true);\n            }\n        };\n        bottomToolbar.setVisible(false);\n\n        snmpCollectionTable.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(ValueChangeEvent event) {\n                Object snmpCollectionId = snmpCollectionTable.getValue();\n                if (snmpCollectionId != null) {\n                    snmpCollectionForm.setSnmpCollection(snmpCollectionTable.getSnmpCollection(snmpCollectionId));\n                }\n                snmpCollectionForm.setReadOnly(true);\n                snmpCollectionForm.setVisible(snmpCollectionId != null);\n                bottomToolbar.setReadOnly(true);\n                bottomToolbar.setVisible(snmpCollectionId != null);\n            }\n        });   \n\n        final Button add = new Button(\"Add SNMP Collection\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(ClickEvent event) {\n                snmpCollectionTable.addSnmpCollection(snmpCollectionForm.createBasicSnmpCollection());\n                snmpCollectionForm.setReadOnly(false);\n                bottomToolbar.setReadOnly(false);\n                setIsNew(true);\n            }\n        });\n\n        final Button refresh = new Button(\"Refresh SNMP Collections\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                ConfirmDialog.show(getUI(),\n                                   \"Are you sure?\",\n                                   \"By doing this all unsaved changes on the SNMP collection will be lost.\",\n                                   \"Yes\",\n                                   \"No\",\n                                   new ConfirmDialog.Listener() {\n                    public void onClose(ConfirmDialog dialog) {\n                        if (dialog.isConfirmed()) {\n                            final List<SnmpCollection> snmpCollections = dataCollectionConfigDao.getRootDataCollection().getSnmpCollections();\n                            snmpCollectionTable.setSnmpCollections(snmpCollections);\n                            snmpCollectionTable.select(null);\n                            snmpCollectionForm.setVisible(false);\n                        }\n                    }\n                });\n            }\n        });\n\n        final HorizontalLayout tableToolbar = new HorizontalLayout();\n        tableToolbar.addComponent(add);\n        tableToolbar.addComponent(refresh);\n\n        final VerticalLayout mainLayout = new VerticalLayout();\n        mainLayout.setSpacing(true);\n        mainLayout.setMargin(true);\n        mainLayout.addComponent(snmpCollectionTable);\n        mainLayout.addComponent(tableToolbar);\n        mainLayout.addComponent(snmpCollectionForm);\n        mainLayout.addComponent(bottomToolbar);\n        mainLayout.setComponentAlignment(tableToolbar, Alignment.MIDDLE_RIGHT);\n        setContent(mainLayout);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Sets the system definition.\n     *\n     * @param systemDef the new system definition\n     */\n    public void setSystemDef(SystemDef systemDef) {\n        systemDefEditor.setItemDataSource(new BeanItem<SystemDef>(systemDef));\n    }","id":39155,"modified_method":"/**\n     * Sets the system definition.\n     *\n     * @param systemDef the new system definition\n     */\n    public void setSystemDef(SystemDef systemDef) {\n        systemDefEditor.setItemDataSource(systemDef);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Gets the system definition.\n     *\n     * @return the system definition\n     */\n    @SuppressWarnings(\"unchecked\")\n    public SystemDef getSystemDef() {\n        return ((BeanItem<SystemDef>) systemDefEditor.getItemDataSource()).getBean();\n    }","id":39156,"modified_method":"/**\n     * Gets the system definition.\n     *\n     * @return the system definition\n     */\n    public SystemDef getSystemDef() {\n        return systemDefEditor.getItemDataSource().getBean();\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Instantiates a new system definition form.\n     *\n     * @param groupNames the group names\n     */\n    public SystemDefForm(final List<String> groupNames) {\n        setCaption(\"System Definition Detail\");\n        systemDefLayout.setMargin(true);\n\n        name.setRequired(true);\n        name.setWidth(\"100%\");\n        systemDefLayout.addComponent(name);\n\n        systemDefChoice.setRequired(true);\n        systemDefLayout.addComponent(systemDefChoice);\n\n        collectField = new CollectField(\"MIB Groups\", groupNames);\n        collectField.setRequired(true);\n        systemDefLayout.addComponent(collectField);\n\n        setSystemDef(createBasicSystemDef());\n        systemDefEditor.bindMemberFields(this);\n\n        setCompositionRoot(systemDefLayout);\n    }","id":39157,"modified_method":"/**\n     * Instantiates a new system definition form.\n     *\n     * @param groupNames the group names\n     */\n    public SystemDefForm(final List<String> groupNames) {\n        setCaption(\"System Definition Detail\");\n        systemDefLayout.setMargin(true);\n\n        name.setRequired(true);\n        name.setWidth(\"100%\");\n        systemDefLayout.addComponent(name);\n\n        systemDefChoice.setRequired(true);\n        systemDefLayout.addComponent(systemDefChoice);\n\n        collectField = new CollectField(\"MIB Groups\", groupNames);\n        collectField.setRequired(true);\n        systemDefLayout.addComponent(collectField);\n\n        setSystemDef(createBasicSystemDef());\n\n        systemDefEditor.bind(name, \"name\");\n        systemDefEditor.bind(systemDefChoice, \"systemDefChoice\");\n        systemDefEditor.bind(collectField, \"collectField\");\n\n        setCompositionRoot(systemDefLayout);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Instantiates a new system definition panel.\n     *\n     * @param dataCollectionConfigDao the OpenNMS Data Collection Configuration DAO\n     * @param source the OpenNMS Data Collection SystemDef object\n     * @param logger the logger object\n     */\n    public SystemDefPanel(final DataCollectionConfigDao dataCollectionConfigDao, final DatacollectionGroup source, final Logger logger) {\n\n        if (dataCollectionConfigDao == null)\n            throw new RuntimeException(\"dataCollectionConfigDao cannot be null.\");\n\n        if (source == null)\n            throw new RuntimeException(\"source cannot be null.\");\n\n        addStyleName(\"light\");\n\n        // Adding all systemDefs already defined on this source\n        final List<String> groupNames = new ArrayList<String>();\n        for (Group group : source.getGroups()) {\n            groupNames.add(group.getName());\n        }\n        // Adding all defined systemDefs\n        groupNames.addAll(dataCollectionConfigDao.getAvailableMibGroups());\n\n        systemDefTable = new SystemDefTable(source.getSystemDefs());\n\n        final SystemDefForm systemDefForm = new SystemDefForm(groupNames);\n        systemDefForm.setVisible(false);\n\n        final EditorToolbar bottomToolbar = new EditorToolbar() {\n            @Override\n            public void save() {\n                SystemDef systemDef = systemDefForm.getSystemDef();\n                logger.info(\"SNMP SystemDef \" + systemDef.getName() + \" has been \" + (isNew ? \"created.\" : \"updated.\"));\n                try {\n                    systemDefForm.getFieldGroup().commit();\n                    systemDefForm.setReadOnly(true);\n                    systemDefTable.refreshRowCache();\n                } catch (CommitException e) {\n                    String msg = \"Can't save the changes: \" + e.getMessage();\n                    logger.error(msg);\n                    Notification.show(msg, Notification.Type.ERROR_MESSAGE);\n                }\n            }\n            @Override\n            public void delete() {\n                Object systemDefId = systemDefTable.getValue();\n                if (systemDefId != null) {\n                    SystemDef systemDef = systemDefTable.getSystemDef(systemDefId);\n                    logger.info(\"SNMP SystemDef \" + systemDef.getName() + \" has been removed.\");\n                    systemDefTable.select(null);\n                    systemDefTable.removeItem(systemDefId);\n                    systemDefTable.refreshRowCache();\n                }\n            }\n            @Override\n            public void edit() {\n                systemDefForm.setReadOnly(false);\n            }\n            @Override\n            public void cancel() {\n                systemDefForm.getFieldGroup().discard();\n                systemDefForm.setReadOnly(true);\n            }\n        };\n        bottomToolbar.setVisible(false);\n\n        systemDefTable.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(ValueChangeEvent event) {\n                Object systemDefId = systemDefTable.getValue();\n                if (systemDefId != null) {\n                    systemDefForm.setSystemDef(systemDefTable.getSystemDef(systemDefId));\n                }\n                systemDefForm.setReadOnly(true);\n                systemDefForm.setVisible(systemDefId != null);\n                bottomToolbar.setReadOnly(true);\n                bottomToolbar.setVisible(systemDefId != null);\n            }\n        });   \n\n        final Button add = new Button(\"Add SNMP SystemDef\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(ClickEvent event) {\n                systemDefTable.addSystemDef(systemDefForm.createBasicSystemDef());\n                systemDefForm.setReadOnly(false);\n                bottomToolbar.setReadOnly(false);\n                setIsNew(true);\n            }\n        });\n\n        final VerticalLayout mainLayout = new VerticalLayout();\n        mainLayout.setSpacing(true);\n        mainLayout.setMargin(true);\n        mainLayout.addComponent(systemDefTable);\n        mainLayout.addComponent(add);\n        mainLayout.addComponent(systemDefForm);\n        mainLayout.addComponent(bottomToolbar);\n        mainLayout.setComponentAlignment(add, Alignment.MIDDLE_RIGHT);\n        setContent(mainLayout);\n    }","id":39158,"modified_method":"/**\n     * Instantiates a new system definition panel.\n     *\n     * @param dataCollectionConfigDao the OpenNMS Data Collection Configuration DAO\n     * @param source the OpenNMS Data Collection SystemDef object\n     * @param logger the logger object\n     */\n    public SystemDefPanel(final DataCollectionConfigDao dataCollectionConfigDao, final DatacollectionGroup source, final Logger logger) {\n\n        if (dataCollectionConfigDao == null)\n            throw new RuntimeException(\"dataCollectionConfigDao cannot be null.\");\n\n        if (source == null)\n            throw new RuntimeException(\"source cannot be null.\");\n\n        addStyleName(\"light\");\n\n        // Adding all systemDefs already defined on this source\n        final List<String> groupNames = new ArrayList<String>();\n        for (Group group : source.getGroups()) {\n            groupNames.add(group.getName());\n        }\n        // Adding all defined systemDefs\n        groupNames.addAll(dataCollectionConfigDao.getAvailableMibGroups());\n\n        systemDefTable = new SystemDefTable(source.getSystemDefs());\n\n        final SystemDefForm systemDefForm = new SystemDefForm(groupNames);\n        systemDefForm.setVisible(false);\n\n        final EditorToolbar bottomToolbar = new EditorToolbar() {\n            @Override\n            public void save() {\n                SystemDef systemDef = systemDefForm.getSystemDef();\n                logger.info(\"SNMP SystemDef \" + systemDef.getName() + \" has been \" + (isNew ? \"created.\" : \"updated.\"));\n                try {\n                    systemDefForm.commit();\n                    systemDefForm.setReadOnly(true);\n                    systemDefTable.refreshRowCache();\n                } catch (CommitException e) {\n                    String msg = \"Can't save the changes: \" + e.getMessage();\n                    logger.error(msg);\n                    Notification.show(msg, Notification.Type.ERROR_MESSAGE);\n                }\n            }\n            @Override\n            public void delete() {\n                Object systemDefId = systemDefTable.getValue();\n                if (systemDefId != null) {\n                    SystemDef systemDef = systemDefTable.getSystemDef(systemDefId);\n                    logger.info(\"SNMP SystemDef \" + systemDef.getName() + \" has been removed.\");\n                    systemDefTable.select(null);\n                    systemDefTable.removeItem(systemDefId);\n                    systemDefTable.refreshRowCache();\n                }\n            }\n            @Override\n            public void edit() {\n                systemDefForm.setReadOnly(false);\n            }\n            @Override\n            public void cancel() {\n                systemDefForm.discard();\n                systemDefForm.setReadOnly(true);\n            }\n        };\n        bottomToolbar.setVisible(false);\n\n        systemDefTable.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(ValueChangeEvent event) {\n                Object systemDefId = systemDefTable.getValue();\n                if (systemDefId != null) {\n                    systemDefForm.setSystemDef(systemDefTable.getSystemDef(systemDefId));\n                }\n                systemDefForm.setReadOnly(true);\n                systemDefForm.setVisible(systemDefId != null);\n                bottomToolbar.setReadOnly(true);\n                bottomToolbar.setVisible(systemDefId != null);\n            }\n        });   \n\n        final Button add = new Button(\"Add SNMP SystemDef\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(ClickEvent event) {\n                systemDefTable.addSystemDef(systemDefForm.createBasicSystemDef());\n                systemDefForm.setReadOnly(false);\n                bottomToolbar.setReadOnly(false);\n                setIsNew(true);\n            }\n        });\n\n        final VerticalLayout mainLayout = new VerticalLayout();\n        mainLayout.setSpacing(true);\n        mainLayout.setMargin(true);\n        mainLayout.addComponent(systemDefTable);\n        mainLayout.addComponent(add);\n        mainLayout.addComponent(systemDefForm);\n        mainLayout.addComponent(bottomToolbar);\n        mainLayout.setComponentAlignment(add, Alignment.MIDDLE_RIGHT);\n        setContent(mainLayout);\n    }","commit_id":"fd3dc4fc7d823fc57250368e2a2e4751ca0c7610","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void type(String locator, String value) {\n\t\tWebElement webElement = getWebElement(locator);\n\n\t\tif (!webElement.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (TestPropsValues.MOBILE_DEVICE_ENABLED) {\n\t\t\twebElement.clear();\n\n\t\t\twebElement.click();\n\n\t\t\ttry {\n\t\t\t\tThread.sleep(1000);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tScreen screen = new Screen();\n\n\t\t\tscreen.type(value);\n\t\t}\n\t\telse {\n\t\t\twebElement.clear();\n\n\t\t\twebElement.sendKeys(value);\n\t\t}\n\t}","id":39159,"modified_method":"public static void type(WebDriver webDriver, String locator, String value) {\n\t\tWebElement webElement = getWebElement(webDriver, locator);\n\n\t\tif (!webElement.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\twebElement.clear();\n\n\t\twebElement.sendKeys(value);\n\t}","commit_id":"6568b57f8683c8283b2b9cb292d9769af61d9c5c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private boolean showLogFileContent(String line) {\n      final int i = line.lastIndexOf(']');\n      if (i != -1) {\n        File logFile = new File(line.substring(PLEASE_SEE_THE_LOGS_PREFIX.length(), i));\n        if (logFile.exists()) {\n          try {\n            myContext.addMessage(CompilerMessageCategory.ERROR, new String(FileUtil.loadFileText(logFile)), null, -1, -1);\n            return true;\n          }\n          catch (IOException ignored) {\n          }\n        }\n      }\n      return false;\n    }","id":39160,"modified_method":"private boolean showLogFileContent(String line) {\n      final int i = line.lastIndexOf(']');\n      if (i != -1) {\n        File logFile = new File(line.substring(PLEASE_SEE_THE_LOGS_PREFIX.length(), i));\n        if (logFile.exists()) {\n          try {\n            myContext.addMessage(CompilerMessageCategory.ERROR, FileUtil.loadFile(logFile), null, -1, -1);\n            return true;\n          }\n          catch (IOException ignored) {\n          }\n        }\n      }\n      return false;\n    }","commit_id":"e1f7e3b9535d45a662798e9a1f28d441ced08bac","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static Test suite() throws IOException {\n    TestSuite result = new TestSuite();\n\n    URL self = EventFactoryTest.class.getResource(\"EventFactoryTest.class\");\n    File parent = new File(new File(self.getFile()).getParentFile(), \"efData\");\n\n    File[] files = parent.listFiles();\n    for (int i = 0; i < files.length; i++) {\n      char[] contents = FileUtil.loadFileText(files[i]);\n      String []data = new String(contents).split(\"==[^=]*==\\r?\\n\");\n      result.addTest(new MessageEventTst(files[i].getName(), data));\n    }\n\n\n    //result.addTestSuite(EventFactoryTest.class);\n    return result;\n  }","id":39161,"modified_method":"public static Test suite() throws IOException {\n    TestSuite result = new TestSuite();\n\n    URL self = EventFactoryTest.class.getResource(\"EventFactoryTest.class\");\n    File parent = new File(new File(self.getFile()).getParentFile(), \"efData\");\n\n    File[] files = parent.listFiles();\n    for (int i = 0; i < files.length; i++) {\n      String s = FileUtil.loadFile(files[i]);\n      String []data = s.split(\"==[^=]*==\\r?\\n\");\n      result.addTest(new MessageEventTst(files[i].getName(), data));\n    }\n\n\n    //result.addTestSuite(EventFactoryTest.class);\n    return result;\n  }","commit_id":"10a3fd10657aa6fe14e1aab4ead22e5e6251ed18","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public void testNoPlainPassword() throws Exception {\n    myFacade.getMyAccount().setPassword(\"pwd822\");\n    myFacade.saveSettings();\n\n    File file = new File(myIDEFacade.getConfigDir(), JabberFacadeImpl.FILE_NAME);\n    String fileText = new String(FileUtil.loadFileText(file));\n\n    assertEquals(\"toString Should not contain plain password: \" + myFacade.getMyAccount().toString(), -1,\n        myFacade.getMyAccount().toString().indexOf(\"pwd822\"));\n    assertEquals(\"Settings file should not contain plain password: \" + fileText, -1, fileText.indexOf(\"pwd822\"));\n  }","id":39162,"modified_method":"public void testNoPlainPassword() throws Exception {\n    myFacade.getMyAccount().setPassword(\"pwd822\");\n    myFacade.saveSettings();\n\n    File file = new File(myIDEFacade.getConfigDir(), JabberFacadeImpl.FILE_NAME);\n    String fileText = FileUtil.loadFile(file);\n\n    assertEquals(\"toString Should not contain plain password: \" + myFacade.getMyAccount().toString(), -1,\n        myFacade.getMyAccount().toString().indexOf(\"pwd822\"));\n    assertEquals(\"Settings file should not contain plain password: \" + fileText, -1, fileText.indexOf(\"pwd822\"));\n  }","commit_id":"10a3fd10657aa6fe14e1aab4ead22e5e6251ed18","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public void testFileTemplate() throws Exception {\n    myUserModel.saveAll();\n\n    File file = new File(myTempDir, PersistentUserModelImpl.FILE_NAME);\n    String fileText = new String(FileUtil.loadFileText(file));\n    assertEquals(\"Invalid file template\",\n        \"<users>\\n\" +\n        \"  <myUsers class=\\\"set\\\"/>\\n\" +\n        \"  <myGroups class=\\\"set\\\"/>\\n\" +\n        \"<\/users>\",\n        fileText);\n  }","id":39163,"modified_method":"public void testFileTemplate() throws Exception {\n    myUserModel.saveAll();\n\n    File file = new File(myTempDir, PersistentUserModelImpl.FILE_NAME);\n    String fileText = FileUtil.loadFile(file);\n    assertEquals(\"Invalid file template\",\n        \"<users>\\n\" +\n        \"  <myUsers class=\\\"set\\\"/>\\n\" +\n        \"  <myGroups class=\\\"set\\\"/>\\n\" +\n        \"<\/users>\",\n        fileText);\n  }","commit_id":"10a3fd10657aa6fe14e1aab4ead22e5e6251ed18","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"static String loadFile(String fileName, String dir) throws IOException {\n    return StringUtil.convertLineSeparators(new String(FileUtil.loadFileText(new File(getBasePath()+\"/\" + dir + \"/\" + fileName))));\n  }","id":39164,"modified_method":"static String loadFile(String fileName, String dir) throws IOException {\n    return StringUtil.convertLineSeparators(FileUtil.loadFile(new File(getBasePath() + \"/\" + dir + \"/\" + fileName)));\n  }","commit_id":"1c4e4e952c18f9e02eef1c6520c850ff059232f9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public BuildoutCfgFile getConfigPsiFile() {\n    File cfg = getConfigFile();\n    if (cfg != null && cfg.exists()) {\n      try {\n        // this method is called before the project initialization is complete, so it has to use createFileFromText() instead\n        // of PsiManager.findFile()\n        char[] scriptText = FileUtil.loadFileText(cfg);\n        final PsiFile configFile = PsiFileFactory\n          .getInstance(getModule().getProject()).createFileFromText(\"buildout.cfg\",\n                                                                                  BuildoutCfgLanguage.INSTANCE, new String(scriptText));\n        if (configFile != null && configFile instanceof BuildoutCfgFile) {\n          return (BuildoutCfgFile)configFile;\n        }\n      }\n      catch (Exception ignored) {\n      }\n    }\n    return null;\n  }","id":39165,"modified_method":"@Nullable\n  public BuildoutCfgFile getConfigPsiFile() {\n    File cfg = getConfigFile();\n    if (cfg != null && cfg.exists()) {\n      try {\n        // this method is called before the project initialization is complete, so it has to use createFileFromText() instead\n        // of PsiManager.findFile()\n        String text = FileUtil.loadFile(cfg);\n        final PsiFile configFile = PsiFileFactory\n          .getInstance(getModule().getProject()).createFileFromText(\"buildout.cfg\",\n                                                                                  BuildoutCfgLanguage.INSTANCE, text);\n        if (configFile != null && configFile instanceof BuildoutCfgFile) {\n          return (BuildoutCfgFile)configFile;\n        }\n      }\n      catch (Exception ignored) {\n      }\n    }\n    return null;\n  }","commit_id":"895b91c29f3d80776f775d80e96859f906625ca8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doTest() {\n    String name = getTestName(true);\n    try {\n      String fileText = new String(FileUtil.loadFileText(new File(getTestDataPath() + name + \".py\")));\n      String expected = new String(FileUtil.loadFileText(new File(getTestDataPath() + name + \".after.py\")));\n      assertEquals(expected, PyConsoleIndentUtil.normalize(fileText));\n    }\n    catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }","id":39166,"modified_method":"private void doTest() {\n    String name = getTestName(true);\n    try {\n      String fileText = FileUtil.loadFile(new File(getTestDataPath() + name + \".py\"));\n      String expected = FileUtil.loadFile(new File(getTestDataPath() + name + \".after.py\"));\n      assertEquals(expected, PyConsoleIndentUtil.normalize(fileText));\n    }\n    catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }","commit_id":"895b91c29f3d80776f775d80e96859f906625ca8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public Object executeTransform(final Object input) {\n    final StringBuilder buffer = new StringBuilder();\n\n    if (prefix != null && !prefix.isEmpty())\n      buffer.append(resolve(prefix));\n\n    if (input != null)\n      buffer.append(input);\n\n    if (postfix != null && !postfix.isEmpty())\n      buffer.append(resolve(postfix));\n\n    out.println(buffer.toString()); //TODO    log(OETLProcessor.LOG_LEVELS.INFO, buffer.toString());\n\n    return input;\n  }","id":39167,"modified_method":"@Override\n  public Object executeTransform(final Object input) {\n    final StringBuilder buffer = new StringBuilder();\n\n    if (prefix != null && !prefix.isEmpty())\n      buffer.append(resolve(prefix));\n\n    if (input != null)\n      buffer.append(input);\n\n    if (postfix != null && !postfix.isEmpty())\n      buffer.append(resolve(postfix));\n\n      log(OETLProcessor.LOG_LEVELS.INFO, buffer.toString());\n\n    return input;\n  }","commit_id":"55b72af382d83a63c6c74edfddf82b3204749c21","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Test\n    public void testPrefix() throws Exception {\n        ByteArrayOutputStream output = new ByteArrayOutputStream();\n        System.setOut(new PrintStream(output, true));\n        String cfgJson = \"{source: { content: { value: 'id,postId,text\\n1,,Hello'} }, extractor : { row : {} }, transformers : [{ csv : {} },{ log : {prefix:'-> '}}], loader : { test: {} } }\";\n        process(cfgJson);\n        List<ODocument> res = getResult();\n        ODocument doc = res.get(0);\n        assertEquals(\"-> \", output.toString());\n\n    }","id":39168,"modified_method":"@Test\n    public void testPrefix() throws Exception {\n        ByteArrayOutputStream output = new ByteArrayOutputStream();\n        System.setOut(new PrintStream(output, true));\n        String cfgJson = \"{source: { content: { value: 'id,text\\n1,Hello\\n2,Bye'} }, extractor : { row : {} }, transformers : [{ csv : {} },{ log : {prefix:'-> '}}], loader : { test: {} } }\";\n        process(cfgJson);\n        List<ODocument> res = getResult();\n        ODocument doc = res.get(0);\n        String[] stringList = output.toString().split(\"\\n\");\n        assertEquals(\"[1:log] INFO -> {id:1,text:Hello}\", stringList[1]);\n        assertEquals(\"[2:log] INFO -> {id:2,text:Bye}\", stringList[2]);\n    }","commit_id":"55b72af382d83a63c6c74edfddf82b3204749c21","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Test\n    public void testPostfix() throws Exception {\n        String cfgJson = \"{source: { content: { value: 'id,postId,text\\n1,,Hello'} }, extractor : { row : {} }, transformers : [{ csv : {} },{ log : {postfix:'-> '}}], loader : { test: {} } }\";\n        process(cfgJson);\n        List<ODocument> res = getResult();\n        ODocument doc = res.get(0);\n        assertEquals(\"-> \", output.toString());\n    }","id":39169,"modified_method":"@Test\n    public void testPostfix() throws Exception {\n        ByteArrayOutputStream output = new ByteArrayOutputStream();\n        System.setOut(new PrintStream(output, true));\n        String cfgJson = \"{source: { content: { value: 'id,text\\n1,Hello\\n2,Bye'} }, extractor : { row : {} }, transformers : [{ csv : {} },{ log : {postfix:'-> '}}], loader : { test: {} } }\";\n        process(cfgJson);\n        List<ODocument> res = getResult();\n        ODocument doc = res.get(0);\n        String[] stringList = output.toString().split(\"\\n\");\n        assertEquals(\"[1:log] INFO {id:1,text:Hello}-> \", stringList[1]);\n        assertEquals(\"[2:log] INFO {id:2,text:Bye}-> \", stringList[2]);\n    }","commit_id":"55b72af382d83a63c6c74edfddf82b3204749c21","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"protected boolean isProhibitedReference(PsiField field) {\n      if (fields.contains(field)) {\n        return false;\n      }\n      if (innerClasses.contains(field.getContainingClass())) {\n        return false;\n      }\n      return true;\n    }","id":39170,"modified_method":"protected abstract boolean isProhibitedReference(PsiField field);","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected boolean preprocessUsages(final Ref<UsageInfo[]> refUsages) {\n    final MultiMap<PsiElement, String> conflicts = new MultiMap<PsiElement, String>();\n    final Project project = sourceClass.getProject();\n    final GlobalSearchScope scope = GlobalSearchScope.allScope(project);\n    final PsiClass existingClass =\n      JavaPsiFacade.getInstance(project).findClass(StringUtil.getQualifiedName(newPackageName, newClassName), scope);\n    if (existingClass != null) {\n      conflicts.putValue(existingClass, RefactorJBundle.message(\"cannot.perform.the.refactoring\") +\n                    RefactorJBundle.message(\"there.already.exists.a.class.with.the.chosen.name\"));\n    }\n\n    if (!myGenerateAccessors) {\n      calculateInitializersConflicts(conflicts);\n      final NecessaryAccessorsVisitor visitor = new NecessaryAccessorsVisitor();\n      for (PsiField field : fields) {\n        field.accept(visitor);\n      }\n      for (PsiMethod method : methods) {\n        method.accept(visitor);\n      }\n      for (PsiClass innerClass : innerClasses) {\n        innerClass.accept(visitor);\n      }\n\n      final Set<PsiField> fieldsNeedingGetter = visitor.getFieldsNeedingGetter();\n      for (PsiField field : fieldsNeedingGetter) {\n        conflicts.putValue(field, \"Field \\'\" + field.getName() + \"\\' needs getter\");\n      }\n      final Set<PsiField> fieldsNeedingSetter = visitor.getFieldsNeedingSetter();\n      for (PsiField field : fieldsNeedingSetter) {\n        conflicts.putValue(field, \"Field \\'\" + field.getName() + \"\\' needs getter\");\n      }\n    }\n    return showConflicts(conflicts, refUsages.get());\n  }","id":39171,"modified_method":"@Override\n  protected boolean preprocessUsages(final Ref<UsageInfo[]> refUsages) {\n    final MultiMap<PsiElement, String> conflicts = new MultiMap<PsiElement, String>();\n    final Project project = sourceClass.getProject();\n    final GlobalSearchScope scope = GlobalSearchScope.allScope(project);\n    final PsiClass existingClass =\n      JavaPsiFacade.getInstance(project).findClass(StringUtil.getQualifiedName(newPackageName, newClassName), scope);\n    if (existingClass != null) {\n      conflicts.putValue(existingClass, RefactorJBundle.message(\"cannot.perform.the.refactoring\") +\n                    RefactorJBundle.message(\"there.already.exists.a.class.with.the.chosen.name\"));\n    }\n\n    if (!myGenerateAccessors) {\n      calculateInitializersConflicts(conflicts);\n      final NecessaryAccessorsVisitor visitor = checkNecessaryGettersSetters4ExtractedClass();\n      final NecessaryAccessorsVisitor srcVisitor = checkNecessaryGettersSetters4SourceClass();\n      final Set<PsiField> fieldsNeedingGetter = new LinkedHashSet<PsiField>();\n      fieldsNeedingGetter.addAll(visitor.getFieldsNeedingGetter());\n      fieldsNeedingGetter.addAll(srcVisitor.getFieldsNeedingGetter());\n      for (PsiField field : fieldsNeedingGetter) {\n        conflicts.putValue(field, \"Field \\'\" + field.getName() + \"\\' needs getter\");\n      }\n      final Set<PsiField> fieldsNeedingSetter = new LinkedHashSet<PsiField>();\n      fieldsNeedingSetter.addAll(visitor.getFieldsNeedingSetter());\n      fieldsNeedingSetter.addAll(srcVisitor.getFieldsNeedingSetter());\n      for (PsiField field : fieldsNeedingSetter) {\n        conflicts.putValue(field, \"Field \\'\" + field.getName() + \"\\' needs setter\");\n      }\n    }\n    return showConflicts(conflicts, refUsages.get());\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void performRefactoring(UsageInfo[] usageInfos) {\n    final PsiClass psiClass = buildClass();\n    if (psiClass == null) return;\n    if (delegationRequired) {\n      buildDelegate();\n    }\n    final Set<PsiMember> members = new HashSet<PsiMember>();\n    for (PsiMethod method : methods) {\n      final PsiMethod member = psiClass.findMethodBySignature(method, false);\n      if (member != null) {\n        members.add(member);\n      }\n    }\n    for (PsiField field : fields) {\n      final PsiField member = psiClass.findFieldByName(field.getName(), false);\n      if (member != null) {\n        members.add(member);\n        final PsiExpression initializer = member.getInitializer();\n        if (initializer != null) {\n          final boolean[] moveInitializerToConstructor = new boolean[1];\n          initializer.accept(new JavaRecursiveElementWalkingVisitor(){\n            @Override\n            public void visitReferenceExpression(PsiReferenceExpression expression) {\n              super.visitReferenceExpression(expression);\n              final PsiElement resolved = expression.resolve();\n              if (resolved instanceof PsiField && !members.contains(resolved)) {\n                moveInitializerToConstructor[0] = true;\n              }\n            }\n          });\n\n          if (moveInitializerToConstructor[0]) {\n            final PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(myProject);\n            PsiMethod constructor;\n            final PsiMethod[] constructors = psiClass.getConstructors();\n            if (constructors.length == 0) {\n              constructor = elementFactory.createConstructor();\n              constructor.setName(psiClass.getName());\n              constructor = (PsiMethod)psiClass.add(constructor);\n            } else {\n              constructor = constructors[0];\n            }\n            MoveInstanceMembersUtil.moveInitializerToConstructor(elementFactory, constructor, member);\n          }\n        }\n      }\n    }\n\n    if (myGenerateAccessors) {\n      final NecessaryAccessorsVisitor visitor = new NecessaryAccessorsVisitor();\n      for (PsiField field : fields) {\n        field.accept(visitor);\n      }\n      for (PsiMethod method : methods) {\n        method.accept(visitor);\n      }\n      for (PsiClass innerClass : innerClasses) {\n        innerClass.accept(visitor);\n      }\n      for (PsiField field : visitor.getFieldsNeedingGetter()) {\n        sourceClass.add(PropertyUtil.generateGetterPrototype(field));\n      }\n\n      for (PsiField field : visitor.getFieldsNeedingSetter()) {\n        sourceClass.add(PropertyUtil.generateSetterPrototype(field));\n      }\n    }\n    super.performRefactoring(usageInfos);\n    if (myNewVisibility == null) return;\n    for (PsiMember member : members) {\n      VisibilityUtil.fixVisibility(usageInfos, member, myNewVisibility);\n    }\n  }","id":39172,"modified_method":"protected void performRefactoring(UsageInfo[] usageInfos) {\n    final PsiClass psiClass = buildClass();\n    if (psiClass == null) return;\n    if (delegationRequired) {\n      buildDelegate();\n    }\n    final Set<PsiMember> members = new HashSet<PsiMember>();\n    for (PsiMethod method : methods) {\n      final PsiMethod member = psiClass.findMethodBySignature(method, false);\n      if (member != null) {\n        members.add(member);\n      }\n    }\n    for (PsiField field : fields) {\n      final PsiField member = psiClass.findFieldByName(field.getName(), false);\n      if (member != null) {\n        members.add(member);\n        final PsiExpression initializer = member.getInitializer();\n        if (initializer != null) {\n          final boolean[] moveInitializerToConstructor = new boolean[1];\n          initializer.accept(new JavaRecursiveElementWalkingVisitor(){\n            @Override\n            public void visitReferenceExpression(PsiReferenceExpression expression) {\n              super.visitReferenceExpression(expression);\n              final PsiElement resolved = expression.resolve();\n              if (resolved instanceof PsiField && !members.contains(resolved)) {\n                moveInitializerToConstructor[0] = true;\n              }\n            }\n          });\n\n          if (moveInitializerToConstructor[0]) {\n            final PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(myProject);\n            PsiMethod constructor;\n            final PsiMethod[] constructors = psiClass.getConstructors();\n            if (constructors.length == 0) {\n              constructor = elementFactory.createConstructor();\n              constructor.setName(psiClass.getName());\n              constructor = (PsiMethod)psiClass.add(constructor);\n            } else {\n              constructor = constructors[0];\n            }\n            MoveInstanceMembersUtil.moveInitializerToConstructor(elementFactory, constructor, member);\n          }\n        }\n      }\n    }\n\n    if (myGenerateAccessors) {\n      final NecessaryAccessorsVisitor visitor = checkNecessaryGettersSetters4SourceClass();\n      for (PsiField field : visitor.getFieldsNeedingGetter()) {\n        sourceClass.add(PropertyUtil.generateGetterPrototype(field));\n      }\n\n      for (PsiField field : visitor.getFieldsNeedingSetter()) {\n        sourceClass.add(PropertyUtil.generateSetterPrototype(field));\n      }\n    }\n    super.performRefactoring(usageInfos);\n    if (myNewVisibility == null) return;\n    for (PsiMember member : members) {\n      VisibilityUtil.fixVisibility(usageInfos, member, myNewVisibility);\n    }\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private PsiClass buildClass() {\n    final PsiManager manager = sourceClass.getManager();\n    final Project project = sourceClass.getProject();\n    final ExtractedClassBuilder extractedClassBuilder = new ExtractedClassBuilder();\n    extractedClassBuilder.setProject(myProject);\n    extractedClassBuilder.setClassName(newClassName);\n    extractedClassBuilder.setPackageName(newPackageName);\n    extractedClassBuilder.setOriginalClassName(sourceClass.getQualifiedName());\n    extractedClassBuilder.setRequiresBackPointer(requiresBackpointer);\n    for (PsiField field : fields) {\n      extractedClassBuilder.addField(field);\n    }\n    for (PsiMethod method : methods) {\n      extractedClassBuilder.addMethod(method);\n    }\n    for (PsiClass innerClass : innerClasses) {\n      extractedClassBuilder.addInnerClass(innerClass, innerClassesToMakePublic.contains(innerClass));\n    }\n    extractedClassBuilder.setTypeArguments(typeParams);\n    final List<PsiClass> interfaces = calculateInterfacesSupported();\n    extractedClassBuilder.setInterfaces(interfaces);\n\n    if (myGenerateAccessors) {\n      final NecessaryAccessorsVisitor visitor = new NecessaryAccessorsVisitor() {\n        @Override\n        protected boolean isProhibitedReference(PsiField field) {\n          if (fields.contains(field)) {\n            return true;\n          }\n          if (innerClasses.contains(field.getContainingClass())) {\n            return true;\n          }\n          return false;\n        }\n      };\n      sourceClass.accept(visitor);\n      extractedClassBuilder.setFieldsNeedingGetters(visitor.getFieldsNeedingGetter());\n      extractedClassBuilder.setFieldsNeedingSetters(visitor.getFieldsNeedingSetter());\n    }\n\n    final String classString = extractedClassBuilder.buildBeanClass();\n\n    try {\n      final PsiFile containingFile = sourceClass.getContainingFile();\n\n      final PsiDirectory containingDirectory = containingFile.getContainingDirectory();\n      final Module module = ModuleUtil.findModuleForPsiElement(containingFile);\n      assert module != null;\n      final PsiDirectory directory = PackageUtil.findOrCreateDirectoryForPackage(module, newPackageName, containingDirectory, false);\n      if (directory != null) {\n        final PsiFile newFile = PsiFileFactory.getInstance(project).createFileFromText(newClassName + \".java\", classString);\n        final PsiElement addedFile = directory.add(newFile);\n        final CodeStyleManager codeStyleManager = manager.getCodeStyleManager();\n        final PsiElement shortenedFile = JavaCodeStyleManager.getInstance(project).shortenClassReferences(addedFile);\n        return ((PsiJavaFile)codeStyleManager.reformat(shortenedFile)).getClasses()[0];\n      } else {\n        return null;\n      }\n    }\n    catch (IncorrectOperationException e) {\n      return null;\n    }\n  }","id":39173,"modified_method":"private PsiClass buildClass() {\n    final PsiManager manager = sourceClass.getManager();\n    final Project project = sourceClass.getProject();\n    final ExtractedClassBuilder extractedClassBuilder = new ExtractedClassBuilder();\n    extractedClassBuilder.setProject(myProject);\n    extractedClassBuilder.setClassName(newClassName);\n    extractedClassBuilder.setPackageName(newPackageName);\n    extractedClassBuilder.setOriginalClassName(sourceClass.getQualifiedName());\n    extractedClassBuilder.setRequiresBackPointer(requiresBackpointer);\n    for (PsiField field : fields) {\n      extractedClassBuilder.addField(field);\n    }\n    for (PsiMethod method : methods) {\n      extractedClassBuilder.addMethod(method);\n    }\n    for (PsiClass innerClass : innerClasses) {\n      extractedClassBuilder.addInnerClass(innerClass, innerClassesToMakePublic.contains(innerClass));\n    }\n    extractedClassBuilder.setTypeArguments(typeParams);\n    final List<PsiClass> interfaces = calculateInterfacesSupported();\n    extractedClassBuilder.setInterfaces(interfaces);\n\n    if (myGenerateAccessors) {\n      final NecessaryAccessorsVisitor visitor = checkNecessaryGettersSetters4ExtractedClass();\n      sourceClass.accept(visitor);\n      extractedClassBuilder.setFieldsNeedingGetters(visitor.getFieldsNeedingGetter());\n      extractedClassBuilder.setFieldsNeedingSetters(visitor.getFieldsNeedingSetter());\n    }\n\n    final String classString = extractedClassBuilder.buildBeanClass();\n\n    try {\n      final PsiFile containingFile = sourceClass.getContainingFile();\n\n      final PsiDirectory containingDirectory = containingFile.getContainingDirectory();\n      final Module module = ModuleUtil.findModuleForPsiElement(containingFile);\n      assert module != null;\n      final PsiDirectory directory = PackageUtil.findOrCreateDirectoryForPackage(module, newPackageName, containingDirectory, false);\n      if (directory != null) {\n        final PsiFile newFile = PsiFileFactory.getInstance(project).createFileFromText(newClassName + \".java\", classString);\n        final PsiElement addedFile = directory.add(newFile);\n        final CodeStyleManager codeStyleManager = manager.getCodeStyleManager();\n        final PsiElement shortenedFile = JavaCodeStyleManager.getInstance(project).shortenClassReferences(addedFile);\n        return ((PsiJavaFile)codeStyleManager.reformat(shortenedFile)).getClasses()[0];\n      } else {\n        return null;\n      }\n    }\n    catch (IncorrectOperationException e) {\n      return null;\n    }\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void findUsagesForField(PsiField field, List<FixableUsageInfo> usages) {\n    final PsiManager psiManager = field.getManager();\n    final Project project = psiManager.getProject();\n    final GlobalSearchScope scope = GlobalSearchScope.allScope(project);\n\n    final String qualifiedName = StringUtil.getQualifiedName(newPackageName, newClassName);\n    @NonNls final String getter = PropertyUtil.suggestGetterName(myProject, field);\n    @NonNls final String setter = PropertyUtil.suggestSetterName(myProject, field);\n    final boolean isStatic = field.hasModifierProperty(PsiModifier.STATIC);\n\n    for (PsiReference reference : ReferencesSearch.search(field, scope)) {\n      final PsiElement element = reference.getElement();\n      if (isInMovedElement(element)) {\n        continue;\n      }\n\n      if (element instanceof PsiReferenceExpression) {\n        final PsiReferenceExpression exp = (PsiReferenceExpression)element;\n        if (RefactoringUtil.isPlusPlusOrMinusMinus(exp.getParent())) {\n          usages.add(isStatic\n                     ? new ReplaceStaticVariableIncrementDecrement(exp, qualifiedName)\n                     : new ReplaceInstanceVariableIncrementDecrement(exp, delegateFieldName, setter, getter));\n        }\n        else if (RefactoringUtil.isAssignmentLHS(exp)) {\n          usages.add(isStatic\n                     ? new ReplaceStaticVariableAssignment(exp, qualifiedName)\n                     : new ReplaceInstanceVariableAssignment(PsiTreeUtil.getParentOfType(exp, PsiAssignmentExpression.class),\n                                                             delegateFieldName, setter, getter));\n\n        }\n        else {\n          usages.add(isStatic\n                     ? new ReplaceStaticVariableAccess(exp, qualifiedName)\n                     : new ReplaceInstanceVariableAccess(exp, delegateFieldName, getter));\n        }\n\n        if (!isStatic) {\n          delegationRequired = true;\n        }\n      } else if (element instanceof PsiDocTagValue) {\n        usages.add(new BindJavadocReference(element, qualifiedName, field.getName()));\n      }\n    }\n  }","id":39174,"modified_method":"private void findUsagesForField(PsiField field, List<FixableUsageInfo> usages) {\n    final PsiManager psiManager = field.getManager();\n    final Project project = psiManager.getProject();\n    final GlobalSearchScope scope = GlobalSearchScope.allScope(project);\n\n    final String qualifiedName = StringUtil.getQualifiedName(newPackageName, newClassName);\n    @NonNls String getter = null;\n    if (myGenerateAccessors) {\n      getter = PropertyUtil.suggestGetterName(myProject, field);\n    } else {\n      final PsiMethod fieldGetter = PropertyUtil.findPropertyGetter(sourceClass, field.getName(), false, false);\n      if (fieldGetter != null && isInMovedElement(fieldGetter)) {\n        getter = fieldGetter.getName();\n      }\n    }\n\n    @NonNls String setter = null;\n    if (myGenerateAccessors) {\n      setter = PropertyUtil.suggestSetterName(myProject, field);\n    } else {\n      final PsiMethod fieldSetter = PropertyUtil.findPropertySetter(sourceClass, field.getName(), false, false);\n      if (fieldSetter != null && isInMovedElement(fieldSetter)) {\n        setter = fieldSetter.getName();\n      }\n    }\n    final boolean isStatic = field.hasModifierProperty(PsiModifier.STATIC);\n\n    for (PsiReference reference : ReferencesSearch.search(field, scope)) {\n      final PsiElement element = reference.getElement();\n      if (isInMovedElement(element)) {\n        continue;\n      }\n\n      if (element instanceof PsiReferenceExpression) {\n        final PsiReferenceExpression exp = (PsiReferenceExpression)element;\n        if (RefactoringUtil.isPlusPlusOrMinusMinus(exp.getParent())) {\n          usages.add(isStatic\n                     ? new ReplaceStaticVariableIncrementDecrement(exp, qualifiedName)\n                     : new ReplaceInstanceVariableIncrementDecrement(exp, delegateFieldName, setter, getter, field.getName()));\n        }\n        else if (RefactoringUtil.isAssignmentLHS(exp)) {\n          usages.add(isStatic\n                     ? new ReplaceStaticVariableAssignment(exp, qualifiedName)\n                     : new ReplaceInstanceVariableAssignment(PsiTreeUtil.getParentOfType(exp, PsiAssignmentExpression.class),\n                                                             delegateFieldName, setter, getter, field.getName()));\n\n        }\n        else {\n          usages.add(isStatic\n                     ? new ReplaceStaticVariableAccess(exp, qualifiedName)\n                     : new ReplaceInstanceVariableAccess(exp, delegateFieldName, getter, field.getName()));\n        }\n\n        if (!isStatic) {\n          delegationRequired = true;\n        }\n      } else if (element instanceof PsiDocTagValue) {\n        usages.add(new BindJavadocReference(element, qualifiedName, field.getName()));\n      }\n    }\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void visitReferenceExpression(PsiReferenceExpression expression) {\n      super.visitReferenceExpression(expression);\n      if (isProhibitedReference(expression)) {\n        final PsiField field = getReferencedField(expression);\n        if (!hasGetter(field) && !isStaticFinal(field)) {\n          fieldsNeedingGetter.add(field);\n        }\n      }\n    }","id":39175,"modified_method":"public void visitReferenceExpression(PsiReferenceExpression expression) {\n      super.visitReferenceExpression(expression);\n      if (isProhibitedReference(expression)) {\n        final PsiField field = getReferencedField(expression);\n        if (!hasGetter(field) && !isStaticFinal(field) && !field.getModifierList().hasModifierProperty(PsiModifier.PUBLIC)) {\n          fieldsNeedingGetter.add(field);\n        }\n      }\n    }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void visitAssignmentExpression(PsiAssignmentExpression expression) {\n      super.visitAssignmentExpression(expression);\n\n      final PsiExpression lhs = expression.getLExpression();\n      if (isProhibitedReference(lhs)) {\n        final PsiField field = getReferencedField(lhs);\n        if (!hasGetter(field) && !isStaticFinal(field)) {\n          fieldsNeedingSetter.add(field);\n        }\n      }\n    }","id":39176,"modified_method":"public void visitAssignmentExpression(PsiAssignmentExpression expression) {\n      super.visitAssignmentExpression(expression);\n\n      final PsiExpression lhs = expression.getLExpression();\n      if (isProhibitedReference(lhs)) {\n        final PsiField field = getReferencedField(lhs);\n        if (!hasGetter(field) && !isStaticFinal(field) && !field.getModifierList().hasModifierProperty(PsiModifier.PUBLIC)) {\n          fieldsNeedingSetter.add(field);\n        }\n      }\n    }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testUsedInInitializer() throws Exception {\n    doTestField(\"Class initializer requires moved members\");\n  }","id":39177,"modified_method":"public void testUsedInInitializer() throws Exception {\n    doTestField(\"Field 'myT' needs setter\\n\" +\n                \"Field 'myT' needs getter\\n\" +\n                \"Class initializer requires moved members\");\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testMultipleGetters() throws Exception {\n    doTestField(null);\n  }","id":39178,"modified_method":"public void testMultipleGetters() throws Exception {\n    doTestField(\"Field 'myT' needs getter\");\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void doTest(final PsiClass aClass, final ArrayList<PsiMethod> methods, final ArrayList<PsiField> fields, final String conflicts,\n                             boolean generateGettersSetters) {\n    try {\n      ExtractClassProcessor processor = new ExtractClassProcessor(aClass, fields, methods, new ArrayList<PsiClass>(), \"\", \"Extracted\", null, generateGettersSetters);\n      processor.run();\n      LocalFileSystem.getInstance().refresh(false);\n      FileDocumentManager.getInstance().saveAllDocuments();\n    }\n    catch (BaseRefactoringProcessor.ConflictsInTestsException e) {\n      if (conflicts != null) {\n        Assert.assertEquals(e.getMessage(), conflicts);\n        return;\n      } else {\n        fail(e.getMessage());\n      }\n    }\n    if (conflicts != null) {\n      fail(\"Conflicts were not detected: \" + conflicts);\n    }\n  }","id":39179,"modified_method":"private static void doTest(final PsiClass aClass, final ArrayList<PsiMethod> methods, final ArrayList<PsiField> fields, final String conflicts,\n                             boolean generateGettersSetters) {\n    try {\n      ExtractClassProcessor processor = new ExtractClassProcessor(aClass, fields, methods, new ArrayList<PsiClass>(), \"\", \"Extracted\", null, generateGettersSetters);\n      processor.run();\n      LocalFileSystem.getInstance().refresh(false);\n      FileDocumentManager.getInstance().saveAllDocuments();\n    }\n    catch (BaseRefactoringProcessor.ConflictsInTestsException e) {\n      if (conflicts != null) {\n        TreeSet expectedConflictsSet = new TreeSet(Arrays.asList(conflicts.split(\"\\n\")));\n        TreeSet actualConflictsSet = new TreeSet(Arrays.asList(e.getMessage().split(\"\\n\")));\n        Assert.assertEquals(expectedConflictsSet, actualConflictsSet);\n        return;\n      } else {\n        fail(e.getMessage());\n      }\n    }\n    if (conflicts != null) {\n      fail(\"Conflicts were not detected: \" + conflicts);\n    }\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testUsedInConstructor() throws Exception {\n    doTestField(\"Constructor requires moved members\");\n  }","id":39180,"modified_method":"public void testUsedInConstructor() throws Exception {\n    doTestField(\"Field 'myT' needs getter\\n\" +\n                \"Field 'myT' needs setter\\n\" +\n                \"Constructor requires moved members\");\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ReplaceInstanceVariableAccess(PsiReferenceExpression expression, String delegateName, String getterName) {\n        super(expression);\n        this.getterName = getterName;\n        this.delegateName = delegateName;\n        this.expression = expression;\n    }","id":39181,"modified_method":"public ReplaceInstanceVariableAccess(PsiReferenceExpression expression, String delegateName, String getterName, String name) {\n        super(expression);\n        this.getterName = getterName;\n        this.delegateName = delegateName;\n        this.expression = expression;\n        fieldName = name;\n    }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void fixUsage() throws IncorrectOperationException {\n        final PsiElement qualifier = expression.getQualifier();\n        final String callString = delegateName + '.' + getterName + \"()\";\n        if (qualifier != null) {\n            final String qualifierText = qualifier.getText();\n            MutationUtils.replaceExpression(qualifierText + '.' + callString, expression);\n        } else {\n            MutationUtils.replaceExpression(callString, expression);\n        }\n    }","id":39182,"modified_method":"public void fixUsage() throws IncorrectOperationException {\n        final PsiElement qualifier = expression.getQualifier();\n        final String callString = delegateName + '.' + (getterName != null ? getterName + \"()\" : fieldName);\n        if (qualifier != null) {\n            final String qualifierText = qualifier.getText();\n            MutationUtils.replaceExpression(qualifierText + '.' + callString, expression);\n        } else {\n            MutationUtils.replaceExpression(callString, expression);\n        }\n    }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void fixUsage() throws IncorrectOperationException {\n        final PsiReferenceExpression lhs =\n                (PsiReferenceExpression) assignment.getLExpression();\n        final PsiExpression rhs = assignment.getRExpression();\n        assert rhs != null;\n        final PsiElement qualifier = lhs.getQualifier();\n        final PsiJavaToken sign = assignment.getOperationSign();\n        final String operator = sign.getText();\n        final String rhsText = rhs.getText();\n        final String newExpression;\n        if (qualifier != null) {\n            final String qualifierText = qualifier.getText();\n            if (\"=\".equals(operator)) {\n                newExpression = qualifierText + '.' + delegateName + '.' + setterName + \"( \" + rhsText + ')';\n            } else {\n                final String strippedOperator = getStrippedOperator(operator);\n                newExpression = qualifierText + '.'+delegateName + '.' + setterName + '(' + qualifierText + '.'+delegateName + '.' + getterName + \"()\" + strippedOperator + rhsText + ')';\n            }\n        } else {\n            if (\"=\".equals(operator)) {\n                newExpression = delegateName + '.' + setterName + \"( \" + rhsText + ')';\n            } else {\n                final String strippedOperator = getStrippedOperator(operator);\n                newExpression = delegateName + '.' + setterName + '(' + delegateName + '.' + getterName + \"()\" + strippedOperator + rhsText + ')';\n            }\n        }\n        MutationUtils.replaceExpression(newExpression, assignment);\n    }","id":39183,"modified_method":"public void fixUsage() throws IncorrectOperationException {\n    final PsiReferenceExpression lhs =\n      (PsiReferenceExpression)assignment.getLExpression();\n    final PsiExpression rhs = assignment.getRExpression();\n    assert rhs != null;\n    final PsiElement qualifier = lhs.getQualifier();\n    final PsiJavaToken sign = assignment.getOperationSign();\n    final String operator = sign.getText();\n    final String rhsText = rhs.getText();\n    final String newExpression;\n    if (qualifier != null) {\n      final String qualifierText = qualifier.getText();\n      if (\"=\".equals(operator)) {\n        newExpression = qualifierText + '.' + delegateName + '.' + callSetter(rhsText);\n      }\n      else {\n        final String strippedOperator = getStrippedOperator(operator);\n        newExpression = qualifierText +\n                        '.' +\n                        delegateName +\n                        '.' +\n                        callSetter(\n                          qualifierText +\n                          '.' +\n                          delegateName +\n                          '.' +\n                          callGetter() + strippedOperator + rhsText);\n      }\n    }\n    else {\n      if (\"=\".equals(operator)) {\n        newExpression = delegateName + '.' + callSetter(rhsText);\n      }\n      else {\n        final String strippedOperator = getStrippedOperator(operator);\n        newExpression = delegateName + '.' + callSetter(delegateName + '.' + callGetter() + strippedOperator + rhsText);\n      }\n    }\n    MutationUtils.replaceExpression(newExpression, assignment);\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ReplaceInstanceVariableAssignment(PsiAssignmentExpression assignment,\n                                      String delegateName,\n                                      String setterName,\n                                      String getterName) {\n        super(assignment);\n        this.assignment = assignment;\n        this.getterName = getterName;\n        this.setterName = setterName;\n        this.delegateName = delegateName;\n    }","id":39184,"modified_method":"public ReplaceInstanceVariableAssignment(PsiAssignmentExpression assignment,\n                                           String delegateName,\n                                           String setterName,\n                                           String getterName, String name) {\n    super(assignment);\n    this.assignment = assignment;\n    this.getterName = getterName;\n    this.setterName = setterName;\n    this.delegateName = delegateName;\n    fieldName = name;\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void fixUsage() throws IncorrectOperationException {\n\n    final PsiReferenceExpression lhs;\n    final PsiJavaToken sign;\n    if (reference instanceof PsiPrefixExpression) {\n      lhs = (PsiReferenceExpression)((PsiPrefixExpression)reference).getOperand();\n      sign = ((PsiPrefixExpression)reference).getOperationSign();\n    }\n    else {\n      lhs = (PsiReferenceExpression)((PsiPostfixExpression)reference).getOperand();\n      sign = ((PsiPostfixExpression)reference).getOperationSign();\n    }\n    final PsiElement qualifier = lhs.getQualifier();\n    final String operator = sign.getText();\n    final String newExpression;\n    if (qualifier != null) {\n      final String qualifierText = qualifier.getText();\n      final String strippedOperator = getStrippedOperator(operator);\n      newExpression = qualifierText +\n                      '.' +\n                      delegateName +\n                      '.' +\n                      setterName +\n                      '(' +\n                      qualifierText +\n                      '.' +\n                      delegateName +\n                      '.' +\n                      getterName +\n                      \"()\" +\n                      strippedOperator +\n                      \"1)\";\n    }\n    else {\n      final String strippedOperator = getStrippedOperator(operator);\n      newExpression = delegateName + '.' + setterName + '(' + delegateName + '.' + getterName + \"()\" + strippedOperator + \"1)\";\n    }\n    MutationUtils.replaceExpression(newExpression, reference);\n  }","id":39185,"modified_method":"public void fixUsage() throws IncorrectOperationException {\n\n    final PsiReferenceExpression lhs;\n    final PsiJavaToken sign;\n    if (reference instanceof PsiPrefixExpression) {\n      lhs = (PsiReferenceExpression)((PsiPrefixExpression)reference).getOperand();\n      sign = ((PsiPrefixExpression)reference).getOperationSign();\n    }\n    else {\n      lhs = (PsiReferenceExpression)((PsiPostfixExpression)reference).getOperand();\n      sign = ((PsiPostfixExpression)reference).getOperationSign();\n    }\n    final PsiElement qualifier = lhs.getQualifier();\n    final String operator = sign.getText();\n    final String newExpression;\n    final String strippedOperator = getStrippedOperator(operator);\n    if (qualifier != null) {\n      final String qualifierText = qualifier.getText();\n      newExpression = qualifierText + '.' + delegateName + '.' +\n                      callSetter(qualifierText + '.' + delegateName + '.' + callGetter() + strippedOperator + \"1\");\n    }\n    else {\n      newExpression = delegateName + '.' + callSetter(delegateName + '.' + callGetter() + strippedOperator + \"1\");\n    }\n    MutationUtils.replaceExpression(newExpression, reference);\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ReplaceInstanceVariableIncrementDecrement(PsiExpression reference, String delegateName, String setterName, String getterName) {\n    super(reference);\n    this.getterName = getterName;\n    this.setterName = setterName;\n    this.delegateName = delegateName;\n    final PsiPrefixExpression prefixExpr = PsiTreeUtil.getParentOfType(reference, PsiPrefixExpression.class);\n    if (prefixExpr != null) {\n      this.reference = prefixExpr;\n    }\n    else {\n      this.reference = PsiTreeUtil.getParentOfType(reference, PsiPostfixExpression.class);\n    }\n  }","id":39186,"modified_method":"public ReplaceInstanceVariableIncrementDecrement(PsiExpression reference,\n                                                   String delegateName,\n                                                   String setterName,\n                                                   String getterName,\n                                                   String name) {\n    super(reference);\n    this.getterName = getterName;\n    this.setterName = setterName;\n    this.delegateName = delegateName;\n    fieldName = name;\n    final PsiPrefixExpression prefixExpr = PsiTreeUtil.getParentOfType(reference, PsiPrefixExpression.class);\n    if (prefixExpr != null) {\n      this.reference = prefixExpr;\n    }\n    else {\n      this.reference = PsiTreeUtil.getParentOfType(reference, PsiPostfixExpression.class);\n    }\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void bar(){\n    foo(extracted.getMyT());\n  }","id":39187,"modified_method":"void bar(){\n    foo(extracted.myT);\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public int getMyT() {\n    return extracted.getMyT();\n  }","id":39188,"modified_method":"public int getMyT() {\n    return myT;\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void bar(){\n    int i = extracted.getMyT();\n  }","id":39189,"modified_method":"void bar(){\n    int i = myT;\n  }","commit_id":"ab9827497de2d046155129386103052d26b1f47f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public boolean isLoggable( LogRecord logRecord )\n    {\n        return logRecord.getLoggerName()\n                .startsWith( \"org.neo4j.server\" );\n    }","id":39190,"modified_method":"@Override\n    public boolean isLoggable( LogRecord logRecord )\n    {\n        String loggerName = logRecord.getLoggerName();\n        return loggerName.startsWith( \"org.neo4j.server\" )\n                && !loggerName.startsWith( \"org.neo4j.server.storemigration\" );\n    }","commit_id":"1813c15fe653efa6efca5f4292adae7086f480b6","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void tryToUpgradeStores()\n    {\n        new StoreUpgrader( getConfig(), new ConfigMapUpgradeConfiguration(getConfig()),\n                new UpgradableDatabase(), new StoreMigrator( new VisibleMigrationProgressMonitor() ),\n                new DatabaseFiles() ).attemptUpgrade( getStorageFileName() );\n    }","id":39191,"modified_method":"private void tryToUpgradeStores()\n    {\n        new StoreUpgrader( getConfig(), new ConfigMapUpgradeConfiguration(getConfig()),\n                new UpgradableDatabase(), new StoreMigrator( new VisibleMigrationProgressMonitor( System.out ) ),\n                new DatabaseFiles() ).attemptUpgrade( getStorageFileName() );\n    }","commit_id":"1813c15fe653efa6efca5f4292adae7086f480b6","url":"https://github.com/neo4j/neo4j"},{"original_method":"public int run()\n    {\n        try\n        {\n            Configurator configurator = getConfigurator();\n            HashMap<Object, Object> config = new HashMap<Object, Object>( configurator.getDatabaseTuningProperties() );\n\n            String dbLocation = new File( configurator.configuration()\n                    .getString( Configurator.DATABASE_LOCATION_PROPERTY_KEY ) ).getAbsolutePath();\n\n            if ( new CurrentDatabase().storeFilesAtCurrentVersion( new File( dbLocation ) ) )\n            {\n                return 0;\n            }\n\n            String separator = System.getProperty( \"file.separator\" );\n            String store = dbLocation + separator + NeoStore.DEFAULT_NAME;\n            config.put( \"store_dir\", dbLocation );\n            config.put( \"neo_store\", store );\n            config.put( IdGeneratorFactory.class, CommonFactories.defaultIdGeneratorFactory() );\n            config.put( FileSystemAbstraction.class, CommonFactories.defaultFileSystemAbstraction() );\n\n            if ( !new UpgradableDatabase().storeFilesUpgradeable( new File( store ) ) )\n            {\n                logger.info( \"Store files missing, or not in suitable state for upgrade. \" +\n                        \"Leaving this problem for main server process to resolve.\" );\n                return 0;\n            }\n\n            StoreUpgrader storeUpgrader = new StoreUpgrader( config, new ConfigMapUpgradeConfiguration( config ),\n                    new UpgradableDatabase(), new StoreMigrator( new VisibleMigrationProgressMonitor() ),\n                    new DatabaseFiles() );\n\n            try\n            {\n                storeUpgrader.attemptUpgrade( store );\n            }\n            catch ( UpgradeNotAllowedByConfigurationException e )\n            {\n                logger.info( e.getMessage() );\n                out.println( e.getMessage() );\n                return 1;\n            }\n            catch ( StoreUpgrader.UnableToUpgradeException e )\n            {\n                logger.error( e );\n                return 1;\n            }\n            return 0;\n        }\n        catch ( Exception e )\n        {\n            logger.error( e );\n            return 1;\n        }\n    }","id":39192,"modified_method":"public int run()\n    {\n        try\n        {\n            Configurator configurator = getConfigurator();\n            HashMap<Object, Object> config = new HashMap<Object, Object>( configurator.getDatabaseTuningProperties() );\n\n            String dbLocation = new File( configurator.configuration()\n                    .getString( Configurator.DATABASE_LOCATION_PROPERTY_KEY ) ).getAbsolutePath();\n\n            if ( new CurrentDatabase().storeFilesAtCurrentVersion( new File( dbLocation ) ) )\n            {\n                return 0;\n            }\n\n            String separator = System.getProperty( \"file.separator\" );\n            String store = dbLocation + separator + NeoStore.DEFAULT_NAME;\n            config.put( \"store_dir\", dbLocation );\n            config.put( \"neo_store\", store );\n            config.put( IdGeneratorFactory.class, CommonFactories.defaultIdGeneratorFactory() );\n            config.put( FileSystemAbstraction.class, CommonFactories.defaultFileSystemAbstraction() );\n\n            if ( !new UpgradableDatabase().storeFilesUpgradeable( new File( store ) ) )\n            {\n                logger.info( \"Store files missing, or not in suitable state for upgrade. \" +\n                        \"Leaving this problem for main server process to resolve.\" );\n                return 0;\n            }\n\n            StoreUpgrader storeUpgrader = new StoreUpgrader( config, new ConfigMapUpgradeConfiguration( config ),\n                    new UpgradableDatabase(), new StoreMigrator( new VisibleMigrationProgressMonitor( out ) ),\n                    new DatabaseFiles() );\n\n            try\n            {\n                storeUpgrader.attemptUpgrade( store );\n            }\n            catch ( UpgradeNotAllowedByConfigurationException e )\n            {\n                logger.info( e.getMessage() );\n                out.println( e.getMessage() );\n                return 1;\n            }\n            catch ( StoreUpgrader.UnableToUpgradeException e )\n            {\n                logger.error( e );\n                return 1;\n            }\n            return 0;\n        }\n        catch ( Exception e )\n        {\n            logger.error( e );\n            return 1;\n        }\n    }","commit_id":"1813c15fe653efa6efca5f4292adae7086f480b6","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldUpgradeDatabase() throws IOException\n    {\n        Properties systemProperties = buildProperties( true );\n        prepareSampleLegacyDatabase( new File( STORE_DIRECTORY ) );\n        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\n        PreStartupStoreUpgrader upgrader = new PreStartupStoreUpgrader( systemProperties,\n                new PrintStream( outputStream ) );\n\n        int exit = upgrader.run();\n\n        assertEquals( 0, exit );\n\n        assertEquals( \"\", new String( outputStream.toByteArray() ) );\n    }","id":39193,"modified_method":"@Test\n    public void shouldUpgradeDatabase() throws IOException\n    {\n        Properties systemProperties = buildProperties( true );\n        prepareSampleLegacyDatabase( new File( STORE_DIRECTORY ) );\n        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n\n        PreStartupStoreUpgrader upgrader = new PreStartupStoreUpgrader( systemProperties,\n                new PrintStream( outputStream ) );\n\n        int exit = upgrader.run();\n\n        assertEquals( 0, exit );\n\n        String[] lines = new String( outputStream.toByteArray() ).split( \"\\n\" );\n        assertEquals( \"Starting upgrade of database store files\", lines[0] );\n        assertEquals( dots(100), lines[1] );\n        assertEquals( \"Finished upgrade of database store files\", lines[2] );\n    }","commit_id":"1813c15fe653efa6efca5f4292adae7086f480b6","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void run( String legacyStoreDirectory, String targetStoreDirectory ) throws IOException\n    {\n        LegacyStore legacyStore = new LegacyStore( new File( new File( legacyStoreDirectory ), NeoStore.DEFAULT_NAME ).getPath() );\n\n        HashMap config = new HashMap();\n        config.put( IdGeneratorFactory.class, CommonFactories.defaultIdGeneratorFactory() );\n        config.put( FileSystemAbstraction.class, CommonFactories.defaultFileSystemAbstraction() );\n\n        File targetStoreDirectoryFile = new File( targetStoreDirectory );\n        if ( targetStoreDirectoryFile.exists() )\n        {\n            throw new IllegalStateException( \"Cannot migrate to a directory that already exists, please delete first and re-run\" );\n        }\n        boolean success = targetStoreDirectoryFile.mkdirs();\n        if ( !success )\n        {\n            throw new IllegalStateException( \"Failed to create directory\" );\n        }\n\n        File targetStoreFile = new File( targetStoreDirectory, NeoStore.DEFAULT_NAME );\n        config.put( \"neo_store\", targetStoreFile.getPath() );\n        NeoStore.createStore( targetStoreFile.getPath(), config );\n        NeoStore neoStore = new NeoStore( config );\n\n        long startTime = System.currentTimeMillis();\n\n        new StoreMigrator( new VisibleMigrationProgressMonitor() ) .migrate( legacyStore, neoStore );\n\n        long duration = System.currentTimeMillis() - startTime;\n        System.out.printf( \"Migration completed in %d s%n\", duration / 1000 );\n\n        neoStore.close();\n\n        EmbeddedGraphDatabase database = new EmbeddedGraphDatabase( targetStoreDirectoryFile.getPath() );\n        database.shutdown();\n    }","id":39194,"modified_method":"private void run( String legacyStoreDirectory, String targetStoreDirectory ) throws IOException\n    {\n        LegacyStore legacyStore = new LegacyStore( new File( new File( legacyStoreDirectory ), NeoStore.DEFAULT_NAME ).getPath() );\n\n        HashMap config = new HashMap();\n        config.put( IdGeneratorFactory.class, CommonFactories.defaultIdGeneratorFactory() );\n        config.put( FileSystemAbstraction.class, CommonFactories.defaultFileSystemAbstraction() );\n\n        File targetStoreDirectoryFile = new File( targetStoreDirectory );\n        if ( targetStoreDirectoryFile.exists() )\n        {\n            throw new IllegalStateException( \"Cannot migrate to a directory that already exists, please delete first and re-run\" );\n        }\n        boolean success = targetStoreDirectoryFile.mkdirs();\n        if ( !success )\n        {\n            throw new IllegalStateException( \"Failed to create directory\" );\n        }\n\n        File targetStoreFile = new File( targetStoreDirectory, NeoStore.DEFAULT_NAME );\n        config.put( \"neo_store\", targetStoreFile.getPath() );\n        NeoStore.createStore( targetStoreFile.getPath(), config );\n        NeoStore neoStore = new NeoStore( config );\n\n        long startTime = System.currentTimeMillis();\n\n        new StoreMigrator( new VisibleMigrationProgressMonitor( System.out ) ) .migrate( legacyStore, neoStore );\n\n        long duration = System.currentTimeMillis() - startTime;\n        System.out.printf( \"Migration completed in %d s%n\", duration / 1000 );\n\n        neoStore.close();\n\n        EmbeddedGraphDatabase database = new EmbeddedGraphDatabase( targetStoreDirectoryFile.getPath() );\n        database.shutdown();\n    }","commit_id":"1813c15fe653efa6efca5f4292adae7086f480b6","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void migrate( LegacyStore legacyStore, NeoStore neoStore ) throws IOException\n    {\n        new Migration( legacyStore, neoStore ).migrate();\n    }","id":39195,"modified_method":"public void migrate( LegacyStore legacyStore, NeoStore neoStore ) throws IOException\n    {\n        progressMonitor.started();\n        new Migration( legacyStore, neoStore ).migrate();\n        progressMonitor.finished();\n    }","commit_id":"1813c15fe653efa6efca5f4292adae7086f480b6","url":"https://github.com/neo4j/neo4j"},{"original_method":"@SuppressWarnings({\"unchecked\"})\n    @Test\n    public void shouldMigrate() throws IOException\n    {\n        URL legacyStoreResource = getClass().getResource( \"legacystore/exampledb/neostore\" );\n\n        LegacyStore legacyStore = new LegacyStore( legacyStoreResource.getFile() );\n\n        HashMap config = MigrationTestUtils.defaultConfig();\n        File outputDir = new File( \"target/outputDatabase\" );\n        FileUtils.deleteRecursively( outputDir );\n        assertTrue( outputDir.mkdirs() );\n\n        String storeFileName = \"target/outputDatabase/neostore\";\n        config.put( \"neo_store\", storeFileName );\n        NeoStore.createStore( storeFileName, config );\n        NeoStore neoStore = new NeoStore( config );\n\n        ListAccumulatorMigrationProgressMonitor monitor = new ListAccumulatorMigrationProgressMonitor();\n\n        new StoreMigrator( monitor ).migrate( legacyStore, neoStore );\n\n        neoStore.close();\n\n        assertEquals( 100, monitor.events.size() );\n\n        GraphDatabaseService database = new EmbeddedGraphDatabase( outputDir.getPath() );\n\n        DatabaseContentVerifier verifier = new DatabaseContentVerifier( database );\n        verifier.verifyNodes();\n        verifier.verifyRelationships();\n        verifier.verifyNodeIdsReused();\n        verifier.verifyRelationshipIdsReused();\n\n        database.shutdown();\n    }","id":39196,"modified_method":"@SuppressWarnings({\"unchecked\"})\n    @Test\n    public void shouldMigrate() throws IOException\n    {\n        URL legacyStoreResource = getClass().getResource( \"legacystore/exampledb/neostore\" );\n\n        LegacyStore legacyStore = new LegacyStore( legacyStoreResource.getFile() );\n\n        HashMap config = MigrationTestUtils.defaultConfig();\n        File outputDir = new File( \"target/outputDatabase\" );\n        FileUtils.deleteRecursively( outputDir );\n        assertTrue( outputDir.mkdirs() );\n\n        String storeFileName = \"target/outputDatabase/neostore\";\n        config.put( \"neo_store\", storeFileName );\n        NeoStore.createStore( storeFileName, config );\n        NeoStore neoStore = new NeoStore( config );\n\n        ListAccumulatorMigrationProgressMonitor monitor = new ListAccumulatorMigrationProgressMonitor();\n\n        new StoreMigrator( monitor ).migrate( legacyStore, neoStore );\n\n        neoStore.close();\n\n        assertEquals( 100, monitor.events.size() );\n        assertTrue( monitor.started );\n        assertTrue( monitor.finished );\n\n        GraphDatabaseService database = new EmbeddedGraphDatabase( outputDir.getPath() );\n\n        DatabaseContentVerifier verifier = new DatabaseContentVerifier( database );\n        verifier.verifyNodes();\n        verifier.verifyRelationships();\n        verifier.verifyNodeIdsReused();\n        verifier.verifyRelationshipIdsReused();\n\n        database.shutdown();\n    }","commit_id":"1813c15fe653efa6efca5f4292adae7086f480b6","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void percentComplete( int percent )\n    {\n        System.out.print(\".\");\n        System.out.flush();\n        if (percent % 10 == 0)\n        {\n            logger.log( Level.INFO, String.format(\"Store upgrade %d%% complete\", percent) );\n        }\n    }","id":39197,"modified_method":"public void percentComplete( int percent )\n    {\n        out.print( \".\" );\n        out.flush();\n        if (percent % 10 == 0)\n        {\n            logger.log( Level.INFO, String.format(\"Store upgrade %d%% complete\", percent) );\n        }\n    }","commit_id":"1813c15fe653efa6efca5f4292adae7086f480b6","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Nullable\n  public Dependency addDependency(@NotNull SModuleReference moduleRef, boolean reexport) {\n    assertCanChange();\n    ModuleDescriptor descriptor = getModuleDescriptor();\n    if (descriptor == null) return null;\n    for (Dependency dep : descriptor.getDependencies()) {\n      if (!EqualUtil.equals(dep.getModuleRef(), moduleRef)) continue;\n\n      if (reexport && !dep.isReexport()) {\n        dep.setReexport(true);\n        dependenciesChanged();\n        setChanged();\n      }\n      return dep;\n    }\n\n    Dependency dep = new Dependency();\n    dep.setModuleRef(moduleRef);\n    dep.setReexport(reexport);\n    descriptor.getDependencies().add(dep);\n\n    dependenciesChanged();\n    setChanged();\n    return dep;\n  }","id":39198,"modified_method":"/**\n   * FIXME module editing is generally done through descriptor and reload. Although I do not mind exposing add/remove methods here, it should be consistent!\n   */\n  @Nullable\n  public Dependency addDependency(@NotNull SModuleReference moduleRef, boolean reexport) {\n    assertCanChange();\n    ModuleDescriptor descriptor = getModuleDescriptor();\n    if (descriptor == null) return null;\n    for (Dependency dep : descriptor.getDependencies()) {\n      if (!EqualUtil.equals(dep.getModuleRef(), moduleRef)) continue;\n\n      if (reexport && !dep.isReexport()) {\n        dep.setReexport(true);\n        dependenciesChanged();\n        setChanged();\n      }\n      return dep;\n    }\n\n    Dependency dep = new Dependency();\n    dep.setModuleRef(moduleRef);\n    dep.setReexport(reexport);\n    descriptor.getDependencies().add(dep);\n\n    dependenciesChanged();\n    setChanged();\n    return dep;\n  }","commit_id":"d1286bc0ac036aa6f5d97446a930bcd5f2004e5a","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void execute(final SNode node, final EditorContext editorContext) {\n      new DependencyHelper(node, editorContext).execute();\n    }","id":39199,"modified_method":"@Override\n    public void execute(final SNode node, final EditorContext editorContext) {\n      EditorComponent ec = editorContext.getEditorComponent();\n      new DependencyHelper(node, editorContext).execute((ec instanceof Component ? ((Component) ec) : ProjectHelper.toMainFrame(editorContext.getOperationContext().getProject())));\n    }","commit_id":"d1286bc0ac036aa6f5d97446a930bcd5f2004e5a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public DependencyHelper(SNode node, EditorContext context) {\n    this.myNode = node;\n    this.myModule = SNodeOperations.getModel(node).getModule();\n    this.myFrame = ProjectHelper.toMainFrame(context.getOperationContext().getProject());\n  }","id":39200,"modified_method":"public DependencyHelper(SNode node, EditorContext context) {\n    myNode = node;\n    myRepository = context.getRepository();\n  }","commit_id":"d1286bc0ac036aa6f5d97446a930bcd5f2004e5a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean isApplicable() {\n    return execute(true) > 0;\n  }","id":39201,"modified_method":"public boolean isApplicable() {\n    return !(findMissingModelImports().isEmpty());\n  }","commit_id":"d1286bc0ac036aa6f5d97446a930bcd5f2004e5a","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void onClose() {\n      if (myModelToImport == null) {\n        return;\n      }\n      myProject.getModelAccess().executeCommand(new Runnable() {\n        @Override\n        public void run() {\n          new ModelImporter(myModel, getFrame()).execute(myModelToImport);\n        }\n      });\n    }","id":39202,"modified_method":"@Override\n    public void onClose() {\n      if (myModelToImport == null) {\n        return;\n      }\n\n      myProject.getModelAccess().executeCommand(new Runnable() {\n        @Override\n        public void run() {\n          final ModelImporter modelImporter = new ModelImporter(myModel);\n          modelImporter.prepare(myModelToImport);\n          boolean confirmed = true;\n          if (modelImporter.affectsModuleDependencies()) {\n            confirmed = modelImporter.confirmModuleChanges(getFrame());\n          }\n          if (confirmed) {\n            modelImporter.execute();\n          }\n        }\n      });\n    }","commit_id":"d1286bc0ac036aa6f5d97446a930bcd5f2004e5a","url":"https://github.com/JetBrains/MPS"},{"original_method":"private Result analyzeImport(final SModelReference modelRefToImport) {\n    SModuleReference module = null;\n    boolean dependency = true;\n\n    SModel modelToImport = modelRefToImport.resolve(myModel.getRepository());\n    assert modelToImport != null;\n    SModule moduleToImport = modelToImport.getModule();\n\n    if (moduleToImport instanceof Language && myModule instanceof Solution && ((Language) moduleToImport).isAccessoryModel(modelRefToImport)) {\n      dependency = false;\n    }\n\n    if (!VisibilityUtil.isVisible(myModule, modelToImport)) {\n      module = moduleToImport.getModuleReference();\n    }\n    return Result.create(dependency, module);\n  }","id":39203,"modified_method":"private Entry analyzeImport(final SModelReference modelRefToImport) {\n    SModel modelToImport = modelRefToImport.resolve(myModel.getRepository());\n    if (modelToImport == null) {\n      throw new IllegalArgumentException(String.format(\"Bad model reference: %s\", modelRefToImport));\n    }\n    if (myModel.getModule() == null) {\n      // code below doesn't make sense if there's no module\n      return new Entry(modelRefToImport);\n    }\n    SModule moduleToImport = modelToImport.getModule();\n\n    if (VisibilityUtil.isVisible(myModel.getModule(), modelToImport) || moduleToImport == null) {\n      return new Entry(modelRefToImport);\n    }\n\n    if (moduleToImport instanceof Language && myModel.getModule() instanceof Solution && ((Language) moduleToImport).isAccessoryModel(modelRefToImport)) {\n      // this dubious condition traces back to https://youtrack.jetbrains.com/issue/MPS-17337\n      return new Entry(MetaAdapterByDeclaration.getLanguage((Language) moduleToImport));\n    }\n    return new Entry(modelRefToImport, moduleToImport.getModuleReference());\n  }","commit_id":"d1286bc0ac036aa6f5d97446a930bcd5f2004e5a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ModelImporter(SModel model, Component frame) {\n    myModel = model;\n    myFrame = frame;\n    myModule = model.getModule();\n  }","id":39204,"modified_method":"public ModelImporter(@NotNull SModel model) {\n    myModel = model;\n    // This class was designed to edit fully fledged model, if your scenario needs to check for\n    // visibility/scope of module dependencies for free-floating model, consider passing SRepository here.\n    assert model.getRepository() != null;\n  }","commit_id":"d1286bc0ac036aa6f5d97446a930bcd5f2004e5a","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void execute(final SModelReference modelToImport) {\n    Result analysisResult = analyzeImport(modelToImport);\n    final SModuleReference moduleRefToImport = analysisResult.myModuleRef;\n    final boolean needToAddDep = analysisResult.myNeedToAddDep;\n\n    if (moduleRefToImport != null) {\n      importModelWithModule(modelToImport, moduleRefToImport, needToAddDep);\n    } else {\n      importOnlyModel(modelToImport);\n    }\n    ClassLoaderManager.getInstance().reloadModule(myModule);\n  }","id":39205,"modified_method":"public void prepare(SModelReference modelRefToImport) {\n    Entry e = analyzeImport(modelRefToImport);\n    myImports.add(e);\n  }","commit_id":"d1286bc0ac036aa6f5d97446a930bcd5f2004e5a","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  @Nullable\n  public Object getData(DataProvider dataProvider) {\n    Project project = (Project) dataProvider.getData(MPSDataKeys.PROJECT.getName());\n    if (project == null) {\n      IdeFrame frame = (IdeFrame) dataProvider.getData(MPSDataKeys.FRAME.getName());\n      if (frame != null) project = frame.getProject();\n    }\n    if (project == null) return null;\n    List<SNode> nodes = (List<SNode>) dataProvider.getData(MPSDataKeys.NODES.getName());\n    if (nodes != null && nodes.size() > 1) return new MPSLocation(project, nodes);\n    SNode node = (SNode) dataProvider.getData(MPSDataKeys.NODE.getName());\n    if (node != null) return new MPSLocation(project, node);\n    SModel model = (SModel) dataProvider.getData(MPSDataKeys.MODEL.getName());\n    if (model != null) return new MPSLocation(project, model);\n    SModule module = (SModule) dataProvider.getData(MPSDataKeys.MODULE.getName());\n    if (module != null) return new MPSLocation(project, module);\n    jetbrains.mps.project.Project mpsProject = (jetbrains.mps.project.Project) dataProvider.getData(MPSDataKeys.MPS_PROJECT.getName());\n    if (mpsProject != null) return new MPSLocation(project, mpsProject);\n    return null;\n  }","id":39206,"modified_method":"@Override\n  @Nullable\n  public Object getData(DataProvider dataProvider) {\n    MPSProject mpsProject = MPSDataKeys.MPS_PROJECT.getData(dataProvider);\n    if (mpsProject == null) {\n      Project ideaProject = MPSDataKeys.PROJECT.getData(dataProvider);\n      if (ideaProject == null) {\n        Frame frame = MPSDataKeys.FRAME.getData(dataProvider);\n        if (frame instanceof IdeFrame) {\n          ideaProject = ((IdeFrame) frame).getProject();\n        }\n      }\n      if (ideaProject == null) {\n        return null;\n      }\n      mpsProject = ProjectHelper.fromIdeaProject(ideaProject);\n      if (mpsProject == null) {\n        return null;\n      }\n    }\n    List<SNode> nodes = MPSDataKeys.NODES.getData(dataProvider);\n    if (nodes != null && nodes.size() > 1) {\n      return new MPSLocation(mpsProject, new MPSPsiElement(nodes, mpsProject));\n    }\n    SNode node = MPSDataKeys.NODE.getData(dataProvider);\n    if (node != null) {\n      return new MPSLocation(mpsProject, new MPSPsiElement(node, mpsProject));\n    }\n    SModel model =  MPSDataKeys.MODEL.getData(dataProvider);\n    if (model != null) {\n      return new MPSLocation(mpsProject, new MPSPsiElement(model, mpsProject));\n    }\n    SModule module = MPSDataKeys.MODULE.getData(dataProvider);\n    if (module != null) {\n      return new MPSLocation(mpsProject, new MPSPsiElement(module, mpsProject));\n    }\n    return new MPSLocation(mpsProject, new MPSPsiElement(mpsProject));\n  }","commit_id":"5e3f4496a47446a08196d637e0d5e8f4bdf5b684","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MPSLocation(Project project, final Object item) {\n    myMPSProject = ProjectHelper.fromIdeaProject(project);\n    if (myMPSProject == null) {\n      throw new IllegalStateException(\"No project for the idea project '\" + project + \"'\");\n    }\n    myPSIElement = new ModelAccessHelper(myMPSProject.getRepository()).runReadAction(new Computable<MPSPsiElement>() {\n      @Override\n      public MPSPsiElement compute() {\n        return MPSPsiElement.createFor(item, myMPSProject);\n      }\n    });\n  }","id":39207,"modified_method":"public MPSLocation(@NotNull MPSProject project, @NotNull MPSPsiElement psiElement) {\n    myMPSProject = project;\n    myPSIElement = psiElement;\n  }","commit_id":"5e3f4496a47446a08196d637e0d5e8f4bdf5b684","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  @NotNull\n  public Iterator getAncestors(Class ancestorClass, boolean strict) {\n    return new ArrayList().iterator();\n  }","id":39208,"modified_method":"@Override\n  @NotNull\n  public Iterator getAncestors(Class ancestorClass, boolean strict) {\n    return Collections.emptyList().iterator();\n  }","commit_id":"5e3f4496a47446a08196d637e0d5e8f4bdf5b684","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MPSPsiElement(SModel model, MPSProject project) {\n    this(project);\n    myItem = model.getReference();\n  }","id":39209,"modified_method":"public MPSPsiElement(SModel model, MPSProject project) {\n    this(project, model.getReference(), model instanceof TransientSModel);\n  }","commit_id":"5e3f4496a47446a08196d637e0d5e8f4bdf5b684","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MPSPsiElement(SNode node, MPSProject project) {\n    this(node.getReference(), project);\n  }","id":39210,"modified_method":"public MPSPsiElement(SNode node, MPSProject project) {\n    this(project, node.getReference(), node.getModel() instanceof TransientSModel);\n  }","commit_id":"5e3f4496a47446a08196d637e0d5e8f4bdf5b684","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MPSPsiElement(@NotNull MPSProject project) {\n    myMPSProject = project;\n    myRepository = project.getRepository();\n    myItem = project;\n  }","id":39211,"modified_method":"public MPSPsiElement(@NotNull MPSProject project) {\n    this(project, project, false);\n  }","commit_id":"5e3f4496a47446a08196d637e0d5e8f4bdf5b684","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MPSPsiElement(List<SNode> nodes, MPSProject project) {\n    this(project);\n    myItem = map(nodes, new Mapper<SNode, SNodeReference>() {\n      @Override\n      public SNodeReference value(SNode key) {\n        return new jetbrains.mps.smodel.SNodePointer(key);\n      }\n    });\n  }","id":39212,"modified_method":"public MPSPsiElement(List<SNode> nodes, MPSProject project) {\n    this(project, map(nodes, new Mapper<SNode, SNodeReference>() {\n      @Override\n      public SNodeReference value(SNode key) {\n        return key.getReference();\n      }\n    }), false);\n  }","commit_id":"5e3f4496a47446a08196d637e0d5e8f4bdf5b684","url":"https://github.com/JetBrains/MPS"},{"original_method":"public MPSPsiElement(SModule module, MPSProject project) {\n    this(project);\n    myItem = module.getModuleReference();\n  }","id":39213,"modified_method":"public MPSPsiElement(SModule module, MPSProject project) {\n    this(project, module.getModuleReference(), module instanceof TransientSModule);\n  }","commit_id":"5e3f4496a47446a08196d637e0d5e8f4bdf5b684","url":"https://github.com/JetBrains/MPS"},{"original_method":"public TestOutputComponent(Project project, JComponent parentComponent, ConsoleView console, TestRunState state) {\n    myConsoleView = console;\n    myComponent = myConsoleView.getComponent();\n    myState = state;\n  }","id":39214,"modified_method":"public TestOutputComponent(ConsoleView console, TestRunState state) {\n    myConsoleView = console;\n    myComponent = myConsoleView.getComponent();\n    myState = state;\n  }","commit_id":"5e3f4496a47446a08196d637e0d5e8f4bdf5b684","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Nullable\n    @Override\n    public Object getData(@NonNls String dataId) {\n      if (dataId.equals(Location.LOCATION)) {\n        MPSTreeNode currentNode = myTreeComponent.getCurrentNode();\n        if (currentNode == null) {\n          return null;\n        }\n        return new MPSLocation(myProject, ((ITestNodeWrapper) currentNode.getUserObject()).getNodePointer());\n      }\n      return null;\n    }","id":39215,"modified_method":"@Nullable\n    @Override\n    public Object getData(@NonNls String dataId) {\n      if (MPSDataKeys.MPS_PROJECT.is(dataId)) {\n        return myProject;\n      }\n      if (MPSDataKeys.NODE.is(dataId)) {\n        MPSTreeNode currentNode = myTreeComponent.getCurrentNode();\n        if (currentNode == null) {\n          return null;\n        }\n        ITestNodeWrapper testWrapper = (ITestNodeWrapper) currentNode.getUserObject();\n        // XXX it's unclear whether we shall assume model read lock here, or obtain it ourselves \n        // I didn't get the lock here as it's stupid to ask for SNode not inside a lock already. \n        return testWrapper.getNodePointer().resolve(myProject.getRepository());\n      }\n      return null;\n    }","commit_id":"5e3f4496a47446a08196d637e0d5e8f4bdf5b684","url":"https://github.com/JetBrains/MPS"},{"original_method":"public UnitTestViewComponent(Project project, ConsoleView console, TestRunState testRunState, _FunctionTypes._void_P0_E0 closeListener) {\n    myProject = project;\n    myTestState = testRunState;\n    StatisticsTableModel statisticsModel = new StatisticsTableModel(myTestState);\n\n    myTreeComponent = new TestTree(myTestState, ProjectHelper.toMPSProject(project), this);\n    myTestNavigator = new FailedTestOccurrenceNavigator(myTreeComponent);\n    myActionToolComponent = new TestToolbarPanel(myTreeComponent, myTestNavigator);\n\n    JComponent leftPanel = createTreeComponent(myActionToolComponent, myTreeComponent);\n\n    myProgressLineComponent = new ProgressLine(myTestState);\n    myProgressLineComponent.setMinimumSize(new Dimension(0, myProgressLineComponent.getMinimumSize().height));\n    myOutputComponent = new TestOutputComponent(myProject, this, console, myTestState);\n    myTreeComponent.addTreeSelectionListener(new TestTreeSelectionListener(myTreeComponent, statisticsModel, myOutputComponent));\n    myTreeComponent.addMouseListener(new TestTreeRootMouseListener(myTreeComponent, statisticsModel, myOutputComponent));\n\n    JPanel rightPanel = createOutputComponent(console, myProgressLineComponent, myOutputComponent.getComponent(), statisticsModel);\n\n    Splitter splitter = new Splitter(false);\n    initSplitterProportion(splitter, 0.2f, \"tree\");\n    splitter.setFirstComponent(leftPanel);\n    splitter.setSecondComponent(rightPanel);\n    setLayout(new BorderLayout());\n\n    add(splitter, BorderLayout.CENTER);\n\n    myTestState.addView(myTreeComponent);\n    myTestState.addView(myProgressLineComponent);\n    myTestState.addView(myOutputComponent);\n    addCloseListener(closeListener);\n  }","id":39216,"modified_method":"public UnitTestViewComponent(Project project, ConsoleView console, TestRunState testRunState, _FunctionTypes._void_P0_E0 closeListener) {\n    myProject = ProjectHelper.fromIdeaProject(project);\n    myTestState = testRunState;\n    StatisticsTableModel statisticsModel = new StatisticsTableModel(myTestState);\n\n    myTreeComponent = new TestTree(myTestState, myProject, this);\n    myTestNavigator = new FailedTestOccurrenceNavigator(myTreeComponent);\n    myActionToolComponent = new TestToolbarPanel(myTreeComponent, myTestNavigator);\n\n    JComponent leftPanel = createTreeComponent(myActionToolComponent, myTreeComponent);\n\n    myProgressLineComponent = new ProgressLine(myTestState);\n    myProgressLineComponent.setMinimumSize(new Dimension(0, myProgressLineComponent.getMinimumSize().height));\n    myOutputComponent = new TestOutputComponent(console, myTestState);\n    myTreeComponent.addTreeSelectionListener(new TestTreeSelectionListener(myTreeComponent, statisticsModel, myOutputComponent));\n    myTreeComponent.addMouseListener(new TestTreeRootMouseListener(myTreeComponent, statisticsModel, myOutputComponent));\n\n    JPanel rightPanel = createOutputComponent(console, myProgressLineComponent, myOutputComponent.getComponent(), statisticsModel);\n\n    Splitter splitter = new Splitter(false);\n    initSplitterProportion(splitter, 0.2f, \"tree\");\n    splitter.setFirstComponent(leftPanel);\n    splitter.setSecondComponent(rightPanel);\n    setLayout(new BorderLayout());\n\n    add(splitter, BorderLayout.CENTER);\n\n    myTestState.addView(myTreeComponent);\n    myTestState.addView(myProgressLineComponent);\n    myTestState.addView(myOutputComponent);\n    addCloseListener(closeListener);\n  }","commit_id":"5e3f4496a47446a08196d637e0d5e8f4bdf5b684","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Set<ModuleReference> getUsedLanguages(SModel model) {\n    Set<ModuleReference> result = new HashSet<ModuleReference>();\n    for (SNode node : model.nodes()) {\n      Language lang = node.getLanguage(GlobalScope.getInstance());\n      ModuleReference ref = lang.getModuleReference();\n      result.add(ref);\n    }\n    return result;\n  }","id":39217,"modified_method":"public static Set<ModuleReference> getUsedLanguages(@NotNull SModel model) {\n    Set<ModuleReference> result = new HashSet<ModuleReference>();\n    for (SNode node : model.nodes()) {\n      Language lang = node.getLanguage(GlobalScope.getInstance());\n      if (lang == null) continue;\n      result.add(lang.getModuleReference());\n    }\n    return result;\n  }","commit_id":"13e55625af036f8002857cc44290055dd4b78c8b","url":"https://github.com/JetBrains/MPS"},{"original_method":"private Result optimizeSolutionImports_internal(Solution solution) {\n    List<SModel> modelsToOptimize = solution.getModels();\n    Result result = optimizeModelsImports_internal(modelsToOptimize);\n    result.myReport = optimizeModuleImports(solution, result) + \"\\n\\n\" + result.myReport;\n    return result;\n  }","id":39218,"modified_method":"private Result optimizeSolutionImports_internal(Solution solution) {\n    List<SModel> modelsToOptimize = solution.getModels();\n    Result result = optimizeModelsImports_internal(modelsToOptimize);\n    result.myReport = optimizeModuleImports(solution, result, Collections.<SModuleReference>emptySet()) + \"\\n\\n\" + result.myReport;\n    return result;\n  }","commit_id":"1836f0eec0e9edd5425e66dc46ac5e20b842f4df","url":"https://github.com/JetBrains/MPS"},{"original_method":"private Result optimizeLanguageImports_internal(Language language) {\n    List<SModel> modelsToOptimize = new ArrayList<SModel>();\n    modelsToOptimize.addAll(language.getModels());\n    for (Generator g : language.getGenerators()) {\n      modelsToOptimize.addAll(g.getModels());\n    }\n    Result result = optimizeModelsImports_internal(modelsToOptimize);\n    SModelRepository.getInstance().saveAll();\n    for (Generator g : language.getGenerators()) {\n      result.myReport = optimizeModuleImports(g, result) + \"\\n\\n\" + result.myReport;\n    }\n    result.myReport = optimizeModuleImports(language, result) + \"\\n\\n\" + result.myReport;\n\n    return result;\n  }","id":39219,"modified_method":"private Result optimizeLanguageImports_internal(Language language) {\n    List<SModel> modelsToOptimize = new ArrayList<SModel>();\n    for (SModel model : language.getModels()) {\n      if (SModelStereotype.isDescriptorModelStereotype(SModelStereotype.getStereotype(model)) || SModelStereotype.isStubModel(model)) {\n        // with @desciptor model hosting imports to activate generation of custom aspects, it's not wise to remove these.\n        // stub models aren't best candidates for organize imports, too.\n        continue;\n      }\n      modelsToOptimize.add(model);\n    }\n    for (Generator g : language.getGenerators()) {\n      modelsToOptimize.addAll(g.getModels());\n    }\n    Result result = optimizeModelsImports_internal(modelsToOptimize);\n    SModelRepository.getInstance().saveAll(); // FIXME pass SRepository into OIH\n    for (Generator g : language.getGenerators()) {\n      HashSet<SModuleReference> referencedGenerators = new HashSet<SModuleReference>();\n      // ArrayDeque doesn't tolerate null, unfortunately\n      LinkedList<MappingConfig_AbstractRef> mcRefs = new LinkedList<MappingConfig_AbstractRef>();\n      for (MappingPriorityRule rule : g.getModuleDescriptor().getPriorityRules()) {\n        mcRefs.add(rule.getLeft());\n        mcRefs.add(rule.getRight());\n      }\n      while (!mcRefs.isEmpty()) {\n        MappingConfig_AbstractRef ref = mcRefs.removeFirst();\n        if (ref instanceof MappingConfig_RefSet) {\n          mcRefs.addAll(((MappingConfig_RefSet) ref).getMappingConfigs());\n          continue;\n        }\n        if (ref instanceof MappingConfig_ExternalRef) {\n          referencedGenerators.add(((MappingConfig_ExternalRef) ref).getGenerator());\n        }\n      }\n      result.myReport = optimizeModuleImports(g, result, referencedGenerators) + \"\\n\\n\" + result.myReport;\n    }\n    result.myReport = optimizeModuleImports(language, result, Collections.<SModuleReference>emptySet()) + \"\\n\\n\" + result.myReport;\n\n    return result;\n  }","commit_id":"1836f0eec0e9edd5425e66dc46ac5e20b842f4df","url":"https://github.com/JetBrains/MPS"},{"original_method":"private String optimizeModuleImports(AbstractModule module, Result result) {\n    List<Dependency> unusedDeps = new ArrayList<Dependency>();\n    for (Dependency d : module.getModuleDescriptor().getDependencies()) {\n      Dependency dep = getUnusedDependency(result, d, module.getModuleReference());\n      if (dep != null) {\n        unusedDeps.add(dep);\n      }\n    }\n\n    return removeFromImports(module, unusedDeps);\n  }","id":39220,"modified_method":"private String optimizeModuleImports(AbstractModule module, Result result, Collection<SModuleReference> toKeep) {\n    List<Dependency> unusedDeps = new ArrayList<Dependency>();\n    final SModuleReference optimizedModuleReference = module.getModuleReference();\n    HashSet<SModuleReference> inUse = new HashSet<SModuleReference>(toKeep);\n    SRepository repository = module.getRepository(); // FIXME pass repository to resolve models in as an argument for the OIH itself.\n    // from used models, find out modules we need\n    for (SModelReference mr : result.myUsedModels) {\n      SModuleReference moduleInUse = mr.getModuleReference();\n      if (moduleInUse == null) {\n        if (repository != null) {\n          SModel model = mr.resolve(repository);\n          if (model != null && model.getModule() != null) {\n            inUse.add(model.getModule().getModuleReference());\n          }\n        }\n      } else {\n        inUse.add(moduleInUse);\n      }\n    }\n    for (Dependency d : module.getModuleDescriptor().getDependencies()) {\n      if (d.getModuleRef().equals(optimizedModuleReference)) {\n        unusedDeps.add(d);\n        continue;\n      }\n      if (inUse.contains(d.getModuleRef())) {\n        continue;\n      }\n      unusedDeps.add(d);\n    }\n\n    return removeFromImports(module, unusedDeps);\n  }","commit_id":"1836f0eec0e9edd5425e66dc46ac5e20b842f4df","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public Iterable<SModel> loadModels() {\n    SModule module = getModule();\n    if (module instanceof Generator) {\n      module = ((Generator) module).getSourceLanguage();\n    }\n    if (module == null || !(module.getModuleReference() instanceof SModuleReference)) {\n      return super.loadModels();\n    }\n\n    CachedModuleData moduleData = myCachedRepository.getModuleData((SModuleReference) module.getModuleReference());\n    if (moduleData == null) {\n      return super.loadModels();\n    }\n\n    List<CachedModelData> models = moduleData.getModels(this);\n    if (models == null) {\n      return super.loadModels();\n    }\n\n    List<SModel> result = new ArrayList<SModel>();\n    for (CachedModelData mdata : models) {\n      IFile file = FileSystem.getInstance().getFileByPath(mdata.getFile());\n      FileDataSource source = new FileDataSource(file, this);\n      Object header = mdata.getHeader();\n      if (header instanceof SModelHeader) {\n        SModelHeader smheader = (SModelHeader) header;\n        result.add(new DefaultSModelDescriptor(source, smheader.getModelReference(), smheader));\n      } else if (header instanceof BinaryModelHeader) {\n        result.add(new BinarySModelDescriptor(source, ((BinaryModelHeader) header).createCopy()));\n      } else {\n        String fileName = file.getName();\n        String extension = FileUtil.getExtension(fileName);\n\n        if (extension == null) continue;\n        ModelFactory modelFactory = PersistenceFacade.getInstance().getModelFactory(extension);\n        if (modelFactory == null) continue;\n\n        SModel model = modelFactory.load(source);\n        // TODO handle errors\n        if (model != null) {\n          result.add(model);\n        }\n      }\n    }\n    return result;\n  }","id":39221,"modified_method":"@Override\n  public Iterable<SModel> loadModels() {\n    SModule module = getModule();\n    if (module instanceof Generator) {\n      module = ((Generator) module).getSourceLanguage();\n    }\n    if (module == null) {\n      return super.loadModels();\n    }\n\n    CachedModuleData moduleData = myCachedRepository.getModuleData(module.getModuleReference());\n    if (moduleData == null) {\n      return super.loadModels();\n    }\n\n    List<CachedModelData> models = moduleData.getModels(this);\n    if (models == null) {\n      return super.loadModels();\n    }\n\n    List<SModel> result = new ArrayList<SModel>();\n    Map<String, String> options = new HashMap<String, String>();\n    options.put(ModelFactory.OPTION_MODULEREF, module.getModuleReference().toString());\n    IFile moduleSourceDir = ((AbstractModule) module).getModuleSourceDir();\n    final String moduleHome = moduleSourceDir != null ? moduleSourceDir.getPath().replace(\"\\\\\", \"/\") : null;\n\n    for (CachedModelData mdata : models) {\n      IFile file = FileSystem.getInstance().getFileByPath(mdata.getFile());\n      FileDataSource source = new FileDataSource(file, this);\n      Object header = mdata.getHeader();\n      if (header instanceof SModelHeader) {\n        SModelHeader smheader = (SModelHeader) header;\n        result.add(new DefaultSModelDescriptor(source, smheader.getModelReference(), smheader));\n      } else if (header instanceof BinaryModelHeader) {\n        result.add(new BinarySModelDescriptor(source, ((BinaryModelHeader) header).createCopy()));\n      } else {\n        String fileName = file.getName();\n        String extension = FileUtil.getExtension(fileName);\n\n        if (extension == null) continue;\n        ModelFactory modelFactory = PersistenceFacade.getInstance().getModelFactory(extension);\n        if (modelFactory == null) continue;\n\n        // TODO package & modelName\n        options.put(ModelFactory.OPTION_RELPATH, moduleHome != null ? makeRelative(moduleHome, file.getPath()) : null);\n        SModel model = modelFactory.load(source, Collections.unmodifiableMap(options));\n        // TODO handle errors\n        if (model != null) {\n          result.add(model);\n        }\n      }\n    }\n    return result;\n  }","commit_id":"b25aa91be87d7ff42e37622de8e61674721cbc59","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static String makeRelative(String moduleHome, String fullPath) {\n    if ((fullPath == null || fullPath.length() == 0)) {\n      return \"\";\n    }\n    String normalized = FileUtil.getAbsolutePath(fullPath).replace(\"\\\\\", \"/\");\n    try {\n      return FileUtil.getRelativePath(normalized, moduleHome, \"/\");\n    } catch (Exception ex) {\n      return null;\n    }\n  }","id":39222,"modified_method":"protected static String makeRelative(String moduleHome, String fullPath) {\n    if ((fullPath == null || fullPath.length() == 0)) {\n      return \"\";\n    }\n    String normalized = FileUtil.getAbsolutePath(fullPath).replace(\"\\\\\", \"/\");\n    try {\n      return FileUtil.getRelativePath(normalized, moduleHome, \"/\");\n    } catch (Exception ex) {\n      return null;\n    }\n  }","commit_id":"b25aa91be87d7ff42e37622de8e61674721cbc59","url":"https://github.com/JetBrains/MPS"},{"original_method":"private ResolveResult[] tryResolveLibraries() {\n    final String libraryName = DartPsiImplUtil.normalizeLibraryName(StringUtil.unquoteString(getText()));\n    final List<VirtualFile> virtualFiles = DartLibraryIndex.findLibraryClass(this, libraryName);\n    final List<PsiElementResolveResult> result = new ArrayList<PsiElementResolveResult>();\n    for (VirtualFile virtualFile : virtualFiles) {\n      final PsiFile psiFile = getManager().findFile(virtualFile);\n      for (PsiElement root : DartResolveUtil.findDartRoots(psiFile)) {\n        DartLibraryStatement lib = PsiTreeUtil.getChildOfType(root, DartLibraryStatement.class);\n        if (lib == null) {\n          continue;\n        }\n        DartQualifiedComponentName componentName = lib.getQualifiedComponentName();\n        result.add(new PsiElementResolveResult(componentName));\n      }\n    }\n    return result.toArray(new ResolveResult[result.size()]);\n  }","id":39223,"modified_method":"private ResolveResult[] tryResolveLibraries() {\n    final String libraryName = StringUtil.unquoteString(getText());\n    final List<VirtualFile> virtualFiles = DartLibraryIndex.findLibraryClass(this, libraryName);\n    final List<PsiElementResolveResult> result = new ArrayList<PsiElementResolveResult>();\n    for (VirtualFile virtualFile : virtualFiles) {\n      final PsiFile psiFile = getManager().findFile(virtualFile);\n      for (PsiElement root : DartResolveUtil.findDartRoots(psiFile)) {\n        DartLibraryStatement lib = PsiTreeUtil.getChildOfType(root, DartLibraryStatement.class);\n        if (lib == null) {\n          continue;\n        }\n        DartQualifiedComponentName componentName = lib.getQualifiedComponentName();\n        result.add(new PsiElementResolveResult(componentName));\n      }\n    }\n    return result.toArray(new ResolveResult[result.size()]);\n  }","commit_id":"769d83f889a1941e7a721ce5921a513047d574ad","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n  public static String getLibraryName(@NotNull DartPartOfStatement importStatement) {\n    final DartLibraryId expression = importStatement.getLibraryId();\n    return FileUtil.toSystemIndependentName(normalizeLibraryName(StringUtil.unquoteString(expression.getText())));\n  }","id":39224,"modified_method":"@NotNull\n  public static String getLibraryName(@NotNull DartPartOfStatement importStatement) {\n    final DartLibraryId expression = importStatement.getLibraryId();\n    return FileUtil.toSystemIndependentName(StringUtil.unquoteString(expression.getText()));\n  }","commit_id":"769d83f889a1941e7a721ce5921a513047d574ad","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n  public static String getLibraryName(@NotNull DartLibraryStatement libraryStatement) {\n    final DartQualifiedComponentName componentName = libraryStatement.getQualifiedComponentName();\n    return normalizeLibraryName(StringUtil.notNullize(componentName.getName()));\n  }","id":39225,"modified_method":"@NotNull\n  public static String getLibraryName(@NotNull DartLibraryStatement libraryStatement) {\n    final DartQualifiedComponentName componentName = libraryStatement.getQualifiedComponentName();\n    return StringUtil.notNullize(componentName.getName());\n  }","commit_id":"769d83f889a1941e7a721ce5921a513047d574ad","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n  public static String getLibraryName(@NotNull DartImportStatement importStatement) {\n    final DartExpression expression = importStatement.getLibraryExpression();\n    return FileUtil.toSystemIndependentName(normalizeLibraryName(StringUtil.unquoteString(expression.getText())));\n  }","id":39226,"modified_method":"@NotNull\n  public static String getLibraryName(@NotNull DartImportStatement importStatement) {\n    final DartExpression expression = importStatement.getLibraryExpression();\n    return FileUtil.toSystemIndependentName(StringUtil.unquoteString(expression.getText()));\n  }","commit_id":"769d83f889a1941e7a721ce5921a513047d574ad","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n    protected void configureIncrementalCompilation(ScalaCompileSpec spec) {\n        if (getScalaCompileOptions().isUseAnt()) {\n            // Don't use incremental compilation with ant-backed compiler\n            return;\n        }\n        super.configureIncrementalCompilation(spec);\n    }","id":39227,"modified_method":"@Override\n    protected void configureIncrementalCompilation(ScalaCompileSpec spec) {\n        if (((ScalaCompileOptionsInternal) getScalaCompileOptions()).internalIsUseAnt()) {\n            // Don't use incremental compilation with ant-backed compiler\n            return;\n        }\n        super.configureIncrementalCompilation(spec);\n    }","commit_id":"9b8f48042151c450bd1f671ebd37f29bc8ed604f","url":"https://github.com/gradle/gradle"},{"original_method":"@Inject\n    public ScalaCompile() {\n        super(new ScalaCompileOptions());\n    }","id":39228,"modified_method":"@Inject\n    public ScalaCompile() {\n        super(new ScalaCompileOptionsInternal());\n    }","commit_id":"9b8f48042151c450bd1f671ebd37f29bc8ed604f","url":"https://github.com/gradle/gradle"},{"original_method":"protected org.gradle.language.base.internal.compile.Compiler<ScalaJavaJointCompileSpec> getCompiler(ScalaJavaJointCompileSpec spec) {\n        assertScalaClasspathIsNonEmpty();\n        if (compiler == null) {\n            ProjectInternal projectInternal = (ProjectInternal) getProject();\n            IsolatedAntBuilder antBuilder = getServices().get(IsolatedAntBuilder.class);\n            CompilerDaemonFactory compilerDaemonFactory = getServices().get(CompilerDaemonManager.class);\n            JavaCompilerFactory javaCompilerFactory = getServices().get(JavaCompilerFactory.class);\n            ScalaCompilerFactory scalaCompilerFactory = new ScalaCompilerFactory(projectInternal.getRootProject().getProjectDir(), antBuilder, javaCompilerFactory, compilerDaemonFactory, getScalaClasspath(), getZincClasspath(), getProject().getGradle().getGradleUserHomeDir());\n            compiler = scalaCompilerFactory.newCompiler(spec);\n            if (getScalaCompileOptions().isUseAnt()) {\n                compiler = new CleaningScalaCompiler(compiler, getOutputs());\n            }\n        }\n        return compiler;\n    }","id":39229,"modified_method":"protected org.gradle.language.base.internal.compile.Compiler<ScalaJavaJointCompileSpec> getCompiler(ScalaJavaJointCompileSpec spec) {\n        assertScalaClasspathIsNonEmpty();\n        if (compiler == null) {\n            ProjectInternal projectInternal = (ProjectInternal) getProject();\n            IsolatedAntBuilder antBuilder = getServices().get(IsolatedAntBuilder.class);\n            CompilerDaemonFactory compilerDaemonFactory = getServices().get(CompilerDaemonManager.class);\n            JavaCompilerFactory javaCompilerFactory = getServices().get(JavaCompilerFactory.class);\n            ScalaCompilerFactory scalaCompilerFactory = new ScalaCompilerFactory(projectInternal.getRootProject().getProjectDir(), antBuilder, javaCompilerFactory, compilerDaemonFactory, getScalaClasspath(), getZincClasspath(), getProject().getGradle().getGradleUserHomeDir());\n            compiler = scalaCompilerFactory.newCompiler(spec);\n            if (((ScalaCompileOptionsInternal) getScalaCompileOptions()).internalIsUseAnt()) {\n                compiler = new CleaningScalaCompiler(compiler, getOutputs());\n            }\n        }\n        return compiler;\n    }","commit_id":"9b8f48042151c450bd1f671ebd37f29bc8ed604f","url":"https://github.com/gradle/gradle"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    public Compiler<ScalaJavaJointCompileSpec> newCompiler(ScalaJavaJointCompileSpec spec) {\n        ScalaCompileOptions scalaOptions = (ScalaCompileOptions) spec.getScalaCompileOptions();\n        Set<File> scalaClasspathFiles = scalaClasspath.getFiles();\n        if (scalaOptions.isUseAnt()) {\n            Compiler<ScalaCompileSpec> scalaCompiler = new AntScalaCompiler(antBuilder, scalaClasspathFiles);\n            Compiler<JavaCompileSpec> javaCompiler = javaCompilerFactory.createForJointCompilation(spec.getClass());\n            return new NormalizingScalaCompiler(new DefaultScalaJavaJointCompiler(scalaCompiler, javaCompiler));\n        }\n\n        if (!scalaOptions.isFork()) {\n            throw new GradleException(\"The Zinc based Scala compiler ('scalaCompileOptions.useAnt=false') \"\n                    + \"requires forking ('scalaCompileOptions.fork=true'), but the latter is set to 'false'.\");\n        }\n\n        Set<File> zincClasspathFiles = zincClasspath.getFiles();\n\n        // currently, we leave it to ZincScalaCompiler to also compile the Java code\n        Compiler<ScalaJavaJointCompileSpec> scalaCompiler = new DaemonScalaCompiler<ScalaJavaJointCompileSpec>(rootProjectDirectory, new ZincScalaCompiler(scalaClasspathFiles, zincClasspathFiles, gradleUserHomeDir), compilerDaemonFactory, zincClasspathFiles);\n        return new NormalizingScalaCompiler(scalaCompiler);\n    }","id":39230,"modified_method":"@SuppressWarnings(\"unchecked\")\n    public Compiler<ScalaJavaJointCompileSpec> newCompiler(ScalaJavaJointCompileSpec spec) {\n        ScalaCompileOptionsInternal scalaOptions = (ScalaCompileOptionsInternal) spec.getScalaCompileOptions();\n        Set<File> scalaClasspathFiles = scalaClasspath.getFiles();\n        if (scalaOptions.internalIsUseAnt()) {\n            Compiler<ScalaCompileSpec> scalaCompiler = new AntScalaCompiler(antBuilder, scalaClasspathFiles);\n            Compiler<JavaCompileSpec> javaCompiler = javaCompilerFactory.createForJointCompilation(spec.getClass());\n            return new NormalizingScalaCompiler(new DefaultScalaJavaJointCompiler(scalaCompiler, javaCompiler));\n        }\n\n        if (!scalaOptions.internalIsFork()) {\n            throw new GradleException(\"The Zinc based Scala compiler ('scalaCompileOptions.useAnt=false') \"\n                    + \"requires forking ('scalaCompileOptions.fork=true'), but the latter is set to 'false'.\");\n        }\n\n        Set<File> zincClasspathFiles = zincClasspath.getFiles();\n\n        // currently, we leave it to ZincScalaCompiler to also compile the Java code\n        Compiler<ScalaJavaJointCompileSpec> scalaCompiler = new DaemonScalaCompiler<ScalaJavaJointCompileSpec>(rootProjectDirectory, new ZincScalaCompiler(scalaClasspathFiles, zincClasspathFiles, gradleUserHomeDir), compilerDaemonFactory, zincClasspathFiles);\n        return new NormalizingScalaCompiler(scalaCompiler);\n    }","commit_id":"9b8f48042151c450bd1f671ebd37f29bc8ed604f","url":"https://github.com/gradle/gradle"},{"original_method":"@TaskAction\n    protected void compile() {\n        S spec = createSpec();\n        spec.setSource(getSource());\n        spec.setDestinationDir(getDestinationDir());\n        spec.setWorkingDir(getProject().getProjectDir());\n        spec.setTempDir(getTemporaryDir());\n        spec.setClasspath(getClasspath());\n        spec.setSourceCompatibility(getSourceCompatibility());\n        spec.setTargetCompatibility(getTargetCompatibility());\n        if (!useAnt()) {\n            configureIncrementalCompilation(spec);\n        }\n        getCompiler(spec).execute(spec);\n    }","id":39231,"modified_method":"@TaskAction\n    protected void compile() {\n        ScalaJavaJointCompileSpec spec = createSpec();\n        configureIncrementalCompilation(spec);\n        getCompiler(spec).execute(spec);\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    protected Map<File, File> getOrCreateGlobalAnalysisMap() {\n        ExtraPropertiesExtension extraProperties = getProject().getRootProject().getExtensions().getExtraProperties();\n        Map<File, File> analysisMap;\n\n        if (extraProperties.has(\"scalaCompileAnalysisMap\")) {\n            analysisMap = (Map) extraProperties.get(\"scalaCompileAnalysisMap\");\n        } else {\n            analysisMap = Maps.newHashMap();\n            for (Project project : getProject().getRootProject().getAllprojects()) {\n                for (AbstractScalaCompile<S, T> task : project.getTasks().withType(getClass())) {\n                    if(useAnt()){\n                        continue;\n                    }\n                    File publishedCode = task.getScalaCompileOptions().getIncrementalOptions().getPublishedCode();\n                    File analysisFile = task.getScalaCompileOptions().getIncrementalOptions().getAnalysisFile();\n                    analysisMap.put(publishedCode, analysisFile);\n                }\n            }\n            extraProperties.set(\"scalaCompileAnalysisMap\", Collections.unmodifiableMap(analysisMap));\n        }\n        return analysisMap;\n    }","id":39232,"modified_method":"@SuppressWarnings(\"unchecked\")\n    protected Map<File, File> getOrCreateGlobalAnalysisMap() {\n        ExtraPropertiesExtension extraProperties = getProject().getRootProject().getExtensions().getExtraProperties();\n        Map<File, File> analysisMap;\n\n        if (extraProperties.has(\"scalaCompileAnalysisMap\")) {\n            analysisMap = (Map) extraProperties.get(\"scalaCompileAnalysisMap\");\n        } else {\n            analysisMap = Maps.newHashMap();\n            for (Project project : getProject().getRootProject().getAllprojects()) {\n                for (AbstractScalaCompile task : project.getTasks().withType(AbstractScalaCompile.class)) {\n                    File publishedCode = task.getScalaCompileOptions().getIncrementalOptions().getPublishedCode();\n                    File analysisFile = task.getScalaCompileOptions().getIncrementalOptions().getAnalysisFile();\n                    analysisMap.put(publishedCode, analysisFile);\n                }\n            }\n            extraProperties.set(\"scalaCompileAnalysisMap\", Collections.unmodifiableMap(analysisMap));\n        }\n        return analysisMap;\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"protected S createSpec() {\n        AbstractScalaJavaJointCompileSpec<T> spec = newSpec();\n        spec.setSource(getSource());\n        spec.setDestinationDir(getDestinationDir());\n        spec.setWorkingDir(getProject().getProjectDir());\n        spec.setTempDir(getTemporaryDir());\n        spec.setClasspath(getClasspath());\n        spec.setSourceCompatibility(getSourceCompatibility());\n        spec.setTargetCompatibility(getTargetCompatibility());\n        spec.setCompileOptions(getOptions());\n        spec.setScalaCompileOptions(getScalaCompileOptions());\n        @SuppressWarnings(\"unchecked\") S returnSpec = (S)spec;\n        return returnSpec;\n    }","id":39233,"modified_method":"protected ScalaJavaJointCompileSpec createSpec() {\n        DefaultScalaJavaJointCompileSpec spec = new DefaultScalaJavaJointCompileSpec();\n        spec.setSource(getSource());\n        spec.setDestinationDir(getDestinationDir());\n        spec.setWorkingDir(getProject().getProjectDir());\n        spec.setTempDir(getTemporaryDir());\n        spec.setClasspath(getClasspath());\n        spec.setSourceCompatibility(getSourceCompatibility());\n        spec.setTargetCompatibility(getTargetCompatibility());\n        spec.setCompileOptions(getOptions());\n        spec.setScalaCompileOptions(scalaCompileOptions);\n        return spec;\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"/**\n     * Returns the Scala compilation options.\n     */\n    abstract public T getScalaCompileOptions();","id":39234,"modified_method":"/**\n     * Returns the Scala compilation options.\n     */\n    @Nested\n    public BaseScalaCompileOptions getScalaCompileOptions() {\n        return scalaCompileOptions;\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"protected void configureIncrementalCompilation(PlatformScalaCompileSpec spec) {\n        Map<File, File> globalAnalysisMap = getOrCreateGlobalAnalysisMap();\n        HashMap<File, File> filteredMap = filterForClasspath(globalAnalysisMap, spec.getClasspath());\n        spec.setAnalysisMap(filteredMap);\n        if (LOGGER.isDebugEnabled()) {\n            T scalaCompileOptions = getScalaCompileOptions();\n            LOGGER.debug(\"Analysis file: {}\", scalaCompileOptions.getIncrementalOptions().getAnalysisFile());\n            LOGGER.debug(\"Published code: {}\", scalaCompileOptions.getIncrementalOptions().getPublishedCode());\n            LOGGER.debug(\"Analysis map: {}\", filteredMap);\n        }\n    }","id":39235,"modified_method":"protected void configureIncrementalCompilation(ScalaCompileSpec spec) {\n\n        Map<File, File> globalAnalysisMap = getOrCreateGlobalAnalysisMap();\n        HashMap<File, File> filteredMap = filterForClasspath(globalAnalysisMap, spec.getClasspath());\n        spec.setAnalysisMap(filteredMap);\n\n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"Analysis file: {}\", scalaCompileOptions.getIncrementalOptions().getAnalysisFile());\n            LOGGER.debug(\"Published code: {}\", scalaCompileOptions.getIncrementalOptions().getPublishedCode());\n            LOGGER.debug(\"Analysis map: {}\", filteredMap);\n        }\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"private Configuration resolveDependency(Object dependencyNotation) {\n        Dependency dependency = dependencyHandler.create(dependencyNotation);\n        Configuration configuration = configurationContainer.detachedConfiguration(dependency);\n        return configuration;\n    }","id":39236,"modified_method":"private Configuration resolveDependency(Object dependencyNotation) {\n        Dependency dependency = dependencyHandler.create(dependencyNotation);\n        return configurationContainer.detachedConfiguration(dependency);\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    public <T extends CompileSpec> org.gradle.language.base.internal.compile.Compiler<T> newCompiler(T spec) {\n        if (spec instanceof PlatformScalaJavaJointCompileSpec) {\n            Configuration scalaClasspath = resolveDependency(String.format(\"org.scala-lang:scala-compiler:%s\", scalaVersion));\n            Configuration zincClasspath = resolveDependency(String.format(\"com.typesafe.zinc:zinc:%s\", DEFAULT_ZINC_VERSION));\n            File projectDir = projectFinder.getProject(\":\").getProjectDir();\n            org.gradle.language.base.internal.compile.Compiler<PlatformScalaJavaJointCompileSpec> scalaCompiler;\n            Set<File> zincClasspathFiles = zincClasspath.getFiles();\n            Set<File> scalaClasspathFiles = scalaClasspath.getFiles();\n            try {\n                scalaCompiler = (Compiler<PlatformScalaJavaJointCompileSpec>) getClass().getClassLoader()\n                        .loadClass(\"org.gradle.api.internal.tasks.scala.jdk6.ZincScalaCompiler\").getConstructor(Iterable.class, Iterable.class).newInstance(scalaClasspathFiles, zincClasspathFiles);\n            } catch (Exception e) {\n                throw new RuntimeException(\"Internal error: Failed to load org.gradle.api.internal.tasks.scala.jdk6.ZincScalaCompiler\", e);\n            }\n\n             org.gradle.language.base.internal.compile.Compiler<T> delegatingCompiler = (org.gradle.language.base.internal.compile.Compiler<T>) new NormalizingScalaCompiler<PlatformScalaJavaJointCompileSpec>(new DaemonScalaCompiler<PlatformScalaJavaJointCompileSpec>(projectDir, scalaCompiler, compilerDaemonManager, zincClasspathFiles));\n            return delegatingCompiler;\n        }\n        throw new IllegalArgumentException(String.format(\"Cannot create Compiler for unsupported CompileSpec type '%s'\", spec.getClass().getSimpleName()));\n    }","id":39237,"modified_method":"@SuppressWarnings(\"unchecked\")\n    public <T extends CompileSpec> org.gradle.language.base.internal.compile.Compiler<T> newCompiler(T spec) {\n        if (spec instanceof ScalaJavaJointCompileSpec) {\n            Configuration scalaClasspath = resolveDependency(String.format(\"org.scala-lang:scala-compiler:%s\", scalaVersion));\n            Configuration zincClasspath = resolveDependency(String.format(\"com.typesafe.zinc:zinc:%s\", DEFAULT_ZINC_VERSION));\n            File projectDir = projectFinder.getProject(\":\").getProjectDir();\n            org.gradle.language.base.internal.compile.Compiler<ScalaJavaJointCompileSpec> scalaCompiler;\n            Set<File> zincClasspathFiles = zincClasspath.getFiles();\n            Set<File> scalaClasspathFiles = scalaClasspath.getFiles();\n            try {\n                scalaCompiler = (Compiler<ScalaJavaJointCompileSpec>) getClass().getClassLoader()\n                        .loadClass(\"org.gradle.api.internal.tasks.scala.jdk6.ZincScalaCompiler\").getConstructor(Iterable.class, Iterable.class).newInstance(scalaClasspathFiles, zincClasspathFiles);\n            } catch (Exception e) {\n                throw new RuntimeException(\"Internal error: Failed to load org.gradle.api.internal.tasks.scala.jdk6.ZincScalaCompiler\", e);\n            }\n\n            return (Compiler<T>) new NormalizingScalaCompiler(new DaemonScalaCompiler<ScalaJavaJointCompileSpec>(projectDir, scalaCompiler, compilerDaemonManager, zincClasspathFiles));\n        }\n        throw new IllegalArgumentException(String.format(\"Cannot create Compiler for unsupported CompileSpec type '%s'\", spec.getClass().getSimpleName()));\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"private void logSourceFiles(PlatformScalaJavaJointCompileSpec spec) {\n        if (!spec.getScalaCompileOptions().isListFiles()) { return; }\n\n        StringBuilder builder = new StringBuilder();\n        builder.append(\"Source files to be compiled:\");\n        for (File file : spec.getSource()) {\n            builder.append('\\n');\n            builder.append(file);\n        }\n\n        LOGGER.quiet(builder.toString());\n    }","id":39238,"modified_method":"private void logSourceFiles(ScalaJavaJointCompileSpec spec) {\n        if (!spec.getScalaCompileOptions().isListFiles()) { return; }\n\n        StringBuilder builder = new StringBuilder();\n        builder.append(\"Source files to be compiled:\");\n        for (File file : spec.getSource()) {\n            builder.append('\\n');\n            builder.append(file);\n        }\n\n        LOGGER.quiet(builder.toString());\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"private WorkResult delegateAndHandleErrors(T spec) {\n        try {\n            return delegate.execute(spec);\n        } catch (CompilationFailedException e) {\n            if (spec.getScalaCompileOptions().isFailOnError()) {\n                throw e;\n            }\n            LOGGER.debug(\"Ignoring compilation failure.\");\n            return new SimpleWorkResult(false);\n        }\n    }","id":39239,"modified_method":"private WorkResult delegateAndHandleErrors(ScalaJavaJointCompileSpec spec) {\n        try {\n            return delegate.execute(spec);\n        } catch (CompilationFailedException e) {\n            if (spec.getScalaCompileOptions().isFailOnError()) {\n                throw e;\n            }\n            LOGGER.debug(\"Ignoring compilation failure.\");\n            return new SimpleWorkResult(false);\n        }\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"private void logCompilerArguments(PlatformScalaJavaJointCompileSpec spec) {\n        if (!LOGGER.isDebugEnabled()) { return; }\n\n        List<String> compilerArgs = new JavaCompilerArgumentsBuilder(spec).includeLauncherOptions(true).includeSourceFiles(true).build();\n        String joinedArgs = Joiner.on(' ').join(compilerArgs);\n        LOGGER.debug(\"Java compiler arguments: {}\", joinedArgs);\n    }","id":39240,"modified_method":"private void logCompilerArguments(ScalaJavaJointCompileSpec spec) {\n        if (!LOGGER.isDebugEnabled()) { return; }\n\n        List<String> compilerArgs = new JavaCompilerArgumentsBuilder(spec).includeLauncherOptions(true).includeSourceFiles(true).build();\n        String joinedArgs = Joiner.on(' ').join(compilerArgs);\n        LOGGER.debug(\"Java compiler arguments: {}\", joinedArgs);\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"public NormalizingScalaCompiler(Compiler<T> delegate) {\n        this.delegate = delegate;\n    }","id":39241,"modified_method":"public NormalizingScalaCompiler(Compiler<ScalaJavaJointCompileSpec> delegate) {\n        this.delegate = delegate;\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"private void resolveNonStringsInCompilerArgs(PlatformScalaJavaJointCompileSpec spec) {\n        // in particular, this is about GStrings\n        spec.getCompileOptions().setCompilerArgs(CollectionUtils.toStringList(spec.getCompileOptions().getCompilerArgs()));\n    }","id":39242,"modified_method":"private void resolveNonStringsInCompilerArgs(ScalaJavaJointCompileSpec spec) {\n        // in particular, this is about GStrings\n        spec.getCompileOptions().setCompilerArgs(CollectionUtils.toStringList(spec.getCompileOptions().getCompilerArgs()));\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"private void resolveClasspath(PlatformScalaJavaJointCompileSpec spec) {\n        ArrayList<File> classPath = Lists.newArrayList(spec.getClasspath());\n        classPath.add(spec.getDestinationDir());\n        spec.setClasspath(classPath);\n\n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"Class path: {}\", spec.getClasspath());\n        }\n    }","id":39243,"modified_method":"private void resolveClasspath(ScalaJavaJointCompileSpec spec) {\n        ArrayList<File> classPath = Lists.newArrayList(spec.getClasspath());\n        classPath.add(spec.getDestinationDir());\n        spec.setClasspath(classPath);\n\n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"Class path: {}\", spec.getClasspath());\n        }\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"private void resolveAndFilterSourceFiles(final PlatformScalaJavaJointCompileSpec spec) {\n        spec.setSource(new SimpleFileCollection(spec.getSource().getFiles()));\n    }","id":39244,"modified_method":"private void resolveAndFilterSourceFiles(final ScalaJavaJointCompileSpec spec) {\n        spec.setSource(new SimpleFileCollection(spec.getSource().getFiles()));\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    protected Compiler<PlatformScalaJavaJointCompileSpec> getCompiler(PlatformScalaJavaJointCompileSpec spec) {\n        Compiler<PlatformScalaJavaJointCompileSpec> scalaCompiler = getToolChain().select(getPlatform()).newCompiler(spec);\n        return new CleaningScalaCompiler<PlatformScalaJavaJointCompileSpec>(scalaCompiler, getOutputs(), false);\n    }","id":39245,"modified_method":"@Override\n    protected Compiler<ScalaJavaJointCompileSpec> getCompiler(ScalaJavaJointCompileSpec spec) {\n        return getToolChain().select(getPlatform()).newCompiler(spec);\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"protected org.gradle.language.base.internal.compile.Compiler<ScalaJavaJointCompileSpec> getCompiler(ScalaJavaJointCompileSpec spec) {\n        assertScalaClasspathIsNonEmpty();\n        if (compiler == null) {\n            ProjectInternal projectInternal = (ProjectInternal) getProject();\n            IsolatedAntBuilder antBuilder = getServices().get(IsolatedAntBuilder.class);\n            CompilerDaemonFactory compilerDaemonFactory = getServices().get(CompilerDaemonManager.class);\n            JavaCompilerFactory javaCompilerFactory = getServices().get(JavaCompilerFactory.class);\n            ScalaCompilerFactory scalaCompilerFactory = new ScalaCompilerFactory(projectInternal.getRootProject().getProjectDir(), antBuilder, javaCompilerFactory, compilerDaemonFactory, getScalaClasspath(), getZincClasspath());\n            org.gradle.language.base.internal.compile.Compiler<ScalaJavaJointCompileSpec> delegatingCompiler = scalaCompilerFactory.newCompiler(spec);\n            compiler = new CleaningScalaCompiler(delegatingCompiler, getOutputs(), spec.getScalaCompileOptions().isUseAnt());\n        }\n        return compiler;\n    }","id":39246,"modified_method":"protected org.gradle.language.base.internal.compile.Compiler<ScalaJavaJointCompileSpec> getCompiler(ScalaJavaJointCompileSpec spec) {\n        assertScalaClasspathIsNonEmpty();\n        if (compiler == null) {\n            ProjectInternal projectInternal = (ProjectInternal) getProject();\n            IsolatedAntBuilder antBuilder = getServices().get(IsolatedAntBuilder.class);\n            CompilerDaemonFactory compilerDaemonFactory = getServices().get(CompilerDaemonManager.class);\n            JavaCompilerFactory javaCompilerFactory = getServices().get(JavaCompilerFactory.class);\n            ScalaCompilerFactory scalaCompilerFactory = new ScalaCompilerFactory(projectInternal.getRootProject().getProjectDir(), antBuilder, javaCompilerFactory, compilerDaemonFactory, getScalaClasspath(), getZincClasspath());\n            compiler = scalaCompilerFactory.newCompiler(spec);\n            if (getScalaCompileOptions().isUseAnt()) {\n                compiler = new CleaningScalaCompiler(compiler, getOutputs());\n            }\n        }\n        return compiler;\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"@Nested\n    public ScalaCompileOptions getScalaCompileOptions() {\n        return scalaCompileOptions;\n    }","id":39247,"modified_method":"@Nested\n    @Override\n    public ScalaCompileOptions getScalaCompileOptions() {\n        return (ScalaCompileOptions) super.getScalaCompileOptions();\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    public Compiler<ScalaJavaJointCompileSpec> newCompiler(ScalaJavaJointCompileSpec spec) {\n        ScalaCompileOptions scalaOptions = spec.getScalaCompileOptions();\n        Set<File> scalaClasspathFiles = scalaClasspath.getFiles();\n        if (scalaOptions.isUseAnt()) {\n            Compiler<ScalaCompileSpec> scalaCompiler = new AntScalaCompiler(antBuilder, scalaClasspathFiles);\n            Compiler<JavaCompileSpec> javaCompiler = javaCompilerFactory.createForJointCompilation(spec.getCompileOptions());\n            return new NormalizingScalaCompiler<ScalaJavaJointCompileSpec>(new DefaultScalaJavaJointCompiler(scalaCompiler, javaCompiler));\n        }\n\n        if (!scalaOptions.isFork()) {\n            throw new GradleException(\"The Zinc based Scala compiler ('scalaCompileOptions.useAnt=false') \"\n                    + \"requires forking ('scalaCompileOptions.fork=true'), but the latter is set to 'false'.\");\n        }\n\n        Set<File> zincClasspathFiles = zincClasspath.getFiles();\n        // currently, we leave it to ZincScalaCompiler to also compile the Java code\n        Compiler<ScalaJavaJointCompileSpec> scalaCompiler;\n        try {\n            scalaCompiler = (Compiler<ScalaJavaJointCompileSpec>) getClass().getClassLoader()\n                    .loadClass(\"org.gradle.api.internal.tasks.scala.jdk6.ZincScalaCompiler\").getConstructor(Iterable.class, Iterable.class).newInstance(scalaClasspathFiles, zincClasspathFiles);\n        } catch (Exception e) {\n            throw new RuntimeException(\"Internal error: Failed to load org.gradle.api.internal.tasks.scala.jdk6.ZincScalaCompiler\", e);\n        }\n\n        scalaCompiler = new DaemonScalaCompiler<ScalaJavaJointCompileSpec>(rootProjectDirectory, scalaCompiler, compilerDaemonFactory, zincClasspathFiles);\n        return new NormalizingScalaCompiler<ScalaJavaJointCompileSpec>(scalaCompiler);\n    }","id":39248,"modified_method":"@SuppressWarnings(\"unchecked\")\n    public Compiler<ScalaJavaJointCompileSpec> newCompiler(ScalaJavaJointCompileSpec spec) {\n        ScalaCompileOptions scalaOptions = (ScalaCompileOptions) spec.getScalaCompileOptions();\n        Set<File> scalaClasspathFiles = scalaClasspath.getFiles();\n        if (scalaOptions.isUseAnt()) {\n            Compiler<ScalaCompileSpec> scalaCompiler = new AntScalaCompiler(antBuilder, scalaClasspathFiles);\n            Compiler<JavaCompileSpec> javaCompiler = javaCompilerFactory.createForJointCompilation(spec.getCompileOptions());\n            return new NormalizingScalaCompiler(new DefaultScalaJavaJointCompiler(scalaCompiler, javaCompiler));\n        }\n\n        if (!scalaOptions.isFork()) {\n            throw new GradleException(\"The Zinc based Scala compiler ('scalaCompileOptions.useAnt=false') \"\n                    + \"requires forking ('scalaCompileOptions.fork=true'), but the latter is set to 'false'.\");\n        }\n\n        Set<File> zincClasspathFiles = zincClasspath.getFiles();\n        // currently, we leave it to ZincScalaCompiler to also compile the Java code\n        Compiler<ScalaJavaJointCompileSpec> scalaCompiler;\n        try {\n            scalaCompiler = (Compiler<ScalaJavaJointCompileSpec>) getClass().getClassLoader()\n                    .loadClass(\"org.gradle.api.internal.tasks.scala.jdk6.ZincScalaCompiler\").getConstructor(Iterable.class, Iterable.class).newInstance(scalaClasspathFiles, zincClasspathFiles);\n        } catch (Exception e) {\n            throw new RuntimeException(\"Internal error: Failed to load org.gradle.api.internal.tasks.scala.jdk6.ZincScalaCompiler\", e);\n        }\n\n        scalaCompiler = new DaemonScalaCompiler<ScalaJavaJointCompileSpec>(rootProjectDirectory, scalaCompiler, compilerDaemonFactory, zincClasspathFiles);\n        return new NormalizingScalaCompiler(scalaCompiler);\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"static WorkResult execute(Iterable<File> scalaClasspath, Iterable<File> zincClasspath, PlatformScalaJavaJointCompileSpec spec) {\n            LOGGER.info(\"Compiling with Zinc Scala compiler.\");\n\n            xsbti.Logger logger = new SbtLoggerAdapter();\n\n            com.typesafe.zinc.Compiler compiler = createCompiler(scalaClasspath, zincClasspath, logger);\n            List<String> scalacOptions = new ScalaCompilerArgumentsGenerator().generate(spec);\n            List<String> javacOptions = new JavaCompilerArgumentsBuilder(spec).includeClasspath(false).build();\n            Inputs inputs = Inputs.create(ImmutableList.copyOf(spec.getClasspath()), ImmutableList.copyOf(spec.getSource()), spec.getDestinationDir(),\n                    scalacOptions, javacOptions, spec.getScalaCompileOptions().getIncrementalOptions().getAnalysisFile(), spec.getAnalysisMap(), \"mixed\", getIncOptions(), true);\n            if (LOGGER.isDebugEnabled()) {\n                Inputs.debug(inputs, logger);\n            }\n\n            try {\n                compiler.compile(inputs, logger);\n            } catch (xsbti.CompileFailed e) {\n                throw new CompilationFailedException(e);\n            }\n\n            return new SimpleWorkResult(true);\n        }","id":39249,"modified_method":"static WorkResult execute(Iterable<File> scalaClasspath, Iterable<File> zincClasspath, ScalaJavaJointCompileSpec spec) {\n            LOGGER.info(\"Compiling with Zinc Scala compiler.\");\n\n            xsbti.Logger logger = new SbtLoggerAdapter();\n\n            com.typesafe.zinc.Compiler compiler = createCompiler(scalaClasspath, zincClasspath, logger);\n            List<String> scalacOptions = new ZincScalaCompilerArgumentsGenerator().generate(spec);\n            List<String> javacOptions = new JavaCompilerArgumentsBuilder(spec).includeClasspath(false).build();\n            Inputs inputs = Inputs.create(ImmutableList.copyOf(spec.getClasspath()), ImmutableList.copyOf(spec.getSource()), spec.getDestinationDir(),\n                    scalacOptions, javacOptions, spec.getScalaCompileOptions().getIncrementalOptions().getAnalysisFile(), spec.getAnalysisMap(), \"mixed\", getIncOptions(), true);\n            if (LOGGER.isDebugEnabled()) {\n                Inputs.debug(inputs, logger);\n            }\n\n            try {\n                compiler.compile(inputs, logger);\n            } catch (xsbti.CompileFailed e) {\n                throw new CompilationFailedException(e);\n            }\n\n            return new SimpleWorkResult(true);\n        }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"public WorkResult execute(PlatformScalaJavaJointCompileSpec spec) {\n        return Compiler.execute(scalaClasspath, zincClasspath, spec);\n    }","id":39250,"modified_method":"public WorkResult execute(ScalaJavaJointCompileSpec spec) {\n        return Compiler.execute(scalaClasspath, zincClasspath, spec);\n    }","commit_id":"01fe9893349f62afd5d8730334e9e2a489cc52db","url":"https://github.com/gradle/gradle"},{"original_method":"/**\n     * Returns the Scala compilation options.\n     */\n    @Nested\n    public ScalaCompileOptions getScalaCompileOptions() {\n        return scalaCompileOptions;\n    }","id":39251,"modified_method":"/**\n     * Returns the Scala compilation options.\n     */\n    @Nested\n    public BaseScalaCompileOptions getScalaCompileOptions() {\n        return scalaCompileOptions;\n    }","commit_id":"bf138dcb73474a5603b3f5afafe1e3cec407453f","url":"https://github.com/gradle/gradle"},{"original_method":"protected AbstractScalaCompile(ScalaCompileOptions scalaCompileOptions) {\n        this.scalaCompileOptions = scalaCompileOptions;\n    }","id":39252,"modified_method":"protected AbstractScalaCompile(BaseScalaCompileOptions scalaCompileOptions) {\n        this.scalaCompileOptions = scalaCompileOptions;\n    }","commit_id":"bf138dcb73474a5603b3f5afafe1e3cec407453f","url":"https://github.com/gradle/gradle"},{"original_method":"public void setScalaCompileOptions(ScalaCompileOptions options) {\n        this.options = options;\n    }","id":39253,"modified_method":"public void setScalaCompileOptions(BaseScalaCompileOptions options) {\n        this.options = options;\n    }","commit_id":"bf138dcb73474a5603b3f5afafe1e3cec407453f","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public ScalaCompileOptions getScalaCompileOptions() {\n        return options;\n    }","id":39254,"modified_method":"@Override\n    public BaseScalaCompileOptions getScalaCompileOptions() {\n        return options;\n    }","commit_id":"bf138dcb73474a5603b3f5afafe1e3cec407453f","url":"https://github.com/gradle/gradle"},{"original_method":"@Inject\n    public PlatformScalaCompile() {\n        super(new ScalaCompileOptions());\n    }","id":39255,"modified_method":"@Inject\n    public PlatformScalaCompile() {\n        super(new BaseScalaCompileOptions());\n    }","commit_id":"bf138dcb73474a5603b3f5afafe1e3cec407453f","url":"https://github.com/gradle/gradle"},{"original_method":"@Nested\n    @Override\n    public ScalaCompileOptions getScalaCompileOptions() {\n        return super.getScalaCompileOptions();\n    }","id":39256,"modified_method":"@Nested\n    @Override\n    public ScalaCompileOptions getScalaCompileOptions() {\n        return (ScalaCompileOptions) super.getScalaCompileOptions();\n    }","commit_id":"bf138dcb73474a5603b3f5afafe1e3cec407453f","url":"https://github.com/gradle/gradle"},{"original_method":"protected void setUpMocksAndAttributes(final ScalaCompile compile) {\n        compile.source(srcDir);\n        compile.setIncludes(TEST_INCLUDES);\n        compile.setExcludes(TEST_EXCLUDES);\n        compile.setSourceCompatibility(\"1.5\");\n        compile.setTargetCompatibility(\"1.5\");\n        compile.setDestinationDir(destDir);\n        scalaClasspath = context.mock(FileTreeInternal.class);\n        compile.setScalaClasspath(scalaClasspath);\n        final FileTreeInternal classpath = context.mock(FileTreeInternal.class);\n        final FileTreeInternal zincClasspath = context.mock(FileTreeInternal.class);\n\n        context.checking(new Expectations(){{\n            allowing(scalaClasspath).getFiles(); will(returnValue(new HashSet<File>()));\n            allowing(scalaClasspath).visit((FileVisitor) with(anything()));\n            allowing(scalaClasspath).visitTreeOrBackingFile((FileVisitor) with(anything()));\n            allowing(scalaClasspath).iterator(); will(returnIterator());\n            allowing(classpath).getFiles(); will(returnValue(new HashSet<File>()));\n            allowing(classpath).visit((FileVisitor) with(anything()));\n            allowing(classpath).visitTreeOrBackingFile((FileVisitor) with(anything()));\n            allowing(classpath).iterator(); will(returnIterator());\n            allowing(zincClasspath).getFiles(); will(returnValue(new HashSet<File>()));\n            allowing(zincClasspath).visit((FileVisitor) with(anything()));\n            allowing(zincClasspath).visitTreeOrBackingFile((FileVisitor) with(anything()));\n            allowing(zincClasspath).iterator(); will(returnIterator());\n        }});\n        compile.setClasspath(classpath);\n        compile.setZincClasspath(zincClasspath);\n        ScalaCompileOptions options = compile.getScalaCompileOptions();\n        options.getIncrementalOptions().setAnalysisFile(new File(\"analysisFile\"));\n    }","id":39257,"modified_method":"protected void setUpMocksAndAttributes(final ScalaCompile compile) {\n        compile.source(srcDir);\n        compile.setIncludes(TEST_INCLUDES);\n        compile.setExcludes(TEST_EXCLUDES);\n        compile.setSourceCompatibility(\"1.5\");\n        compile.setTargetCompatibility(\"1.5\");\n        compile.setDestinationDir(destDir);\n        scalaClasspath = context.mock(FileTreeInternal.class);\n        compile.setScalaClasspath(scalaClasspath);\n        final FileTreeInternal classpath = context.mock(FileTreeInternal.class);\n        final FileTreeInternal zincClasspath = context.mock(FileTreeInternal.class);\n\n        context.checking(new Expectations(){{\n            allowing(scalaClasspath).getFiles(); will(returnValue(new HashSet<File>()));\n            allowing(scalaClasspath).visit((FileVisitor) with(anything()));\n            allowing(scalaClasspath).visitTreeOrBackingFile((FileVisitor) with(anything()));\n            allowing(scalaClasspath).iterator(); will(returnIterator());\n            allowing(classpath).getFiles(); will(returnValue(new HashSet<File>()));\n            allowing(classpath).visit((FileVisitor) with(anything()));\n            allowing(classpath).visitTreeOrBackingFile((FileVisitor) with(anything()));\n            allowing(classpath).iterator(); will(returnIterator());\n            allowing(zincClasspath).getFiles(); will(returnValue(new HashSet<File>()));\n            allowing(zincClasspath).visit((FileVisitor) with(anything()));\n            allowing(zincClasspath).visitTreeOrBackingFile((FileVisitor) with(anything()));\n            allowing(zincClasspath).iterator(); will(returnIterator());\n        }});\n        compile.setClasspath(classpath);\n        compile.setZincClasspath(zincClasspath);\n        BaseScalaCompileOptions options = compile.getScalaCompileOptions();\n        options.getIncrementalOptions().setAnalysisFile(new File(\"analysisFile\"));\n    }","commit_id":"bf138dcb73474a5603b3f5afafe1e3cec407453f","url":"https://github.com/gradle/gradle"},{"original_method":"public List<String> generate(ScalaCompileSpec spec) {\n        List<String> result = Lists.newArrayList();\n\n        ScalaCompileOptions options = spec.getScalaCompileOptions();\n        addFlag(\"-deprecation\", options.isDeprecation(), result);\n        addFlag(\"-unchecked\", options.isUnchecked(), result);\n        addConcatenatedOption(\"-g:\", options.getDebugLevel(), result);\n        addFlag(\"-optimise\", options.isOptimize(), result);\n        addOption(\"-encoding\", options.getEncoding(), result);\n        addFlag(\"-verbose\", \"verbose\".equals(options.getDebugLevel()), result);\n        addFlag(\"-Ydebug\", \"debug\".equals(options.getDebugLevel()), result);\n        if (options.getLoggingPhases() != null) {\n            for (String phase : options.getLoggingPhases()) {\n                addConcatenatedOption(\"-Ylog:\", phase, result);\n            }\n        }\n        if (options.getAdditionalParameters() != null) {\n            result.addAll(options.getAdditionalParameters());\n        }\n\n        return result;\n    }","id":39258,"modified_method":"public List<String> generate(ScalaCompileSpec spec) {\n        List<String> result = Lists.newArrayList();\n\n        BaseScalaCompileOptions options = spec.getScalaCompileOptions();\n        addFlag(\"-deprecation\", options.isDeprecation(), result);\n        addFlag(\"-unchecked\", options.isUnchecked(), result);\n        addConcatenatedOption(\"-g:\", options.getDebugLevel(), result);\n        addFlag(\"-optimise\", options.isOptimize(), result);\n        addOption(\"-encoding\", options.getEncoding(), result);\n        addFlag(\"-verbose\", \"verbose\".equals(options.getDebugLevel()), result);\n        addFlag(\"-Ydebug\", \"debug\".equals(options.getDebugLevel()), result);\n        if (options.getLoggingPhases() != null) {\n            for (String phase : options.getLoggingPhases()) {\n                addConcatenatedOption(\"-Ylog:\", phase, result);\n            }\n        }\n        if (options.getAdditionalParameters() != null) {\n            result.addAll(options.getAdditionalParameters());\n        }\n\n        return result;\n    }","commit_id":"bf138dcb73474a5603b3f5afafe1e3cec407453f","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    protected String getItemPresentation(SModel sm) {\n      return sm.getReference().getSModelFqName().toString();\n    }","id":39259,"modified_method":"@Override\n    protected String getItemPresentation(SModel sm) {\n      return sm.getReference().getModelName();\n    }","commit_id":"86d12abb2be4f02a164a6c0d5d4e20fcef850f30","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void rebuild() {\n      getNames().clear();\n      getItemsMap().clear();\n      for (SModel modelDescriptor : myModels) {\n        putItem(modelDescriptor.getReference().getSModelFqName().toString(), modelDescriptor);\n      }\n      makeNamesConsistent();\n    }","id":39260,"modified_method":"public void rebuild() {\n      getNames().clear();\n      getItemsMap().clear();\n      for (SModel modelDescriptor : myModels) {\n        putItem(modelDescriptor.getReference().getModelName(), modelDescriptor);\n      }\n      makeNamesConsistent();\n    }","commit_id":"86d12abb2be4f02a164a6c0d5d4e20fcef850f30","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    protected String getText(SModelReference modelReference) {\n        return modelReference.getSModelFqName().toString();\n    }","id":39261,"modified_method":"@Override\n    protected String getText(SModelReference modelReference) {\n        return modelReference.getModelName();\n    }","commit_id":"86d12abb2be4f02a164a6c0d5d4e20fcef850f30","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void renameLanguage(String oldFqName) {\n    for (SModel sm : myLanguage.getOwnModelDescriptors()) {\n      if (!SModelStereotype.isUserModel(sm)) continue;\n      if (!(sm instanceof EditableSModel)) continue;\n\n      if (sm.getReference().getSModelFqName().toString().startsWith(oldFqName + \".\")) {\n        String suffix = sm.getReference().getSModelFqName().toString().substring(oldFqName.length());\n        myContext.changeModelName(((EditableSModel) sm), myNewName + suffix);\n      }\n    }\n\n    LanguageDescriptor descriptor = myLanguage.getModuleDescriptor();\n    descriptor.setNamespace(myNewName);\n    myLanguage.setLanguageDescriptor(descriptor, false);\n    myLanguage.save();\n  }","id":39262,"modified_method":"private void renameLanguage(String oldFqName) {\n    for (SModel sm : myLanguage.getOwnModelDescriptors()) {\n      if (!SModelStereotype.isUserModel(sm)) continue;\n      if (!(sm instanceof EditableSModel)) continue;\n\n      if (sm.getReference().getModelName().startsWith(oldFqName + \".\")) {\n        String suffix = sm.getReference().getModelName().substring(oldFqName.length());\n        myContext.changeModelName(((EditableSModel) sm), myNewName + suffix);\n      }\n    }\n\n    LanguageDescriptor descriptor = myLanguage.getModuleDescriptor();\n    descriptor.setNamespace(myNewName);\n    myLanguage.setLanguageDescriptor(descriptor, false);\n    myLanguage.save();\n  }","commit_id":"86d12abb2be4f02a164a6c0d5d4e20fcef850f30","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void renameGenerators(String oldFqName) {\n    for (Generator g : myLanguage.getGenerators()) {\n      GeneratorDescriptor genDesc = g.getModuleDescriptor();\n      String uid = genDesc.getGeneratorUID();\n      int sharpIndex = uid.indexOf('#');\n      genDesc.setGeneratorUID(myNewName + \"#\" + uid.substring(sharpIndex + 1));\n\n      String newPrefix = myNewName + oldFqName.substring(oldFqName.length());\n\n      for (SModel sm : g.getOwnModelDescriptors()) {\n        if (!SModelStereotype.isUserModel(sm)) continue;\n        if (!(sm instanceof EditableSModel)) continue;\n\n        if (sm.getReference().getSModelFqName().toString().startsWith(oldFqName + \".\")) {\n          String suffix = sm.getReference().getSModelFqName().toString().substring(oldFqName.length());\n          myContext.changeModelName(((EditableSModel) sm), newPrefix + suffix);\n        }\n      }\n    }\n\n    myLanguage.save();\n  }","id":39263,"modified_method":"private void renameGenerators(String oldFqName) {\n    for (Generator g : myLanguage.getGenerators()) {\n      GeneratorDescriptor genDesc = g.getModuleDescriptor();\n      String uid = genDesc.getGeneratorUID();\n      int sharpIndex = uid.indexOf('#');\n      genDesc.setGeneratorUID(myNewName + \"#\" + uid.substring(sharpIndex + 1));\n\n      String newPrefix = myNewName + oldFqName.substring(oldFqName.length());\n\n      for (SModel sm : g.getOwnModelDescriptors()) {\n        if (!SModelStereotype.isUserModel(sm)) continue;\n        if (!(sm instanceof EditableSModel)) continue;\n\n        if (sm.getReference().getModelName().startsWith(oldFqName + \".\")) {\n          String suffix = sm.getReference().getModelName().substring(oldFqName.length());\n          myContext.changeModelName(((EditableSModel) sm), newPrefix + suffix);\n        }\n      }\n    }\n\n    myLanguage.save();\n  }","commit_id":"86d12abb2be4f02a164a6c0d5d4e20fcef850f30","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void writeModelReference(SModelReference ref) throws IOException {\n    if (ref == null) {\n      writeByte(0x70);\n    } else {\n      Integer index = modelrefToIndex.get(ref);\n      if (index == null) {\n        modelrefToIndex.put(ref, myRefIndex++);\n        if (ref.getModelId() != null) {\n          writeByte(7);\n          writeModelID(ref.getModelId());\n        } else {\n          writeByte(8);\n        }\n        writeString(ref.getSModelFqName().toString());\n      } else {\n        writeByte(9);\n        writeInt(index);\n      }\n    }\n  }","id":39264,"modified_method":"public void writeModelReference(SModelReference ref) throws IOException {\n    if (ref == null) {\n      writeByte(0x70);\n    } else {\n      Integer index = modelrefToIndex.get(ref);\n      if (index == null) {\n        modelrefToIndex.put(ref, myRefIndex++);\n        if (ref.getModelId() != null) {\n          writeByte(7);\n          writeModelID(ref.getModelId());\n        } else {\n          writeByte(8);\n        }\n        writeString(ref.getModelName());\n      } else {\n        writeByte(9);\n        writeInt(index);\n      }\n    }\n  }","commit_id":"86d12abb2be4f02a164a6c0d5d4e20fcef850f30","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  @NotNull\n  public String doGetPresentableText() {\n    return myModelReference.getSModelFqName().toString();\n  }","id":39265,"modified_method":"@Override\n  @NotNull\n  public String doGetPresentableText() {\n    return myModelReference.getModelName();\n  }","commit_id":"86d12abb2be4f02a164a6c0d5d4e20fcef850f30","url":"https://github.com/JetBrains/MPS"},{"original_method":"private String calculateModelNameInternal() {\n    if (myNode == null) {\n      return \"null node\";\n    }\n    return ModelAccess.instance().runReadAction(new Computable<String>() {\n      @Override\n      public String compute() {\n        return myNode.getModelReference().getSModelFqName().toString();\n      }\n    });\n  }","id":39266,"modified_method":"private String calculateModelNameInternal() {\n    if (myNode == null) {\n      return \"null node\";\n    }\n    return ModelAccess.instance().runReadAction(new Computable<String>() {\n      @Override\n      public String compute() {\n        return myNode.getModelReference().getModelName();\n      }\n    });\n  }","commit_id":"86d12abb2be4f02a164a6c0d5d4e20fcef850f30","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String getModelName() {\n    if (myNode == null) {\n      return \"null node\";\n    }\n\n    if (myModelName == null) {\n      myModelName = ModelAccess.instance().runReadAction(new Computable<String>() {\n        @Override\n        public String compute() {\n          return myNode.getModel().getReference().getSModelFqName().toString();\n        }\n      });\n    }\n    return myModelName;\n  }","id":39267,"modified_method":"public String getModelName() {\n    if (myNode == null) {\n      return \"null node\";\n    }\n\n    if (myModelName == null) {\n      myModelName = ModelAccess.instance().runReadAction(new Computable<String>() {\n        @Override\n        public String compute() {\n          return myNode.getModel().getReference().getModelName();\n        }\n      });\n    }\n    return myModelName;\n  }","commit_id":"86d12abb2be4f02a164a6c0d5d4e20fcef850f30","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected boolean isMatchingExtension(JvmTypeReference expectedParameterTypeReference, JvmOperation operation) {\n\t\tif (operation.isStatic()) {\n\t\t\tif (expectedParameterTypeReference == null)\n\t\t\t\treturn true;\n\t\t\tJvmType expectedParameterType = expectedParameterTypeReference.getType();\n\t\t\tif (operation.getParameters().size() > 0) {\n\t\t\t\tJvmFormalParameter firstParam = operation.getParameters().get(0);\n\t\t\t\tJvmType actualParameterType = firstParam.getParameterType().getType();\n\t\t\t\tif (actualParameterType == expectedParameterType)\n\t\t\t\t\treturn true;\n\t\t\t\tif (actualParameterType instanceof JvmTypeParameter) {\n\t\t\t\t\tboolean upperBoundSeen = false;\n\t\t\t\t\tfor(JvmTypeConstraint constraint: ((JvmTypeParameter) actualParameterType).getConstraints()) {\n\t\t\t\t\t\tif (constraint instanceof JvmUpperBound) {\n\t\t\t\t\t\t\tupperBoundSeen = true;\n\t\t\t\t\t\t\tif (conformanceComputer.isConformant(constraint.getTypeReference(), expectedParameterTypeReference, true))\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!upperBoundSeen) {\n\t\t\t\t\t\tif (typeRefs.is(expectedParameterTypeReference, Object.class)) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","id":39268,"modified_method":"protected boolean isMatchingExtension(JvmTypeReference expectedParameterTypeReference, JvmOperation operation) {\n\t\tif (operation.isStatic()) {\n\t\t\tif (expectedParameterTypeReference == null)\n\t\t\t\treturn true;\n\t\t\tif (operation.getParameters().size() > 0) {\n\t\t\t\tJvmFormalParameter firstParam = operation.getParameters().get(0);\n\t\t\t\treturn super.isSameTypeOrAssignableToUpperBound(expectedParameterTypeReference, firstParam.getParameterType());\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","commit_id":"f86beb31a85f94ad906d4de63defd29d4fc5f110","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected List<IJvmFeatureDescriptionProvider> getFeatureDescriptionProviders(JvmTypeReference type,\n\t\t\tEObject expression, JvmDeclaredType currentContext, JvmIdentifiableElement implicitReceiver) {\n\t\tList<IJvmFeatureDescriptionProvider> result = super.getFeatureDescriptionProviders(type, expression, currentContext, implicitReceiver);\n\t\t\n\t\tfinal StaticallyImportedFeaturesProvider staticProvider = staticallyImportedFeaturesProvider.get();\n\t\tstaticProvider.setContext(expression.eResource());\n\t\tinsertDescriptionProviders(staticProvider, currentContext, implicitReceiver, result);\n\t\t\n\t\tif (implicitReceiver==null) {\n\t\t\tfinal XtendClass xtendClass = ((XtendFile) expression.eResource().getContents().get(0)).getXtendClass();\n\t\t\tIterable<DeclaredDependency> iterable = getExtensionDependencies(xtendClass);\n\t\t\tfor (DeclaredDependency declaredDependency : iterable) {\n\t\t\t\tJvmIdentifiableElement dependencyImplicitReceiver = findImplicitReceiverFor(declaredDependency);\n\t\t\t\tif (dependencyImplicitReceiver != null) {\n\t\t\t\t\tInjectedExtensionMethodsFeaturesProvider extensionMethodsFeaturesProvider = injectedExtensionMethodsFeaturesProvider.get();\n\t\t\t\t\textensionMethodsFeaturesProvider.setContext(declaredDependency);\n\t\t\t\t\tinsertDescriptionProviders(extensionMethodsFeaturesProvider, currentContext, dependencyImplicitReceiver, result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t}","id":39269,"modified_method":"@Override\n\tprotected List<IJvmFeatureDescriptionProvider> getFeatureDescriptionProviders(JvmTypeReference type,\n\t\t\tEObject expression, JvmDeclaredType currentContext, JvmIdentifiableElement implicitReceiver) {\n\t\tList<IJvmFeatureDescriptionProvider> result = super.getFeatureDescriptionProviders(type, expression, currentContext, implicitReceiver);\n\t\t\n\t\tfinal StaticallyImportedFeaturesProvider staticProvider = staticallyImportedFeaturesProvider.get();\n\t\tstaticProvider.setContext(expression.eResource());\n\t\tinsertDescriptionProviders(staticProvider, currentContext, implicitReceiver, result);\n\t\t\n\t\tif (implicitReceiver==null) {\n\t\t\tfinal XtendClass xtendClass = ((XtendFile) expression.eResource().getContents().get(0)).getXtendClass();\n\t\t\t// extensions for this\n\t\t\tJvmGenericType type2 = xtend2jvmAssociations.getInferredType(xtendClass);\n\t\t\tJvmParameterizedTypeReference typeRef = typeReferences.createTypeRef(type2);\n\t\t\tExtensionMethodsFeaturesProvider featureProvider = extensionMethodsFeaturesProvider.get();\n\t\t\tfeatureProvider.setContext(typeRef);\n\t\t\tinsertDescriptionProviders(featureProvider, currentContext, xtendClass, result);\n\n\t\t\t// injected extensions\n\t\t\tIterable<DeclaredDependency> iterable = getExtensionDependencies(xtendClass);\n\t\t\tfor (DeclaredDependency declaredDependency : iterable) {\n\t\t\t\tJvmIdentifiableElement dependencyImplicitReceiver = findImplicitReceiverFor(declaredDependency);\n\t\t\t\tif (dependencyImplicitReceiver != null) {\n\t\t\t\t\tfeatureProvider = extensionMethodsFeaturesProvider.get();\n\t\t\t\t\tfeatureProvider.setContext(declaredDependency.getType());\n\t\t\t\t\tinsertDescriptionProviders(featureProvider, currentContext, dependencyImplicitReceiver, result);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\treturn result;\n\t}","commit_id":"f86beb31a85f94ad906d4de63defd29d4fc5f110","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tpublic void handleReturnValue(Object returnValue, MethodParameter returnType,\n\t\t\tModelAndViewContainer mavContainer, NativeWebRequest webRequest) throws Exception {\n\n\t\tif (returnValue == null) {\n\t\t\tmavContainer.setRequestHandled(true);\n\t\t\treturn;\n\t\t}\n\n\t\tDeferredResult<?> deferredResult = (DeferredResult<?>) returnValue;\n\t\tWebAsyncUtils.getAsyncManager(webRequest).startDeferredResultProcessing(deferredResult, mavContainer);\n\t}","id":39270,"modified_method":"@Override\n\tpublic void handleReturnValue(Object returnValue, MethodParameter returnType,\n\t\t\tModelAndViewContainer mavContainer, NativeWebRequest webRequest) throws Exception {\n\n\t\tif (returnValue == null) {\n\t\t\tmavContainer.setRequestHandled(true);\n\t\t\treturn;\n\t\t}\n\n\t\tDeferredResultAdapter adapter = getAdapterFor(returnValue.getClass());\n\t\tAssert.notNull(adapter);\n\t\tDeferredResult<?> result = adapter.adaptToDeferredResult(returnValue);\n\t\tWebAsyncUtils.getAsyncManager(webRequest).startDeferredResultProcessing(result, mavContainer);\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType) {\n\t\treturn (returnValue != null && returnValue instanceof DeferredResult);\n\t}","id":39271,"modified_method":"@Override\n\tpublic boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType) {\n\t\treturn (returnValue != null && (getAdapterFor(returnValue.getClass()) != null));\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic boolean supportsReturnType(MethodParameter returnType) {\n\t\treturn DeferredResult.class.isAssignableFrom(returnType.getParameterType());\n\t}","id":39272,"modified_method":"@Override\n\tpublic boolean supportsReturnType(MethodParameter returnType) {\n\t\treturn (getAdapterFor(returnType.getParameterType()) != null);\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Return the list of return value handlers to use including built-in and\n\t * custom handlers provided via {@link #setReturnValueHandlers}.\n\t */\n\tprivate List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {\n\t\tList<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>();\n\n\t\t// Single-purpose return value types\n\t\thandlers.add(new ModelAndViewMethodReturnValueHandler());\n\t\thandlers.add(new ModelMethodProcessor());\n\t\thandlers.add(new ViewMethodReturnValueHandler());\n\t\thandlers.add(new ResponseBodyEmitterReturnValueHandler(getMessageConverters()));\n\t\thandlers.add(new StreamingResponseBodyReturnValueHandler());\n\t\thandlers.add(new HttpEntityMethodProcessor(getMessageConverters(),\n\t\t\t\tthis.contentNegotiationManager, this.requestResponseBodyAdvice));\n\t\thandlers.add(new HttpHeadersReturnValueHandler());\n\t\thandlers.add(new CallableMethodReturnValueHandler());\n\t\thandlers.add(new DeferredResultMethodReturnValueHandler());\n\t\thandlers.add(new AsyncTaskMethodReturnValueHandler(this.beanFactory));\n\t\thandlers.add(new ListenableFutureReturnValueHandler());\n\t\tif (completionStagePresent) {\n\t\t\thandlers.add(new CompletionStageReturnValueHandler());\n\t\t}\n\n\t\t// Annotation-based return value types\n\t\thandlers.add(new ModelAttributeMethodProcessor(false));\n\t\thandlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(),\n\t\t\t\tthis.contentNegotiationManager, this.requestResponseBodyAdvice));\n\n\t\t// Multi-purpose return value types\n\t\thandlers.add(new ViewNameMethodReturnValueHandler());\n\t\thandlers.add(new MapMethodProcessor());\n\n\t\t// Custom return value types\n\t\tif (getCustomReturnValueHandlers() != null) {\n\t\t\thandlers.addAll(getCustomReturnValueHandlers());\n\t\t}\n\n\t\t// Catch-all\n\t\tif (!CollectionUtils.isEmpty(getModelAndViewResolvers())) {\n\t\t\thandlers.add(new ModelAndViewResolverMethodReturnValueHandler(getModelAndViewResolvers()));\n\t\t}\n\t\telse {\n\t\t\thandlers.add(new ModelAttributeMethodProcessor(true));\n\t\t}\n\n\t\treturn handlers;\n\t}","id":39273,"modified_method":"/**\n\t * Return the list of return value handlers to use including built-in and\n\t * custom handlers provided via {@link #setReturnValueHandlers}.\n\t */\n\tprivate List<HandlerMethodReturnValueHandler> getDefaultReturnValueHandlers() {\n\t\tList<HandlerMethodReturnValueHandler> handlers = new ArrayList<HandlerMethodReturnValueHandler>();\n\n\t\t// Single-purpose return value types\n\t\thandlers.add(new ModelAndViewMethodReturnValueHandler());\n\t\thandlers.add(new ModelMethodProcessor());\n\t\thandlers.add(new ViewMethodReturnValueHandler());\n\t\thandlers.add(new ResponseBodyEmitterReturnValueHandler(getMessageConverters()));\n\t\thandlers.add(new StreamingResponseBodyReturnValueHandler());\n\t\thandlers.add(new HttpEntityMethodProcessor(getMessageConverters(),\n\t\t\t\tthis.contentNegotiationManager, this.requestResponseBodyAdvice));\n\t\thandlers.add(new HttpHeadersReturnValueHandler());\n\t\thandlers.add(new CallableMethodReturnValueHandler());\n\t\thandlers.add(new DeferredResultMethodReturnValueHandler());\n\t\thandlers.add(new AsyncTaskMethodReturnValueHandler(this.beanFactory));\n\n\t\t// Annotation-based return value types\n\t\thandlers.add(new ModelAttributeMethodProcessor(false));\n\t\thandlers.add(new RequestResponseBodyMethodProcessor(getMessageConverters(),\n\t\t\t\tthis.contentNegotiationManager, this.requestResponseBodyAdvice));\n\n\t\t// Multi-purpose return value types\n\t\thandlers.add(new ViewNameMethodReturnValueHandler());\n\t\thandlers.add(new MapMethodProcessor());\n\n\t\t// Custom return value types\n\t\tif (getCustomReturnValueHandlers() != null) {\n\t\t\thandlers.addAll(getCustomReturnValueHandlers());\n\t\t}\n\n\t\t// Catch-all\n\t\tif (!CollectionUtils.isEmpty(getModelAndViewResolvers())) {\n\t\t\thandlers.add(new ModelAndViewResolverMethodReturnValueHandler(getModelAndViewResolvers()));\n\t\t}\n\t\telse {\n\t\t\thandlers.add(new ModelAttributeMethodProcessor(true));\n\t\t}\n\n\t\treturn handlers;\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType) {\n\t\tif (returnValue != null) {\n\t\t\tif (returnValue instanceof ResponseBodyEmitter) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse if (returnValue instanceof ResponseEntity) {\n\t\t\t\tObject body = ((ResponseEntity) returnValue).getBody();\n\t\t\t\treturn (body != null && body instanceof ResponseBodyEmitter);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","id":39274,"modified_method":"@Override\n\tpublic boolean isAsyncReturnValue(Object returnValue, MethodParameter returnType) {\n\t\tif (returnValue != null) {\n\t\t\tObject adaptFrom = returnValue;\n\t\t\tif (returnValue instanceof ResponseEntity) {\n\t\t\t\tadaptFrom = ((ResponseEntity) returnValue).getBody();\n\t\t\t}\n\t\t\tif (adaptFrom != null) {\n\t\t\t\treturn (getAdapterFor(adaptFrom.getClass()) != null);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public ResponseBodyEmitterReturnValueHandler(List<HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notEmpty(messageConverters, \"'messageConverters' must not be empty\");\n\t\tthis.messageConverters = messageConverters;\n\t}","id":39275,"modified_method":"public ResponseBodyEmitterReturnValueHandler(List<HttpMessageConverter<?>> messageConverters) {\n\t\tAssert.notEmpty(messageConverters, \"'messageConverters' must not be empty\");\n\t\tthis.messageConverters = messageConverters;\n\t\tthis.adapterMap = new HashMap<Class<?>, ResponseBodyEmitterAdapter>(3);\n\t\tthis.adapterMap.put(ResponseBodyEmitter.class, new SimpleResponseBodyEmitterAdapter());\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic void handleReturnValue(Object returnValue, MethodParameter returnType,\n\t\t\tModelAndViewContainer mavContainer, NativeWebRequest webRequest) throws Exception {\n\n\t\tif (returnValue == null) {\n\t\t\tmavContainer.setRequestHandled(true);\n\t\t\treturn;\n\t\t}\n\n\t\tHttpServletResponse response = webRequest.getNativeResponse(HttpServletResponse.class);\n\t\tServerHttpResponse outputMessage = new ServletServerHttpResponse(response);\n\n\t\tif (ResponseEntity.class.isAssignableFrom(returnValue.getClass())) {\n\t\t\tResponseEntity<?> responseEntity = (ResponseEntity<?>) returnValue;\n\t\t\toutputMessage.setStatusCode(responseEntity.getStatusCode());\n\t\t\toutputMessage.getHeaders().putAll(responseEntity.getHeaders());\n\t\t\treturnValue = responseEntity.getBody();\n\t\t\tif (returnValue == null) {\n\t\t\t\tmavContainer.setRequestHandled(true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tServletRequest request = webRequest.getNativeRequest(ServletRequest.class);\n\t\tShallowEtagHeaderFilter.disableContentCaching(request);\n\n\t\tAssert.isInstanceOf(ResponseBodyEmitter.class, returnValue);\n\t\tResponseBodyEmitter emitter = (ResponseBodyEmitter) returnValue;\n\t\temitter.extendResponse(outputMessage);\n\n\t\t// Commit the response and wrap to ignore further header changes\n\t\toutputMessage.getBody();\n\t\toutputMessage.flush();\n\t\toutputMessage = new StreamingServletServerHttpResponse(outputMessage);\n\n\t\tDeferredResult<?> deferredResult = new DeferredResult<Object>(emitter.getTimeout());\n\t\tWebAsyncUtils.getAsyncManager(webRequest).startDeferredResultProcessing(deferredResult, mavContainer);\n\n\t\tHttpMessageConvertingHandler handler = new HttpMessageConvertingHandler(outputMessage, deferredResult);\n\t\temitter.initialize(handler);\n\t}","id":39276,"modified_method":"@Override\n\tpublic void handleReturnValue(Object returnValue, MethodParameter returnType,\n\t\t\tModelAndViewContainer mavContainer, NativeWebRequest webRequest) throws Exception {\n\n\t\tif (returnValue == null) {\n\t\t\tmavContainer.setRequestHandled(true);\n\t\t\treturn;\n\t\t}\n\n\t\tHttpServletResponse response = webRequest.getNativeResponse(HttpServletResponse.class);\n\t\tServerHttpResponse outputMessage = new ServletServerHttpResponse(response);\n\n\t\tif (ResponseEntity.class.isAssignableFrom(returnValue.getClass())) {\n\t\t\tResponseEntity<?> responseEntity = (ResponseEntity<?>) returnValue;\n\t\t\toutputMessage.setStatusCode(responseEntity.getStatusCode());\n\t\t\toutputMessage.getHeaders().putAll(responseEntity.getHeaders());\n\t\t\treturnValue = responseEntity.getBody();\n\t\t\tif (returnValue == null) {\n\t\t\t\tmavContainer.setRequestHandled(true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tServletRequest request = webRequest.getNativeRequest(ServletRequest.class);\n\t\tShallowEtagHeaderFilter.disableContentCaching(request);\n\n\t\tResponseBodyEmitterAdapter adapter = getAdapterFor(returnValue.getClass());\n\t\tAssert.notNull(adapter);\n\t\tResponseBodyEmitter emitter = adapter.adaptToEmitter(returnValue, outputMessage);\n\t\temitter.extendResponse(outputMessage);\n\n\t\t// Commit the response and wrap to ignore further header changes\n\t\toutputMessage.getBody();\n\t\toutputMessage.flush();\n\t\toutputMessage = new StreamingServletServerHttpResponse(outputMessage);\n\n\t\tDeferredResult<?> deferredResult = new DeferredResult<Object>(emitter.getTimeout());\n\t\tWebAsyncUtils.getAsyncManager(webRequest).startDeferredResultProcessing(deferredResult, mavContainer);\n\n\t\tHttpMessageConvertingHandler handler = new HttpMessageConvertingHandler(outputMessage, deferredResult);\n\t\temitter.initialize(handler);\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic boolean supportsReturnType(MethodParameter returnType) {\n\t\tif (ResponseBodyEmitter.class.isAssignableFrom(returnType.getParameterType())) {\n\t\t\treturn true;\n\t\t}\n\t\telse if (ResponseEntity.class.isAssignableFrom(returnType.getParameterType())) {\n\t\t\tClass<?> bodyType = ResolvableType.forMethodParameter(returnType).getGeneric(0).resolve();\n\t\t\treturn (bodyType != null && ResponseBodyEmitter.class.isAssignableFrom(bodyType));\n\t\t}\n\t\treturn false;\n\t}","id":39277,"modified_method":"@Override\n\tpublic boolean supportsReturnType(MethodParameter returnType) {\n\t\tClass<?> bodyType;\n\t\tif (ResponseEntity.class.isAssignableFrom(returnType.getParameterType())) {\n\t\t\tbodyType = ResolvableType.forMethodParameter(returnType).getGeneric(0).resolve();\n\t\t}\n\t\telse {\n\t\t\tbodyType = returnType.getParameterType();\n\t\t}\n\t\treturn (getAdapterFor(bodyType) != null);\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void supportsReturnType() throws Exception {\n\t\tassertTrue(this.handler.supportsReturnType(returnType(TestController.class, \"handle\")));\n\t\tassertTrue(this.handler.supportsReturnType(returnType(TestController.class, \"handleSse\")));\n\t\tassertTrue(this.handler.supportsReturnType(returnType(TestController.class, \"handleResponseEntity\")));\n\t\tassertFalse(this.handler.supportsReturnType(returnType(TestController.class, \"handleResponseEntityString\")));\n\t\tassertFalse(this.handler.supportsReturnType(returnType(TestController.class, \"handleResponseEntityParameterized\")));\n\t}","id":39278,"modified_method":"@Test\n\tpublic void supportsReturnType() throws Exception {\n\t\tassertTrue(this.handler.supportsReturnType(returnType(\"handle\")));\n\t\tassertTrue(this.handler.supportsReturnType(returnType(\"handleSse\")));\n\t\tassertTrue(this.handler.supportsReturnType(returnType(\"handleResponseEntity\")));\n\t\tassertFalse(this.handler.supportsReturnType(returnType(\"handleResponseEntityString\")));\n\t\tassertFalse(this.handler.supportsReturnType(returnType(\"handleResponseEntityParameterized\")));\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void responseEntitySse() throws Exception {\n\t\tMethodParameter returnType = returnType(TestController.class, \"handleResponseEntitySse\");\n\t\tResponseEntity<SseEmitter> emitter = ResponseEntity.ok().header(\"foo\", \"bar\").body(new SseEmitter());\n\t\tthis.handler.handleReturnValue(emitter, returnType, this.mavContainer, this.webRequest);\n\n\t\tassertTrue(this.request.isAsyncStarted());\n\t\tassertEquals(200, this.response.getStatus());\n\t\tassertEquals(\"text/event-stream\", this.response.getContentType());\n\t\tassertEquals(\"bar\", this.response.getHeader(\"foo\"));\n\t}","id":39279,"modified_method":"@Test\n\tpublic void responseEntitySse() throws Exception {\n\t\tMethodParameter returnType = returnType(\"handleResponseEntitySse\");\n\t\tResponseEntity<SseEmitter> entity = ResponseEntity.ok().header(\"foo\", \"bar\").body(new SseEmitter());\n\t\thandleReturnValue(entity, returnType);\n\n\t\tassertTrue(this.request.isAsyncStarted());\n\t\tassertEquals(200, this.response.getStatus());\n\t\tassertEquals(\"text/event-stream\", this.response.getContentType());\n\t\tassertEquals(\"bar\", this.response.getHeader(\"foo\"));\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void timeoutValueAndCallback() throws Exception {\n\n\t\tAsyncWebRequest asyncWebRequest = mock(AsyncWebRequest.class);\n\t\tWebAsyncUtils.getAsyncManager(this.request).setAsyncWebRequest(asyncWebRequest);\n\n\t\tResponseBodyEmitter emitter = new ResponseBodyEmitter(19000L);\n\t\temitter.onTimeout(mock(Runnable.class));\n\t\temitter.onCompletion(mock(Runnable.class));\n\n\t\tMethodParameter returnType = returnType(TestController.class, \"handle\");\n\t\tthis.handler.handleReturnValue(emitter, returnType, this.mavContainer, this.webRequest);\n\n\t\tverify(asyncWebRequest).setTimeout(19000L);\n\t\tverify(asyncWebRequest).addTimeoutHandler(any(Runnable.class));\n\t\tverify(asyncWebRequest, times(2)).addCompletionHandler(any(Runnable.class));\n\t\tverify(asyncWebRequest).startAsync();\n\t}","id":39280,"modified_method":"@Test\n\tpublic void timeoutValueAndCallback() throws Exception {\n\n\t\tAsyncWebRequest asyncWebRequest = mock(AsyncWebRequest.class);\n\t\tWebAsyncUtils.getAsyncManager(this.request).setAsyncWebRequest(asyncWebRequest);\n\n\t\tResponseBodyEmitter emitter = new ResponseBodyEmitter(19000L);\n\t\temitter.onTimeout(mock(Runnable.class));\n\t\temitter.onCompletion(mock(Runnable.class));\n\n\t\tMethodParameter returnType = returnType(\"handle\");\n\t\thandleReturnValue(emitter, returnType);\n\n\t\tverify(asyncWebRequest).setTimeout(19000L);\n\t\tverify(asyncWebRequest).addTimeoutHandler(any(Runnable.class));\n\t\tverify(asyncWebRequest, times(2)).addCompletionHandler(any(Runnable.class));\n\t\tverify(asyncWebRequest).startAsync();\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void sseEmitter() throws Exception {\n\t\tMethodParameter returnType = returnType(TestController.class, \"handleSse\");\n\t\tSseEmitter emitter = new SseEmitter();\n\t\tthis.handler.handleReturnValue(emitter, returnType, this.mavContainer, this.webRequest);\n\n\t\tassertTrue(this.request.isAsyncStarted());\n\t\tassertEquals(200, this.response.getStatus());\n\t\tassertEquals(\"text/event-stream\", this.response.getContentType());\n\n\t\tSimpleBean bean1 = new SimpleBean();\n\t\tbean1.setId(1L);\n\t\tbean1.setName(\"Joe\");\n\n\t\tSimpleBean bean2 = new SimpleBean();\n\t\tbean2.setId(2L);\n\t\tbean2.setName(\"John\");\n\n\t\temitter.send(event().comment(\"a test\").name(\"update\").id(\"1\").reconnectTime(5000L).data(bean1).data(bean2));\n\n\t\tassertEquals(\":a test\\n\" +\n\t\t\t\t\t\t\"event:update\\n\" +\n\t\t\t\t\t\t\"id:1\\n\" +\n\t\t\t\t\t\t\"retry:5000\\n\" +\n\t\t\t\t\t\t\"data:{\\\"id\\\":1,\\\"name\\\":\\\"Joe\\\"}\\n\" +\n\t\t\t\t\t\t\"data:{\\\"id\\\":2,\\\"name\\\":\\\"John\\\"}\\n\" +\n\t\t\t\t\t\t\"\\n\",\n\t\t\t\tthis.response.getContentAsString());\n\t}","id":39281,"modified_method":"@Test\n\tpublic void sseEmitter() throws Exception {\n\t\tMethodParameter returnType = returnType(\"handleSse\");\n\t\tSseEmitter emitter = new SseEmitter();\n\t\thandleReturnValue(emitter, returnType);\n\n\t\tassertTrue(this.request.isAsyncStarted());\n\t\tassertEquals(200, this.response.getStatus());\n\t\tassertEquals(\"text/event-stream\", this.response.getContentType());\n\n\t\tSimpleBean bean1 = new SimpleBean();\n\t\tbean1.setId(1L);\n\t\tbean1.setName(\"Joe\");\n\n\t\tSimpleBean bean2 = new SimpleBean();\n\t\tbean2.setId(2L);\n\t\tbean2.setName(\"John\");\n\n\t\temitter.send(event().comment(\"a test\").name(\"update\").id(\"1\").reconnectTime(5000L).data(bean1).data(bean2));\n\n\t\tassertEquals(\":a test\\n\" +\n\t\t\t\t\t\t\"event:update\\n\" +\n\t\t\t\t\t\t\"id:1\\n\" +\n\t\t\t\t\t\t\"retry:5000\\n\" +\n\t\t\t\t\t\t\"data:{\\\"id\\\":1,\\\"name\\\":\\\"Joe\\\"}\\n\" +\n\t\t\t\t\t\t\"data:{\\\"id\\\":2,\\\"name\\\":\\\"John\\\"}\\n\" +\n\t\t\t\t\t\t\"\\n\",\n\t\t\t\tthis.response.getContentAsString());\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"private MethodParameter returnType(Class<?> clazz, String methodName) throws NoSuchMethodException {\n\t\tMethod method = clazz.getDeclaredMethod(methodName);\n\t\treturn new MethodParameter(method, -1);\n\t}","id":39282,"modified_method":"private MethodParameter returnType(String methodName) throws NoSuchMethodException {\n\t\tMethod method = TestController.class.getDeclaredMethod(methodName);\n\t\treturn new MethodParameter(method, -1);\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Before\n\tpublic void setUp() throws Exception {\n\n\t\tList<HttpMessageConverter<?>> converters = Arrays.asList(\n\t\t\t\tnew StringHttpMessageConverter(), new MappingJackson2HttpMessageConverter());\n\n\t\tthis.handler = new ResponseBodyEmitterReturnValueHandler(converters);\n\t\tthis.mavContainer = new ModelAndViewContainer();\n\n\t\tthis.request = new MockHttpServletRequest();\n\t\tthis.response = new MockHttpServletResponse();\n\t\tthis.webRequest = new ServletWebRequest(this.request, this.response);\n\n\t\tAsyncWebRequest asyncWebRequest = new StandardServletAsyncWebRequest(this.request, this.response);\n\t\tWebAsyncUtils.getAsyncManager(this.webRequest).setAsyncWebRequest(asyncWebRequest);\n\t\tthis.request.setAsyncSupported(true);\n\t}","id":39283,"modified_method":"@Before\n\tpublic void setUp() throws Exception {\n\n\t\tList<HttpMessageConverter<?>> converters = Arrays.asList(\n\t\t\t\tnew StringHttpMessageConverter(), new MappingJackson2HttpMessageConverter());\n\n\t\tthis.handler = new ResponseBodyEmitterReturnValueHandler(converters);\n\t\tthis.request = new MockHttpServletRequest();\n\t\tthis.response = new MockHttpServletResponse();\n\t\tthis.webRequest = new ServletWebRequest(this.request, this.response);\n\n\t\tAsyncWebRequest asyncWebRequest = new StandardServletAsyncWebRequest(this.request, this.response);\n\t\tWebAsyncUtils.getAsyncManager(this.webRequest).setAsyncWebRequest(asyncWebRequest);\n\t\tthis.request.setAsyncSupported(true);\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void responseBodyEmitter() throws Exception {\n\t\tMethodParameter returnType = returnType(TestController.class, \"handle\");\n\t\tResponseBodyEmitter emitter = new ResponseBodyEmitter();\n\t\tthis.handler.handleReturnValue(emitter, returnType, this.mavContainer, this.webRequest);\n\n\t\tassertTrue(this.request.isAsyncStarted());\n\t\tassertEquals(\"\", this.response.getContentAsString());\n\n\t\tSimpleBean bean = new SimpleBean();\n\t\tbean.setId(1L);\n\t\tbean.setName(\"Joe\");\n\t\temitter.send(bean);\n\t\temitter.send(\"\\n\");\n\n\t\tbean.setId(2L);\n\t\tbean.setName(\"John\");\n\t\temitter.send(bean);\n\t\temitter.send(\"\\n\");\n\n\t\tbean.setId(3L);\n\t\tbean.setName(\"Jason\");\n\t\temitter.send(bean);\n\n\t\tassertEquals(\"{\\\"id\\\":1,\\\"name\\\":\\\"Joe\\\"}\\n\" +\n\t\t\t\t\t\t\"{\\\"id\\\":2,\\\"name\\\":\\\"John\\\"}\\n\" +\n\t\t\t\t\t\t\"{\\\"id\\\":3,\\\"name\\\":\\\"Jason\\\"}\",\n\t\t\t\tthis.response.getContentAsString());\n\n\t\tMockAsyncContext asyncContext = (MockAsyncContext) this.request.getAsyncContext();\n\t\tassertNull(asyncContext.getDispatchedPath());\n\n\t\temitter.complete();\n\t\tassertNotNull(asyncContext.getDispatchedPath());\n\t}","id":39284,"modified_method":"@Test\n\tpublic void responseBodyEmitter() throws Exception {\n\t\tMethodParameter returnType = returnType(\"handle\");\n\t\tResponseBodyEmitter emitter = new ResponseBodyEmitter();\n\t\thandleReturnValue(emitter, returnType);\n\n\t\tassertTrue(this.request.isAsyncStarted());\n\t\tassertEquals(\"\", this.response.getContentAsString());\n\n\t\tSimpleBean bean = new SimpleBean();\n\t\tbean.setId(1L);\n\t\tbean.setName(\"Joe\");\n\t\temitter.send(bean);\n\t\temitter.send(\"\\n\");\n\n\t\tbean.setId(2L);\n\t\tbean.setName(\"John\");\n\t\temitter.send(bean);\n\t\temitter.send(\"\\n\");\n\n\t\tbean.setId(3L);\n\t\tbean.setName(\"Jason\");\n\t\temitter.send(bean);\n\n\t\tassertEquals(\"{\\\"id\\\":1,\\\"name\\\":\\\"Joe\\\"}\\n\" +\n\t\t\t\t\t\t\"{\\\"id\\\":2,\\\"name\\\":\\\"John\\\"}\\n\" +\n\t\t\t\t\t\t\"{\\\"id\\\":3,\\\"name\\\":\\\"Jason\\\"}\",\n\t\t\t\tthis.response.getContentAsString());\n\n\t\tMockAsyncContext asyncContext = (MockAsyncContext) this.request.getAsyncContext();\n\t\tassertNull(asyncContext.getDispatchedPath());\n\n\t\temitter.complete();\n\t\tassertNotNull(asyncContext.getDispatchedPath());\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void responseEntitySseNoContent() throws Exception {\n\t\tMethodParameter returnType = returnType(TestController.class, \"handleResponseEntitySse\");\n\t\tResponseEntity<?> emitter = ResponseEntity.noContent().build();\n\t\tthis.handler.handleReturnValue(emitter, returnType, this.mavContainer, this.webRequest);\n\n\t\tassertFalse(this.request.isAsyncStarted());\n\t\tassertEquals(204, this.response.getStatus());\n\t}","id":39285,"modified_method":"@Test\n\tpublic void responseEntitySseNoContent() throws Exception {\n\t\tMethodParameter returnType = returnType(\"handleResponseEntitySse\");\n\t\tResponseEntity<?> entity = ResponseEntity.noContent().build();\n\t\thandleReturnValue(entity, returnType);\n\n\t\tassertFalse(this.request.isAsyncStarted());\n\t\tassertEquals(204, this.response.getStatus());\n\t}","commit_id":"971ccab038ad8e549d515a80e2d64c5d4c80c86b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\t\tpublic Class<?> getParameterType() {\n\t\t\tif (this.returnValue != null) {\n\t\t\t\treturn this.returnValue.getClass();\n\t\t\t}\n\t\t\tif (ResolvableType.NONE.equals(this.returnType)) {\n\t\t\t\tthrow new IllegalArgumentException(\"Expected Future-like type with generic parameter\");\n\t\t\t}\n\t\t\treturn this.returnType.getRawClass();\n\t\t}","id":39286,"modified_method":"@Override\n\t\tpublic Class<?> getParameterType() {\n\t\t\tif (this.returnValue != null) {\n\t\t\t\treturn this.returnValue.getClass();\n\t\t\t}\n\t\t\tif (!ResolvableType.NONE.equals(this.returnType)) {\n\t\t\t\treturn this.returnType.getRawClass();\n\t\t\t}\n\t\t\treturn super.getParameterType();\n\t\t}","commit_id":"cfc560c4c460ed0ee465182d715339bd6e81c84b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\t\tpublic Class<?> getParameterType() {\n\t\t\tif (this.returnValue != null) {\n\t\t\t\treturn this.returnValue.getClass();\n\t\t\t}\n\t\t\tClass<?> parameterType = super.getParameterType();\n\t\t\tif (ResponseBodyEmitter.class.isAssignableFrom(parameterType) ||\n\t\t\t\t\tStreamingResponseBody.class.isAssignableFrom(parameterType)) {\n\t\t\t\treturn parameterType;\n\t\t\t}\n\t\t\tif (ResolvableType.NONE.equals(this.returnType)) {\n\t\t\t\tthrow new IllegalArgumentException(\"Expected one of Callable, DeferredResult, or ListenableFuture: \" +\n\t\t\t\t\t\tsuper.getParameterType());\n\t\t\t}\n\t\t\treturn this.returnType.getRawClass();\n\t\t}","id":39287,"modified_method":"@Override\n\t\tpublic Class<?> getParameterType() {\n\t\t\tif (this.returnValue != null) {\n\t\t\t\treturn this.returnValue.getClass();\n\t\t\t}\n\t\t\tif (!ResolvableType.NONE.equals(this.returnType)) {\n\t\t\t\treturn this.returnType.getRawClass();\n\t\t\t}\n\t\t\treturn super.getParameterType();\n\t\t}","commit_id":"cfc560c4c460ed0ee465182d715339bd6e81c84b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void wrapConcurrentResult_ResponseEntity() throws Exception {\n\t\tList<HttpMessageConverter<?>> converters = new ArrayList<>();\n\t\tconverters.add(new StringHttpMessageConverter());\n\t\tthis.returnValueHandlers.addHandler(new HttpEntityMethodProcessor(converters));\n\t\tServletInvocableHandlerMethod handlerMethod = getHandlerMethod(new ResponseEntityHandler(), \"handleDeferred\");\n\t\thandlerMethod = handlerMethod.wrapConcurrentResult(new ResponseEntity<>(\"bar\", HttpStatus.OK));\n\t\thandlerMethod.invokeAndHandle(this.webRequest, this.mavContainer);\n\n\t\tassertEquals(\"bar\", this.response.getContentAsString());\n\t}","id":39288,"modified_method":"private void wrapConcurrentResult_ResponseBody(Object handler, Object result, Class<?> expectedReturnType)\n\t\t\tthrows Exception {\n\n\t\tList<HttpMessageConverter<?>> converters = new ArrayList<>();\n\t\tconverters.add(new StringHttpMessageConverter());\n\t\tthis.returnValueHandlers.addHandler(new ModelAndViewMethodReturnValueHandler());\n\t\tthis.returnValueHandlers.addHandler(new RequestResponseBodyMethodProcessor(converters));\n\t\tServletInvocableHandlerMethod handlerMethod = getHandlerMethod(handler, \"handle\");\n\n\t\thandlerMethod = handlerMethod.wrapConcurrentResult(result);\n\t\thandlerMethod.invokeAndHandle(this.webRequest, this.mavContainer);\n\t\tassertEquals((result != null ? result.toString() : \"\"), this.response.getContentAsString());\n\t\tassertEquals(expectedReturnType, handlerMethod.getReturnValueType(result).getParameterType());\n\t}","commit_id":"cfc560c4c460ed0ee465182d715339bd6e81c84b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void wrapConcurrentResult_TypeLevelResponseBody() throws Exception {\n\t\twrapConcurrentResult_ResponseBody(new TypeLevelResponseBodyHandler());\n\t}","id":39289,"modified_method":"@Test\n\tpublic void wrapConcurrentResult_TypeLevelResponseBody() throws Exception {\n\t\twrapConcurrentResult_ResponseBody(new TypeLevelResponseBodyHandler(), \"bar\", String.class);\n\t}","commit_id":"cfc560c4c460ed0ee465182d715339bd6e81c84b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void wrapConcurrentResult_MethodLevelResponseBody() throws Exception {\n\t\twrapConcurrentResult_ResponseBody(new MethodLevelResponseBodyHandler());\n\t}","id":39290,"modified_method":"@Test\n\tpublic void wrapConcurrentResult_MethodLevelResponseBody() throws Exception {\n\t\twrapConcurrentResult_ResponseBody(new MethodLevelResponseBodyHandler(), \"bar\", String.class);\n\t}","commit_id":"cfc560c4c460ed0ee465182d715339bd6e81c84b","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Resolve the single type argument of the given generic interface against\n\t * the given target class which is assumed to implement the generic interface\n\t * and possibly declare a concrete type for its type variable.\n\t * @param clazz the target class to check against\n\t * @param genericIfc the generic interface or superclass to resolve the type argument from\n\t * @return the resolved type of the argument, or {@code null} if not resolvable\n\t */\n\tpublic static Class<?> resolveTypeArgument(Class<?> clazz, Class<?> genericIfc) {\n\t\tClass[] typeArgs = resolveTypeArguments(clazz, genericIfc);\n\t\tif (typeArgs == null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (typeArgs.length != 1) {\n\t\t\tthrow new IllegalArgumentException(\"Expected 1 type argument on generic interface [\" +\n\t\t\t\t\tgenericIfc.getName() + \"] but found \" + typeArgs.length);\n\t\t}\n\t\treturn typeArgs[0];\n\t}","id":39291,"modified_method":"/**\n\t * Resolve the single type argument of the given generic interface against\n\t * the given target class which is assumed to implement the generic interface\n\t * and possibly declare a concrete type for its type variable.\n\t * @param clazz the target class to check against\n\t * @param genericIfc the generic interface or superclass to resolve the type argument from\n\t * @return the resolved type of the argument, or {@code null} if not resolvable\n\t */\n\tpublic static Class<?> resolveTypeArgument(Class<?> clazz, Class<?> genericIfc) {\n\t\tResolvableType resolvableType = ResolvableType.forClass(clazz).as(genericIfc);\n\t\tif (!resolvableType.hasGenerics()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn getSingleGeneric(resolvableType);\n\t}","commit_id":"595efe9aab884bab233c61278f00ef325446d268","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Determine the target type for the generic return type of the given method,\n\t * where formal type variables are declared on the given class.\n\t * @param method the method to introspect\n\t * @param clazz the class to resolve type variables against\n\t * @return the corresponding generic parameter or return type\n\t * @see #resolveReturnTypeForGenericMethod\n\t */\n\tpublic static Class<?> resolveReturnType(Method method, Class<?> clazz) {\n\t\tAssert.notNull(method, \"Method must not be null\");\n\t\tType genericType = method.getGenericReturnType();\n\t\tAssert.notNull(clazz, \"Class must not be null\");\n\t\tMap<TypeVariable, Type> typeVariableMap = getTypeVariableMap(clazz);\n\t\tType rawType = getRawType(genericType, typeVariableMap);\n\t\treturn (rawType instanceof Class ? (Class<?>) rawType : method.getReturnType());\n\t}","id":39292,"modified_method":"/**\n\t * Determine the target type for the generic return type of the given method,\n\t * where formal type variables are declared on the given class.\n\t * @param method the method to introspect\n\t * @param clazz the class to resolve type variables against\n\t * @return the corresponding generic parameter or return type\n\t * @see #resolveReturnTypeForGenericMethod\n\t */\n\tpublic static Class<?> resolveReturnType(Method method, Class<?> clazz) {\n\t\tAssert.notNull(method, \"Method must not be null\");\n\t\tAssert.notNull(clazz, \"Class must not be null\");\n\t\treturn ResolvableType.forMethodReturn(method, clazz).resolve(method.getReturnType());\n\t}","commit_id":"595efe9aab884bab233c61278f00ef325446d268","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Determine the target type for the given parameter specification.\n\t * @param methodParam the method parameter specification\n\t * @return the corresponding generic parameter type\n\t */\n\tpublic static Type getTargetType(MethodParameter methodParam) {\n\t\tAssert.notNull(methodParam, \"MethodParameter must not be null\");\n\t\tif (methodParam.getConstructor() != null) {\n\t\t\treturn methodParam.getConstructor().getGenericParameterTypes()[methodParam.getParameterIndex()];\n\t\t}\n\t\telse {\n\t\t\tif (methodParam.getParameterIndex() >= 0) {\n\t\t\t\treturn methodParam.getMethod().getGenericParameterTypes()[methodParam.getParameterIndex()];\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn methodParam.getMethod().getGenericReturnType();\n\t\t\t}\n\t\t}\n\t}","id":39293,"modified_method":"/**\n\t * Determine the target type for the given parameter specification.\n\t * @param methodParam the method parameter specification\n\t * @return the corresponding generic parameter type\n\t * @deprecated as of Spring 4.0 use {@link MethodParameter#getGenericParameterType()}\n\t */\n\t@Deprecated\n\tpublic static Type getTargetType(MethodParameter methodParam) {\n\t\tAssert.notNull(methodParam, \"MethodParameter must not be null\");\n\t\treturn methodParam.getGenericParameterType();\n\t}","commit_id":"595efe9aab884bab233c61278f00ef325446d268","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Build a mapping of {@link TypeVariable#getName TypeVariable names} to\n\t * {@link Class concrete classes} for the specified {@link Class}. Searches\n\t * all super types, enclosing types and interfaces.\n\t */\n\tpublic static Map<TypeVariable, Type> getTypeVariableMap(Class<?> clazz) {\n\t\tMap<TypeVariable, Type> typeVariableMap = typeVariableCache.get(clazz);\n\n\t\tif (typeVariableMap == null) {\n\t\t\ttypeVariableMap = new HashMap<TypeVariable, Type>();\n\n\t\t\t// interfaces\n\t\t\textractTypeVariablesFromGenericInterfaces(clazz.getGenericInterfaces(), typeVariableMap);\n\n\t\t\ttry {\n\t\t\t\t// super class\n\t\t\t\tClass<?> type = clazz;\n\t\t\t\twhile (type.getSuperclass() != null && !Object.class.equals(type.getSuperclass())) {\n\t\t\t\t\tType genericType = type.getGenericSuperclass();\n\t\t\t\t\tif (genericType instanceof ParameterizedType) {\n\t\t\t\t\t\tParameterizedType pt = (ParameterizedType) genericType;\n\t\t\t\t\t\tpopulateTypeMapFromParameterizedType(pt, typeVariableMap);\n\t\t\t\t\t}\n\t\t\t\t\textractTypeVariablesFromGenericInterfaces(type.getSuperclass().getGenericInterfaces(), typeVariableMap);\n\t\t\t\t\ttype = type.getSuperclass();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (MalformedParameterizedTypeException ex) {\n\t\t\t\t// from getGenericSuperclass() - ignore and continue with member class check\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// enclosing class\n\t\t\t\tClass<?> type = clazz;\n\t\t\t\twhile (type.isMemberClass()) {\n\t\t\t\t\tType genericType = type.getGenericSuperclass();\n\t\t\t\t\tif (genericType instanceof ParameterizedType) {\n\t\t\t\t\t\tParameterizedType pt = (ParameterizedType) genericType;\n\t\t\t\t\t\tpopulateTypeMapFromParameterizedType(pt, typeVariableMap);\n\t\t\t\t\t}\n\t\t\t\t\ttype = type.getEnclosingClass();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (MalformedParameterizedTypeException ex) {\n\t\t\t\t// from getGenericSuperclass() - ignore and preserve previously accumulated type variables\n\t\t\t}\n\n\t\t\ttypeVariableCache.put(clazz, typeVariableMap);\n\t\t}\n\n\t\treturn typeVariableMap;\n\t}","id":39294,"modified_method":"/**\n\t * Build a mapping of {@link TypeVariable#getName TypeVariable names} to\n\t * {@link Class concrete classes} for the specified {@link Class}. Searches\n\t * all super types, enclosing types and interfaces.\n\t * @deprecated as of Spring 4.0 in favor of {@link ResolvableType}\n\t */\n\t@Deprecated\n\tpublic static Map<TypeVariable, Type> getTypeVariableMap(Class<?> clazz) {\n\t\tMap<TypeVariable, Type> typeVariableMap = typeVariableCache.get(clazz);\n\t\tif (typeVariableMap == null) {\n\t\t\ttypeVariableMap = new HashMap<TypeVariable, Type>();\n\t\t\tbuildTypeVaraibleMap(ResolvableType.forClass(clazz), typeVariableMap);\n\t\t\ttypeVariableCache.put(clazz, Collections.unmodifiableMap(typeVariableMap));\n\t\t}\n\t\treturn typeVariableMap;\n\t}","commit_id":"595efe9aab884bab233c61278f00ef325446d268","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Resolve the single type argument of the given generic interface against the given\n\t * target method which is assumed to return the given interface or an implementation\n\t * of it.\n\t * @param method the target method to check the return type of\n\t * @param genericIfc the generic interface or superclass to resolve the type argument from\n\t * @return the resolved parameter type of the method return type, or {@code null}\n\t * if not resolvable or if the single argument is of type {@link WildcardType}.\n\t */\n\tpublic static Class<?> resolveReturnTypeArgument(Method method, Class<?> genericIfc) {\n\t\tAssert.notNull(method, \"method must not be null\");\n\t\tType returnType = method.getReturnType();\n\t\tType genericReturnType = method.getGenericReturnType();\n\t\tif (returnType.equals(genericIfc)) {\n\t\t\tif (genericReturnType instanceof ParameterizedType) {\n\t\t\t\tParameterizedType targetType = (ParameterizedType) genericReturnType;\n\t\t\t\tType[] actualTypeArguments = targetType.getActualTypeArguments();\n\t\t\t\tType typeArg = actualTypeArguments[0];\n\t\t\t\tif (!(typeArg instanceof WildcardType)) {\n\t\t\t\t\treturn (Class<?>) typeArg;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn resolveTypeArgument((Class<?>) returnType, genericIfc);\n\t}","id":39295,"modified_method":"/**\n\t * Resolve the single type argument of the given generic interface against the given\n\t * target method which is assumed to return the given interface or an implementation\n\t * of it.\n\t * @param method the target method to check the return type of\n\t * @param genericIfc the generic interface or superclass to resolve the type argument from\n\t * @return the resolved parameter type of the method return type, or {@code null}\n\t * if not resolvable or if the single argument is of type {@link WildcardType}.\n\t */\n\tpublic static Class<?> resolveReturnTypeArgument(Method method, Class<?> genericIfc) {\n\t\tAssert.notNull(method, \"method must not be null\");\n\t\tResolvableType resolvableType = ResolvableType.forMethodReturn(method).as(genericIfc);\n\t\tif (!resolvableType.hasGenerics() || resolvableType.getType() instanceof WildcardType) {\n\t\t\treturn null;\n\t\t}\n\t\treturn getSingleGeneric(resolvableType);\n\t}","commit_id":"595efe9aab884bab233c61278f00ef325446d268","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Resolve the type arguments of the given generic interface against the given\n\t * target class which is assumed to implement the generic interface and possibly\n\t * declare concrete types for its type variables.\n\t * @param clazz the target class to check against\n\t * @param genericIfc the generic interface or superclass to resolve the type argument from\n\t * @return the resolved type of each argument, with the array size matching the\n\t * number of actual type arguments, or {@code null} if not resolvable\n\t */\n\tpublic static Class[] resolveTypeArguments(Class<?> clazz, Class<?> genericIfc) {\n\t\treturn doResolveTypeArguments(clazz, clazz, genericIfc);\n\t}","id":39296,"modified_method":"/**\n\t * Resolve the type arguments of the given generic interface against the given\n\t * target class which is assumed to implement the generic interface and possibly\n\t * declare concrete types for its type variables.\n\t * @param clazz the target class to check against\n\t * @param genericIfc the generic interface or superclass to resolve the type argument from\n\t * @return the resolved type of each argument, with the array size matching the\n\t * number of actual type arguments, or {@code null} if not resolvable\n\t */\n\tpublic static Class[] resolveTypeArguments(Class<?> clazz, Class<?> genericIfc) {\n\t\tResolvableType type = ResolvableType.forClass(clazz).as(genericIfc);\n\t\tif(!type.hasGenerics()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn type.resolveGenerics();\n\t}","commit_id":"595efe9aab884bab233c61278f00ef325446d268","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Determine the target type for the given generic parameter type.\n\t * @param methodParam the method parameter specification\n\t * @param clazz the class to resolve type variables against\n\t * @return the corresponding generic parameter or return type\n\t */\n\tpublic static Class<?> resolveParameterType(MethodParameter methodParam, Class<?> clazz) {\n\t\tType genericType = getTargetType(methodParam);\n\t\tAssert.notNull(clazz, \"Class must not be null\");\n\t\tMap<TypeVariable, Type> typeVariableMap = getTypeVariableMap(clazz);\n\t\tType rawType = getRawType(genericType, typeVariableMap);\n\t\tClass<?> result = (rawType instanceof Class ? (Class) rawType : methodParam.getParameterType());\n\t\tmethodParam.setParameterType(result);\n\t\tmethodParam.typeVariableMap = typeVariableMap;\n\t\treturn result;\n\t}","id":39297,"modified_method":"/**\n\t * Determine the target type for the given generic parameter type.\n\t * @param methodParam the method parameter specification\n\t * @param clazz the class to resolve type variables against\n\t * @return the corresponding generic parameter or return type\n\t */\n\tpublic static Class<?> resolveParameterType(MethodParameter methodParam, Class<?> clazz) {\n\t\tAssert.notNull(methodParam, \"MethodParameter must not be null\");\n\t\tAssert.notNull(clazz, \"Class must not be null\");\n\t\tmethodParam.resolveClass = clazz;\n\t\tmethodParam.setParameterType(ResolvableType.forMethodParameter(methodParam, clazz).resolve());\n\t\treturn methodParam.getParameterType();\n\t}","commit_id":"595efe9aab884bab233c61278f00ef325446d268","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Resolve the specified generic type against the given TypeVariable map.\n\t * @param genericType the generic type to resolve\n\t * @param typeVariableMap the TypeVariable Map to resolved against\n\t * @return the type if it resolves to a Class, or {@code Object.class} otherwise\n\t */\n\tpublic static Class<?> resolveType(Type genericType, Map<TypeVariable, Type> typeVariableMap) {\n\t\tType resolvedType = getRawType(genericType, typeVariableMap);\n\t\tif (resolvedType instanceof GenericArrayType) {\n\t\t\tType componentType = ((GenericArrayType) resolvedType).getGenericComponentType();\n\t\t\tClass<?> componentClass = resolveType(componentType, typeVariableMap);\n\t\t\tresolvedType = Array.newInstance(componentClass, 0).getClass();\n\t\t}\n\t\treturn (resolvedType instanceof Class ? (Class) resolvedType : Object.class);\n\t}","id":39298,"modified_method":"/**\n\t * Resolve the specified generic type against the given TypeVariable map.\n\t * @param genericType the generic type to resolve\n\t * @param typeVariableMap the TypeVariable Map to resolved against\n\t * @return the type if it resolves to a Class, or {@code Object.class} otherwise\n\t * @deprecated as of Spring 4.0 in favor of {@link ResolvableType}\n\t */\n\t@Deprecated\n\tpublic static Class<?> resolveType(Type genericType, Map<TypeVariable, Type> typeVariableMap) {\n\t\tTypeVariableResolver variableResolver = new TypeVariableMapResolver(typeVariableMap);\n\t\tClass<?> resolved = ResolvableType.forType(genericType, variableResolver).resolve();\n\t\treturn (resolved == null ? Object.class : resolved);\n\t}","commit_id":"595efe9aab884bab233c61278f00ef325446d268","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Copy constructor, resulting in an independent MethodParameter object\n\t * based on the same metadata and cache state that the original object was in.\n\t * @param original the original MethodParameter object to copy from\n\t */\n\tpublic MethodParameter(MethodParameter original) {\n\t\tAssert.notNull(original, \"Original must not be null\");\n\t\tthis.method = original.method;\n\t\tthis.constructor = original.constructor;\n\t\tthis.parameterIndex = original.parameterIndex;\n\t\tthis.parameterType = original.parameterType;\n\t\tthis.genericParameterType = original.genericParameterType;\n\t\tthis.parameterAnnotations = original.parameterAnnotations;\n\t\tthis.parameterNameDiscoverer = original.parameterNameDiscoverer;\n\t\tthis.parameterName = original.parameterName;\n\t\tthis.nestingLevel = original.nestingLevel;\n\t\tthis.typeIndexesPerLevel = original.typeIndexesPerLevel;\n\t\tthis.typeVariableMap = original.typeVariableMap;\n\t\tthis.hash = original.hash;\n\t}","id":39299,"modified_method":"/**\n\t * Copy constructor, resulting in an independent MethodParameter object\n\t * based on the same metadata and cache state that the original object was in.\n\t * @param original the original MethodParameter object to copy from\n\t */\n\tpublic MethodParameter(MethodParameter original) {\n\t\tAssert.notNull(original, \"Original must not be null\");\n\t\tthis.method = original.method;\n\t\tthis.constructor = original.constructor;\n\t\tthis.parameterIndex = original.parameterIndex;\n\t\tthis.parameterType = original.parameterType;\n\t\tthis.genericParameterType = original.genericParameterType;\n\t\tthis.parameterAnnotations = original.parameterAnnotations;\n\t\tthis.parameterNameDiscoverer = original.parameterNameDiscoverer;\n\t\tthis.parameterName = original.parameterName;\n\t\tthis.nestingLevel = original.nestingLevel;\n\t\tthis.typeIndexesPerLevel = original.typeIndexesPerLevel;\n\t\tthis.resolveClass = original.resolveClass;\n\t\tthis.hash = original.hash;\n\t}","commit_id":"595efe9aab884bab233c61278f00ef325446d268","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"protected void featureCalltoJavaExpression(final XAbstractFeatureCall call, IAppendable b) {\n\t\tif (call instanceof XAssignment) {\n\t\t\txAssignmentToJavaExpression((XAssignment) call, b);\n\t\t\treturn;\n\t\t}\n\t\tboolean hasReceiver = appendReceiver(call, b);\n\t\tif (hasReceiver) {\n\t\t\tb.append(\".\");\n\t\t\tif (!call.getTypeArguments().isEmpty()) {\n\t\t\t\tb.append(\"<\");\n\t\t\t\tfor(int i = 0; i < call.getTypeArguments().size(); i++) {\n\t\t\t\t\tif (i != 0) {\n\t\t\t\t\t\tb.append(\", \");\n\t\t\t\t\t}\n\t\t\t\t\tJvmTypeReference typeArgument = call.getTypeArguments().get(i);\n\t\t\t\t\tserialize(typeArgument, call, b);\n\t\t\t\t}\n\t\t\t\tb.append(\">\");\n\t\t\t} else if (call.getFeature() instanceof JvmOperation) {\n\t\t\t\tfinal JvmOperation operation = (JvmOperation) call.getFeature();\n\t\t\t\tif (!operation.getTypeParameters().isEmpty()) {\n\t\t\t\t\tXExpression receiver = featureCallToJavaMapping.getActualReceiver(call);\n\t\t\t\t\tfinal JvmTypeReference receiverType = receiver != null\n\t\t\t\t\t\t? getTypeProvider().getType(receiver)\n\t\t\t\t\t\t: null;\n\t\t\t\t\tfinal JvmTypeReference expectedType = getTypeProvider().getExpectedType(call);\n\t\t\t\t\tfinal List<JvmTypeReference> argumentTypes = Lists.newArrayList();\n\t\t\t\t\tfor(XExpression argument: featureCallToJavaMapping.getActualArguments(call)) {\n\t\t\t\t\t\targumentTypes.add(getTypeProvider().getType(argument));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tITypeArgumentContext typeArgumentContext = getContextProvider().getTypeArgumentContext(\n\t\t\t\t\t\t\tnew TypeArgumentContextProvider.AbstractRequest() {\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic JvmFeature getFeature() {\n\t\t\t\t\t\t\t\t\treturn operation;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic JvmTypeParameterDeclarator getNearestDeclarator() {\n\t\t\t\t\t\t\t\t\tEObject context = call;\n\t\t\t\t\t\t\t\t\tJvmTypeParameterDeclarator result = null;\n\t\t\t\t\t\t\t\t\twhile(context != null && result == null) {\n\t\t\t\t\t\t\t\t\t\tif (context instanceof JvmTypeParameterDeclarator) {\n\t\t\t\t\t\t\t\t\t\t\tresult = (JvmTypeParameterDeclarator) context;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tJvmIdentifiableElement logicalContainer = contextProvider.getLogicalContainer(context);\n\t\t\t\t\t\t\t\t\t\t\tif (logicalContainer != null) {\n\t\t\t\t\t\t\t\t\t\t\t\tcontext = logicalContainer;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tcontext = context.eContainer();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic JvmTypeReference getDeclaredType() {\n\t\t\t\t\t\t\t\t\treturn operation.getReturnType();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic JvmTypeReference getReceiverType() {\n\t\t\t\t\t\t\t\t\treturn receiverType;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic JvmTypeReference getExpectedType() {\n\t\t\t\t\t\t\t\t\treturn expectedType;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic List<JvmTypeReference> getArgumentTypes() {\n\t\t\t\t\t\t\t\t\treturn argumentTypes;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic String toString() {\n\t\t\t\t\t\t\t\t\treturn \"FeatureCallCompiler.featureCalltoJavaExpression [call=\" + call + \"]\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tList<JvmTypeReference> resolvedTypeArguments = Lists.newArrayList();\n\t\t\t\t\tboolean containedUnresolved = false;\n\t\t\t\t\tfor(int i = 0; i < operation.getTypeParameters().size() && !containedUnresolved; i++) {\n\t\t\t\t\t\tJvmTypeParameter typeParameter = operation.getTypeParameters().get(i);\n\t\t\t\t\t\tJvmTypeReference typeArgument = typeArgumentContext.getBoundArgument(typeParameter);\n\t\t\t\t\t\tif (typeArgument != null) {\n\t\t\t\t\t\t\tif (isReferenceToForeignTypeParameter(typeArgument, call)) {\n\t\t\t\t\t\t\t\tcontainedUnresolved = true;\n\t\t\t\t\t\t\t} else if (typeArgument instanceof JvmWildcardTypeReference) {\n\t\t\t\t\t\t\t\tcontainedUnresolved = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttypeArgument = getPrimitives().asWrapperTypeIfPrimitive(typeArgument);\n\t\t\t\t\t\t\t\ttypeArgument = resolveMultiType(typeArgument);\n\t\t\t\t\t\t\t\tresolvedTypeArguments.add(typeArgument);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontainedUnresolved = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!containedUnresolved) {\n\t\t\t\t\t\tb.append(\"<\");\n\t\t\t\t\t\tfor(int i = 0; i < resolvedTypeArguments.size(); i++) {\n\t\t\t\t\t\t\tif (i != 0) {\n\t\t\t\t\t\t\t\tb.append(\", \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJvmTypeReference typeArgument = resolvedTypeArguments.get(i);\n\t\t\t\t\t\t\tserialize(typeArgument,call,b);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tb.append(\">\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tappendFeatureCall(call, b);\n\t}","id":39300,"modified_method":"protected void featureCalltoJavaExpression(final XAbstractFeatureCall call, IAppendable b) {\n\t\tif (call instanceof XAssignment) {\n\t\t\txAssignmentToJavaExpression((XAssignment) call, b);\n\t\t\treturn;\n\t\t}\n\t\tboolean hasReceiver = appendReceiver(call, b);\n\t\tif (hasReceiver) {\n\t\t\tb.append(\".\");\n\t\t\tif (!call.getTypeArguments().isEmpty()) {\n\t\t\t\tb.append(\"<\");\n\t\t\t\tfor(int i = 0; i < call.getTypeArguments().size(); i++) {\n\t\t\t\t\tif (i != 0) {\n\t\t\t\t\t\tb.append(\", \");\n\t\t\t\t\t}\n\t\t\t\t\tJvmTypeReference typeArgument = call.getTypeArguments().get(i);\n\t\t\t\t\tserialize(typeArgument, call, b);\n\t\t\t\t}\n\t\t\t\tb.append(\">\");\n\t\t\t} else if (call.getFeature() instanceof JvmExecutable) {\n\t\t\t\tfinal JvmExecutable executable = (JvmExecutable) call.getFeature();\n\t\t\t\tif (!executable.getTypeParameters().isEmpty()) {\n\t\t\t\t\tXExpression receiver = featureCallToJavaMapping.getActualReceiver(call);\n\t\t\t\t\tfinal JvmTypeReference receiverType = receiver != null\n\t\t\t\t\t\t? getTypeProvider().getType(receiver)\n\t\t\t\t\t\t: null;\n\t\t\t\t\tfinal JvmTypeReference expectedType = getTypeProvider().getExpectedType(call);\n\t\t\t\t\tfinal List<JvmTypeReference> argumentTypes = Lists.newArrayList();\n\t\t\t\t\tfor(XExpression argument: featureCallToJavaMapping.getActualArguments(call)) {\n\t\t\t\t\t\targumentTypes.add(getTypeProvider().getType(argument));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tITypeArgumentContext typeArgumentContext = getContextProvider().getTypeArgumentContext(\n\t\t\t\t\t\t\tnew TypeArgumentContextProvider.AbstractRequest() {\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic JvmFeature getFeature() {\n\t\t\t\t\t\t\t\t\treturn executable;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic JvmTypeParameterDeclarator getNearestDeclarator() {\n\t\t\t\t\t\t\t\t\tEObject context = call;\n\t\t\t\t\t\t\t\t\tJvmTypeParameterDeclarator result = null;\n\t\t\t\t\t\t\t\t\twhile(context != null && result == null) {\n\t\t\t\t\t\t\t\t\t\tif (context instanceof JvmTypeParameterDeclarator) {\n\t\t\t\t\t\t\t\t\t\t\tresult = (JvmTypeParameterDeclarator) context;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tJvmIdentifiableElement logicalContainer = contextProvider.getLogicalContainer(context);\n\t\t\t\t\t\t\t\t\t\t\tif (logicalContainer != null) {\n\t\t\t\t\t\t\t\t\t\t\t\tcontext = logicalContainer;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tcontext = context.eContainer();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic JvmTypeReference getDeclaredType() {\n\t\t\t\t\t\t\t\t\tif (executable instanceof JvmOperation)\n\t\t\t\t\t\t\t\t\t\treturn ((JvmOperation) executable).getReturnType();\n\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic JvmTypeReference getReceiverType() {\n\t\t\t\t\t\t\t\t\treturn receiverType;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic JvmTypeReference getExpectedType() {\n\t\t\t\t\t\t\t\t\treturn expectedType;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic List<JvmTypeReference> getArgumentTypes() {\n\t\t\t\t\t\t\t\t\treturn argumentTypes;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic String toString() {\n\t\t\t\t\t\t\t\t\treturn \"FeatureCallCompiler.featureCalltoJavaExpression [call=\" + call + \"]\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tList<JvmTypeReference> resolvedTypeArguments = Lists.newArrayList();\n\t\t\t\t\tboolean containedUnresolved = false;\n\t\t\t\t\tfor(int i = 0; i < executable.getTypeParameters().size() && !containedUnresolved; i++) {\n\t\t\t\t\t\tJvmTypeParameter typeParameter = executable.getTypeParameters().get(i);\n\t\t\t\t\t\tJvmTypeReference typeArgument = typeArgumentContext.getBoundArgument(typeParameter);\n\t\t\t\t\t\tif (typeArgument != null) {\n\t\t\t\t\t\t\tif (isReferenceToForeignTypeParameter(typeArgument, call)) {\n\t\t\t\t\t\t\t\tcontainedUnresolved = true;\n\t\t\t\t\t\t\t} else if (typeArgument instanceof JvmWildcardTypeReference) {\n\t\t\t\t\t\t\t\tcontainedUnresolved = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttypeArgument = getPrimitives().asWrapperTypeIfPrimitive(typeArgument);\n\t\t\t\t\t\t\t\ttypeArgument = resolveMultiType(typeArgument);\n\t\t\t\t\t\t\t\tresolvedTypeArguments.add(typeArgument);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontainedUnresolved = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!containedUnresolved) {\n\t\t\t\t\t\tb.append(\"<\");\n\t\t\t\t\t\tfor(int i = 0; i < resolvedTypeArguments.size(); i++) {\n\t\t\t\t\t\t\tif (i != 0) {\n\t\t\t\t\t\t\t\tb.append(\", \");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJvmTypeReference typeArgument = resolvedTypeArguments.get(i);\n\t\t\t\t\t\t\tserialize(typeArgument,call,b);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tb.append(\">\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tappendFeatureCall(call, b);\n\t}","commit_id":"b6253beb131a50400f6111e1f2a0103910ad0b9b","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void appendFeatureCall(XAbstractFeatureCall call, IAppendable b) {\n\t\tString name = featureNameProvider.getSimpleName(call.getFeature());\n\t\tb.append(name);\n\t\tif (call.getFeature() instanceof JvmOperation) {\n\t\t\tb.append(\"(\");\n\t\t\tList<XExpression> arguments = featureCallToJavaMapping.getActualArguments(call);\n\t\t\tappendArguments(arguments, (JvmExecutable)call.getFeature(), call, b);\n\t\t\tb.append(\")\");\n\t\t}\n\t}","id":39301,"modified_method":"protected void appendFeatureCall(XAbstractFeatureCall call, IAppendable b) {\n\t\tJvmIdentifiableElement feature = call.getFeature();\n\t\tString name;\n\t\tif (feature instanceof JvmConstructor) {\n\t\t\tJvmDeclaredType constructorContainer = ((JvmConstructor) feature).getDeclaringType();\n\t\t\tJvmIdentifiableElement logicalContainer = contextProvider.getNearestLogicalContainer(call);\n\t\t\tJvmDeclaredType contextType = ((JvmMember) logicalContainer).getDeclaringType();\n\t\t\tif (contextType == constructorContainer)\n\t\t\t\tname = \"this\";\n\t\t\telse\n\t\t\t\tname = \"super\";\t\n\t\t} else {\n\t\t\tname = featureNameProvider.getSimpleName(feature);\n\t\t}\n\t\tb.append(name);\n\t\tif (feature instanceof JvmExecutable) {\n\t\t\tb.append(\"(\");\n\t\t\tList<XExpression> arguments = featureCallToJavaMapping.getActualArguments(call);\n\t\t\tappendArguments(arguments, (JvmExecutable)feature, call, b);\n\t\t\tb.append(\")\");\n\t\t}\n\t}","commit_id":"b6253beb131a50400f6111e1f2a0103910ad0b9b","url":"https://github.com/eclipse/xtext"},{"original_method":"public XExpression getActualReceiver(XAbstractFeatureCall featureCall, JvmIdentifiableElement feature, XExpression implicitReceiver) {\n\t\tif (isStaticJavaFeature(feature)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (implicitReceiver!=null)\n\t\t\treturn implicitReceiver;\n\t\tfinal List<? extends XExpression> allArguments = featureCall.getExplicitArguments();\n\t\tif (allArguments.isEmpty())\n\t\t\treturn null;\n\t\treturn allArguments.get(0);\n\t}","id":39302,"modified_method":"public XExpression getActualReceiver(XAbstractFeatureCall featureCall, JvmIdentifiableElement feature, XExpression implicitReceiver) {\n\t\tif (isStaticJavaFeature(feature) || feature instanceof JvmConstructor) {\n\t\t\treturn null;\n\t\t}\n\t\tif (implicitReceiver!=null)\n\t\t\treturn implicitReceiver;\n\t\tfinal List<? extends XExpression> allArguments = featureCall.getExplicitArguments();\n\t\tif (allArguments.isEmpty())\n\t\t\treturn null;\n\t\treturn allArguments.get(0);\n\t}","commit_id":"b6253beb131a50400f6111e1f2a0103910ad0b9b","url":"https://github.com/eclipse/xtext"},{"original_method":"protected CharSequence _generateMember(final JvmConstructor it, final ImportManager importManager) {\n    CharSequence _xifexpression = null;\n    boolean _operator_or = false;\n    EList<JvmFormalParameter> _parameters = it.getParameters();\n    boolean _isEmpty = _parameters.isEmpty();\n    boolean _operator_not = BooleanExtensions.operator_not(_isEmpty);\n    if (_operator_not) {\n      _operator_or = true;\n    } else {\n      XExpression _associatedExpression = this._iLogicalContainerProvider.getAssociatedExpression(it);\n      boolean _operator_notEquals = ObjectExtensions.operator_notEquals(_associatedExpression, null);\n      _operator_or = BooleanExtensions.operator_or(_operator_not, _operator_notEquals);\n    }\n    if (_operator_or) {\n      StringConcatenation _builder = new StringConcatenation();\n      StringConcatenation _generateJavaDoc = this.generateJavaDoc(it);\n      _builder.append(_generateJavaDoc, \"\");\n      _builder.newLineIfNotEmpty();\n      {\n        EList<JvmAnnotationReference> _annotations = it.getAnnotations();\n        boolean _isEmpty_1 = _annotations.isEmpty();\n        boolean _operator_not_1 = BooleanExtensions.operator_not(_isEmpty_1);\n        if (_operator_not_1) {\n          EList<JvmAnnotationReference> _annotations_1 = it.getAnnotations();\n          CharSequence _generateAnnotations = this.generateAnnotations(_annotations_1, importManager);\n          _builder.append(_generateAnnotations, \"\");\n        }\n      }\n      _builder.newLineIfNotEmpty();\n      CharSequence _generateModifier = this.generateModifier(it);\n      _builder.append(_generateModifier, \"\");\n      _builder.append(\" \");\n      String _simpleName = it.getSimpleName();\n      _builder.append(_simpleName, \"\");\n      _builder.append(\"(\");\n      EList<JvmFormalParameter> _parameters_1 = it.getParameters();\n      final Function1<JvmFormalParameter,String> _function = new Function1<JvmFormalParameter,String>() {\n          public String apply(final JvmFormalParameter p) {\n            String _generateParameter = JvmModelGenerator.this.generateParameter(p, importManager);\n            return _generateParameter;\n          }\n        };\n      List<String> _map = ListExtensions.<JvmFormalParameter, String>map(_parameters_1, _function);\n      String _join = IterableExtensions.join(_map, \", \");\n      _builder.append(_join, \"\");\n      _builder.append(\")\");\n      CharSequence _generateThrowsClause = this.generateThrowsClause(it, importManager);\n      _builder.append(_generateThrowsClause, \"\");\n      _builder.append(\" {\");\n      _builder.newLineIfNotEmpty();\n      _builder.append(\"  \");\n      CharSequence _generateBody = this.generateBody(it, importManager);\n      _builder.append(_generateBody, \"  \");\n      _builder.newLineIfNotEmpty();\n      _builder.append(\"}\");\n      _builder.newLine();\n      _xifexpression = _builder;\n    } else {\n      _xifexpression = null;\n    }\n    return _xifexpression;\n  }","id":39303,"modified_method":"protected CharSequence _generateMember(final JvmConstructor it, final ImportManager importManager) {\n    CharSequence _xifexpression = null;\n    boolean _operator_or = false;\n    EList<JvmFormalParameter> _parameters = it.getParameters();\n    boolean _isEmpty = _parameters.isEmpty();\n    boolean _operator_not = BooleanExtensions.operator_not(_isEmpty);\n    if (_operator_not) {\n      _operator_or = true;\n    } else {\n      XExpression _associatedExpression = this._iLogicalContainerProvider.getAssociatedExpression(it);\n      boolean _operator_notEquals = ObjectExtensions.operator_notEquals(_associatedExpression, null);\n      _operator_or = BooleanExtensions.operator_or(_operator_not, _operator_notEquals);\n    }\n    if (_operator_or) {\n      StringConcatenation _builder = new StringConcatenation();\n      StringConcatenation _generateJavaDoc = this.generateJavaDoc(it);\n      _builder.append(_generateJavaDoc, \"\");\n      _builder.newLineIfNotEmpty();\n      {\n        EList<JvmAnnotationReference> _annotations = it.getAnnotations();\n        boolean _isEmpty_1 = _annotations.isEmpty();\n        boolean _operator_not_1 = BooleanExtensions.operator_not(_isEmpty_1);\n        if (_operator_not_1) {\n          EList<JvmAnnotationReference> _annotations_1 = it.getAnnotations();\n          CharSequence _generateAnnotations = this.generateAnnotations(_annotations_1, importManager);\n          _builder.append(_generateAnnotations, \"\");\n        }\n      }\n      _builder.newLineIfNotEmpty();\n      CharSequence _generateModifier = this.generateModifier(it);\n      _builder.append(_generateModifier, \"\");\n      String _simpleName = it.getSimpleName();\n      _builder.append(_simpleName, \"\");\n      _builder.append(\"(\");\n      EList<JvmFormalParameter> _parameters_1 = it.getParameters();\n      final Function1<JvmFormalParameter,String> _function = new Function1<JvmFormalParameter,String>() {\n          public String apply(final JvmFormalParameter p) {\n            String _generateParameter = JvmModelGenerator.this.generateParameter(p, importManager);\n            return _generateParameter;\n          }\n        };\n      List<String> _map = ListExtensions.<JvmFormalParameter, String>map(_parameters_1, _function);\n      String _join = IterableExtensions.join(_map, \", \");\n      _builder.append(_join, \"\");\n      _builder.append(\")\");\n      CharSequence _generateThrowsClause = this.generateThrowsClause(it, importManager);\n      _builder.append(_generateThrowsClause, \"\");\n      _builder.append(\" {\");\n      _builder.newLineIfNotEmpty();\n      _builder.append(\"  \");\n      CharSequence _generateBody = this.generateBody(it, importManager);\n      _builder.append(_generateBody, \"  \");\n      _builder.newLineIfNotEmpty();\n      _builder.append(\"}\");\n      _builder.newLine();\n      _xifexpression = _builder;\n    } else {\n      _xifexpression = null;\n    }\n    return _xifexpression;\n  }","commit_id":"b6253beb131a50400f6111e1f2a0103910ad0b9b","url":"https://github.com/eclipse/xtext"},{"original_method":"public CharSequence generateBody(final JvmExecutable op, final ImportManager importManager) {\n      EList<Adapter> _eAdapters = op.eAdapters();\n      Iterable<CompilationStrategyAdapter> _filter = IterableExtensions.<CompilationStrategyAdapter>filter(_eAdapters, org.eclipse.xtext.xbase.compiler.CompilationStrategyAdapter.class);\n      CompilationStrategyAdapter _head = IterableExtensions.<CompilationStrategyAdapter>head(_filter);\n      final CompilationStrategyAdapter adapter = _head;\n      boolean _operator_notEquals = ObjectExtensions.operator_notEquals(adapter, null);\n      if (_operator_notEquals) {\n        Function1<ImportManager,? extends CharSequence> _compilationStrategy = adapter.getCompilationStrategy();\n        CharSequence _apply = _compilationStrategy.apply(importManager);\n        return _apply;\n      } else {\n        {\n          XExpression _associatedExpression = this._iLogicalContainerProvider.getAssociatedExpression(op);\n          final XExpression expression = _associatedExpression;\n          boolean _operator_notEquals_1 = ObjectExtensions.operator_notEquals(expression, null);\n          if (_operator_notEquals_1) {\n            {\n              StringBuilderBasedAppendable _createAppendable = this.createAppendable(op, importManager);\n              final StringBuilderBasedAppendable appendable = _createAppendable;\n              EList<JvmFormalParameter> _parameters = op.getParameters();\n              for (final JvmFormalParameter p : _parameters) {\n                String _simpleName = p.getSimpleName();\n                appendable.declareVariable(p, _simpleName);\n              }\n              JvmTypeReference _switchResult = null;\n              final JvmExecutable op_1 = op;\n              boolean matched = false;\n              if (!matched) {\n                if (op_1 instanceof JvmOperation) {\n                  final JvmOperation op_2 = (JvmOperation) op_1;\n                  matched=true;\n                  JvmTypeReference _returnType = op_2.getReturnType();\n                  _switchResult = _returnType;\n                }\n              }\n              if (!matched) {\n                _switchResult = null;\n              }\n              final JvmTypeReference returnType = _switchResult;\n              EList<JvmTypeReference> _exceptions = op.getExceptions();\n              Set<JvmTypeReference> _set = IterableExtensions.<JvmTypeReference>toSet(_exceptions);\n              this.compiler.compile(expression, appendable, returnType, _set);\n              String _string = appendable.toString();\n              String _removeSurroundingCurlies = this.removeSurroundingCurlies(_string);\n              return _removeSurroundingCurlies;\n            }\n          } else {\n            StringConcatenation _builder = new StringConcatenation();\n            _builder.append(\"throw new UnsupportedOperationException(\\\"\");\n            String _simpleName_1 = op.getSimpleName();\n            _builder.append(_simpleName_1, \"\");\n            _builder.append(\" is not implemented\\\");\");\n            return _builder;\n          }\n        }\n      }\n  }","id":39304,"modified_method":"public CharSequence generateBody(final JvmExecutable op, final ImportManager importManager) {\n      EList<Adapter> _eAdapters = op.eAdapters();\n      Iterable<CompilationStrategyAdapter> _filter = IterableExtensions.<CompilationStrategyAdapter>filter(_eAdapters, org.eclipse.xtext.xbase.compiler.CompilationStrategyAdapter.class);\n      CompilationStrategyAdapter _head = IterableExtensions.<CompilationStrategyAdapter>head(_filter);\n      final CompilationStrategyAdapter adapter = _head;\n      boolean _operator_notEquals = ObjectExtensions.operator_notEquals(adapter, null);\n      if (_operator_notEquals) {\n        Function1<ImportManager,? extends CharSequence> _compilationStrategy = adapter.getCompilationStrategy();\n        CharSequence _apply = _compilationStrategy.apply(importManager);\n        return _apply;\n      } else {\n        {\n          XExpression _associatedExpression = this._iLogicalContainerProvider.getAssociatedExpression(op);\n          final XExpression expression = _associatedExpression;\n          boolean _operator_notEquals_1 = ObjectExtensions.operator_notEquals(expression, null);\n          if (_operator_notEquals_1) {\n            {\n              StringBuilderBasedAppendable _createAppendable = this.createAppendable(op, importManager);\n              final StringBuilderBasedAppendable appendable = _createAppendable;\n              EList<JvmFormalParameter> _parameters = op.getParameters();\n              for (final JvmFormalParameter p : _parameters) {\n                String _simpleName = p.getSimpleName();\n                appendable.declareVariable(p, _simpleName);\n              }\n              JvmTypeReference _switchResult = null;\n              final JvmExecutable op_1 = op;\n              boolean matched = false;\n              if (!matched) {\n                if (op_1 instanceof JvmOperation) {\n                  final JvmOperation op_2 = (JvmOperation) op_1;\n                  matched=true;\n                  JvmTypeReference _returnType = op_2.getReturnType();\n                  _switchResult = _returnType;\n                }\n              }\n              if (!matched) {\n                if (op_1 instanceof JvmConstructor) {\n                  final JvmConstructor op_3 = (JvmConstructor) op_1;\n                  matched=true;\n                  JvmTypeReference _typeForName = this._typeReferences.getTypeForName(Void.TYPE, op_3);\n                  _switchResult = _typeForName;\n                }\n              }\n              if (!matched) {\n                _switchResult = null;\n              }\n              final JvmTypeReference returnType = _switchResult;\n              EList<JvmTypeReference> _exceptions = op.getExceptions();\n              Set<JvmTypeReference> _set = IterableExtensions.<JvmTypeReference>toSet(_exceptions);\n              this.compiler.compile(expression, appendable, returnType, _set);\n              String _string = appendable.toString();\n              String _removeSurroundingCurlies = this.removeSurroundingCurlies(_string);\n              return _removeSurroundingCurlies;\n            }\n          } else {\n            StringConcatenation _builder = new StringConcatenation();\n            _builder.append(\"throw new UnsupportedOperationException(\\\"\");\n            String _simpleName_1 = op.getSimpleName();\n            _builder.append(_simpleName_1, \"\");\n            _builder.append(\" is not implemented\\\");\");\n            return _builder;\n          }\n        }\n      }\n  }","commit_id":"b6253beb131a50400f6111e1f2a0103910ad0b9b","url":"https://github.com/eclipse/xtext"},{"original_method":"public String resolveSignatureInHtml(XAbstractFeatureCall call, IJavaElement javaElement, String html) {\n\t\t// Compute the signature to replace only here\n\t\tString signature = getJavaSignature(javaElement);\n\t\tString resolvedSignature = replaceGenerics(call, signature);\n\t\treturn html.replace(signature, resolvedSignature);\n\t}","id":39305,"modified_method":"public String resolveSignatureInHtml(XExpression call, IJavaElement javaElement, String html) {\n\t\t// Compute the signature to replace only here\n\t\tString signature = getJavaSignature(javaElement);\n\t\tString resolvedSignature = replaceGenerics(call, signature);\n\t\treturn html.replace(signature, resolvedSignature);\n\t}","commit_id":"d9a5d0eb6fff4e7ff0261411bd0872363224b084","url":"https://github.com/eclipse/xtext"},{"original_method":"public String replaceGenerics(XAbstractFeatureCall featureCall, String input) {\n\t\tString output = input;\n\t\tif (featureCall != null && featureCall.getFeature() instanceof JvmExecutable) {\n\t\t\tfinal JvmExecutable executable = (JvmExecutable) featureCall.getFeature();\n\t\t\tfor (Pair<JvmTypeParameter, JvmTypeReference> pair : getBoundTypePairs(featureCall, executable)) {\n\t\t\t\tJvmTypeParameter unresolvedType = pair.getFirst();\n\t\t\t\tJvmTypeReference resolvedType = pair.getSecond();\n\t\t\t\tif (unresolvedType != null && resolvedType != null) {\n\t\t\t\t\tString toBeReplaced = unresolvedType.getSimpleName();\n\t\t\t\t\tString with = resolvedType.getSimpleName();\n\t\t\t\t\toutput = output.replaceAll(\"\\\\b\" + Pattern.quote(toBeReplaced) + \"\\\\b\", with);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn output;\n\t}","id":39306,"modified_method":"public String replaceGenerics(XExpression call, String input) {\n\t\tString output = input;\n\t\tif (call != null) {\n\t\t\tJvmExecutable executable = null;\n\t\t\tif (call instanceof XAbstractFeatureCall) {\n\t\t\t\tXAbstractFeatureCall featureCall = (XAbstractFeatureCall) call;\n\t\t\t\tif (featureCall.getFeature() instanceof JvmExecutable)\n\t\t\t\t\texecutable = (JvmExecutable) featureCall.getFeature();\n\t\t\t}\n\t\t\tif (call instanceof XConstructorCall) {\n\t\t\t\tXConstructorCall constructorCall = (XConstructorCall) call;\n\t\t\t\texecutable = constructorCall.getConstructor();\n\t\t\t}\n\t\t\tif (executable != null)\n\t\t\t\tfor (Pair<JvmTypeParameter, JvmTypeReference> pair : getBoundTypePairs(call, executable)) {\n\t\t\t\t\tJvmTypeParameter unresolvedType = pair.getFirst();\n\t\t\t\t\tJvmTypeReference resolvedType = pair.getSecond();\n\t\t\t\t\tif (unresolvedType != null && resolvedType != null) {\n\t\t\t\t\t\tString toBeReplaced = unresolvedType.getSimpleName();\n\t\t\t\t\t\tString with = resolvedType.getSimpleName();\n\t\t\t\t\t\toutput = output.replaceAll(\"\\\\b\" + Pattern.quote(toBeReplaced) + \"\\\\b\", with);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t}\n\t\treturn output;\n\t}","commit_id":"d9a5d0eb6fff4e7ff0261411bd0872363224b084","url":"https://github.com/eclipse/xtext"},{"original_method":"protected List<Pair<JvmTypeParameter, JvmTypeReference>> getBoundTypePairs(final XAbstractFeatureCall featureCall,\n\t\t\tfinal JvmExecutable executable) {\n\t\tITypeArgumentContext typeArgumentContext = typeArgumentContextProvider\n\t\t\t\t.getTypeArgumentContext(featureCallRequestProvider.get(featureCall));\n\t\tList<Pair<JvmTypeParameter, JvmTypeReference>> pairs = Lists.newArrayList();\n\t\tfor (JvmTypeParameter jvmTypeParameter : executable.getTypeParameters()) {\n\t\t\tpairs.add(Tuples.create(jvmTypeParameter, typeArgumentContext.getBoundArgument(jvmTypeParameter)));\n\t\t}\n\t\tJvmTypeParameterDeclarator nearestDeclarator = EcoreUtil2.getContainerOfType(executable, JvmTypeParameterDeclarator.class);\n\t\tif(nearestDeclarator != null)\n\t\t\tfor(JvmTypeParameter jvmTypeParameter : nearestDeclarator.getTypeParameters()){\n\t\t\t\tpairs.add(Tuples.create(jvmTypeParameter, typeArgumentContext.getBoundArgument(jvmTypeParameter)));\n\t\t\t}\n\t\treturn pairs;\n\t}","id":39307,"modified_method":"protected List<Pair<JvmTypeParameter, JvmTypeReference>> getBoundTypePairs(final XExpression call,\n\t\t\tfinal JvmExecutable executable) {\n\t\tITypeArgumentContext typeArgumentContext = null;\n\t\tif (call instanceof XAbstractFeatureCall) {\n\t\t\ttypeArgumentContext = typeArgumentContextProvider.getTypeArgumentContext(featureCallRequestProvider\n\t\t\t\t\t.get((XAbstractFeatureCall) call));\n\t\t} else if (call instanceof XConstructorCall) {\n\t\t\tXConstructorCall constructorCall = (XConstructorCall) call;\n\t\t\ttypeArgumentContext = typeProvider\n\t\t\t\t\t.getTypeArgumentContext(constructorCall, constructorCall.getConstructor());\n\t\t}\n\t\tList<Pair<JvmTypeParameter, JvmTypeReference>> pairs = Lists.newArrayList();\n\t\tif (typeArgumentContext != null) {\n\n\t\t\tfor (JvmTypeParameter jvmTypeParameter : executable.getTypeParameters()) {\n\t\t\t\tpairs.add(Tuples.create(jvmTypeParameter, typeArgumentContext.getBoundArgument(jvmTypeParameter)));\n\t\t\t}\n\t\t\tJvmTypeParameterDeclarator nearestDeclarator = EcoreUtil2.getContainerOfType(executable.eContainer(),\n\t\t\t\t\tJvmTypeParameterDeclarator.class);\n\t\t\tif (nearestDeclarator != null)\n\t\t\t\tfor (JvmTypeParameter jvmTypeParameter : nearestDeclarator.getTypeParameters()) {\n\t\t\t\t\tpairs.add(Tuples.create(jvmTypeParameter, typeArgumentContext.getBoundArgument(jvmTypeParameter)));\n\t\t\t\t}\n\t\t}\n\t\treturn pairs;\n\t}","commit_id":"d9a5d0eb6fff4e7ff0261411bd0872363224b084","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected Pair<EObject, IRegion> getXtextElementAt(XtextResource resource, int offset) {\n\t\tPair<EObject, IRegion> original = super.getXtextElementAt(resource, offset);\n\t\tEObject object = eObjectAtOffsetHelper.resolveContainedElementAt(resource, offset);\n\t\tif (object != null && object instanceof XAbstractFeatureCall) {\n\t\t\tEObject feature = ((XAbstractFeatureCall) object).getFeature();\n\t\t\tif (feature instanceof JvmOperation)\n\t\t\t\tif (original != null)\n\t\t\t\t\treturn Tuples.create(object, original.getSecond());\n\t\t}\n\t\treturn original;\n\t}","id":39308,"modified_method":"@Override\n\tprotected Pair<EObject, IRegion> getXtextElementAt(XtextResource resource, int offset) {\n\t\tPair<EObject, IRegion> original = super.getXtextElementAt(resource, offset);\n\t\tEObject object = eObjectAtOffsetHelper.resolveContainedElementAt(resource, offset);\n\t\tif (object != null)\n\t\t\tif((object instanceof XAbstractFeatureCall && ((XAbstractFeatureCall) object).getFeature() instanceof JvmExecutable) || object instanceof XConstructorCall)\n\t\t\t\t\tif (original != null)\n\t\t\t\t\t\treturn Tuples.create(object, original.getSecond());\n\t\treturn original;\n\t}","commit_id":"d9a5d0eb6fff4e7ff0261411bd0872363224b084","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * @since 2.3\n\t */\n\tprotected String computeSignature(EObject call, EObject o) {\n\t\tString imageTag = hoverSignatureProvider.getImageTag(o);\n\t\tString signature = hoverSignatureProvider.getSignature(o);\n\t\tif (call != null && call instanceof XAbstractFeatureCall)\n\t\t\tsignature = hoverGenericsResolver.replaceGenerics((XAbstractFeatureCall) call,\n\t\t\t\t\thoverSignatureProvider.getSignature(o));\n\t\tif (imageTag != null && signature != null) {\n\t\t\treturn \"<b>\" + imageTag + HTMLPrinter.convertToHTMLContent(signature) + \"<\/b>\";\n\t\t}\n\t\treturn \"\";\n\t}","id":39309,"modified_method":"/**\n\t * @since 2.3\n\t */\n\tprotected String computeSignature(EObject call, EObject o) {\n\t\tString imageTag = hoverSignatureProvider.getImageTag(o);\n\t\tString signature = hoverSignatureProvider.getSignature(o);\n\t\tif (call != null && (call instanceof XAbstractFeatureCall || call instanceof XConstructorCall))\n\t\t\tsignature = hoverGenericsResolver.replaceGenerics((XExpression) call,\n\t\t\t\t\thoverSignatureProvider.getSignature(o));\n\t\tif (imageTag != null && signature != null) {\n\t\t\treturn \"<b>\" + imageTag + HTMLPrinter.convertToHTMLContent(signature) + \"<\/b>\";\n\t\t}\n\t\treturn \"\";\n\t}","commit_id":"d9a5d0eb6fff4e7ff0261411bd0872363224b084","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * @since 2.3\n\t */\n\tprotected String getHoverInfoAsHtml(EObject call, EObject objectToView, IJavaElement javaElement,\n\t\t\tIRegion hoverRegion) {\n\t\tif (objectToView instanceof JvmIdentifiableElement && associations.getSourceElements(objectToView).isEmpty()) {\n\t\t\t// Let the java infrastructure do the job\n\t\t\tif (javaElement != null) {\n\t\t\t\tjavadocHover.setJavaElement(javaElement);\n\t\t\t\tJavadocBrowserInformationControlInput hoverInfo2 = (JavadocBrowserInformationControlInput) javadocHover\n\t\t\t\t\t\t.getHoverInfo2(null, hoverRegion);\n\t\t\t\tString html = hoverInfo2.getHtml();\n\t\t\t\tif (call != null && call instanceof XAbstractFeatureCall)\n\t\t\t\t\treturn hoverGenericsResolver.resolveSignatureInHtml((XAbstractFeatureCall) call, javaElement, html);\n\t\t\t\telse\n\t\t\t\t\treturn html;\n\t\t\t}\n\t\t}\n\t\tStringBuffer buffer = new StringBuffer();\n\t\tbuffer.append(computeSignature(call, objectToView));\n\t\tString documentation = getDocumentation(objectToView);\n\t\tif (documentation != null && documentation.length() > 0) {\n\t\t\tbuffer.append(\"<p>\");\n\t\t\tbuffer.append(documentation);\n\t\t\tbuffer.append(\"<\/p>\");\n\t\t}\n\t\treturn buffer.toString();\n\t}","id":39310,"modified_method":"/**\n\t * @since 2.3\n\t */\n\tprotected String getHoverInfoAsHtml(EObject call, EObject objectToView, IJavaElement javaElement,\n\t\t\tIRegion hoverRegion) {\n\t\tif (objectToView instanceof JvmIdentifiableElement && associations.getSourceElements(objectToView).isEmpty()) {\n\t\t\t// Let the java infrastructure do the job\n\t\t\tif (javaElement != null) {\n\t\t\t\tjavadocHover.setJavaElement(javaElement);\n\t\t\t\tJavadocBrowserInformationControlInput hoverInfo2 = (JavadocBrowserInformationControlInput) javadocHover\n\t\t\t\t\t\t.getHoverInfo2(null, hoverRegion);\n\t\t\t\tString html = hoverInfo2.getHtml();\n\t\t\t\tif (call != null && (call instanceof XAbstractFeatureCall || call instanceof XConstructorCall))\n\t\t\t\t\treturn hoverGenericsResolver.resolveSignatureInHtml((XExpression) call, javaElement, html);\n\t\t\t\telse\n\t\t\t\t\treturn html;\n\t\t\t}\n\t\t}\n\t\tStringBuffer buffer = new StringBuffer();\n\t\tbuffer.append(computeSignature(call, objectToView));\n\t\tString documentation = getDocumentation(objectToView);\n\t\tif (documentation != null && documentation.length() > 0) {\n\t\t\tbuffer.append(\"<p>\");\n\t\t\tbuffer.append(documentation);\n\t\t\tbuffer.append(\"<\/p>\");\n\t\t}\n\t\treturn buffer.toString();\n\t}","commit_id":"d9a5d0eb6fff4e7ff0261411bd0872363224b084","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * @since 2.3\n\t */\n\tprotected EObject getObjectToView(EObject object) {\n\t\tif (object instanceof XAbstractFeatureCall) {\n\t\t\treturn ((XAbstractFeatureCall) object).getFeature();\n\t\t}\n\t\treturn object;\n\t}","id":39311,"modified_method":"/**\n\t * @since 2.3\n\t */\n\tprotected EObject getObjectToView(EObject object) {\n\t\tif (object instanceof XAbstractFeatureCall) {\n\t\t\treturn ((XAbstractFeatureCall) object).getFeature();\n\t\t} else if (object instanceof XConstructorCall)\n\t\t\treturn ((XConstructorCall) object).getConstructor();\n\t\treturn object;\n\t}","commit_id":"d9a5d0eb6fff4e7ff0261411bd0872363224b084","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testResolveCrossReference() throws Exception {\n\t\tString model = \"class Foo extends Object { def Foo foo() { hashCode(); this }}\";\n\t\tXtendFile file = file(model);\n\t\tXtextResource resource = (XtextResource) file.eResource();\n\t\tEObject fooReference = eObjectAtOffsetHelper.resolveCrossReferencedElementAt(resource, model.lastIndexOf(\"Foo\"));\n\t\tassertTrue(fooReference instanceof XtendClass);\n\t\tassertEquals(file.getXtendClass(), fooReference);\n\t\tEObject hashCodeReference = eObjectAtOffsetHelper.resolveCrossReferencedElementAt(resource, model.indexOf(\"hashCode\"));\n\t\tassertTrue(hashCodeReference instanceof JvmOperation);\n\t}","id":39312,"modified_method":"@Test public void testResolveCrossReference() throws Exception {\n\t\tString model = \"class Foo extends Object { def Foo foo() { hashCode(); this }}\";\n\t\tXtendFile file = file(model);\n\t\tXtextResource resource = (XtextResource) file.eResource();\n\t\tEObject fooReference = eObjectAtOffsetHelper.resolveCrossReferencedElementAt(resource, model.lastIndexOf(\"Foo\"));\n\t\tassertTrue(fooReference instanceof JvmGenericType);\n\t\tassertEquals(file.getXtendClass(), associations.getPrimarySourceElement(fooReference));\n\t\tEObject hashCodeReference = eObjectAtOffsetHelper.resolveCrossReferencedElementAt(resource, model.indexOf(\"hashCode\"));\n\t\tassertTrue(hashCodeReference instanceof JvmOperation);\n\t}","commit_id":"2dca3edb3545c62e5296b0b6079f730141a97f95","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test public void testResolveElement() throws Exception {\n\t\tString model = \"class Foo extends Object { def Foo foo() { hashCode(); this }}\";\n\t\tXtendFile file = file(model);\n\t\tXtextResource resource = (XtextResource) file.eResource();\n\t\tEObject fooDeclaration = eObjectAtOffsetHelper.resolveElementAt(resource, model.indexOf(\"Foo\"));\n\t\tassertTrue(fooDeclaration instanceof XtendClass);\n\t\tassertEquals(file.getXtendClass(), fooDeclaration);\n\t\tEObject fooReference = eObjectAtOffsetHelper.resolveElementAt(resource, model.lastIndexOf(\"Foo\"));\n\t\tassertTrue(fooReference instanceof XtendClass);\n\t\tassertEquals(file.getXtendClass(), fooReference);\n\t\tEObject hashCodeReference = eObjectAtOffsetHelper.resolveElementAt(resource, model.indexOf(\"hashCode\"));\n\t\tassertTrue(hashCodeReference instanceof JvmOperation);\n\t}","id":39313,"modified_method":"@Test public void testResolveElement() throws Exception {\n\t\tString model = \"class Foo extends Object { def Foo foo() { hashCode(); this }}\";\n\t\tXtendFile file = file(model);\n\t\tXtextResource resource = (XtextResource) file.eResource();\n\t\tEObject fooDeclaration = eObjectAtOffsetHelper.resolveElementAt(resource, model.indexOf(\"Foo\"));\n\t\tassertTrue(fooDeclaration instanceof XtendClass);\n\t\tassertEquals(file.getXtendClass(), fooDeclaration);\n\t\tEObject fooReference = eObjectAtOffsetHelper.resolveElementAt(resource, model.lastIndexOf(\"Foo\"));\n\t\tassertTrue(fooReference instanceof JvmGenericType);\n\t\tassertEquals(file.getXtendClass(), associations.getPrimarySourceElement(fooReference));\n\t\tEObject hashCodeReference = eObjectAtOffsetHelper.resolveElementAt(resource, model.indexOf(\"hashCode\"));\n\t\tassertTrue(hashCodeReference instanceof JvmOperation);\n\t}","commit_id":"2dca3edb3545c62e5296b0b6079f730141a97f95","url":"https://github.com/eclipse/xtext"},{"original_method":"private EObject getObjectToView(EObject object) {\n\t\tif (object instanceof XAbstractFeatureCall) {\n\t\t\tEObject feature = ((XAbstractFeatureCall) object).getFeature();\n\t\t\tif (feature instanceof JvmOperation) {\n\t\t\t\tXtendFunction xtendFunction = associations.getXtendFunction((JvmOperation) feature);\n\t\t\t\tif (xtendFunction != null)\n\t\t\t\t\treturn xtendFunction;\n\t\t\t\telse\n\t\t\t\t\treturn feature;\n\t\t\t}\n\t\t}\n\t\treturn object;\n\t}","id":39314,"modified_method":"private EObject getObjectToView(EObject object) {\n\t\tif (object instanceof XAbstractFeatureCall) {\n\t\t\treturn ((XAbstractFeatureCall) object).getFeature();\n\t\t}\n\t\treturn object;\n\t}","commit_id":"2dca3edb3545c62e5296b0b6079f730141a97f95","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected XtextBrowserInformationControlInput getHoverInfo(EObject element, IRegion hoverRegion,\n\t\t\tXtextBrowserInformationControlInput previous) {\n\t\tEObject objectToView = getObjectToView(element);\n\t\tPair<String, String> prefixAndSuffixPair = xtendHoverSerializer.computePreAndSuffix(element);\n\t\tString unsugaredExpression = xtendHoverSerializer.computeUnsugaredExpression(element);\n\t\t\n\t\tif (objectToView instanceof JvmIdentifiableElement) {\n\t\t\tSet<EObject> sourceElements = associations.getSourceElements(objectToView);\n\t\t\tif(sourceElements.size() > 0)\n\t\t\t\tobjectToView = Lists.newArrayList(sourceElements).get(0);\n\t\t\telse {\n\t\t\t\tIJavaElement javaElement = javaElementFinder.findElementFor((JvmIdentifiableElement) objectToView);\n\t\t\t\tif (javaElement != null) {\n\t\t\t\t\tjavadocHover.setJavaElement(javaElement);\n\t\t\t\t\tJavadocBrowserInformationControlInput hoverInfo2 = (JavadocBrowserInformationControlInput) javadocHover\n\t\t\t\t\t\t\t.getHoverInfo2(null, hoverRegion);\n\t\t\t\t\treturn new XtendInformationControlInput(previous, objectToView, javaElement, hoverInfo2.getHtml(),\n\t\t\t\t\t\t\tlabelProvider, prefixAndSuffixPair.getFirst(), unsugaredExpression,\n\t\t\t\t\t\t\tprefixAndSuffixPair.getSecond());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tString html = getHoverInfoAsHtml(objectToView);\n\t\tif (html != null) {\n\t\t\tStringBuffer buffer = new StringBuffer(html);\n\t\t\tHTMLPrinter.insertPageProlog(buffer, 0, getStyleSheet());\n\t\t\tHTMLPrinter.addPageEpilog(buffer);\n\t\t\thtml = buffer.toString();\n\t\t\treturn new XtendInformationControlInput(previous, objectToView, html, labelProvider,\n\t\t\t\t\tprefixAndSuffixPair.getFirst(), unsugaredExpression, prefixAndSuffixPair.getSecond());\n\t\t}\n\n\t\treturn null;\n\t}","id":39315,"modified_method":"@Override\n\tprotected XtextBrowserInformationControlInput getHoverInfo(EObject element, IRegion hoverRegion,\n\t\t\tXtextBrowserInformationControlInput previous) {\n\t\tEObject objectToView = getObjectToView(element);\n\t\tPair<String, String> prefixAndSuffixPair = xtendHoverSerializer.computePreAndSuffix(element);\n\t\tString unsugaredExpression = xtendHoverSerializer.computeUnsugaredExpression(element);\n\t\t\n\t\tif (objectToView instanceof JvmIdentifiableElement) {\n\t\t\tSet<EObject> sourceElements = associations.getSourceElements(objectToView);\n\t\t\tif(sourceElements.isEmpty()){\n\t\t\t\tIJavaElement javaElement = javaElementFinder.findElementFor((JvmIdentifiableElement) objectToView);\n\t\t\t\tif (javaElement != null) {\n\t\t\t\t\tjavadocHover.setJavaElement(javaElement);\n\t\t\t\t\tJavadocBrowserInformationControlInput hoverInfo2 = (JavadocBrowserInformationControlInput) javadocHover\n\t\t\t\t\t\t\t.getHoverInfo2(null, hoverRegion);\n\t\t\t\t\treturn new XtendInformationControlInput(previous, objectToView, javaElement, hoverInfo2.getHtml(),\n\t\t\t\t\t\t\tlabelProvider, prefixAndSuffixPair.getFirst(), unsugaredExpression,\n\t\t\t\t\t\t\tprefixAndSuffixPair.getSecond());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tString html = getHoverInfoAsHtml(objectToView);\n\t\tif (html != null) {\n\t\t\tStringBuffer buffer = new StringBuffer(html);\n\t\t\tHTMLPrinter.insertPageProlog(buffer, 0, getStyleSheet());\n\t\t\tHTMLPrinter.addPageEpilog(buffer);\n\t\t\thtml = buffer.toString();\n\t\t\treturn new XtendInformationControlInput(previous, objectToView, html, labelProvider,\n\t\t\t\t\tprefixAndSuffixPair.getFirst(), unsugaredExpression, prefixAndSuffixPair.getSecond());\n\t\t}\n\n\t\treturn null;\n\t}","commit_id":"2dca3edb3545c62e5296b0b6079f730141a97f95","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tpublic String toString() {\n\t\treturn getJvmFeature().getCanonicalName();\n\t}","id":39316,"modified_method":"@Override\n\tpublic String toString() {\n\t\treturn shadowingString;\n\t}","commit_id":"634871c5d78b4b7c9eb57246a97e49e50a389f23","url":"https://github.com/eclipse/xtext"},{"original_method":"protected IEObjectDescription createEObjectDescription(QualifiedName name, JvmFeature jvmFeature, TypeArgumentContext ctx, String shadowingString) {\n\t\treturn new JvmFeatureDescription(name,jvmFeature,ctx,shadowingString);\n\t}","id":39317,"modified_method":"protected JvmFeatureDescription createJvmFeatureDescription(QualifiedName name, JvmFeature jvmFeature,\n\t\t\tTypeArgumentContext ctx, String shadowingString) {\n\t\treturn new JvmFeatureDescription(name, jvmFeature, ctx, shadowingString);\n\t}","commit_id":"634871c5d78b4b7c9eb57246a97e49e50a389f23","url":"https://github.com/eclipse/xtext"},{"original_method":"protected INewScope createAssignmentFeatureScope(XAssignment context) {\n\t\tXExpression assignable = context.getAssignable();\n\t\tJvmTypeReference jvmTypeReference = typeResolver.getType(assignable, null);\n\t\tINewScope parent = INewScope.NULL_SCOPE;\n\t\tif (jvmTypeReference != null) {\n\t\t\tparent = createFeatureScopeForTypeRef(jvmTypeReference, parent, publicOnly);\n\t\t}\n\t\tif (assignable instanceof XFeatureCall) {\n\t\t\tXFeatureCall featureCall = (XFeatureCall) assignable;\n\t\t\tif (featureCall.getFeature() instanceof XVariableDeclaration)\n\t\t\t\treturn new SingletonScope(EObjectDescription.create(getAssignmentOperator(), featureCall.getFeature()), parent);\n\t\t\tif (featureCall.getFeature() instanceof JvmFormalParameter)\n\t\t\t\treturn new SingletonScope(EObjectDescription.create(getAssignmentOperator(), featureCall.getFeature()), parent);\n\t\t\tif (featureCall.getFeature() instanceof JvmField) {\n\t\t\t\tif (!((JvmField) featureCall.getFeature()).isFinal())\n\t\t\t\t\treturn new SingletonScope(EObjectDescription.create(getAssignmentOperator(), featureCall.getFeature()), parent);\n\t\t\t}\n//\t\t\tif (featureCall.getFeature() instanceof JvmOperation) {\n//\t\t\t\tJvmOperation operation = (JvmOperation) featureCall.getFeature();\n//\t\t\t\t// methods with one param may be written as setFoo = 'firstParam'\n//\t\t\t\tif (operation.getParameters().size() == 1) {\n//\t\t\t\t\treturn new SingletonScope(EObjectDescription.create(getAssignmentOperator(), featureCall.getFeature()), parent);\n//\t\t\t\t}\n//\t\t\t}\n\t\t}\n\t\tif (assignable instanceof XMemberFeatureCall) {\n\t\t\tXMemberFeatureCall featureCall = (XMemberFeatureCall) assignable;\n\t\t\tif (featureCall.getFeature() instanceof JvmField) {\n\t\t\t\tif (!((JvmField) featureCall.getFeature()).isFinal())\n\t\t\t\t\treturn new SingletonScope(EObjectDescription.create(getAssignmentOperator(), featureCall.getFeature()), parent);\n\t\t\t}\n\t\t}\n\t\treturn parent;\n\n\t}","id":39318,"modified_method":"protected INewScope createAssignmentFeatureScope(XAssignment context) {\n\t\tXExpression assignable = context.getAssignable();\n\t\tList<IEObjectDescription> descriptions = Lists.newArrayList();\n\t\tINewScope parent = INewScope.NULL_SCOPE;\n\t\tif (assignable instanceof XAbstractFeatureCall) {\n\t\t\tXAbstractFeatureCall featureCall = (XAbstractFeatureCall) assignable;\n\t\t\tif (featureCall.getFeature() instanceof XVariableDeclaration) {\n\t\t\t\tdescriptions.add(EObjectDescription.create(getAssignmentOperator(), featureCall.getFeature()));\n\t\t\t}\n\t\t\tif (featureCall.getFeature() instanceof JvmField) {\n\t\t\t\tif (!((JvmField) featureCall.getFeature()).isFinal())\n\t\t\t\t\tdescriptions.add(EObjectDescription.create(getAssignmentOperator(),\n\t\t\t\t\t\t\tfeatureCall.getFeature()));\n\t\t\t}\n\t\t\tif (featureCall.getFeature() instanceof JvmOperation) {\n\t\t\t\tJvmOperation operation = (JvmOperation) featureCall.getFeature();\n\t\t\t\tfinal String propertyName = getPropertyName(operation);\n\t\t\t\tif (propertyName != null) {\n\t\t\t\t\tEObject typedElement = null;\n\t\t\t\t\tif (featureCall instanceof XFeatureCall) {\n\t\t\t\t\t\ttypedElement = getWhatsBoundToThis(featureCall);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttypedElement = featureCall.getArguments().get(0);\n\t\t\t\t\t}\n\t\t\t\t\tJvmTypeReference typeReference = typeResolver.getType(typedElement, null);\n\t\t\t\t\tINewScope scope = createFeatureScopeForTypeRef(typeReference, INewScope.NULL_SCOPE, new Predicate<JvmMember>() {\n\n\t\t\t\t\t\tpublic boolean apply(JvmMember input) {\n\t\t\t\t\t\t\tif (input instanceof JvmOperation) {\n\t\t\t\t\t\t\t\tJvmOperation op = (JvmOperation) input;\n\t\t\t\t\t\t\t\tif (op.getParameters().size()!=1)\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\treturn (getSetterMethodName(propertyName)).equals(op.getSimpleName());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tIEObjectDescription description = scope.getSingleElement(ISelector.SELECT_ALL);\n\t\t\t\t\tif (description instanceof JvmFeatureDescription) {\n\t\t\t\t\t\tJvmFeatureDescription desc = (JvmFeatureDescription) description;\n\t\t\t\t\t\tdescriptions.add(createJvmFeatureDescription(getAssignmentOperator(), desc.getJvmFeature(), desc.getContext(), getAssignmentOperator().toString()));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// methods with one param may be written as setFoo = 'firstParam'\n//\t\t\t\tif (operation.getParameters().size() == 1) {\n//\t\t\t\t\treturn new SingletonScope(EObjectDescription.create(getAssignmentOperator(),\n//\t\t\t\t\t\t\tfeatureCall.getFeature()), parent);\n//\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tJvmTypeReference typeReference = typeResolver.getType(assignable, null);\n\t\tif (typeReference!=null) {\n\t\t\treturn new IterableBasedScope(descriptions, createFeatureScopeForTypeRef(typeReference, parent, new Predicate<JvmMember>() {\n\t\t\t\tpublic boolean apply(JvmMember input) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t\treturn new IterableBasedScope(descriptions, parent);\n\n\t}","commit_id":"634871c5d78b4b7c9eb57246a97e49e50a389f23","url":"https://github.com/eclipse/xtext"},{"original_method":"protected INewScope createScopeForField(JvmDeclaredType declType, INewScope parent,\n\t\t\tPredicate<JvmMember> isAccept, final TypeArgumentContext context) {\n\t\tIterable<JvmField> operations = filter(filter(declType.getMembers(),JvmField.class),isAccept);\n\t\tif (!operations.iterator().hasNext())\n\t\t\treturn parent;\n\t\tIterable<IEObjectDescription> descriptions = transform(operations,\n\t\t\t\tnew Function<JvmField, IEObjectDescription>() {\n\t\t\t\t\tpublic IEObjectDescription apply(JvmField from) {\n\t\t\t\t\t\treturn createEObjectDescription(from, context, from.getSimpleName());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\treturn new JvmFeatureDescriptionContainingScope(descriptions, parent);\n\t}","id":39319,"modified_method":"protected INewScope createScopeForField(JvmDeclaredType declType, INewScope parent, Predicate<JvmMember> isAccept,\n\t\t\tfinal TypeArgumentContext context) {\n\t\tIterable<JvmField> operations = filter(filter(declType.getMembers(), JvmField.class), isAccept);\n\t\tif (!operations.iterator().hasNext())\n\t\t\treturn parent;\n\t\tIterable<IEObjectDescription> descriptions = transform(operations,\n\t\t\t\tnew Function<JvmField, IEObjectDescription>() {\n\t\t\t\t\tpublic IEObjectDescription apply(JvmField from) {\n\t\t\t\t\t\treturn createJvmFeatureDescription(from, context, from.getSimpleName());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\treturn new JvmFeatureDescriptionContainingScope(descriptions, parent);\n\t}","commit_id":"634871c5d78b4b7c9eb57246a97e49e50a389f23","url":"https://github.com/eclipse/xtext"},{"original_method":"protected Iterable<? extends IEObjectDescription> getOperatorSugar(Iterable<JvmOperation> operations, final TypeArgumentContext context) {\n\t\tfinal JvmFeatureShadowingIndexObjectProvider stringProvider = new JvmFeatureShadowingIndexObjectProvider(context);\n\t\treturn Iterables.filter(\n\t\t\t\tIterables.transform(operations, new Function<JvmOperation, IEObjectDescription>() {\n\t\t\t\t\tpublic IEObjectDescription apply(JvmOperation operation) {\n\t\t\t\t\t\tQualifiedName operator = operatorMapping.getOperator(QualifiedName.create(operation.getSimpleName()));\n\t\t\t\t\t\tif (operator != null) {\n\t\t\t\t\t\t\treturn createEObjectDescription(operator, operation, context, operator+stringProvider.apply(operation));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (operation.getParameters().isEmpty()) {\n\t\t\t\t\t\t\treturn createEObjectDescription(operation, context, operation.getSimpleName());\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}), Predicates.notNull());\n\t}","id":39320,"modified_method":"protected INewScope getSugarScope(Iterable<JvmFeatureDescription> operations, JvmDeclaredType declType,\n\t\t\tINewScope parent, final TypeArgumentContext context) {\n\t\tList<JvmFeatureDescription> operationsAsList = Lists.newArrayList(operations);\n\t\tif (operationsAsList.isEmpty())\n\t\t\treturn parent;\n\n\t\tfinal List<JvmFeatureDescription> sugar = Lists.newArrayList();\n\t\tIAcceptor<JvmFeatureDescription> acceptor = new IAcceptor<JvmFeatureDescription>() {\n\t\t\tpublic void accept(JvmFeatureDescription t) {\n\t\t\t\tsugar.add(t);\n\t\t\t}\n\t\t};\n\t\tfor (JvmFeatureDescription jvmFeatureDescription : operationsAsList) {\n\t\t\taddSugaredDescriptions(jvmFeatureDescription, context, acceptor);\n\t\t}\n\n\t\treturn sugar.isEmpty() ? parent : new JvmFeatureDescriptionContainingScope(sugar, parent);\n\t}","commit_id":"634871c5d78b4b7c9eb57246a97e49e50a389f23","url":"https://github.com/eclipse/xtext"},{"original_method":"protected INewScope createScopeForMethods(JvmDeclaredType declType, INewScope parent, Predicate<JvmMember> isAccept,\n\t\t\tfinal TypeArgumentContext context) {\n\t\tfinal JvmFeatureShadowingIndexObjectProvider stringProvider = new JvmFeatureShadowingIndexObjectProvider(context);\n\t\tIterable<JvmOperation> operations = filter(filter(declType.getMembers(),JvmOperation.class),isAccept);\n\t\tif (!operations.iterator().hasNext())\n\t\t\treturn parent;\n\t\tIterable<IEObjectDescription> descriptions = transform(operations,\n\t\t\t\tnew Function<JvmOperation, IEObjectDescription>() {\n\t\t\t\t\tpublic IEObjectDescription apply(JvmOperation from) {\n\t\t\t\t\t\treturn createEObjectDescription(from, context,stringProvider.apply(from));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\treturn new JvmFeatureDescriptionContainingScope(concat(descriptions, getOperatorSugar(operations, context)), parent);\n\t}","id":39321,"modified_method":"protected INewScope createScopeForMethods(JvmDeclaredType declType, INewScope parent,\n\t\t\tPredicate<JvmMember> isAccept, final TypeArgumentContext context) {\n\t\tfinal JvmFeatureShadowingIndexObjectProvider stringProvider = new JvmFeatureShadowingIndexObjectProvider(\n\t\t\t\tcontext);\n\t\tIterable<JvmOperation> operations = filter(filter(declType.getMembers(), JvmOperation.class), isAccept);\n\t\tif (!operations.iterator().hasNext())\n\t\t\treturn parent;\n\t\tIterable<JvmFeatureDescription> descriptions = transform(operations,\n\t\t\t\tnew Function<JvmOperation, JvmFeatureDescription>() {\n\t\t\t\t\tpublic JvmFeatureDescription apply(JvmOperation from) {\n\t\t\t\t\t\treturn createJvmFeatureDescription(from, context, stringProvider.apply(from));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\treturn new JvmFeatureDescriptionContainingScope(descriptions, getSugarScope(descriptions, declType, parent,\n\t\t\t\tcontext));\n\t}","commit_id":"634871c5d78b4b7c9eb57246a97e49e50a389f23","url":"https://github.com/eclipse/xtext"},{"original_method":"protected IEObjectDescription createEObjectDescription(JvmFeature jvmFeature, TypeArgumentContext ctx, String shadowingString) {\n\t\treturn createEObjectDescription(QualifiedName.create(jvmFeature.getSimpleName()),jvmFeature,ctx,shadowingString);\n\t}","id":39322,"modified_method":"protected JvmFeatureDescription createJvmFeatureDescription(JvmFeature jvmFeature, TypeArgumentContext ctx,\n\t\t\tString shadowingString) {\n\t\treturn createJvmFeatureDescription(QualifiedName.create(jvmFeature.getSimpleName()), jvmFeature, ctx,\n\t\t\t\tshadowingString);\n\t}","commit_id":"634871c5d78b4b7c9eb57246a97e49e50a389f23","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testGenerics_1() throws Exception {\n\t\tXAssignment assign = (XAssignment) expression(\"((testdata.GenericType1<? extends java.lang.String>) null) += 'foo'\");\n\t}","id":39323,"modified_method":"public void testGenerics_1() throws Exception {\n\t\texpression(\"((testdata.GenericType1<? extends java.lang.String>) null) += 'foo'\", true);\n\t}","commit_id":"634871c5d78b4b7c9eb57246a97e49e50a389f23","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testGenerics() throws Exception {\n\t\tXAssignment assign = (XAssignment) expression(\"new testdata.GenericType1<java.lang.String>() += 'foo'\");\n\t}","id":39324,"modified_method":"public void testGenerics() throws Exception {\n\t\texpression(\"new testdata.GenericType1<java.lang.String>() += 'foo'\", true);\n\t}","commit_id":"634871c5d78b4b7c9eb57246a97e49e50a389f23","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testGenerics_2() throws Exception {\n\t\tXAssignment assign = (XAssignment) expression(\"new testdata.GenericType1() += 'foo'\");\n\t}","id":39325,"modified_method":"public void testGenerics_2() throws Exception {\n\t\texpression(\"new testdata.GenericType1() += 'foo'\", true);\n\t}","commit_id":"634871c5d78b4b7c9eb57246a97e49e50a389f23","url":"https://github.com/eclipse/xtext"},{"original_method":"private Pair<CompletionContext, PsiElement> insertDummyIdentifier(final CompletionContext context,\n                                                                    final FileCopyPatcher patcher,\n                                                                    final PsiFile file, final Editor originalEditor) {\n    PsiFile oldFileCopy = createFileCopy(file);\n    PsiFile hostFile = InjectedLanguageUtil.getTopLevelFile(oldFileCopy);\n    boolean wasInjected = hostFile != oldFileCopy;\n    Project project = hostFile.getProject();\n    InjectedLanguageManager injectedLanguageManager = InjectedLanguageManager.getInstance(project);\n    // is null in tests\n    int hostStartOffset = injectedLanguageManager == null\n                          ? context.getStartOffset()\n                          : injectedLanguageManager.injectedToHost(oldFileCopy, context.getStartOffset());\n\n    Document document = oldFileCopy.getViewProvider().getDocument();\n    assert document != null;\n    patcher.patchFileCopy(oldFileCopy, document, context.getOffsetMap());\n    PsiDocumentManager.getInstance(project).commitDocument(document);\n    PsiFile fileCopy = InjectedLanguageUtil.findInjectedPsiNoCommit(hostFile, hostStartOffset);\n    if (fileCopy == null) {\n      PsiElement elementAfterCommit = findElementAt(hostFile, hostStartOffset);\n      if (wasInjected) {\n        LOG.error(\"No injected fragment found at offset \" + hostStartOffset + \" in the patched file copy, found: \" + elementAfterCommit);\n      }\n      fileCopy = elementAfterCommit == null ? oldFileCopy : elementAfterCommit.getContainingFile();\n    }\n\n    if (oldFileCopy != fileCopy && !wasInjected) {\n      // newly inserted identifier can well end up in the injected language region\n      Editor editor = EditorFactory.getInstance().createEditor(document, project);\n      Editor newEditor = InjectedLanguageUtil.getEditorForInjectedLanguageNoCommit(editor, hostFile, context.getStartOffset());\n      if (newEditor instanceof EditorWindow) {\n        EditorWindow injectedEditor = (EditorWindow)newEditor;\n        PsiFile injectedFile = injectedEditor.getInjectedFile();\n        final OffsetMap map = new OffsetMap(newEditor.getDocument());\n        final OffsetMap oldMap = context.getOffsetMap();\n        for (final OffsetKey key : oldMap.keySet()) {\n          map.addOffset(key, injectedEditor.logicalPositionToOffset(injectedEditor.hostToInjected(originalEditor.offsetToLogicalPosition(oldMap.getOffset(key)))));\n        }\n        CompletionContext newContext = new CompletionContext(file.getProject(), injectedEditor, injectedFile, map);\n        int injectedOffset = newContext.getStartOffset();\n        PsiElement element = findElementAt(injectedFile, injectedOffset);\n\n        int toHost = injectedLanguageManager == null ? hostStartOffset : injectedLanguageManager.injectedToHost(injectedFile, injectedOffset);\n        // maybe injected fragment is ended before hostStartOffset\n        if (element != null && toHost == hostStartOffset) {\n          EditorFactory.getInstance().releaseEditor(editor);\n          return Pair.create(newContext, element);\n        }\n\n        PsiElement elementAfterCommit = findElementAt(hostFile, hostStartOffset);\n        fileCopy = elementAfterCommit == null ? oldFileCopy : elementAfterCommit.getContainingFile();\n      }\n      EditorFactory.getInstance().releaseEditor(editor);\n    }\n    PsiElement element = findElementAt(fileCopy, context.getStartOffset());\n    if (element == null) {\n      LOG.error(\"offset \" + context.getStartOffset() + \" at:\\ntext=\\\"\" + fileCopy.getText() + \"\\\"\\ninstance=\" + fileCopy);\n    }\n    return Pair.create(context, element);\n  }","id":39326,"modified_method":"private Pair<CompletionContext, PsiElement> insertDummyIdentifier(final CompletionContext context,\n                                                                    final FileCopyPatcher patcher,\n                                                                    final PsiFile file, final Editor originalEditor) {\n    PsiFile oldFileCopy = createFileCopy(file);\n    PsiFile hostFile = InjectedLanguageUtil.getTopLevelFile(oldFileCopy);\n    boolean wasInjected = hostFile != oldFileCopy;\n    Project project = hostFile.getProject();\n    InjectedLanguageManager injectedLanguageManager = InjectedLanguageManager.getInstance(project);\n    int hostStartOffset = injectedLanguageManager.injectedToHost(oldFileCopy, context.getStartOffset());\n\n    Document document = oldFileCopy.getViewProvider().getDocument();\n    assert document != null;\n    patcher.patchFileCopy(oldFileCopy, document, context.getOffsetMap());\n    PsiDocumentManager.getInstance(project).commitDocument(document);\n    PsiFile fileCopy = InjectedLanguageUtil.findInjectedPsiNoCommit(hostFile, hostStartOffset);\n    if (fileCopy == null) {\n      PsiElement elementAfterCommit = findElementAt(hostFile, hostStartOffset);\n      if (wasInjected) {\n        LOG.error(\"No injected fragment found at offset \" + hostStartOffset + \" in the patched file copy, found: \" + elementAfterCommit);\n      }\n      fileCopy = elementAfterCommit == null ? oldFileCopy : elementAfterCommit.getContainingFile();\n    }\n\n    if (oldFileCopy != fileCopy && !wasInjected) {\n      // newly inserted identifier can well end up in the injected language region\n      Editor editor = EditorFactory.getInstance().createEditor(document, project);\n      Editor newEditor = InjectedLanguageUtil.getEditorForInjectedLanguageNoCommit(editor, hostFile, context.getStartOffset());\n      if (newEditor instanceof EditorWindow) {\n        EditorWindow injectedEditor = (EditorWindow)newEditor;\n        PsiFile injectedFile = injectedEditor.getInjectedFile();\n        final OffsetMap map = new OffsetMap(newEditor.getDocument());\n        final OffsetMap oldMap = context.getOffsetMap();\n        for (final OffsetKey key : oldMap.keySet()) {\n          map.addOffset(key, injectedEditor.logicalPositionToOffset(injectedEditor.hostToInjected(originalEditor.offsetToLogicalPosition(oldMap.getOffset(key)))));\n        }\n        CompletionContext newContext = new CompletionContext(file.getProject(), injectedEditor, injectedFile, map);\n        int injectedOffset = newContext.getStartOffset();\n        PsiElement element = findElementAt(injectedFile, injectedOffset);\n\n        int toHost = injectedLanguageManager.injectedToHost(injectedFile, injectedOffset);\n        // maybe injected fragment is ended before hostStartOffset\n        if (element != null && toHost == hostStartOffset) {\n          EditorFactory.getInstance().releaseEditor(editor);\n          return Pair.create(newContext, element);\n        }\n\n        PsiElement elementAfterCommit = findElementAt(hostFile, hostStartOffset);\n        fileCopy = elementAfterCommit == null ? oldFileCopy : elementAfterCommit.getContainingFile();\n      }\n      EditorFactory.getInstance().releaseEditor(editor);\n    }\n    PsiElement element = findElementAt(fileCopy, context.getStartOffset());\n    if (element == null) {\n      LOG.error(\"offset \" + context.getStartOffset() + \" at:\\ntext=\\\"\" + fileCopy.getText() + \"\\\"\\ninstance=\" + fileCopy);\n    }\n    return Pair.create(context, element);\n  }","commit_id":"9c514c71e6b2dbff1daa285d2801cdd6809fb0e1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ASTNode processRange(final ASTNode element, final int startOffset, final int endOffset) {\n    final PsiElement psiElement = SourceTreeToPsiMap.treeElementToPsi(element);\n    final PsiFile file = psiElement.getContainingFile();\n    final Document document = file.getViewProvider().getDocument();\n    final RangeMarker rangeMarker = document != null && endOffset < document.getTextLength()? document.createRangeMarker(startOffset, endOffset):null;\n\n    PsiElement elementToFormat = document instanceof DocumentWindow ? InjectedLanguageUtil.getTopLevelFile(file) : psiElement;\n    final PsiFile fileToFormat = elementToFormat.getContainingFile();\n\n    final FormattingModelBuilder builder = LanguageFormatting.INSTANCE.forContext(fileToFormat);\n    if (builder != null) {\n      TextRange range = preprocess(element, startOffset, endOffset);\n      if (document instanceof DocumentWindow) {\n        DocumentWindow documentWindow = (DocumentWindow)document;\n        range = new TextRange(documentWindow.injectedToHost(range.getStartOffset()), documentWindow.injectedToHost(range.getEndOffset()));\n      }\n\n      //final SmartPsiElementPointer pointer = SmartPointerManager.getInstance(psiElement.getProject()).createSmartPsiElementPointer(psiElement);\n      final FormattingModel model = builder.createModel(elementToFormat, mySettings);\n      if (file.getTextLength() > 0) {\n        try {\n          FormatterEx.getInstanceEx().format(model, mySettings,\n                                             mySettings.getIndentOptions(fileToFormat.getFileType()), new FormatTextRanges(range, true));\n        }\n        catch (IncorrectOperationException e) {\n          LOG.error(e);\n        }\n      }\n\n      if (!psiElement.isValid()) {\n        if (rangeMarker != null) {\n          final PsiElement at = file.findElementAt(rangeMarker.getStartOffset());\n          final PsiElement result = PsiTreeUtil.getParentOfType(at, psiElement.getClass(), false);\n          assert result != null;\n          return result.getNode();\n        } else {\n          assert false;\n        }\n      }\n\n//      return SourceTreeToPsiMap.psiElementToTree(pointer.getElement());\n\n    }\n\n    return element;\n  }","id":39327,"modified_method":"public ASTNode processRange(final ASTNode element, final int startOffset, final int endOffset) {\n    final PsiElement psiElement = SourceTreeToPsiMap.treeElementToPsi(element);\n    final PsiFile file = psiElement.getContainingFile();\n    final Document document = file.getViewProvider().getDocument();\n    final RangeMarker rangeMarker = document != null && endOffset < document.getTextLength()? document.createRangeMarker(startOffset, endOffset):null;\n\n    PsiElement elementToFormat = document instanceof DocumentWindow ? InjectedLanguageUtil.getTopLevelFile(file) : psiElement;\n    final PsiFile fileToFormat = elementToFormat.getContainingFile();\n\n    final FormattingModelBuilder builder = LanguageFormatting.INSTANCE.forContext(fileToFormat);\n    if (builder != null) {\n      TextRange range = preprocess(element, startOffset, endOffset);\n      if (document instanceof DocumentWindow) {\n        DocumentWindow documentWindow = (DocumentWindow)document;\n        range = documentWindow.injectedToHost(range);\n      }\n\n      //final SmartPsiElementPointer pointer = SmartPointerManager.getInstance(psiElement.getProject()).createSmartPsiElementPointer(psiElement);\n      final FormattingModel model = builder.createModel(elementToFormat, mySettings);\n      if (file.getTextLength() > 0) {\n        try {\n          FormatterEx.getInstanceEx().format(model, mySettings,\n                                             mySettings.getIndentOptions(fileToFormat.getFileType()), new FormatTextRanges(range, true));\n        }\n        catch (IncorrectOperationException e) {\n          LOG.error(e);\n        }\n      }\n\n      if (!psiElement.isValid()) {\n        if (rangeMarker != null) {\n          final PsiElement at = file.findElementAt(rangeMarker.getStartOffset());\n          final PsiElement result = PsiTreeUtil.getParentOfType(at, psiElement.getClass(), false);\n          assert result != null;\n          return result.getNode();\n        } else {\n          assert false;\n        }\n      }\n\n//      return SourceTreeToPsiMap.psiElementToTree(pointer.getElement());\n\n    }\n\n    return element;\n  }","commit_id":"00cfecd9c7e83408888c996a9356bae453ac35dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void processText(PsiFile file, final FormatTextRanges ranges, boolean doPostponedFormatting) {\n    final FormattingModelBuilder builder = LanguageFormatting.INSTANCE.forContext(file);\n\n    if (builder != null) {\n      if (file.getTextLength() > 0) {\n        try {\n          ranges.preprocess(file.getNode());\n          if (doPostponedFormatting) {\n            final PostprocessReformattingAspect component = file.getProject().getComponent(PostprocessReformattingAspect.class);\n            component.doPostponedFormatting(file.getViewProvider());\n          }\n          final FormattingModel originalModel = builder.createModel(file, mySettings);\n          Project project = file.getProject();\n          final FormattingModel model = new DocumentBasedFormattingModel(originalModel.getRootBlock(),\n                                                                         PsiDocumentManager.getInstance(project).getDocument(file),\n                                                                         project, mySettings, file.getFileType(), file);\n\n          FormatterEx.getInstanceEx().format(model, mySettings, mySettings.getIndentOptions(file.getFileType()), ranges);\n        }\n        catch (IncorrectOperationException e) {\n          LOG.error(e);\n        }\n      }\n    }\n  }","id":39328,"modified_method":"public void processText(PsiFile file, final FormatTextRanges ranges, boolean doPostponedFormatting) {\n    Project project = file.getProject();\n    Document document = PsiDocumentManager.getInstance(project).getDocument(file);\n    if (document instanceof DocumentWindow) {\n      file = InjectedLanguageUtil.getTopLevelFile(file);\n      final DocumentWindow documentWindow = (DocumentWindow)document;\n      for (FormatTextRanges.FormatTextRange range : ranges.getRanges()) {\n        range.setTextRange(documentWindow.injectedToHost(range.getTextRange()));\n      }\n      document = documentWindow.getDelegate();\n    }\n\n\n    final FormattingModelBuilder builder = LanguageFormatting.INSTANCE.forContext(file);\n\n    if (builder != null) {\n      if (file.getTextLength() > 0) {\n        try {\n          ranges.preprocess(file.getNode());\n          if (doPostponedFormatting) {\n            final PostprocessReformattingAspect component = file.getProject().getComponent(PostprocessReformattingAspect.class);\n            component.doPostponedFormatting(file.getViewProvider());\n          }\n          final FormattingModel originalModel = builder.createModel(file, mySettings);\n          final FormattingModel model = new DocumentBasedFormattingModel(originalModel.getRootBlock(),\n                                                                         document,\n                                                                         project, mySettings, file.getFileType(), file);\n\n          FormatterEx.getInstanceEx().format(model, mySettings, mySettings.getIndentOptions(file.getFileType()), ranges);\n        }\n        catch (IncorrectOperationException e) {\n          LOG.error(e);\n        }\n      }\n    }\n  }","commit_id":"00cfecd9c7e83408888c996a9356bae453ac35dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void reformatNewlyAddedElement(@NotNull final ASTNode parent, @NotNull final ASTNode addedElement) throws IncorrectOperationException {\n\n    LOG.assertTrue(addedElement.getTreeParent() == parent, \"addedElement must be added to parent\");\n\n    final PsiElement psiElement = parent.getPsi();\n\n    PsiFile containingFile = psiElement.getContainingFile();\n    final FileViewProvider fileViewProvider = containingFile.getViewProvider();\n    if (fileViewProvider instanceof MultiplePsiFilesPerDocumentFileViewProvider) {\n      containingFile = fileViewProvider.getPsi(fileViewProvider.getBaseLanguage());\n    }\n    final FormattingModelBuilder builder = LanguageFormatting.INSTANCE.forContext(containingFile);\n\n    if (builder != null) {\n      final FormattingModel model = builder.createModel(containingFile, getSettings());\n      FormatterEx.getInstanceEx().formatAroundRange(model, getSettings(), addedElement.getTextRange(), containingFile.getFileType());\n    }\n\n    adjustLineIndent(containingFile, addedElement.getTextRange());\n  }","id":39329,"modified_method":"public void reformatNewlyAddedElement(@NotNull final ASTNode parent, @NotNull final ASTNode addedElement) throws IncorrectOperationException {\n\n    LOG.assertTrue(addedElement.getTreeParent() == parent, \"addedElement must be added to parent\");\n\n    final PsiElement psiElement = parent.getPsi();\n\n    PsiFile containingFile = psiElement.getContainingFile();\n    final FileViewProvider fileViewProvider = containingFile.getViewProvider();\n    if (fileViewProvider instanceof MultiplePsiFilesPerDocumentFileViewProvider) {\n      containingFile = fileViewProvider.getPsi(fileViewProvider.getBaseLanguage());\n    }\n\n    TextRange textRange = addedElement.getTextRange();\n    final Document document = fileViewProvider.getDocument();\n    if (document instanceof DocumentWindow) {\n      containingFile = InjectedLanguageUtil.getTopLevelFile(containingFile);\n      textRange = ((DocumentWindow)document).injectedToHost(textRange);\n    }\n\n    final FormattingModelBuilder builder = LanguageFormatting.INSTANCE.forContext(containingFile);\n    if (builder != null) {\n      final FormattingModel model = builder.createModel(containingFile, getSettings());\n      FormatterEx.getInstanceEx().formatAroundRange(model, getSettings(), textRange, containingFile.getFileType());\n    }\n\n    adjustLineIndent(containingFile, textRange);\n  }","commit_id":"00cfecd9c7e83408888c996a9356bae453ac35dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void reformatText(@NotNull PsiFile file, int startOffset, int endOffset) throws IncorrectOperationException {\n    ApplicationManager.getApplication().assertWriteAccessAllowed();\n    PsiDocumentManager.getInstance(getProject()).commitAllDocuments();\n\n    final Project project = file.getProject();\n    final Document document = PsiDocumentManager.getInstance(project).getDocument(file);\n    if (document instanceof DocumentWindow) {\n      file = InjectedLanguageUtil.getTopLevelFile(file);\n      final DocumentWindow documentWindow = (DocumentWindow)document;\n      startOffset = documentWindow.injectedToHost(startOffset);\n      endOffset = documentWindow.injectedToHost(endOffset);\n    }\n\n    CheckUtil.checkWritable(file);\n    if (!SourceTreeToPsiMap.hasTreeElement(file)) {\n      return;\n    }\n\n    ASTNode treeElement = SourceTreeToPsiMap.psiElementToTree(file);\n    transformAllChildren(treeElement);\n\n    final CodeFormatterFacade codeFormatter = new CodeFormatterFacade(getSettings());\n    LOG.assertTrue(file.isValid());\n    final PsiElement start = findElementInTreeWithFormatterEnabled(file, startOffset);\n    final PsiElement end = findElementInTreeWithFormatterEnabled(file, endOffset);\n    if (start != null && !start.isValid()) {\n      LOG.error(\"start=\" + start + \"; file=\" + file);\n    }\n    if (end != null && !end.isValid()) {\n      LOG.error(\"end=\" + start + \"; end=\" + file);\n    }\n\n    boolean formatFromStart = startOffset == 0;\n    boolean formatToEnd = endOffset == file.getTextLength();\n\n    final SmartPointerManager smartPointerManager = SmartPointerManager.getInstance(getProject());\n    final SmartPsiElementPointer startPointer = start == null ? null : smartPointerManager.createSmartPsiElementPointer(start);\n\n    final SmartPsiElementPointer endPointer = end == null ? null : smartPointerManager.createSmartPsiElementPointer(end);\n\n    codeFormatter.processText(file, new FormatTextRanges(new TextRange(startOffset, endOffset), true), true);\n    final PsiElement startElement = startPointer == null ? null : startPointer.getElement();\n    final PsiElement endElement = endPointer == null ? null : endPointer.getElement();\n\n    if ((startElement != null || formatFromStart) && (endElement != null || formatToEnd)) {\n      postProcessText(file, new TextRange(formatFromStart ? 0 : startElement.getTextRange().getStartOffset(),\n                                          formatToEnd ? file.getTextLength() : endElement.getTextRange().getEndOffset()));\n    }\n  }","id":39330,"modified_method":"public void reformatText(@NotNull PsiFile file, int startOffset, int endOffset) throws IncorrectOperationException {\n    ApplicationManager.getApplication().assertWriteAccessAllowed();\n    PsiDocumentManager.getInstance(getProject()).commitAllDocuments();\n\n    CheckUtil.checkWritable(file);\n    if (!SourceTreeToPsiMap.hasTreeElement(file)) {\n      return;\n    }\n\n    ASTNode treeElement = SourceTreeToPsiMap.psiElementToTree(file);\n    transformAllChildren(treeElement);\n\n    final CodeFormatterFacade codeFormatter = new CodeFormatterFacade(getSettings());\n    LOG.assertTrue(file.isValid());\n    final PsiElement start = findElementInTreeWithFormatterEnabled(file, startOffset);\n    final PsiElement end = findElementInTreeWithFormatterEnabled(file, endOffset);\n    if (start != null && !start.isValid()) {\n      LOG.error(\"start=\" + start + \"; file=\" + file);\n    }\n    if (end != null && !end.isValid()) {\n      LOG.error(\"end=\" + start + \"; end=\" + file);\n    }\n\n    boolean formatFromStart = startOffset == 0;\n    boolean formatToEnd = endOffset == file.getTextLength();\n\n    final SmartPointerManager smartPointerManager = SmartPointerManager.getInstance(getProject());\n    final SmartPsiElementPointer startPointer = start == null ? null : smartPointerManager.createSmartPsiElementPointer(start);\n\n    final SmartPsiElementPointer endPointer = end == null ? null : smartPointerManager.createSmartPsiElementPointer(end);\n\n    codeFormatter.processText(file, new FormatTextRanges(new TextRange(startOffset, endOffset), true), true);\n    final PsiElement startElement = startPointer == null ? null : startPointer.getElement();\n    final PsiElement endElement = endPointer == null ? null : endPointer.getElement();\n\n    if ((startElement != null || formatFromStart) && (endElement != null || formatToEnd)) {\n      postProcessText(file, new TextRange(formatFromStart ? 0 : startElement.getTextRange().getStartOffset(),\n                                          formatToEnd ? file.getTextLength() : endElement.getTextRange().getEndOffset()));\n    }\n  }","commit_id":"00cfecd9c7e83408888c996a9356bae453ac35dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public T perform(PsiFile file, int offset, @Nullable TextRange range, T defaultValue) {\n    if (file instanceof PsiCompiledElement) {\n      file = (PsiFile)((PsiCompiledElement)file).getMirror();\n    }\n\n    PsiDocumentManager documentManager = PsiDocumentManager.getInstance(myCodeStyleManager.getProject());\n    Document document = documentManager.getDocument(file);\n    if (document instanceof DocumentWindow) {\n      final DocumentWindow documentWindow = (DocumentWindow)document;\n      if (range != null) {\n        range = new TextRange(documentWindow.injectedToHost(range.getStartOffset()), documentWindow.injectedToHost(range.getEndOffset()));\n      }\n      if (offset != -1) {\n        offset = documentWindow.injectedToHost(offset);\n      }\n      return adjustResultForInjected(perform(InjectedLanguageUtil.getTopLevelFile(file), offset, range, defaultValue), documentWindow);\n    }\n\n    final PsiFile templateFile = PsiUtilBase.getTemplateLanguageFile(file);\n    if (templateFile != null) {\n      file = templateFile;\n      document = documentManager.getDocument(templateFile);\n    }\n\n    PsiElement element = null;\n    if (offset != -1) {\n      element = CodeStyleManagerImpl.findElementInTreeWithFormatterEnabled(file, offset);\n      if (element == null && offset != file.getTextLength()) {\n        return defaultValue;\n      }\n      if (isInsidePlainComment(offset, element)) {\n        return computeValueInsidePlainComment(file, offset, defaultValue);\n      }\n    }\n\n    final FormattingModelBuilder builder = LanguageFormatting.INSTANCE.forContext(file);\n    FormattingModelBuilder elementBuilder = element != null ? LanguageFormatting.INSTANCE.forContext(element) : builder;\n    if (builder != null && elementBuilder != null) {\n      mySettings = CodeStyleSettingsManager.getSettings(myCodeStyleManager.getProject());\n      myIndentOptions = mySettings.getIndentOptions(file.getFileType());\n      mySignificantRange = offset != -1 ? getSignificantRange(file, offset) : null;\n      myModel = builder.createModel(file, mySettings);\n\n      if (document != null && useDocumentBaseFormattingModel()) {\n        myModel = new DocumentBasedFormattingModel(myModel.getRootBlock(), document, myCodeStyleManager.getProject(), mySettings, file.getFileType(), file);\n      }\n\n      final T result = doPerform(offset, range);\n      if (result != null) {\n        return result;\n      }\n    }\n    return defaultValue;\n  }","id":39331,"modified_method":"public T perform(PsiFile file, int offset, @Nullable TextRange range, T defaultValue) {\n    if (file instanceof PsiCompiledElement) {\n      file = (PsiFile)((PsiCompiledElement)file).getMirror();\n    }\n\n    PsiDocumentManager documentManager = PsiDocumentManager.getInstance(myCodeStyleManager.getProject());\n    Document document = documentManager.getDocument(file);\n    if (document instanceof DocumentWindow) {\n      final DocumentWindow documentWindow = (DocumentWindow)document;\n      if (range != null) {\n        range = documentWindow.injectedToHost(range);\n      }\n      if (offset != -1) {\n        offset = documentWindow.injectedToHost(offset);\n      }\n      return adjustResultForInjected(perform(InjectedLanguageUtil.getTopLevelFile(file), offset, range, defaultValue), documentWindow);\n    }\n\n    final PsiFile templateFile = PsiUtilBase.getTemplateLanguageFile(file);\n    if (templateFile != null) {\n      file = templateFile;\n      document = documentManager.getDocument(templateFile);\n    }\n\n    PsiElement element = null;\n    if (offset != -1) {\n      element = CodeStyleManagerImpl.findElementInTreeWithFormatterEnabled(file, offset);\n      if (element == null && offset != file.getTextLength()) {\n        return defaultValue;\n      }\n      if (isInsidePlainComment(offset, element)) {\n        return computeValueInsidePlainComment(file, offset, defaultValue);\n      }\n    }\n\n    final FormattingModelBuilder builder = LanguageFormatting.INSTANCE.forContext(file);\n    FormattingModelBuilder elementBuilder = element != null ? LanguageFormatting.INSTANCE.forContext(element) : builder;\n    if (builder != null && elementBuilder != null) {\n      mySettings = CodeStyleSettingsManager.getSettings(myCodeStyleManager.getProject());\n      myIndentOptions = mySettings.getIndentOptions(file.getFileType());\n      mySignificantRange = offset != -1 ? getSignificantRange(file, offset) : null;\n      myModel = builder.createModel(file, mySettings);\n\n      if (document != null && useDocumentBaseFormattingModel()) {\n        myModel = new DocumentBasedFormattingModel(myModel.getRootBlock(), document, myCodeStyleManager.getProject(), mySettings, file.getFileType(), file);\n      }\n\n      final T result = doPerform(offset, range);\n      if (result != null) {\n        return result;\n      }\n    }\n    return defaultValue;\n  }","commit_id":"00cfecd9c7e83408888c996a9356bae453ac35dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setUserConfigURL(String userConfigURL) {\n        this.userConfigURL = userConfigURL;\n        updateConfigurations();\n    }","id":39332,"modified_method":"public void setUserConfigURL(String userConfigURL) {\n        this.userConfigURL = userConfigURL;\n    }","commit_id":"f9bf77b1b443eb05424c1a32f8a0f777528ab8b5","url":"https://github.com/apache/camel"},{"original_method":"public FopEndpoint(String uri, FopComponent component, String remaining) {\n        super(uri, component);\n        this.remaining = remaining;\n        this.fopFactory = FopFactory.newInstance();\n    }","id":39333,"modified_method":"public FopEndpoint(String uri, FopComponent component, String remaining) {\n        super(uri, component);\n        this.remaining = remaining;\n    }","commit_id":"f9bf77b1b443eb05424c1a32f8a0f777528ab8b5","url":"https://github.com/apache/camel"},{"original_method":"private void updateConfigurations() {\n        DefaultConfigurationBuilder cfgBuilder = new DefaultConfigurationBuilder();\n        Configuration cfg;\n        try {\n            cfg = cfgBuilder.buildFromFile(this.userConfigURL);\n        } catch (SAXException e) {\n            throw new RuntimeException(e);\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        } catch (ConfigurationException e) {\n            throw new RuntimeException(e);\n        }\n        try {\n            fopFactory.setUserConfig(cfg);\n        } catch (FOPException e) {\n            throw new RuntimeException(e);\n        }\n    }","id":39334,"modified_method":"private static void updateConfigurations(InputStream is, FopFactory fopFactory) throws SAXException, IOException, ConfigurationException {\n        DefaultConfigurationBuilder cfgBuilder = new DefaultConfigurationBuilder();\n        Configuration cfg = cfgBuilder.build(is);\n        fopFactory.setUserConfig(cfg);\n    }","commit_id":"f9bf77b1b443eb05424c1a32f8a0f777528ab8b5","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void specifyCustomUserConfigurationFile() throws Exception {\n        FopEndpoint customConfiguredEndpoint = context()\n                .getEndpoint(\"fop:application/pdf?userConfigURL=src/test/data/conf/testcfg.xml\",\n                        FopEndpoint.class);\n        float customSourceResolution = customConfiguredEndpoint.getFopFactory().getSourceResolution();\n        assertEquals(96.0, customSourceResolution, 0.1);\n    }","id":39335,"modified_method":"@Test\n    public void specifyCustomUserConfigurationFile() throws Exception {\n        FopEndpoint customConfiguredEndpoint = context()\n                .getEndpoint(\"fop:application/pdf?userConfigURL=file:src/test/data/conf/testcfg.xml\",\n                        FopEndpoint.class);\n        float customSourceResolution = customConfiguredEndpoint.getFopFactory().getSourceResolution();\n        assertEquals(96.0, customSourceResolution, 0.1);\n    }","commit_id":"f9bf77b1b443eb05424c1a32f8a0f777528ab8b5","url":"https://github.com/apache/camel"},{"original_method":"private boolean initSP() {\n        KeystoreVO keyStoreVO = _ksDao.findByName(SAMLPluginConstants.SAMLSP_KEYPAIR);\n        if (keyStoreVO == null) {\n            try {\n                KeyPair keyPair = SAMLUtils.generateRandomKeyPair();\n                _ksDao.save(SAMLPluginConstants.SAMLSP_KEYPAIR, SAMLUtils.savePrivateKey(keyPair.getPrivate()), SAMLUtils.savePublicKey(keyPair.getPublic()), \"samlsp-keypair\");\n                keyStoreVO = _ksDao.findByName(SAMLPluginConstants.SAMLSP_KEYPAIR);\n                s_logger.info(\"No SAML keystore found, created and saved a new Service Provider keypair\");\n            } catch (NoSuchProviderException | NoSuchAlgorithmException e) {\n                s_logger.error(\"Unable to create and save SAML keypair: \" + e.toString());\n            }\n        }\n\n        String spId = SAMLServiceProviderID.value();\n        String spSsoUrl = SAMLServiceProviderSingleSignOnURL.value();\n        String spSloUrl = SAMLServiceProviderSingleLogOutURL.value();\n        String spOrgName = SAMLServiceProviderOrgName.value();\n        String spOrgUrl = SAMLServiceProviderOrgUrl.value();\n        String spContactPersonName = SAMLServiceProviderContactPersonName.value();\n        String spContactPersonEmail = SAMLServiceProviderContactEmail.value();\n        KeyPair spKeyPair = null;\n        X509Certificate spX509Key = null;\n        if (keyStoreVO != null) {\n            PrivateKey privateKey = SAMLUtils.loadPrivateKey(keyStoreVO.getCertificate());\n            PublicKey publicKey = SAMLUtils.loadPublicKey(keyStoreVO.getKey());\n            if (privateKey != null && publicKey != null) {\n                spKeyPair = new KeyPair(publicKey, privateKey);\n                KeystoreVO x509VO = _ksDao.findByName(SAMLPluginConstants.SAMLSP_X509CERT);\n                if (x509VO == null) {\n                    try {\n                        spX509Key = SAMLUtils.generateRandomX509Certificate(spKeyPair);\n                        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n                        ObjectOutput out = new ObjectOutputStream(bos);\n                        out.writeObject(spX509Key);\n                        out.flush();\n                        _ksDao.save(SAMLPluginConstants.SAMLSP_X509CERT, Base64.encodeBase64String(bos.toByteArray()), \"\", \"samlsp-x509cert\");\n                        bos.close();\n                    } catch (NoSuchAlgorithmException | NoSuchProviderException | CertificateEncodingException | SignatureException | InvalidKeyException | IOException e) {\n                        s_logger.error(\"SAML Plugin won't be able to use X509 signed authentication\");\n                    }\n                } else {\n                    try {\n                        ByteArrayInputStream bi = new ByteArrayInputStream(Base64.decodeBase64(x509VO.getCertificate()));\n                        ObjectInputStream si = new ObjectInputStream(bi);\n                        spX509Key = (X509Certificate) si.readObject();\n                        bi.close();\n                    } catch (IOException | ClassNotFoundException ignored) {\n                        s_logger.error(\"SAML Plugin won't be able to use X509 signed authentication. Failed to load X509 Certificate from Database.\");\n                    }\n                }\n            }\n        }\n        if (spKeyPair != null && spX509Key != null\n                && spId != null && spSsoUrl != null && spSloUrl != null\n                && spOrgName != null && spOrgUrl != null\n                && spContactPersonName != null && spContactPersonEmail != null) {\n            _spMetadata.setEntityId(spId);\n            _spMetadata.setOrganizationName(spOrgName);\n            _spMetadata.setOrganizationUrl(spOrgUrl);\n            _spMetadata.setContactPersonName(spContactPersonName);\n            _spMetadata.setContactPersonEmail(spContactPersonEmail);\n            _spMetadata.setSsoUrl(spSsoUrl);\n            _spMetadata.setSloUrl(spSloUrl);\n            _spMetadata.setKeyPair(spKeyPair);\n            _spMetadata.setSigningCertificate(spX509Key);\n            _spMetadata.setEncryptionCertificate(spX509Key);\n            return true;\n        }\n        return false;\n    }","id":39336,"modified_method":"protected boolean initSP() {\n        KeystoreVO keyStoreVO = _ksDao.findByName(SAMLPluginConstants.SAMLSP_KEYPAIR);\n        if (keyStoreVO == null) {\n            try {\n                KeyPair keyPair = SAMLUtils.generateRandomKeyPair();\n                _ksDao.save(SAMLPluginConstants.SAMLSP_KEYPAIR, SAMLUtils.savePrivateKey(keyPair.getPrivate()), SAMLUtils.savePublicKey(keyPair.getPublic()), \"samlsp-keypair\");\n                keyStoreVO = _ksDao.findByName(SAMLPluginConstants.SAMLSP_KEYPAIR);\n                s_logger.info(\"No SAML keystore found, created and saved a new Service Provider keypair\");\n            } catch (NoSuchProviderException | NoSuchAlgorithmException e) {\n                s_logger.error(\"Unable to create and save SAML keypair: \" + e.toString());\n            }\n        }\n\n        String spId = SAMLServiceProviderID.value();\n        String spSsoUrl = SAMLServiceProviderSingleSignOnURL.value();\n        String spSloUrl = SAMLServiceProviderSingleLogOutURL.value();\n        String spOrgName = SAMLServiceProviderOrgName.value();\n        String spOrgUrl = SAMLServiceProviderOrgUrl.value();\n        String spContactPersonName = SAMLServiceProviderContactPersonName.value();\n        String spContactPersonEmail = SAMLServiceProviderContactEmail.value();\n        KeyPair spKeyPair = null;\n        X509Certificate spX509Key = null;\n        if (keyStoreVO != null) {\n            PrivateKey privateKey = SAMLUtils.loadPrivateKey(keyStoreVO.getCertificate());\n            PublicKey publicKey = SAMLUtils.loadPublicKey(keyStoreVO.getKey());\n            if (privateKey != null && publicKey != null) {\n                spKeyPair = new KeyPair(publicKey, privateKey);\n                KeystoreVO x509VO = _ksDao.findByName(SAMLPluginConstants.SAMLSP_X509CERT);\n                if (x509VO == null) {\n                    try {\n                        spX509Key = SAMLUtils.generateRandomX509Certificate(spKeyPair);\n                        ByteArrayOutputStream bos = new ByteArrayOutputStream();\n                        ObjectOutput out = new ObjectOutputStream(bos);\n                        out.writeObject(spX509Key);\n                        out.flush();\n                        _ksDao.save(SAMLPluginConstants.SAMLSP_X509CERT, Base64.encodeBase64String(bos.toByteArray()), \"\", \"samlsp-x509cert\");\n                        bos.close();\n                    } catch (NoSuchAlgorithmException | NoSuchProviderException | CertificateEncodingException | SignatureException | InvalidKeyException | IOException e) {\n                        s_logger.error(\"SAML Plugin won't be able to use X509 signed authentication\");\n                    }\n                } else {\n                    try {\n                        ByteArrayInputStream bi = new ByteArrayInputStream(Base64.decodeBase64(x509VO.getCertificate()));\n                        ObjectInputStream si = new ObjectInputStream(bi);\n                        spX509Key = (X509Certificate) si.readObject();\n                        bi.close();\n                    } catch (IOException | ClassNotFoundException ignored) {\n                        s_logger.error(\"SAML Plugin won't be able to use X509 signed authentication. Failed to load X509 Certificate from Database.\");\n                    }\n                }\n            }\n        }\n        if (spKeyPair != null && spX509Key != null\n                && spId != null && spSsoUrl != null && spSloUrl != null\n                && spOrgName != null && spOrgUrl != null\n                && spContactPersonName != null && spContactPersonEmail != null) {\n            _spMetadata.setEntityId(spId);\n            _spMetadata.setOrganizationName(spOrgName);\n            _spMetadata.setOrganizationUrl(spOrgUrl);\n            _spMetadata.setContactPersonName(spContactPersonName);\n            _spMetadata.setContactPersonEmail(spContactPersonEmail);\n            _spMetadata.setSsoUrl(spSsoUrl);\n            _spMetadata.setSloUrl(spSloUrl);\n            _spMetadata.setKeyPair(spKeyPair);\n            _spMetadata.setSigningCertificate(spX509Key);\n            _spMetadata.setEncryptionCertificate(spX509Key);\n            return true;\n        }\n        return false;\n    }","commit_id":"b631da2542e3cdc373f4accbd612e11c6c6b89cc","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean start() {\n        if (isSAMLPluginEnabled()) {\n            setup();\n            s_logger.info(\"SAML auth plugin loaded\");\n        } else {\n            s_logger.info(\"SAML auth plugin not enabled so not loading\");\n        }\n        return super.start();\n    }","id":39337,"modified_method":"@Override\n    public boolean start() {\n        if (isSAMLPluginEnabled()) {\n            s_logger.info(\"SAML auth plugin loaded\");\n            return setup();\n        } else {\n            s_logger.info(\"SAML auth plugin not enabled so not loading\");\n            return super.start();\n        }\n    }","commit_id":"b631da2542e3cdc373f4accbd612e11c6c6b89cc","url":"https://github.com/apache/cloudstack"},{"original_method":"private boolean setup() {\n        if (!initSP()) {\n            s_logger.error(\"SAML Plugin failed to initialize, please fix the configuration and restart management server\");\n            return false;\n        }\n        _timer = new Timer();\n        final HttpClient client = new HttpClient();\n        final String idpMetaDataUrl = SAMLIdentityProviderMetadataURL.value();\n        if (SAMLTimeout.value() != null && SAMLTimeout.value() > SAMLPluginConstants.SAML_REFRESH_INTERVAL) {\n            _refreshInterval = SAMLTimeout.value();\n        }\n        try {\n            DefaultBootstrap.bootstrap();\n            if (idpMetaDataUrl.startsWith(\"http\")) {\n                _idpMetaDataProvider = new HTTPMetadataProvider(_timer, client, idpMetaDataUrl);\n            } else {\n                File metadataFile = PropertiesUtil.findConfigFile(idpMetaDataUrl);\n                s_logger.debug(\"Provided Metadata is not a URL, trying to read metadata file from local path: \" + metadataFile.getAbsolutePath());\n                _idpMetaDataProvider = new FilesystemMetadataProvider(_timer, metadataFile);\n            }\n            _idpMetaDataProvider.setRequireValidMetadata(true);\n            _idpMetaDataProvider.setParserPool(new BasicParserPool());\n            _idpMetaDataProvider.initialize();\n            _timer.scheduleAtFixedRate(new MetadataRefreshTask(), 0, _refreshInterval * 1000);\n        } catch (MetadataProviderException e) {\n            s_logger.error(\"Unable to read SAML2 IDP MetaData URL, error:\" + e.getMessage());\n            s_logger.error(\"SAML2 Authentication may be unavailable\");\n        } catch (ConfigurationException | FactoryConfigurationError e) {\n            s_logger.error(\"OpenSAML bootstrapping failed: error: \" + e.getMessage());\n        } catch (NullPointerException e) {\n            s_logger.error(\"Unable to setup SAML Auth Plugin due to NullPointerException\" +\n                    \" please check the SAML global settings: \" + e.getMessage());\n        }\n        return true;\n    }","id":39338,"modified_method":"private boolean setup() {\n        if (!initSP()) {\n            s_logger.error(\"SAML Plugin failed to initialize, please fix the configuration and restart management server\");\n            return false;\n        }\n        _timer = new Timer();\n        final HttpClient client = new HttpClient();\n        final String idpMetaDataUrl = getSAMLIdentityProviderMetadataURL();\n        if (SAMLTimeout.value() != null && SAMLTimeout.value() > SAMLPluginConstants.SAML_REFRESH_INTERVAL) {\n            _refreshInterval = SAMLTimeout.value();\n        }\n        try {\n            DefaultBootstrap.bootstrap();\n            if (idpMetaDataUrl.startsWith(\"http\")) {\n                _idpMetaDataProvider = new HTTPMetadataProvider(_timer, client, idpMetaDataUrl);\n            } else {\n                File metadataFile = PropertiesUtil.findConfigFile(idpMetaDataUrl);\n                if (metadataFile == null) {\n                    s_logger.error(\"Provided Metadata is not a URL, Unable to locate metadata file from local path: \" + idpMetaDataUrl);\n                    return false;\n                }\n                else{\n                    s_logger.debug(\"Provided Metadata is not a URL, trying to read metadata file from local path: \" + metadataFile.getAbsolutePath());\n                    _idpMetaDataProvider = new FilesystemMetadataProvider(_timer, metadataFile);\n                }\n            }\n            _idpMetaDataProvider.setRequireValidMetadata(true);\n            _idpMetaDataProvider.setParserPool(new BasicParserPool());\n            _idpMetaDataProvider.initialize();\n            _timer.scheduleAtFixedRate(new MetadataRefreshTask(), 0, _refreshInterval * 1000);\n\n        } catch (MetadataProviderException e) {\n            s_logger.error(\"Unable to read SAML2 IDP MetaData URL, error:\" + e.getMessage());\n            s_logger.error(\"SAML2 Authentication may be unavailable\");\n            return false;\n        } catch (ConfigurationException | FactoryConfigurationError e) {\n            s_logger.error(\"OpenSAML bootstrapping failed: error: \" + e.getMessage());\n            return false;\n        } catch (NullPointerException e) {\n            s_logger.error(\"Unable to setup SAML Auth Plugin due to NullPointerException\" +\n                    \" please check the SAML global settings: \" + e.getMessage());\n            return false;\n        }\n        return true;\n    }","commit_id":"b631da2542e3cdc373f4accbd612e11c6c6b89cc","url":"https://github.com/apache/cloudstack"},{"original_method":"public static void updateMethodPresentation(PsiMethod method, @Nullable PsiSubstitutor substitutor, ParameterInfoUIContext context) {\n    CodeInsightSettings settings = CodeInsightSettings.getInstance();\n\n    if (!method.isValid() || substitutor != null && !substitutor.isValid()) {\n      context.setUIComponentEnabled(false);\n      return;\n    }\n\n    StringBuilder buffer = new StringBuilder();\n\n    if (settings.SHOW_FULL_SIGNATURES_IN_PARAMETER_INFO) {\n      if (!method.isConstructor()) {\n        PsiType returnType = method.getReturnType();\n        if (substitutor != null) {\n          returnType = substitutor.substitute(returnType);\n        }\n\n        appendModifierList(buffer, method);\n        buffer.append(returnType.getPresentableText());\n        buffer.append(\" \");\n      }\n      buffer.append(method.getName());\n      buffer.append(\"(\");\n    }\n\n    final int currentParameter = context.getCurrentParameterIndex();\n\n    PsiParameter[] parms = method.getParameterList().getParameters();\n    int numParams = parms.length;\n    int highlightStartOffset = -1;\n    int highlightEndOffset = -1;\n    if (numParams > 0) {\n      for (int j = 0; j < numParams; j++) {\n        PsiParameter param = parms[j];\n\n        int startOffset = buffer.length();\n\n        if (param.isValid()) {\n          PsiType paramType = param.getType();\n          assert paramType.isValid();\n          if (substitutor != null) {\n            assert substitutor.isValid();\n            paramType = substitutor.substitute(paramType);\n          }\n          appendModifierList(buffer, param);\n          buffer.append(StringUtil.escapeXml(paramType.getPresentableText()));\n          String name = param.getName();\n          if (name != null) {\n            buffer.append(\" \");\n            buffer.append(name);\n          }\n        }\n\n        int endOffset = buffer.length();\n\n        if (j < numParams - 1) {\n          buffer.append(\", \");\n        }\n\n        if (context.isUIComponentEnabled() &&\n            (j == currentParameter || j == numParams - 1 && param.isVarArgs() && currentParameter >= numParams)) {\n          highlightStartOffset = startOffset;\n          highlightEndOffset = endOffset;\n        }\n      }\n    }\n    else {\n      buffer.append(CodeInsightBundle.message(\"parameter.info.no.parameters\"));\n    }\n\n    if (settings.SHOW_FULL_SIGNATURES_IN_PARAMETER_INFO) {\n      buffer.append(\")\");\n    }\n\n    context.setupUIComponentPresentation(\n      buffer.toString(),\n      highlightStartOffset,\n      highlightEndOffset,\n      !context.isUIComponentEnabled(),\n      method.isDeprecated(),\n      false,\n      context.getDefaultParameterColor()\n    );\n  }","id":39339,"modified_method":"public static String updateMethodPresentation(PsiMethod method, @Nullable PsiSubstitutor substitutor, ParameterInfoUIContext context) {\n    CodeInsightSettings settings = CodeInsightSettings.getInstance();\n\n    if (!method.isValid() || substitutor != null && !substitutor.isValid()) {\n      context.setUIComponentEnabled(false);\n      return null;\n    }\n\n    StringBuilder buffer = new StringBuilder();\n\n    if (settings.SHOW_FULL_SIGNATURES_IN_PARAMETER_INFO) {\n      if (!method.isConstructor()) {\n        PsiType returnType = method.getReturnType();\n        if (substitutor != null) {\n          returnType = substitutor.substitute(returnType);\n        }\n\n        appendModifierList(buffer, method);\n        buffer.append(returnType.getPresentableText());\n        buffer.append(\" \");\n      }\n      buffer.append(method.getName());\n      buffer.append(\"(\");\n    }\n\n    final int currentParameter = context.getCurrentParameterIndex();\n\n    PsiParameter[] parms = method.getParameterList().getParameters();\n    int numParams = parms.length;\n    int highlightStartOffset = -1;\n    int highlightEndOffset = -1;\n    if (numParams > 0) {\n      for (int j = 0; j < numParams; j++) {\n        PsiParameter param = parms[j];\n\n        int startOffset = buffer.length();\n\n        if (param.isValid()) {\n          PsiType paramType = param.getType();\n          assert paramType.isValid();\n          if (substitutor != null) {\n            assert substitutor.isValid();\n            paramType = substitutor.substitute(paramType);\n          }\n          appendModifierList(buffer, param);\n          buffer.append(paramType.getPresentableText());\n          String name = param.getName();\n          if (name != null) {\n            buffer.append(\" \");\n            buffer.append(name);\n          }\n        }\n\n        int endOffset = XmlStringUtil.escapeString(buffer.toString()).length();\n\n        if (j < numParams - 1) {\n          buffer.append(\", \");\n        }\n\n        if (context.isUIComponentEnabled() &&\n            (j == currentParameter || j == numParams - 1 && param.isVarArgs() && currentParameter >= numParams)) {\n          highlightStartOffset = startOffset;\n          highlightEndOffset = endOffset;\n        }\n      }\n    }\n    else {\n      buffer.append(CodeInsightBundle.message(\"parameter.info.no.parameters\"));\n    }\n\n    if (settings.SHOW_FULL_SIGNATURES_IN_PARAMETER_INFO) {\n      buffer.append(\")\");\n    }\n\n    return context.setupUIComponentPresentation(\n      buffer.toString(),\n      highlightStartOffset,\n      highlightEndOffset,\n      !context.isUIComponentEnabled(),\n      method.isDeprecated(),\n      false,\n      context.getDefaultParameterColor()\n    );\n  }","commit_id":"c6e41b5df671374f63bfeef857cf5e10708311bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void setupUIComponentPresentation(final String _text, final int highlightStartOffset, final int highlightEndOffset,\n                                           final boolean isDisabled, final boolean strikeout, final boolean isDisabledBeforeHighlight,\n                                           final Color background) {\n    text = _text;\n    highlightStart = highlightStartOffset;\n  }","id":39340,"modified_method":"@Override\n  public String setupUIComponentPresentation(final String _text, final int highlightStartOffset, final int highlightEndOffset,\n                                             final boolean isDisabled, final boolean strikeout, final boolean isDisabledBeforeHighlight,\n                                             final Color background) {\n    text = _text;\n    highlightStart = highlightStartOffset;\n    return _text;\n  }","commit_id":"c6e41b5df671374f63bfeef857cf5e10708311bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void setupUIComponentPresentation(String text,\n                                             int highlightStartOffset,\n                                             int highlightEndOffset,\n                                             boolean isDisabled,\n                                             boolean strikeout,\n                                             boolean isDisabledBeforeHighlight,\n                                             Color background) {\n      myPanels[i].setup(text, highlightStartOffset, highlightEndOffset, isDisabled, strikeout, isDisabledBeforeHighlight, background);\n      myPanels[i].setBorder(isLastParameterOwner() ? BACKGROUND_BORDER : new SideBorder(new JBColor(JBColor.LIGHT_GRAY, Gray._90), SideBorder.BOTTOM));\n    }","id":39341,"modified_method":"@Override\n    public String setupUIComponentPresentation(String text,\n                                               int highlightStartOffset,\n                                               int highlightEndOffset,\n                                               boolean isDisabled,\n                                               boolean strikeout,\n                                               boolean isDisabledBeforeHighlight,\n                                               Color background) {\n      final String resultedText =\n        myPanels[i].setup(text, highlightStartOffset, highlightEndOffset, isDisabled, strikeout, isDisabledBeforeHighlight, background);\n      myPanels[i].setBorder(isLastParameterOwner() ? BACKGROUND_BORDER : new SideBorder(new JBColor(JBColor.LIGHT_GRAY, Gray._90), SideBorder.BOTTOM));\n      return resultedText;\n    }","commit_id":"c6e41b5df671374f63bfeef857cf5e10708311bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setup(final String[] texts, final EnumSet<ParameterInfoUIContextEx.Flag>[] flags, final Color background) {\n      removeAll();\n      final String[] lines = UIUtil.splitText(StringUtil.join(texts), getFontMetrics(BOLD_FONT), myWidthLimit, ',');\n\n      int index = 0;\n      int curOffset = 0;\n\n      myOneLineComponents = new OneLineComponent[lines.length];\n\n      Map<TextRange, ParameterInfoUIContextEx.Flag> flagsMap = new TreeMap<TextRange, ParameterInfoUIContextEx.Flag>(TEXT_RANGE_COMPARATOR);\n\n      int added = 0;\n      for (int i = 0; i < texts.length; i++) {\n        String line = texts[i];\n        if (lines.length <= index) break;\n        String text = lines[index];\n        final int paramCount = StringUtil.split(text, \", \").size();\n        final EnumSet<ParameterInfoUIContextEx.Flag> flag = flags[i];\n        if (flag.contains(ParameterInfoUIContextEx.Flag.HIGHLIGHT)) {\n          flagsMap.put(TextRange.create(curOffset, curOffset + line.trim().length()), ParameterInfoUIContextEx.Flag.HIGHLIGHT);\n        }\n\n        if (flag.contains(ParameterInfoUIContextEx.Flag.DISABLE)) {\n          flagsMap.put(TextRange.create(curOffset, curOffset + line.trim().length()), ParameterInfoUIContextEx.Flag.DISABLE);\n        }\n\n        if (flag.contains(ParameterInfoUIContextEx.Flag.STRIKEOUT)) {\n          flagsMap.put(TextRange.create(curOffset, curOffset + line.trim().length()), ParameterInfoUIContextEx.Flag.STRIKEOUT);\n        }\n\n        curOffset += line.length();\n        if (i == paramCount + added - 1) {\n          myOneLineComponents[index] = new OneLineComponent();\n          setBackground(background);\n          myOneLineComponents[index].setup(text, flagsMap, background);\n          add(myOneLineComponents[index], new GridBagConstraints(0, index, 1, 1, 1, 0, GridBagConstraints.WEST,\n                                                                 GridBagConstraints.NONE, new Insets(0, 0, 0, 0), 0, 0));\n          index += 1;\n          flagsMap.clear();\n          curOffset = 1;\n          added += paramCount;\n        }\n      }\n    }","id":39342,"modified_method":"public String setup(final String[] texts, final EnumSet<ParameterInfoUIContextEx.Flag>[] flags, final Color background) {\n      StringBuilder buf = new StringBuilder();\n      removeAll();\n      final String[] lines = UIUtil.splitText(StringUtil.join(texts), getFontMetrics(BOLD_FONT), myWidthLimit, ',');\n\n      int index = 0;\n      int curOffset = 0;\n\n      myOneLineComponents = new OneLineComponent[lines.length];\n\n      Map<TextRange, ParameterInfoUIContextEx.Flag> flagsMap = new TreeMap<TextRange, ParameterInfoUIContextEx.Flag>(TEXT_RANGE_COMPARATOR);\n\n      int added = 0;\n      for (int i = 0; i < texts.length; i++) {\n        String line = escapeString(texts[i]);\n        if (lines.length <= index) break;\n        String text = lines[index];\n        final int paramCount = StringUtil.split(text, \", \").size();\n        final EnumSet<ParameterInfoUIContextEx.Flag> flag = flags[i];\n        if (flag.contains(ParameterInfoUIContextEx.Flag.HIGHLIGHT)) {\n          flagsMap.put(TextRange.create(curOffset, curOffset + line.trim().length()), ParameterInfoUIContextEx.Flag.HIGHLIGHT);\n        }\n\n        if (flag.contains(ParameterInfoUIContextEx.Flag.DISABLE)) {\n          flagsMap.put(TextRange.create(curOffset, curOffset + line.trim().length()), ParameterInfoUIContextEx.Flag.DISABLE);\n        }\n\n        if (flag.contains(ParameterInfoUIContextEx.Flag.STRIKEOUT)) {\n          flagsMap.put(TextRange.create(curOffset, curOffset + line.trim().length()), ParameterInfoUIContextEx.Flag.STRIKEOUT);\n        }\n\n        curOffset += line.length();\n        if (i == paramCount + added - 1) {\n          myOneLineComponents[index] = new OneLineComponent();\n          setBackground(background);\n          buf.append(myOneLineComponents[index].setup(text, flagsMap, background));\n          add(myOneLineComponents[index], new GridBagConstraints(0, index, 1, 1, 1, 0, GridBagConstraints.WEST,\n                                                                 GridBagConstraints.NONE, new Insets(0, 0, 0, 0), 0, 0));\n          index += 1;\n          flagsMap.clear();\n          curOffset = 1;\n          added += paramCount;\n        }\n      }\n      return buf.toString();\n    }","commit_id":"c6e41b5df671374f63bfeef857cf5e10708311bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void setup(String text, int startOffset, int endOffset, boolean isDisabled, boolean isStrikeout, Color background) {\n      Map<TextRange, ParameterInfoUIContextEx.Flag> flagsMap = new TreeMap<TextRange, ParameterInfoUIContextEx.Flag>(TEXT_RANGE_COMPARATOR);\n      final TextRange highlight = TextRange.create(startOffset, endOffset);\n      if (!highlight.isEmpty())\n        flagsMap.put(highlight, ParameterInfoUIContextEx.Flag.HIGHLIGHT);\n      if (isDisabled)\n        flagsMap.put(TextRange.create(0, text.length()), ParameterInfoUIContextEx.Flag.DISABLE);\n      if (isStrikeout)\n        flagsMap.put(TextRange.create(0, text.length()), ParameterInfoUIContextEx.Flag.STRIKEOUT);\n      setup(text, flagsMap, background);\n    }","id":39343,"modified_method":"private String setup(String text, int startOffset, int endOffset, boolean isDisabled, boolean isStrikeout, Color background) {\n      Map<TextRange, ParameterInfoUIContextEx.Flag> flagsMap = new TreeMap<TextRange, ParameterInfoUIContextEx.Flag>(TEXT_RANGE_COMPARATOR);\n      final TextRange highlight = TextRange.create(startOffset, endOffset);\n      if (!highlight.isEmpty())\n        flagsMap.put(highlight, ParameterInfoUIContextEx.Flag.HIGHLIGHT);\n      if (isDisabled)\n        flagsMap.put(TextRange.create(0, text.length()), ParameterInfoUIContextEx.Flag.DISABLE);\n      if (isStrikeout)\n        flagsMap.put(TextRange.create(0, text.length()), ParameterInfoUIContextEx.Flag.STRIKEOUT);\n      return setup(text, flagsMap, background);\n    }","commit_id":"c6e41b5df671374f63bfeef857cf5e10708311bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void setup(@NotNull String text, @NotNull Map<TextRange, ParameterInfoUIContextEx.Flag> flagsMap, @NotNull Color background) {\n      myLabel.setBackground(background);\n      setBackground(background);\n\n      myLabel.setForeground(JBColor.foreground());\n\n      if (flagsMap.isEmpty()) {\n        myLabel.setText(XmlStringUtil.wrapInHtml(XmlStringUtil.escapeString(text)));\n      }\n      else {\n        String labelText = buildLabelText(text, flagsMap);\n        myLabel.setText(labelText);\n      }\n\n      //IDEA-95904 Darcula parameter info pop-up colors hard to read\n      if (UIUtil.isUnderDarcula()) {\n        myLabel.setText(myLabel.getText().replace(\"<b>\", \"<b color=ffC800>\"));\n      }\n    }","id":39344,"modified_method":"private String setup(@NotNull String text, @NotNull Map<TextRange, ParameterInfoUIContextEx.Flag> flagsMap, @NotNull Color background) {\n      myLabel.setBackground(background);\n      setBackground(background);\n\n      myLabel.setForeground(JBColor.foreground());\n\n      if (flagsMap.isEmpty()) {\n        myLabel.setText(XmlStringUtil.wrapInHtml(text));\n      }\n      else {\n        String labelText = buildLabelText(text, flagsMap);\n        myLabel.setText(labelText);\n      }\n\n      //IDEA-95904 Darcula parameter info pop-up colors hard to read\n      if (UIUtil.isUnderDarcula()) {\n        myLabel.setText(myLabel.getText().replace(\"<b>\", \"<b color=ffC800>\"));\n      }\n      return myLabel.getText();\n    }","commit_id":"c6e41b5df671374f63bfeef857cf5e10708311bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ParameterInfoComponent(Object[] objects, Editor editor, @NotNull ParameterInfoHandler handler) {\n    super(new BorderLayout());\n\n    JComponent editorComponent = editor.getComponent();\n    JLayeredPane layeredPane = editorComponent.getRootPane().getLayeredPane();\n    myWidthLimit = layeredPane.getWidth();\n\n    NORMAL_FONT = UIUtil.getLabelFont();\n    BOLD_FONT = NORMAL_FONT.deriveFont(Font.BOLD);\n\n    myObjects = objects;\n\n    setBackground(BACKGROUND_COLOR);\n\n    myHandler = handler;\n    myPanels = new OneElementComponent[myObjects.length];\n    final JPanel panel = new JPanel(new GridBagLayout());\n    for (int i = 0; i < myObjects.length; i++) {\n      myPanels[i] = new OneElementComponent();\n      panel.add(myPanels[i], new GridBagConstraints(0, i, 1, 1, 1, 0,\n                                                    GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL,\n                                                    new Insets(0, 0, 0, 0), 0, 0));\n    }\n\n    final JScrollPane pane = ScrollPaneFactory.createScrollPane(panel);\n    pane.setBorder(null);\n    pane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);\n    add(pane, BorderLayout.CENTER);\n\n    myCurrentParameterIndex = -1;\n  }","id":39345,"modified_method":"ParameterInfoComponent(Object[] objects, Editor editor, @NotNull ParameterInfoHandler handler) {\n    super(new BorderLayout());\n\n    if (!ApplicationManager.getApplication().isUnitTestMode()) {\n      JComponent editorComponent = editor.getComponent();\n      JLayeredPane layeredPane = editorComponent.getRootPane().getLayeredPane();\n      myWidthLimit = layeredPane.getWidth();\n    }\n\n    NORMAL_FONT = UIUtil.getLabelFont();\n    BOLD_FONT = NORMAL_FONT.deriveFont(Font.BOLD);\n\n    myObjects = objects;\n\n    setBackground(BACKGROUND_COLOR);\n\n    myHandler = handler;\n    myPanels = new OneElementComponent[myObjects.length];\n    final JPanel panel = new JPanel(new GridBagLayout());\n    for (int i = 0; i < myObjects.length; i++) {\n      myPanels[i] = new OneElementComponent();\n      panel.add(myPanels[i], new GridBagConstraints(0, i, 1, 1, 1, 0,\n                                                    GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL,\n                                                    new Insets(0, 0, 0, 0), 0, 0));\n    }\n\n    final JScrollPane pane = ScrollPaneFactory.createScrollPane(panel);\n    pane.setBorder(null);\n    pane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);\n    add(pane, BorderLayout.CENTER);\n\n    myCurrentParameterIndex = -1;\n  }","commit_id":"c6e41b5df671374f63bfeef857cf5e10708311bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void setup(String text, int highlightStartOffset, int highlightEndOffset, boolean isDisabled, boolean strikeout, boolean isDisabledBeforeHighlight, Color background) {\n      removeAll();\n\n      String[] lines = UIUtil.splitText(text, getFontMetrics(BOLD_FONT), myWidthLimit, ',');\n\n      myOneLineComponents = new OneLineComponent[lines.length];\n\n      int lineOffset = 0;\n\n      for (int i = 0; i < lines.length; i++) {\n        String line = lines[i];\n\n        myOneLineComponents[i] = new OneLineComponent();\n\n        int startOffset = -1;\n        int endOffset = -1;\n        if (highlightStartOffset >= 0 && highlightEndOffset > lineOffset && highlightStartOffset < lineOffset + line.length()) {\n          startOffset = Math.max(highlightStartOffset - lineOffset, 0);\n          endOffset = Math.min(highlightEndOffset - lineOffset, line.length());\n        }\n\n        myOneLineComponents[i].setup(line, startOffset, endOffset, isDisabled, strikeout, background);\n\n        if (isDisabledBeforeHighlight) {\n          if (highlightStartOffset < 0 || highlightEndOffset > lineOffset) {\n            myOneLineComponents[i].setDisabledBeforeHighlight();\n          }\n        }\n\n        add(myOneLineComponents[i], new GridBagConstraints(0,i,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0));\n\n        lineOffset += line.length();\n      }\n    }","id":39346,"modified_method":"private String setup(String text, int highlightStartOffset, int highlightEndOffset, boolean isDisabled, boolean strikeout, boolean isDisabledBeforeHighlight, Color background) {\n      StringBuilder buf = new StringBuilder();\n      removeAll();\n\n      String[] lines = UIUtil.splitText(text, getFontMetrics(BOLD_FONT), myWidthLimit, ',');\n\n      myOneLineComponents = new OneLineComponent[lines.length];\n\n      int lineOffset = 0;\n\n      for (int i = 0; i < lines.length; i++) {\n        String line = escapeString(lines[i]);\n\n        myOneLineComponents[i] = new OneLineComponent();\n\n        int startOffset = -1;\n        int endOffset = -1;\n        if (highlightStartOffset >= 0 && highlightEndOffset > lineOffset && highlightStartOffset < lineOffset + line.length()) {\n          startOffset = Math.max(highlightStartOffset - lineOffset, 0);\n          endOffset = Math.min(highlightEndOffset - lineOffset, line.length());\n        }\n\n        buf.append(myOneLineComponents[i].setup(line, startOffset, endOffset, isDisabled, strikeout, background));\n\n        if (isDisabledBeforeHighlight) {\n          if (highlightStartOffset < 0 || highlightEndOffset > lineOffset) {\n            myOneLineComponents[i].setDisabledBeforeHighlight();\n          }\n        }\n\n        add(myOneLineComponents[i], new GridBagConstraints(0,i,1,1,1,0,GridBagConstraints.WEST,GridBagConstraints.HORIZONTAL,new Insets(0,0,0,0),0,0));\n\n        lineOffset += line.length();\n      }\n      return buf.toString();\n    }","commit_id":"c6e41b5df671374f63bfeef857cf5e10708311bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void setupUIComponentPresentation(final String[] texts, final EnumSet<Flag>[] flags, final Color background) {\n      myPanels[i].setup(texts, flags, background);\n      myPanels[i].setBorder(isLastParameterOwner() ? BACKGROUND_BORDER : new SideBorder(new JBColor(JBColor.LIGHT_GRAY, Gray._90), SideBorder.BOTTOM));\n    }","id":39347,"modified_method":"@Override\n    public String setupUIComponentPresentation(final String[] texts, final EnumSet<Flag>[] flags, final Color background) {\n      final String resultedText = myPanels[i].setup(texts, flags, background);\n      myPanels[i].setBorder(isLastParameterOwner() ? BACKGROUND_BORDER : new SideBorder(new JBColor(JBColor.LIGHT_GRAY, Gray._90), SideBorder.BOTTOM));\n      return resultedText;\n    }","commit_id":"c6e41b5df671374f63bfeef857cf5e10708311bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public ContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        return new ClassLoaderContextHandle(classLoader);\n    }","id":39348,"modified_method":"@Override\n    public SetupContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        return new ClassLoaderSetupContextHandle(classLoader);\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void writeHandle(ContextHandle contextHandle, ObjectOutputStream out) throws IOException {\n    }","id":39349,"modified_method":"@Override\n    public void writeSetupContextHandle(SetupContextHandle contextHandle, ObjectOutputStream out) throws IOException {\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ContextHandle readHandle(ObjectInputStream in) throws IOException, ClassNotFoundException {\n        return new ClassLoaderContextHandle(classLoader);\n    }","id":39350,"modified_method":"@Override\n    public SetupContextHandle readSetupContextHandle(ObjectInputStream in) throws IOException, ClassNotFoundException {\n        return new ClassLoaderSetupContextHandle(classLoader);\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Saves the current invocation context on a chained context handle.\n     * @param contextService\n     * @param contextObjectProperties\n     * @return\n     */\n    public ContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        final List<ContextHandle> handles = new ArrayList<>(factoryOrderedList.size());\n        for (ContextHandleFactory factory : factoryOrderedList) {\n            handles.add(factory.saveContext(contextService, contextObjectProperties));\n        }\n        return new ChainedContextHandle(this, handles);\n    }","id":39351,"modified_method":"/**\n     * Saves the current invocation context on a chained context handle.\n     * @param contextService\n     * @param contextObjectProperties\n     * @return\n     */\n    public SetupContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        final List<SetupContextHandle> handles = new ArrayList<>(factoryOrderedList.size());\n        for (ContextHandleFactory factory : factoryOrderedList) {\n            handles.add(factory.saveContext(contextService, contextObjectProperties));\n        }\n        return new ChainedSetupContextHandle(this, handles);\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void reset(org.glassfish.enterprise.concurrent.spi.ContextHandle contextHandle) {\n        ((ContextHandle) contextHandle).reset();\n    }","id":39352,"modified_method":"@Override\n    public void reset(org.glassfish.enterprise.concurrent.spi.ContextHandle contextHandle) {\n        ((ResetContextHandle) contextHandle).reset();\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public org.glassfish.enterprise.concurrent.spi.ContextHandle setup(org.glassfish.enterprise.concurrent.spi.ContextHandle contextHandle) throws IllegalStateException {\n        ((ContextHandle) contextHandle).setup();\n        return contextHandle;\n    }","id":39353,"modified_method":"@Override\n    public org.glassfish.enterprise.concurrent.spi.ContextHandle setup(org.glassfish.enterprise.concurrent.spi.ContextHandle contextHandle) throws IllegalStateException {\n        return ((SetupContextHandle) contextHandle).setup();\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void writeHandle(ContextHandle contextHandle, ObjectOutputStream out) throws IOException {\n        out.writeObject(contextHandle);\n    }","id":39354,"modified_method":"@Override\n    public void writeSetupContextHandle(SetupContextHandle contextHandle, ObjectOutputStream out) throws IOException {\n        out.writeObject(contextHandle);\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ContextHandle readHandle(ObjectInputStream in) throws IOException, ClassNotFoundException {\n        return (ContextHandle) in.readObject();\n    }","id":39355,"modified_method":"@Override\n    public SetupContextHandle readSetupContextHandle(ObjectInputStream in) throws IOException, ClassNotFoundException {\n        return (SetupContextHandle) in.readObject();\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        return new EJBContextHandle();\n    }","id":39356,"modified_method":"@Override\n    public SetupContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        return new EJBContextHandle();\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void setup() throws IllegalStateException {\n            if(interceptorContext != null) {\n                CurrentInvocationContext.push(interceptorContext);\n            }\n        }","id":39357,"modified_method":"@Override\n        public ResetContextHandle setup() throws IllegalStateException {\n            if(interceptorContext != null) {\n                CurrentInvocationContext.push(interceptorContext);\n            }\n            return this;\n        }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        return new NamingContextHandle(namespaceContextSelector,duServiceName);\n    }","id":39358,"modified_method":"@Override\n    public SetupContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        return new NamingContextHandle(namespaceContextSelector,duServiceName);\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void setup() throws IllegalStateException {\n            if(namespaceContextSelector != null) {\n                NamespaceContextSelector.pushCurrentSelector(namespaceContextSelector);\n            }\n            if(duServiceName != null) {\n                WritableServiceBasedNamingStore.pushOwner(duServiceName);\n            }\n        }","id":39359,"modified_method":"@Override\n        public ResetContextHandle setup() throws IllegalStateException {\n            if(namespaceContextSelector != null) {\n                NamespaceContextSelector.pushCurrentSelector(namespaceContextSelector);\n            }\n            if(duServiceName != null) {\n                WritableServiceBasedNamingStore.pushOwner(duServiceName);\n            }\n            return this;\n        }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ContextHandle readHandle(ObjectInputStream in) throws IOException, ClassNotFoundException {\n        return new NamingContextHandle(namespaceContextSelector,duServiceName);\n    }","id":39360,"modified_method":"@Override\n    public SetupContextHandle readSetupContextHandle(ObjectInputStream in) throws IOException, ClassNotFoundException {\n        return new NamingContextHandle(namespaceContextSelector,duServiceName);\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void writeHandle(ContextHandle contextHandle, ObjectOutputStream out) throws IOException {\n    }","id":39361,"modified_method":"@Override\n    public void writeSetupContextHandle(SetupContextHandle contextHandle, ObjectOutputStream out) throws IOException {\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void setup() throws IllegalStateException {\n\n    }","id":39362,"modified_method":"@Override\n    public ResetContextHandle setup() throws IllegalStateException {\n        return this;\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        return new OtherEESetupActionsContextHandle(setupActions);\n    }","id":39363,"modified_method":"@Override\n    public SetupContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        return new OtherEESetupActionsSetupContextHandle(setupActions);\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ContextHandle readHandle(ObjectInputStream in) throws IOException, ClassNotFoundException {\n        return new OtherEESetupActionsContextHandle(setupActions);\n    }","id":39364,"modified_method":"@Override\n    public SetupContextHandle readSetupContextHandle(ObjectInputStream in) throws IOException, ClassNotFoundException {\n        return new OtherEESetupActionsSetupContextHandle(setupActions);\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void writeHandle(ContextHandle contextHandle, ObjectOutputStream out) throws IOException {\n    }","id":39365,"modified_method":"@Override\n    public void writeSetupContextHandle(SetupContextHandle contextHandle, ObjectOutputStream out) throws IOException {\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ContextHandle readHandle(ObjectInputStream in) throws IOException, ClassNotFoundException {\n        return (ContextHandle) in.readObject();\n    }","id":39366,"modified_method":"@Override\n    public SetupContextHandle readSetupContextHandle(ObjectInputStream in) throws IOException, ClassNotFoundException {\n        return (SetupContextHandle) in.readObject();\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void writeHandle(ContextHandle contextHandle, ObjectOutputStream out) throws IOException {\n        out.writeObject(contextHandle);\n    }","id":39367,"modified_method":"@Override\n    public void writeSetupContextHandle(SetupContextHandle contextHandle, ObjectOutputStream out) throws IOException {\n        out.writeObject(contextHandle);\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        return new SecurityContextHandle();\n    }","id":39368,"modified_method":"@Override\n    public SetupContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        return new SecuritySetupContextHandle();\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ContextHandle readHandle(ObjectInputStream in) throws IOException, ClassNotFoundException {\n        return new TransactionLeakContextHandle(transactionManager);\n    }","id":39369,"modified_method":"@Override\n    public SetupContextHandle readSetupContextHandle(ObjectInputStream in) throws IOException, ClassNotFoundException {\n        return new TransactionLeakSetupContextHandle(transactionManager);\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        return new TransactionLeakContextHandle(transactionManager);\n    }","id":39370,"modified_method":"@Override\n    public SetupContextHandle saveContext(ContextService contextService, Map<String, String> contextObjectProperties) {\n        return new TransactionLeakSetupContextHandle(transactionManager);\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void writeHandle(ContextHandle contextHandle, ObjectOutputStream out) throws IOException {\n    }","id":39371,"modified_method":"@Override\n    public void writeSetupContextHandle(SetupContextHandle contextHandle, ObjectOutputStream out) throws IOException {\n    }","commit_id":"c3fc08e3fe8ed6f235c6fb8a4ca8b1de3973a140","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Initializes the XWiki context.\n     * \n     * @param request the request being processed\n     * @param response the response\n     * @throws ServletException if the initialization fails\n     */\n    protected void initializeXWikiContext(ServletRequest request, ServletResponse response) throws ServletException\n    {\n        XWikiEngineContext xwikiEngine = new XWikiServletContext(filterConfig.getServletContext());\n        XWikiRequest xwikiRequest = new XWikiServletRequest((HttpServletRequest) request);\n        XWikiResponse xwikiResponse = new XWikiServletResponse((HttpServletResponse) response);\n\n        XWikiContext context;\n        try {\n            // Create the XWiki context.\n            context = Utils.prepareContext(\"\", xwikiRequest, xwikiResponse, xwikiEngine);\n            // Initialize the XWiki database. XWiki#getXWiki(XWikiContext) calls XWikiContext.setWiki(XWiki).\n            context.setURLFactory(XWiki.getXWiki(context).getURLFactoryService().createURLFactory(context.getMode(),\n                context));\n        } catch (XWikiException e) {\n            throw new ServletException(\"Failed to prepare the XWiki context.\", e);\n        }\n\n        // Initialize the Container component which is the new way of transporting the Context in the new component\n        // architecture.\n        initializeContainerComponent(context);\n    }","id":39372,"modified_method":"/**\n     * Initializes the XWiki context.\n     * \n     * @param request the request being processed\n     * @param response the response\n     * @throws ServletException if the initialization fails\n     */\n    protected void initializeXWikiContext(ServletRequest request, ServletResponse response) throws ServletException\n    {\n        try {\n            // Not all request types specify an action (e.g. GWT-RPC) so we default to the empty string.\n            String action = \"\";\n            XWikiServletContext xwikiEngine = new XWikiServletContext(filterConfig.getServletContext());\n            XWikiServletRequest xwikiRequest = new XWikiServletRequest((HttpServletRequest) request);\n            XWikiServletResponse xwikiResponse = new XWikiServletResponse((HttpServletResponse) response);\n\n            // Create the XWiki context.\n            XWikiContext context = Utils.prepareContext(action, xwikiRequest, xwikiResponse, xwikiEngine);\n\n            // Initialize the Container component which is the new way of transporting the Context in the new component\n            // architecture. Further initialization might require the Container component.\n            initializeContainerComponent(context);\n\n            // Initialize the XWiki database. XWiki#getXWiki(XWikiContext) calls XWikiContext.setWiki(XWiki).\n            XWiki xwiki = XWiki.getXWiki(context);\n\n            // Initialize the URL factory.\n            context.setURLFactory(xwiki.getURLFactoryService().createURLFactory(context.getMode(), context));\n\n            // Initialize the current user.\n            XWikiUser user = context.getWiki().checkAuth(context);\n            if (user != null) {\n                context.setUser(user.getUser());\n            }\n        } catch (XWikiException e) {\n            throw new ServletException(\"Failed to initialize the XWiki context.\", e);\n        }\n    }","commit_id":"821278dcf5072a42d5c4b9c7a7666f2aec9322ab","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private String exportHTML(XWikiContext context) throws XWikiException, IOException\r\n    {\r\n        XWikiRequest request = context.getRequest();\r\n\r\n        String description = request.get(\"description\");\r\n        String name = request.get(\"name\");\r\n        String[] pages = request.getParameterValues(\"pages\");\r\n\r\n        List pageList;\r\n        if (pages == null || pages.length == 0) {\r\n            pageList = new ArrayList();\r\n            pageList.add(context.getDoc().getFullName());\r\n\r\n            if (name == null || name.trim().length() == 0) {\r\n                name = context.getDoc().getFullName();\r\n            }\r\n        } else {\r\n            pageList = Arrays.asList(pages);\r\n        }\r\n\r\n        HtmlPackager packager = new HtmlPackager();\r\n\r\n        if (name != null && name.trim().length() > 0) {\r\n            packager.setName(name);\r\n        }\r\n\r\n        if (description != null) {\r\n            packager.setDescription(description);\r\n        }\r\n        \r\n        packager.addPages(pageList);\r\n        \r\n        packager.export(context);\r\n        \r\n        return null;\r\n    }","id":39373,"modified_method":"/**\r\n     * Create ZIP archive containing wiki pages rendered in HTML, attached files and used skins.\r\n     * \r\n     * @param context the XWiki context.\r\n     * @return always return null.\r\n     * @throws XWikiException error when exporting HTML ZIP package.\r\n     * @throws IOException error when exporting HTML ZIP package.\r\n     */\r\n    private String exportHTML(XWikiContext context) throws XWikiException, IOException\r\n    {\r\n        XWikiRequest request = context.getRequest();\r\n\r\n        String description = request.get(\"description\");\r\n        String name = request.get(\"name\");\r\n        String[] pages = request.getParameterValues(\"pages\");\r\n\r\n        List pageList = new ArrayList();;\r\n        if (pages == null || pages.length == 0) {\r\n            pageList.add(context.getDoc().getFullName());\r\n\r\n            if (name == null || name.trim().length() == 0) {\r\n                name = context.getDoc().getFullName();\r\n            }\r\n        } else {\r\n            Map wikiQueries = new HashMap();\r\n            for (int i = 0; i < pages.length; ++i) {\r\n                String pattern = pages[i];\r\n                \r\n                String wikiName;\r\n                if (pattern.contains(\":\")) {\r\n                    int index = pattern.indexOf(':');\r\n                    wikiName = pattern.substring(0, index);\r\n                    pattern = pattern.substring(index + 1);\r\n                } else {\r\n                    wikiName = context.getDatabase();\r\n                }\r\n                \r\n                StringBuffer where;\r\n                List params;\r\n                \r\n                if (!wikiQueries.containsKey(wikiName)) {\r\n                    Object[] query = new Object[2];\r\n                    query[0] = where = new StringBuffer(\"where \");\r\n                    query[1] = params = new ArrayList();\r\n                    wikiQueries.put(wikiName, query);\r\n                } else {\r\n                    Object[] query = (Object[])wikiQueries.get(wikiName);\r\n                    where = (StringBuffer)query[0];\r\n                    params = (List)query[1];\r\n                }\r\n                \r\n                if (i > 0) {\r\n                    where.append(\" or \");\r\n                }\r\n                \r\n                where.append(\"doc.fullName like ?\");\r\n                params.add(pattern);\r\n            }\r\n            \r\n            String database = context.getDatabase();\r\n            try {\r\n                for (Iterator it = wikiQueries.entrySet().iterator(); it.hasNext();) {\r\n                    Map.Entry entry = (Map.Entry)it.next();\r\n                    String wikiName = (String)entry.getKey();\r\n                    Object[] query = (Object[])entry.getValue();\r\n                    String where = ((StringBuffer)query[0]).toString();\r\n                    List params = (List)query[1];\r\n                    \r\n                    context.setDatabase(wikiName);\r\n                    pageList.addAll(context.getWiki().getStore().searchDocumentsNames(where, params, context));\r\n                }\r\n            } finally {\r\n                context.setDatabase(database);\r\n            }\r\n        }\r\n        \r\n        if (pageList.size() == 0) {\r\n            return null;\r\n        }\r\n\r\n        HtmlPackager packager = new HtmlPackager();\r\n\r\n        if (name != null && name.trim().length() > 0) {\r\n            packager.setName(name);\r\n        }\r\n\r\n        if (description != null) {\r\n            packager.setDescription(description);\r\n        }\r\n        \r\n        packager.addPages(pageList);\r\n        \r\n        packager.export(context);\r\n        \r\n        return null;\r\n    }","commit_id":"1191378e403c58ed61b738635ffa378c2b6e4a49","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public URL createURL(String web, String name, String action, String querystring,\n        String anchor, String xwikidb, XWikiContext context)\n    {\n        String wikiname =\n            xwikidb == null ? context.getDatabase().toLowerCase() : xwikidb.toLowerCase();\n\n        try {\n            if (this.exportedPages.contains(wikiname + XWikiDocument.DB_SPACE_SEP + web\n                + XWikiDocument.SPACE_NAME_SEP + name)\n                && \"view\".equals(action) && context.getLinksAction() == null) {\n                StringBuffer newpath = new StringBuffer();\n\n                newpath.append(\"file://\");\n\n                newpath.append(wikiname);\n                newpath.append(\".\");\n                newpath.append(web);\n                newpath.append(\".\");\n                newpath.append(name);\n\n                if ((anchor != null) && (!anchor.equals(\"\"))) {\n                    newpath.append(\"#\");\n                    newpath.append(anchor);\n                }\n\n                newpath.append(\".html\");\n\n                return new URL(newpath.toString());\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        return super.createURL(web, name, action, querystring, anchor, xwikidb, context);\n    }","id":39374,"modified_method":"public URL createURL(String web, String name, String action, String querystring,\n        String anchor, String xwikidb, XWikiContext context)\n    {\n        String wikiname =\n            xwikidb == null ? context.getDatabase().toLowerCase() : xwikidb.toLowerCase();\n\n        try {\n            if (this.exportedPages.contains(wikiname + XWikiDocument.DB_SPACE_SEP + web\n                + XWikiDocument.SPACE_NAME_SEP + name)\n                && \"view\".equals(action) && context.getLinksAction() == null) {\n                StringBuffer newpath = new StringBuffer();\n\n                newpath.append(\"file://\");\n\n                newpath.append(wikiname);\n                newpath.append(\".\");\n                newpath.append(web);\n                newpath.append(\".\");\n                newpath.append(name);\n\n                if ((anchor != null) && (!anchor.equals(\"\"))) {\n                    newpath.append(\"#\");\n                    newpath.append(anchor);\n                }\n\n                newpath.append(\".html\");\n\n                return new URL(newpath.toString());\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        return super.createExternalURL(web, name, action, querystring, anchor, xwikidb, context);\n    }","commit_id":"1191378e403c58ed61b738635ffa378c2b6e4a49","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Apply export and create the ZIP package.\n     * \n     * @param context the XWiki context used to render pages.\n     * @throws IOException error when creating the package.\n     * @throws XWikiException error when render the pages.\n     */\n    public void export(XWikiContext context) throws IOException, XWikiException\n    {\n        // ////////////////////////////////////////////\n        // Create custom URL factory\n        // ////////////////////////////////////////////\n\n        ExportURLFactory urlf = new ExportURLFactory();\n        File dir =\n            (File) context.getEngineContext().getAttribute(\"javax.servlet.context.tempdir\");\n        File tempdir = new File(dir, RandomStringUtils.randomAlphanumeric(8));\n        tempdir.mkdirs();\n        File attachmentDir = new File(tempdir, \"attachment\");\n        attachmentDir.mkdirs();\n        urlf.init(this.pages, tempdir, context);\n        context.setURLFactory(urlf);\n\n        // ////////////////////////////////////////////\n        // Configure response\n        // ////////////////////////////////////////////\n\n        context.getResponse().setContentType(\"application/zip\");\n        context.getResponse().addHeader(\"Content-disposition\",\n            \"attachment; filename=\" + context.getWiki().getURLEncoded(name) + \".zip\");\n        context.setFinished(true);\n\n        // ////////////////////////////////////////////\n        // Render pages to export\n        // ////////////////////////////////////////////\n\n        ZipOutputStream zos = new ZipOutputStream(context.getResponse().getOutputStream());\n\n        XWikiContext renderContext = (XWikiContext) context.clone();\n\n        for (Iterator it = this.pages.iterator(); it.hasNext();) {\n            String pageName = (String) it.next();\n\n            XWikiDocument doc = context.getWiki().getDocument(pageName, context);\n\n            String zipname =\n                doc.getDatabase() + \".\" + doc.getSpace() + \".\" + doc.getName() + \".html\";\n            String language = doc.getLanguage();\n            if ((language != null) && (!language.equals(\"\"))) {\n                zipname += \".\" + language;\n            }\n            ZipEntry zipentry = new ZipEntry(zipname);\n            zos.putNextEntry(zipentry);\n\n            renderContext.setDoc(doc);\n            String content = context.getWiki().parseTemplate(\"view.vm\", renderContext);\n\n            zos.write(content.getBytes(context.getWiki().getEncoding()));\n            zos.closeEntry();\n        }\n\n        // ////////////////////////////////////////////\n        // Add needed skins to zip file\n        // ////////////////////////////////////////////\n        for (Iterator it = urlf.getNeededSkins().iterator(); it.hasNext();) {\n            String skinName = (String) it.next();\n            addSkinToZip(skinName, zos, context);\n        }\n\n        // ////////////////////////////////////////////\n        // Add resources files to zip file\n        // ////////////////////////////////////////////\n        addDirToZip(tempdir, zos, \"\");\n\n        zos.setComment(description);\n\n        // Finish zip file\n        zos.finish();\n        zos.flush();\n\n        // Delete temporary directory\n        deleteDirectory(tempdir);\n    }","id":39375,"modified_method":"/**\n     * Apply export and create the ZIP package.\n     * \n     * @param context the XWiki context used to render pages.\n     * @throws IOException error when creating the package.\n     * @throws XWikiException error when render the pages.\n     */\n    public void export(XWikiContext context) throws IOException, XWikiException\n    {\n        // ////////////////////////////////////////////\n        // Create custom URL factory\n        // ////////////////////////////////////////////\n\n        ExportURLFactory urlf = new ExportURLFactory();\n        File dir =\n            (File) context.getEngineContext().getAttribute(\"javax.servlet.context.tempdir\");\n        File tempdir = new File(dir, RandomStringUtils.randomAlphanumeric(8));\n        tempdir.mkdirs();\n        File attachmentDir = new File(tempdir, \"attachment\");\n        attachmentDir.mkdirs();\n\n        // ////////////////////////////////////////////\n        // Configure response\n        // ////////////////////////////////////////////\n\n        context.getResponse().setContentType(\"application/zip\");\n        context.getResponse().addHeader(\"Content-disposition\",\n            \"attachment; filename=\" + context.getWiki().getURLEncoded(name) + \".zip\");\n        context.setFinished(true);\n\n        // ////////////////////////////////////////////\n        // Render pages to export\n        // ////////////////////////////////////////////\n\n        ZipOutputStream zos = new ZipOutputStream(context.getResponse().getOutputStream());\n\n        VelocityContext vcontext = (VelocityContext)context.get(\"vcontext\");\n        \n        Document currentDocument = (Document)vcontext.get(\"cdoc\");\n        Document currentCDocument = (Document)vcontext.get(\"cdoc\");\n        Document currentTDocument = (Document)vcontext.get(\"tdoc\");\n        \n        try {\n            XWikiContext renderContext = (XWikiContext) context.clone();\n\n            vcontext = XWikiVelocityRenderer.prepareContext(renderContext);\n\n            urlf.init(this.pages, tempdir, renderContext);\n            renderContext.setURLFactory(urlf);\n\n            renderContext.put(\"action\", \"view\");\n\n            for (Iterator it = this.pages.iterator(); it.hasNext();) {\n                String pageName = (String) it.next();\n\n                XWikiDocument doc = renderContext.getWiki().getDocument(pageName, renderContext);\n\n                String zipname = doc.getDatabase() + \".\" + doc.getSpace() + \".\" + doc.getName();\n                String language = doc.getLanguage();\n                if ((language != null) && (!language.equals(\"\"))) {\n                    zipname += \".\" + language;\n                }\n\n                zipname += \".html\";\n\n                ZipEntry zipentry = new ZipEntry(zipname);\n                zos.putNextEntry(zipentry);\n\n                renderContext.setDatabase(doc.getDatabase());\n                renderContext.setDoc(doc);\n                vcontext.put(\"doc\", doc.newDocument(renderContext));\n                vcontext.put(\"cdoc\", vcontext.get(\"doc\"));\n\n                XWikiDocument tdoc = doc.getTranslatedDocument(renderContext);\n                renderContext.put(\"tdoc\", tdoc);\n                vcontext.put(\"tdoc\", tdoc.newDocument(renderContext));\n\n                String content = renderContext.getWiki().parseTemplate(\"view.vm\", renderContext);\n\n                zos.write(content.getBytes(renderContext.getWiki().getEncoding()));\n                zos.closeEntry();\n            }\n        } finally {\n            // Clean velocity context\n            vcontext = XWikiVelocityRenderer.prepareContext(context);\n            \n            vcontext.put(\"doc\", currentDocument);\n            vcontext.put(\"cdoc\", currentCDocument);\n            vcontext.put(\"tdoc\", currentTDocument);\n        }\n\n        // ////////////////////////////////////////////\n        // Add required skins to zip file\n        // ////////////////////////////////////////////\n        for (Iterator it = urlf.getNeededSkins().iterator(); it.hasNext();) {\n            String skinName = (String) it.next();\n            addSkinToZip(skinName, zos, context);\n        }\n\n        // ////////////////////////////////////////////\n        // Add resources files to zip file\n        // ////////////////////////////////////////////\n        addDirToZip(tempdir, zos, \"\");\n\n        zos.setComment(description);\n\n        // Finish zip file\n        zos.finish();\n        zos.flush();\n\n        // Delete temporary directory\n        deleteDirectory(tempdir);\n    }","commit_id":"1191378e403c58ed61b738635ffa378c2b6e4a49","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public void initialize(XWikiContext context)\n    {\n        XWikiContext newContext = context.clone();\n\n        newContext.setCacheDuration(0);\n\n        newContext.setUserReference(null);\n        newContext.setLanguage(null);\n        newContext.setDatabase(context.getMainXWiki());\n\n        // Cleanup\n        newContext.flushClassCache();\n\n        // We are sure the context request is a real servlet request\n        // So we force the dummy request with the current host\n        if (newContext.getRequest() != null) {\n            XWikiServletRequestStub initialRequest = new XWikiServletRequestStub();\n            initialRequest.setHost(newContext.getRequest().getHeader(\"x-forwarded-host\"));\n            initialRequest.setScheme(newContext.getRequest().getScheme());\n            XWikiServletRequest request = new XWikiServletRequest(initialRequest);\n            newContext.setRequest(request);\n        }\n\n        // Get rid of the real response\n        if (newContext.getResponse() != null) {\n            XWikiServletResponseStub initialResponse = new XWikiServletResponseStub();\n            // anything to keep ?\n            XWikiServletResponse response = new XWikiServletResponse(initialResponse);\n            newContext.setResponse(response);\n        }\n\n        // Set the URL Factory so that the URL Factory doesn't depend of the mode of the first action that entered\n        // the system (Servlet, PDF, GWT, Portlet, etc).\n        // We decide arbitrarily to use the Servlet URL Factory since it's the \"standard\" factory.\n        XWikiURLFactory urlf =\n            newContext.getWiki().getURLFactoryService().createURLFactory(XWikiContext.MODE_SERVLET, context);\n        context.setURLFactory(urlf);\n\n        this.initialContext = newContext;\n        this.logger.debug(\"Stub context initialized.\");\n    }","id":39376,"modified_method":"@Override\n    public void initialize(XWikiContext context)\n    {\n        XWikiContext newContext = context.clone();\n\n        newContext.setCacheDuration(0);\n\n        newContext.setUserReference(null);\n        newContext.setLanguage(null);\n        newContext.setDatabase(context.getMainXWiki());\n\n        // Cleanup\n        newContext.flushClassCache();\n\n        // We are sure the context request is a real servlet request\n        // So we force the dummy request with the current host\n        if (newContext.getRequest() != null) {\n            XWikiServletRequestStub initialRequest = new XWikiServletRequestStub();\n            initialRequest.setHost(newContext.getRequest().getHeader(\"x-forwarded-host\"));\n            initialRequest.setScheme(newContext.getRequest().getScheme());\n            XWikiServletRequest request = new XWikiServletRequest(initialRequest);\n            newContext.setRequest(request);\n        }\n\n        // Get rid of the real response\n        if (newContext.getResponse() != null) {\n            XWikiServletResponseStub initialResponse = new XWikiServletResponseStub();\n            // anything to keep ?\n            XWikiServletResponse response = new XWikiServletResponse(initialResponse);\n            newContext.setResponse(response);\n        }\n\n        // Set the URL Factory so that the URL Factory doesn't depend of the mode of the first action that entered\n        // the system (Servlet, PDF, GWT, Portlet, etc).\n        // We decide arbitrarily to use the Servlet URL Factory since it's the \"standard\" factory.\n        if (newContext.getURLFactory() != null) {\n            XWikiURLFactory urlf =\n                newContext.getWiki().getURLFactoryService().createURLFactory(XWikiContext.MODE_SERVLET, context);\n            newContext.setURLFactory(urlf);\n        }\n\n        this.initialContext = newContext;\n        this.logger.debug(\"Stub context initialized.\");\n    }","commit_id":"5d7526c4e1dd5a63bd8b46542ec72ec92a3e3321","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public static SNode resolve(@NotNull String refText, @NotNull SNode contextNode, IScope moduleScope, ModelPlusImportedScope modelsPlusImported, boolean includeAncestors) {\n    // The algororithm: \n    // - split refText into tokens A.B.C (separated by dot) \n    // - look for the first token A among the following classifiers and models, in this order: \n    // ourselves \n    // our immediate nested classes \n    // nested classes of our enclosing classes (if we're not root) \n    // foreach C in our hierarchy: 1) try C 2) try C's immediaate nested classes \n    // walk up to our root and see if it has java import data attached \n    //   if yes, use it \n    //   if no, only then traverse all appropriate models \n\n    SModel oldModel = contextNode.getModel();\n    SModel contextNodeModel = (oldModel == null ?\n      null :\n      oldModel\n    );\n\n    StringTokenizer tokenizer = new StringTokenizer(refText, \".\");\n    if (!(tokenizer.hasMoreTokens())) {\n      return null;\n    }\n    String token = tokenizer.nextToken();\n\n    assert token != null;\n\n    if (!(SNodeOperations.isInstanceOf(contextNode, \"jetbrains.mps.baseLanguage.structure.AnonymousClass\"))) {\n      if (token.equals(SPropertyOperations.getString(contextNode, \"name\"))) {\n        return construct(contextNode, tokenizer);\n      }\n    }\n    for (SNode nestedClas : Sequence.fromIterable(getImmediateNestedClassifiers(contextNode))) {\n      if (token.equals(SPropertyOperations.getString(nestedClas, \"name\"))) {\n        return construct(nestedClas, tokenizer);\n      }\n    }\n\n    for (SNode enclosingClass : Sequence.fromIterable(getPathToRoot(contextNode))) {\n      if (SNodeOperations.isInstanceOf(enclosingClass, \"jetbrains.mps.baseLanguage.structure.AnonymousClass\")) {\n        continue;\n      }\n      if (token.equals(SPropertyOperations.getString(enclosingClass, \"name\"))) {\n        return construct(enclosingClass, tokenizer);\n      }\n      for (SNode nested : Sequence.fromIterable(getImmediateNestedClassifiers(enclosingClass))) {\n        if (token.equals(SPropertyOperations.getString(nested, \"name\"))) {\n          return construct(nested, tokenizer);\n        }\n      }\n    }\n\n    if (includeAncestors) {\n      for (SNode ancestor : Sequence.fromIterable(getAncestors(contextNode))) {\n        if (token.equals(SPropertyOperations.getString(ancestor, \"name\"))) {\n          return construct(ancestor, tokenizer);\n        }\n        for (SNode nested : Sequence.fromIterable(getImmediateNestedClassifiers(ancestor))) {\n          if (token.equals(SPropertyOperations.getString(nested, \"name\"))) {\n            return construct(nested, tokenizer);\n          }\n        }\n      }\n    }\n\n    Iterable<SModel> models;\n\n    SNode root = Sequence.fromIterable(getPathToRoot(contextNode)).last();\n    SNode javaImports = AttributeOperations.getAttribute(root, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.JavaImports\")));\n\n    if (javaImports == null) {\n      // This is probably too wide \n      // <node> \n      Collection<SModel> parentScopeModels = modelsPlusImported.getModels();\n      List<SModel> ms = ListSequence.fromList(new ArrayList<SModel>());\n      ListSequence.fromList(ms).addSequence(CollectionSequence.fromCollection(parentScopeModels));\n      models = ms;\n\n    } else {\n      // walk thru single-type importrs \n      // TODO static imports are not handled yet \n      for (SNode imp : ListSequence.fromList(SLinkOperations.getTargets(javaImports, \"entries\", true)).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return !(SPropertyOperations.getBoolean(it, \"onDemand\"));\n        }\n      })) {\n        if (!(token.equals(SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(imp, \"token\", true)).last(), \"value\")))) {\n          continue;\n        }\n\n        String fqName = Tokens_Behavior.call_stringRep_6148840541591415725(imp);\n        SNode cls = resolveFqName(fqName, moduleScope, contextNodeModel);\n        if (cls == null) {\n          return null;\n        }\n        cls = construct(cls, tokenizer);\n        return cls;\n      }\n\n      // putting on-demand imports into model list \n      List<SModel> javaImportedModels = ListSequence.fromList(new ArrayList<SModel>());\n      ListSequence.fromList(javaImportedModels).addElement(SModelRepository.getInstance().getModelDescriptor(new SModelReference(\"java.lang\", \"java_stub\")));\n      for (SNode imp : ListSequence.fromList(SLinkOperations.getTargets(javaImports, \"entries\", true)).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return SPropertyOperations.getBoolean(it, \"onDemand\");\n        }\n      })) {\n        String pkgName = Tokens_Behavior.call_stringRep_6148840541591415725(imp);\n        // FIXME this ignores scope \n        List<SModel> ms = SModelRepository.getInstance().getModelDescriptorsByModelName(pkgName);\n        ListSequence.fromList(javaImportedModels).addSequence(ListSequence.fromList(ms));\n      }\n      // adding our MPS module scope after java imports as backup \n      ListSequence.fromList(javaImportedModels).addSequence(CollectionSequence.fromCollection(modelsPlusImported.getModels()));\n      models = javaImportedModels;\n    }\n\n    // let's see if its an fqName (i.e. starting with a package name) \n    SNode c = resolveFqName(refText, moduleScope, contextNodeModel);\n    if ((c != null)) {\n      return c;\n    }\n\n    // finally, let's go through all appropriate models and see if there is such a root \n\n    // adding contextNodeModel in the beginning of sequence \n    models = Sequence.fromIterable(Sequence.<SModel>singleton(contextNodeModel)).concat(Sequence.fromIterable(models));\n\n    for (SModel model : Sequence.fromIterable(models)) {\n      // FIXME will be unnecessary when transient models live in a separate repository \n      if (!(model.equals(contextNodeModel)) && model instanceof SModel && (model.getModule() instanceof TransientModelsModule)) {\n        continue;\n      }\n\n      // TODO try to use some fast find support \n      Iterable<? extends SNode> roots = model.getRootNodes();\n      for (SNode r : roots) {\n        if (!(SNodeOperations.isInstanceOf(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"))) {\n          continue;\n        }\n        if (token.equals(SPropertyOperations.getString(SNodeOperations.cast(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"), \"name\"))) {\n          // see if we can find a node for the whole refText, starting from here \n          SNode node = construct(SNodeOperations.cast(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"), tokenizer);\n          if ((node != null)) {\n            return node;\n          }\n        }\n      }\n    }\n\n    // <node> \n\n    // try to use old logic \n\n    // try to resolve as fq name in current model \n    Iterable<SNode> result;\n\n    result = resolveClassifierByFqName(SNodeOperations.getModel(contextNode), refText);\n    if (Sequence.fromIterable(result).isNotEmpty()) {\n      return ((int) Sequence.fromIterable(result).count() == 1 ?\n        Sequence.fromIterable(result).first() :\n        null\n      );\n    }\n\n    // try to resolve as fq name in current scope \n    Iterable<IModule> visibleModules = check_8z6r2b_a0a65a21(check_8z6r2b_a0a0ec0m(SNodeOperations.getModel(contextNode))).getVisibleModules();\n    result = resolveClassifierByFqNameWithNonStubPriority(Sequence.fromIterable(visibleModules).translate(new ITranslator2<IModule, SModel>() {\n      public Iterable<SModel> translate(IModule it) {\n        return it.getModels();\n      }\n    }), refText);\n    return ((int) Sequence.fromIterable(result).count() == 1 ?\n      Sequence.fromIterable(result).first() :\n      null\n    );\n\n  }","id":39377,"modified_method":"public static SNode resolve(@NotNull String refText, @NotNull SNode contextNode, IScope moduleScope, ModelPlusImportedScope modelsPlusImported, boolean includeAncestors) {\n    // The algororithm: \n    // - split refText into tokens A.B.C (separated by dot) \n    // - look for the first token A among the following classifiers and models, in this order: \n    // ourselves \n    // our immediate nested classes \n    // nested classes of our enclosing classes (if we're not root) \n    // foreach C in our hierarchy: 1) try C 2) try C's immediaate nested classes \n    // walk up to our root and see if it has java import data attached \n    //   if yes, use it \n    //   if no, only then traverse all appropriate models \n\n    SModel oldModel = contextNode.getModel();\n    SModel contextNodeModel = (oldModel == null ?\n      null :\n      oldModel\n    );\n\n    StringTokenizer tokenizer = new StringTokenizer(refText, \".\");\n    if (!(tokenizer.hasMoreTokens())) {\n      return null;\n    }\n    String token = tokenizer.nextToken();\n\n    assert token != null;\n\n    if (!(SNodeOperations.isInstanceOf(contextNode, \"jetbrains.mps.baseLanguage.structure.AnonymousClass\"))) {\n      if (token.equals(SPropertyOperations.getString(contextNode, \"name\"))) {\n        return construct(contextNode, tokenizer);\n      }\n    }\n    for (SNode nestedClas : Sequence.fromIterable(getImmediateNestedClassifiers(contextNode))) {\n      if (token.equals(SPropertyOperations.getString(nestedClas, \"name\"))) {\n        return construct(nestedClas, tokenizer);\n      }\n    }\n\n    for (SNode enclosingClass : Sequence.fromIterable(getPathToRoot(contextNode))) {\n      if (SNodeOperations.isInstanceOf(enclosingClass, \"jetbrains.mps.baseLanguage.structure.AnonymousClass\")) {\n        continue;\n      }\n      if (token.equals(SPropertyOperations.getString(enclosingClass, \"name\"))) {\n        return construct(enclosingClass, tokenizer);\n      }\n      for (SNode nested : Sequence.fromIterable(getImmediateNestedClassifiers(enclosingClass))) {\n        if (token.equals(SPropertyOperations.getString(nested, \"name\"))) {\n          return construct(nested, tokenizer);\n        }\n      }\n    }\n\n    if (includeAncestors) {\n      for (SNode ancestor : Sequence.fromIterable(getAncestors(contextNode))) {\n        if (token.equals(SPropertyOperations.getString(ancestor, \"name\"))) {\n          return construct(ancestor, tokenizer);\n        }\n        for (SNode nested : Sequence.fromIterable(getImmediateNestedClassifiers(ancestor))) {\n          if (token.equals(SPropertyOperations.getString(nested, \"name\"))) {\n            return construct(nested, tokenizer);\n          }\n        }\n      }\n    }\n\n    Iterable<SModel> models;\n\n    SNode root = Sequence.fromIterable(getPathToRoot(contextNode)).last();\n    SNode javaImports = AttributeOperations.getAttribute(root, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.JavaImports\")));\n\n    if (javaImports == null) {\n      // This is probably too wide \n      // <node> \n      Collection<SModel> parentScopeModels = modelsPlusImported.getModels();\n      List<SModel> ms = ListSequence.fromList(new ArrayList<SModel>());\n      ListSequence.fromList(ms).addSequence(CollectionSequence.fromCollection(parentScopeModels));\n      models = ms;\n\n    } else {\n      // walk thru single-type importrs \n      // TODO static imports are not handled yet \n      for (SNode imp : ListSequence.fromList(SLinkOperations.getTargets(javaImports, \"entries\", true)).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return !(SPropertyOperations.getBoolean(it, \"onDemand\"));\n        }\n      })) {\n        if (!(token.equals(SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(imp, \"token\", true)).last(), \"value\")))) {\n          continue;\n        }\n\n        String fqName = Tokens_Behavior.call_stringRep_6148840541591415725(imp);\n        SNode cls = resolveFqName(fqName, moduleScope, contextNodeModel);\n        if (cls == null) {\n          return null;\n        }\n        cls = construct(cls, tokenizer);\n        return cls;\n      }\n\n      // putting on-demand imports into model list \n      List<SModel> javaImportedModels = ListSequence.fromList(new ArrayList<SModel>());\n      ListSequence.fromList(javaImportedModels).addElement(SModelRepository.getInstance().getModelDescriptor(new SModelReference(\"java.lang\", \"java_stub\")));\n      for (SNode imp : ListSequence.fromList(SLinkOperations.getTargets(javaImports, \"entries\", true)).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return SPropertyOperations.getBoolean(it, \"onDemand\");\n        }\n      })) {\n        String pkgName = Tokens_Behavior.call_stringRep_6148840541591415725(imp);\n        // FIXME this ignores scope \n        List<SModel> ms = SModelRepository.getInstance().getModelDescriptorsByModelName(pkgName);\n        ListSequence.fromList(javaImportedModels).addSequence(ListSequence.fromList(ms));\n      }\n      // adding our MPS module scope after java imports as backup \n      ListSequence.fromList(javaImportedModels).addSequence(CollectionSequence.fromCollection(modelsPlusImported.getModels()));\n      models = javaImportedModels;\n    }\n\n    // let's see if its an fqName (i.e. starting with a package name) \n    SNode c = resolveFqName(refText, moduleScope, contextNodeModel);\n    if ((c != null)) {\n      return c;\n    }\n\n    // finally, let's go through all appropriate models and see if there is such a root \n\n    // adding contextNodeModel in the beginning of sequence \n    models = Sequence.fromIterable(Sequence.<SModel>singleton(contextNodeModel)).concat(Sequence.fromIterable(models));\n\n    for (SModel model : Sequence.fromIterable(models)) {\n      // FIXME will be unnecessary when transient models live in a separate repository \n      if (!(model.equals(contextNodeModel)) && model instanceof SModel && (model.getModule() instanceof TransientModelsModule)) {\n        continue;\n      }\n\n      // TODO try to use some fast find support \n      Iterable<? extends SNode> roots = model.getRootNodes();\n      for (SNode r : roots) {\n        if (!(SNodeOperations.isInstanceOf(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"))) {\n          continue;\n        }\n        if (token.equals(SPropertyOperations.getString(SNodeOperations.cast(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"), \"name\"))) {\n          // see if we can find a node for the whole refText, starting from here \n          // if not we should return anyway \n          return construct(SNodeOperations.cast(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"), tokenizer);\n        }\n      }\n    }\n\n    // <node> \n\n    // try to use old logic \n\n    // try to resolve as fq name in current model \n    Iterable<SNode> result;\n\n    result = resolveClassifierByFqName(SNodeOperations.getModel(contextNode), refText);\n    if (Sequence.fromIterable(result).isNotEmpty()) {\n      return ((int) Sequence.fromIterable(result).count() == 1 ?\n        Sequence.fromIterable(result).first() :\n        null\n      );\n    }\n\n    // try to resolve as fq name in current scope \n    Iterable<IModule> visibleModules = check_8z6r2b_a0a65a21(check_8z6r2b_a0a0ec0m(SNodeOperations.getModel(contextNode))).getVisibleModules();\n    result = resolveClassifierByFqNameWithNonStubPriority(Sequence.fromIterable(visibleModules).translate(new ITranslator2<IModule, SModel>() {\n      public Iterable<SModel> translate(IModule it) {\n        return it.getModels();\n      }\n    }), refText);\n    return ((int) Sequence.fromIterable(result).count() == 1 ?\n      Sequence.fromIterable(result).first() :\n      null\n    );\n\n  }","commit_id":"b351199a1103b688bf71ca2799e03f35e141553c","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static IScope check_8z6r2b_a0a06a21(AbstractModule checkedDotOperand) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.getScope();\n    }\n    return null;\n  }","id":39378,"modified_method":"private static IScope check_8z6r2b_a0a24a21(AbstractModule checkedDotOperand) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.getScope();\n    }\n    return null;\n  }","commit_id":"9551fe6c74c095de2e8c903bd676be5ed38fca56","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode resolveFqName(String refText, SearchScope moduleScope, SModel contextNodeModel) {\n    // FIXME constant 20 \n    int[] dotPositions = new int[20];\n    int lastDot = -1;\n    int k = 0;\n\n    while ((lastDot = refText.indexOf(\".\", lastDot + 1)) > 0) {\n      dotPositions[k] = lastDot;\n      k++;\n    }\n\n    // try the longest name first, the shortest last \n    // we start with x.y when refText is x.y.z \n    for (int p = k - 1; p >= 0; p--) {\n\n      String pkgName = refText.substring(0, dotPositions[p]);\n      Iterable<SModel> models = getModelsByName(moduleScope, pkgName);\n\n      if (Sequence.fromIterable(models).isEmpty()) {\n        continue;\n      }\n\n      for (SModel m : Sequence.fromIterable(models)) {\n\n        // FIXME will be unnecessary when transient models live in a separate repository \n        if (!(m.equals(contextNodeModel)) && m instanceof SModel && (m.getModule() instanceof TransientModelsModule)) {\n          continue;\n        }\n\n        String refTextWithoutPackage = refText.substring(dotPositions[p] + 1);\n        StringTokenizer tokenizer = new StringTokenizer(refTextWithoutPackage, \".\");\n        assert tokenizer.hasMoreTokens();\n        String className = tokenizer.nextToken();\n        SNode cls = null;\n        for (SNode r : m.getRootNodes()) {\n          if (!(SNodeOperations.isInstanceOf(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"))) {\n            continue;\n          }\n          if (className.equals(SPropertyOperations.getString(SNodeOperations.cast(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"), \"name\"))) {\n            cls = SNodeOperations.cast(r, \"jetbrains.mps.baseLanguage.structure.Classifier\");\n          }\n        }\n        if ((cls == null)) {\n          continue;\n        }\n        cls = construct(cls, tokenizer);\n        if ((cls == null)) {\n          continue;\n        }\n\n        return cls;\n      }\n    }\n    return null;\n  }","id":39379,"modified_method":"public static SNode resolveFqName(String refText, Iterable<SModel> models, SModel contextNodeModel) {\n    // FIXME constant 20 \n    int[] dotPositions = new int[20];\n    int lastDot = -1;\n    int k = 0;\n\n    while ((lastDot = refText.indexOf(\".\", lastDot + 1)) > 0) {\n      dotPositions[k] = lastDot;\n      k++;\n    }\n\n    // try the longest name first, the shortest last \n    // we start with x.y when refText is x.y.z \n    for (int p = k - 1; p >= 0; p--) {\n\n      String pkgName = refText.substring(0, dotPositions[p]);\n\n      for (SModel m : Sequence.fromIterable(models)) {\n\n        if (!(pkgName.equals(SModelStereotype.withoutStereotype(m.getModelName())))) {\n          continue;\n        }\n\n        // FIXME will be unnecessary when transient models live in a separate repository \n        if (!(m.equals(contextNodeModel)) && m instanceof SModel && (m.getModule() instanceof TransientModelsModule)) {\n          continue;\n        }\n\n        String refTextWithoutPackage = refText.substring(dotPositions[p] + 1);\n        StringTokenizer tokenizer = new StringTokenizer(refTextWithoutPackage, \".\");\n        assert tokenizer.hasMoreTokens();\n        String className = tokenizer.nextToken();\n        SNode cls = null;\n        for (SNode r : m.getRootNodes()) {\n          if (!(SNodeOperations.isInstanceOf(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"))) {\n            continue;\n          }\n          if (className.equals(SPropertyOperations.getString(SNodeOperations.cast(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"), \"name\"))) {\n            cls = SNodeOperations.cast(r, \"jetbrains.mps.baseLanguage.structure.Classifier\");\n          }\n        }\n        if ((cls == null)) {\n          continue;\n        }\n        cls = construct(cls, tokenizer);\n        if ((cls == null)) {\n          continue;\n        }\n\n        return cls;\n      }\n    }\n    return null;\n  }","commit_id":"9551fe6c74c095de2e8c903bd676be5ed38fca56","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n   * methodsOrFields: true for methods. false for fields\n   */\n  public static Iterable<SNode> staticImportedThings(final SNode neededConcept, SNode imports) {\n    List<SNode> result = ListSequence.fromList(new ArrayList<SNode>());\n    IScope moduleScope = ((AbstractModule) SNodeOperations.getModel(imports).getModule()).getScope();\n    for (SNode imp : ListSequence.fromList(SLinkOperations.getTargets(imports, \"entries\", true)).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SPropertyOperations.getBoolean(it, \"static\");\n      }\n    })) {\n\n      if (SPropertyOperations.getBoolean(imp, \"onDemand\")) {\n        String className = Tokens_Behavior.call_stringRep_6148840541591415725(imp);\n        SNode containingClas = resolveFqName(className, moduleScope, null);\n        if ((containingClas == null)) {\n          continue;\n        }\n\n        Iterable<SNode> neededMembers = ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), containingClas, \"virtual_getMembers_1213877531970\", new Object[]{})).where(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return SNodeOperations.getConceptDeclaration(it) == neededConcept;\n          }\n        });\n        ListSequence.fromList(result).addSequence(Sequence.fromIterable(neededMembers));\n\n      } else {\n\n        final String memberName = SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(imp, \"token\", true)).last(), \"value\");\n        String className = Tokens_Behavior.call_stringRep_6148840541591441572(imp, 1);\n\n        SNode containingClas = resolveFqName(className, moduleScope, null);\n        if ((containingClas == null)) {\n          continue;\n        }\n\n        // or findAll instead of findFirst ? \n        SNode neededMember = ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), containingClas, \"virtual_getMembers_1213877531970\", new Object[]{})).where(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return SNodeOperations.getConceptDeclaration(it) == neededConcept;\n          }\n        }).findFirst(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return memberName.equals(it.getName());\n          }\n        });\n\n        if ((neededMember == null)) {\n          continue;\n        }\n\n        ListSequence.fromList(result).addElement(neededMember);\n\n      }\n    }\n    return result;\n  }","id":39380,"modified_method":"/**\n   * methodsOrFields: true for methods. false for fields\n   */\n  public static Iterable<SNode> staticImportedThings(final SNode neededConcept, SNode imports) {\n    List<SNode> result = ListSequence.fromList(new ArrayList<SNode>());\n    IScope moduleScope = ((AbstractModule) SNodeOperations.getModel(imports).getModule()).getScope();\n    for (SNode imp : ListSequence.fromList(SLinkOperations.getTargets(imports, \"entries\", true)).where(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SPropertyOperations.getBoolean(it, \"static\");\n      }\n    })) {\n\n      if (SPropertyOperations.getBoolean(imp, \"onDemand\")) {\n        String className = Tokens_Behavior.call_stringRep_6148840541591415725(imp);\n        SNode containingClas = resolveFqName(className, moduleScope.getModels(), null);\n        if ((containingClas == null)) {\n          continue;\n        }\n\n        Iterable<SNode> neededMembers = ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), containingClas, \"virtual_getMembers_1213877531970\", new Object[]{})).where(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return SNodeOperations.getConceptDeclaration(it) == neededConcept;\n          }\n        });\n        ListSequence.fromList(result).addSequence(Sequence.fromIterable(neededMembers));\n\n      } else {\n\n        final String memberName = SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(imp, \"token\", true)).last(), \"value\");\n        String className = Tokens_Behavior.call_stringRep_6148840541591441572(imp, 1);\n\n        SNode containingClas = resolveFqName(className, moduleScope.getModels(), null);\n        if ((containingClas == null)) {\n          continue;\n        }\n\n        // or findAll instead of findFirst ? \n        SNode neededMember = ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), containingClas, \"virtual_getMembers_1213877531970\", new Object[]{})).where(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return SNodeOperations.getConceptDeclaration(it) == neededConcept;\n          }\n        }).findFirst(new IWhereFilter<SNode>() {\n          public boolean accept(SNode it) {\n            return memberName.equals(it.getName());\n          }\n        });\n\n        if ((neededMember == null)) {\n          continue;\n        }\n\n        ListSequence.fromList(result).addElement(neededMember);\n      }\n    }\n    return result;\n  }","commit_id":"9551fe6c74c095de2e8c903bd676be5ed38fca56","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode construct(SNode base, StringTokenizer tokenizer) {\n    SNode curr = base;\n    while ((curr != null) && tokenizer.hasMoreTokens()) {\n      final String tok = tokenizer.nextToken();\n      curr = Sequence.fromIterable(getImmediateNestedClassifiers(curr)).findFirst(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return tok.equals(SPropertyOperations.getString(it, \"name\"));\n        }\n      });\n    }\n    return curr;\n  }","id":39381,"modified_method":"public static SNode construct(SNode base, StringTokenizer tokenizer) {\n    SNode curr = base;\n    while ((curr != null) && tokenizer.hasMoreTokens()) {\n      final String tok = tokenizer.nextToken();\n      curr = Sequence.fromIterable(getImmediateNestedClassifiers(curr)).findFirst(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return tok.equals(SPropertyOperations.getString(it, \"name\"));\n        }\n      });\n    }\n    return curr;\n  }","commit_id":"9551fe6c74c095de2e8c903bd676be5ed38fca56","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SModule check_8z6r2b_a0a0a0ic0m(SModel checkedDotOperand) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.getModule();\n    }\n    return null;\n  }","id":39382,"modified_method":"private static SModule check_8z6r2b_a0a0a0qb0m(SModel checkedDotOperand) {\n    if (null != checkedDotOperand) {\n      return checkedDotOperand.getModule();\n    }\n    return null;\n  }","commit_id":"9551fe6c74c095de2e8c903bd676be5ed38fca56","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode resolve(@NotNull String refText, @NotNull SNode contextNode, IScope moduleScope, ModelPlusImportedScope modelsPlusImported, boolean includeAncestors) {\n    // The algorithm: \n    // - split refText into tokens A.B.C (separated by dot) \n    // - look for the first token A among the following classifiers and models, in this order: \n    // ourselves \n    // our immediate nested classes \n    // nested classes of our enclosing classes (if we're not root) \n    // foreach C in our hierarchy: 1) try C 2) try C's immediaate nested classes \n    // walk up to our root and see if it has java import data attached \n    //   if yes, use it \n    //   if no, only then traverse all appropriate models \n\n    SModel contextNodeModel = (contextNode == null ?\n      null :\n      SNodeOperations.getModel(contextNode)\n    );\n\n    StringTokenizer tokenizer = new StringTokenizer(refText, \".\");\n    if (!(tokenizer.hasMoreTokens())) {\n      return null;\n    }\n    String token = tokenizer.nextToken();\n\n    assert token != null;\n\n    if (!(SNodeOperations.isInstanceOf(contextNode, \"jetbrains.mps.baseLanguage.structure.AnonymousClass\"))) {\n      if (token.equals(SPropertyOperations.getString(contextNode, \"name\"))) {\n        return construct(contextNode, tokenizer);\n      }\n    }\n    for (SNode nestedClas : Sequence.fromIterable(getImmediateNestedClassifiers(contextNode))) {\n      if (token.equals(SPropertyOperations.getString(nestedClas, \"name\"))) {\n        return construct(nestedClas, tokenizer);\n      }\n    }\n\n    for (SNode enclosingClass : Sequence.fromIterable(getPathToRoot(contextNode))) {\n      if (SNodeOperations.isInstanceOf(enclosingClass, \"jetbrains.mps.baseLanguage.structure.AnonymousClass\")) {\n        continue;\n      }\n      if (token.equals(SPropertyOperations.getString(enclosingClass, \"name\"))) {\n        return construct(enclosingClass, tokenizer);\n      }\n      for (SNode nested : Sequence.fromIterable(getImmediateNestedClassifiers(enclosingClass))) {\n        if (token.equals(SPropertyOperations.getString(nested, \"name\"))) {\n          return construct(nested, tokenizer);\n        }\n      }\n    }\n\n    if (includeAncestors) {\n      for (SNode ancestor : Sequence.fromIterable(getAncestors(contextNode))) {\n        if (token.equals(SPropertyOperations.getString(ancestor, \"name\"))) {\n          return construct(ancestor, tokenizer);\n        }\n        for (SNode nested : Sequence.fromIterable(getImmediateNestedClassifiers(ancestor))) {\n          if (token.equals(SPropertyOperations.getString(nested, \"name\"))) {\n            return construct(nested, tokenizer);\n          }\n        }\n      }\n    }\n\n    Iterable<SModel> models;\n\n    SNode root = Sequence.fromIterable(getPathToRoot(contextNode)).last();\n    SNode javaImports = AttributeOperations.getAttribute(root, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.JavaImports\")));\n\n    if (javaImports == null) {\n      Iterable<SModel> parentScopeModels = modelsPlusImported.getModels();\n      List<SModel> ms = ListSequence.fromList(new ArrayList<SModel>());\n      ListSequence.fromList(ms).addSequence(Sequence.fromIterable(parentScopeModels));\n      models = ms;\n\n    } else {\n      // walk thru single-type importrs \n      // TODO static imports are not handled yet \n      for (SNode imp : ListSequence.fromList(SLinkOperations.getTargets(javaImports, \"entries\", true)).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return !(SPropertyOperations.getBoolean(it, \"onDemand\"));\n        }\n      })) {\n        if (!(token.equals(SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(imp, \"token\", true)).last(), \"value\")))) {\n          continue;\n        }\n\n        String fqName = Tokens_Behavior.call_stringRep_6148840541591415725(imp);\n        SNode cls = resolveFqName(fqName, moduleScope, contextNodeModel);\n        if (cls == null) {\n          return null;\n        }\n        cls = construct(cls, tokenizer);\n        return cls;\n      }\n\n      // putting on-demand imports into model list \n      List<SModel> javaImportedModels = ListSequence.fromList(new ArrayList<SModel>());\n      ListSequence.fromList(javaImportedModels).addElement(SModelRepository.getInstance().getModelDescriptor(new SModelReference(\"java.lang\", \"java_stub\")));\n      for (SNode imp : ListSequence.fromList(SLinkOperations.getTargets(javaImports, \"entries\", true)).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return SPropertyOperations.getBoolean(it, \"onDemand\");\n        }\n      })) {\n        String pkgName = Tokens_Behavior.call_stringRep_6148840541591415725(imp);\n        // FIXME this ignores scope \n        List<SModel> ms = SModelRepository.getInstance().getModelDescriptorsByModelName(pkgName);\n        ListSequence.fromList(javaImportedModels).addSequence(ListSequence.fromList(ms));\n      }\n      // adding our MPS module scope after java imports as backup \n      ListSequence.fromList(javaImportedModels).addSequence(Sequence.fromIterable(moduleScope.getModels()));\n      models = javaImportedModels;\n    }\n\n    // let's see if its an fqName (i.e. starting with a package name) \n    SNode c = resolveFqName(refText, moduleScope, contextNodeModel);\n    if ((c != null)) {\n      return c;\n    }\n\n    // finally, let's go through all appropriate models and see if there is such a root \n\n    // adding contextNodeModel in the beginning of sequence \n    // (but really all models with the same name as contextNodeModel, because \n    // we're talking about package names) \n\n    String contextNodeModelName = jetbrains.mps.util.SNodeOperations.getModelLongName(contextNodeModel);\n    List<SModel> samePackageModels = SModelRepository.getInstance().getModelDescriptorsByModelName(contextNodeModelName);\n    ListSequence.fromList(samePackageModels).removeElement(contextNodeModel);\n    ListSequence.fromList(samePackageModels).insertElement(0, contextNodeModel);\n\n    models = ListSequence.fromList(samePackageModels).concat(Sequence.fromIterable(models));\n\n    for (SModel model : Sequence.fromIterable(models)) {\n      // FIXME will be unnecessary when transient models live in a separate repository \n      if (!(model.equals(contextNodeModel)) && model instanceof SModel && (model.getModule() instanceof TransientModelsModule)) {\n        continue;\n      }\n\n      // TODO try to use some fast find support \n      Iterable<? extends SNode> roots = model.getRootNodes();\n      for (SNode r : roots) {\n        if (!(SNodeOperations.isInstanceOf(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"))) {\n          continue;\n        }\n        if (token.equals(SPropertyOperations.getString(SNodeOperations.cast(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"), \"name\"))) {\n          // see if we can find a node for the whole refText, starting from here \n          // if not we should return anyway \n          return construct(SNodeOperations.cast(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"), tokenizer);\n        }\n      }\n    }\n\n    // try to use old logic \n    // try to resolve as fq name in current model \n    Iterable<SNode> result;\n\n    result = resolveClassifierByFqName(SNodeOperations.getModel(contextNode), refText);\n    if (Sequence.fromIterable(result).isNotEmpty()) {\n      return ((int) Sequence.fromIterable(result).count() == 1 ?\n        Sequence.fromIterable(result).first() :\n        null\n      );\n    }\n\n    // try to resolve as fq name in current scope \n    Iterable<SModule> visibleModules = check_8z6r2b_a0a06a21(((AbstractModule) check_8z6r2b_a0a0a0ic0m(SNodeOperations.getModel(contextNode)))).getVisibleModules();\n    result = resolveClassifierByFqNameWithNonStubPriority(Sequence.fromIterable(visibleModules).translate(new ITranslator2<SModule, SModel>() {\n      public Iterable<SModel> translate(SModule it) {\n        return it.getModels();\n      }\n    }), refText);\n    return ((int) Sequence.fromIterable(result).count() == 1 ?\n      Sequence.fromIterable(result).first() :\n      null\n    );\n\n  }","id":39383,"modified_method":"public static SNode resolve(@NotNull String refText, @NotNull SNode contextNode, IScope moduleScope, ModelPlusImportedScope modelsPlusImported, boolean includeAncestors) {\n    // The algorithm: \n    // - split refText into tokens A.B.C (separated by dot) \n    // - look for the first token A among the following classifiers and models, in this order: \n    // ourselves \n    // our immediate nested classes \n    // nested classes of our enclosing classes (if we're not root) \n    // foreach C in our hierarchy: 1) try C 2) try C's immediaate nested classes \n    // walk up to our root and see if it has java import data attached \n    //   if yes, use it \n    //   if no, only then traverse all appropriate models \n\n    final SModel contextNodeModel = (contextNode == null ?\n      null :\n      SNodeOperations.getModel(contextNode)\n    );\n\n    StringTokenizer tokenizer = new StringTokenizer(refText, \".\");\n    if (!(tokenizer.hasMoreTokens())) {\n      return null;\n    }\n    String token = tokenizer.nextToken();\n\n    assert token != null;\n\n    if (!(SNodeOperations.isInstanceOf(contextNode, \"jetbrains.mps.baseLanguage.structure.AnonymousClass\"))) {\n      if (token.equals(SPropertyOperations.getString(contextNode, \"name\"))) {\n        return construct(contextNode, tokenizer);\n      }\n    }\n    for (SNode nestedClas : Sequence.fromIterable(getImmediateNestedClassifiers(contextNode))) {\n      if (token.equals(SPropertyOperations.getString(nestedClas, \"name\"))) {\n        return construct(nestedClas, tokenizer);\n      }\n    }\n\n    for (SNode enclosingClass : Sequence.fromIterable(getPathToRoot(contextNode))) {\n      if (SNodeOperations.isInstanceOf(enclosingClass, \"jetbrains.mps.baseLanguage.structure.AnonymousClass\")) {\n        continue;\n      }\n      if (token.equals(SPropertyOperations.getString(enclosingClass, \"name\"))) {\n        return construct(enclosingClass, tokenizer);\n      }\n      for (SNode nested : Sequence.fromIterable(getImmediateNestedClassifiers(enclosingClass))) {\n        if (token.equals(SPropertyOperations.getString(nested, \"name\"))) {\n          return construct(nested, tokenizer);\n        }\n      }\n    }\n\n    if (includeAncestors) {\n      for (SNode ancestor : Sequence.fromIterable(getAncestors(contextNode))) {\n        if (token.equals(SPropertyOperations.getString(ancestor, \"name\"))) {\n          return construct(ancestor, tokenizer);\n        }\n        for (SNode nested : Sequence.fromIterable(getImmediateNestedClassifiers(ancestor))) {\n          if (token.equals(SPropertyOperations.getString(nested, \"name\"))) {\n            return construct(nested, tokenizer);\n          }\n        }\n      }\n    }\n\n    SNode root = Sequence.fromIterable(getPathToRoot(contextNode)).last();\n    SNode javaImports = AttributeOperations.getAttribute(root, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.JavaImports\")));\n\n    if (javaImports == null) {\n\n      return resolveNonSpecialSyntax(refText, contextNode);\n\n      // <node> \n      // <node> \n      // <node> \n      // <node> \n      // <node> \n\n    } else {\n      // walk through single-type imports \n      // TODO static imports are not handled yet \n      for (SNode imp : ListSequence.fromList(SLinkOperations.getTargets(javaImports, \"entries\", true)).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return !(SPropertyOperations.getBoolean(it, \"onDemand\"));\n        }\n      })) {\n        if (!(token.equals(SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(imp, \"token\", true)).last(), \"value\")))) {\n          continue;\n        }\n\n        String fqName = Tokens_Behavior.call_stringRep_6148840541591415725(imp);\n        SNode cls = resolveFqName(fqName, moduleScope.getModels(), contextNodeModel);\n        if (cls == null) {\n          return null;\n        }\n        cls = construct(cls, tokenizer);\n        return cls;\n      }\n\n      // not found in single-type impors \n\n      // putting on-demand imports into model list \n      List<SModel> javaImportedModels = ListSequence.fromList(new ArrayList<SModel>());\n\n      // models with the same name as contextNodeModel (correspond to the same package in java) \n      ListSequence.fromList(javaImportedModels).addElement(contextNodeModel);\n\n      String ourPkgName = SModelStereotype.withoutStereotype(contextNodeModel.getModelName());\n      ListSequence.fromList(javaImportedModels).addSequence(Sequence.fromIterable(getModelsByName(moduleScope, ourPkgName)).where(new IWhereFilter<SModel>() {\n        public boolean accept(SModel it) {\n          return it != contextNodeModel;\n        }\n      }));\n\n      ListSequence.fromList(javaImportedModels).addElement(SModelRepository.getInstance().getModelDescriptor(new SModelReference(\"java.lang\", \"java_stub\")));\n\n      for (SNode imp : ListSequence.fromList(SLinkOperations.getTargets(javaImports, \"entries\", true)).where(new IWhereFilter<SNode>() {\n        public boolean accept(SNode it) {\n          return SPropertyOperations.getBoolean(it, \"onDemand\");\n        }\n      })) {\n        String pkgName = Tokens_Behavior.call_stringRep_6148840541591415725(imp);\n        ListSequence.fromList(javaImportedModels).addSequence(Sequence.fromIterable(getModelsByName(moduleScope, pkgName)));\n      }\n      // adding our MPS module scope after java imports as backup \n      // <node> \n\n\n      // go through models which correspond to java imported packages \n      for (SModel model : ListSequence.fromList(javaImportedModels)) {\n        // FIXME will be unnecessary when transient models live in a separate repository \n        if (!(model.equals(contextNodeModel)) && model instanceof SModel && (model.getModule() instanceof TransientModelsModule)) {\n          continue;\n        }\n\n        SNode theResult = null;\n        boolean wasResult = false;\n\n        // TODO try to use some fast find support \n        Iterable<? extends SNode> roots = model.getRootNodes();\n        for (SNode r : roots) {\n          if (!(SNodeOperations.isInstanceOf(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"))) {\n            continue;\n          }\n          if (token.equals(SPropertyOperations.getString(SNodeOperations.cast(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"), \"name\"))) {\n            if (theResult != null) {\n              // ambiguity \n              return null;\n            }\n            theResult = construct(SNodeOperations.cast(r, \"jetbrains.mps.baseLanguage.structure.Classifier\"), tokenizer);\n            wasResult = true;\n          }\n        }\n\n        // if it was null, we should return anyway \n        if (wasResult) {\n          return theResult;\n        }\n      }\n\n    }\n\n    // try to use old logic \n    // try to resolve as fq name in current model \n\n    if (1 > 0) {\n      return resolveNonSpecialSyntax(refText, contextNode);\n    }\n\n    Iterable<SNode> result;\n\n    result = resolveClassifierByFqName(SNodeOperations.getModel(contextNode), refText);\n    if (Sequence.fromIterable(result).isNotEmpty()) {\n      return ((int) Sequence.fromIterable(result).count() == 1 ?\n        Sequence.fromIterable(result).first() :\n        null\n      );\n    }\n\n    // try to resolve as fq name in current scope \n    Iterable<SModule> visibleModules = check_8z6r2b_a0a24a21(((AbstractModule) check_8z6r2b_a0a0a0qb0m(SNodeOperations.getModel(contextNode)))).getVisibleModules();\n    result = resolveClassifierByFqNameWithNonStubPriority(Sequence.fromIterable(visibleModules).translate(new ITranslator2<SModule, SModel>() {\n      public Iterable<SModel> translate(SModule it) {\n        return it.getModels();\n      }\n    }), refText);\n    return ((int) Sequence.fromIterable(result).count() == 1 ?\n      Sequence.fromIterable(result).first() :\n      null\n    );\n\n  }","commit_id":"9551fe6c74c095de2e8c903bd676be5ed38fca56","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n\tpublic void put(T block, byte[] data, byte[] header,\n\t\t\tboolean overwrite, boolean isOldBlock) throws IOException,\n\t\t\tKeyCollisionException {\n\t\tbyte[] routingKey = block.getRoutingKey();\n\t\tByteArrayWrapper key = new ByteArrayWrapper(routingKey);\n\t\t\n\t\tBlock<T> storeBlock = new Block<T>();\n\t\tstoreBlock.block = block;\n\t\tstoreBlock.data = data;\n\t\tstoreBlock.header = header;\n\t\tstoreBlock.overwrite = overwrite;\n\t\tstoreBlock.isOldBlock = isOldBlock;\n\t\t\n\t\tlong sizeBlock = data.length+header.length+block.getFullKey().length+routingKey.length;\t\n\t\tboolean cacheIt = true;\n\t\t\n\t\t//Case cache it\n\t\tconfigLock.writeLock().lock();\n\t\t\n\t\ttry {\n\t\t\tif(!shuttingDown) {\n\t\t\t\tBlock<T> previousBlock = blocksByRoutingKey.get(key);\n\t\t\t\n\t\t\t\tif(!collisionPossible || overwrite) {\n\t\t\t\t\tblocksByRoutingKey.put(key, storeBlock);\n\t\t\t\t\t\n\t\t\t\t\tif(previousBlock == null) {\n\t\t\t\t\t\tsize += sizeBlock;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Case cache it but is it in blocksByRoutingKey? If so, throw a KCE\n\t\t\t\t\tif(previousBlock != null) {\n\t\t\t\t\t\tthrow new KeyCollisionException();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//Is probablyInStore()? If so, remove it from blocksByRoutingKey, and set a flag so we don't call put()\n\t\t\t\t\tif(backDatastore.probablyInStore(routingKey)) {\n\t\t\t\t\t\tcacheIt = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tblocksByRoutingKey.put(key, storeBlock);\n\t\t\t\t\t\tsize += sizeBlock;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Check max size\n\t\t\t\tif(size > maxSize) {\n\t\t\t\t\tpushAll();\n\t\t\t\t} else {\n\t\t\t\t\t//Check period\n\t\t\t\t\tif(!blocksByRoutingKey.isEmpty() && !startJob) {\n\t\t\t\t\t\tstartJob = true;\n\t\t\t\t\t\tthis.ticker.queueTimedJob(new Runnable() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tconfigLock.writeLock().lock();\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tpushAll();\n\t\t\t\t\t\t\t\t\tstartJob = false;\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\tconfigLock.writeLock().unlock();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, period);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcacheIt = false;\n\t\t\t}\n\t\t} finally {\n\t\t\tconfigLock.writeLock().unlock();\n\t\t}\n\t\t\n\t\t//Case don't cache it\n\t\tif(!cacheIt) {\n\t\t\tbackDatastore.put(block, data, header, overwrite, isOldBlock);\n\t\t\treturn;\n\t\t}\n\t}","id":39384,"modified_method":"@Override\n\tpublic void put(T block, byte[] data, byte[] header,\n\t\t\tboolean overwrite, boolean isOldBlock) throws IOException,\n\t\t\tKeyCollisionException {\n\t\tbyte[] routingKey = block.getRoutingKey();\n\t\tfinal ByteArrayWrapper key = new ByteArrayWrapper(routingKey);\n\t\t\n\t\tfinal Block<T> storeBlock = new Block<T>();\n\t\tstoreBlock.block = block;\n\t\tstoreBlock.data = data;\n\t\tstoreBlock.header = header;\n\t\tstoreBlock.overwrite = overwrite;\n\t\tstoreBlock.isOldBlock = isOldBlock;\n\t\t\n\t\tlong sizeBlock = data.length+header.length+block.getFullKey().length+routingKey.length;\t\n\t\tboolean cacheIt = true;\n\t\t\n\t\t//Case cache it\n\t\tconfigLock.writeLock().lock();\n\t\t\n\t\ttry {\n\t\t\tif(!shuttingDown) {\n\t\t\t\tBlock<T> previousBlock = blocksByRoutingKey.get(key);\n\t\t\t\n\t\t\t\tif(!collisionPossible || overwrite) {\n\t\t\t\t\tblocksByRoutingKey.put(key, storeBlock);\n\t\t\t\t\t\n\t\t\t\t\tif(previousBlock == null) {\n\t\t\t\t\t\tsize += sizeBlock;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Case cache it but is it in blocksByRoutingKey? If so, throw a KCE\n\t\t\t\t\tif(previousBlock != null) {\n\t\t\t\t\t\tthrow new KeyCollisionException();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//Is probablyInStore()? If so, remove it from blocksByRoutingKey, and set a flag so we don't call put()\n\t\t\t\t\tif(backDatastore.probablyInStore(routingKey)) {\n\t\t\t\t\t\tcacheIt = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tblocksByRoutingKey.put(key, storeBlock);\n\t\t\t\t\t\tsize += sizeBlock;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Check max size\n\t\t\t\tif(size > maxSize) {\n\t\t\t\t\tpushAll();\n\t\t\t\t} else {\n\t\t\t\t\t//Check period\n\t\t\t\t\tif(!blocksByRoutingKey.isEmpty() && !startJob) {\n\t\t\t\t\t\tstartJob = true;\n\t\t\t\t\t\tthis.ticker.queueTimedJob(new Runnable() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tconfigLock.writeLock().lock();\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tpushAll();\n\t\t\t\t\t\t\t\t\tstartJob = false;\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\tconfigLock.writeLock().unlock();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, period);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcacheIt = false;\n\t\t\t}\n\t\t} finally {\n\t\t\tconfigLock.writeLock().unlock();\n\t\t}\n\t\t\n\t\t//Case don't cache it\n\t\tif(!cacheIt) {\n\t\t\tbackDatastore.put(block, data, header, overwrite, isOldBlock);\n\t\t\treturn;\n\t\t}\n\t}","commit_id":"f6e084a96847a6d4b3c19bf9545c9631e1365c1e","url":"https://github.com/freenet/fred"},{"original_method":"private void pushAll() {\n\t\tconfigLock.writeLock().lock();\n\t\ttry\n\t\t{\n\t\t\tfor(Block<T> block : blocksByRoutingKey.values()) {\n\t\t\t\tif(block != null) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tbackDatastore.put(block.block, block.data, block.header, block.overwrite, block.isOldBlock);\n\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\tLogger.error(this, \"Error in pushAll for CachingFreenetStore: \"+e, e);\n\t\t\t\t\t} catch (KeyCollisionException e) {\n\t\t\t\t\t\tLogger.error(this, \"Error in pushAll for CachingFreenetStore: \"+e, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tblocksByRoutingKey.clear();\n\t\t\tsize = 0;\n\t\t} finally {\n\t\t\tconfigLock.writeLock().unlock();\n\t\t}\n\t}","id":39385,"modified_method":"private void pushAll() {\n\t\tconfigLock.writeLock().lock();\n\t\ttry\n\t\t{\n\t\t\tfor(Block<T> block : blocksByRoutingKey.values()) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tbackDatastore.put(block.block, block.data, block.header, block.overwrite, block.isOldBlock);\n\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\tLogger.error(this, \"Error in pushAll for CachingFreenetStore: \"+e, e);\n\t\t\t\t\t} catch (KeyCollisionException e) {\n\t\t\t\t\t\tif(logMINOR) Logger.minor(this, \"KeyCollisionException in pushAll for CachingFreenetStore: \"+e, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tblocksByRoutingKey.clear();\n\t\t\tsize = 0;\n\t\t} finally {\n\t\t\tconfigLock.writeLock().unlock();\n\t\t}\n\t}","commit_id":"f6e084a96847a6d4b3c19bf9545c9631e1365c1e","url":"https://github.com/freenet/fred"},{"original_method":"@Override\n\tpublic T fetch(byte[] routingKey, byte[] fullKey,\n\t\t\tboolean dontPromote, boolean canReadClientCache,\n\t\t\tboolean canReadSlashdotCache, boolean ignoreOldBlocks, BlockMetadata meta) \n\t\t\tthrows IOException {\n\t\tByteArrayWrapper key = new ByteArrayWrapper(routingKey);\n\t\t\n\t\tBlock<T> block = null;\n\t\t\n\t\tconfigLock.readLock().lock();\n\t\ttry {\n\t\t\tblock = blocksByRoutingKey.get(key);\n\t\t} finally {\n\t\t\tconfigLock.readLock().unlock();\n\t\t}\n\t\t\n\t\tif(block != null) {\n\t\t\ttry {\n\t\t\t\tT ret = this.callback.construct(block.data, block.header, routingKey, block.block.getFullKey(), canReadClientCache, canReadSlashdotCache, meta, null);\n\t\t\t\treturn ret;\n\t\t\t} catch (KeyVerifyException e) {\n\t\t\t\tLogger.error(this, \"Error in fetching for CachingFreenetStore: \"+e, e);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn backDatastore.fetch(routingKey, fullKey, dontPromote, canReadClientCache, canReadSlashdotCache, ignoreOldBlocks, meta);\t\n\t}","id":39386,"modified_method":"@Override\n\tpublic T fetch(byte[] routingKey, byte[] fullKey,\n\t\t\tboolean dontPromote, boolean canReadClientCache,\n\t\t\tboolean canReadSlashdotCache, boolean ignoreOldBlocks, BlockMetadata meta) \n\t\t\tthrows IOException {\n\t\tByteArrayWrapper key = new ByteArrayWrapper(routingKey);\n\t\t\n\t\tBlock<T> block = null;\n\t\t\n\t\tconfigLock.readLock().lock();\n\t\ttry {\n\t\t\tblock = blocksByRoutingKey.get(key);\n\t\t} finally {\n\t\t\tconfigLock.readLock().unlock();\n\t\t}\n\t\t\n\t\tif(block != null) {\n\t\t\ttry {\n\t\t\t\treturn this.callback.construct(block.data, block.header, routingKey, block.block.getFullKey(), canReadClientCache, canReadSlashdotCache, meta, null);\n\t\t\t} catch (KeyVerifyException e) {\n\t\t\t\tLogger.error(this, \"Error in fetching for CachingFreenetStore: \"+e, e);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn backDatastore.fetch(routingKey, fullKey, dontPromote, canReadClientCache, canReadSlashdotCache, ignoreOldBlocks, meta);\t\n\t}","commit_id":"f6e084a96847a6d4b3c19bf9545c9631e1365c1e","url":"https://github.com/freenet/fred"},{"original_method":"public SurveillanceData getSurveillanceData() {\n        SurveillanceData data = new SurveillanceData();\n\n        SimpleWebTable table = m_webSurveillanceService.createSurveillanceTable(getView().getName(), new ProgressMonitor());\n        \n        List<SurveillanceGroup> columnGroups = new ArrayList<SurveillanceGroup>();\n        for (Cell columnHeader : table.getColumnHeaders().subList(1, table.getColumnHeaders().size())) {\n            SurveillanceGroup columnGroup = new SurveillanceGroup();\n            columnGroup.setId(columnHeader.getContent().toString());\n            columnGroup.setLabel(columnHeader.getContent().toString());\n            columnGroup.setColumn(true);\n            columnGroups.add(columnGroup);\n        }\n        data.setColumnGroups(columnGroups.toArray(new SurveillanceGroup[columnGroups.size()]));\n        \n        List<SurveillanceGroup> rowGroups = new ArrayList<SurveillanceGroup>();\n        for (List<Cell> row : table.getRows()) {\n            Cell rowHeader = row.get(0);\n            \n            SurveillanceGroup rowGroup = new SurveillanceGroup();\n            rowGroup.setId(rowHeader.getContent().toString());\n            rowGroup.setLabel(rowHeader.getContent().toString());\n            rowGroups.add(rowGroup);\n        }\n        data.setRowGroups(rowGroups.toArray(new SurveillanceGroup[rowGroups.size()]));\n\n        int rowIndex = 0;\n        for (List<Cell> row : table.getRows()) {\n            int columnIndex = 0;\n            for (Cell cell : row.subList(1, row.size())) {\n                data.setCell(rowIndex, columnIndex, cell.getContent().toString());\n                \n                columnIndex++;\n            }\n            rowIndex++;\n        }\n        \n        data.setComplete(true);\n\n        return data;\n    }","id":39387,"modified_method":"public SurveillanceData getSurveillanceData() {\n        SurveillanceData data = new SurveillanceData();\n\n        SimpleWebTable table = m_webSurveillanceService.createSurveillanceTable(getView().getName(), new ProgressMonitor());\n        \n        List<SurveillanceGroup> columnGroups = new ArrayList<SurveillanceGroup>();\n        for (Cell columnHeader : table.getColumnHeaders().subList(1, table.getColumnHeaders().size())) {\n            SurveillanceGroup columnGroup = new SurveillanceGroup();\n            columnGroup.setId(columnHeader.getContent().toString());\n            columnGroup.setLabel(columnHeader.getContent().toString());\n            columnGroup.setColumn(true);\n            columnGroups.add(columnGroup);\n        }\n        data.setColumnGroups(columnGroups.toArray(new SurveillanceGroup[columnGroups.size()]));\n        \n        List<SurveillanceGroup> rowGroups = new ArrayList<SurveillanceGroup>();\n        for (List<Cell> row : table.getRows()) {\n            Cell rowHeader = row.get(0);\n            \n            SurveillanceGroup rowGroup = new SurveillanceGroup();\n            rowGroup.setId(rowHeader.getContent().toString());\n            rowGroup.setLabel(rowHeader.getContent().toString());\n            rowGroups.add(rowGroup);\n        }\n        data.setRowGroups(rowGroups.toArray(new SurveillanceGroup[rowGroups.size()]));\n\n        int rowIndex = 0;\n        for (List<Cell> row : table.getRows()) {\n            int columnIndex = 0;\n            for (Cell cell : row.subList(1, row.size())) {\n                data.setCell(rowIndex, columnIndex, cell.getContent().toString(), cell.getStyleClass());\n                \n                columnIndex++;\n            }\n            rowIndex++;\n        }\n        \n        data.setComplete(true);\n\n        return data;\n    }","commit_id":"3a0695334d0a855ab767ae2fa2cadd4448ec70fb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"void populate(SurveillanceData data) {\n            m_grid.resize(data.getRowCount()+1, data.getColumnCount()+1);\n            \n            // set row 0 to be column headings\n            m_grid.getRowFormatter().setStyleName(0, \"header\");\n            m_grid.setText(0, 0, \"Show all nodes\");\n            for(int col = 0; col < data.getColumnCount(); col++) {\n                m_grid.setText(0, col+1, data.getColumnHeading(col));\n            }\n            \n            \n            // now do row 1 to rowCount\n            for(int row = 0; row < data.getRowCount(); row++) {\n                // set the row heading\n                m_grid.setText(row+1, 0, data.getRowHeading(row));\n                \n                // now set the data\n                for(int col = 0; col < data.getColumnCount(); col++) {\n                    m_grid.setText(row+1, col+1, data.getCell(row, col));\n                }\n            }\n            \n        }","id":39388,"modified_method":"void populate(SurveillanceData data) {\n            m_grid.resize(data.getRowCount()+1, data.getColumnCount()+1);\n            \n            // set row 0 to be column headings\n            m_grid.getRowFormatter().setStyleName(0, \"header\");\n            m_grid.setText(0, 0, \"Show all nodes\");\n            for(int col = 0; col < data.getColumnCount(); col++) {\n                m_grid.setText(0, col+1, data.getColumnHeading(col));\n            }\n            \n            \n            // now do row 1 to rowCount\n            for(int row = 0; row < data.getRowCount(); row++) {\n                // set the row heading\n                m_grid.setText(row+1, 0, data.getRowHeading(row));\n                \n                // now set the data\n                for(int col = 0; col < data.getColumnCount(); col++) {\n                    SurveillanceIntersection cell = data.getCell(row, col);\n                    m_grid.setText(row+1, col+1, cell.getData());\n                    m_grid.getCellFormatter().setStyleName(row+1, col+1, cell.getStatus());\n                }\n                \n                m_grid.getRowFormatter().setStyleName(row+1, \"CellStatus\");\n            }\n            \n        }","commit_id":"3a0695334d0a855ab767ae2fa2cadd4448ec70fb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getCell(int row, int col) {\n        ensureData();\n        return m_data[row][col] == null ? \"N/A\" :  m_data[row][col];\n    }","id":39389,"modified_method":"public SurveillanceIntersection getCell(int row, int col) {\n        ensureData();\n        return m_cells[row][col];\n    }","commit_id":"3a0695334d0a855ab767ae2fa2cadd4448ec70fb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void ensureData() {\n        if (m_data == null) {\n            m_data = new String[getRowCount()][getColumnCount()];\n        }\n    }","id":39390,"modified_method":"private void ensureData() {\n        if (m_cells == null) {\n            m_cells = new SurveillanceIntersection[getRowCount()][getColumnCount()];\n            for(int row = 0; row < getRowCount(); row++) {\n                for(int col = 0; col < getColumnCount(); col++) {\n                    m_cells[row][col] = new SurveillanceIntersection(m_rowGroups[row], m_columnGroups[col]);\n                }\n            }\n        }\n    }","commit_id":"3a0695334d0a855ab767ae2fa2cadd4448ec70fb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void setCell(int row, int col, String value) {\n        ensureData();\n        m_data[row][col] = value;\n    }","id":39391,"modified_method":"public void setCell(int row, int col, String value) {\n        setCell(row, col, value, null);\n    }","commit_id":"3a0695334d0a855ab767ae2fa2cadd4448ec70fb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public SurveillanceIntersection getIntersection(int row, int col) {\n        return new SurveillanceIntersection(m_rowGroups[row], m_columnGroups[col]);\n    }","id":39392,"modified_method":"public SurveillanceIntersection getIntersection(int row, int col) {\n        return m_cells[row][col];\n    }","commit_id":"3a0695334d0a855ab767ae2fa2cadd4448ec70fb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String toString() {\n        return m_rowGroup.getLabel() + \" X \" + m_columnGroup.getLabel();\n    }","id":39393,"modified_method":"public String toString() {\n        return m_columnGroup.getLabel() + \" \" + m_rowGroup.getLabel();\n    }","commit_id":"3a0695334d0a855ab767ae2fa2cadd4448ec70fb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractTableFeature#execute(String)\n     */\n    public boolean execute(String parameter)\n    {\n        TableCellElement caretCell =\n            TableUtils.getInstance().getCell(TableUtils.getInstance().getCaretNode(rta.getDocument()));\n        TableRowElement row = TableUtils.getInstance().getRow(caretCell);\n        TableElement table = TableUtils.getInstance().getTable(row);\n\n        // Move caret\n        TableCellElement newCaretCell = TableUtils.getInstance().getPreviousCellInColumn(caretCell);\n        if (newCaretCell == null) {\n            newCaretCell = TableUtils.getInstance().getNextCellInColumn(caretCell);\n        }\n        if (newCaretCell != null) {\n            TableUtils.getInstance().putCaretInNode(rta, newCaretCell);\n        }\n\n        // delete row\n        table.deleteRow(row.getRowIndex());\n\n        return true;\n    }","id":39394,"modified_method":"@Override\n    public boolean execute(String parameter)\n    {\n        Node selectedNode = TableUtils.getInstance().getCaretNode(rta.getDocument());\n\n        // If the selection is inside a table cell then move the caret to the previous/next cell on the same column.\n        TableCellElement selectedCell = TableUtils.getInstance().getCell(selectedNode);\n        if (selectedCell != null) {\n            TableCellElement newCaretCell = TableUtils.getInstance().getPreviousCellInColumn(selectedCell);\n            if (newCaretCell == null) {\n                newCaretCell = TableUtils.getInstance().getNextCellInColumn(selectedCell);\n            }\n            if (newCaretCell != null) {\n                TableUtils.getInstance().putCaretInNode(rta, newCaretCell);\n            }\n        }\n\n        // Delete the selected table row.\n        TableRowElement selectedRow = TableUtils.getInstance().getRow(selectedNode);\n        TableUtils.getInstance().getTable(selectedRow).deleteRow(selectedRow.getRowIndex());\n\n        return true;\n    }","commit_id":"8bd88538aebb623c4fba3bdd0cc1fc8434ee454e","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractTableFeature#isEnabled()\n     */\n    public boolean isEnabled()\n    {\n        return super.isEnabled()\n            && TableUtils.getInstance().getRow(TableUtils.getInstance().getCaretNode(rta.getDocument())) != null;\n    }","id":39395,"modified_method":"@Override\n    public boolean isEnabled()\n    {\n        return super.isEnabled()\n            && TableUtils.getInstance().getRow(TableUtils.getInstance().getCaretNode(rta.getDocument())) != null;\n    }","commit_id":"8bd88538aebb623c4fba3bdd0cc1fc8434ee454e","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public SurveillanceData getSurveillanceData() {\n        SurveillanceData data = new SurveillanceData();\n\n        SimpleWebTable table = m_webSurveillanceService.createSurveillanceTable(getView().getName(), new ProgressMonitor());\n        \n        List<SurveillanceGroup> columnGroups = new ArrayList<SurveillanceGroup>();\n        for (Cell columnHeader : table.getColumnHeaders().subList(1, table.getColumnHeaders().size())) {\n            SurveillanceGroup columnGroup = new SurveillanceGroup();\n            columnGroup.setId(columnHeader.getContent().toString());\n            columnGroup.setLabel(columnHeader.getContent().toString());\n            columnGroup.setColumn(true);\n            columnGroups.add(columnGroup);\n        }\n        data.setColumnGroups(columnGroups.toArray(new SurveillanceGroup[columnGroups.size()]));\n        \n        List<SurveillanceGroup> rowGroups = new ArrayList<SurveillanceGroup>();\n        for (List<Cell> row : table.getRows()) {\n            Cell rowHeader = row.get(0);\n            \n            SurveillanceGroup rowGroup = new SurveillanceGroup();\n            rowGroup.setId(rowHeader.getContent().toString());\n            rowGroup.setLabel(rowHeader.getContent().toString());\n            rowGroups.add(rowGroup);\n        }\n        data.setRowGroups(rowGroups.toArray(new SurveillanceGroup[rowGroups.size()]));\n\n        int rowIndex = 0;\n        for (List<Cell> row : table.getRows()) {\n            int columnIndex = 0;\n            for (Cell cell : row.subList(1, row.size())) {\n                data.setCell(rowIndex, columnIndex, cell.getContent().toString());\n                \n                columnIndex++;\n            }\n            rowIndex++;\n        }\n        \n        data.setComplete(true);\n\n        return data;\n    }","id":39396,"modified_method":"public SurveillanceData getSurveillanceData() {\n        SurveillanceData data = new SurveillanceData();\n\n        SimpleWebTable table = m_webSurveillanceService.createSurveillanceTable(getView().getName(), new ProgressMonitor());\n        \n        List<SurveillanceGroup> columnGroups = new ArrayList<SurveillanceGroup>();\n        for (Cell columnHeader : table.getColumnHeaders().subList(1, table.getColumnHeaders().size())) {\n            SurveillanceGroup columnGroup = new SurveillanceGroup();\n            columnGroup.setId(columnHeader.getContent().toString());\n            columnGroup.setLabel(columnHeader.getContent().toString());\n            columnGroup.setColumn(true);\n            columnGroups.add(columnGroup);\n        }\n        data.setColumnGroups(columnGroups.toArray(new SurveillanceGroup[columnGroups.size()]));\n        \n        List<SurveillanceGroup> rowGroups = new ArrayList<SurveillanceGroup>();\n        for (List<Cell> row : table.getRows()) {\n            Cell rowHeader = row.get(0);\n            \n            SurveillanceGroup rowGroup = new SurveillanceGroup();\n            rowGroup.setId(rowHeader.getContent().toString());\n            rowGroup.setLabel(rowHeader.getContent().toString());\n            rowGroups.add(rowGroup);\n        }\n        data.setRowGroups(rowGroups.toArray(new SurveillanceGroup[rowGroups.size()]));\n\n        int rowIndex = 0;\n        for (List<Cell> row : table.getRows()) {\n            int columnIndex = 0;\n            for (Cell cell : row.subList(1, row.size())) {\n                data.setCell(rowIndex, columnIndex, cell.getContent().toString(), cell.getStyleClass());\n                \n                columnIndex++;\n            }\n            rowIndex++;\n        }\n        \n        data.setComplete(true);\n\n        return data;\n    }","commit_id":"4ee293d3e5ee7b78f209332b53af247f5cbd0b50","url":"https://github.com/OpenNMS/opennms"},{"original_method":"void populate(SurveillanceData data) {\n            m_grid.resize(data.getRowCount()+1, data.getColumnCount()+1);\n            \n            // set row 0 to be column headings\n            m_grid.getRowFormatter().setStyleName(0, \"header\");\n            m_grid.setText(0, 0, \"Show all nodes\");\n            for(int col = 0; col < data.getColumnCount(); col++) {\n                m_grid.setText(0, col+1, data.getColumnHeading(col));\n            }\n            \n            \n            // now do row 1 to rowCount\n            for(int row = 0; row < data.getRowCount(); row++) {\n                // set the row heading\n                m_grid.setText(row+1, 0, data.getRowHeading(row));\n                \n                // now set the data\n                for(int col = 0; col < data.getColumnCount(); col++) {\n                    m_grid.setText(row+1, col+1, data.getCell(row, col));\n                }\n            }\n            \n        }","id":39397,"modified_method":"void populate(SurveillanceData data) {\n            m_grid.resize(data.getRowCount()+1, data.getColumnCount()+1);\n            \n            // set row 0 to be column headings\n            m_grid.getRowFormatter().setStyleName(0, \"header\");\n            m_grid.setText(0, 0, \"Show all nodes\");\n            for(int col = 0; col < data.getColumnCount(); col++) {\n                m_grid.setText(0, col+1, data.getColumnHeading(col));\n            }\n            \n            \n            // now do row 1 to rowCount\n            for(int row = 0; row < data.getRowCount(); row++) {\n                // set the row heading\n                m_grid.setText(row+1, 0, data.getRowHeading(row));\n                \n                // now set the data\n                for(int col = 0; col < data.getColumnCount(); col++) {\n                    SurveillanceIntersection cell = data.getCell(row, col);\n                    m_grid.setText(row+1, col+1, cell.getData());\n                    m_grid.getCellFormatter().setStyleName(row+1, col+1, cell.getStatus());\n                }\n                \n                m_grid.getRowFormatter().setStyleName(row+1, \"CellStatus\");\n            }\n            \n        }","commit_id":"4ee293d3e5ee7b78f209332b53af247f5cbd0b50","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public SurveillanceIntersection getIntersection(int row, int col) {\n        return new SurveillanceIntersection(m_rowGroups[row], m_columnGroups[col]);\n    }","id":39398,"modified_method":"public SurveillanceIntersection getIntersection(int row, int col) {\n        return m_cells[row][col];\n    }","commit_id":"4ee293d3e5ee7b78f209332b53af247f5cbd0b50","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void setCell(int row, int col, String value) {\n        ensureData();\n        m_data[row][col] = value;\n    }","id":39399,"modified_method":"public void setCell(int row, int col, String value) {\n        setCell(row, col, value, null);\n    }","commit_id":"4ee293d3e5ee7b78f209332b53af247f5cbd0b50","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void ensureData() {\n        if (m_data == null) {\n            m_data = new String[getRowCount()][getColumnCount()];\n        }\n    }","id":39400,"modified_method":"private void ensureData() {\n        if (m_cells == null) {\n            m_cells = new SurveillanceIntersection[getRowCount()][getColumnCount()];\n            for(int row = 0; row < getRowCount(); row++) {\n                for(int col = 0; col < getColumnCount(); col++) {\n                    m_cells[row][col] = new SurveillanceIntersection(m_rowGroups[row], m_columnGroups[col]);\n                }\n            }\n        }\n    }","commit_id":"4ee293d3e5ee7b78f209332b53af247f5cbd0b50","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getCell(int row, int col) {\n        ensureData();\n        return m_data[row][col] == null ? \"N/A\" :  m_data[row][col];\n    }","id":39401,"modified_method":"public SurveillanceIntersection getCell(int row, int col) {\n        ensureData();\n        return m_cells[row][col];\n    }","commit_id":"4ee293d3e5ee7b78f209332b53af247f5cbd0b50","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String toString() {\n        return m_rowGroup.getLabel() + \" X \" + m_columnGroup.getLabel();\n    }","id":39402,"modified_method":"public String toString() {\n        return m_columnGroup.getLabel() + \" \" + m_rowGroup.getLabel();\n    }","commit_id":"4ee293d3e5ee7b78f209332b53af247f5cbd0b50","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Draw a small rectangle.\n     * White if selected (as always) or red otherwise.\n     *\n     * @param n The node to draw.\n     */\n    public void visit(Node n) {\n        ElemStyle nodeStyle = MapPaintStyles.getStyle(n);\n        if (nodeStyle!=null) {\n            if (nodeStyle instanceof IconElemStyle) {\n                if (isZoomOk(nodeStyle)) {\n                    drawNode(n, ((IconElemStyle)nodeStyle).getIcon(), ((IconElemStyle)nodeStyle).doAnnotate());\n                }\n            } else {\n                // throw some sort of exception\n            }\n        } else {\n\t\t\tif (n.selected)\n\t\t\t\tdrawNode(n, selectedColor, selectedNodeSize, selectedNodeRadius, fillSelectedNode);\n\t\t\telse\n\t\t\t\tdrawNode(n, nodeColor, unselectedNodeSize, unselectedNodeRadius, fillUnselectedNode);\n        }\n    }","id":39403,"modified_method":"/**\n     * Draw a small rectangle.\n     * White if selected (as always) or red otherwise.\n     *\n     * @param n The node to draw.\n     */\n    public void visit(Node n) {\n        ElemStyle nodeStyle = MapPaintStyles.getStyle(n);\n        if (nodeStyle!=null) {\n            if (nodeStyle instanceof IconElemStyle) {\n                if (isZoomOk(nodeStyle)) {\n                    drawNode(n, ((IconElemStyle)nodeStyle).getIcon(), ((IconElemStyle)nodeStyle).doAnnotate());\n                }\n            } else {\n                // throw some sort of exception\n            }\n        } else {\n\t\t\tif (n.selected)\n\t\t\t\tdrawNode(n, selectedColor, selectedNodeSize, selectedNodeRadius, fillSelectedNode);\n\t\t\telse if (n.tagged)\n\t\t\t\tdrawNode(n, nodeColor, taggedNodeSize, taggedNodeRadius, fillUnselectedNode);\n\t\t\telse\n\t\t\t\tdrawNode(n, nodeColor, unselectedNodeSize, unselectedNodeRadius, fillUnselectedNode);\n        }\n    }","commit_id":"4de51573dc407ac875128ffd3f88628b705ae508","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Draw the node as small rectangle with the given color.\n     *\n     * @param n  The node to draw.\n     * @param color The color of the node.\n     */\n    public void drawNode(Node n, Color color, int size, int radius, boolean fill) {\n\t\tif (isZoomOk(null) && size > 1) {\n\t\t\tPoint p = nc.getPoint(n.eastNorth);\n\t\t\tif ((p.x < 0) || (p.y < 0) || (p.x > nc.getWidth())\n\t\t\t        || (p.y > nc.getHeight()))\n\t\t\t\treturn;\n\t\t\tg.setColor(color);\n\t\t\tif (fill)\n\t\t\t\tg.fillRect(p.x - radius, p.y - radius, size, size);\n\t\t\telse\n\t\t\t\tg.drawRect(p.x - radius, p.y - radius, size, size);\n\t\t}\n\t}","id":39404,"modified_method":"/**\n     * Draw the node as small rectangle with the given color.\n     *\n     * @param n  The node to draw.\n     * @param color The color of the node.\n     */\n    public void drawNode(Node n, Color color, int size, int radius, boolean fill) {\n\t\tif (isZoomOk(null) && size > 1) {\n\t\t\tPoint p = nc.getPoint(n.eastNorth);\n\t\t\tif ((p.x < 0) || (p.y < 0) || (p.x > nc.getWidth())\n\t\t\t        || (p.y > nc.getHeight()))\n\t\t\t\treturn;\n\t\t\tg.setColor(color);\n\t\t\tif (fill) {\n\t\t\t\tg.fillRect(p.x - radius, p.y - radius, size, size);\n\t\t\t\tg.drawRect(p.x - radius, p.y - radius, size, size);\n\t\t\t} else\n\t\t\t\tg.drawRect(p.x - radius, p.y - radius, size, size);\n\t\t}\n\t}","commit_id":"4de51573dc407ac875128ffd3f88628b705ae508","url":"https://github.com/openstreetmap/josm"},{"original_method":"public void visitAll(DataSet data) {\n        inactiveColor = Preferences.getPreferencesColor(\"inactive\", Color.DARK_GRAY);\n        selectedColor = Preferences.getPreferencesColor(\"selected\", Color.YELLOW);\n        nodeColor = Preferences.getPreferencesColor(\"node\", Color.RED);\n        dfltWayColor = Preferences.getPreferencesColor(\"way\", darkblue);\n        incompleteColor = Preferences.getPreferencesColor(\"incomplete way\", darkerblue);\n        backgroundColor = Preferences.getPreferencesColor(\"background\", Color.BLACK);\n        untaggedColor = Preferences.getPreferencesColor(\"untagged\",Color.GRAY);\n        textColor = Preferences.getPreferencesColor (\"text\", Color.WHITE);\n        showDirectionArrow = Main.pref.getBoolean(\"draw.segment.direction\");\n        showRelevantDirectionsOnly = Main.pref.getBoolean(\"draw.segment.relevant_directions_only\");\n        showOrderNumber = Main.pref.getBoolean(\"draw.segment.order_number\");\n        useRealWidth = Main.pref.getBoolean(\"mappaint.useRealWidth\",false);\n        zoomLevelDisplay = Main.pref.getBoolean(\"mappaint.zoomLevelDisplay\",false);\n        fillAreas = Main.pref.getBoolean(\"mappaint.fillareas\", true);\n\n\t\tselectedNodeRadius = Main.pref.getInteger(\"mappaint.node.selected-size\",\n\t\t        5) / 2;\n\t\tselectedNodeSize = selectedNodeRadius * 2;\n\t\tunselectedNodeRadius = Main.pref.getInteger(\n\t\t        \"mappaint.node.unselected-size\", 3) / 2;\n\t\tunselectedNodeSize = unselectedNodeRadius * 2;\n\n\t\tdefaultSegmentWidth = Main.pref.getInteger(\n\t\t        \"mappaint.segment.default-width\", 2);\n\n\t\tfillSelectedNode = Main.pref.getBoolean(\"mappaint.node.fill-selected\",\n\t\t        true);\n\t\tfillUnselectedNode = Main.pref.getBoolean(\n\t\t        \"mappaint.node.fill-unselected\", false);\n\n\t\t((Graphics2D)g)\n\t\t        .setRenderingHint(\n\t\t                RenderingHints.KEY_ANTIALIASING,\n\t\t                Main.pref.getBoolean(\"mappaint.use-antialiasing\", true) ? RenderingHints.VALUE_ANTIALIAS_ON\n\t\t                        : RenderingHints.VALUE_ANTIALIAS_OFF);\n\n\t\tfillAlpha = Math.min(255, Math.max(0, Integer.valueOf(Main.pref\n\t\t        .getInteger(\"mappaint.fillalpha\", 50))));\n\n        Collection<Way> noAreaWays = new LinkedList<Way>();\n\n        for (final OsmPrimitive osm : data.ways)\n            if (!osm.incomplete && !osm.deleted && MapPaintStyles.isArea(osm))\n                osm.visit(this);\n            else if (!osm.deleted && !osm.incomplete)\n                noAreaWays.add((Way)osm);\n\n        for (final OsmPrimitive osm : noAreaWays)\n            osm.visit(this);\n\n        for (final OsmPrimitive osm : data.nodes)\n            if (!osm.incomplete && !osm.deleted)\n                osm.visit(this);\n\n        for (final OsmPrimitive osm : data.getSelected())\n            if (!osm.incomplete && !osm.deleted){\n                osm.visit(this);\n            }\n        displaySegments();\n    }","id":39405,"modified_method":"public void visitAll(DataSet data) {\n        inactiveColor = Preferences.getPreferencesColor(\"inactive\", Color.DARK_GRAY);\n        selectedColor = Preferences.getPreferencesColor(\"selected\", Color.YELLOW);\n        nodeColor = Preferences.getPreferencesColor(\"node\", Color.RED);\n        dfltWayColor = Preferences.getPreferencesColor(\"way\", darkblue);\n        incompleteColor = Preferences.getPreferencesColor(\"incomplete way\", darkerblue);\n        backgroundColor = Preferences.getPreferencesColor(\"background\", Color.BLACK);\n        untaggedColor = Preferences.getPreferencesColor(\"untagged\",Color.GRAY);\n        textColor = Preferences.getPreferencesColor (\"text\", Color.WHITE);\n        showDirectionArrow = Main.pref.getBoolean(\"draw.segment.direction\");\n        showRelevantDirectionsOnly = Main.pref.getBoolean(\"draw.segment.relevant_directions_only\");\n        showOrderNumber = Main.pref.getBoolean(\"draw.segment.order_number\");\n        useRealWidth = Main.pref.getBoolean(\"mappaint.useRealWidth\",false);\n        zoomLevelDisplay = Main.pref.getBoolean(\"mappaint.zoomLevelDisplay\",false);\n        fillAreas = Main.pref.getBoolean(\"mappaint.fillareas\", true);\n\n\t\tselectedNodeRadius = Main.pref.getInteger(\"mappaint.node.selected-size\",\n\t\t        5) / 2;\n\t\tselectedNodeSize = selectedNodeRadius * 2;\n\n\t\tunselectedNodeRadius = Main.pref.getInteger(\n\t\t        \"mappaint.node.unselected-size\", 3) / 2;\n\t\tunselectedNodeSize = unselectedNodeRadius * 2;\n\n\t\ttaggedNodeRadius = Main.pref.getInteger(\n\t\t\t\t\"mappaint.node.tagged-size\", 5) / 2;\n\t\ttaggedNodeSize = taggedNodeRadius * 2;\n\n\t\tdefaultSegmentWidth = Main.pref.getInteger(\n\t\t        \"mappaint.segment.default-width\", 2);\n\n\t\tfillSelectedNode = Main.pref.getBoolean(\"mappaint.node.fill-selected\",\n\t\t        true);\n\t\tfillUnselectedNode = Main.pref.getBoolean(\n\t\t        \"mappaint.node.fill-unselected\", false);\n\n\t\t((Graphics2D)g)\n\t\t        .setRenderingHint(\n\t\t                RenderingHints.KEY_ANTIALIASING,\n\t\t                Main.pref.getBoolean(\"mappaint.use-antialiasing\", true) ? RenderingHints.VALUE_ANTIALIAS_ON\n\t\t                        : RenderingHints.VALUE_ANTIALIAS_OFF);\n\n\t\tfillAlpha = Math.min(255, Math.max(0, Integer.valueOf(Main.pref\n\t\t        .getInteger(\"mappaint.fillalpha\", 50))));\n\n        Collection<Way> noAreaWays = new LinkedList<Way>();\n\n        for (final OsmPrimitive osm : data.ways)\n            if (!osm.incomplete && !osm.deleted && MapPaintStyles.isArea(osm))\n                osm.visit(this);\n            else if (!osm.deleted && !osm.incomplete)\n                noAreaWays.add((Way)osm);\n\n        for (final OsmPrimitive osm : noAreaWays)\n            osm.visit(this);\n\n        for (final OsmPrimitive osm : data.nodes)\n            if (!osm.incomplete && !osm.deleted)\n                osm.visit(this);\n\n        for (final OsmPrimitive osm : data.getSelected())\n            if (!osm.incomplete && !osm.deleted){\n                osm.visit(this);\n            }\n        displaySegments();\n    }","commit_id":"4de51573dc407ac875128ffd3f88628b705ae508","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n\t * Draw the component.\n\t */\n\t@Override public void paint(Graphics g) {\n\t\tif (center == null)\n\t\t\treturn; // no data loaded yet.\n\t\t\n\t\tBufferedImage bim = new BufferedImage(getWidth(), getHeight(), Transparency.OPAQUE);\n\t\tGraphics2D tempG = bim.createGraphics();\n\t\ttempG.setColor(Preferences.getPreferencesColor(\"background\", Color.BLACK));\n\t\ttempG.fillRect(0, 0, getWidth(), getHeight());\n\n\t\tfor (int i = layers.size()-1; i >= 0; --i) {\n\t\t\tLayer l = layers.get(i);\n\t\t\tif (l.visible && l != getActiveLayer())\n\t\t\t\tl.paint(tempG, this);\n\t\t}\n\t\t\n\t\tif (getActiveLayer() != null && getActiveLayer().visible)\n\t\t\tgetActiveLayer().paint(tempG, this);\n\n\t\tfor (MapViewPaintable mvp : temporaryLayers) {\n\t\t\tmvp.paint(tempG, this);\n\t\t}\n\t\t\n\t\t// draw world borders\n\t\ttempG.setColor(Color.WHITE);\n\t\tBounds b = new Bounds();\n\t\tPoint min = getPoint(getProjection().latlon2eastNorth(b.min));\n\t\tPoint max = getPoint(getProjection().latlon2eastNorth(b.max));\n\t\tint x1 = Math.min(min.x, max.x);\n\t\tint y1 = Math.min(min.y, max.y);\n\t\tint x2 = Math.max(min.x, max.x);\n\t\tint y2 = Math.max(min.y, max.y);\n\t\tif (x1 > 0 || y1 > 0 || x2 < getWidth() || y2 < getHeight())\n\t\t\ttempG.drawRect(x1, y1, x2-x1+1, y2-y1+1);\n\t\t\n\t\tif (playHeadMarker != null)\n\t\t\tplayHeadMarker.paint(tempG, this);\n\n\t\tg.drawImage(bim, 0, 0, null);\n\t\tsuper.paint(g);\n\t}","id":39406,"modified_method":"/**\n\t * Draw the component.\n\t */\n\t@Override public void paint(Graphics g) {\n\t\tif (center == null)\n\t\t\treturn; // no data loaded yet.\n\n\t\t// re-create offscreen-buffer if we've been resized, otherwise\n\t\t// just re-use it.\n\t\tif (null == offscreenBuffer || offscreenBuffer.getWidth() != getWidth()\n\t\t        || offscreenBuffer.getHeight() != getHeight())\n\t\t\toffscreenBuffer = new BufferedImage(getWidth(), getHeight(),\n\t\t\t        BufferedImage.TYPE_INT_ARGB);\n\n\t\tGraphics2D tempG = offscreenBuffer.createGraphics();\n\t\ttempG.setColor(Preferences.getPreferencesColor(\"background\", Color.BLACK));\n\t\ttempG.fillRect(0, 0, getWidth(), getHeight());\n\n\t\tfor (int i = layers.size()-1; i >= 0; --i) {\n\t\t\tLayer l = layers.get(i);\n\t\t\tif (l.visible && l != getActiveLayer())\n\t\t\t\tl.paint(tempG, this);\n\t\t}\n\t\t\n\t\tif (getActiveLayer() != null && getActiveLayer().visible)\n\t\t\tgetActiveLayer().paint(tempG, this);\n\n\t\tfor (MapViewPaintable mvp : temporaryLayers) {\n\t\t\tmvp.paint(tempG, this);\n\t\t}\n\t\t\n\t\t// draw world borders\n\t\ttempG.setColor(Color.WHITE);\n\t\tBounds b = new Bounds();\n\t\tPoint min = getPoint(getProjection().latlon2eastNorth(b.min));\n\t\tPoint max = getPoint(getProjection().latlon2eastNorth(b.max));\n\t\tint x1 = Math.min(min.x, max.x);\n\t\tint y1 = Math.min(min.y, max.y);\n\t\tint x2 = Math.max(min.x, max.x);\n\t\tint y2 = Math.max(min.y, max.y);\n\t\tif (x1 > 0 || y1 > 0 || x2 < getWidth() || y2 < getHeight())\n\t\t\ttempG.drawRect(x1, y1, x2-x1+1, y2-y1+1);\n\t\t\n\t\tif (playHeadMarker != null)\n\t\t\tplayHeadMarker.paint(tempG, this);\n\n\t\tg.drawImage(offscreenBuffer, 0, 0, null);\n\t\tsuper.paint(g);\n\t}","commit_id":"4de51573dc407ac875128ffd3f88628b705ae508","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n\t * Draw the node as small rectangle with the given color.\n\t *\n\t * @param n\t\tThe node to draw.\n\t * @param color The color of the node.\n\t */\n\tpublic void drawNode(Node n, Color color, int size, int radius, boolean fill) {\n\t\tif (size > 1) {\n\t\t\tPoint p = nc.getPoint(n.eastNorth);\n\t\t\tif ((p.x < 0) || (p.y < 0) || (p.x > nc.getWidth())\n\t\t\t        || (p.y > nc.getHeight()))\n\t\t\t\treturn;\n\t\t\tg.setColor(color);\n\t\t\tif (fill)\n\t\t\t\tg.fillRect(p.x - radius, p.y - radius, size, size);\n\t\t\telse\n\t\t\t\tg.drawRect(p.x - radius, p.y - radius, size, size);\n\t\t}\n\t}","id":39407,"modified_method":"/**\n\t * Draw the node as small rectangle with the given color.\n\t *\n\t * @param n\t\tThe node to draw.\n\t * @param color The color of the node.\n\t */\n\tpublic void drawNode(Node n, Color color, int size, int radius, boolean fill) {\n\t\tif (size > 1) {\n\t\t\tPoint p = nc.getPoint(n.eastNorth);\n\t\t\tif ((p.x < 0) || (p.y < 0) || (p.x > nc.getWidth())\n\t\t\t        || (p.y > nc.getHeight()))\n\t\t\t\treturn;\n\t\t\tg.setColor(color);\n\t\t\tif (fill) {\n\t\t\t\tg.fillRect(p.x - radius, p.y - radius, size, size);\n\t\t\t\tg.drawRect(p.x - radius, p.y - radius, size, size);\n\t\t\t} else\n\t\t\t\tg.drawRect(p.x - radius, p.y - radius, size, size);\n\t\t}\n\t}","commit_id":"4de51573dc407ac875128ffd3f88628b705ae508","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n\t * Draw a small rectangle. \n\t * White if selected (as always) or red otherwise.\n\t * \n\t * @param n The node to draw.\n\t */\n\tpublic void visit(Node n) {\n\t\tif (n.incomplete) return;\n\n\t\tif (inactive)\n\t\t\tdrawNode(n, inactiveColor, unselectedNodeSize, unselectedNodeRadius, fillUnselectedNode);\n\t\telse if (n.selected)\n\t\t\tdrawNode(n, selectedColor, selectedNodeSize, selectedNodeRadius, fillSelectedNode);\n\t\telse\n\t\t\tdrawNode(n, nodeColor, unselectedNodeSize, unselectedNodeRadius, fillUnselectedNode);\n\t}","id":39408,"modified_method":"/**\n\t * Draw a small rectangle. \n\t * White if selected (as always) or red otherwise.\n\t * \n\t * @param n The node to draw.\n\t */\n\tpublic void visit(Node n) {\n\t\tif (n.incomplete) return;\n\n\t\tif (inactive)\n\t\t\tdrawNode(n, inactiveColor, unselectedNodeSize, unselectedNodeRadius, fillUnselectedNode);\n\t\telse if (n.selected)\n\t\t\tdrawNode(n, selectedColor, selectedNodeSize, selectedNodeRadius, fillSelectedNode);\n\t\telse if(n.tagged)\n\t\t\tdrawNode(n, nodeColor, taggedNodeSize, taggedNodeRadius, fillUnselectedNode);\n\t\telse \n\t\t\tdrawNode(n, nodeColor, unselectedNodeSize, unselectedNodeRadius, fillUnselectedNode);\n\t}","commit_id":"4de51573dc407ac875128ffd3f88628b705ae508","url":"https://github.com/openstreetmap/josm"},{"original_method":"public void visitAll(DataSet data) {\n\t\tinactiveColor = Preferences.getPreferencesColor(\"inactive\", Color.DARK_GRAY);\n\t\tselectedColor = Preferences.getPreferencesColor(\"selected\", Color.WHITE);\n\t\tnodeColor = Preferences.getPreferencesColor(\"node\", Color.RED);\n\t\tdfltWayColor = Preferences.getPreferencesColor(\"way\", darkblue);\n\t\trelationColor = Preferences.getPreferencesColor(\"relation\", teal);\n\t\tuntaggedWayColor = Preferences.getPreferencesColor(\"untagged way\", darkgreen);\n\t\tincompleteColor = Preferences.getPreferencesColor(\"incomplete way\", darkerblue);\n\t\tbackgroundColor = Preferences.getPreferencesColor(\"background\", Color.BLACK);\n\t\tshowDirectionArrow = Main.pref.getBoolean(\"draw.segment.direction\");\n\t\tshowRelevantDirectionsOnly = Main.pref.getBoolean(\"draw.segment.relevant_directions_only\");\n\t\tshowOrderNumber = Main.pref.getBoolean(\"draw.segment.order_number\");\n\t\t\n\t\tselectedNodeRadius = Main.pref.getInteger(\"mappaint.node.selected-size\",\n\t\t        5) / 2;\n\t\tselectedNodeSize = selectedNodeRadius * 2;\n\t\tunselectedNodeRadius = Main.pref.getInteger(\n\t\t        \"mappaint.node.unselected-size\", 3) / 2;\n\t\tunselectedNodeSize = unselectedNodeRadius * 2;\n\n\t\tdefaultSegmentWidth = Main.pref.getInteger(\n\t\t        \"mappaint.segment.default-width\", 2);\n\n\t\tfillSelectedNode = Main.pref.getBoolean(\"mappaint.node.fill-selected\",\n\t\t        true);\n\t\tfillUnselectedNode = Main.pref.getBoolean(\n\t\t        \"mappaint.node.fill-unselected\", false);\n\n\t\t((Graphics2D)g)\n\t\t        .setRenderingHint(\n\t\t                RenderingHints.KEY_ANTIALIASING,\n\t\t                Main.pref.getBoolean(\"mappaint.use-antialiasing\", true) ? RenderingHints.VALUE_ANTIALIAS_ON\n\t\t                        : RenderingHints.VALUE_ANTIALIAS_OFF);\n\n\t\t// draw tagged ways first, then untagged ways. takes\n\t\t// time to iterate through list twice, OTOH does not\n\t\t// require changing the colour while painting...\n\t\tfor (final OsmPrimitive osm : data.relations)\n\t\t\tif (!osm.deleted && !osm.selected)\n\t\t\t\tosm.visit(this);\n\n\t\tfor (final OsmPrimitive osm : data.ways)\n\t\t\tif (!osm.deleted && !osm.selected && osm.tagged)\n\t\t\t\tosm.visit(this);\n\t\tdisplaySegments(null);\n\n\t    for (final OsmPrimitive osm : data.ways)\n\t\t\tif (!osm.deleted && !osm.selected && !osm.tagged)\n\t\t\t\tosm.visit(this);\n\t\tdisplaySegments(null);\n\t    \n\t\tfor (final OsmPrimitive osm : data.nodes)\n\t\t\tif (!osm.deleted && !osm.selected)\n\t\t\t\tosm.visit(this);\n\t\n\t\tfor (final OsmPrimitive osm : data.getSelected())\n\t\t\tif (!osm.deleted)\n\t\t\t\tosm.visit(this);\n\t\tdisplaySegments(null);\n        }","id":39409,"modified_method":"public void visitAll(DataSet data) {\n\t\tinactiveColor = Preferences.getPreferencesColor(\"inactive\", Color.DARK_GRAY);\n\t\tselectedColor = Preferences.getPreferencesColor(\"selected\", Color.WHITE);\n\t\tnodeColor = Preferences.getPreferencesColor(\"node\", Color.RED);\n\t\tdfltWayColor = Preferences.getPreferencesColor(\"way\", darkblue);\n\t\trelationColor = Preferences.getPreferencesColor(\"relation\", teal);\n\t\tuntaggedWayColor = Preferences.getPreferencesColor(\"untagged way\", darkgreen);\n\t\tincompleteColor = Preferences.getPreferencesColor(\"incomplete way\", darkerblue);\n\t\tbackgroundColor = Preferences.getPreferencesColor(\"background\", Color.BLACK);\n\t\tshowDirectionArrow = Main.pref.getBoolean(\"draw.segment.direction\");\n\t\tshowRelevantDirectionsOnly = Main.pref.getBoolean(\"draw.segment.relevant_directions_only\");\n\t\tshowOrderNumber = Main.pref.getBoolean(\"draw.segment.order_number\");\n\t\t\n\t\tselectedNodeRadius = Main.pref.getInteger(\"mappaint.node.selected-size\",\n\t\t        5) / 2;\n\t\tselectedNodeSize = selectedNodeRadius * 2;\n\t\tunselectedNodeRadius = Main.pref.getInteger(\n\t\t        \"mappaint.node.unselected-size\", 3) / 2;\n\t\tunselectedNodeSize = unselectedNodeRadius * 2;\n\n\t\ttaggedNodeRadius = Main.pref.getInteger(\n\t\t\t\t\"mappaint.node.tagged-size\", 5) / 2;\n\t\ttaggedNodeSize = taggedNodeRadius * 2;\n\n\t\tdefaultSegmentWidth = Main.pref.getInteger(\n\t\t        \"mappaint.segment.default-width\", 2);\n\n\t\tfillSelectedNode = Main.pref.getBoolean(\"mappaint.node.fill-selected\",\n\t\t        true);\n\t\tfillUnselectedNode = Main.pref.getBoolean(\n\t\t        \"mappaint.node.fill-unselected\", false);\n\n\t\t((Graphics2D)g)\n\t\t        .setRenderingHint(\n\t\t                RenderingHints.KEY_ANTIALIASING,\n\t\t                Main.pref.getBoolean(\"mappaint.use-antialiasing\", true) ? RenderingHints.VALUE_ANTIALIAS_ON\n\t\t                        : RenderingHints.VALUE_ANTIALIAS_OFF);\n\n\t\t// draw tagged ways first, then untagged ways. takes\n\t\t// time to iterate through list twice, OTOH does not\n\t\t// require changing the colour while painting...\n\t\tfor (final OsmPrimitive osm : data.relations)\n\t\t\tif (!osm.deleted && !osm.selected)\n\t\t\t\tosm.visit(this);\n\n\t\tfor (final OsmPrimitive osm : data.ways)\n\t\t\tif (!osm.deleted && !osm.selected && osm.tagged)\n\t\t\t\tosm.visit(this);\n\t\tdisplaySegments(null);\n\n\t    for (final OsmPrimitive osm : data.ways)\n\t\t\tif (!osm.deleted && !osm.selected && !osm.tagged)\n\t\t\t\tosm.visit(this);\n\t\tdisplaySegments(null);\n\t    \n\t\tfor (final OsmPrimitive osm : data.nodes)\n\t\t\tif (!osm.deleted && !osm.selected)\n\t\t\t\tosm.visit(this);\n\t\n\t\tfor (final OsmPrimitive osm : data.getSelected())\n\t\t\tif (!osm.deleted)\n\t\t\t\tosm.visit(this);\n\t\tdisplaySegments(null);\n        }","commit_id":"4de51573dc407ac875128ffd3f88628b705ae508","url":"https://github.com/openstreetmap/josm"},{"original_method":"@Override\n    protected void drawImpl(DrawContext dc)\n    {\n        if (!isFiltered()) {\n\n            final double renderScale = dc.getAbsoluteScale();\n\n            if (dc.isInteractive() && mFontSize.get() * renderScale < 5) { // if net font point size < 5, do LOD\n\n                // Level-Of-Detail rendering -- increases speed when lots of nodes rendered\n                // all we do is fill the shape\n                \n                dc.g.setColor(mFillColor.get());\n                //if (isSelected() || getHeight() * dc.zoom > 5)\n                if (getHeight() * renderScale > 5) {\n                    // filling shapes slower than drawing rectangles, tho not as much an improvement\n                    // as skipping text\n                    dc.g.fill(getZeroShape());\n                } else {\n                    dc.setAntiAlias(false);\n                    dc.g.fillRect(0, 0, (int)getWidth(), (int)getHeight());\n                }\n                \n                // now we skip drawing text / decorations / children -- just skipping\n                // the text makes a big difference when then there are lots of nodes\n                return;\n            }\n        \n\n            \n            // Desired functionality is that if this node is filtered, we don't draw it, of course.\n            // But also, even if this node is filtered, we still draw any children who are\n            // NOT filtered -- we just drop out the parent background.\n            drawNode(dc);\n        }\n\n        //-------------------------------------------------------\n        // Draw any children\n        //-------------------------------------------------------\n\n        if (hasChildren()) {\n            //if (isZoomedFocus()) dc.g.setComposite(ZoomTransparency);\n            super.drawChildren(dc);\n        }\n    }","id":39410,"modified_method":"@Override\n    protected void drawImpl(DrawContext dc)\n    {\n        final double renderScale = dc.getAbsoluteScale();\n\n        if (dc.isInteractive() && mFontSize.get() * renderScale < 5) { // if net font point size < 5, do LOD\n\n            //=============================================================================\n            // DRAW FAST (with little or no detail)\n            //=============================================================================\n\n            // Level-Of-Detail rendering -- increases speed when lots of nodes rendered\n            // all we do is fill the shape\n                \n            //if (isSelected() || getHeight() * dc.zoom > 5)\n            if (getHeight() * renderScale > 5) {\n                // filling shapes slower than drawing rectangles, tho not as much an improvement\n                // as skipping text\n                //dc.g.setColor(mFillColor.get());\n                // TODO: may want to depend on # of items in selection,\n                // in which case, hava MapViewer set up parameters for this in the DrawContext\n                // and check those flags here.  Also, the selectio stroke is completely useless\n                // when zoomed out -- it's being draw at scale.\n                if (isSelected())\n                    dc.g.setColor(COLOR_SELECTION);\n                else\n                    dc.g.setColor(mFillColor.get());\n                dc.g.fill(getZeroShape());\n            } else {\n                dc.setAntiAlias(false);\n                if (isSelected())\n                    dc.g.setColor(COLOR_SELECTION);\n                else\n                    dc.g.setColor(mFillColor.get());\n                dc.g.fillRect(0, 0, (int)getWidth(), (int)getHeight());\n            }\n                \n            // now we skip drawing text / decorations / children -- just skipping\n            // the text makes a big difference when then there are lots of nodes\n            \n        } else {\n            \n            //=============================================================================\n            // DRAW COMPLETE (with full detail)\n            //=============================================================================\n            \n            if (!isFiltered()) {\n\n                // Desired functionality is that if this node is filtered, we don't draw it, of course.\n                // But also, even if this node is filtered, we still draw any children who are\n                // NOT filtered -- we just drop out the parent background.\n                drawNode(dc);\n            }\n            \n            //-------------------------------------------------------\n            // Draw any children\n            //-------------------------------------------------------\n            \n            if (hasChildren()) {\n                //if (isZoomedFocus()) dc.g.setComposite(ZoomTransparency);\n                super.drawChildren(dc);\n            }\n        }\n    }","commit_id":"fafee22a00ba597aafafbd9fd1586ef0265a930c","url":"https://github.com/VUE/VUE"},{"original_method":"@Override\n\tprotected void drawImpl(DrawContext dc) {\n\t\tif (!isFiltered()) {\n\t\t\t// Desired functionality is that if this node is filtered, we don't\n\t\t\t// draw it, of course.\n\t\t\t// But also, even if this node is filtered, we still draw any\n\t\t\t// children who are\n\t\t\t// NOT filtered -- we just drop out the parent background.\n\t\t\t// dc.g.clipRect(0, 0,(int) getWidth(), getAdjustedHeight());\n\t\t//\tif (!((SHTMLDocument)this.getRichLabelBox().getDocument()).isEditing())\n\t\t\t\tdrawNode(dc);\n\t\t}\n\n\t}","id":39411,"modified_method":"@Override\n\tprotected void drawImpl(DrawContext dc) {\n\t\tif (!isFiltered()) {\n\t\t\t// Desired functionality is that if this node is filtered, we don't\n\t\t\t// draw it, of course.\n\t\t\t// But also, even if this node is filtered, we still draw any\n\t\t\t// children who are\n\t\t\t// NOT filtered -- we just drop out the parent background.\n\t\t\t// dc.g.clipRect(0, 0,(int) getWidth(), getAdjustedHeight());\n\n\t    \tdouble\talpha =  PrototypePanel.getAlpha();\n\n\t    \tif (alpha != 1) {\n\t        \t// \"Fade\" this text.\n\t    \t\tdc.setAlpha(alpha);\n\t    \t}\n\n\t\t//\tif (!((SHTMLDocument)this.getRichLabelBox().getDocument()).isEditing())\n\t\t\t\tdrawNode(dc);\n\t\t}\n\n\t}","commit_id":"2d64e9661b413bc02df96477485523645f4e201a","url":"https://github.com/VUE/VUE"},{"original_method":"@Override\n    protected void drawImpl(DrawContext dc)\n    {\n        if (!isFiltered()) {\n            // Desired functionality is that if this node is filtered, we don't draw it, of course.\n            // But also, even if this node is filtered, we still draw any children who are\n            // NOT filtered -- we just drop out the parent background.\n            drawNode(dc);\n        }\n\n        //-------------------------------------------------------\n        // Draw any children\n        //-------------------------------------------------------\n\n        if (hasChildren()) {\n            //if (isZoomedFocus()) dc.g.setComposite(ZoomTransparency);\n            super.drawChildren(dc);\n        }\n    }","id":39412,"modified_method":"@Override\n    protected void drawImpl(DrawContext dc)\n    {\n        if (!isFiltered()) {\n\n            if (dc.isInteractive() && mFontSize.get() * dc.zoom < 4) { // if net font point size < 5, do LOD\n\n                // Level-Of-Detail rendering -- increases speed when lots of nodes rendered\n                // all we do is fill the shape\n                \n                dc.g.setColor(mFillColor.get());\n                //if (isSelected() || getHeight() * dc.zoom > 5)\n                if (getHeight() * dc.zoom > 5)\n                    dc.g.fill(getZeroShape());\n                else {\n                    dc.setAntiAlias(false);\n                    dc.g.fillRect(0, 0, (int)getWidth(), (int)getHeight());\n                }\n                \n                return;\n            }\n        \n\n            \n            // Desired functionality is that if this node is filtered, we don't draw it, of course.\n            // But also, even if this node is filtered, we still draw any children who are\n            // NOT filtered -- we just drop out the parent background.\n            drawNode(dc);\n        }\n\n        //-------------------------------------------------------\n        // Draw any children\n        //-------------------------------------------------------\n\n        if (hasChildren()) {\n            //if (isZoomedFocus()) dc.g.setComposite(ZoomTransparency);\n            super.drawChildren(dc);\n        }\n    }","commit_id":"30ba2383c15e63c62f6e36d4334edbb350768ca3","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n     * This is consulted during LAYOUT, which can effect the size of the node.\n     * So if anything happens that changes what this returns, the node has\n     * to be laid out again.  (E.g., if we turn them all of with a pref,\n     * all nodes need to be re-laid out / resized\n     */\n    protected boolean iconShowing()\n    {    \t\n//         if (hasFlag(Flag.SLIDE_STYLE) || isTextNode()) // VUE-1220 - never hide resource icon, even on slides\n//             return false;\n//          else\n            return mIconBlock.isShowing(); // remember not current till after a layout\n    }","id":39413,"modified_method":"/**\n     * This is consulted during LAYOUT, which can effect the size of the node.\n     * So if anything happens that changes what this returns, the node has\n     * to be laid out again.  (E.g., if we turn them all of with a pref,\n     * all nodes need to be re-laid out / resized\n     */\n    protected boolean iconShowing()\n    {    \t\n//         if (hasFlag(Flag.SLIDE_STYLE) || isTextNode()) // VUE-1220 - never hide resource icon, even on slides\n//             return false;\n//          else\n        return !hasFlag(Flag.INTERNAL) && mIconBlock.isShowing(); // remember not current till after a layout\n    }","commit_id":"30ba2383c15e63c62f6e36d4334edbb350768ca3","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n     * Creates an element options button associated with this button and assigns the click-handler.<p>\n     * If this method returns null, no option button should be shown.<p> \n     * \n     * @param element the element to create the button for\n     * \n     * @return the created button\n     */\n    public CmsElementOptionButton createOptionForElement(CmsContainerPageElement element) {\n\n        if (!isOptionAvailable(element)) {\n            return null;\n        }\n        CmsElementOptionButton button = new CmsElementOptionButton(this, element);\n        button.addClickHandler(m_elementClickHandler);\n        button.setEnabled(hasPermissions(element));\n        // TODO: if element option is not allowed, set reason as button title\n        return button;\n    }","id":39414,"modified_method":"/**\n     * Creates an element options button associated with this button and assigns the click-handler.<p>\n     * If this method returns null, no option button should be shown.<p> \n     * \n     * @param element the element to create the button for\n     * \n     * @return the created button\n     */\n    public CmsElementOptionButton createOptionForElement(CmsContainerPageElement element) {\n\n        if (!isOptionAvailable(element)) {\n            return null;\n        }\n        CmsElementOptionButton button = new CmsElementOptionButton(this, element);\n        button.addClickHandler(m_elementClickHandler);\n        //        button.setEnabled(hasPermissions(element));\n        // TODO: if element option is not allowed, set reason as button title\n        return button;\n    }","commit_id":"13bade499ec29a26d775bdbbf3a9cd5f7c68f85f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Creates a new container element from a resource id and a map of properties.<p> \n     * \n     * @param resourceId the resource id \n     * @param properties the map of properties \n     * \n     * @return the new container element bean \n     * \n     * @throws CmsException if something goes wrong \n     */\n    private CmsContainerElementBean createElement(CmsUUID resourceId, Map<String, String> properties)\n    throws CmsException {\n\n        CmsObject cms = getCmsObject();\n        Map<String, CmsXmlContentProperty> propertiesConf = OpenCms.getADEManager().getElementPropertyConfiguration(\n            cms,\n            cms.readResource(resourceId));\n\n        Map<String, String> changedProps = new HashMap<String, String>();\n        if (properties != null) {\n            for (Map.Entry<String, String> entry : properties.entrySet()) {\n                String propName = entry.getKey();\n                String propType = propertiesConf.get(propName).getPropertyType();\n                changedProps.put(\n                    propName,\n                    CmsXmlContentPropertyHelper.getPropValueIds(cms, propType, properties.get(propName)));\n            }\n        }\n        return new CmsContainerElementBean(resourceId, null, changedProps);\n    }","id":39415,"modified_method":"/**\n     * Creates a new container element from a resource id and a map of properties.<p> \n     * \n     * @param resourceId the resource id \n     * @param properties the map of properties \n     * \n     * @return the new container element bean \n     * \n     * @throws CmsException if something goes wrong \n     */\n    private CmsContainerElementBean createElement(CmsUUID resourceId, Map<String, String> properties)\n    throws CmsException {\n\n        CmsObject cms = getCmsObject();\n        Map<String, CmsXmlContentProperty> propertiesConf = OpenCms.getADEManager().getElementPropertyConfiguration(\n            cms,\n            cms.readResource(resourceId));\n\n        Map<String, String> changedProps = new HashMap<String, String>();\n        if (properties != null) {\n            for (Map.Entry<String, String> entry : properties.entrySet()) {\n                String propName = entry.getKey();\n                String propType = propertiesConf.get(propName).getPropertyType();\n                changedProps.put(\n                    propName,\n                    CmsXmlContentPropertyHelper.getPropValueIds(cms, propType, properties.get(propName)));\n            }\n        }\n        return new CmsContainerElementBean(resourceId, null, changedProps, false);\n    }","commit_id":"13bade499ec29a26d775bdbbf3a9cd5f7c68f85f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.ade.containerpage.shared.rpc.I_CmsContainerpageService#createNewElement(java.lang.String, java.lang.String, java.lang.String)\n     */\n    public CmsContainerElement createNewElement(String containerpageUri, String clientId, String resourceType)\n    throws CmsRpcException {\n\n        CmsContainerElement element = null;\n        try {\n            CmsResource newResource = OpenCms.getADEManager().createNewElement(\n                getCmsObject(),\n                containerpageUri,\n                getRequest(),\n                resourceType);\n            CmsContainerElementBean bean = getCachedElement(clientId);\n            CmsContainerElementBean newBean = new CmsContainerElementBean(\n                newResource.getStructureId(),\n                null,\n                bean.getProperties());\n            String newClientId = newBean.getClientId();\n            getSessionCache().setCacheContainerElement(newClientId, newBean);\n            element = new CmsContainerElement();\n            element.setClientId(newClientId);\n            element.setSitePath(getCmsObject().getSitePath(newResource));\n        } catch (CmsException e) {\n            error(e);\n        }\n        return element;\n    }","id":39416,"modified_method":"/**\n     * @see org.opencms.ade.containerpage.shared.rpc.I_CmsContainerpageService#createNewElement(java.lang.String, java.lang.String, java.lang.String)\n     */\n    public CmsContainerElement createNewElement(String containerpageUri, String clientId, String resourceType)\n    throws CmsRpcException {\n\n        CmsContainerElement element = null;\n        try {\n            CmsResource newResource = OpenCms.getADEManager().createNewElement(\n                getCmsObject(),\n                containerpageUri,\n                getRequest(),\n                resourceType);\n            CmsContainerElementBean bean = getCachedElement(clientId);\n            CmsContainerElementBean newBean = new CmsContainerElementBean(\n                newResource.getStructureId(),\n                null,\n                bean.getProperties(),\n                false);\n            String newClientId = newBean.getClientId();\n            getSessionCache().setCacheContainerElement(newClientId, newBean);\n            element = new CmsContainerElement();\n            element.setClientId(newClientId);\n            element.setSitePath(getCmsObject().getSitePath(newResource));\n        } catch (CmsException e) {\n            error(e);\n        }\n        return element;\n    }","commit_id":"13bade499ec29a26d775bdbbf3a9cd5f7c68f85f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Helper method for converting a CmsContainer to a CmsContainerBean when saving a container page.<p>\n     * \n     * @param container the container for which the CmsContainerBean should be created\n     * @param containerpageUri the URI of the container page \n     *  \n     * @return a container bean\n     */\n    private CmsContainerBean getContainerBean(CmsContainer container, String containerpageUri) {\n\n        CmsObject cms = getCmsObject();\n        CmsADESessionCache cache = getSessionCache();\n        List<CmsContainerElementBean> elements = new ArrayList<CmsContainerElementBean>();\n        for (CmsContainerElement elementData : container.getElements()) {\n            try {\n                if (elementData.isNew()) {\n                    elementData = createNewElement(\n                        containerpageUri,\n                        elementData.getClientId(),\n                        elementData.getNewType());\n                }\n                CmsContainerElementBean element = cache.getCacheContainerElement(elementData.getClientId());\n\n                // make sure resource is readable, \n                CmsResource resource = cms.readResource(element.getElementId());\n\n                // check if there is a valid formatter\n                int containerWidth = container.getWidth();\n                String formatterUri = OpenCms.getADEManager().getFormatterForContainerTypeAndWidth(\n                    cms,\n                    resource,\n                    container.getType(),\n                    containerWidth);\n                boolean hasValidFormatter = CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatterUri);\n                if (hasValidFormatter) {\n                    CmsResource formatter = cms.readResource(formatterUri);\n                    elements.add(new CmsContainerElementBean(\n                        element.getElementId(),\n                        formatter.getStructureId(),\n                        element.getProperties()));\n                }\n            } catch (Exception e) {\n                log(e.getLocalizedMessage(), e);\n            }\n        }\n        CmsContainerBean containerBean = new CmsContainerBean(container.getName(), container.getType(), -1, elements);\n        return containerBean;\n    }","id":39417,"modified_method":"/**\n     * Helper method for converting a CmsContainer to a CmsContainerBean when saving a container page.<p>\n     * \n     * @param container the container for which the CmsContainerBean should be created\n     * @param containerpageUri the URI of the container page \n     *  \n     * @return a container bean\n     */\n    private CmsContainerBean getContainerBean(CmsContainer container, String containerpageUri) {\n\n        CmsObject cms = getCmsObject();\n        CmsADESessionCache cache = getSessionCache();\n        List<CmsContainerElementBean> elements = new ArrayList<CmsContainerElementBean>();\n        for (CmsContainerElement elementData : container.getElements()) {\n            try {\n                if (elementData.isNew()) {\n                    elementData = createNewElement(\n                        containerpageUri,\n                        elementData.getClientId(),\n                        elementData.getNewType());\n                }\n                CmsContainerElementBean element = cache.getCacheContainerElement(elementData.getClientId());\n\n                // make sure resource is readable, \n                CmsResource resource = cms.readResource(element.getElementId());\n\n                // check if there is a valid formatter\n                int containerWidth = container.getWidth();\n                String formatterUri = OpenCms.getADEManager().getFormatterForContainerTypeAndWidth(\n                    cms,\n                    resource,\n                    container.getType(),\n                    containerWidth);\n                boolean hasValidFormatter = CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatterUri);\n                if (hasValidFormatter) {\n                    CmsResource formatter = cms.readResource(formatterUri);\n                    elements.add(new CmsContainerElementBean(\n                        element.getElementId(),\n                        formatter.getStructureId(),\n                        element.getProperties(),\n                        false));\n                }\n            } catch (Exception e) {\n                log(e.getLocalizedMessage(), e);\n            }\n        }\n        CmsContainerBean containerBean = new CmsContainerBean(container.getName(), container.getType(), -1, elements);\n        return containerBean;\n    }","commit_id":"13bade499ec29a26d775bdbbf3a9cd5f7c68f85f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Reads the cached element-bean for the given client-side-id from cache.<p>\n     * \n     * @param clientId the client-side-id\n     * \n     * @return the cached container element bean\n     */\n    private CmsContainerElementBean getCachedElement(String clientId) {\n\n        String id = clientId;\n        CmsContainerElementBean element = null;\n        element = getSessionCache().getCacheContainerElement(id);\n        if (element != null) {\n            return element;\n        }\n        if (id.contains(CmsADEManager.CLIENT_ID_SEPERATOR)) {\n            id = id.substring(0, id.indexOf(CmsADEManager.CLIENT_ID_SEPERATOR));\n            element = getSessionCache().getCacheContainerElement(id);\n            if (element != null) {\n                return element;\n            }\n        }\n        // this is necessary if the element has not been cached yet\n        element = new CmsContainerElementBean(OpenCms.getADEManager().convertToServerId(id), null, null);\n        getSessionCache().setCacheContainerElement(id, element);\n        return element;\n    }","id":39418,"modified_method":"/**\n     * Reads the cached element-bean for the given client-side-id from cache.<p>\n     * \n     * @param clientId the client-side-id\n     * \n     * @return the cached container element bean\n     */\n    private CmsContainerElementBean getCachedElement(String clientId) {\n\n        String id = clientId;\n        CmsContainerElementBean element = null;\n        element = getSessionCache().getCacheContainerElement(id);\n        if (element != null) {\n            return element;\n        }\n        if (id.contains(CmsADEManager.CLIENT_ID_SEPERATOR)) {\n            id = id.substring(0, id.indexOf(CmsADEManager.CLIENT_ID_SEPERATOR));\n            element = getSessionCache().getCacheContainerElement(id);\n            if (element != null) {\n                return element;\n            }\n        }\n        // this is necessary if the element has not been cached yet\n        element = new CmsContainerElementBean(OpenCms.getADEManager().convertToServerId(id), null, null, false);\n        getSessionCache().setCacheContainerElement(id, element);\n        return element;\n    }","commit_id":"13bade499ec29a26d775bdbbf3a9cd5f7c68f85f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Transforms all contained elements into {@link CmsContainerPageElement}.<p>\n     * \n     * @param container the container\n     */\n    public void consumeContainerElements(I_CmsDropContainer container) {\n\n        List<CmsContainerPageElement> elements = new ArrayList<CmsContainerPageElement>();\n        // the drag element widgets are created from the existing DOM elements,\n        // to establish the internal widget hierarchy the elements need to be removed from the DOM and added as widgets to the root panel\n        Element child = (Element)container.getElement().getFirstChildElement();\n        while (child != null) {\n            boolean isContainerElement = CmsDomUtil.hasClass(CLASS_CONTAINER_ELEMENTS, child);\n            boolean isSubcontainerElement = CmsDomUtil.hasClass(CLASS_SUB_CONTAINER_ELEMENTS, child);\n            if (isContainerElement || isSubcontainerElement) {\n                String clientId = child.getAttribute(\"title\");\n                String sitePath = child.getAttribute(\"alt\");\n                String noEditReason = child.getAttribute(\"rel\");\n                boolean hasProps = Boolean.parseBoolean(child.getAttribute(\"hasprops\"));\n\n                if (isContainerElement) {\n                    Element elementRoot = (Element)child.getFirstChildElement();\n                    DOM.removeChild(child, elementRoot);\n                    elements.add(createElement(elementRoot, container, clientId, sitePath, noEditReason, hasProps));\n                    DOM.removeChild((Element)container.getElement(), child);\n                } else if (isSubcontainerElement && (container instanceof CmsContainerPageContainer)) {\n                    CmsSubContainerElement subContainer = createSubcontainer(\n                        child,\n                        container,\n                        clientId,\n                        sitePath,\n                        noEditReason,\n                        hasProps);\n                    subContainer.setContainerId(container.getContainerId());\n                    elements.add(subContainer);\n                    DOM.removeChild((Element)container.getElement(), child);\n                    consumeContainerElements(subContainer);\n\n                    // important: adding the option-bar only after the sub-elements have been consumed \n                    addOptionBar(subContainer);\n                }\n            } else {\n                DOM.removeChild((Element)container.getElement(), child);\n            }\n\n            child = (Element)container.getElement().getFirstChildElement();\n        }\n\n        // re-append the element widgets by adding them to the root panel\n        Iterator<CmsContainerPageElement> it = elements.iterator();\n        while (it.hasNext()) {\n            container.add(it.next());\n        }\n    }","id":39419,"modified_method":"/**\n     * Transforms all contained elements into {@link CmsContainerPageElement}.<p>\n     * \n     * @param container the container\n     */\n    public void consumeContainerElements(I_CmsDropContainer container) {\n\n        List<CmsContainerPageElement> elements = new ArrayList<CmsContainerPageElement>();\n        // the drag element widgets are created from the existing DOM elements,\n        // to establish the internal widget hierarchy the elements need to be removed from the DOM and added as widgets to the root panel\n        Element child = (Element)container.getElement().getFirstChildElement();\n        while (child != null) {\n            boolean isContainerElement = CmsDomUtil.hasClass(CLASS_CONTAINER_ELEMENTS, child);\n            boolean isSubcontainerElement = CmsDomUtil.hasClass(CLASS_SUB_CONTAINER_ELEMENTS, child);\n            if (isContainerElement || isSubcontainerElement) {\n                String clientId = child.getAttribute(\"title\");\n                String sitePath = child.getAttribute(\"alt\");\n                String noEditReason = child.getAttribute(\"rel\");\n                String newType = child.getAttribute(\"newType\");\n                boolean hasProps = Boolean.parseBoolean(child.getAttribute(\"hasprops\"));\n\n                if (isContainerElement) {\n                    Element elementRoot = (Element)child.getFirstChildElement();\n                    DOM.removeChild(child, elementRoot);\n                    CmsContainerPageElement containerElement = createElement(\n                        elementRoot,\n                        container,\n                        clientId,\n                        sitePath,\n                        noEditReason,\n                        hasProps);\n                    if ((newType != null) && (newType.length() > 0)) {\n                        containerElement.setNewType(newType);\n                    }\n                    elements.add(containerElement);\n                    DOM.removeChild((Element)container.getElement(), child);\n                } else if (isSubcontainerElement && (container instanceof CmsContainerPageContainer)) {\n                    CmsSubContainerElement subContainer = createSubcontainer(\n                        child,\n                        container,\n                        clientId,\n                        sitePath,\n                        noEditReason,\n                        hasProps);\n                    subContainer.setContainerId(container.getContainerId());\n                    elements.add(subContainer);\n                    DOM.removeChild((Element)container.getElement(), child);\n                    consumeContainerElements(subContainer);\n\n                    // important: adding the option-bar only after the sub-elements have been consumed \n                    addOptionBar(subContainer);\n                }\n            } else {\n                DOM.removeChild((Element)container.getElement(), child);\n            }\n\n            child = (Element)container.getElement().getFirstChildElement();\n        }\n\n        // re-append the element widgets by adding them to the root panel\n        Iterator<CmsContainerPageElement> it = elements.iterator();\n        while (it.hasNext()) {\n            container.add(it.next());\n        }\n    }","commit_id":"13bade499ec29a26d775bdbbf3a9cd5f7c68f85f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the opening wrapper tag for elements in the offline project. The wrapper tag is needed by the container-page editor\n     * to identify elements within a container.<p>\n     * \n     * @param cms the cms object\n     * @param resource the element resource\n     * @param elementBean the element\n     * @param isSubcontainer <code>true<\/code> if element is a sub-container\n     * \n     * @return the opening tag\n     * \n     * @throws CmsException if something goes wrong reading permissions and lock state\n     */\n    protected String getElementWrapperTagStart(\n        CmsObject cms,\n        CmsResource resource,\n        CmsContainerElementBean elementBean,\n        boolean isSubcontainer) throws CmsException {\n\n        StringBuffer result = new StringBuffer(\"<div class='\");\n        if (isSubcontainer) {\n            result.append(CLASS_SUB_CONTAINER_ELEMENTS);\n        } else {\n            result.append(CLASS_CONTAINER_ELEMENTS);\n        }\n        result.append(\"'\");\n\n        String noEditReason = new CmsResourceUtil(cms, resource).getNoEditReason(OpenCms.getWorkplaceManager().getWorkplaceLocale(\n            cms));\n\n        result.append(\" title='\").append(elementBean.getClientId()).append(\"'\");\n        result.append(\" alt='\").append(elementBean.getSitePath()).append(\"'\");\n        result.append(\" hasprops='\").append(hasProperties(cms, resource)).append(\"'\");\n        result.append(\" rel='\").append(CmsStringUtil.escapeHtml(noEditReason)).append(\"'>\");\n\n        return result.toString();\n    }","id":39420,"modified_method":"/**\n     * Returns the opening wrapper tag for elements in the offline project. The wrapper tag is needed by the container-page editor\n     * to identify elements within a container.<p>\n     * \n     * @param cms the cms object\n     * @param resource the element resource\n     * @param elementBean the element\n     * @param isSubcontainer <code>true<\/code> if element is a sub-container\n     * \n     * @return the opening tag\n     * \n     * @throws CmsException if something goes wrong reading permissions and lock state\n     */\n    protected String getElementWrapperTagStart(\n        CmsObject cms,\n        CmsResource resource,\n        CmsContainerElementBean elementBean,\n        boolean isSubcontainer) throws CmsException {\n\n        StringBuffer result = new StringBuffer(\"<div class='\");\n        if (isSubcontainer) {\n            result.append(CLASS_SUB_CONTAINER_ELEMENTS);\n        } else {\n            result.append(CLASS_CONTAINER_ELEMENTS);\n        }\n        result.append(\"'\");\n        Locale wpLocale = OpenCms.getWorkplaceManager().getWorkplaceLocale(cms);\n        String noEditReason = new CmsResourceUtil(cms, resource).getNoEditReason(wpLocale);\n\n        result.append(\" title='\").append(elementBean.getClientId()).append(\"'\");\n        result.append(\" alt='\").append(elementBean.getSitePath()).append(\"'\");\n        if (elementBean.isCreateNew()) {\n            String typeName = OpenCms.getResourceManager().getResourceType(resource.getTypeId()).getTypeName();\n            result.append(\" newType='\").append(typeName).append(\"'\");\n            if (CmsStringUtil.isEmptyOrWhitespaceOnly(noEditReason)\n                && !OpenCms.getADEManager().isCreatableType(cms, cms.getRequestContext().getUri(), typeName)) {\n                String niceName = CmsWorkplaceMessages.getResourceTypeName(wpLocale, typeName);\n                noEditReason = Messages.get().getBundle().key(Messages.GUI_CONTAINERPAGE_TYPE_NOT_CREATABLE_1, niceName);\n            }\n        }\n        result.append(\" hasprops='\").append(hasProperties(cms, resource)).append(\"'\");\n        result.append(\" rel='\").append(CmsStringUtil.escapeHtml(noEditReason)).append(\"'>\");\n\n        return result.toString();\n    }","commit_id":"13bade499ec29a26d775bdbbf3a9cd5f7c68f85f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Adds a detail view element to a list of elements if necessary.<p>\n     * \n     * @param cms the CMS context\n     * @param allElems the list to which the element should be added\n     *  \n     * @throws CmsException if something goes wrong \n     */\n    private void addDetailViewToElements(CmsObject cms, List<CmsContainerElementBean> allElems) throws CmsException {\n\n        String containerType = getType();\n        int containerWidth = getContainerWidth();\n        ServletRequest req = pageContext.getRequest();\n        boolean isOnline = cms.getRequestContext().getCurrentProject().isOnlineProject();\n        CmsUUID detailId = CmsDetailPageResourceHandler.getDetailId(req);\n\n        if (detailId != null) {\n            // read detail view \n            CmsResource resUri = cms.readResource(detailId);\n            // get the right formatter\n            String elementFormatter = OpenCms.getADEManager().getFormatterForContainerTypeAndWidth(\n                cms,\n                resUri,\n                containerType,\n                containerWidth);\n            // check it\n            if (CmsStringUtil.isEmptyOrWhitespaceOnly(elementFormatter)) {\n                // throw exception if offline, ignore if online\n                if (!isOnline) {\n                    throw new CmsIllegalStateException(Messages.get().container(\n                        Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                        cms.getSitePath(resUri),\n                        OpenCms.getResourceManager().getResourceType(resUri).getTypeName(),\n                        containerType));\n                }\n            } else {\n                // add the detail view in first first of the current container\n                CmsContainerElementBean element = new CmsContainerElementBean(\n                    resUri.getStructureId(),\n                    cms.readResource(elementFormatter).getStructureId(),\n                    null); // when used as template element there are no properties\n                allElems.add(0, element);\n            }\n        }\n    }","id":39421,"modified_method":"/**\n     * Adds a detail view element to a list of elements if necessary.<p>\n     * \n     * @param cms the CMS context\n     * @param allElems the list to which the element should be added\n     *  \n     * @throws CmsException if something goes wrong \n     */\n    private void addDetailViewToElements(CmsObject cms, List<CmsContainerElementBean> allElems) throws CmsException {\n\n        String containerType = getType();\n        int containerWidth = getContainerWidth();\n        ServletRequest req = pageContext.getRequest();\n        boolean isOnline = cms.getRequestContext().getCurrentProject().isOnlineProject();\n        CmsUUID detailId = CmsDetailPageResourceHandler.getDetailId(req);\n\n        if (detailId != null) {\n            // read detail view \n            CmsResource resUri = cms.readResource(detailId);\n            // get the right formatter\n            String elementFormatter = OpenCms.getADEManager().getFormatterForContainerTypeAndWidth(\n                cms,\n                resUri,\n                containerType,\n                containerWidth);\n            // check it\n            if (CmsStringUtil.isEmptyOrWhitespaceOnly(elementFormatter)) {\n                // throw exception if offline, ignore if online\n                if (!isOnline) {\n                    throw new CmsIllegalStateException(Messages.get().container(\n                        Messages.ERR_XSD_NO_TEMPLATE_FORMATTER_3,\n                        cms.getSitePath(resUri),\n                        OpenCms.getResourceManager().getResourceType(resUri).getTypeName(),\n                        containerType));\n                }\n            } else {\n                // add the detail view in first first of the current container\n                CmsContainerElementBean element = new CmsContainerElementBean(\n                    resUri.getStructureId(),\n                    cms.readResource(elementFormatter).getStructureId(),\n                    null,\n                    false); // when used as template element there are no properties\n                allElems.add(0, element);\n            }\n        }\n    }","commit_id":"13bade499ec29a26d775bdbbf3a9cd5f7c68f85f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.ade.containerpage.client.ui.A_CmsToolbarOptionButton#hasPermissions(org.opencms.ade.containerpage.client.ui.CmsContainerPageElement)\n     */\n    @Override\n    public boolean hasPermissions(CmsContainerPageElement element) {\n\n        return CmsStringUtil.isEmptyOrWhitespaceOnly(element.getNoEditReason());\n    }","id":39422,"modified_method":"/**\n     * @see org.opencms.ade.containerpage.client.ui.A_CmsToolbarOptionButton#createOptionForElement(org.opencms.ade.containerpage.client.ui.CmsContainerPageElement)\n     */\n    @Override\n    public CmsElementOptionButton createOptionForElement(CmsContainerPageElement element) {\n\n        CmsElementOptionButton button = super.createOptionForElement(element);\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(element.getNoEditReason())) {\n            button.disable(element.getNoEditReason());\n        }\n        return button;\n    }","commit_id":"13bade499ec29a26d775bdbbf3a9cd5f7c68f85f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Tests unmarshalling a container page.\n     * \n     * @throws Exception in case something goes wrong\n     */\n    public void testUnmarshall() throws Exception {\n\n        CmsObject cms = getCmsObject();\n\n        // prepare locales\n        List<Locale> locales = new ArrayList<Locale>();\n        locales.add(Locale.ENGLISH);\n\n        // prepare container types\n        Map<Locale, List<String>> typesMap = new HashMap<Locale, List<String>>();\n        List<String> types = new ArrayList<String>();\n        types.add(\"test\");\n        typesMap.put(Locale.ENGLISH, types);\n\n        // prepare container names\n        Map<String, String> namesMap = new HashMap<String, String>();\n        namesMap.put(Locale.ENGLISH.toString() + \"test\", \"test\");\n\n        // prepare elements\n        Map<String, List<CmsContainerElementBean>> elemMap = new HashMap<String, List<CmsContainerElementBean>>();\n        List<CmsContainerElementBean> elems = new ArrayList<CmsContainerElementBean>();\n        Map<String, String> props = new HashMap<String, String>();\n        props.put(\"abc\", \"abc\");\n        props.put(\"test\", cms.readResource(\"/containerpage/content.html\").getStructureId().toString());\n        CmsContainerElementBean elem = new CmsContainerElementBean(\n            cms.readResource(\"/containerpage/content.html\").getStructureId(),\n            cms.readResource(\"/containerpage/formatter.jsp\").getStructureId(),\n            props);\n        elems.add(elem);\n        elemMap.put(Locale.ENGLISH.toString() + \"test\", elems);\n\n        CmsFile file = cms.readFile(\"containerpage/index.html\");\n        CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, file);\n\n        // check xml\n        assertEquals(locales, xmlCntPage.getLocales());\n        for (Locale locale : locales) {\n            List<String> expectedTypes = typesMap.get(locale);\n            for (int i = 0; i < expectedTypes.size(); i++) {\n                String expectedType = expectedTypes.get(i);\n                I_CmsXmlContentValue cnt = xmlCntPage.getValue(CmsXmlContainerPage.XmlNode.Containers.name(), locale, i);\n                String name = xmlCntPage.getStringValue(cms, CmsXmlUtils.concatXpath(\n                    cnt.getPath(),\n                    CmsXmlContainerPage.XmlNode.Name.name()), locale);\n                assertEquals(namesMap.get(locale.toString() + expectedType), name);\n                String type = xmlCntPage.getStringValue(cms, CmsXmlUtils.concatXpath(\n                    cnt.getPath(),\n                    CmsXmlContainerPage.XmlNode.Type.name()), locale);\n                assertEquals(expectedType, type);\n            }\n        }\n\n        // check beans\n        for (Locale locale : locales) {\n            CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, locale);\n            assertEquals(cntPage.getLocale(), locale);\n            types = typesMap.get(locale);\n            assertEquals(new HashSet<String>(types), cntPage.getTypes());\n            assertEquals(types.size(), cntPage.getContainers().size());\n            for (String type : types) {\n                assertTrue(cntPage.getContainers().containsKey(type));\n                CmsContainerBean cnt = cntPage.getContainers().get(type);\n                assertEquals(-1, cnt.getMaxElements());\n                assertEquals(type, cnt.getType());\n                assertEquals(namesMap.get(locale.toString() + type), cnt.getName());\n                assertEquals(elemMap.get(locale.toString() + type).size(), cnt.getElements().size());\n                for (int i = 0; i < cnt.getElements().size(); i++) {\n                    CmsContainerElementBean element = cnt.getElements().get(i);\n                    CmsContainerElementBean expected = elemMap.get(locale.toString() + type).get(i);\n\n                    assertEquals(expected.getClientId(), element.getClientId());\n                    assertEquals(expected.getElementId(), element.getElementId());\n                    assertEquals(expected.getFormatterId(), element.getFormatterId());\n                    assertEquals(expected.getProperties(), element.getProperties());\n                }\n            }\n        }\n    }","id":39423,"modified_method":"/**\n     * Tests unmarshalling a container page.\n     * \n     * @throws Exception in case something goes wrong\n     */\n    public void testUnmarshall() throws Exception {\n\n        CmsObject cms = getCmsObject();\n\n        // prepare locales\n        List<Locale> locales = new ArrayList<Locale>();\n        locales.add(Locale.ENGLISH);\n\n        // prepare container types\n        Map<Locale, List<String>> typesMap = new HashMap<Locale, List<String>>();\n        List<String> types = new ArrayList<String>();\n        types.add(\"test\");\n        typesMap.put(Locale.ENGLISH, types);\n\n        // prepare container names\n        Map<String, String> namesMap = new HashMap<String, String>();\n        namesMap.put(Locale.ENGLISH.toString() + \"test\", \"test\");\n\n        // prepare elements\n        Map<String, List<CmsContainerElementBean>> elemMap = new HashMap<String, List<CmsContainerElementBean>>();\n        List<CmsContainerElementBean> elems = new ArrayList<CmsContainerElementBean>();\n        Map<String, String> props = new HashMap<String, String>();\n        props.put(\"abc\", \"abc\");\n        props.put(\"test\", cms.readResource(\"/containerpage/content.html\").getStructureId().toString());\n        CmsContainerElementBean elem = new CmsContainerElementBean(\n            cms.readResource(\"/containerpage/content.html\").getStructureId(),\n            cms.readResource(\"/containerpage/formatter.jsp\").getStructureId(),\n            props,\n            false);\n        elems.add(elem);\n        elemMap.put(Locale.ENGLISH.toString() + \"test\", elems);\n\n        CmsFile file = cms.readFile(\"containerpage/index.html\");\n        CmsXmlContainerPage xmlCntPage = CmsXmlContainerPageFactory.unmarshal(cms, file);\n\n        // check xml\n        assertEquals(locales, xmlCntPage.getLocales());\n        for (Locale locale : locales) {\n            List<String> expectedTypes = typesMap.get(locale);\n            for (int i = 0; i < expectedTypes.size(); i++) {\n                String expectedType = expectedTypes.get(i);\n                I_CmsXmlContentValue cnt = xmlCntPage.getValue(CmsXmlContainerPage.XmlNode.Containers.name(), locale, i);\n                String name = xmlCntPage.getStringValue(\n                    cms,\n                    CmsXmlUtils.concatXpath(cnt.getPath(), CmsXmlContainerPage.XmlNode.Name.name()),\n                    locale);\n                assertEquals(namesMap.get(locale.toString() + expectedType), name);\n                String type = xmlCntPage.getStringValue(\n                    cms,\n                    CmsXmlUtils.concatXpath(cnt.getPath(), CmsXmlContainerPage.XmlNode.Type.name()),\n                    locale);\n                assertEquals(expectedType, type);\n            }\n        }\n\n        // check beans\n        for (Locale locale : locales) {\n            CmsContainerPageBean cntPage = xmlCntPage.getCntPage(cms, locale);\n            assertEquals(cntPage.getLocale(), locale);\n            types = typesMap.get(locale);\n            assertEquals(new HashSet<String>(types), cntPage.getTypes());\n            assertEquals(types.size(), cntPage.getContainers().size());\n            for (String type : types) {\n                assertTrue(cntPage.getContainers().containsKey(type));\n                CmsContainerBean cnt = cntPage.getContainers().get(type);\n                assertEquals(-1, cnt.getMaxElements());\n                assertEquals(type, cnt.getType());\n                assertEquals(namesMap.get(locale.toString() + type), cnt.getName());\n                assertEquals(elemMap.get(locale.toString() + type).size(), cnt.getElements().size());\n                for (int i = 0; i < cnt.getElements().size(); i++) {\n                    CmsContainerElementBean element = cnt.getElements().get(i);\n                    CmsContainerElementBean expected = elemMap.get(locale.toString() + type).get(i);\n\n                    assertEquals(expected.getClientId(), element.getClientId());\n                    assertEquals(expected.getElementId(), element.getElementId());\n                    assertEquals(expected.getFormatterId(), element.getFormatterId());\n                    assertEquals(expected.getProperties(), element.getProperties());\n                }\n            }\n        }\n    }","commit_id":"13bade499ec29a26d775bdbbf3a9cd5f7c68f85f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.widgets.I_CmsADEWidget#getConfiguration(org.opencms.file.CmsObject, org.opencms.xml.types.A_CmsXmlContentValue, org.opencms.i18n.CmsMessages, org.opencms.file.CmsResource, java.util.Locale)\n     */\n    public String getConfiguration(\n        CmsObject cms,\n        A_CmsXmlContentValue schemaType,\n        CmsMessages messages,\n        CmsResource resource,\n        Locale contentLocale) {\n\n        JSONObject result = getJSONConfiguration(cms, resource);\n        try {\n            addEmbeddedGalleryOptions(result, cms, schemaType, messages, resource, contentLocale);\n        } catch (JSONException e) {\n            LOG.error(e.getLocalizedMessage(), e);\n        }\n        return result.toString();\n    }","id":39424,"modified_method":"/**\n     * @see org.opencms.widgets.I_CmsADEWidget#getConfiguration(org.opencms.file.CmsObject, org.opencms.xml.types.A_CmsXmlContentValue, org.opencms.i18n.CmsMessages, org.opencms.file.CmsResource, java.util.Locale)\n     */\n    public String getConfiguration(\n        CmsObject cms,\n        A_CmsXmlContentValue schemaType,\n        CmsMessages messages,\n        CmsResource resource,\n        Locale contentLocale) {\n\n        JSONObject result = getJSONConfiguration(cms, resource, contentLocale);\n        try {\n            addEmbeddedGalleryOptions(result, cms, schemaType, messages, resource, contentLocale);\n        } catch (JSONException e) {\n            LOG.error(e.getLocalizedMessage(), e);\n        }\n        return result.toString();\n    }","commit_id":"454d99e3879c9a6e546e81ccf655815281b88eb1","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the WYSIWYG editor configuration as a JSON object.<p>\n     * \n     * @param cms the OpenCms context\n     * @param resource the edited resource\n     * @return the configuration\n     */\n    protected JSONObject getJSONConfiguration(CmsObject cms, CmsResource resource) {\n\n        JSONObject result = new JSONObject();\n\n        CmsHtmlWidgetOption widgetOptions = getHtmlWidgetOption();\n        CmsEditorDisplayOptions options = OpenCms.getWorkplaceManager().getEditorDisplayOptions();\n        Properties displayOptions = options.getDisplayOptions(cms);\n        try {\n            if (options.showElement(\"gallery.enhancedoptions\", displayOptions)) {\n                result.put(\"cmsGalleryEnhancedOptions\", true);\n            }\n            if (options.showElement(\"gallery.usethickbox\", displayOptions)) {\n                result.put(\"cmsGalleryUseThickbox\", true);\n            }\n            result.put(\"fullpage\", widgetOptions.isFullPage());\n            List<String> toolbarItems = widgetOptions.getButtonBarShownItems();\n            result.put(\"toolbar_items\", toolbarItems);\n            result.put(\"language\", OpenCms.getWorkplaceManager().getWorkplaceLocale(cms).getLanguage());\n            String editorHeight = widgetOptions.getEditorHeight();\n            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(editorHeight)) {\n                editorHeight = editorHeight.replaceAll(\"px\", \"\");\n                result.put(\"height\", editorHeight);\n            }\n            // set CSS style sheet for current editor widget if configured\n            boolean cssConfigured = false;\n            String cssPath = \"\";\n            if (widgetOptions.useCss()) {\n                cssPath = widgetOptions.getCssPath();\n                // set the CSS path to null (the created configuration String passed to JS will not include this path then)\n                widgetOptions.setCssPath(null);\n                cssConfigured = true;\n            } else if (OpenCms.getWorkplaceManager().getEditorCssHandlers().size() > 0) {\n                Iterator<I_CmsEditorCssHandler> i = OpenCms.getWorkplaceManager().getEditorCssHandlers().iterator();\n                try {\n                    String editedResourceSitePath = resource == null ? null : cms.getSitePath(resource);\n                    while (i.hasNext()) {\n                        I_CmsEditorCssHandler handler = i.next();\n                        if (handler.matches(cms, editedResourceSitePath)) {\n                            cssPath = handler.getUriStyleSheet(cms, editedResourceSitePath);\n                            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(cssPath)) {\n                                cssConfigured = true;\n                            }\n                            break;\n                        }\n                    }\n                } catch (Exception e) {\n                    // ignore, CSS could not be set\n                }\n            }\n            if (cssConfigured) {\n                result.put(\"content_css\", OpenCms.getLinkManager().substituteLink(cms, cssPath));\n            }\n\n            if (widgetOptions.showStylesFormat()) {\n                try {\n                    CmsFile file = cms.readFile(widgetOptions.getStylesFormatPath());\n                    String characterEncoding = OpenCms.getSystemInfo().getDefaultEncoding();\n                    result.put(\"style_formats\", new String(file.getContents(), characterEncoding));\n                } catch (CmsException cmsException) {\n                    LOG.error(\"Can not open file:\" + widgetOptions.getStylesFormatPath(), cmsException);\n                } catch (UnsupportedEncodingException ex) {\n                    LOG.error(ex);\n                }\n            }\n            String formatSelectOptions = widgetOptions.getFormatSelectOptions();\n            if (!CmsStringUtil.isEmpty(formatSelectOptions)\n                && !widgetOptions.isButtonHidden(CmsHtmlWidgetOption.OPTION_FORMATSELECT)) {\n                formatSelectOptions = StringUtils.replace(formatSelectOptions, \";\", \",\");\n                result.put(\"block_formats\", formatSelectOptions);\n            }\n            CmsWorkplaceEditorConfiguration editorConfig = OpenCms.getWorkplaceManager().getWorkplaceEditorManager().getEditorConfiguration(\n                \"tinymce\");\n            Boolean pasteText = Boolean.valueOf(editorConfig.getParameters().get(\"paste_text\"));\n            JSONObject directOptions = new JSONObject();\n            directOptions.put(\"paste_text_sticky_default\", pasteText);\n            directOptions.put(\"paste_text_sticky\", pasteText);\n            result.put(\"tinyMceOptions\", directOptions);\n        } catch (JSONException e) {\n            LOG.error(e.getLocalizedMessage(), e);\n        }\n        return result;\n    }","id":39425,"modified_method":"/**\n     * Returns the WYSIWYG editor configuration as a JSON object.<p>\n     * \n     * @param cms the OpenCms context\n     * @param resource the edited resource\n     * @param contentLocale the edited content locale\n     * \n     * @return the configuration\n     */\n    protected JSONObject getJSONConfiguration(CmsObject cms, CmsResource resource, Locale contentLocale) {\n\n        JSONObject result = new JSONObject();\n\n        CmsHtmlWidgetOption widgetOptions = getHtmlWidgetOption();\n        CmsEditorDisplayOptions options = OpenCms.getWorkplaceManager().getEditorDisplayOptions();\n        Properties displayOptions = options.getDisplayOptions(cms);\n        try {\n            if (options.showElement(\"gallery.enhancedoptions\", displayOptions)) {\n                result.put(\"cmsGalleryEnhancedOptions\", true);\n            }\n            if (options.showElement(\"gallery.usethickbox\", displayOptions)) {\n                result.put(\"cmsGalleryUseThickbox\", true);\n            }\n            result.put(\"fullpage\", widgetOptions.isFullPage());\n            List<String> toolbarItems = widgetOptions.getButtonBarShownItems();\n            result.put(\"toolbar_items\", toolbarItems);\n            Locale workplaceLocale = OpenCms.getWorkplaceManager().getWorkplaceLocale(cms);\n            result.put(\"language\", workplaceLocale.getLanguage());\n            String editorHeight = widgetOptions.getEditorHeight();\n            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(editorHeight)) {\n                editorHeight = editorHeight.replaceAll(\"px\", \"\");\n                result.put(\"height\", editorHeight);\n            }\n            // set CSS style sheet for current editor widget if configured\n            boolean cssConfigured = false;\n            String cssPath = \"\";\n            if (widgetOptions.useCss()) {\n                cssPath = widgetOptions.getCssPath();\n                // set the CSS path to null (the created configuration String passed to JS will not include this path then)\n                widgetOptions.setCssPath(null);\n                cssConfigured = true;\n            } else if (OpenCms.getWorkplaceManager().getEditorCssHandlers().size() > 0) {\n                Iterator<I_CmsEditorCssHandler> i = OpenCms.getWorkplaceManager().getEditorCssHandlers().iterator();\n                try {\n                    String editedResourceSitePath = resource == null ? null : cms.getSitePath(resource);\n                    while (i.hasNext()) {\n                        I_CmsEditorCssHandler handler = i.next();\n                        if (handler.matches(cms, editedResourceSitePath)) {\n                            cssPath = handler.getUriStyleSheet(cms, editedResourceSitePath);\n                            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(cssPath)) {\n                                cssConfigured = true;\n                            }\n                            break;\n                        }\n                    }\n                } catch (Exception e) {\n                    // ignore, CSS could not be set\n                }\n            }\n            if (cssConfigured) {\n                result.put(\"content_css\", OpenCms.getLinkManager().substituteLink(cms, cssPath));\n            }\n\n            if (widgetOptions.showStylesFormat()) {\n                try {\n                    CmsFile file = cms.readFile(widgetOptions.getStylesFormatPath());\n                    String characterEncoding = OpenCms.getSystemInfo().getDefaultEncoding();\n                    result.put(\"style_formats\", new String(file.getContents(), characterEncoding));\n                } catch (CmsException cmsException) {\n                    LOG.error(\"Can not open file:\" + widgetOptions.getStylesFormatPath(), cmsException);\n                } catch (UnsupportedEncodingException ex) {\n                    LOG.error(ex);\n                }\n            }\n            String formatSelectOptions = widgetOptions.getFormatSelectOptions();\n            if (!CmsStringUtil.isEmpty(formatSelectOptions)\n                && !widgetOptions.isButtonHidden(CmsHtmlWidgetOption.OPTION_FORMATSELECT)) {\n                formatSelectOptions = StringUtils.replace(formatSelectOptions, \";\", \",\");\n                result.put(\"block_formats\", formatSelectOptions);\n            }\n            CmsWorkplaceEditorConfiguration editorConfig = OpenCms.getWorkplaceManager().getWorkplaceEditorManager().getEditorConfiguration(\n                \"tinymce\");\n            Boolean pasteText = Boolean.valueOf(editorConfig.getParameters().get(\"paste_text\"));\n            JSONObject directOptions = new JSONObject();\n            directOptions.put(\"paste_text_sticky_default\", pasteText);\n            directOptions.put(\"paste_text_sticky\", pasteText);\n            result.put(\"tinyMceOptions\", directOptions);\n            // if spell checking is enabled, add the spell handler URL\n            if (OpenCmsSpellcheckHandler.isSpellcheckingEnabled()) {\n                result.put(\n                    \"spellcheck_url\",\n                    OpenCms.getLinkManager().substituteLinkForUnknownTarget(\n                        cms,\n                        OpenCmsSpellcheckHandler.getSpellcheckHandlerPath()));\n\n                result.put(\"spellcheck_language\", \"+\"\n                    + contentLocale.getDisplayLanguage(workplaceLocale)\n                    + \"=\"\n                    + contentLocale.getLanguage());\n            }\n        } catch (JSONException e) {\n            LOG.error(e.getLocalizedMessage(), e);\n        }\n        return result;\n    }","commit_id":"454d99e3879c9a6e546e81ccf655815281b88eb1","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.main.I_CmsRequestHandler#handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)\n     */\n    public void handle(HttpServletRequest req, HttpServletResponse res, String name) throws IOException {\n\n        CmsObject cms;\n        try {\n            cms = getCmsObject(req);\n\n            CmsSolrSpellchecker dict = OpenCms.getSearchManager().getSolrDictionary(cms);\n            dict.getSpellcheckingResult(res, req, cms);\n        } catch (CmsException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }","id":39426,"modified_method":"/**\n     * @see org.opencms.main.I_CmsRequestHandler#handle(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)\n     */\n    public void handle(HttpServletRequest req, HttpServletResponse res, String name) throws IOException {\n\n        CmsObject cms;\n        try {\n            cms = getCmsObject(req);\n\n            CmsSolrSpellchecker dict = OpenCms.getSearchManager().getSolrDictionary(cms);\n            dict.getSpellcheckingResult(res, req, cms);\n        } catch (CmsException e) {\n            LOG.error(e.getLocalizedMessage(), e);\n        }\n    }","commit_id":"454d99e3879c9a6e546e81ccf655815281b88eb1","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.ade.galleries.client.preview.ui.A_CmsPreviewDialog#fillContent(org.opencms.ade.galleries.shared.CmsResourceInfoBean)\n     */\n    @Override\n    public void fillContent(CmsResourceInfoBean infoBean) {\n\n        fillPreviewPanel(infoBean);\n        m_propertiesTab.fillProperties(infoBean.getProperties());\n    }","id":39427,"modified_method":"/**\n     * @see org.opencms.ade.galleries.client.preview.ui.A_CmsPreviewDialog#fillContent(org.opencms.ade.galleries.shared.CmsResourceInfoBean)\n     */\n    @Override\n    public void fillContent(CmsResourceInfoBean infoBean) {\n\n        fillPreviewPanel(infoBean);\n        m_propertiesTab.fillProperties(infoBean.getProperties(), infoBean.getNoEditReason());\n    }","commit_id":"6162e660f161bc8b935d468b2d9b36b6d3ce354e","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Fills the content of the tabs panel.<p>\n     * \n     * @param infoBean the bean containing the parameter \n     */\n    @Override\n    public void fillContent(CmsImageInfoBean infoBean) {\n\n        // properties tab\n        m_propertiesTab.fillProperties(infoBean.getProperties());\n        m_imageInfosTab.fillContent(infoBean);\n        if (m_initialFill) {\n            if (getGalleryMode() == GalleryMode.widget) {\n                m_imageFormatTab.fillContent(infoBean);\n            }\n            if (getGalleryMode() == GalleryMode.editor) {\n                m_imageFormatTab.fillContent(infoBean);\n                m_imageEditorFormatsTab.fillContent(infoBean);\n                m_imageAdvancedTab.fillContent(infoBean);\n            }\n            m_initialFill = false;\n        }\n        fillPreviewPanel(infoBean);\n    }","id":39428,"modified_method":"/**\n     * Fills the content of the tabs panel.<p>\n     * \n     * @param infoBean the bean containing the parameter \n     */\n    @Override\n    public void fillContent(CmsImageInfoBean infoBean) {\n\n        // properties tab\n        m_propertiesTab.fillProperties(infoBean.getProperties(), infoBean.getNoEditReason());\n        m_imageInfosTab.fillContent(infoBean);\n        if (m_initialFill) {\n            if (getGalleryMode() == GalleryMode.widget) {\n                m_imageFormatTab.fillContent(infoBean);\n            }\n            if (getGalleryMode() == GalleryMode.editor) {\n                m_imageFormatTab.fillContent(infoBean);\n                m_imageEditorFormatsTab.fillContent(infoBean);\n                m_imageAdvancedTab.fillContent(infoBean);\n            }\n            m_initialFill = false;\n        }\n        fillPreviewPanel(infoBean);\n    }","commit_id":"6162e660f161bc8b935d468b2d9b36b6d3ce354e","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Retrieves the resource information and puts it into the provided resource info bean.<p>\n     * \n     * @param cms the initialized cms object\n     * @param resource the resource\n     * @param resInfo the resource info bean\n     * @param locale the content locale\n     * \n     * @throws CmsException if something goes wrong\n     */\n    public void readResourceInfo(CmsObject cms, CmsResource resource, CmsResourceInfoBean resInfo, String locale)\n    throws CmsException {\n\n        I_CmsResourceType type = OpenCms.getResourceManager().getResourceType(resource.getTypeId());\n\n        resInfo.setTitle(resource.getName());\n        resInfo.setStructureId(resource.getStructureId());\n        resInfo.setDescription(CmsWorkplaceMessages.getResourceTypeName(\n            OpenCms.getWorkplaceManager().getWorkplaceLocale(cms),\n            type.getTypeName()));\n        resInfo.setResourcePath(cms.getSitePath(resource));\n        resInfo.setResourceType(type.getTypeName());\n        resInfo.setSize((resource.getLength() / 1024) + \" kb\");\n        resInfo.setLastModified(new Date(resource.getDateLastModified()));\n\n        // reading default explorer-type properties\n        CmsExplorerTypeSettings setting = OpenCms.getWorkplaceManager().getExplorerTypeSetting(type.getTypeName());\n        List<String> properties = setting.getProperties();\n        String reference = setting.getReference();\n\n        // looking up properties from referenced explorer types if properties list is empty\n\n        while ((properties.size() == 0) && !CmsStringUtil.isEmptyOrWhitespaceOnly(reference)) {\n            setting = OpenCms.getWorkplaceManager().getExplorerTypeSetting(reference);\n            properties = setting.getProperties();\n            reference = setting.getReference();\n        }\n        Map<String, String> props = new LinkedHashMap<String, String>();\n        Iterator<String> propIt = properties.iterator();\n        while (propIt.hasNext()) {\n            String propertyName = propIt.next();\n            CmsProperty property = cms.readPropertyObject(resource, propertyName, false);\n            if (!property.isNullProperty()) {\n                props.put(property.getName(), property.getValue());\n            } else {\n                props.put(propertyName, null);\n            }\n        }\n        resInfo.setProperties(props);\n        resInfo.setPreviewContent(getPreviewContent(cms, resource, CmsLocaleManager.getLocale(locale)));\n    }","id":39429,"modified_method":"/**\n     * Retrieves the resource information and puts it into the provided resource info bean.<p>\n     * \n     * @param cms the initialized cms object\n     * @param resource the resource\n     * @param resInfo the resource info bean\n     * @param locale the content locale\n     * \n     * @throws CmsException if something goes wrong\n     */\n    public void readResourceInfo(CmsObject cms, CmsResource resource, CmsResourceInfoBean resInfo, String locale)\n    throws CmsException {\n\n        I_CmsResourceType type = OpenCms.getResourceManager().getResourceType(resource.getTypeId());\n        Locale wpLocale = OpenCms.getWorkplaceManager().getWorkplaceLocale(cms);\n        resInfo.setTitle(resource.getName());\n        resInfo.setStructureId(resource.getStructureId());\n        resInfo.setDescription(CmsWorkplaceMessages.getResourceTypeName(wpLocale, type.getTypeName()));\n        resInfo.setResourcePath(cms.getSitePath(resource));\n        resInfo.setResourceType(type.getTypeName());\n        resInfo.setSize((resource.getLength() / 1024) + \" kb\");\n        resInfo.setLastModified(new Date(resource.getDateLastModified()));\n        resInfo.setNoEditReason(new CmsResourceUtil(cms, resource).getNoEditReason(wpLocale, true));\n        // reading default explorer-type properties\n        CmsExplorerTypeSettings setting = OpenCms.getWorkplaceManager().getExplorerTypeSetting(type.getTypeName());\n        List<String> properties = setting.getProperties();\n        String reference = setting.getReference();\n\n        // looking up properties from referenced explorer types if properties list is empty\n\n        while ((properties.size() == 0) && !CmsStringUtil.isEmptyOrWhitespaceOnly(reference)) {\n            setting = OpenCms.getWorkplaceManager().getExplorerTypeSetting(reference);\n            properties = setting.getProperties();\n            reference = setting.getReference();\n        }\n        Map<String, String> props = new LinkedHashMap<String, String>();\n        Iterator<String> propIt = properties.iterator();\n        while (propIt.hasNext()) {\n            String propertyName = propIt.next();\n            CmsProperty property = cms.readPropertyObject(resource, propertyName, false);\n            if (!property.isNullProperty()) {\n                props.put(property.getName(), property.getValue());\n            } else {\n                props.put(propertyName, null);\n            }\n        }\n        resInfo.setProperties(props);\n        resInfo.setPreviewContent(getPreviewContent(cms, resource, CmsLocaleManager.getLocale(locale)));\n    }","commit_id":"6162e660f161bc8b935d468b2d9b36b6d3ce354e","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * The generic function to display the resource properties.<p>\n     * \n     * @param properties the properties values\n     */\n    public void fillProperties(Map<String, String> properties) {\n\n        // width of a property form\n        int pannelWidth = calculateWidth(m_tabWidth);\n        m_propertiesPanel.clear();\n        if (properties != null) {\n            Iterator<Entry<String, String>> it = properties.entrySet().iterator();\n            boolean isLeft = true;\n            while (it.hasNext()) {\n\n                Entry<String, String> entry = it.next();\n                CmsPropertyForm property = new CmsPropertyForm(\n                    entry.getKey(),\n                    pannelWidth,\n                    entry.getValue(),\n                    TM_PREVIEW_TAB_PROPERTIES);\n                if (isLeft) {\n                    property.setFormStyle(I_CmsLayoutBundle.INSTANCE.previewDialogCss().propertyLeft());\n                    isLeft = false;\n                } else {\n                    property.setFormStyle(I_CmsLayoutBundle.INSTANCE.previewDialogCss().propertyRight());\n                    isLeft = true;\n                }\n                property.addValueChangeHandler(this);\n                m_propertiesPanel.add(property);\n\n                // TODO: set the calculated height of the scrolled panel with properties\n            }\n        }\n        setChanged(false);\n    }","id":39430,"modified_method":"/**\n     * The generic function to display the resource properties.<p>\n     * \n     * @param properties the properties values\n     * @param noEditReason the reason why the properties are not editable\n     */\n    public void fillProperties(Map<String, String> properties, String noEditReason) {\n\n        // width of a property form\n        int pannelWidth = calculateWidth(m_tabWidth);\n        m_propertiesPanel.clear();\n        if (properties != null) {\n            Iterator<Entry<String, String>> it = properties.entrySet().iterator();\n            boolean isLeft = true;\n            while (it.hasNext()) {\n\n                Entry<String, String> entry = it.next();\n                CmsPropertyForm property = new CmsPropertyForm(\n                    entry.getKey(),\n                    pannelWidth,\n                    entry.getValue(),\n                    noEditReason,\n                    TM_PREVIEW_TAB_PROPERTIES);\n                if (isLeft) {\n                    property.setFormStyle(I_CmsLayoutBundle.INSTANCE.previewDialogCss().propertyLeft());\n                    isLeft = false;\n                } else {\n                    property.setFormStyle(I_CmsLayoutBundle.INSTANCE.previewDialogCss().propertyRight());\n                    isLeft = true;\n                }\n                property.addValueChangeHandler(this);\n                m_propertiesPanel.add(property);\n\n                // TODO: set the calculated height of the scrolled panel with properties\n            }\n        }\n        setChanged(false);\n    }","commit_id":"6162e660f161bc8b935d468b2d9b36b6d3ce354e","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * The constructor.<p>\n     * \n     * @param id the id of the property from\n     * @param width the property from width\n     * @param value the property value\n     * @param textMetricsKey the key identifying the text metrics to use \n     */\n    public CmsPropertyForm(String id, int width, String value, String textMetricsKey) {\n\n        m_id = id;\n        m_originalValue = value;\n        m_isChanged = false;\n        m_parentWidth = width;\n        m_parent = new FlowPanel();\n        m_parent.getElement().getStyle().setWidth(m_parentWidth, Unit.PX);\n        // set form label\n        m_label = new CmsLabel(m_id);\n        m_label.addStyleName(I_CmsLayoutBundle.INSTANCE.previewDialogCss().labelField());\n        m_label.getElement().getStyle().setWidth(getLabelWidth(), Unit.PX);\n        m_label.truncate(textMetricsKey, getLabelWidth());\n        m_parent.add(m_label);\n\n        // set form text box\n        m_inputPanel = new FlowPanel();\n        m_inputPanel.getElement().getStyle().setWidth(getInputWidth(), Unit.PX);\n        m_inputPanel.addStyleName(I_CmsLayoutBundle.INSTANCE.previewDialogCss().inputField());\n        m_textBox = new CmsTextBox();\n        m_textBox.setFormValueAsString(m_originalValue);\n        m_textBox.addValueChangeHandler(new ValueChangeHandler<String>() {\n\n            /**\n             * @see com.google.gwt.event.logical.shared.ValueChangeHandler#onValueChange(ValueChangeEvent event)\n             */\n            public void onValueChange(ValueChangeEvent<String> event) {\n\n                m_isChanged = true;\n                m_textBox.setChangedStyle();\n            }\n        });\n        m_textBox.addKeyPressHandler(new KeyPressHandler() {\n\n            public void onKeyPress(KeyPressEvent event) {\n\n                // make sure the value change event is fired on the first change inside the text box\n                if (!isChanged()) {\n                    Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n                        public void execute() {\n\n                            if (!isChanged()) {\n\n                                if (((getValue() == null) && (m_originalValue != null))\n                                    || (!getValue().equals(m_originalValue))) {\n                                    ValueChangeEvent.fire(m_textBox, getValue());\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        });\n        m_inputPanel.add(m_textBox);\n        m_parent.add(m_inputPanel);\n        initWidget(m_parent);\n    }","id":39431,"modified_method":"/**\n     * The constructor.<p>\n     * \n     * @param id the id of the property from\n     * @param width the property from width\n     * @param value the property value\n     * @param noEditReason the reason why the properties are not editable\n     * @param textMetricsKey the key identifying the text metrics to use \n     */\n    public CmsPropertyForm(String id, int width, String value, String noEditReason, String textMetricsKey) {\n\n        m_id = id;\n        m_originalValue = value;\n        m_isChanged = false;\n        m_parentWidth = width;\n        m_parent = new FlowPanel();\n        m_parent.getElement().getStyle().setWidth(m_parentWidth, Unit.PX);\n        // set form label\n        m_label = new CmsLabel(m_id);\n        m_label.addStyleName(I_CmsLayoutBundle.INSTANCE.previewDialogCss().labelField());\n        m_label.getElement().getStyle().setWidth(getLabelWidth(), Unit.PX);\n        m_label.truncate(textMetricsKey, getLabelWidth());\n        m_parent.add(m_label);\n\n        // set form text box\n        m_inputPanel = new FlowPanel();\n        m_inputPanel.getElement().getStyle().setWidth(getInputWidth(), Unit.PX);\n        m_inputPanel.addStyleName(I_CmsLayoutBundle.INSTANCE.previewDialogCss().inputField());\n        m_textBox = new CmsTextBox();\n        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(noEditReason)) {\n            m_textBox.setTitle(noEditReason);\n            m_textBox.setReadOnly(true);\n        }\n        m_textBox.setFormValueAsString(m_originalValue);\n        m_textBox.addValueChangeHandler(new ValueChangeHandler<String>() {\n\n            /**\n             * @see com.google.gwt.event.logical.shared.ValueChangeHandler#onValueChange(ValueChangeEvent event)\n             */\n            public void onValueChange(ValueChangeEvent<String> event) {\n\n                m_isChanged = true;\n                m_textBox.setChangedStyle();\n            }\n        });\n        m_textBox.addKeyPressHandler(new KeyPressHandler() {\n\n            public void onKeyPress(KeyPressEvent event) {\n\n                // make sure the value change event is fired on the first change inside the text box\n                if (!isChanged()) {\n                    Scheduler.get().scheduleDeferred(new ScheduledCommand() {\n\n                        public void execute() {\n\n                            if (!isChanged()) {\n\n                                if (((getValue() == null) && (m_originalValue != null))\n                                    || (!getValue().equals(m_originalValue))) {\n                                    ValueChangeEvent.fire(m_textBox, getValue());\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        });\n        m_inputPanel.add(m_textBox);\n        m_parent.add(m_inputPanel);\n        initWidget(m_parent);\n    }","commit_id":"6162e660f161bc8b935d468b2d9b36b6d3ce354e","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns a new navigation element for the given URI.<p>\n     * \n     * @param uri the actual URI of the sitemap entry\n     * @param entry the sitemap entry \n     *              \n     * @return a navigation element for the given sitemap entry\n     */\n    public static CmsJspNavElement getNavigationForSiteEntry(String uri, CmsSiteEntryBean entry) {\n\n        int level = CmsResource.getPathLevel(uri);\n        if (uri.endsWith(\"/\")) {\n            level--;\n        }\n        Map<String, String> properties = new HashMap<String, String>();\n        properties.put(CmsPropertyDefinition.PROPERTY_NAVTEXT, entry.getTitle());\n        properties.put(CmsPropertyDefinition.PROPERTY_TITLE, entry.getTitle());\n        properties.putAll(entry.getProperties());\n        return new CmsJspNavElement(uri, properties, level);\n    }","id":39432,"modified_method":"/**\n     * Returns a new navigation element for the given URI.<p>\n     * \n     * @param uri the actual URI of the sitemap entry\n     * @param entry the sitemap entry \n     *              \n     * @return a navigation element for the given sitemap entry\n     */\n    protected CmsJspNavElement getNavigationForSiteEntry(String uri, CmsSiteEntryBean entry) {\n\n        int level = CmsResource.getPathLevel(uri);\n        if (uri.endsWith(\"/\")) {\n            level--;\n        }\n        Map<String, String> properties = new HashMap<String, String>();\n        properties.put(CmsPropertyDefinition.PROPERTY_NAVTEXT, entry.getTitle());\n        properties.put(CmsPropertyDefinition.PROPERTY_TITLE, entry.getTitle());\n        properties.putAll(entry.getProperties());\n        return new CmsJspNavElement(uri, properties, level);\n    }","commit_id":"d2dc1e6564138b8d7575ece8d8c37cecb9816f04","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Collect all navigation elements from the files in the given folder.<p>\n     *\n     * @param folder the selected folder\n     * \n     * @return A sorted (ascending to navigation position) list of navigation elements\n     */\n    public List<CmsJspNavElement> getNavigationForFolder(String folder) {\n\n        return getNavigationForFolder(m_cms, folder);\n    }","id":39433,"modified_method":"/**\n     * Collect all navigation elements from the files in the given folder.<p>\n     *\n     * @param folder the selected folder\n     * \n     * @return A sorted (ascending to navigation position) list of navigation elements\n     */\n    @Override\n    public List<CmsJspNavElement> getNavigationForFolder(String folder) {\n\n        folder = CmsResource.getFolderPath(folder);\n        List<CmsJspNavElement> result = new ArrayList<CmsJspNavElement>();\n\n        CmsSiteEntryBean folderEntry = null;\n        try {\n            folderEntry = CmsSitemapResourceHandler.getInstance().getUri(m_cms, folder);\n        } catch (CmsException e) {\n            // should never happen\n            LOG.error(e.getLocalizedMessage(), e);\n        }\n        if (folderEntry == null) {\n            return result;\n        }\n\n        int position = 0;\n        List<CmsSiteEntryBean> entries = folderEntry.getSubEntries();\n        for (CmsSiteEntryBean entry : entries) {\n            try {\n                // check permissions\n                m_cms.readResource(entry.getResourceId());\n                // permissions are fine, add it to the results\n                entry.setPosition(position);\n                CmsJspNavElement element = getNavigationForSiteEntry(folder + entry.getName(), entry);\n                if ((element != null) && element.isInNavigation()) {\n                    result.add(element);\n                }\n            } catch (Exception e) {\n                // not enough permissions\n                LOG.debug(e.getLocalizedMessage(), e);\n            }\n            position++;\n        }\n\n        Collections.sort(result);\n        return result;\n    }","commit_id":"d2dc1e6564138b8d7575ece8d8c37cecb9816f04","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Default constructor.<p>\n     * \n     * @param cms context provider for the current request\n     */\n    public CmsJspSitemapNavBuilder(CmsObject cms) {\n\n        init(cms);\n    }","id":39434,"modified_method":"/**\n     * Default constructor.<p>\n     * \n     * @param cms context provider for the current request\n     */\n    public CmsJspSitemapNavBuilder(CmsObject cms) {\n\n        super(cms);\n    }","commit_id":"d2dc1e6564138b8d7575ece8d8c37cecb9816f04","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the sitemap bean for the given path.<p> \n     * \n     * @param cms the current cms context\n     * @param path the sitemap path, or the site root\n     * @param online if online or offline, has to be equals to cms.getRequestContext().currentProject().isOnlineProject()\n     * \n     * @return the sitemap bean for the given path\n     * \n     * @throws CmsException if something goes wrong\n     */\n    protected CmsSitemapBean getSitemap(CmsObject cms, String path, boolean online) throws CmsException {\n\n        CmsFile sitemap;\n        // check the cache\n        if (online) {\n            sitemap = m_sitemapsOnline.get(path);\n        } else {\n            sitemap = m_sitemapsOffline.get(path);\n        }\n        if (sitemap != null) {\n            // found in cache\n            return CmsXmlSitemapFactory.unmarshal(cms, sitemap).getSitemap(cms, cms.getRequestContext().getLocale());\n        }\n\n        // not found in cache\n        String sitemapPath = normalizePath(path);\n        if (path.equals(normalizePath(cms.getRequestContext().getSiteRoot()))) {\n            // read the sitemap property from the site folder\n            sitemapPath = cms.readPropertyObject(\"/\", CmsPropertyDefinition.PROPERTY_SITEMAP, false).getValue(\n                \"/sitemap\");\n            sitemapPath = normalizePath(cms.getRequestContext().addSiteRoot(sitemapPath));\n        }\n\n        try {\n            // try to read the sitemap file\n            sitemap = cms.readFile(sitemapPath);\n        } catch (Exception e) {\n            // can happen in case of bad configuration\n            LOG.error(e.getLocalizedMessage(), e);\n            // cache the missed attempt\n            if (online) {\n                m_missingUrisOnline.put(path, Boolean.TRUE);\n            } else {\n                m_missingUrisOffline.put(path, Boolean.TRUE);\n            }\n            // no sitemap found\n            return null;\n        }\n\n        // found: cache the sitemap\n        if (online) {\n            m_sitemapsOnline.put(sitemapPath, sitemap);\n        } else {\n            m_sitemapsOffline.put(sitemapPath, sitemap);\n        }\n        return CmsXmlSitemapFactory.unmarshal(cms, sitemap).getSitemap(cms, cms.getRequestContext().getLocale());\n    }","id":39435,"modified_method":"/**\n     * Returns the sitemap bean for the given path.<p> \n     * \n     * @param cms the current cms context\n     * @param path the sitemap path, or the site root\n     * @param online if online or offline, has to be equals to cms.getRequestContext().currentProject().isOnlineProject()\n     * \n     * @return the sitemap bean for the given path\n     * \n     * @throws CmsException if something goes wrong\n     */\n    protected CmsSitemapBean getSitemap(CmsObject cms, String path, boolean online) throws CmsException {\n\n        CmsFile sitemap;\n        // check the cache\n        // HACK: we are caching here sitemaps by root path, as well as property reference in case path = \"/\" \n        String cacheKey = normalizePath(cms.getRequestContext().addSiteRoot(path));\n        if (online) {\n            sitemap = m_sitemapsOnline.get(cacheKey);\n        } else {\n            sitemap = m_sitemapsOffline.get(cacheKey);\n        }\n        if (sitemap != null) {\n            // found in cache\n            return CmsXmlSitemapFactory.unmarshal(cms, sitemap).getSitemap(cms, cms.getRequestContext().getLocale());\n        }\n\n        // not found in cache\n        String sitemapPath = path;\n        if (path.equals(\"/\")) {\n            // read the sitemap property from the site folder\n            sitemapPath = cms.readPropertyObject(\"/\", CmsPropertyDefinition.PROPERTY_SITEMAP, false).getValue(\n                \"/sitemap\");\n            String cacheKey2 = normalizePath(cms.getRequestContext().addSiteRoot(sitemapPath));\n            if (!cacheKey.equals(cacheKey2)) {\n                // recursive call with the correct path\n                CmsSitemapBean sitemapBean = getSitemap(cms, sitemapPath, online);\n                if (sitemapBean != null) {\n                    // found: cache the sitemap\n                    if (online) {\n                        m_sitemapsOnline.put(cacheKey2, m_sitemapsOnline.get(cacheKey));\n                    } else {\n                        m_sitemapsOffline.put(cacheKey2, m_sitemapsOffline.get(cacheKey));\n                    }\n                }\n                return sitemapBean;\n            }\n        }\n\n        try {\n            // try to read the sitemap file\n            sitemap = cms.readFile(sitemapPath);\n        } catch (Exception e) {\n            // can happen in case of bad configuration\n            LOG.error(e.getLocalizedMessage(), e);\n            // no sitemap found\n            return null;\n        }\n\n        // found: cache the sitemap\n        if (online) {\n            m_sitemapsOnline.put(cacheKey, sitemap);\n        } else {\n            m_sitemapsOffline.put(cacheKey, sitemap);\n        }\n        return CmsXmlSitemapFactory.unmarshal(cms, sitemap).getSitemap(cms, cms.getRequestContext().getLocale());\n    }","commit_id":"d2dc1e6564138b8d7575ece8d8c37cecb9816f04","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the site entry for the given URI, or <code>null<\/code> if not found.<p> \n     * \n     * @param cms the current CMS context\n     * @param uri the URI to look for\n     * @param online if online or offline\n     * \n     * @return the site entry for the given URI, or <code>null<\/code> if not found\n     * \n     * @throws CmsException if something goes wrong\n     */\n    protected CmsSiteEntryBean getEntry(CmsObject cms, String uri, boolean online) throws CmsException {\n\n        // find the resource\n        CmsSitemapBean sitemap = getSitemap(cms, cms.getRequestContext().getSiteRoot(), online);\n        // normalize the uri\n        String sitePath = normalizePath(uri);\n        LinkedList<String> entryPaths = new LinkedList<String>(CmsStringUtil.splitAsList(sitePath, \"/\"));\n\n        if (entryPaths.isEmpty()) {\n            // special case for '/'\n            CmsSiteEntryBean entry = sitemap.getSiteEntries().get(0);\n            entry.setPosition(0);\n            return entry;\n        }\n\n        String uriPath = \"\";\n        List<CmsSiteEntryBean> subEntries = sitemap.getSiteEntries().get(0).getSubEntries();\n        boolean finished = false;\n        while (!finished) {\n            String name = entryPaths.removeFirst();\n            uriPath += \"/\" + name;\n            // check the missed cache\n            Boolean missing;\n            if (online) {\n                missing = m_missingUrisOnline.get(uriPath.substring(1));\n            } else {\n                missing = m_missingUrisOffline.get(uriPath.substring(1));\n            }\n            if (missing != null) {\n                // already marked as not found\n                return null;\n            }\n            int position = 0;\n            for (; position < subEntries.size(); position++) {\n                CmsSiteEntryBean entry = subEntries.get(position);\n                if (!entry.getName().equals(name)) {\n                    // no match\n                    continue;\n                }\n                if (entryPaths.isEmpty()) {\n                    // if nothing left, we got a match\n                    entry.setPosition(position);\n                    return entry;\n                } else {\n                    // continue with sub-entries\n                    subEntries = entry.getSubEntries();\n                    if (subEntries.isEmpty()) {\n                        // check sitemap property\n                        String sitemapPath = entry.getProperties().get(CmsSitemapResourceHandler.PROPERTY_SITEMAP);\n                        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(sitemapPath)) {\n                            // switch to sub-sitemap\n                            sitemapPath = cms.getRequestContext().addSiteRoot(sitemapPath);\n                            sitemap = getSitemap(cms, sitemapPath, online);\n                            if (sitemap == null) {\n                                // no sitemap found\n                                return null;\n                            }\n                            subEntries = sitemap.getSiteEntries();\n                        }\n                    }\n                    finished = subEntries.isEmpty();\n                }\n                break;\n            }\n            if (position == subEntries.size()) {\n                // not found\n                finished = true;\n            }\n        }\n\n        return null;\n    }","id":39436,"modified_method":"/**\n     * Returns the site entry for the given URI, or <code>null<\/code> if not found.<p> \n     * \n     * @param cms the current CMS context\n     * @param uri the URI to look for\n     * @param online if online or offline\n     * \n     * @return the site entry for the given URI, or <code>null<\/code> if not found\n     * \n     * @throws CmsException if something goes wrong\n     */\n    protected CmsSiteEntryBean getEntry(CmsObject cms, String uri, boolean online) throws CmsException {\n\n        // find the root sitemap, at the root folder of the site\n        CmsSitemapBean sitemap = getSitemap(cms, \"/\", online);\n        if (sitemap == null) {\n            return null;\n        }\n        // normalize the uri\n        String sitePath = normalizePath(uri);\n        LinkedList<String> entryPaths = new LinkedList<String>(CmsStringUtil.splitAsList(sitePath, \"/\"));\n\n        if (entryPaths.isEmpty()) {\n            // special case for '/'\n            CmsSiteEntryBean entry = sitemap.getSiteEntries().get(0);\n            entry.setPosition(0);\n            return entry;\n        }\n\n        String uriPath = normalizePath(cms.getRequestContext().getSiteRoot());\n        List<CmsSiteEntryBean> subEntries = sitemap.getSiteEntries().get(0).getSubEntries();\n        boolean finished = false;\n        while (!finished) {\n            String name = entryPaths.removeFirst();\n            uriPath += \"/\" + name;\n            // check the missed cache\n            Boolean missing;\n            if (online) {\n                missing = m_missingUrisOnline.get(uriPath);\n            } else {\n                missing = m_missingUrisOffline.get(uriPath);\n            }\n            if (missing != null) {\n                // already marked as not found\n                return null;\n            }\n            int position = 0;\n            for (; position < subEntries.size(); position++) {\n                CmsSiteEntryBean entry = subEntries.get(position);\n                if (!entry.getName().equals(name)) {\n                    // no match\n                    continue;\n                }\n                if (entryPaths.isEmpty()) {\n                    // if nothing left, we got a match\n                    entry.setPosition(position);\n                    return entry;\n                } else {\n                    // continue with sub-entries\n                    subEntries = entry.getSubEntries();\n                    if (subEntries.isEmpty()) {\n                        // check sitemap property\n                        String sitemapPath = entry.getProperties().get(CmsSitemapResourceHandler.PROPERTY_SITEMAP);\n                        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(sitemapPath)) {\n                            // switch to sub-sitemap\n                            sitemap = getSitemap(cms, sitemapPath, online);\n                            if (sitemap == null) {\n                                // no sitemap found\n                                return null;\n                            }\n                            subEntries = sitemap.getSiteEntries();\n                        }\n                    }\n                    finished = subEntries.isEmpty();\n                }\n                break;\n            }\n            if (position == subEntries.size()) {\n                // not found\n                finished = true;\n            }\n        }\n\n        return null;\n    }","commit_id":"d2dc1e6564138b8d7575ece8d8c37cecb9816f04","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the site entry for the given URI, or <code>null<\/code> if not found.<p> \n     * \n     * @param cms the current CMS context\n     * @param uri the URI to look for\n     * \n     * @return the site entry for the given URI, or <code>null<\/code> if not found\n     * \n     * @throws CmsException if something goes wrong\n     */\n    public CmsSiteEntryBean getUri(CmsObject cms, String uri) throws CmsException {\n\n        String path = normalizePath(cms.getRequestContext().addSiteRoot(uri));\n        // check the cache\n        CmsSiteEntryBean uriEntry = null;\n        boolean online = cms.getRequestContext().currentProject().isOnlineProject();\n        if (online) {\n            uriEntry = m_urisOnline.get(path);\n        } else {\n            uriEntry = m_urisOffline.get(path);\n        }\n        if (uriEntry != null) {\n            // found in cache\n            return uriEntry;\n        }\n        // check the missed cache\n        Boolean missing = null;\n        if (online) {\n            missing = m_missingUrisOnline.get(path);\n        } else {\n            missing = m_missingUrisOffline.get(path);\n        }\n        if (missing != null) {\n            // already marked as not found\n            return null;\n        }\n\n        // get it\n        String extension = uri.substring(uri.length() - 1 - CmsFileUtil.getExtension(uri).length());\n        String uriNoExt = uri.substring(0, uri.length() - extension.length());\n        uriEntry = getEntry(cms, uriNoExt, online);\n        // match the extension \n        if ((uriEntry != null) && (extension.length() > 0)) {\n            if (!uriEntry.getExtension().equals(extension.substring(1))) {\n                uriEntry = null;\n            }\n        }\n\n        if (uriEntry == null) {\n            // cache the missed attempt\n            if (online) {\n                m_missingUrisOnline.put(path, Boolean.TRUE);\n            } else {\n                m_missingUrisOffline.put(path, Boolean.TRUE);\n            }\n            return null;\n        }\n        // cache the found entry\n        if (online) {\n            m_urisOnline.put(path, uriEntry);\n        } else {\n            m_urisOffline.put(path, uriEntry);\n        }\n\n        return uriEntry;\n    }","id":39437,"modified_method":"/**\n     * Returns the site entry for the given URI, or <code>null<\/code> if not found.<p> \n     * \n     * @param cms the current CMS context\n     * @param uri the URI to look for\n     * \n     * @return the site entry for the given URI, or <code>null<\/code> if not found\n     * \n     * @throws CmsException if something goes wrong\n     */\n    public CmsSiteEntryBean getUri(CmsObject cms, String uri) throws CmsException {\n\n        String path = normalizePath(cms.getRequestContext().addSiteRoot(uri));\n\n        // check the cache\n        CmsSiteEntryBean uriEntry = null;\n        boolean online = cms.getRequestContext().currentProject().isOnlineProject();\n        if (online) {\n            uriEntry = m_urisOnline.get(path);\n        } else {\n            uriEntry = m_urisOffline.get(path);\n        }\n        if (uriEntry != null) {\n            // found in cache\n            return uriEntry;\n        }\n\n        // check the missed cache\n        Boolean missing = null;\n        if (online) {\n            missing = m_missingUrisOnline.get(path);\n        } else {\n            missing = m_missingUrisOffline.get(path);\n        }\n        if (missing != null) {\n            // already marked as not found\n            return null;\n        }\n\n        // get it\n        String extension = uri.substring(uri.length() - CmsFileUtil.getExtension(uri).length());\n        String uriNoExt = uri.substring(0, uri.length() - extension.length());\n        uriEntry = getEntry(cms, uriNoExt, online);\n        // match the extension \n        if ((uriEntry != null) && (extension.length() > 0)) {\n            if (!uriEntry.getExtension().equals(extension.substring(1))) {\n                uriEntry = null;\n            }\n        }\n\n        if (uriEntry == null) {\n            // cache the missed attempt\n            if (online) {\n                m_missingUrisOnline.put(path, Boolean.TRUE);\n            } else {\n                m_missingUrisOffline.put(path, Boolean.TRUE);\n            }\n            return null;\n        }\n\n        // cache the found entry\n        if (online) {\n            m_urisOnline.put(path, uriEntry);\n        } else {\n            m_urisOffline.put(path, uriEntry);\n        }\n\n        return uriEntry;\n    }","commit_id":"d2dc1e6564138b8d7575ece8d8c37cecb9816f04","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.main.I_CmsEventListener#cmsEvent(org.opencms.main.CmsEvent)\n     */\n    public void cmsEvent(CmsEvent event) {\n\n        if (m_missingUrisOffline == null) {\n            init();\n        }\n\n        CmsResource resource = null;\n        List<CmsResource> resources = null;\n\n        switch (event.getType()) {\n            case I_CmsEventListener.EVENT_RESOURCE_AND_PROPERTIES_MODIFIED:\n            case I_CmsEventListener.EVENT_RESOURCE_MODIFIED:\n                // a resource has been modified in a way that it *IS NOT* necessary also to clear \n                // lists of cached sub-resources where the specified resource might be contained inside.\n                // all siblings are removed from the cache, too.\n                resource = (CmsResource)event.getData().get(I_CmsEventListener.KEY_RESOURCE);\n                uncacheResource(resource);\n                break;\n\n            case I_CmsEventListener.EVENT_RESOURCES_AND_PROPERTIES_MODIFIED:\n                // a list of resources and all of their properties have been modified\n                resources = CmsCollectionsGenericWrapper.list(event.getData().get(I_CmsEventListener.KEY_RESOURCES));\n                uncacheResources(resources);\n                break;\n\n            case I_CmsEventListener.EVENT_RESOURCE_DELETED:\n            case I_CmsEventListener.EVENT_RESOURCES_MODIFIED:\n                // a list of resources has been modified\n                resources = CmsCollectionsGenericWrapper.list(event.getData().get(I_CmsEventListener.KEY_RESOURCES));\n                uncacheResources(resources);\n                break;\n\n            case I_CmsEventListener.EVENT_CLEAR_ONLINE_CACHES:\n            case I_CmsEventListener.EVENT_PUBLISH_PROJECT:\n                flush(true);\n                break;\n\n            case I_CmsEventListener.EVENT_CLEAR_CACHES:\n                flush(true);\n                flush(false);\n                break;\n\n            case I_CmsEventListener.EVENT_CLEAR_OFFLINE_CACHES:\n                flush(false);\n                break;\n\n            default:\n                // noop\n                break;\n        }\n    }","id":39438,"modified_method":"/**\n     * @see org.opencms.main.I_CmsEventListener#cmsEvent(org.opencms.main.CmsEvent)\n     */\n    public void cmsEvent(CmsEvent event) {\n\n        CmsResource resource = null;\n        List<CmsResource> resources = null;\n\n        switch (event.getType()) {\n            case I_CmsEventListener.EVENT_RESOURCE_AND_PROPERTIES_MODIFIED:\n            case I_CmsEventListener.EVENT_RESOURCE_MODIFIED:\n                // a resource has been modified in a way that it *IS NOT* necessary also to clear \n                // lists of cached sub-resources where the specified resource might be contained inside.\n                // all siblings are removed from the cache, too.\n                resource = (CmsResource)event.getData().get(I_CmsEventListener.KEY_RESOURCE);\n                uncacheResource(resource);\n                break;\n\n            case I_CmsEventListener.EVENT_RESOURCES_AND_PROPERTIES_MODIFIED:\n                // a list of resources and all of their properties have been modified\n                resources = CmsCollectionsGenericWrapper.list(event.getData().get(I_CmsEventListener.KEY_RESOURCES));\n                uncacheResources(resources);\n                break;\n\n            case I_CmsEventListener.EVENT_RESOURCE_DELETED:\n            case I_CmsEventListener.EVENT_RESOURCES_MODIFIED:\n                // a list of resources has been modified\n                resources = CmsCollectionsGenericWrapper.list(event.getData().get(I_CmsEventListener.KEY_RESOURCES));\n                uncacheResources(resources);\n                break;\n\n            case I_CmsEventListener.EVENT_CLEAR_ONLINE_CACHES:\n            case I_CmsEventListener.EVENT_PUBLISH_PROJECT:\n                flush(true);\n                break;\n\n            case I_CmsEventListener.EVENT_CLEAR_CACHES:\n                flush(true);\n                flush(false);\n                break;\n\n            case I_CmsEventListener.EVENT_CLEAR_OFFLINE_CACHES:\n                flush(false);\n                break;\n\n            default:\n                // noop\n                break;\n        }\n    }","commit_id":"d2dc1e6564138b8d7575ece8d8c37cecb9816f04","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Removes a cached resource from the cache.<p>\n     * \n     * @param resource the resource\n     */\n    protected void uncacheResource(CmsResource resource) {\n\n        if (resource == null) {\n            LOG.warn(Messages.get().container(Messages.LOG_WARN_UNCACHE_NULL_0));\n            return;\n        }\n\n        if (!CmsResourceTypeXmlSitemap.isSitemap(resource)) {\n            return;\n        }\n        // flush all uri's\n        m_urisOffline.clear();\n        m_missingUrisOffline.clear();\n        // this is a sitemap, so remove it\n        m_sitemapsOffline.remove(normalizePath(resource.getRootPath()));\n        // this is the case of site sitemaps, value lookup\n        Iterator<Map.Entry<String, CmsFile>> i = m_sitemapsOffline.entrySet().iterator();\n        while (i.hasNext()) {\n            Map.Entry<String, CmsFile> e = i.next();\n            if (resource.getStructureId().equals(e.getValue().getStructureId())) {\n                i.remove();\n                break;\n            }\n        }\n    }","id":39439,"modified_method":"/**\n     * Removes a cached resource from the cache.<p>\n     * \n     * @param resource the resource\n     */\n    protected void uncacheResource(CmsResource resource) {\n\n        if (resource == null) {\n            LOG.warn(Messages.get().container(Messages.LOG_WARN_UNCACHE_NULL_0));\n            return;\n        }\n\n        // this is could be a sitemap file as well as a site root folder, so remove it\n        CmsFile file = m_sitemapsOffline.remove(normalizePath(resource.getRootPath()));\n\n        // we care only more if the modified resource is a sitemap\n        if (!CmsResourceTypeXmlSitemap.isSitemap(resource)) {\n            return;\n        }\n\n        // flush all uri's\n        m_urisOffline.clear();\n        m_missingUrisOffline.clear();\n        if (file == null) {\n            return;\n        }\n\n        // this is the case of root sitemaps\n        // we already removed the cached sitemap by its root path\n        // but know we have also to remove it by the site root path, \n        // which is unknown, so let's iterate an remove all suspicious entries\n        Iterator<Map.Entry<String, CmsFile>> i = m_sitemapsOffline.entrySet().iterator();\n        while (i.hasNext()) {\n            Map.Entry<String, CmsFile> e = i.next();\n            if (file.equals(e.getValue())) {\n                i.remove();\n            }\n        }\n    }","commit_id":"d2dc1e6564138b8d7575ece8d8c37cecb9816f04","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the site path for a given uri.<p>\n     * \n     * If the uri contains no site information, but starts with the opencms context, the context is removed\n     *  /opencms/opencms/system/further_path -> /system/further_path\n     * \n     * If the uri contains no site information, the path will be prefixed with the current site\n     *  /folder/page.html -> /sites/mysite/folder/page.html\n     *  (if mysite is the site currently selected in the workplace or in the request)\n     * \n     * If the path of the uri is relative, i.e. does not start with \"/\", \n     * the path will be prefixed with the current site and the given relative path,\n     * if no relative path is given, null is returned\n     *  page.html -> /sites/mysite/<relativePath>/page.html\n     * \n     * If the uri contains a scheme/server name that denotes an opencms site, it is replaced by the appropriate site path\n     *  http://www.mysite.de/folder/page.html -> /sites/mysite/folder/page.html\n     * \n     * If the uri contains a scheme/server name that does not match with any site, or if the uri is opaque or invalid,\n     * null is returned.\n     *  http://www.elsewhere.com/page.html -> null\n     *  mailto:someone@elsewhere.com -> null\n     * \n     * @param cms the cms object\n     * @param relativePath path to use as prefix if neccessary\n     * @param targetUri the target uri\n     * @return the root path for the target uri or null\n     */\n    public static String getSitePath(CmsObject cms, String relativePath, String targetUri) {\n        \n        URI uri;\n        \n        // malformed uri\n        try {\n            uri = new URI(targetUri);\n        } catch (Exception exc) {   \n            return null;\n        }\n        \n        // opaque uri\n        if (uri.isOpaque()) { \n            return null;\n        }\n        \n        // absolute uri\n        if (uri.isAbsolute()) {\n            CmsSiteMatcher matcher = new CmsSiteMatcher(targetUri);\n            if (OpenCms.getSiteManager().isMatching(matcher)) {\n                String path = uri.getPath();\n                path = path.substring(OpenCms.getOpenCmsContext().length());\n                return OpenCms.getSiteManager().matchSite(matcher).getSiteRoot() + path;\n            } else {\n                return null;\n            }\n        } \n        \n        // relative uri starting with opencms context\n        if (uri.getPath().startsWith(OpenCms.getOpenCmsContext())) {\n            return cms.getRequestContext().addSiteRoot(uri.getPath().substring(OpenCms.getOpenCmsContext().length()));\n        }\n        \n        // uri with relative path is relative to the given relativePath if available, otherwise invalid\n        if (!uri.getPath().startsWith(\"/\")) {\n            if (relativePath != null) {\n                return cms.getRequestContext().addSiteRoot(relativePath + uri.getPath());\n            } else {\n                return null;\n            }\n        }\n        \n        // relative uri (= vfs path relative to currently selected site root)\n        return cms.getRequestContext().addSiteRoot(uri.getPath());\n    }","id":39440,"modified_method":"/**\n     * Returns the site path for a given uri.<p>\n     * \n     * If the uri contains no site information, but starts with the opencms context, the context is removed\n     *  /opencms/opencms/system/further_path -> /system/further_path\n     * \n     * If the uri contains no site information, the path will be prefixed with the current site\n     *  /folder/page.html -> /sites/mysite/folder/page.html\n     *  (if mysite is the site currently selected in the workplace or in the request)\n     * \n     * If the path of the uri is relative, i.e. does not start with \"/\", \n     * the path will be prefixed with the current site and the given relative path,\n     * then normalized\n     * if no relative path is given, null is returned\n     * if the normalized path is outsite the current site, null is returned\n     *  page.html -> /sites/mysite/<relativePath>/page.html\n     *  ../page.html -> /sites/mysite/page.html\n     *  ../../page.html -> null\n     * \n     * If the uri contains a scheme/server name that denotes an opencms site, it is replaced by the appropriate site path\n     *  http://www.mysite.de/folder/page.html -> /sites/mysite/folder/page.html\n     * \n     * If the uri contains a scheme/server name that does not match with any site, or if the uri is opaque or invalid,\n     * null is returned.\n     *  http://www.elsewhere.com/page.html -> null\n     *  mailto:someone@elsewhere.com -> null\n     * \n     * @param cms the cms object\n     * @param relativePath path to use as prefix if neccessary\n     * @param targetUri the target uri\n     * @return the root path for the target uri or null\n     */\n    public static String getSitePath(CmsObject cms, String relativePath, String targetUri) {\n        \n        URI uri;\n        \n        // malformed uri\n        try {\n            uri = new URI(targetUri);\n        } catch (Exception exc) {   \n            return null;\n        }\n        \n        // opaque uri\n        if (uri.isOpaque()) { \n            return null;\n        }\n        \n        // absolute uri\n        if (uri.isAbsolute()) {\n            CmsSiteMatcher matcher = new CmsSiteMatcher(targetUri);\n            if (OpenCms.getSiteManager().isMatching(matcher)) {\n                String path = uri.getPath();\n                path = path.substring(OpenCms.getOpenCmsContext().length());\n                return OpenCms.getSiteManager().matchSite(matcher).getSiteRoot() + path;\n            } else {\n                return null;\n            }\n        } \n        \n        // relative uri starting with opencms context\n        if (uri.getPath().startsWith(OpenCms.getOpenCmsContext())) {\n            return cms.getRequestContext().addSiteRoot(uri.getPath().substring(OpenCms.getOpenCmsContext().length()));\n        }\n        \n        // uri with relative path is relative to the given relativePath if available and in the current site, otherwise invalid\n        if (!uri.getPath().startsWith(\"/\")) {\n            if (relativePath != null) {\n                String absolutePath = getAbsoluteUri(uri.getPath(), cms.getRequestContext().addSiteRoot(relativePath));\n                if (absolutePath.startsWith(cms.getRequestContext().getSiteRoot())) {\n                    return absolutePath;\n                } \n            }\n            \n            return null;\n        }\n        \n        // relative uri (= vfs path relative to currently selected site root)\n        return cms.getRequestContext().addSiteRoot(uri.getPath());\n    }","commit_id":"703f53c99b310552cc712cd25d364c24556de184","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Removes all messages <em>less than or equal<\/em> to seqno from <code>msgs<\/code>, and cancels their retransmission.\n     */\n    public synchronized void ack(long seqno) {\n        if(lowest == 0) {\n            Long tmp=getLowestSeqno();\n            if(tmp != null)\n                lowest=tmp;\n        }\n\n        for(long i=lowest; i <= seqno; i++) {\n            msgs.remove(i);\n            retransmitter.remove(i);\n        }\n        lowest=seqno +1;\n    }","id":39441,"modified_method":"/**\n     * Removes all messages <em>less than or equal<\/em> to seqno from <code>msgs<\/code>, and cancels their retransmission\n     */\n    public void ack(long seqno) {\n        long prev_lowest;\n        synchronized(this) {\n            if(seqno < lowest) return; // not really needed, but we can avoid the max() call altogether...\n            prev_lowest=lowest;\n            lowest=Math.max(lowest, seqno +1);\n        }\n\n        for(long i=prev_lowest; i <= seqno; i++) {\n            msgs.remove(i);\n            retransmitter.remove(i);\n        }\n    }","commit_id":"c56725e19abfe6ecd21c772d3199ade0657d2a8e","url":"https://github.com/belaban/JGroups"},{"original_method":"public void reset() {\n        msgs.clear();\n\n        // moved out of sync scope: Retransmitter.reset()/add()/remove() are sync'ed anyway\n        // Bela Jan 15 2003\n        retransmitter.reset();\n    }","id":39442,"modified_method":"public void reset() {\n        msgs.clear();\n        retransmitter.reset();\n        lowest=Global.DEFAULT_FIRST_UNICAST_SEQNO;\n    }","commit_id":"c56725e19abfe6ecd21c772d3199ade0657d2a8e","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Returns the message with the lowest seqno */\n    public Message getLowestMessage() {\n        Set<Long> keys=msgs.keySet();\n        if(keys.isEmpty())\n            return null;\n        Long seqno=Collections.min(keys);\n        return seqno != null? msgs.get(seqno) : null;\n    }","id":39443,"modified_method":"/** Returns the message with the lowest seqno */\n    public synchronized Message getLowestMessage() {\n        return msgs.get(lowest);\n    }","commit_id":"c56725e19abfe6ecd21c772d3199ade0657d2a8e","url":"https://github.com/belaban/JGroups"},{"original_method":"public Long getLowestSeqno() {\n        Set<Long> keys=msgs.keySet();\n        return keys != null? Collections.min(keys) : null;\n    }","id":39444,"modified_method":"/** Only to be used for testing purposes */\n    public synchronized long getLowest() {\n        return lowest;\n    }","commit_id":"c56725e19abfe6ecd21c772d3199ade0657d2a8e","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Tests whether retransmits are called at correct times for 1000 messages */\n    @Test(groups=Global.FUNCTIONAL)\n    public void testRetransmits() throws InterruptedException {\n        int   num_non_correct_entries=0;\n\n        TimeScheduler timer=new TimeScheduler();\n        win=new AckSenderWindow(new MyRetransmitCommand(), new StaticInterval(xmit_timeouts), timer);\n        try {\n\n            // 1. Send NUM_MSGS messages:\n            System.out.println(\"-- sending \" + NUM_MSGS + \" messages:\");\n            for(long i=0; i < NUM_MSGS; i++) {\n                msgs.put(new Long(i), new Entry());\n                win.add(i, new Message());\n            }\n            System.out.println(\"-- done\");\n\n            // 2. Wait for at least 4 xmits/msg: total of 1000 + 2000 + 4000 + 8000ms = 15000ms; wait for 20000ms\n            System.out.println(\"-- waiting for all retransmits\");\n            long end_time=System.currentTimeMillis() + 20000L, curr, start=System.currentTimeMillis();\n\n            Util.sleep(1000);\n            while((curr=System.currentTimeMillis()) < end_time) {\n                // 3. Check whether all Entries have correct retransmission times\n                num_non_correct_entries=checkEntries(false);\n                if(num_non_correct_entries == 0)\n                    break;\n                Util.sleep(2000L);\n            }\n\n            System.out.println(\"-- waited for \" + (System.currentTimeMillis() - start) + \" ms\");\n\n            num_non_correct_entries=checkEntries(true);\n            if(num_non_correct_entries > 0)\n                System.err.println(\"Number of incorrect retransmission timeouts: \" + num_non_correct_entries);\n            assert num_non_correct_entries == 0;\n        }\n        finally {\n            win.reset();\n            timer.stop();\n        }\n    }","id":39445,"modified_method":"/** Tests whether retransmits are called at correct times for 1000 messages */\n    @Test(groups=Global.FUNCTIONAL)\n    public void testRetransmits() throws InterruptedException {\n        int   num_non_correct_entries=0;\n\n        // 1. Send NUM_MSGS messages:\n        System.out.println(\"-- sending \" + NUM_MSGS + \" messages:\");\n        for(long i=0; i < NUM_MSGS; i++) {\n            msgs.put(new Long(i), new Entry());\n            win.add(i, new Message());\n        }\n        System.out.println(\"-- done\");\n\n        // 2. Wait for at least 4 xmits/msg: total of 1000 + 2000 + 4000 + 8000ms = 15000ms; wait for 20000ms\n        System.out.println(\"-- waiting for all retransmits\");\n        long end_time=System.currentTimeMillis() + 20000L, curr, start=System.currentTimeMillis();\n\n        Util.sleep(1000);\n        while((curr=System.currentTimeMillis()) < end_time) {\n            // 3. Check whether all Entries have correct retransmission times\n            num_non_correct_entries=checkEntries(false);\n            if(num_non_correct_entries == 0)\n                break;\n            Util.sleep(2000L);\n        }\n\n        System.out.println(\"-- waited for \" + (System.currentTimeMillis() - start) + \" ms\");\n\n        num_non_correct_entries=checkEntries(true);\n        if(num_non_correct_entries > 0)\n            System.err.println(\"Number of incorrect retransmission timeouts: \" + num_non_correct_entries);\n        assert num_non_correct_entries == 0;\n\n    }","commit_id":"c56725e19abfe6ecd21c772d3199ade0657d2a8e","url":"https://github.com/belaban/JGroups"},{"original_method":"public void testAdd() throws InterruptedException {\n        TimeScheduler timer=new TimeScheduler();\n        win=new AckSenderWindow(new MyRetransmitCommand(), new StaticInterval(xmit_timeouts), timer);\n        try {\n            for(int i=1; i <=5; i++)\n                win.add(i, new Message());\n            System.out.println(\"win = \" + win);\n            assert win.size() == 5;\n            win.ack(1);\n            System.out.println(\"win = \" + win);\n            assert win.size() == 4;\n            win.ack(4);\n            System.out.println(\"win = \" + win);\n            assert win.size() == 1;\n            win.ack(44);\n            assert win.size() == 0;\n        }\n        finally {\n            win.reset();\n            timer.stop();\n        }\n    }","id":39446,"modified_method":"public void testAdd() {\n        for(int i=1; i <= 10; i++)\n            win.add(i, new Message());\n        System.out.println(\"win = \" + win);\n        assert win.size() == 10;\n        win.ack(7);\n        assert win.size() == 3;\n    }","commit_id":"c56725e19abfe6ecd21c772d3199ade0657d2a8e","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Removes all messages <em>less than or equal<\/em> to seqno from <code>msgs<\/code>, and cancels their retransmission.\n     */\n    public synchronized void ack(long seqno) {\n        if(lowest == 0) {\n            Long tmp=getLowestSeqno();\n            if(tmp != null)\n                lowest=tmp;\n        }\n\n        for(long i=lowest; i <= seqno; i++) {\n            msgs.remove(i);\n            retransmitter.remove(i);\n        }\n        lowest=seqno +1;\n    }","id":39447,"modified_method":"/**\n     * Removes all messages <em>less than or equal<\/em> to seqno from <code>msgs<\/code>, and cancels their retransmission\n     */\n    public void ack(long seqno) {\n        long prev_lowest;\n        synchronized(this) {\n            if(seqno < lowest) return; // not really needed, but we can avoid the max() call altogether...\n            prev_lowest=lowest;\n            lowest=Math.max(lowest, seqno +1);\n        }\n\n        for(long i=prev_lowest; i <= seqno; i++) {\n            msgs.remove(i);\n            retransmitter.remove(i);\n        }\n    }","commit_id":"a85e34b082ed20b2cab791ffade106cac17d70ea","url":"https://github.com/belaban/JGroups"},{"original_method":"public void reset() {\n        msgs.clear();\n\n        // moved out of sync scope: Retransmitter.reset()/add()/remove() are sync'ed anyway\n        // Bela Jan 15 2003\n        retransmitter.reset();\n    }","id":39448,"modified_method":"public void reset() {\n        msgs.clear();\n        retransmitter.reset();\n        lowest=Global.DEFAULT_FIRST_UNICAST_SEQNO;\n    }","commit_id":"a85e34b082ed20b2cab791ffade106cac17d70ea","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Returns the message with the lowest seqno */\n    public Message getLowestMessage() {\n        Set<Long> keys=msgs.keySet();\n        if(keys.isEmpty())\n            return null;\n        Long seqno=Collections.min(keys);\n        return seqno != null? msgs.get(seqno) : null;\n    }","id":39449,"modified_method":"/** Returns the message with the lowest seqno */\n    public synchronized Message getLowestMessage() {\n        return msgs.get(lowest);\n    }","commit_id":"a85e34b082ed20b2cab791ffade106cac17d70ea","url":"https://github.com/belaban/JGroups"},{"original_method":"public Long getLowestSeqno() {\n        Set<Long> keys=msgs.keySet();\n        return keys != null? Collections.min(keys) : null;\n    }","id":39450,"modified_method":"/** Only to be used for testing purposes */\n    public synchronized long getLowest() {\n        return lowest;\n    }","commit_id":"a85e34b082ed20b2cab791ffade106cac17d70ea","url":"https://github.com/belaban/JGroups"},{"original_method":"public void testAdd() throws InterruptedException {\n        TimeScheduler timer=new TimeScheduler();\n        win=new AckSenderWindow(new MyRetransmitCommand(), new StaticInterval(xmit_timeouts), timer);\n        try {\n            for(int i=1; i <=5; i++)\n                win.add(i, new Message());\n            System.out.println(\"win = \" + win);\n            assert win.size() == 5;\n            win.ack(1);\n            System.out.println(\"win = \" + win);\n            assert win.size() == 4;\n            win.ack(4);\n            System.out.println(\"win = \" + win);\n            assert win.size() == 1;\n            win.ack(44);\n            assert win.size() == 0;\n        }\n        finally {\n            win.reset();\n            timer.stop();\n        }\n    }","id":39451,"modified_method":"public void testAdd() {\n        for(int i=1; i <= 10; i++)\n            win.add(i, new Message());\n        System.out.println(\"win = \" + win);\n        assert win.size() == 10;\n        win.ack(7);\n        assert win.size() == 3;\n    }","commit_id":"a85e34b082ed20b2cab791ffade106cac17d70ea","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Tests whether retransmits are called at correct times for 1000 messages */\n    @Test(groups=Global.FUNCTIONAL)\n    public void testRetransmits() throws InterruptedException {\n        int   num_non_correct_entries=0;\n\n        TimeScheduler timer=new TimeScheduler();\n        win=new AckSenderWindow(new MyRetransmitCommand(), new StaticInterval(xmit_timeouts), timer);\n        try {\n\n            // 1. Send NUM_MSGS messages:\n            System.out.println(\"-- sending \" + NUM_MSGS + \" messages:\");\n            for(long i=0; i < NUM_MSGS; i++) {\n                msgs.put(new Long(i), new Entry());\n                win.add(i, new Message());\n            }\n            System.out.println(\"-- done\");\n\n            // 2. Wait for at least 4 xmits/msg: total of 1000 + 2000 + 4000 + 8000ms = 15000ms; wait for 20000ms\n            System.out.println(\"-- waiting for all retransmits\");\n            long end_time=System.currentTimeMillis() + 20000L, curr, start=System.currentTimeMillis();\n\n            Util.sleep(1000);\n            while((curr=System.currentTimeMillis()) < end_time) {\n                // 3. Check whether all Entries have correct retransmission times\n                num_non_correct_entries=checkEntries(false);\n                if(num_non_correct_entries == 0)\n                    break;\n                Util.sleep(2000L);\n            }\n\n            System.out.println(\"-- waited for \" + (System.currentTimeMillis() - start) + \" ms\");\n\n            num_non_correct_entries=checkEntries(true);\n            if(num_non_correct_entries > 0)\n                System.err.println(\"Number of incorrect retransmission timeouts: \" + num_non_correct_entries);\n            assert num_non_correct_entries == 0;\n        }\n        finally {\n            win.reset();\n            timer.stop();\n        }\n    }","id":39452,"modified_method":"/** Tests whether retransmits are called at correct times for 1000 messages */\n    @Test(groups=Global.FUNCTIONAL)\n    public void testRetransmits() throws InterruptedException {\n        int   num_non_correct_entries=0;\n\n        // 1. Send NUM_MSGS messages:\n        System.out.println(\"-- sending \" + NUM_MSGS + \" messages:\");\n        for(long i=0; i < NUM_MSGS; i++) {\n            msgs.put(new Long(i), new Entry());\n            win.add(i, new Message());\n        }\n        System.out.println(\"-- done\");\n\n        // 2. Wait for at least 4 xmits/msg: total of 1000 + 2000 + 4000 + 8000ms = 15000ms; wait for 20000ms\n        System.out.println(\"-- waiting for all retransmits\");\n        long end_time=System.currentTimeMillis() + 20000L, curr, start=System.currentTimeMillis();\n\n        Util.sleep(1000);\n        while((curr=System.currentTimeMillis()) < end_time) {\n            // 3. Check whether all Entries have correct retransmission times\n            num_non_correct_entries=checkEntries(false);\n            if(num_non_correct_entries == 0)\n                break;\n            Util.sleep(2000L);\n        }\n\n        System.out.println(\"-- waited for \" + (System.currentTimeMillis() - start) + \" ms\");\n\n        num_non_correct_entries=checkEntries(true);\n        if(num_non_correct_entries > 0)\n            System.err.println(\"Number of incorrect retransmission timeouts: \" + num_non_correct_entries);\n        assert num_non_correct_entries == 0;\n\n    }","commit_id":"a85e34b082ed20b2cab791ffade106cac17d70ea","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Process any transferrable: @param e can be null if don't have a drop event\n     * (e.g., could use to process clipboard contents as well as drop events)\n     */\n    public boolean processTransferable(Transferable transfer, DropTargetDropEvent e)\n    {\n        Point dropLocation = null;\n        int dropAction = DnDConstants.ACTION_MOVE; // default action\n        boolean modifierKeyWasDown = false;\n        \n        if (e != null) {\n            dropLocation = e.getLocation();\n            dropAction = e.getDropAction();\n\n            // ACTION_MOVE action is default action on PC, COPY on the\n            // Mac, so if not that, assume a modifier key was being\n            // held down to change the from the default OS drag\n            // action.  We have no way of knowing anything about\n            // actual keyboard state that initiated the drag.\n\n            //if (VueUtil.isMacPlatform())\n            //    modifierKeyWasDown = (dropAction != DnDConstants.ACTION_COPY);\n            //else\n            //    modifierKeyWasDown = (dropAction != DnDConstants.ACTION_MOVE);\n\n            // Okay, can't reliably determine if modifier key was down\n            // on all platforms and drag operations: e.g.: on Windows XP,\n            // default action is different in drag from windows file explorer\n            // than on drag from Mozilla (or maybe web browsers in general)\n\n            // FYI, Mac OS X 10.2.8/JVM 1.4.1_01 is not telling us about\n            // changes to dropAction that happen when the drag was\n            // initiated (e.g., ctrl was down) -- this is a BUG, however,\n            // if you press ctrl down AFTER the drop starts, sourceAction\n            // & dropAction will be set to some rediculous number -- so at\n            // least we can detect that by making modifer down the default\n            // if drop action anything other than the default.  ALSO:\n            // somtimes we get ACTION_NONE, which is 0, which will always\n            // fail our acceptable drop types test.\n        }\n\n        LWComponent hitComponent = null;\n\n        if (dropLocation != null) {\n            hitComponent = viewer.getMap().findChildAt(dropToMapLocation(dropLocation));\n            System.out.println(\"\\thitComponent=\" + hitComponent);\n        }\n\n        if (VueUtil.isMacPlatform()) {\n            if (dropAction > 2) // hack: drop action == 1073741842 with Ctrl down on mac.\n                modifierKeyWasDown = true;\n        } else {\n            // not safe: see above re: unpredictable due to drags from browsers and/or WinXP\n            //if (dropAction == 1)\n            //modifierKeyWasDown = true;\n        }\n            \n        \n        boolean createAsChildren = !modifierKeyWasDown && hitComponent instanceof LWNode;\n        boolean overwriteResource = modifierKeyWasDown;\n\n        // if no drop location (e.g., we did a \"Paste\") then assume where\n        // they last clicked.\n        if (dropLocation == null)\n            dropLocation = viewer.getLastMousePressPoint();\n        //dropLocation = new java.awt.Point(viewer.getWidth()/2, viewer.getHeight()/2);\n        \n        List resourceList = null;\n        List fileList = null;        \n        String droppedText = null;\n        DataFlavor foundFlavor = null;\n        Object foundData = null;\n\n        DataFlavor[] dataFlavors = transfer.getTransferDataFlavors();\n        if (debug) System.out.println(\"TRANSFER: found \" + dataFlavors.length + \" dataFlavors\");\n        if (DEBUG.DND) dumpFlavors(transfer);\n\n        try {\n            if (transfer.isDataFlavorSupported(VueDragTreeNodeSelection.resourceFlavor)) {\n                \n                foundFlavor = VueDragTreeNodeSelection.resourceFlavor;\n                foundData = transfer.getTransferData(foundFlavor);\n                resourceList = (java.util.List) foundData;\n            \n            } else if (transfer.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {\n\n                foundFlavor = DataFlavor.javaFileListFlavor;\n                foundData = transfer.getTransferData(foundFlavor);\n                fileList = (java.util.List) foundData;\n\n            } else if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n            \n                foundFlavor = DataFlavor.stringFlavor;\n                foundData = transfer.getTransferData(DataFlavor.stringFlavor);\n                droppedText = (String) foundData;\n            \n            } else {\n                System.out.println(\"TRANSFER: found no supported dataFlavors\");\n                dumpFlavors(transfer);\n                return false;\n            }\n        } catch (UnsupportedFlavorException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: Transfer lied about supporting \" + foundFlavor);\n            return false;\n        } catch (ClassCastException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: Transfer data did not match declared type! flavor=\"\n                               + foundFlavor + \" data=\" + foundData.getClass());\n            return false;\n        } catch (java.io.IOException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: data no longer available\");\n            return false;\n        }\n\n        System.out.println(\"TRANSFER: Found supported flavor \\\"\" + foundFlavor.getHumanPresentableName() + \"\\\"\"\n                           + \"\\n\\tflavor=\" + foundFlavor\n                           + \"\\n\\t  data=[\" + foundData + \"]\"\n                           //+ \"\\n\\tdropptedText=[\" + droppedText + \"]\"\n                           );\n\n        boolean success = false;\n\n        // TODO: we can handle Mac .fileloc's if we check multiple data-flavors: the initial LIST\n        // flavor gives us the .fileloc, which we could even pull a name from if we want, and in\n        // any case, a later STRING data-flavor actually gives us the source of the link!\n        // SAME APPLIES TO .webloc files...\n        // Of course, if they drop multple ones of these, we're screwed, as only the last\n        // one gets translated for us in the later string data-flavor.  Oh well -- at least\n        // we can handle the single case if we want.\n\n        if (fileList != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING LIST, size= \" + fileList.size());\n            java.util.Iterator iter = fileList.iterator();\n            int x = dropLocation.x;\n            int y = dropLocation.y;\n\n            List addedNodes = new java.util.ArrayList();\n            while (iter.hasNext()) {\n                File file = (File) iter.next();\n\n                //String resourceSpec = \"file://\" + file.getPath(); // why was this done? it breaks URL shortcuts\n                String resourceSpec = file.getPath();\n                String resourceName = file.getName();\n                \n                if (file.getPath().toLowerCase().endsWith(\".url\")) {\n                    // Search a windows .url file (an internet shortcut)\n                    // for the actual web reference.\n                    String url = convertWindowsURLShortCutToURL(file);\n                    if (url != null) {\n                       resourceSpec = url;\n                       // why was this done?  It breaks URL shortcuts...\n                       //   resourceSpec = \"file://\" + url;\n                        if (file.getName().length() > 4)\n                            resourceName = file.getName().substring(0, file.getName().length() - 4);\n                        else\n                            resourceName = file.getName();\n                    }\n                }\n                \n                //if (debug) System.out.println(\"\\t\" + file.getClass().getName() + \" \" + file);\n                //if (hitComponent != null && fileList.size() == 1) {\n                \n                if (hitComponent != null) {\n                    if (createAsChildren) {\n                        ((LWNode)hitComponent).addChild(createNewNode(resourceSpec, resourceName, null));\n                    } else {\n                        hitComponent.setResource(resourceSpec);\n                    }\n                } else {\n                    addedNodes.add(createNewNode(resourceSpec, resourceName, new java.awt.Point(x, y)));\n                    x += 15;\n                    y += 15;\n                }\n                success = true;\n            }\n            if (addedNodes.size() > 0)\n                VUE.getSelection().setTo(addedNodes.iterator());\n         \n        } else if (resourceList != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING RESOURCE LIST, size= \" + resourceList.size());\n            //if (resourceList.size() == 1 && hitComponent != null && overwriteResource) {\n            if (resourceList.size() == 1 && hitComponent != null && !createAsChildren) {\n                // modifier key was down: force resetting of the resource\n                hitComponent.setResource((Resource)resourceList.get(0));\n            } else {\n                java.util.Iterator iter = resourceList.iterator();\n                int x = dropLocation.x;\n                int y = dropLocation.y;\n                while (iter.hasNext()) {\n                    Resource resource = (Resource) iter.next();\n                    if (createAsChildren) {\n                        ((LWNode)hitComponent).addChild(createNewNode(resource, null));\n                    } else {\n                        createNewNode(resource, new java.awt.Point(x,y));\n                        x += 15;\n                        y += 15;\n                    }\n                    success = true;\n                }\n            }\n        } else if (droppedText != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING DROPPED TEXT\");\n            // Attempt to make a URL of any string dropped -- if fails,\n            // just treat as regular pasted text.  todo: if newlines\n            // in middle of string, don't do this, or possibly attempt\n            // to split into list of multiple URL's (tho only if *every*\n            // line succeeds as a URL -- prob too hairy to bother)\n\n            String[] rows = droppedText.split(\"\\n\");\n            URL url = null;\n            String resourceTitle = null;\n\n            if (rows.length < 3) {\n                try {\n                    url = new URL(rows[0]);\n                } catch (MalformedURLException ex) {}\n                if (rows.length > 1) {\n                    // Current version of Mozilla (at least on Windows XP, as of 2004-02-22)\n                    // includes the HTML <title> as second row of text.\n                    resourceTitle = rows[1];\n                }\n            }\n\n            if (url != null) {\n                if (hitComponent != null) {\n                    if (createAsChildren)\n                        ((LWNode)hitComponent).addChild(createNewNode(url.toString(), resourceTitle, dropLocation));\n                    else\n                        hitComponent.setResource(url.toString());\n                } else {\n                    createNewNode(url.toString(), resourceTitle, dropLocation);\n                }\n            } else {\n                createNewTextNode(droppedText, dropLocation);\n            }\n            success = true;\n        }\n\n        if (success)\n            VUE.getUndoManager().mark(\"Drop\");\n\n        return success;\n    }","id":39453,"modified_method":"/**\n     * Process any transferrable: @param e can be null if don't have a drop event\n     * (e.g., could use to process clipboard contents as well as drop events)\n     */\n    public boolean processTransferable(Transferable transfer, DropTargetDropEvent e)\n    {\n        Point dropLocation = null;\n        int dropAction = DnDConstants.ACTION_MOVE; // default action\n        boolean modifierKeyWasDown = false;\n        \n        if (e != null) {\n            //dropLocation = e.getLocation();\n            //dropAction = e.getDropAction();\n\n            if (DEBUG.DND) System.out.println(\"MapDropTarget: processTransferable: dropAction is \" + dropName(e.getDropAction()));\n\n            // BELOW HAS CHANGED AS OF AT LEAST OS X 10.4.2 / JVM 1.4.2:\n            // Mac now ACTION_MOVE as the default action, just like the PC\n            // \n            // [OLD] ACTION_MOVE action is default action on PC, COPY on the\n            // Mac, so if not that, assume a modifier key was being\n            // held down to change the from the default OS drag\n            // action.  We have no way of knowing anything about\n            // actual keyboard state that initiated the drag.\n\n            //if (VueUtil.isMacPlatform())\n            //    modifierKeyWasDown = (dropAction != DnDConstants.ACTION_COPY);\n            //else\n            //    modifierKeyWasDown = (dropAction != DnDConstants.ACTION_MOVE);\n\n            // Okay, can't reliably determine if modifier key was down\n            // on all platforms and drag operations: e.g.: on Windows XP,\n            // default action is different in drag from windows file explorer\n            // than on drag from Mozilla (or maybe web browsers in general)\n\n            // [ The below has been fixed as of at least OS X 10.4.2 JVM 1.4.2 ]\n            // \n            // [OLD] FYI, Mac OS X 10.2.8/JVM 1.4.1_01 is not telling us about\n            // changes to dropAction that happen when the drag was\n            // initiated (e.g., ctrl was down) -- this is a BUG, however,\n            // if you press ctrl down AFTER the drop starts, sourceAction\n            // & dropAction will be set to some rediculous number -- so at\n            // least we can detect that by making modifer down the default\n            // if drop action anything other than the default.  ALSO:\n            // somtimes we get ACTION_NONE, which is 0, which will always\n            // fail our acceptable drop types test.\n        }\n\n        LWComponent hitComponent = null;\n\n        if (dropLocation != null) {\n            hitComponent = viewer.getMap().findChildAt(dropToMapLocation(dropLocation));\n            System.out.println(\"\\thitComponent=\" + hitComponent);\n        }\n\n        // Now: when either CTRl or ALT is down on the mac, drop action changes from\n        // default of 2 (MOVE) to 1 (COPY)\n        if (VueUtil.isMacPlatform()) {\n            if (dropAction > 2) // hack: drop action == 1073741842 with Ctrl down on mac [OLD OS X / JVM].\n                modifierKeyWasDown = true;\n        } else {\n            // not safe: see above re: unpredictable due to drags from browsers and/or WinXP\n            //if (dropAction == 1)\n            //modifierKeyWasDown = true;\n        }\n            \n        \n        boolean createAsChildren = !modifierKeyWasDown && hitComponent instanceof LWNode;\n        boolean overwriteResource = modifierKeyWasDown;\n\n        // if no drop location (e.g., we did a \"Paste\") then assume where\n        // they last clicked.\n        if (dropLocation == null)\n            dropLocation = viewer.getLastMousePressPoint();\n        //dropLocation = new java.awt.Point(viewer.getWidth()/2, viewer.getHeight()/2);\n        \n        List resourceList = null;\n        List fileList = null;        \n        String droppedText = null;\n        DataFlavor foundFlavor = null;\n        Object foundData = null;\n\n        DataFlavor[] dataFlavors = transfer.getTransferDataFlavors();\n        if (debug) System.out.println(\"TRANSFER: found \" + dataFlavors.length + \" dataFlavors\");\n        if (DEBUG.DND) dumpFlavors(transfer);\n\n        try {\n            if (transfer.isDataFlavorSupported(VueDragTreeNodeSelection.resourceFlavor)) {\n                \n                foundFlavor = VueDragTreeNodeSelection.resourceFlavor;\n                foundData = transfer.getTransferData(foundFlavor);\n                resourceList = (java.util.List) foundData;\n            \n            } else if (transfer.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {\n\n                foundFlavor = DataFlavor.javaFileListFlavor;\n                foundData = transfer.getTransferData(foundFlavor);\n                fileList = (java.util.List) foundData;\n\n            } else if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n            \n                foundFlavor = DataFlavor.stringFlavor;\n                foundData = transfer.getTransferData(DataFlavor.stringFlavor);\n                droppedText = (String) foundData;\n            \n            } else {\n                System.out.println(\"TRANSFER: found no supported dataFlavors\");\n                dumpFlavors(transfer);\n                return false;\n            }\n        } catch (UnsupportedFlavorException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: Transfer lied about supporting \" + foundFlavor);\n            return false;\n        } catch (ClassCastException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: Transfer data did not match declared type! flavor=\"\n                               + foundFlavor + \" data=\" + foundData.getClass());\n            return false;\n        } catch (java.io.IOException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: data no longer available\");\n            return false;\n        }\n\n        System.out.println(\"TRANSFER: Found supported flavor \\\"\" + foundFlavor.getHumanPresentableName() + \"\\\"\"\n                           + \"\\n\\tflavor=\" + foundFlavor\n                           + \"\\n\\t  data=[\" + foundData + \"]\"\n                           //+ \"\\n\\tdropptedText=[\" + droppedText + \"]\"\n                           );\n\n        boolean success = false;\n\n        // TODO: we can handle Mac .fileloc's if we check multiple data-flavors: the initial LIST\n        // flavor gives us the .fileloc, which we could even pull a name from if we want, and in\n        // any case, a later STRING data-flavor actually gives us the source of the link!\n        // SAME APPLIES TO .webloc files...\n        // Of course, if they drop multple ones of these, we're screwed, as only the last\n        // one gets translated for us in the later string data-flavor.  Oh well -- at least\n        // we can handle the single case if we want.\n\n        if (fileList != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING LIST, size= \" + fileList.size());\n            java.util.Iterator iter = fileList.iterator();\n            int x = dropLocation.x;\n            int y = dropLocation.y;\n\n            List addedNodes = new java.util.ArrayList();\n            while (iter.hasNext()) {\n                File file = (File) iter.next();\n\n                //String resourceSpec = \"file://\" + file.getPath(); // why was this done? it breaks URL shortcuts\n                String resourceSpec = file.getPath();\n                String resourceName = file.getName();\n                \n                if (file.getPath().toLowerCase().endsWith(\".url\")) {\n                    // Search a windows .url file (an internet shortcut)\n                    // for the actual web reference.\n                    String url = convertWindowsURLShortCutToURL(file);\n                    if (url != null) {\n                       resourceSpec = url;\n                       // why was this done?  It breaks URL shortcuts...\n                       //   resourceSpec = \"file://\" + url;\n                        if (file.getName().length() > 4)\n                            resourceName = file.getName().substring(0, file.getName().length() - 4);\n                        else\n                            resourceName = file.getName();\n                    }\n                }\n                \n                //if (debug) System.out.println(\"\\t\" + file.getClass().getName() + \" \" + file);\n                //if (hitComponent != null && fileList.size() == 1) {\n                \n                if (hitComponent != null) {\n                    if (createAsChildren) {\n                        ((LWNode)hitComponent).addChild(createNewNode(resourceSpec, resourceName, null));\n                    } else {\n                        hitComponent.setResource(resourceSpec);\n                    }\n                } else {\n                    addedNodes.add(createNewNode(resourceSpec, resourceName, new java.awt.Point(x, y)));\n                    x += 15;\n                    y += 15;\n                }\n                success = true;\n            }\n            if (addedNodes.size() > 0)\n                VUE.getSelection().setTo(addedNodes.iterator());\n         \n        } else if (resourceList != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING RESOURCE LIST, size= \" + resourceList.size());\n            //if (resourceList.size() == 1 && hitComponent != null && overwriteResource) {\n            if (resourceList.size() == 1 && hitComponent != null && !createAsChildren) {\n                // modifier key was down: force resetting of the resource\n                hitComponent.setResource((Resource)resourceList.get(0));\n            } else {\n                java.util.Iterator iter = resourceList.iterator();\n                int x = dropLocation.x;\n                int y = dropLocation.y;\n                while (iter.hasNext()) {\n                    Resource resource = (Resource) iter.next();\n                    if (createAsChildren) {\n                        ((LWNode)hitComponent).addChild(createNewNode(resource, null));\n                    } else {\n                        createNewNode(resource, new java.awt.Point(x,y));\n                        x += 15;\n                        y += 15;\n                    }\n                    success = true;\n                }\n            }\n        } else if (droppedText != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING DROPPED TEXT\");\n            // Attempt to make a URL of any string dropped -- if fails,\n            // just treat as regular pasted text.  todo: if newlines\n            // in middle of string, don't do this, or possibly attempt\n            // to split into list of multiple URL's (tho only if *every*\n            // line succeeds as a URL -- prob too hairy to bother)\n\n            String[] rows = droppedText.split(\"\\n\");\n            URL url = null;\n            String resourceTitle = null;\n\n            if (rows.length < 3) {\n                try {\n                    url = new URL(rows[0]);\n                } catch (MalformedURLException ex) {}\n                if (rows.length > 1) {\n                    // Current version of Mozilla (at least on Windows XP, as of 2004-02-22)\n                    // includes the HTML <title> as second row of text.\n                    resourceTitle = rows[1];\n                }\n            }\n\n            if (url != null) {\n                if (hitComponent != null) {\n                    if (createAsChildren)\n                        ((LWNode)hitComponent).addChild(createNewNode(url.toString(), resourceTitle, dropLocation));\n                    else\n                        hitComponent.setResource(url.toString());\n                } else {\n                    createNewNode(url.toString(), resourceTitle, dropLocation);\n                }\n            } else {\n                createNewTextNode(droppedText, dropLocation);\n            }\n            success = true;\n        }\n\n        if (success)\n            VUE.getUndoManager().mark(\"Drop\");\n\n        return success;\n    }","commit_id":"cf54ed8f837a319cd1a768bcdde4ce2ad123e8ce","url":"https://github.com/VUE/VUE"},{"original_method":"public void dropActionChanged(DropTargetDragEvent e)\n    {\n        if (debug) System.out.println(\"MapDropTarget: dropActionChanged \" + e + \" dropAction=\" + e.getDropAction());\n\n    }","id":39454,"modified_method":"public void dropActionChanged(DropTargetDragEvent e)\n    {\n        if (debug) System.out.println(\"MapDropTarget: dropActionChanged to \" + dropName(e.getDropAction()));\n\n    }","commit_id":"cf54ed8f837a319cd1a768bcdde4ce2ad123e8ce","url":"https://github.com/VUE/VUE"},{"original_method":"public void drop(DropTargetDropEvent e)\n    {\n        if (DEBUG.Enabled) {\n            try {\n                System.out.println(\"caps state=\"+VUE.getActiveViewer().getToolkit().getLockingKeyState(java.awt.event.KeyEvent.VK_CAPS_LOCK));\n            } catch (Exception ex) {\n                System.err.println(ex);\n            }\n        }\n        if (debug) System.out.println(\"MapDropTarget: DROP \" + e\n                                      + \"\\n\\tsourceActions=\" + e.getSourceActions()\n                                      + \"\\n\\tdropAction=\" + e.getDropAction()\n                                      + \"\\n\\tlocation=\" + e.getLocation()\n                                      );\n\n        //if ((e.getSourceActions() & DnDConstants.ACTION_COPY) != 0) {\n        if (false&&(e.getSourceActions() & DnDConstants.ACTION_LINK) != 0) {\n            e.acceptDrop(DnDConstants.ACTION_LINK);\n        } else if (false&&(e.getSourceActions() & DnDConstants.ACTION_COPY) != 0) {\n            e.acceptDrop(DnDConstants.ACTION_COPY);\n            //} else if ((e.getSourceActions() & ACCEPTABLE_DROP_TYPES) != 0) {\n        } else {\n            e.acceptDrop(e.getDropAction());\n            //e.acceptDrop(DnDConstants.ACTION_COPY);\n            //e.acceptDrop(DnDConstants.ACTION_LINK);\n        }\n        /*\n        else {\n            if (debug) System.out.println(\"MapDropTarget: rejecting drop\");\n            e.rejectDrop();\n            return;\n        }\n        */\n\n        // Scan thru the data-flavors, looking for a useful mime-type\n\n        //boolean success = processTransferable(e.getTransferable(), e.getLocation());\n        boolean success = processTransferable(e.getTransferable(), e);\n\n        e.dropComplete(success);\n        viewer.clearIndicated();        \n    }","id":39455,"modified_method":"public void drop(DropTargetDropEvent e)\n    {\n        if (DEBUG.Enabled) {\n            try {\n                System.out.println(\"caps state=\"+VUE.getActiveViewer().getToolkit().getLockingKeyState(java.awt.event.KeyEvent.VK_CAPS_LOCK));\n            } catch (Exception ex) {\n                System.err.println(ex);\n            }\n        }\n        if (debug) System.out.println(\"MapDropTarget: DROP \" + e\n                                      + \"\\n\\tdropAction is \" + dropName(e.getDropAction())\n                                      + \"\\n\\tsourceActions are \" + dropName(e.getSourceActions())\n                                      + \"\\n\\tlocation=\" + e.getLocation()\n                                      );\n\n        //if ((e.getSourceActions() & DnDConstants.ACTION_COPY) != 0) {\n        if (false&&(e.getSourceActions() & DnDConstants.ACTION_LINK) != 0) {\n            e.acceptDrop(DnDConstants.ACTION_LINK);\n        } else if (false&&(e.getSourceActions() & DnDConstants.ACTION_COPY) != 0) {\n            e.acceptDrop(DnDConstants.ACTION_COPY);\n            //} else if ((e.getSourceActions() & ACCEPTABLE_DROP_TYPES) != 0) {\n        } else {\n            e.acceptDrop(e.getDropAction());\n            //e.acceptDrop(DnDConstants.ACTION_COPY);\n            //e.acceptDrop(DnDConstants.ACTION_LINK);\n        }\n        /*\n        else {\n            if (debug) System.out.println(\"MapDropTarget: rejecting drop\");\n            e.rejectDrop();\n            return;\n        }\n        */\n\n        // Scan thru the data-flavors, looking for a useful mime-type\n\n        //boolean success = processTransferable(e.getTransferable(), e.getLocation());\n        boolean success = processTransferable(e.getTransferable(), e);\n\n        e.dropComplete(success);\n        viewer.clearIndicated();        \n    }","commit_id":"cf54ed8f837a319cd1a768bcdde4ce2ad123e8ce","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n\t * Send an auth packet.\n\t */\n\tprivate void sendAuthPacket(int version, int negType, int phase, byte[] data, PeerNode pn, Peer replyTo) {\n\t\tbyte[] output = new byte[data.length+3];\n\t\toutput[0] = (byte) version;\n\t\toutput[1] = (byte) negType;\n\t\toutput[2] = (byte) phase;\n\t\tSystem.arraycopy(data, 0, output, 3, data.length);\n\t\tif(logMINOR) {\n\t\t\tlong now = System.currentTimeMillis();\n\t\t\tString delta = \"never\";\n\t\t\tif(pn != null) {\n\t\t\t\tlong last = pn.lastSentPacketTime();\n\t\t\t\tdelta = TimeUtil.formatTime(now-last, 2, true)+\" ago\";\n\t\t\t}\n\t\t\tLogger.minor(this, \"Sending auth packet for \"+pn.getPeer()+\" (phase=\"+phase+\", ver=\"+version+\", nt=\"+negType+\") (last packet sent \"+delta+\") to \"+replyTo+\" data.length=\"+data.length);\n\t\t}\n\t\tsendAuthPacket(output, pn.outgoingSetupCipher, pn, replyTo, false);\n\t}","id":39456,"modified_method":"/**\n\t * Send an auth packet.\n\t */\n\tprivate void sendAuthPacket(int version, int negType, int phase, byte[] data, PeerNode pn, Peer replyTo) {\n\t\tbyte[] output = new byte[data.length+3];\n\t\toutput[0] = (byte) version;\n\t\toutput[1] = (byte) negType;\n\t\toutput[2] = (byte) phase;\n\t\tSystem.arraycopy(data, 0, output, 3, data.length);\n\t\tif(logMINOR) {\n\t\t\tlong now = System.currentTimeMillis();\n\t\t\tString delta = \"never\";\n\t\t\tif(pn != null) {\n\t\t\t\tlong last = pn.lastSentPacketTime();\n\t\t\t\tdelta = TimeUtil.formatTime(now-last, 2, true)+\" ago\";\n\t\t\t}\n\t\t\tLogger.minor(this, \"Sending auth packet for \"+(pn == null ? \"null\" : pn.getPeer().toString())+\" (phase=\"+phase+\", ver=\"+version+\", nt=\"+negType+\") (last packet sent \"+delta+\") to \"+replyTo+\" data.length=\"+data.length+\" to \"+replyTo);\n\t\t}\n\t\tsendAuthPacket(output, pn.outgoingSetupCipher, pn, replyTo, false);\n\t}","commit_id":"448fc52ed5a1717355f238329bf0b53bbb1e99d9","url":"https://github.com/freenet/fred"},{"original_method":"private boolean processJFKMessage4(byte[] payload, int inputOffset, PeerNode pn, Peer replyTo, boolean oldOpennetPeer, boolean unknownInitiator, int setupType)\n\t{\n\t\tfinal long t1 = System.currentTimeMillis();\n\t\tif(logMINOR) Logger.minor(this, \"Got a JFK(4) message, processing it - \"+pn.getPeer());\n\t\tif(pn.jfkMyRef == null) {\n\t\t\tString error = \"Got a JFK(4) message but no pn.jfkMyRef for \"+pn;\n\t\t\tif(node.getUptime() < 60*1000)\n\t\t\t\tLogger.minor(this, error);\n\t\t\telse\n\t\t\t\tLogger.error(this, error);\n\t\t}\n\t\tBlockCipher c = null;\n\t\ttry { c = new Rijndael(256, 256); } catch (UnsupportedCipherException e) {}\n\t\t\n\t\tfinal int expectedLength =\tHASH_LENGTH + // HMAC of the cyphertext\n\t\t\t\t\t\t\t\t\t(c.getBlockSize() >> 3) + // IV\n\t\t\t\t\t\t\t\t\tHASH_LENGTH // the signature\n\t\t\t\t\t\t\t\t\t;\n\t\tif(payload.length < expectedLength + 3) {\n\t\t\tLogger.error(this, \"Packet too short from \"+pn.getPeer()+\": \"+payload.length+\" after decryption in JFK(4), should be \"+(expectedLength + 3));\n\t\t\treturn false;\n\t\t}\n\t\tbyte[] jfkBuffer = pn.getJFKBuffer();\n\t\tif(jfkBuffer == null) {\n\t\t\tLogger.normal(this, \"We have already handled this message... might be a replay or a bug - \"+pn);\n\t\t\treturn false;\n\t\t}\n\n\t\tbyte[] hmac = new byte[HASH_LENGTH];\n\t\tSystem.arraycopy(payload, inputOffset, hmac, 0, HASH_LENGTH);\n\t\tinputOffset += HASH_LENGTH;\n\t\t\n\t\tc.initialize(pn.jfkKe);\n\t\tfinal PCFBMode pk = PCFBMode.create(c);\n\t\tint ivLength = pk.lengthIV();\n\t\tint decypheredPayloadOffset = 0;\n\t\t// We compute the HMAC of (\"R\"+cyphertext) : the cyphertext includes the IV!\n\t\tbyte[] decypheredPayload = new byte[JFK_PREFIX_RESPONDER.length + (payload.length-inputOffset)];\n\t\tSystem.arraycopy(JFK_PREFIX_RESPONDER, 0, decypheredPayload, decypheredPayloadOffset, JFK_PREFIX_RESPONDER.length);\n\t\tdecypheredPayloadOffset += JFK_PREFIX_RESPONDER.length;\n\t\tSystem.arraycopy(payload, inputOffset, decypheredPayload, decypheredPayloadOffset, payload.length-inputOffset);\n\t\tif(!HMAC.verifyWithSHA256(pn.jfkKa, decypheredPayload, hmac)) {\n\t\t\tLogger.normal(this, \"The digest-HMAC doesn't match; let's discard the packet - \"+pn.getPeer());\n\t\t\treturn false;\n\t\t}\n\t\t// Get the IV\n\t\tpk.reset(decypheredPayload, decypheredPayloadOffset);\n\t\tdecypheredPayloadOffset += ivLength;\n\t\t// Decrypt the payload\n\t\tpk.blockDecipher(decypheredPayload, decypheredPayloadOffset, decypheredPayload.length - decypheredPayloadOffset);\n\t\t/*\n\t\t * DecipheredData Format:\n\t\t * Signature-r,s\n\t\t * bootID, znoderef\n\t\t */\n\t\tbyte[] r = new byte[Node.SIGNATURE_PARAMETER_LENGTH];\n\t\tSystem.arraycopy(decypheredPayload, decypheredPayloadOffset, r, 0, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tdecypheredPayloadOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tbyte[] s = new byte[Node.SIGNATURE_PARAMETER_LENGTH];\n\t\tSystem.arraycopy(decypheredPayload, decypheredPayloadOffset, s, 0, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tdecypheredPayloadOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tbyte[] data = new byte[decypheredPayload.length - decypheredPayloadOffset];\n\t\tSystem.arraycopy(decypheredPayload, decypheredPayloadOffset, data, 0, decypheredPayload.length - decypheredPayloadOffset);\n\t\tlong bootID = Fields.bytesToLong(data);\n\t\tbyte[] hisRef = new byte[data.length - 8];\n\t\tSystem.arraycopy(data, 8, hisRef, 0, hisRef.length);\n\t\t\n\t\t// verify the signature\n\t\tDSASignature remoteSignature = new DSASignature(new NativeBigInteger(1,r), new NativeBigInteger(1,s));\n\t\tbyte[] locallyGeneratedText = new byte[NONCE_SIZE * 2 + DiffieHellman.modulusLengthInBytes() * 2 + crypto.myIdentity.length + 8 /*bootID*/ + hisRef.length + pn.jfkMyRef.length];\n\t\tint bufferOffset = NONCE_SIZE * 2 + DiffieHellman.modulusLengthInBytes()*2;\n\t\tSystem.arraycopy(jfkBuffer, 0, locallyGeneratedText, 0, bufferOffset);\n\t\tbyte[] identity = crypto.getIdentity(unknownInitiator);\n\t\tSystem.arraycopy(identity, 0, locallyGeneratedText, bufferOffset, identity.length);\n\t\tbufferOffset += identity.length;\n\t\t// bootID\n\t\tSystem.arraycopy(data, 0, locallyGeneratedText, bufferOffset, hisRef.length + 8);\n\t\tbufferOffset += hisRef.length + 8;\n\t\tSystem.arraycopy(pn.jfkMyRef, 0, locallyGeneratedText, bufferOffset, pn.jfkMyRef.length);\n\t\tbyte[] messageHash = SHA256.digest(locallyGeneratedText);\n\t\tif(!DSA.verify(pn.peerPubKey, remoteSignature, new NativeBigInteger(1, messageHash), false)) {\n\t\t\tLogger.error(this, \"The signature verification has failed!! JFK(4) -\"+pn.getPeer()+\" message hash \"+HexUtil.bytesToHex(messageHash));\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// Promote if necessary\n\t\tboolean dontWant = false;\n\t\tif(oldOpennetPeer) {\n\t\t\tOpennetManager opennet = node.getOpennet();\n\t\t\tif(opennet == null) {\n\t\t\t\tLogger.normal(this, \"Dumping incoming old-opennet peer as opennet just turned off: \"+pn+\".\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!opennet.wantPeer(pn, true)) {\n\t\t\t\tLogger.normal(this, \"No longer want peer \"+pn+\" - dumping it after connecting\");\n\t\t\t\tdontWant = true;\n\t\t\t}\n\t\t\t// wantPeer will call node.peers.addPeer(), we don't have to.\n\t\t}\n\t\t\n\t\t// We change the key\n\t\tc.initialize(pn.jfkKs);\n\t\tif(pn.completedHandshake(bootID, data, 8, data.length - 8, c, pn.jfkKs, replyTo, false)) {\n\t\t\tif(dontWant)\n\t\t\t\tnode.peers.disconnect(pn, true, false);\n\t\t\telse\n\t\t\t\tpn.maybeSendInitialMessages();\n\t\t} else {\n\t\t\tLogger.error(this, \"Handshake failed!\");\n\t\t}\n\t\t\n\t\t// cleanup\n                // FIXME: maybe we should copy zeros/garbage into it before leaving it to the GC\n\t\tpn.setJFKBuffer(null);\n\t\tpn.jfkKa = null;\n\t\tpn.jfkKe = null;\n\t\tpn.jfkKs = null;\n\t\t// We want to clear it here so that new handshake requests\n\t\t// will be sent with a different DH pair\n\t\tpn.setKeyAgreementSchemeContext(null);\n\t\tsynchronized (pn) {\n\t\t\t// FIXME TRUE MULTI-HOMING: winner-takes-all, kill all other connection attempts since we can't deal with multiple active connections\n\t\t\t// Also avoids leaking\n\t\t\tpn.jfkNoncesSent.clear();\n\t\t}\n\t\t\n\t\tfinal long t2=System.currentTimeMillis();\n\t\tif((t2-t1)>500)\n\t\t\tLogger.error(this,\"Message4 timeout error:Processing packet from \"+pn.getPeer());\n\t\treturn true;\n\t}","id":39457,"modified_method":"private boolean processJFKMessage4(byte[] payload, int inputOffset, PeerNode pn, Peer replyTo, boolean oldOpennetPeer, boolean unknownInitiator, int setupType, boolean bothNoderefs)\n\t{\n\t\tfinal long t1 = System.currentTimeMillis();\n\t\tif(logMINOR) Logger.minor(this, \"Got a JFK(4) message, processing it - \"+pn.getPeer());\n\t\tif(pn.jfkMyRef == null) {\n\t\t\tString error = \"Got a JFK(4) message but no pn.jfkMyRef for \"+pn;\n\t\t\tif(node.getUptime() < 60*1000)\n\t\t\t\tLogger.minor(this, error);\n\t\t\telse\n\t\t\t\tLogger.error(this, error);\n\t\t}\n\t\tBlockCipher c = null;\n\t\ttry { c = new Rijndael(256, 256); } catch (UnsupportedCipherException e) {}\n\t\t\n\t\tfinal int expectedLength =\tHASH_LENGTH + // HMAC of the cyphertext\n\t\t\t\t\t\t\t\t\t(c.getBlockSize() >> 3) + // IV\n\t\t\t\t\t\t\t\t\tHASH_LENGTH + // the signature\n\t\t\t\t\t\t\t\t\t(bothNoderefs ? pn.jfkMyRef.length : 0) // my reference\n\t\t\t\t\t\t\t\t\t;\n\t\tif(payload.length < expectedLength + 3) {\n\t\t\tLogger.error(this, \"Packet too short from \"+pn.getPeer()+\": \"+payload.length+\" after decryption in JFK(4), should be \"+(expectedLength + 3));\n\t\t\treturn false;\n\t\t}\n\t\tbyte[] jfkBuffer = pn.getJFKBuffer();\n\t\tif(jfkBuffer == null) {\n\t\t\tLogger.normal(this, \"We have already handled this message... might be a replay or a bug - \"+pn);\n\t\t\treturn false;\n\t\t}\n\n\t\tbyte[] hmac = new byte[HASH_LENGTH];\n\t\tSystem.arraycopy(payload, inputOffset, hmac, 0, HASH_LENGTH);\n\t\tinputOffset += HASH_LENGTH;\n\t\t\n\t\tc.initialize(pn.jfkKe);\n\t\tfinal PCFBMode pk = PCFBMode.create(c);\n\t\tint ivLength = pk.lengthIV();\n\t\tint decypheredPayloadOffset = 0;\n\t\t// We compute the HMAC of (\"R\"+cyphertext) : the cyphertext includes the IV!\n\t\tbyte[] decypheredPayload = new byte[JFK_PREFIX_RESPONDER.length + (payload.length-inputOffset)];\n\t\tSystem.arraycopy(JFK_PREFIX_RESPONDER, 0, decypheredPayload, decypheredPayloadOffset, JFK_PREFIX_RESPONDER.length);\n\t\tdecypheredPayloadOffset += JFK_PREFIX_RESPONDER.length;\n\t\tSystem.arraycopy(payload, inputOffset, decypheredPayload, decypheredPayloadOffset, payload.length-inputOffset);\n\t\tif(!HMAC.verifyWithSHA256(pn.jfkKa, decypheredPayload, hmac)) {\n\t\t\tLogger.normal(this, \"The digest-HMAC doesn't match; let's discard the packet - \"+pn.getPeer());\n\t\t\treturn false;\n\t\t}\n\t\t// Get the IV\n\t\tpk.reset(decypheredPayload, decypheredPayloadOffset);\n\t\tdecypheredPayloadOffset += ivLength;\n\t\t// Decrypt the payload\n\t\tpk.blockDecipher(decypheredPayload, decypheredPayloadOffset, decypheredPayload.length - decypheredPayloadOffset);\n\t\t/*\n\t\t * DecipheredData Format:\n\t\t * Signature-r,s\n\t\t * bootID, znoderef\n\t\t */\n\t\tbyte[] r = new byte[Node.SIGNATURE_PARAMETER_LENGTH];\n\t\tSystem.arraycopy(decypheredPayload, decypheredPayloadOffset, r, 0, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tdecypheredPayloadOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tbyte[] s = new byte[Node.SIGNATURE_PARAMETER_LENGTH];\n\t\tSystem.arraycopy(decypheredPayload, decypheredPayloadOffset, s, 0, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tdecypheredPayloadOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tbyte[] data = new byte[decypheredPayload.length - decypheredPayloadOffset];\n\t\tSystem.arraycopy(decypheredPayload, decypheredPayloadOffset, data, 0, decypheredPayload.length - decypheredPayloadOffset);\n\t\tlong bootID = Fields.bytesToLong(data);\n\t\tbyte[] hisRef = new byte[data.length - (bothNoderefs ? pn.jfkMyRef.length : 0) - 8];\n\t\tSystem.arraycopy(data, 8, hisRef, 0, hisRef.length);\n\t\t\n\t\t// verify the signature\n\t\tDSASignature remoteSignature = new DSASignature(new NativeBigInteger(1,r), new NativeBigInteger(1,s));\n\t\tbyte[] locallyGeneratedText = new byte[NONCE_SIZE * 2 + DiffieHellman.modulusLengthInBytes() * 2 + crypto.myIdentity.length + 8 /*bootID*/ + hisRef.length + pn.jfkMyRef.length];\n\t\tint bufferOffset = NONCE_SIZE * 2 + DiffieHellman.modulusLengthInBytes()*2;\n\t\tSystem.arraycopy(jfkBuffer, 0, locallyGeneratedText, 0, bufferOffset);\n\t\tbyte[] identity = crypto.getIdentity(unknownInitiator);\n\t\tSystem.arraycopy(identity, 0, locallyGeneratedText, bufferOffset, identity.length);\n\t\tbufferOffset += identity.length;\n\t\t// bootID\n\t\tSystem.arraycopy(data, 0, locallyGeneratedText, bufferOffset, hisRef.length + 8);\n\t\tbufferOffset += hisRef.length + 8;\n\t\tSystem.arraycopy(pn.jfkMyRef, 0, locallyGeneratedText, bufferOffset, pn.jfkMyRef.length);\n\t\tbyte[] messageHash = SHA256.digest(locallyGeneratedText);\n\t\tif(!DSA.verify(pn.peerPubKey, remoteSignature, new NativeBigInteger(1, messageHash), false)) {\n\t\t\tLogger.error(this, \"The signature verification has failed!! JFK(4) -\"+pn.getPeer()+\" message hash \"+HexUtil.bytesToHex(messageHash)+\" length \"+locallyGeneratedText.length+\" hisRef \"+hisRef.length+\" hash \"+Fields.hashCode(hisRef)+\" myRef \"+pn.jfkMyRef.length+\" hash \"+Fields.hashCode(pn.jfkMyRef)+\" boot ID \"+bootID);\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// Promote if necessary\n\t\tboolean dontWant = false;\n\t\tif(oldOpennetPeer) {\n\t\t\tOpennetManager opennet = node.getOpennet();\n\t\t\tif(opennet == null) {\n\t\t\t\tLogger.normal(this, \"Dumping incoming old-opennet peer as opennet just turned off: \"+pn+\".\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif(!opennet.wantPeer(pn, true)) {\n\t\t\t\tLogger.normal(this, \"No longer want peer \"+pn+\" - dumping it after connecting\");\n\t\t\t\tdontWant = true;\n\t\t\t}\n\t\t\t// wantPeer will call node.peers.addPeer(), we don't have to.\n\t\t}\n\t\t\n\t\t// We change the key\n\t\tc.initialize(pn.jfkKs);\n\t\tif(pn.completedHandshake(bootID, data, 8, data.length - 8, c, pn.jfkKs, replyTo, false)) {\n\t\t\tif(dontWant)\n\t\t\t\tnode.peers.disconnect(pn, true, false);\n\t\t\telse\n\t\t\t\tpn.maybeSendInitialMessages();\n\t\t} else {\n\t\t\tLogger.error(this, \"Handshake failed!\");\n\t\t}\n\t\t\n\t\t// cleanup\n                // FIXME: maybe we should copy zeros/garbage into it before leaving it to the GC\n\t\tpn.setJFKBuffer(null);\n\t\tpn.jfkKa = null;\n\t\tpn.jfkKe = null;\n\t\tpn.jfkKs = null;\n\t\t// We want to clear it here so that new handshake requests\n\t\t// will be sent with a different DH pair\n\t\tpn.setKeyAgreementSchemeContext(null);\n\t\tsynchronized (pn) {\n\t\t\t// FIXME TRUE MULTI-HOMING: winner-takes-all, kill all other connection attempts since we can't deal with multiple active connections\n\t\t\t// Also avoids leaking\n\t\t\tpn.jfkNoncesSent.clear();\n\t\t}\n\t\t\n\t\tfinal long t2=System.currentTimeMillis();\n\t\tif((t2-t1)>500)\n\t\t\tLogger.error(this,\"Message4 timeout error:Processing packet from \"+pn.getPeer());\n\t\treturn true;\n\t}","commit_id":"d19b79e9b866ee997d7a1f87c3e8368bf36ba0f0","url":"https://github.com/freenet/fred"},{"original_method":"private void processJFKMessage3(byte[] payload, int inputOffset, PeerNode pn,Peer replyTo, boolean oldOpennetPeer, boolean unknownInitiator, int setupType)\n\t{\n\t\tfinal long t1 = System.currentTimeMillis();\n\t\tif(logMINOR) Logger.minor(this, \"Got a JFK(3) message, processing it - \"+pn);\n\t\t\n\t\tBlockCipher c = null;\n\t\ttry { c = new Rijndael(256, 256); } catch (UnsupportedCipherException e) {}\n\t\t\n\t\tfinal int expectedLength =\tNONCE_SIZE*2 + DiffieHellman.modulusLengthInBytes()*2 +\n\t\t\t\t\t\t\t\t\tHASH_LENGTH + // authenticator\n\t\t\t\t\t\t\t\t\tHASH_LENGTH + // HMAC of the cyphertext\n\t\t\t\t\t\t\t\t\t(c.getBlockSize() >> 3) + // IV\n\t\t\t\t\t\t\t\t\tHASH_LENGTH + // it's at least a signature\n\t\t\t\t\t\t\t\t\t8;\t\t\t  // a bootid\n\t\tif(payload.length < expectedLength + 3) {\n\t\t\tLogger.error(this, \"Packet too short from \"+pn+\": \"+payload.length+\" after decryption in JFK(3), should be \"+(expectedLength + 3));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Ni\n\t\tbyte[] nonceInitiator = new byte[NONCE_SIZE];\n\t\tSystem.arraycopy(payload, inputOffset, nonceInitiator, 0, NONCE_SIZE);\n\t\tinputOffset += NONCE_SIZE;\n\t\t// Nr\n\t\tbyte[] nonceResponder = new byte[NONCE_SIZE];\n\t\tSystem.arraycopy(payload, inputOffset, nonceResponder, 0, NONCE_SIZE);\n\t\tinputOffset += NONCE_SIZE;\n\t\t// g^i\n\t\tbyte[] initiatorExponential = new byte[DiffieHellman.modulusLengthInBytes()];\n\t\tSystem.arraycopy(payload, inputOffset, initiatorExponential, 0, DiffieHellman.modulusLengthInBytes());\n\t\tinputOffset += DiffieHellman.modulusLengthInBytes();\n\t\t// g^r\n\t\tbyte[] responderExponential = new byte[DiffieHellman.modulusLengthInBytes()];\n\t\tSystem.arraycopy(payload, inputOffset, responderExponential, 0, DiffieHellman.modulusLengthInBytes());\n\t\tinputOffset += DiffieHellman.modulusLengthInBytes();\n\t\t\n\t\tbyte[] authenticator = new byte[HASH_LENGTH];\n\t\tSystem.arraycopy(payload, inputOffset, authenticator, 0, HASH_LENGTH);\n\t\tinputOffset += HASH_LENGTH;\n\n\t\t// We *WANT* to check the hmac before we do the lookup on the hashmap\n\t\t// @see https://bugs.freenetproject.org/view.php?id=1604\n\t\tif(!HMAC.verifyWithSHA256(getTransientKey(), assembleJFKAuthenticator(responderExponential, initiatorExponential, nonceResponder, nonceInitiator, replyTo.getAddress().getAddress()) , authenticator)) {\n\t\t\tif(shouldLogErrorInHandshake(t1))\n\t\t\t\tLogger.normal(this, \"The HMAC doesn't match; let's discard the packet (either we rekeyed or we are victim of forgery) - JFK3 - \"+pn);\n\t\t\treturn;\n\t\t}\n\t\t// Check try to find the authenticator in the cache.\n\t\t// If authenticator is already present, indicates duplicate/replayed message3\n\t\t// Now simply transmit the corresponding message4\n\t\tObject message4 = null;\n\t\tsynchronized (authenticatorCache) {\n\t\t\tmessage4 = authenticatorCache.get(authenticator);\n\t\t}\n\t\tif(message4 != null) {\n\t\t\tLogger.normal(this, \"We replayed a message from the cache (shouldn't happen often) - \"+pn);\n\t\t\tsendAuthPacket(1, 2, 3, (byte[]) message4, pn, replyTo);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tNativeBigInteger _hisExponential = new NativeBigInteger(1, initiatorExponential);\n\t\tNativeBigInteger _ourExponential = new NativeBigInteger(1, responderExponential);\n\t\t\n\t\tbyte[] hmac = new byte[HASH_LENGTH];\n\t\tSystem.arraycopy(payload, inputOffset, hmac, 0, HASH_LENGTH);\n\t\tinputOffset += HASH_LENGTH;\n\t\t\n\t\tDiffieHellmanLightContext ctx = findContextByExponential(_ourExponential);\n\t\tif(ctx == null) {\n\t\t\tLogger.error(this, \"WTF? the HMAC verified but we don't know about that exponential! SHOULDN'T HAPPEN! - JFK3 - \"+pn);\n\t\t\treturn;\n\t\t}\n\t\tBigInteger computedExponential = ctx.getHMACKey(_hisExponential, Global.DHgroupA);\n\t\tbyte[] Ks = computeJFKSharedKey(computedExponential, nonceInitiator, nonceResponder, \"0\");\n\t\tbyte[] Ke = computeJFKSharedKey(computedExponential, nonceInitiator, nonceResponder, \"1\");\n\t\tbyte[] Ka = computeJFKSharedKey(computedExponential, nonceInitiator, nonceResponder, \"2\");\n\t\tc.initialize(Ke);\n\t\tfinal PCFBMode pk = PCFBMode.create(c);\n\t\tint ivLength = pk.lengthIV();\n\t\tint decypheredPayloadOffset = 0;\n\t\t// We compute the HMAC of (\"I\"+cyphertext) : the cyphertext includes the IV!\n\t\tbyte[] decypheredPayload = new byte[JFK_PREFIX_INITIATOR.length + payload.length - inputOffset];\n\t\tSystem.arraycopy(JFK_PREFIX_INITIATOR, 0, decypheredPayload, decypheredPayloadOffset, JFK_PREFIX_INITIATOR.length);\n\t\tdecypheredPayloadOffset += JFK_PREFIX_INITIATOR.length;\n\t\tSystem.arraycopy(payload, inputOffset, decypheredPayload, decypheredPayloadOffset, decypheredPayload.length-decypheredPayloadOffset);\n\t\tif(!HMAC.verifyWithSHA256(Ka, decypheredPayload, hmac)) {\n\t\t\tLogger.error(this, \"The inner-HMAC doesn't match; let's discard the packet JFK(3) - \"+pn);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Get the IV\n\t\tpk.reset(decypheredPayload, decypheredPayloadOffset);\n\t\tdecypheredPayloadOffset += ivLength;\n\t\t// Decrypt the payload\n\t\tpk.blockDecipher(decypheredPayload, decypheredPayloadOffset, decypheredPayload.length-decypheredPayloadOffset);\n\t\t/*\n\t\t * DecipheredData Format:\n\t\t * Signature-r,s\n\t\t * Node Data (starting with BootID)\n\t\t */\n\t\tbyte[] r = new byte[Node.SIGNATURE_PARAMETER_LENGTH];\n\t\tSystem.arraycopy(decypheredPayload, decypheredPayloadOffset, r, 0, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tdecypheredPayloadOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tbyte[] s = new byte[Node.SIGNATURE_PARAMETER_LENGTH];\n\t\tSystem.arraycopy(decypheredPayload, decypheredPayloadOffset, s, 0, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tdecypheredPayloadOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tbyte[] data = new byte[decypheredPayload.length - decypheredPayloadOffset];\n\t\tSystem.arraycopy(decypheredPayload, decypheredPayloadOffset, data, 0, decypheredPayload.length - decypheredPayloadOffset);\n\t\tlong bootID = Fields.bytesToLong(data);\n\t\tbyte[] hisRef = new byte[data.length -8];\n\t\tSystem.arraycopy(data, 8, hisRef, 0, hisRef.length);\n\t\t\n\t\t// construct the peernode\n\t\tif(unknownInitiator) {\n\t\t\tpn = getPeerNodeFromUnknownInitiator(hisRef, setupType, pn);\n\t\t\tif(pn == null) {\n\t\t\t\t// Reject\n\t\t\t\tLogger.normal(this, \"Rejecting... unable to construct PeerNode\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// verify the signature\n\t\tDSASignature remoteSignature = new DSASignature(new NativeBigInteger(1,r), new NativeBigInteger(1,s)); \n\t\tif(!DSA.verify(pn.peerPubKey, remoteSignature, new NativeBigInteger(1, SHA256.digest(assembleDHParams(nonceInitiator, nonceResponder, _hisExponential, _ourExponential, crypto.myIdentity, data))), false)) {\n\t\t\tLogger.error(this, \"The signature verification has failed!! JFK(3) - \"+pn.getPeer());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// At this point we know it's from the peer, so we can report a packet received.\n\t\tpn.receivedPacket(true);\n\t\t\n\t\t// Send reply\n\t\tsendJFKMessage4(1, 2, 3, nonceInitiator, nonceResponder,initiatorExponential, responderExponential, \n\t\t\t\tc, Ke, Ka, authenticator, hisRef, pn, replyTo, unknownInitiator, setupType, !unknownInitiator);\n\t\t// FIXME change last argument to FALSE when this build is mandatory.\n\t\t\n\t\tc.initialize(Ks);\n\t\t\n\t\t// Promote if necessary\n\t\tboolean dontWant = false;\n\t\tif(oldOpennetPeer) {\n\t\t\tOpennetManager opennet = node.getOpennet();\n\t\t\tif(opennet == null) {\n\t\t\t\tLogger.normal(this, \"Dumping incoming old-opennet peer as opennet just turned off: \"+pn+\".\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(!opennet.wantPeer(pn, true)) {\n\t\t\t\tLogger.normal(this, \"No longer want peer \"+pn+\" - dumping it after connecting\");\n\t\t\t\tdontWant = true;\n\t\t\t}\n\t\t\t// wantPeer will call node.peers.addPeer(), we don't have to.\n\t\t}\n\t\t\n\t\tif(pn.completedHandshake(bootID, hisRef, 0, hisRef.length, c, Ks, replyTo, true)) {\n\t\t\tif(dontWant)\n\t\t\t\tnode.peers.disconnect(pn, true, false);\n\t\t\telse\n\t\t\t\tpn.maybeSendInitialMessages();\n\t\t} else {\n\t\t\tLogger.error(this, \"Handshake failure! with \"+pn.getPeer());\n\t\t}\n\t\t\n\t\tfinal long t2=System.currentTimeMillis();\n\t\tif((t2-t1)>500)\n\t\t\tLogger.error(this,\"Message3 Processing packet for\"+pn.getPeer()+\" took \"+TimeUtil.formatTime(t2-t1, 3, true));\n\t}","id":39458,"modified_method":"private void processJFKMessage3(byte[] payload, int inputOffset, PeerNode pn,Peer replyTo, boolean oldOpennetPeer, boolean unknownInitiator, int setupType)\n\t{\n\t\tfinal long t1 = System.currentTimeMillis();\n\t\tif(logMINOR) Logger.minor(this, \"Got a JFK(3) message, processing it - \"+pn);\n\t\t\n\t\tBlockCipher c = null;\n\t\ttry { c = new Rijndael(256, 256); } catch (UnsupportedCipherException e) {}\n\t\t\n\t\tfinal int expectedLength =\tNONCE_SIZE*2 + DiffieHellman.modulusLengthInBytes()*2 +\n\t\t\t\t\t\t\t\t\tHASH_LENGTH + // authenticator\n\t\t\t\t\t\t\t\t\tHASH_LENGTH + // HMAC of the cyphertext\n\t\t\t\t\t\t\t\t\t(c.getBlockSize() >> 3) + // IV\n\t\t\t\t\t\t\t\t\tHASH_LENGTH + // it's at least a signature\n\t\t\t\t\t\t\t\t\t8;\t\t\t  // a bootid\n\t\tif(payload.length < expectedLength + 3) {\n\t\t\tLogger.error(this, \"Packet too short from \"+pn+\": \"+payload.length+\" after decryption in JFK(3), should be \"+(expectedLength + 3));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Ni\n\t\tbyte[] nonceInitiator = new byte[NONCE_SIZE];\n\t\tSystem.arraycopy(payload, inputOffset, nonceInitiator, 0, NONCE_SIZE);\n\t\tinputOffset += NONCE_SIZE;\n\t\t// Nr\n\t\tbyte[] nonceResponder = new byte[NONCE_SIZE];\n\t\tSystem.arraycopy(payload, inputOffset, nonceResponder, 0, NONCE_SIZE);\n\t\tinputOffset += NONCE_SIZE;\n\t\t// g^i\n\t\tbyte[] initiatorExponential = new byte[DiffieHellman.modulusLengthInBytes()];\n\t\tSystem.arraycopy(payload, inputOffset, initiatorExponential, 0, DiffieHellman.modulusLengthInBytes());\n\t\tinputOffset += DiffieHellman.modulusLengthInBytes();\n\t\t// g^r\n\t\tbyte[] responderExponential = new byte[DiffieHellman.modulusLengthInBytes()];\n\t\tSystem.arraycopy(payload, inputOffset, responderExponential, 0, DiffieHellman.modulusLengthInBytes());\n\t\tinputOffset += DiffieHellman.modulusLengthInBytes();\n\t\t\n\t\tbyte[] authenticator = new byte[HASH_LENGTH];\n\t\tSystem.arraycopy(payload, inputOffset, authenticator, 0, HASH_LENGTH);\n\t\tinputOffset += HASH_LENGTH;\n\n\t\t// We *WANT* to check the hmac before we do the lookup on the hashmap\n\t\t// @see https://bugs.freenetproject.org/view.php?id=1604\n\t\tif(!HMAC.verifyWithSHA256(getTransientKey(), assembleJFKAuthenticator(responderExponential, initiatorExponential, nonceResponder, nonceInitiator, replyTo.getAddress().getAddress()) , authenticator)) {\n\t\t\tif(shouldLogErrorInHandshake(t1))\n\t\t\t\tLogger.normal(this, \"The HMAC doesn't match; let's discard the packet (either we rekeyed or we are victim of forgery) - JFK3 - \"+pn);\n\t\t\treturn;\n\t\t}\n\t\t// Check try to find the authenticator in the cache.\n\t\t// If authenticator is already present, indicates duplicate/replayed message3\n\t\t// Now simply transmit the corresponding message4\n\t\tObject message4 = null;\n\t\tsynchronized (authenticatorCache) {\n\t\t\tmessage4 = authenticatorCache.get(authenticator);\n\t\t}\n\t\tif(message4 != null) {\n\t\t\tLogger.normal(this, \"We replayed a message from the cache (shouldn't happen often) - \"+pn);\n\t\t\tsendAuthPacket(1, 2, 3, (byte[]) message4, pn, replyTo);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tNativeBigInteger _hisExponential = new NativeBigInteger(1, initiatorExponential);\n\t\tNativeBigInteger _ourExponential = new NativeBigInteger(1, responderExponential);\n\t\t\n\t\tbyte[] hmac = new byte[HASH_LENGTH];\n\t\tSystem.arraycopy(payload, inputOffset, hmac, 0, HASH_LENGTH);\n\t\tinputOffset += HASH_LENGTH;\n\t\t\n\t\tDiffieHellmanLightContext ctx = findContextByExponential(_ourExponential);\n\t\tif(ctx == null) {\n\t\t\tLogger.error(this, \"WTF? the HMAC verified but we don't know about that exponential! SHOULDN'T HAPPEN! - JFK3 - \"+pn);\n\t\t\treturn;\n\t\t}\n\t\tBigInteger computedExponential = ctx.getHMACKey(_hisExponential, Global.DHgroupA);\n\t\tbyte[] Ks = computeJFKSharedKey(computedExponential, nonceInitiator, nonceResponder, \"0\");\n\t\tbyte[] Ke = computeJFKSharedKey(computedExponential, nonceInitiator, nonceResponder, \"1\");\n\t\tbyte[] Ka = computeJFKSharedKey(computedExponential, nonceInitiator, nonceResponder, \"2\");\n\t\tc.initialize(Ke);\n\t\tfinal PCFBMode pk = PCFBMode.create(c);\n\t\tint ivLength = pk.lengthIV();\n\t\tint decypheredPayloadOffset = 0;\n\t\t// We compute the HMAC of (\"I\"+cyphertext) : the cyphertext includes the IV!\n\t\tbyte[] decypheredPayload = new byte[JFK_PREFIX_INITIATOR.length + payload.length - inputOffset];\n\t\tSystem.arraycopy(JFK_PREFIX_INITIATOR, 0, decypheredPayload, decypheredPayloadOffset, JFK_PREFIX_INITIATOR.length);\n\t\tdecypheredPayloadOffset += JFK_PREFIX_INITIATOR.length;\n\t\tSystem.arraycopy(payload, inputOffset, decypheredPayload, decypheredPayloadOffset, decypheredPayload.length-decypheredPayloadOffset);\n\t\tif(!HMAC.verifyWithSHA256(Ka, decypheredPayload, hmac)) {\n\t\t\tLogger.error(this, \"The inner-HMAC doesn't match; let's discard the packet JFK(3) - \"+pn);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Get the IV\n\t\tpk.reset(decypheredPayload, decypheredPayloadOffset);\n\t\tdecypheredPayloadOffset += ivLength;\n\t\t// Decrypt the payload\n\t\tpk.blockDecipher(decypheredPayload, decypheredPayloadOffset, decypheredPayload.length-decypheredPayloadOffset);\n\t\t/*\n\t\t * DecipheredData Format:\n\t\t * Signature-r,s\n\t\t * Node Data (starting with BootID)\n\t\t */\n\t\tbyte[] r = new byte[Node.SIGNATURE_PARAMETER_LENGTH];\n\t\tSystem.arraycopy(decypheredPayload, decypheredPayloadOffset, r, 0, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tdecypheredPayloadOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tbyte[] s = new byte[Node.SIGNATURE_PARAMETER_LENGTH];\n\t\tSystem.arraycopy(decypheredPayload, decypheredPayloadOffset, s, 0, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tdecypheredPayloadOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tbyte[] data = new byte[decypheredPayload.length - decypheredPayloadOffset];\n\t\tSystem.arraycopy(decypheredPayload, decypheredPayloadOffset, data, 0, decypheredPayload.length - decypheredPayloadOffset);\n\t\tlong bootID = Fields.bytesToLong(data);\n\t\tbyte[] hisRef = new byte[data.length -8];\n\t\tSystem.arraycopy(data, 8, hisRef, 0, hisRef.length);\n\t\t\n\t\t// construct the peernode\n\t\tif(unknownInitiator) {\n\t\t\tpn = getPeerNodeFromUnknownInitiator(hisRef, setupType, pn);\n\t\t\tif(pn == null) {\n\t\t\t\t// Reject\n\t\t\t\tLogger.normal(this, \"Rejecting... unable to construct PeerNode\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// verify the signature\n\t\tDSASignature remoteSignature = new DSASignature(new NativeBigInteger(1,r), new NativeBigInteger(1,s)); \n\t\tif(!DSA.verify(pn.peerPubKey, remoteSignature, new NativeBigInteger(1, SHA256.digest(assembleDHParams(nonceInitiator, nonceResponder, _hisExponential, _ourExponential, crypto.myIdentity, data))), false)) {\n\t\t\tLogger.error(this, \"The signature verification has failed!! JFK(3) - \"+pn.getPeer());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// At this point we know it's from the peer, so we can report a packet received.\n\t\tpn.receivedPacket(true);\n\t\t\n\t\t// Send reply\n\t\tsendJFKMessage4(1, 2, 3, nonceInitiator, nonceResponder,initiatorExponential, responderExponential, \n\t\t\t\tc, Ke, Ka, authenticator, hisRef, pn, replyTo, unknownInitiator, setupType);\n\t\t\n\t\tc.initialize(Ks);\n\t\t\n\t\t// Promote if necessary\n\t\tboolean dontWant = false;\n\t\tif(oldOpennetPeer) {\n\t\t\tOpennetManager opennet = node.getOpennet();\n\t\t\tif(opennet == null) {\n\t\t\t\tLogger.normal(this, \"Dumping incoming old-opennet peer as opennet just turned off: \"+pn+\".\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(!opennet.wantPeer(pn, true)) {\n\t\t\t\tLogger.normal(this, \"No longer want peer \"+pn+\" - dumping it after connecting\");\n\t\t\t\tdontWant = true;\n\t\t\t}\n\t\t\t// wantPeer will call node.peers.addPeer(), we don't have to.\n\t\t}\n\t\t\n\t\tif(pn.completedHandshake(bootID, hisRef, 0, hisRef.length, c, Ks, replyTo, true)) {\n\t\t\tif(dontWant)\n\t\t\t\tnode.peers.disconnect(pn, true, false);\n\t\t\telse\n\t\t\t\tpn.maybeSendInitialMessages();\n\t\t} else {\n\t\t\tLogger.error(this, \"Handshake failure! with \"+pn.getPeer());\n\t\t}\n\t\t\n\t\tfinal long t2=System.currentTimeMillis();\n\t\tif((t2-t1)>500)\n\t\t\tLogger.error(this,\"Message3 Processing packet for\"+pn.getPeer()+\" took \"+TimeUtil.formatTime(t2-t1, 3, true));\n\t}","commit_id":"d19b79e9b866ee997d7a1f87c3e8368bf36ba0f0","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Might be an anonymous-initiator negotiation packet (i.e.\n\t * we are the responder).\n\t * Anonymous initiator is used for seednode connections, \n\t * and will in future be used for other things for example\n\t * one-side-only invites, password based invites etc. \n\t * @param buf The buffer to read bytes from\n\t * @param offset The offset at which to start reading\n\t * @param length The number of bytes to read\n\t * @param peer The Peer to send a reply to\n\t * @param now The time at which the packet was received\n\t * @return True if we handled a negotiation packet, false otherwise.\n\t */\n\tprivate boolean tryProcessAuthAnon(byte[] buf, int offset, int length, Peer peer, long now) {\n\t\tBlockCipher authKey = crypto.getAnonSetupCipher();\n\t\t// Does the packet match IV E( H(data) data ) ?\n\t\tPCFBMode pcfb = PCFBMode.create(authKey);\n\t\tint ivLength = pcfb.lengthIV();\n\t\tMessageDigest md = SHA256.getMessageDigest();\n\t\tint digestLength = HASH_LENGTH;\n\t\tif(length < digestLength + ivLength + 5) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Too short: \"+length+\" should be at least \"+(digestLength + ivLength + 5));\n\t\t\tSHA256.returnMessageDigest(md);\n\t\t\treturn false;\n\t\t}\n\t\t// IV at the beginning\n\t\tpcfb.reset(buf, offset);\n\t\t// Then the hash, then the data\n\t\t// => Data starts at ivLength + digestLength\n\t\t// Decrypt the hash\n\t\tbyte[] hash = new byte[digestLength];\n\t\tSystem.arraycopy(buf, offset+ivLength, hash, 0, digestLength);\n\t\tpcfb.blockDecipher(hash, 0, hash.length);\n\n\t\tint dataStart = ivLength + digestLength + offset+2;\n\n\t\tint byte1 = ((pcfb.decipher(buf[dataStart-2])) & 0xff);\n\t\tint byte2 = ((pcfb.decipher(buf[dataStart-1])) & 0xff);\n\t\tint dataLength = (byte1 << 8) + byte2;\n\t\tif(logMINOR) Logger.minor(this, \"Data length: \"+dataLength+\" (1 = \"+byte1+\" 2 = \"+byte2+ ')');\n\t\tif(dataLength > length - (ivLength+hash.length+2)) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Invalid data length \"+dataLength+\" (\"+(length - (ivLength+hash.length+2))+\") in tryProcessAuth\");\n\t\t\tSHA256.returnMessageDigest(md);\n\t\t\treturn false;\n\t\t}\n\t\t// Decrypt the data\n\t\tbyte[] payload = new byte[dataLength];\n\t\tSystem.arraycopy(buf, dataStart, payload, 0, dataLength);\n\t\tpcfb.blockDecipher(payload, 0, payload.length);\n\n\t\tmd.update(payload);\n\t\tbyte[] realHash = md.digest();\n\t\tSHA256.returnMessageDigest(md); md = null;\n\n\t\tif(Arrays.equals(realHash, hash)) {\n\t\t\t// Got one\n\t\t\tprocessDecryptedAuthAnon(payload, peer);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif(logMINOR) Logger.minor(this, \"Incorrect hash in tryProcessAuth for \"+peer+\" (length=\"+dataLength+\"): \\nreal hash=\"+HexUtil.bytesToHex(realHash)+\"\\n bad hash=\"+HexUtil.bytesToHex(hash));\n\t\t\treturn false;\n\t\t}\n\t}","id":39459,"modified_method":"/**\n\t * Might be an anonymous-initiator negotiation packet (i.e.\n\t * we are the responder).\n\t * Anonymous initiator is used for seednode connections, \n\t * and will in future be used for other things for example\n\t * one-side-only invites, password based invites etc. \n\t * @param buf The buffer to read bytes from\n\t * @param offset The offset at which to start reading\n\t * @param length The number of bytes to read\n\t * @param peer The Peer to send a reply to\n\t * @param now The time at which the packet was received\n\t * @return True if we handled a negotiation packet, false otherwise.\n\t */\n\tprivate boolean tryProcessAuthAnon(byte[] buf, int offset, int length, Peer peer, long now) {\n\t\tBlockCipher authKey = crypto.getAnonSetupCipher();\n\t\t// Does the packet match IV E( H(data) data ) ?\n\t\tPCFBMode pcfb = PCFBMode.create(authKey);\n\t\tint ivLength = pcfb.lengthIV();\n\t\tMessageDigest md = SHA256.getMessageDigest();\n\t\tint digestLength = HASH_LENGTH;\n\t\tif(length < digestLength + ivLength + 5) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Too short: \"+length+\" should be at least \"+(digestLength + ivLength + 5));\n\t\t\tSHA256.returnMessageDigest(md);\n\t\t\treturn false;\n\t\t}\n\t\t// IV at the beginning\n\t\tpcfb.reset(buf, offset);\n\t\t// Then the hash, then the data\n\t\t// => Data starts at ivLength + digestLength\n\t\t// Decrypt the hash\n\t\tbyte[] hash = new byte[digestLength];\n\t\tSystem.arraycopy(buf, offset+ivLength, hash, 0, digestLength);\n\t\tpcfb.blockDecipher(hash, 0, hash.length);\n\n\t\tint dataStart = ivLength + digestLength + offset+2;\n\n\t\tint byte1 = ((pcfb.decipher(buf[dataStart-2])) & 0xff);\n\t\tint byte2 = ((pcfb.decipher(buf[dataStart-1])) & 0xff);\n\t\tint dataLength = (byte1 << 8) + byte2;\n\t\tif(logMINOR) Logger.minor(this, \"Data length: \"+dataLength+\" (1 = \"+byte1+\" 2 = \"+byte2+ ')');\n\t\tif(dataLength > length - (ivLength+hash.length+2)) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Invalid data length \"+dataLength+\" (\"+(length - (ivLength+hash.length+2))+\") in tryProcessAuthAnon\");\n\t\t\tSHA256.returnMessageDigest(md);\n\t\t\treturn false;\n\t\t}\n\t\t// Decrypt the data\n\t\tbyte[] payload = new byte[dataLength];\n\t\tSystem.arraycopy(buf, dataStart, payload, 0, dataLength);\n\t\tpcfb.blockDecipher(payload, 0, payload.length);\n\n\t\tmd.update(payload);\n\t\tbyte[] realHash = md.digest();\n\t\tSHA256.returnMessageDigest(md); md = null;\n\n\t\tif(Arrays.equals(realHash, hash)) {\n\t\t\t// Got one\n\t\t\tprocessDecryptedAuthAnon(payload, peer);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif(logMINOR) Logger.minor(this, \"Incorrect hash in tryProcessAuthAnon for \"+peer+\" (length=\"+dataLength+\"): \\nreal hash=\"+HexUtil.bytesToHex(realHash)+\"\\n bad hash=\"+HexUtil.bytesToHex(hash));\n\t\t\treturn false;\n\t\t}\n\t}","commit_id":"d19b79e9b866ee997d7a1f87c3e8368bf36ba0f0","url":"https://github.com/freenet/fred"},{"original_method":"private void sendJFKMessage4(int version,int negType,int phase,byte[] nonceInitiator,byte[] nonceResponder,byte[] initiatorExponential,byte[] responderExponential, BlockCipher c, byte[] Ke, byte[] Ka, byte[] authenticator, byte[] hisRef, PeerNode pn, Peer replyTo, boolean unknownInitiator, int setupType, boolean bothNoderefs)\n\t{\n\t\tif(logMINOR)\n\t\t\tLogger.minor(this, \"Sending a JFK(4) message to \"+pn.getPeer());\n\t\tlong t1=System.currentTimeMillis();\n\t\tNativeBigInteger _responderExponential = new NativeBigInteger(1,responderExponential);\n\t\tNativeBigInteger _initiatorExponential = new NativeBigInteger(1,initiatorExponential);\n\t\t\n\t\tbyte[] myRef = crypto.myCompressedSetupRef();\n\t\tbyte[] data = new byte[8 + myRef.length + hisRef.length];\n\t\tSystem.arraycopy(Fields.longToBytes(node.bootID), 0, data, 0, 8);\n\t\tSystem.arraycopy(myRef, 0, data, 8, myRef.length);\n\t\tSystem.arraycopy(hisRef, 0, data, 8 + myRef.length, hisRef.length);\n\t\t\n\t\tbyte[] messageHash = SHA256.digest(assembleDHParams(nonceInitiator, nonceResponder, _initiatorExponential, _responderExponential, pn.identity, data));\n\t\tif(logMINOR)\n\t\t\tLogger.minor(this, \"Message hash: \"+HexUtil.bytesToHex(messageHash));\n\t\tDSASignature localSignature = crypto.sign(messageHash);\n\t\tbyte[] r = localSignature.getRBytes(Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tbyte[] s = localSignature.getSBytes(Node.SIGNATURE_PARAMETER_LENGTH);\n\t\t\n\t\tPCFBMode pk=PCFBMode.create(c);\n\t\tint ivLength = pk.lengthIV();\n\t\tbyte[] iv=new byte[ivLength];\n\t\tnode.random.nextBytes(iv);\n\t\tpk.reset(iv);\n\t\t// If !bothNoderefs, then don't include the last bit\n\t\tint dataLength = data.length - (bothNoderefs ? 0 : hisRef.length);\n\t\tbyte[] cyphertext = new byte[JFK_PREFIX_RESPONDER.length + ivLength + Node.SIGNATURE_PARAMETER_LENGTH * 2 +\n\t\t                             dataLength];\n\t\tint cleartextOffset = 0;\n\t\tSystem.arraycopy(JFK_PREFIX_RESPONDER, 0, cyphertext, cleartextOffset, JFK_PREFIX_RESPONDER.length);\n\t\tcleartextOffset += JFK_PREFIX_RESPONDER.length;\n\t\tSystem.arraycopy(iv, 0, cyphertext, cleartextOffset, ivLength);\n\t\tcleartextOffset += ivLength;\n\t\tSystem.arraycopy(r, 0, cyphertext, cleartextOffset, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tcleartextOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tSystem.arraycopy(s, 0, cyphertext, cleartextOffset, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tcleartextOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tSystem.arraycopy(data, 0, cyphertext, cleartextOffset, dataLength);\n\t\tcleartextOffset += dataLength;\n\t\t// Now encrypt the cleartext[Signature]\n\t\tint cleartextToEncypherOffset = JFK_PREFIX_RESPONDER.length + ivLength;\n\t\tpk.blockEncipher(cyphertext, cleartextToEncypherOffset, cyphertext.length - cleartextToEncypherOffset);\n\t\t\n\t\t// We compute the HMAC of (prefix + iv + signature)\n\t\tbyte[] hmac = HMAC.macWithSHA256(Ka, cyphertext, HASH_LENGTH);\n\t\t\n\t\t// Message4 = hmac + IV + encryptedSignature\n\t\tbyte[] message4 = new byte[HASH_LENGTH + ivLength + (cyphertext.length - cleartextToEncypherOffset)]; \n\t\tint offset = 0;\n\t\tSystem.arraycopy(hmac, 0, message4, offset, HASH_LENGTH);\n\t\toffset += HASH_LENGTH;\n\t\tSystem.arraycopy(iv, 0, message4, offset, ivLength);\n\t\toffset += ivLength;\n\t\tSystem.arraycopy(cyphertext, cleartextToEncypherOffset, message4, offset, cyphertext.length - cleartextToEncypherOffset);\n\t\t\n\t\t// cache the message\n\t\tsynchronized (authenticatorCache) {\n\t\t\tif(!maybeResetTransientKey())\n\t\t\t\tauthenticatorCache.put(authenticator, message4);\n\t\t}\n\t\t\n\t\tif(unknownInitiator)\n\t\t\tsendAnonAuthPacket(1, 2, 3, setupType, message4, pn, replyTo, crypto.anonSetupCipher);\n\t\telse\n\t\t\tsendAuthPacket(1, 2, 3, message4, pn, replyTo);\n\t\tlong t2=System.currentTimeMillis();\n\t\tif((t2-t1)>500)\n\t\t\tLogger.error(this,\"Message4 timeout error:Sending packet for\"+pn.getPeer());\n\t}","id":39460,"modified_method":"private void sendJFKMessage4(int version,int negType,int phase,byte[] nonceInitiator,byte[] nonceResponder,byte[] initiatorExponential,byte[] responderExponential, BlockCipher c, byte[] Ke, byte[] Ka, byte[] authenticator, byte[] hisRef, PeerNode pn, Peer replyTo, boolean unknownInitiator, int setupType)\n\t{\n\t\tif(logMINOR)\n\t\t\tLogger.minor(this, \"Sending a JFK(4) message to \"+pn.getPeer());\n\t\tlong t1=System.currentTimeMillis();\n\t\tNativeBigInteger _responderExponential = new NativeBigInteger(1,responderExponential);\n\t\tNativeBigInteger _initiatorExponential = new NativeBigInteger(1,initiatorExponential);\n\t\t\n\t\tbyte[] myRef = crypto.myCompressedSetupRef();\n\t\tbyte[] data = new byte[8 + myRef.length + hisRef.length];\n\t\tSystem.arraycopy(Fields.longToBytes(node.bootID), 0, data, 0, 8);\n\t\tSystem.arraycopy(myRef, 0, data, 8, myRef.length);\n\t\tSystem.arraycopy(hisRef, 0, data, 8 + myRef.length, hisRef.length);\n\t\t\n\t\tbyte[] params = assembleDHParams(nonceInitiator, nonceResponder, _initiatorExponential, _responderExponential, pn.identity, data);\n\t\tbyte[] messageHash = SHA256.digest(params);\n\t\tif(logMINOR)\n\t\t\tLogger.minor(this, \"Message hash: \"+HexUtil.bytesToHex(messageHash)+\" length \"+params.length+\" myRef: \"+myRef.length+\" hash \"+Fields.hashCode(myRef)+\" hisRef: \"+hisRef.length+\" hash \"+Fields.hashCode(hisRef)+\" boot ID \"+node.bootID);\n\t\tDSASignature localSignature = crypto.sign(messageHash);\n\t\tbyte[] r = localSignature.getRBytes(Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tbyte[] s = localSignature.getSBytes(Node.SIGNATURE_PARAMETER_LENGTH);\n\t\t\n\t\tPCFBMode pk=PCFBMode.create(c);\n\t\tint ivLength = pk.lengthIV();\n\t\tbyte[] iv=new byte[ivLength];\n\t\tnode.random.nextBytes(iv);\n\t\tpk.reset(iv);\n\t\t// Don't include the last bit\n\t\tint dataLength = data.length - hisRef.length;\n\t\tbyte[] cyphertext = new byte[JFK_PREFIX_RESPONDER.length + ivLength + Node.SIGNATURE_PARAMETER_LENGTH * 2 +\n\t\t                             dataLength];\n\t\tint cleartextOffset = 0;\n\t\tSystem.arraycopy(JFK_PREFIX_RESPONDER, 0, cyphertext, cleartextOffset, JFK_PREFIX_RESPONDER.length);\n\t\tcleartextOffset += JFK_PREFIX_RESPONDER.length;\n\t\tSystem.arraycopy(iv, 0, cyphertext, cleartextOffset, ivLength);\n\t\tcleartextOffset += ivLength;\n\t\tSystem.arraycopy(r, 0, cyphertext, cleartextOffset, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tcleartextOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tSystem.arraycopy(s, 0, cyphertext, cleartextOffset, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tcleartextOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tSystem.arraycopy(data, 0, cyphertext, cleartextOffset, dataLength);\n\t\tcleartextOffset += dataLength;\n\t\t// Now encrypt the cleartext[Signature]\n\t\tint cleartextToEncypherOffset = JFK_PREFIX_RESPONDER.length + ivLength;\n\t\tpk.blockEncipher(cyphertext, cleartextToEncypherOffset, cyphertext.length - cleartextToEncypherOffset);\n\t\t\n\t\t// We compute the HMAC of (prefix + iv + signature)\n\t\tbyte[] hmac = HMAC.macWithSHA256(Ka, cyphertext, HASH_LENGTH);\n\t\t\n\t\t// Message4 = hmac + IV + encryptedSignature\n\t\tbyte[] message4 = new byte[HASH_LENGTH + ivLength + (cyphertext.length - cleartextToEncypherOffset)]; \n\t\tint offset = 0;\n\t\tSystem.arraycopy(hmac, 0, message4, offset, HASH_LENGTH);\n\t\toffset += HASH_LENGTH;\n\t\tSystem.arraycopy(iv, 0, message4, offset, ivLength);\n\t\toffset += ivLength;\n\t\tSystem.arraycopy(cyphertext, cleartextToEncypherOffset, message4, offset, cyphertext.length - cleartextToEncypherOffset);\n\t\t\n\t\t// cache the message\n\t\tsynchronized (authenticatorCache) {\n\t\t\tif(!maybeResetTransientKey())\n\t\t\t\tauthenticatorCache.put(authenticator, message4);\n\t\t}\n\t\t\n\t\tif(unknownInitiator)\n\t\t\tsendAnonAuthPacket(1, 2, 3, setupType, message4, pn, replyTo, crypto.anonSetupCipher);\n\t\telse\n\t\t\tsendAuthPacket(1, 2, 3, message4, pn, replyTo);\n\t\tlong t2=System.currentTimeMillis();\n\t\tif((t2-t1)>500)\n\t\t\tLogger.error(this,\"Message4 timeout error:Sending packet for\"+pn.getPeer());\n\t}","commit_id":"d19b79e9b866ee997d7a1f87c3e8368bf36ba0f0","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Process a decrypted, authenticated auth packet.\n\t * @param payload The packet payload, after it has been decrypted.\n\t */\n\tprivate void processDecryptedAuth(byte[] payload, PeerNode pn, Peer replyTo, boolean oldOpennetPeer) {\n\t\tif(logMINOR) Logger.minor(this, \"Processing decrypted auth packet from \"+replyTo+\" for \"+pn);\n\t\tif(pn.isDisabled()) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Won't connect to a disabled peer (\"+pn+ ')');\n\t\t\treturn;  // We don't connect to disabled peers\n\t\t}\n\n\t\tint negType = payload[1];\n\t\tint packetType = payload[2];\n\t\tint version = payload[0];\n\n\t\tif(logMINOR) {\n\t\t\tlong now = System.currentTimeMillis();\n\t\t\tlong last = pn.lastSentPacketTime();\n\t\t\tString delta = \"never\";\n\t\t\tif (last>0)\n\t\t\t\tdelta = TimeUtil.formatTime(now-last, 2, true)+\" ago\";\n\t\t\tLogger.minor(this, \"Received auth packet for \"+pn.getPeer()+\" (phase=\"+packetType+\", v=\"+version+\", nt=\"+negType+\") (last packet sent \"+delta+\") from \"+replyTo+\"\");\n\t\t}\n\n\t\t/* Format:\n\t\t * 1 byte - version number (1)\n\t\t * 1 byte - negotiation type (0 = simple DH, will not be supported when implement JFKi || 1 = StS)\n\t\t * 1 byte - packet type (0-3)\n\t\t */\n\t\tif(version != 1) {\n\t\t\tLogger.error(this, \"Decrypted auth packet but invalid version: \"+version);\n\t\t\treturn;\n\t\t}\n\n\t\tif(negType == 0) {\n\t\t\tLogger.error(this, \"Old ephemeral Diffie-Hellman (negType 0) not supported.\");\n\t\t\treturn;\n\t\t} else if (negType == 1) {\n\t\t\tLogger.error(this, \"Old StationToStation (negType 1) not supported.\");\n\t\t\treturn;\n\t\t} else if (negType==2){\n\t\t\t/*\n\t\t\t * We implement Just Fast Keying key management protocol with active identity protection\n\t\t\t * for the initiator and no identity protection for the responder\n\t\t\t * M1:\n\t\t\t * This is a straightforward DiffieHellman exponential.\n\t\t\t * The Initiator Nonce serves two purposes;it allows the initiator to use the same\n\t\t\t * exponentials during different sessions while ensuring that the resulting session\n\t\t\t * key will be different,can be used to differentiate between parallel sessions \n\t\t\t * M2:\n\t\t\t * Responder replies with a signed copy of his own exponential, a random nonce and \n\t\t\t * an authenticator which provides sufficient defense against forgeries,replays\n\t\t\t * We slightly deviate JFK here;we do not send any public key information as specified in the JFK docs \n\t\t\t * M3:\n\t\t\t * Initiator echoes the data sent by the responder including the authenticator. \n\t\t\t * This helps the responder verify the authenticity of the returned data. \n\t\t\t * M4:\n\t\t\t * Encrypted message of the signature on both nonces, both exponentials using the same keys as in the previous message\n\t\t\t */ \n\t\t\tif(packetType<0 || packetType>3){\n\t\t\t\tLogger.error(this,\"Unknown PacketType\" + packetType + \"from\" + replyTo + \"from\" +pn); \n\t\t\t\treturn ;\n\t\t\t}\n\t\t\telse if(packetType==0){\n\t\t\t\t/*\n\t\t\t\t * Initiator- This is a straightforward DiffieHellman exponential.\n\t\t\t\t * The Initiator Nonce serves two purposes;it allows the initiator to use the same\n\t\t\t\t * exponentials during different sessions while ensuring that the resulting\n\t\t\t\t * session key will be different,can be used to differentiate between\n\t\t\t\t * parallel sessions\n\t\t\t\t */\n\t\t\t\tprocessJFKMessage1(payload,3,pn,replyTo,false,-1);\n\n\t\t\t}\n\t\t\telse if(packetType==1){\n\t\t\t\t/*\n\t\t\t\t * Responder replies with a signed copy of his own exponential, a random\n\t\t\t\t * nonce and an authenticator calculated from a transient hash key private\n\t\t\t\t * to the responder.\n\t\t\t\t */\n\t\t\t\tprocessJFKMessage2(payload,3,pn,replyTo,false,-1);\n\t\t\t}\n\t\t\telse if(packetType==2){\n\t\t\t\t/*\n\t\t\t\t * Initiator echoes the data sent by the responder.These messages are\n\t\t\t\t * cached by the Responder.Receiving a duplicate message simply causes\n\t\t\t\t * the responder to Re-transmit the corresponding message4\n\t\t\t\t */\n\t\t\t\tprocessJFKMessage3(payload, 3, pn, replyTo, oldOpennetPeer, false, -1);\n\t\t\t}\n\t\t\telse if(packetType==3){\n\t\t\t\t/*\n\t\t\t\t * Encrypted message of the signature on both nonces, both exponentials \n\t\t\t\t * using the same keys as in the previous message.\n\t\t\t\t * The signature is non-message recovering\n\t\t\t\t */\n\t\t\t\tprocessJFKMessage4(payload, 3, pn, replyTo, oldOpennetPeer, false, -1);\n\t\t\t}\n\t\t} else {\n\t\t\tLogger.error(this, \"Decrypted auth packet but unknown negotiation type \"+negType+\" from \"+replyTo+\" possibly from \"+pn);\n\t\t\treturn;\n\t\t}\n\t}","id":39461,"modified_method":"/**\n\t * Process a decrypted, authenticated auth packet.\n\t * @param payload The packet payload, after it has been decrypted.\n\t */\n\tprivate void processDecryptedAuth(byte[] payload, PeerNode pn, Peer replyTo, boolean oldOpennetPeer) {\n\t\tif(logMINOR) Logger.minor(this, \"Processing decrypted auth packet from \"+replyTo+\" for \"+pn);\n\t\tif(pn.isDisabled()) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Won't connect to a disabled peer (\"+pn+ ')');\n\t\t\treturn;  // We don't connect to disabled peers\n\t\t}\n\n\t\tint negType = payload[1];\n\t\tint packetType = payload[2];\n\t\tint version = payload[0];\n\n\t\tif(logMINOR) {\n\t\t\tlong now = System.currentTimeMillis();\n\t\t\tlong last = pn.lastSentPacketTime();\n\t\t\tString delta = \"never\";\n\t\t\tif (last>0)\n\t\t\t\tdelta = TimeUtil.formatTime(now-last, 2, true)+\" ago\";\n\t\t\tLogger.minor(this, \"Received auth packet for \"+pn.getPeer()+\" (phase=\"+packetType+\", v=\"+version+\", nt=\"+negType+\") (last packet sent \"+delta+\") from \"+replyTo+\"\");\n\t\t}\n\n\t\t/* Format:\n\t\t * 1 byte - version number (1)\n\t\t * 1 byte - negotiation type (0 = simple DH, will not be supported when implement JFKi || 1 = StS)\n\t\t * 1 byte - packet type (0-3)\n\t\t */\n\t\tif(version != 1) {\n\t\t\tLogger.error(this, \"Decrypted auth packet but invalid version: \"+version);\n\t\t\treturn;\n\t\t}\n\n\t\tif(negType == 0) {\n\t\t\tLogger.error(this, \"Old ephemeral Diffie-Hellman (negType 0) not supported.\");\n\t\t\treturn;\n\t\t} else if (negType == 1) {\n\t\t\tLogger.error(this, \"Old StationToStation (negType 1) not supported.\");\n\t\t\treturn;\n\t\t} else if (negType==2){\n\t\t\t/*\n\t\t\t * We implement Just Fast Keying key management protocol with active identity protection\n\t\t\t * for the initiator and no identity protection for the responder\n\t\t\t * M1:\n\t\t\t * This is a straightforward DiffieHellman exponential.\n\t\t\t * The Initiator Nonce serves two purposes;it allows the initiator to use the same\n\t\t\t * exponentials during different sessions while ensuring that the resulting session\n\t\t\t * key will be different,can be used to differentiate between parallel sessions \n\t\t\t * M2:\n\t\t\t * Responder replies with a signed copy of his own exponential, a random nonce and \n\t\t\t * an authenticator which provides sufficient defense against forgeries,replays\n\t\t\t * We slightly deviate JFK here;we do not send any public key information as specified in the JFK docs \n\t\t\t * M3:\n\t\t\t * Initiator echoes the data sent by the responder including the authenticator. \n\t\t\t * This helps the responder verify the authenticity of the returned data. \n\t\t\t * M4:\n\t\t\t * Encrypted message of the signature on both nonces, both exponentials using the same keys as in the previous message\n\t\t\t */ \n\t\t\tif(packetType<0 || packetType>3){\n\t\t\t\tLogger.error(this,\"Unknown PacketType\" + packetType + \"from\" + replyTo + \"from\" +pn); \n\t\t\t\treturn ;\n\t\t\t}\n\t\t\telse if(packetType==0){\n\t\t\t\t/*\n\t\t\t\t * Initiator- This is a straightforward DiffieHellman exponential.\n\t\t\t\t * The Initiator Nonce serves two purposes;it allows the initiator to use the same\n\t\t\t\t * exponentials during different sessions while ensuring that the resulting\n\t\t\t\t * session key will be different,can be used to differentiate between\n\t\t\t\t * parallel sessions\n\t\t\t\t */\n\t\t\t\tprocessJFKMessage1(payload,3,pn,replyTo,false,-1);\n\n\t\t\t}\n\t\t\telse if(packetType==1){\n\t\t\t\t/*\n\t\t\t\t * Responder replies with a signed copy of his own exponential, a random\n\t\t\t\t * nonce and an authenticator calculated from a transient hash key private\n\t\t\t\t * to the responder.\n\t\t\t\t */\n\t\t\t\tprocessJFKMessage2(payload,3,pn,replyTo,false,-1);\n\t\t\t}\n\t\t\telse if(packetType==2){\n\t\t\t\t/*\n\t\t\t\t * Initiator echoes the data sent by the responder.These messages are\n\t\t\t\t * cached by the Responder.Receiving a duplicate message simply causes\n\t\t\t\t * the responder to Re-transmit the corresponding message4\n\t\t\t\t */\n\t\t\t\tprocessJFKMessage3(payload, 3, pn, replyTo, oldOpennetPeer, false, -1);\n\t\t\t}\n\t\t\telse if(packetType==3){\n\t\t\t\t/*\n\t\t\t\t * Encrypted message of the signature on both nonces, both exponentials \n\t\t\t\t * using the same keys as in the previous message.\n\t\t\t\t * The signature is non-message recovering\n\t\t\t\t */\n\t\t\t\tif(!processJFKMessage4(payload, 3, pn, replyTo, oldOpennetPeer, false, -1, true))\n\t\t\t\t\tprocessJFKMessage4(payload, 3, pn, replyTo, oldOpennetPeer, false, -1, false);\n\t\t\t}\n\t\t} else {\n\t\t\tLogger.error(this, \"Decrypted auth packet but unknown negotiation type \"+negType+\" from \"+replyTo+\" possibly from \"+pn);\n\t\t\treturn;\n\t\t}\n\t}","commit_id":"d19b79e9b866ee997d7a1f87c3e8368bf36ba0f0","url":"https://github.com/freenet/fred"},{"original_method":"private void processDecryptedAuthAnonReply(byte[] payload, Peer replyTo, PeerNode pn) {\n\t\tif(logMINOR) Logger.minor(this, \"Processing decrypted auth packet from \"+replyTo+\" for \"+pn+\" length \"+payload.length);\n\t\t\n\t\t/** Protocol version. Should be 1. */\n\t\tint version = payload[0];\n\t\t/** Negotiation type. 2 = JFK. Other types might indicate other DH variants, \n\t\t * or even non-DH-based algorithms such as password based key setup. */\n\t\tint negType = payload[1];\n\t\t/** Packet phase. */\n\t\tint packetType = payload[2];\n\t\t/** Setup type. See above. */\n\t\tint setupType = payload[3];\n\t\t\n\t\tif(logMINOR) Logger.minor(this, \"Received anonymous auth packet (phase=\"+packetType+\", v=\"+version+\", nt=\"+negType+\", setup type=\"+setupType+\") from \"+replyTo+\"\");\n\t\t\n\t\tif(version != 1) {\n\t\t\tLogger.error(this, \"Decrypted auth packet but invalid version: \"+version);\n\t\t\treturn;\n\t\t}\n\t\tif(negType != 2) {\n\t\t\tLogger.error(this, \"Unknown neg type: \"+negType);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Known setup types\n\t\tif(setupType != SETUP_OPENNET_SEEDNODE) {\n\t\t\tLogger.error(this, \"Unknown setup type \"+negType);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// We are the INITIATOR.\n\t\t// Therefore, we can only get packets of phase 2 and 4 here.\n\t\t\n\t\tif(packetType == 1) {\n\t\t\t// Phase 2\n\t\t\tprocessJFKMessage2(payload, 4, pn, replyTo, true, setupType);\n\t\t} else if(packetType == 3) {\n\t\t\t// Phase 4\n\t\t\tprocessJFKMessage4(payload, 4, pn, replyTo, false, true, setupType);\n\t\t} else {\n\t\t\tLogger.error(this, \"Invalid phase \"+packetType+\" for anonymous-initiator (we are the responder)\");\n\t\t}\n\t}","id":39462,"modified_method":"private void processDecryptedAuthAnonReply(byte[] payload, Peer replyTo, PeerNode pn) {\n\t\tif(logMINOR) Logger.minor(this, \"Processing decrypted auth packet from \"+replyTo+\" for \"+pn+\" length \"+payload.length);\n\t\t\n\t\t/** Protocol version. Should be 1. */\n\t\tint version = payload[0];\n\t\t/** Negotiation type. 2 = JFK. Other types might indicate other DH variants, \n\t\t * or even non-DH-based algorithms such as password based key setup. */\n\t\tint negType = payload[1];\n\t\t/** Packet phase. */\n\t\tint packetType = payload[2];\n\t\t/** Setup type. See above. */\n\t\tint setupType = payload[3];\n\t\t\n\t\tif(logMINOR) Logger.minor(this, \"Received anonymous auth packet (phase=\"+packetType+\", v=\"+version+\", nt=\"+negType+\", setup type=\"+setupType+\") from \"+replyTo+\"\");\n\t\t\n\t\tif(version != 1) {\n\t\t\tLogger.error(this, \"Decrypted auth packet but invalid version: \"+version);\n\t\t\treturn;\n\t\t}\n\t\tif(negType != 2) {\n\t\t\tLogger.error(this, \"Unknown neg type: \"+negType);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Known setup types\n\t\tif(setupType != SETUP_OPENNET_SEEDNODE) {\n\t\t\tLogger.error(this, \"Unknown setup type \"+negType);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// We are the INITIATOR.\n\t\t// Therefore, we can only get packets of phase 2 and 4 here.\n\t\t\n\t\tif(packetType == 1) {\n\t\t\t// Phase 2\n\t\t\tprocessJFKMessage2(payload, 4, pn, replyTo, true, setupType);\n\t\t} else if(packetType == 3) {\n\t\t\t// Phase 4\n\t\t\tif(!processJFKMessage4(payload, 4, pn, replyTo, false, true, setupType, true))\n\t\t\t\tprocessJFKMessage4(payload, 4, pn, replyTo, false, true, setupType, false);\n\t\t} else {\n\t\t\tLogger.error(this, \"Invalid phase \"+packetType+\" for anonymous-initiator (we are the responder)\");\n\t\t}\n\t}","commit_id":"d19b79e9b866ee997d7a1f87c3e8368bf36ba0f0","url":"https://github.com/freenet/fred"},{"original_method":"private void processJFKMessage2(byte[] payload,int inputOffset,PeerNode pn,Peer replyTo, boolean unknownInitiator, int setupType)\n\t{\n\t\tlong t1=System.currentTimeMillis();\n\t\tif(logMINOR) Logger.minor(this, \"Got a JFK(2) message, processing it - \"+pn.getPeer());\n\t\t// FIXME: follow the spec and send IDr' ?\n\t\tint expectedLength = NONCE_SIZE*2 + DiffieHellman.modulusLengthInBytes() + HASH_LENGTH*2;\n\t\tif(payload.length < expectedLength + 3) {\n\t\t\tLogger.error(this, \"Packet too short from \"+pn.getPeer()+\": \"+payload.length+\" after decryption in JFK(2), should be \"+(expectedLength + 3));\n\t\t\treturn;\n\t\t}\n\n\t\tbyte[] nonceInitiator = new byte[NONCE_SIZE];\n\t\tSystem.arraycopy(payload, inputOffset, nonceInitiator, 0, NONCE_SIZE);\n\t\tinputOffset += NONCE_SIZE;\n\t\tbyte[] nonceResponder = new byte[NONCE_SIZE];\n\t\tSystem.arraycopy(payload, inputOffset, nonceResponder, 0, NONCE_SIZE);\n\t\tinputOffset += NONCE_SIZE;\n\n\t\tbyte[] hisExponential = new byte[DiffieHellman.modulusLengthInBytes()];\n\t\tSystem.arraycopy(payload, inputOffset, hisExponential, 0, DiffieHellman.modulusLengthInBytes());\n\t\tinputOffset += DiffieHellman.modulusLengthInBytes();\n\t\tNativeBigInteger _hisExponential = new NativeBigInteger(1,hisExponential);\n\n\t\tbyte[] r = new byte[Node.SIGNATURE_PARAMETER_LENGTH];\n\t\tSystem.arraycopy(payload, inputOffset, r, 0, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tinputOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tbyte[] s = new byte[Node.SIGNATURE_PARAMETER_LENGTH];\n\t\tSystem.arraycopy(payload, inputOffset, s, 0, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tinputOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\n\t\tbyte[] authenticator = new byte[HASH_LENGTH];\n\t\tSystem.arraycopy(payload, inputOffset, authenticator, 0, HASH_LENGTH);\n\t\tinputOffset += HASH_LENGTH;\n\t\t\n\t\t// Check try to find the authenticator in the cache.\n\t\t// If authenticator is already present, indicates duplicate/replayed message2\n\t\t// Now simply transmit the corresponding message3\n\t\tObject message3 = null;\n\t\tsynchronized (authenticatorCache) {\n\t\t\tmessage3 = authenticatorCache.get(new ByteArrayWrapper(authenticator));\n\t\t}\n\t\tif(message3 != null) {\n\t\t\tLogger.normal(this, \"We replayed a message from the cache (shouldn't happen often) - \"+pn.getPeer());\n\t\t\tsendAuthPacket(1, 2, 3, (byte[]) message3, pn, replyTo);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// sanity check\n\t\tbyte[] myNi;\n\t\tsynchronized (pn) {\n\t\t\tmyNi = (byte[]) pn.jfkNoncesSent.get(replyTo);\n\t\t}\n\t\t// We don't except such a message;\n\t\tif(myNi == null) {\n\t\t\tif(shouldLogErrorInHandshake(t1))\n\t\t\t\tLogger.normal(this, \"We received an unexpected JFK(2) message from \"+pn.getPeer());\n\t\t\treturn;\n\t\t} else if(!Arrays.equals(myNi, nonceInitiator)){\n\t\t\tif(logMINOR)\n\t\t\t\tLogger.minor(this, \"Ignoring old JFK(2) (different nonce to the one we sent - either a timing artefact or an attempt to change the nonce)\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(!DiffieHellman.checkDHExponentialValidity(this.getClass(), _hisExponential)) {\n\t\t\tLogger.error(this, \"We can't accept the exponential \"+pn.getPeer()+\" sent us!! REDFLAG: IT CAN'T HAPPEN UNLESS AGAINST AN ACTIVE ATTACKER!!\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Verify the DSA signature\n\t\tDSASignature remoteSignature = new DSASignature(new NativeBigInteger(1,r), new NativeBigInteger(1,s));\n\t\t// At that point we don't know if it's \"him\"; let's check it out\n\t\tbyte[] locallyExpectedExponentials = assembleDHParams(_hisExponential, pn.peerCryptoGroup);\n\n\t\tif(!DSA.verify(pn.peerPubKey, remoteSignature, new NativeBigInteger(1, SHA256.digest(locallyExpectedExponentials)), false)) {\n\t\t\tLogger.error(this, \"The signature verification has failed in JFK(2)!! \"+pn.getPeer());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// At this point we know it's from the peer, so we can report a packet received.\n\t\tpn.receivedPacket(true);\n\t\t\n\t\tsendJFKMessage3(1, 2, 3, nonceInitiator, nonceResponder, hisExponential, authenticator, pn, replyTo, unknownInitiator, setupType);\n\n\t\tlong t2=System.currentTimeMillis();\n\t\tif((t2-t1)>500)\n\t\t\tLogger.error(this,\"Message2 timeout error:Processing packet for\"+pn.getPeer());\n\t}","id":39463,"modified_method":"private void processJFKMessage2(byte[] payload,int inputOffset,PeerNode pn,Peer replyTo, boolean unknownInitiator, int setupType)\n\t{\n\t\tlong t1=System.currentTimeMillis();\n\t\tif(logMINOR) Logger.minor(this, \"Got a JFK(2) message, processing it - \"+pn.getPeer());\n\t\t// FIXME: follow the spec and send IDr' ?\n\t\tint expectedLength = NONCE_SIZE*2 + DiffieHellman.modulusLengthInBytes() + HASH_LENGTH*2;\n\t\tif(payload.length < expectedLength + 3) {\n\t\t\tLogger.error(this, \"Packet too short from \"+pn.getPeer()+\": \"+payload.length+\" after decryption in JFK(2), should be \"+(expectedLength + 3));\n\t\t\treturn;\n\t\t}\n\n\t\tbyte[] nonceInitiator = new byte[NONCE_SIZE];\n\t\tSystem.arraycopy(payload, inputOffset, nonceInitiator, 0, NONCE_SIZE);\n\t\tinputOffset += NONCE_SIZE;\n\t\tbyte[] nonceResponder = new byte[NONCE_SIZE];\n\t\tSystem.arraycopy(payload, inputOffset, nonceResponder, 0, NONCE_SIZE);\n\t\tinputOffset += NONCE_SIZE;\n\n\t\tbyte[] hisExponential = new byte[DiffieHellman.modulusLengthInBytes()];\n\t\tSystem.arraycopy(payload, inputOffset, hisExponential, 0, DiffieHellman.modulusLengthInBytes());\n\t\tinputOffset += DiffieHellman.modulusLengthInBytes();\n\t\tNativeBigInteger _hisExponential = new NativeBigInteger(1,hisExponential);\n\n\t\tbyte[] r = new byte[Node.SIGNATURE_PARAMETER_LENGTH];\n\t\tSystem.arraycopy(payload, inputOffset, r, 0, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tinputOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\t\tbyte[] s = new byte[Node.SIGNATURE_PARAMETER_LENGTH];\n\t\tSystem.arraycopy(payload, inputOffset, s, 0, Node.SIGNATURE_PARAMETER_LENGTH);\n\t\tinputOffset += Node.SIGNATURE_PARAMETER_LENGTH;\n\n\t\tbyte[] authenticator = new byte[HASH_LENGTH];\n\t\tSystem.arraycopy(payload, inputOffset, authenticator, 0, HASH_LENGTH);\n\t\tinputOffset += HASH_LENGTH;\n\t\t\n\t\t// Check try to find the authenticator in the cache.\n\t\t// If authenticator is already present, indicates duplicate/replayed message2\n\t\t// Now simply transmit the corresponding message3\n\t\tObject message3 = null;\n\t\tsynchronized (authenticatorCache) {\n\t\t\tmessage3 = authenticatorCache.get(new ByteArrayWrapper(authenticator));\n\t\t}\n\t\tif(message3 != null) {\n\t\t\tLogger.normal(this, \"We replayed a message from the cache (shouldn't happen often) - \"+pn.getPeer());\n\t\t\tsendAuthPacket(1, 2, 3, (byte[]) message3, pn, replyTo);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// sanity check\n\t\tbyte[] myNi;\n\t\tsynchronized (pn) {\n\t\t\tmyNi = (byte[]) pn.jfkNoncesSent.get(replyTo);\n\t\t}\n\t\t// We don't except such a message;\n\t\tif(myNi == null) {\n\t\t\tif(shouldLogErrorInHandshake(t1))\n\t\t\t\tLogger.normal(this, \"We received an unexpected JFK(2) message from \"+pn.getPeer()+\" (time since added: \"+pn.timeSinceAddedOrRestarted()+\" time last receive:\"+pn.lastReceivedPacketTime()+')');\n\t\t\treturn;\n\t\t} else if(!Arrays.equals(myNi, nonceInitiator)){\n\t\t\tif(logMINOR)\n\t\t\t\tLogger.minor(this, \"Ignoring old JFK(2) (different nonce to the one we sent - either a timing artefact or an attempt to change the nonce)\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(!DiffieHellman.checkDHExponentialValidity(this.getClass(), _hisExponential)) {\n\t\t\tLogger.error(this, \"We can't accept the exponential \"+pn.getPeer()+\" sent us!! REDFLAG: IT CAN'T HAPPEN UNLESS AGAINST AN ACTIVE ATTACKER!!\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Verify the DSA signature\n\t\tDSASignature remoteSignature = new DSASignature(new NativeBigInteger(1,r), new NativeBigInteger(1,s));\n\t\t// At that point we don't know if it's \"him\"; let's check it out\n\t\tbyte[] locallyExpectedExponentials = assembleDHParams(_hisExponential, pn.peerCryptoGroup);\n\n\t\tif(!DSA.verify(pn.peerPubKey, remoteSignature, new NativeBigInteger(1, SHA256.digest(locallyExpectedExponentials)), false)) {\n\t\t\tLogger.error(this, \"The signature verification has failed in JFK(2)!! \"+pn.getPeer());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// At this point we know it's from the peer, so we can report a packet received.\n\t\tpn.receivedPacket(true);\n\t\t\n\t\tsendJFKMessage3(1, 2, 3, nonceInitiator, nonceResponder, hisExponential, authenticator, pn, replyTo, unknownInitiator, setupType);\n\n\t\tlong t2=System.currentTimeMillis();\n\t\tif((t2-t1)>500)\n\t\t\tLogger.error(this,\"Message2 timeout error:Processing packet for\"+pn.getPeer());\n\t}","commit_id":"336af34cb22d76aeb5a7111d002dc377002d9ee7","url":"https://github.com/freenet/fred"},{"original_method":"/**\n     * Place peers into the correct tier, as well as expand/contract and even drop profiles\n     * according to whatever limits are in place.  Peer profiles are not coallesced during\n     * this method, but the averages are recalculated.\n     *\n     */\n    public void reorganize() {\n        synchronized (_reorganizeLock) {\n            Set allPeers = new HashSet(_failingPeers.size() + _notFailingPeers.size() + _reliablePeers.size() + _fastAndReliablePeers.size());\n            allPeers.addAll(_failingPeers.values());\n            allPeers.addAll(_notFailingPeers.values());\n            allPeers.addAll(_reliablePeers.values());\n            allPeers.addAll(_fastAndReliablePeers.values());\n            \n            _failingPeers.clear();\n            _notFailingPeers.clear();\n            _reliablePeers.clear();\n            _fastAndReliablePeers.clear();\n    \n            Set reordered = new TreeSet(InverseReliabilityComparator._comparator);\n            reordered.addAll(_strictReliabilityOrder);\n            _strictReliabilityOrder = reordered;\n            \n            calculateThresholds(allPeers);\n            \n            for (Iterator iter = allPeers.iterator(); iter.hasNext(); ) {\n                PeerProfile profile = (PeerProfile)iter.next();\n                locked_placeProfile(profile);\n            }\n            \n            locked_unfailAsNecessary();\n            locked_promoteFastAsNecessary();\n        }\n        \n        if (_log.shouldLog(Log.DEBUG)) {\n            _log.debug(\"Profiles reorganized.  averages: [integration: \" + _thresholdIntegrationValue + \", reliability: \" + _thresholdReliabilityValue + \", speed: \" + _thresholdSpeedValue + \"]\");\n            _log.debug(\"Strictly organized: \" + _strictReliabilityOrder);\n        }\n    }","id":39464,"modified_method":"/**\n     * Place peers into the correct tier, as well as expand/contract and even drop profiles\n     * according to whatever limits are in place.  Peer profiles are not coallesced during\n     * this method, but the averages are recalculated.\n     *\n     */\n    public void reorganize() {\n        synchronized (_reorganizeLock) {\n            Set allPeers = new HashSet(_failingPeers.size() + _notFailingPeers.size() + _reliablePeers.size() + _fastAndReliablePeers.size());\n            allPeers.addAll(_failingPeers.values());\n            allPeers.addAll(_notFailingPeers.values());\n            allPeers.addAll(_reliablePeers.values());\n            allPeers.addAll(_fastAndReliablePeers.values());\n            \n            _failingPeers.clear();\n            _notFailingPeers.clear();\n            _reliablePeers.clear();\n            _fastAndReliablePeers.clear();\n    \n            Set reordered = new TreeSet(_calc);\n            for (Iterator iter = _strictReliabilityOrder.iterator(); iter.hasNext(); ) {\n                PeerProfile prof = (PeerProfile)iter.next();\n                reordered.add(prof);\n            }\n            _strictReliabilityOrder = reordered;\n            \n            calculateThresholds(allPeers);\n            \n            for (Iterator iter = allPeers.iterator(); iter.hasNext(); ) {\n                PeerProfile profile = (PeerProfile)iter.next();\n                locked_placeProfile(profile);\n            }\n            \n            locked_unfailAsNecessary();\n            locked_promoteFastAsNecessary();\n            \n            if (_log.shouldLog(Log.DEBUG)) {\n                _log.debug(\"Profiles reorganized.  averages: [integration: \" + _thresholdIntegrationValue + \", reliability: \" + _thresholdReliabilityValue + \", speed: \" + _thresholdSpeedValue + \"]\");\n                StringBuffer buf = new StringBuffer(512);\n                for (Iterator iter = _strictReliabilityOrder.iterator(); iter.hasNext(); ) {\n                    PeerProfile prof = (PeerProfile)iter.next();\n                    buf.append('[').append(prof.toString()).append('=').append(prof.getReliabilityValue()).append(\"] \");\n                }\n                _log.debug(\"Strictly organized (most reliable first): \" + buf.toString());\n                _log.debug(\"fast and reliable: \" + _fastAndReliablePeers.values());\n            }\n        }\n    }","commit_id":"d25cec02c2057d13499051953997d1213f8e934a","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     * Update the thresholds based on the profiles in this set.  currently\n     * implements the reliability threshold based on the median reliability (ignoring\n     * failing peers) with integration and speed thresholds being derived from the average\n     * of the active reliable peers.\n     *\n     */\n    private void calculateThresholds(Set allPeers) {\n        Set reordered = new TreeSet(InverseReliabilityComparator._comparator);\n        for (Iterator iter = allPeers.iterator(); iter.hasNext(); ) {\n            PeerProfile profile = (PeerProfile)iter.next();\n            \n            if (_us.equals(profile.getPeer())) continue;\n            \n            // only take into account active peers that aren't failing\n            if (profile.getIsFailing() || (!profile.getIsActive()))\n                continue;\n        \n            reordered.add(profile);\n        }\n        int numNotFailing = reordered.size();\n        // how many are in the \"top half\" of the reliability peers?\n        int topCount = 0;\n        if (numNotFailing != 0)\n            topCount = (int)(numNotFailing / 2);\n\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"top count is \" + topCount + \" out of \" + numNotFailing);\n        \n        int numActive = 0;\n        double totalIntegration = 0;\n        double totalSpeed = 0;\n        int i = 0;\n        for (Iterator iter = reordered.iterator(); iter.hasNext(); i++) {\n            PeerProfile profile = (PeerProfile)iter.next();\n            if (i < topCount) {\n                if (profile.getIsActive()) {\n                    numActive++;\n                    if (profile.getIntegrationValue() > 0)\n                        totalIntegration += profile.getIntegrationValue();\n                    if (profile.getSpeedValue() > 0)\n                        totalSpeed += profile.getSpeedValue();\n                }\n            } else if (i == topCount) {\n                if (profile.getReliabilityValue() < 0)\n                    _thresholdReliabilityValue = 0;\n                else\n                    _thresholdReliabilityValue = profile.getReliabilityValue();\n                break;\n            } else {\n                break;\n            }\n        }\n        \n        _thresholdIntegrationValue = 1.0d * avg(totalIntegration, numActive);\n        _thresholdSpeedValue       = 1.0d * avg(totalSpeed, numActive);\n    }","id":39465,"modified_method":"/**\n     * Update the thresholds based on the profiles in this set.  currently\n     * implements the reliability threshold based on the median reliability (ignoring\n     * failing peers) with integration and speed thresholds being derived from the average\n     * of the active reliable peers.\n     *\n     */\n    private void calculateThresholds(Set allPeers) {\n        Set reordered = new TreeSet(_calc);\n        for (Iterator iter = allPeers.iterator(); iter.hasNext(); ) {\n            PeerProfile profile = (PeerProfile)iter.next();\n            \n            if (_us.equals(profile.getPeer())) continue;\n            \n            // only take into account active peers that aren't failing\n            if (profile.getIsFailing() || (!profile.getIsActive()))\n                continue;\n        \n            reordered.add(profile);\n        }\n        int numNotFailing = reordered.size();\n        // how many are in the \"top half\" of the reliability peers?\n        int topCount = 0;\n        if (numNotFailing != 0)\n            topCount = (int)(numNotFailing / 2);\n\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"top count is \" + topCount + \" out of \" + numNotFailing);\n        \n        int numActive = 0;\n        double totalIntegration = 0;\n        double totalSpeed = 0;\n        int i = 0;\n        for (Iterator iter = reordered.iterator(); iter.hasNext(); i++) {\n            PeerProfile profile = (PeerProfile)iter.next();\n            if (i < topCount) {\n                if (profile.getIsActive()) {\n                    numActive++;\n                    if (profile.getIntegrationValue() > 0)\n                        totalIntegration += profile.getIntegrationValue();\n                    if (profile.getSpeedValue() > 0)\n                        totalSpeed += profile.getSpeedValue();\n                }\n            } else if (i == topCount) {\n                if (profile.getReliabilityValue() < 0)\n                    _thresholdReliabilityValue = 0;\n                else\n                    _thresholdReliabilityValue = profile.getReliabilityValue();\n                break;\n            } else {\n                break;\n            }\n        }\n        \n        _thresholdIntegrationValue = 1.0d * avg(totalIntegration, numActive);\n        _thresholdSpeedValue       = 1.0d * avg(totalSpeed, numActive);\n    }","commit_id":"d25cec02c2057d13499051953997d1213f8e934a","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public ProfileOrganizer(RouterContext context) {\n        _context = context;\n        _log = context.logManager().getLog(ProfileOrganizer.class);\n        _fastAndReliablePeers = new HashMap(16);\n        _reliablePeers = new HashMap(16);\n        _wellIntegratedPeers = new HashMap(16);\n        _notFailingPeers = new HashMap(16);\n        _failingPeers = new HashMap(16);\n        _strictReliabilityOrder = new TreeSet(new InverseReliabilityComparator());\n        _thresholdSpeedValue = 0.0d;\n        _thresholdReliabilityValue = 0.0d;\n        _thresholdIntegrationValue = 0.0d;\n        _persistenceHelper = new ProfilePersistenceHelper(_context);\n    }","id":39466,"modified_method":"public ProfileOrganizer(RouterContext context) {\n        _context = context;\n        _log = context.logManager().getLog(ProfileOrganizer.class);\n        _calc = new InverseReliabilityComparator();\n        _fastAndReliablePeers = new HashMap(16);\n        _reliablePeers = new HashMap(16);\n        _wellIntegratedPeers = new HashMap(16);\n        _notFailingPeers = new HashMap(16);\n        _failingPeers = new HashMap(16);\n        _strictReliabilityOrder = new TreeSet(_calc);\n        _thresholdSpeedValue = 0.0d;\n        _thresholdReliabilityValue = 0.0d;\n        _thresholdIntegrationValue = 0.0d;\n        _persistenceHelper = new ProfilePersistenceHelper(_context);\n    }","commit_id":"d25cec02c2057d13499051953997d1213f8e934a","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public int compare(Object lhs, Object rhs) {\n            if ( (lhs == null) || (rhs == null) || (!(lhs instanceof PeerProfile)) || (!(rhs instanceof PeerProfile)) )\n                throw new ClassCastException(\"Only profiles can be compared - lhs = \" + lhs + \" rhs = \" + rhs);\n            PeerProfile left = (PeerProfile)lhs;\n            PeerProfile right= (PeerProfile)rhs;\n            \n            // note below that yes, we are treating left and right backwards.  see: classname\n            int diff = (int)(right.getReliabilityValue() - left.getReliabilityValue());\n            // we can't just return that, since the set would b0rk on equal values (just because two profiles\n            // rank the same way doesn't mean they're the same peer!)  So if they reliabilities are equal, we\n            // order them by the peer's hash\n            if (diff != 0)\n                return diff;\n            if (left.getPeer().equals(right.getPeer()))\n                return 0;\n            else\n                return DataHelper.compareTo(right.getPeer().getData(), left.getPeer().getData());\n        }","id":39467,"modified_method":"/**\n         * Compare the two objects backwards.  The standard comparator returns\n         * -1 if lhs is less than rhs, 1 if lhs is greater than rhs, or 0 if they're\n         * equal.  To keep a strict ordering, we measure peers with equal reliability\n         * values according to their hashes\n         *\n         * @return -1 if the right hand side is smaller, 1 if the left hand side is\n         *         smaller, or 0 if they are the same peer (Comparator.compare() inverted)\n         */\n        public int compare(Object lhs, Object rhs) {\n            if ( (lhs == null) || (rhs == null) || (!(lhs instanceof PeerProfile)) || (!(rhs instanceof PeerProfile)) )\n                throw new ClassCastException(\"Only profiles can be compared - lhs = \" + lhs + \" rhs = \" + rhs);\n            PeerProfile left = (PeerProfile)lhs;\n            PeerProfile right= (PeerProfile)rhs;\n             \n            double rval = right.getReliabilityValue();\n            double lval = left.getReliabilityValue();\n            \n            if (lval == rval) // note the following call inverts right and left (see: classname)\n                return DataHelper.compareTo(right.getPeer().getData(), left.getPeer().getData());\n            \n            boolean rightBigger = rval > lval;\n\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"The reliability of \" + right.getPeer().toBase64() \n                           + \" and \" + left.getPeer().toBase64() + \" marks \" + (rightBigger ? \"right\" : \"left\")\n                           + \" as larger: r=\" + right.getReliabilityValue() + \" l=\"\n                           + left.getReliabilityValue());\n                           \n            if (rightBigger)\n                return 1;\n            else\n                return -1;\n        }","commit_id":"d25cec02c2057d13499051953997d1213f8e934a","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public double calc(PeerProfile profile) {\n        // if we've never succeeded (even if we've never tried), the reliability is zip\n        if (profile.getSendSuccessSize().getRate(60*60*1000).getLifetimeEventCount() < 0)\n            return profile.getReliabilityBonus();\n        \n        long val = 0;\n        val += profile.getSendSuccessSize().getRate(60*1000).getCurrentEventCount() * 20;\n        val += profile.getSendSuccessSize().getRate(60*1000).getLastEventCount() * 10;\n        val += profile.getSendSuccessSize().getRate(60*60*1000).getLastEventCount() * 1;\n        val += profile.getSendSuccessSize().getRate(60*60*1000).getCurrentEventCount() * 5;\n        \n        val += profile.getTunnelCreateResponseTime().getRate(10*60*1000).getLastEventCount() * 5;\n        val += profile.getTunnelCreateResponseTime().getRate(60*60*1000).getCurrentEventCount();\n        val += profile.getTunnelCreateResponseTime().getRate(60*60*1000).getLastEventCount();\n        \n        //val -= profile.getSendFailureSize().getRate(60*1000).getLastEventCount() * 5;\n        //val -= profile.getSendFailureSize().getRate(60*60*1000).getCurrentEventCount()*2;\n        //val -= profile.getSendFailureSize().getRate(60*60*1000).getLastEventCount()*2;\n        \n        val -= profile.getTunnelHistory().getRejectionRate().getRate(60*1000).getCurrentEventCount() * 10;\n        val -= profile.getTunnelHistory().getRejectionRate().getRate(60*1000).getLastEventCount() * 5;\n        val -= profile.getTunnelHistory().getRejectionRate().getRate(60*60*1000).getCurrentEventCount() * 1;\n        //val -= profile.getTunnelHistory().getRejectionRate().getRate(60*60*1000).getLastEventCount() * 1;\n        \n        // penalize them heavily for dropping netDb requests\n        if (profile.getDBHistory().getFailedLookupRate().getRate(60*1000).getCurrentEventCount() > 0)\n            val -= 10;\n        if (profile.getDBHistory().getFailedLookupRate().getRate(60*1000).getLastEventCount() > 0)\n        val -= 5;\n        //val -= profile.getDBHistory().getFailedLookupRate().getRate(60*60*1000).getCurrentEventCount();\n        //val -= profile.getDBHistory().getFailedLookupRate().getRate(60*60*1000).getLastEventCount();\n        //val -= profile.getDBHistory().getFailedLookupRate().getRate(24*60*60*1000).getCurrentEventCount() * 50;\n        //val -= profile.getDBHistory().getFailedLookupRate().getRate(24*60*60*1000).getLastEventCount() * 20;\n        \n        if (profile.getCommError().getRate(60*1000).getCurrentEventCount() > 0)\n            val -= 200;\n        if (profile.getCommError().getRate(60*1000).getLastEventCount() > 0)\n            val -= 200;\n        \n        if (profile.getCommError().getRate(60*60*1000).getCurrentEventCount() > 0)\n            val -= 10;\n        if (profile.getCommError().getRate(60*60*1000).getLastEventCount() > 0)\n            val -= 10;\n        \n        val -= profile.getCommError().getRate(24*60*60*1000).getCurrentEventCount() * 1;\n        \n        long now = _context.clock().now();\n        \n        long timeSinceRejection = now - profile.getTunnelHistory().getLastRejected();\n        if (timeSinceRejection > 60*60*1000) {\n            // noop.  rejection was over 60 minutes ago\n        } else if (timeSinceRejection > 10*60*1000) {\n            val -= 10; // 10-60 minutes ago we got a rejection\n        } else if (timeSinceRejection > 60*1000) {\n            val -= 50; // 1-10 minutes ago we got a rejection\n        } else {\n            val -= 100; // we got a rejection within the last minute\n        }\n        \n        //if ( (profile.getLastSendSuccessful() > 0) && (now - 24*60*60*1000 > profile.getLastSendSuccessful()) ) {\n        //    // we know they're real, but we havent sent them a message successfully in over a day.\n        //    val -= 1000;\n        //}\n        \n        val += profile.getReliabilityBonus();\n        return val;\n    }","id":39468,"modified_method":"public double calc(PeerProfile profile) {\n        // if we've never succeeded (even if we've never tried), the reliability is zip\n        if (profile.getSendSuccessSize().getRate(60*60*1000).getLifetimeEventCount() < 0)\n            return profile.getReliabilityBonus();\n        \n        long val = 0;\n        val += profile.getSendSuccessSize().getRate(60*1000).getCurrentEventCount() * 20;\n        val += profile.getSendSuccessSize().getRate(60*1000).getLastEventCount() * 10;\n        val += profile.getSendSuccessSize().getRate(60*60*1000).getLastEventCount() * 1;\n        val += profile.getSendSuccessSize().getRate(60*60*1000).getCurrentEventCount() * 5;\n        \n        val += profile.getTunnelCreateResponseTime().getRate(10*60*1000).getLastEventCount() * 5;\n        val += profile.getTunnelCreateResponseTime().getRate(60*60*1000).getCurrentEventCount();\n        val += profile.getTunnelCreateResponseTime().getRate(60*60*1000).getLastEventCount();\n        \n        //val -= profile.getSendFailureSize().getRate(60*1000).getLastEventCount() * 5;\n        //val -= profile.getSendFailureSize().getRate(60*60*1000).getCurrentEventCount()*2;\n        //val -= profile.getSendFailureSize().getRate(60*60*1000).getLastEventCount()*2;\n        \n        long rejectionPenalties = \n              (profile.getTunnelHistory().getRejectionRate().getRate(60*1000).getCurrentEventCount() * 200)\n            + (profile.getTunnelHistory().getRejectionRate().getRate(60*1000).getLastEventCount() * 100)\n            + (profile.getTunnelHistory().getRejectionRate().getRate(10*60*1000).getCurrentEventCount() * 10)\n            + (profile.getTunnelHistory().getRejectionRate().getRate(10*60*1000).getLastEventCount() * 5)\n            + (profile.getTunnelHistory().getRejectionRate().getRate(60*60*1000).getCurrentEventCount() * 1);\n        if ( (rejectionPenalties > 0) && (_log.shouldLog(Log.INFO)) )\n            _log.info(\"Rejection penalties for peer \" + profile.getPeer().toBase64() + \": \" + rejectionPenalties);\n        val -= rejectionPenalties;\n        //val -= profile.getTunnelHistory().getRejectionRate().getRate(60*60*1000).getLastEventCount() * 1;\n        \n        // penalize them heavily for dropping netDb requests\n        if (profile.getDBHistory().getFailedLookupRate().getRate(60*1000).getCurrentEventCount() > 0)\n            val -= 10;\n        if (profile.getDBHistory().getFailedLookupRate().getRate(60*1000).getLastEventCount() > 0)\n        val -= 5;\n        //val -= profile.getDBHistory().getFailedLookupRate().getRate(60*60*1000).getCurrentEventCount();\n        //val -= profile.getDBHistory().getFailedLookupRate().getRate(60*60*1000).getLastEventCount();\n        //val -= profile.getDBHistory().getFailedLookupRate().getRate(24*60*60*1000).getCurrentEventCount() * 50;\n        //val -= profile.getDBHistory().getFailedLookupRate().getRate(24*60*60*1000).getLastEventCount() * 20;\n        \n        if (profile.getCommError().getRate(60*1000).getCurrentEventCount() > 0)\n            val -= 200;\n        if (profile.getCommError().getRate(60*1000).getLastEventCount() > 0)\n            val -= 200;\n        \n        if (profile.getCommError().getRate(60*60*1000).getCurrentEventCount() > 0)\n            val -= 10;\n        if (profile.getCommError().getRate(60*60*1000).getLastEventCount() > 0)\n            val -= 10;\n        \n        val -= profile.getCommError().getRate(24*60*60*1000).getCurrentEventCount() * 1;\n        \n        long now = _context.clock().now();\n        \n        long timeSinceRejection = now - profile.getTunnelHistory().getLastRejected();\n        if (timeSinceRejection > 60*60*1000) {\n            // noop.  rejection was over 60 minutes ago\n        } else if (timeSinceRejection > 10*60*1000) {\n            val -= 10; // 10-60 minutes ago we got a rejection\n        } else if (timeSinceRejection > 60*1000) {\n            val -= 50; // 1-10 minutes ago we got a rejection\n        } else {\n            val -= 100; // we got a rejection within the last minute\n        }\n        \n        //if ( (profile.getLastSendSuccessful() > 0) && (now - 24*60*60*1000 > profile.getLastSendSuccessful()) ) {\n        //    // we know they're real, but we havent sent them a message successfully in over a day.\n        //    val -= 1000;\n        //}\n        \n        val += profile.getReliabilityBonus();\n        return val;\n    }","commit_id":"d25cec02c2057d13499051953997d1213f8e934a","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private void createRates() {\n        _rejectRate = new RateStat(\"tunnelHistory.rejectRate\", \"How often does this peer reject a tunnel request?\", \"tunnelHistory\", new long[] { 60*1000l, 60*60*1000l, 24*60*60*1000l });\n    }","id":39469,"modified_method":"private void createRates() {\n        _rejectRate = new RateStat(\"tunnelHistory.rejectRate\", \"How often does this peer reject a tunnel request?\", \"tunnelHistory\", new long[] { 60*1000l, 10*60*1000l, 60*60*1000l, 24*60*60*1000l });\n    }","commit_id":"d25cec02c2057d13499051953997d1213f8e934a","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private synchronized void clearForcedFocus()\n    {\n        if (mForcingFocus == false)\n            return;\n            \n        Component c = mForcedFocus;\n                    \n        // clear mForcedFocus before simulating focus loss\n        // in case that triggers any calls to KeyboardFocusManager\n        // asking about focus, and we don't want to be lying at\n        // that point.\n            \n        mForcedFocus = null;\n        mForcedFocusClickedChild = null;\n        mForcedFocusCycleRoot = null;\n        mForcingFocus = false;\n        \n        if (DEBUG.FOCUS) out(TERM_GREEN + \"CLEARED FORCED FOCUS \" + name(c) + TERM_CLEAR);\n\n        simulateFocusLost(c);\n    }","id":39470,"modified_method":"private synchronized void clearForcedFocus(boolean permanent)\n    {\n        if (mForcingFocus == false)\n            return;\n            \n        Component c = mForcedFocus;\n                    \n        // clear mForcedFocus before simulating focus loss\n        // in case that triggers any calls to KeyboardFocusManager\n        // asking about focus, and we don't want to be lying at\n        // that point.\n            \n        mForcedFocus = null;\n        mForcedFocusClickedChild = null;\n        mForcedFocusCycleRoot = null;\n        mForcingFocus = false;\n        \n        if (DEBUG.FOCUS) out(TERM_GREEN + \"CLEARED FORCED FOCUS \"\n                             + name(c)\n                             + \" permanent=\" + permanent\n                             + \" priorOwner=\" + name(mFocusOwnerBeforeForced)\n                             + TERM_CLEAR);\n\n        simulateFocusLost(c, null);\n        \n        if (permanent) {\n            if (mFocusOwnerBeforeForced != null) {\n\n                final Component realFocusOwner = super.getFocusOwner();\n\n                if (mFocusOwnerBeforeForced != realFocusOwner && realFocusOwner != null) {\n                    Util.printStackTrace(\"incorrect focus return: \"\n                                         + mFocusOwnerBeforeForced\n                                         + \" real=\" + realFocusOwner);\n                    simulateFocusGained(realFocusOwner);\n                } else {\n                    simulateFocusGained(mFocusOwnerBeforeForced);\n                }\n                \n                mFocusOwnerBeforeForced = null;\n            }\n        }\n    }","commit_id":"54f6456879aea659a565ae2dd6f3e972af301483","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n     * Make this FocusManager active for all of AWT.\n     * The first call create's and install a new KeyboardFocusManager.\n     */\n    public static synchronized void install() {\n        if (Singleton == null) {\n            Singleton = new FocusManager();\n            KeyboardFocusManager.setCurrentKeyboardFocusManager(Singleton);\n            if (DEBUG.INIT) System.out.println(Singleton + \": installed.\");\n            if (DEBUG.FOCUS && DEBUG.META) enableAWTFocusLogging();\n            if (isJavaVersion_15_orLater) {\n                String term = (String) Util.invoke(System.class, \"getenv\", \"TERM\");\n                if (term == null || term.indexOf(\"color\") < 0) {\n                    TERM_RED = TERM_GREEN = TERM_YELLOW = TERM_CLEAR = \"\";\n                }\n            }\n\n            UseForcedFocus = GUI.UseAlwaysOnTop;\n            \n        } else\n            if (DEBUG.INIT) System.out.println(Singleton + \": already installed.\");\n    }","id":39471,"modified_method":"/**\n     * Make this FocusManager active for all of AWT.\n     * The first call create's and install a new KeyboardFocusManager.\n     */\n    public static synchronized void install() {\n        if (Singleton == null) {\n            Singleton = new FocusManager();\n            KeyboardFocusManager.setCurrentKeyboardFocusManager(Singleton);\n            if (DEBUG.INIT) System.out.println(Singleton + \": installed.\");\n            if (DEBUG.FOCUS && DEBUG.META) enableAWTFocusLogging();\n            if (isJavaVersion_15_orLater) {\n                String term = (String) Util.invoke(System.class, \"getenv\", \"TERM\");\n                if (term == null || term.indexOf(\"color\") < 0) {\n                    TERM_RED = TERM_GREEN = TERM_YELLOW = TERM_CLEAR = \"\";\n                }\n            }\n\n\n            UseForcedFocus = GUI.UseAlwaysOnTop\n                || true; // Turn on for now so toolbars can have false focusableWindowState\n            \n        } else\n            if (DEBUG.INIT) System.out.println(Singleton + \": already installed.\");\n    }","commit_id":"54f6456879aea659a565ae2dd6f3e972af301483","url":"https://github.com/VUE/VUE"},{"original_method":"private void inspectMouseEventForForcableFocusChange(AWTEvent e) {\n\n        final Component clicked = (Component) e.getSource();\n        \n        if (clicked == mForcedFocus || clicked == mForcedFocusClickedChild) {\n            // leave us force-focused as is\n            return;\n        }\n\n        if (clicked == null) {\n            Util.printStackTrace(\"null source in \" + e);\n            return;\n        }\n        \n        //----------------------------------------------------------------------------- \n        // We've clicked on something that is anything but the currently\n        // forced focus Component, if there is one.  Usually this means\n        // we'll be canceling the existing forced focus, if if the new\n        // component is force focusable, transfering focus to that.\n        // But not if we're clicking in a pop-up window and/or one without\n        // a Window at it's root (some menu pop-ups do this).\n        //----------------------------------------------------------------------------- \n            \n        final Container focusCycleRoot = getFocusCycleRoot(clicked);\n\n        if (focusCycleRoot == null || isPopup(focusCycleRoot)) {\n                \n            // this happens in the case of pop-ups, in which case we don't need to do\n            // anything to the currently forced focus.  In the case of a Menu, it'll run\n            // and we can keep focus.  In the case of, say, the pop-up under a JComboBox\n            // that IS the forced-focus component, it may contain all sorts of stuff,\n            // like a scroll bar, and anything down in there we click on we want to\n            // allow w/out moving the focus away from the JComboBox, or the whole pop-up\n            // will dissapear;\n                \n            if (DEBUG.FOCUS) out(\"focusCycleRoot is \" + name(focusCycleRoot) + \", no focus change for popups\");\n            return;\n        }\n            \n        final boolean wasForcingFocus = mForcingFocus;\n\n        // If we're currently forcing focus, clear it.\n        if (mForcingFocus)\n            clearForcedFocus();\n\n        final Component forceable;\n        final Window focusCycleWindow = getFocusCycleWindow(focusCycleRoot);\n\n        // The whole purpose of this FocusManager is to allow focus to Components\n        // that are in Window's that are NOT focusable: so only activate\n        // the forced focus if the root window is not focusable.\n        if (focusCycleWindow.isFocusableWindow())\n            forceable = null;\n        else\n            forceable = getMouseClickForceFocusableComponent(clicked);\n\n        if (forceable == null) {\n            // Neither the clicked component or it's immediate parent\n            // was force-focusable: leave us to the regular focus system.\n\n            // If we just cancelled force focus, make absolutely\n            // sure the current \"real\" focus component knows it has\n            // the focus back.\n            if (wasForcingFocus && clicked == super.getFocusOwner()) {\n                \n                // When transferring focus from a forced focus component to regular\n                // focus due to a mouse click, and the regular focused component had\n                // the focus before the force focus component, it doesn't actually\n                // getting the focus back, because the FocusManager thinks it\n                // already *has* focus.  So we make sure it's told it has the focus\n                // here.\n                    \n                // todo: we probably need our checking of immedate parent here also\n                simulateFocusGained(clicked);\n            }\n                \n        } else {\n\n            // If the new component is force focusable, force focus to it.\n                \n            //-----------------------------------------------------------------------------\n            // Okay, now we know we're in a Window that is not normally focusable,\n            // and we've clicked on something we want to allow the focus to be forced\n            // to.  We may have actually clicked on an immediate child of such a component,\n            // and in that case be sure to record both the parent and child so we\n            // know if they click again in the future on either to do nothing to\n            // change the focus.\n            //-----------------------------------------------------------------------------\n                \n            if (forceable == clicked) {\n                // we clicked directly on something that's forceable\n                setForcedFocus(forceable, null, focusCycleRoot);\n            } else {\n                // we clicked on a child of what's forceable\n                setForcedFocus(forceable, clicked, focusCycleRoot);\n            }\n        }\n        \n    }","id":39472,"modified_method":"private void inspectMouseEventForForcableFocusChange(AWTEvent e) {\n\n        final Component clicked = (Component) e.getSource();\n        \n        if (DEBUG.FOCUS) out(\" inspectMouseEvent: \" + name(clicked) + \" \" + e.paramString());\n        \n        if (clicked == mForcedFocus || clicked == mForcedFocusClickedChild) {\n            // leave us force-focused as is\n            return;\n        }\n\n        if (clicked == null) {\n            Util.printStackTrace(\"null source in \" + e);\n            return;\n        }\n        \n        //----------------------------------------------------------------------------- \n        // We've clicked on something that is anything but the currently\n        // forced focus Component, if there is one.  Usually this means\n        // we'll be canceling the existing forced focus, if if the new\n        // component is force focusable, transfering focus to that.\n        // But not if we're clicking in a pop-up window and/or one without\n        // a Window at it's root (some menu pop-ups do this).\n        //----------------------------------------------------------------------------- \n            \n        final Container focusCycleRoot = getFocusCycleRoot(clicked);\n\n        if (focusCycleRoot == null || isPopup(focusCycleRoot)) {\n                \n            // this happens in the case of pop-ups, in which case we don't need to do\n            // anything to the currently forced focus.  In the case of a Menu, it'll run\n            // and we can keep focus.  In the case of, say, the pop-up under a JComboBox\n            // that IS the forced-focus component, it may contain all sorts of stuff,\n            // like a scroll bar, and anything down in there we click on we want to\n            // allow w/out moving the focus away from the JComboBox, or the whole pop-up\n            // will dissapear;\n                \n            if (DEBUG.FOCUS) out(\"focusCycleRoot is \" + name(focusCycleRoot) + \", no focus change for popups\");\n            return;\n        }\n            \n        final boolean wasForcingFocus = mForcingFocus;\n\n        // We've clicked on *something*, and it's not the currently\n        // forced focus.  So if we're currently forcing focus, \n        // it needs to be cleared.\n        \n        final Component forceable;\n        final Window focusCycleWindow = getFocusCycleWindow(focusCycleRoot);\n\n        // The whole purpose of this FocusManager is to allow focus to Components\n        // that are in Window's that are NOT focusable: so only activate\n        // the forced focus if the root window is not focusable.\n        // Note that if the window contains no focusable elements, even\n        // if it's focusable window state is true, it will not be considered\n        // a focusable window.\n        if (focusCycleWindow.isFocusableWindow())\n            forceable = null;\n        else\n            forceable = getMouseClickForceFocusableComponent(clicked);\n\n        if (forceable == null) {\n\n            // cases mentioned in comments below now handled in clearForcedFocus\n            if (mForcingFocus)\n                clearForcedFocus(true);\n\n            /*\n            \n            // Neither the clicked component or it's immediate parent\n            // was force-focusable: leave us to the regular focus system.\n\n            // If we just cancelled force focus, make absolutely\n            // sure the current \"real\" focus component knows it has\n            // the focus back.\n            if (wasForcingFocus && clicked == super.getFocusOwner()) {\n                \n                // When transferring focus from a forced focus component to regular\n                // focus due to a mouse click, and the regular focused component had\n                // the focus before the force focus component, it doesn't actually\n                // getting the focus back, because the FocusManager thinks it\n                // already *has* focus.  So we make sure it's told it has the focus\n                // here.\n                    \n                // todo: we probably need our checking of immedate parent here also\n                simulateFocusGained(clicked);\n            }\n            */\n                \n        } else {\n\n            // If the new component is force focusable, force focus to it.\n                \n            //-----------------------------------------------------------------------------\n            // Okay, now we know we're in a Window that is not normally focusable,\n            // and we've clicked on something we want to allow the focus to be forced\n            // to.  We may have actually clicked on an immediate child of such a component,\n            // and in that case be sure to record both the parent and child so we\n            // know if they click again in the future on either to do nothing to\n            // change the focus.\n            //-----------------------------------------------------------------------------\n                \n            if (forceable == clicked) {\n                // we clicked directly on something that's forceable\n                setForcedFocus(forceable, null, focusCycleRoot);\n            } else {\n                // we clicked on a child of what's forceable\n                setForcedFocus(forceable, clicked, focusCycleRoot);\n            }\n        }\n        \n    }","commit_id":"54f6456879aea659a565ae2dd6f3e972af301483","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n     * Here we see all the KeyEvents and MouseEvents, within the entire VM context,\n     * and Window/Component events related to focus.\n     * \n     * @return <code>true<\/code> if this method dispatched the event;\n     *         <code>false<\/code> otherwise\n     */\n    public boolean dispatchEvent(AWTEvent e) {\n        final int id = e.getID();\n        \n        if (id >= HierarchyEvent.HIERARCHY_FIRST && id <= HierarchyEvent.HIERARCHY_LAST)\n            return super.dispatchEvent(e);\n\n        // If this is a resize event, and the window is animating resize,\n        // we do NOT want to dispatch any COMPONENT_RESIZED events: just\n        // return true, claiming it's been handled.  Ah: but there's\n        // no way to know it's animating: we get these events after\n        // -- maybe we can stick something in the queue to let us know\n        // when AWT is done?\n        // See Component.dispatchEventImpl(AWTEvent e)\n\n        switch (id) {\n        case MouseEvent.MOUSE_MOVED:\n        case MouseEvent.MOUSE_DRAGGED:\n            //case ComponentEvent.COMPONENT_MOVED:\n            //case ComponentEvent.COMPONENT_RESIZED:\n            //case PaintEvent.PAINT:\n            //case PaintEvent.UPDATE:\n            // do don't report these.\n            if (DEBUG.META == false)\n                break;\n            \n        default:\n            //if (e instanceof WindowEvent || e instanceof FocusEvent)\n            if (DEBUG.FOCUS \n                || (DEBUG.MOUSE && e instanceof MouseEvent)\n                || (DEBUG.PAINT && e instanceof PaintEvent)\n                || (DEBUG.KEYS && e instanceof KeyEvent)\n                ) {\n                if (!DEBUG.META && e instanceof MouseEvent && ((MouseEvent)e).getComponent().isShowing() == false) {\n                    // don't report mouse-overs of invisible windows that may be scattered about\n                    break;\n                    //return true;\n                }\n                // especially highlight the start of input chains\n                if (id == MouseEvent.MOUSE_PRESSED ||\n                    id == KeyEvent.KEY_PRESSED ||\n                    id == ComponentEvent.COMPONENT_SHOWN )\n                    out(TERM_YELLOW + eventName(e) + TERM_CLEAR);\n                else\n                    out(TERM_RED + eventName(e) + TERM_CLEAR);\n            }\n        }\n\n        Component c = (Component) e.getSource();\n            \n        switch (id) {\n        case MouseEvent.MOUSE_PRESSED:\n\n            MouseEvent me = (MouseEvent) e;\n            \n            // In some cases, we get two mouse presses & releases, such as clicking on a\n            // combo-box in a JTable, where we get a press for the JTable, a press for\n            // the combo-box, then a release for the JTable, then a release for the\n            // combo-box.  We only want to take action on the last pressed object.  (Or\n            // the combo pops up and then immediately goes away) Unforunately, this\n            // means we can't shift the focus on MOUSE_PRESSED like regular focus\n            // changes, unless we can figure another workaround for this, or specialize\n            // for just the JTable case, or make a VueTable that provides us an\n            // indicator for this situation.\n\n            if (DEBUG.FOCUS && !UseForcedFocus)\n                getFocusCycleRoot(c); // for diagnostic output\n\n            mMousePressedTarget = c;\n            \n            Window parentWindow = getFocusCycleWindow(c);\n            if (parentWindow instanceof MouseInterceptor) {\n                if (DEBUG.FOCUS) out(\"AWTEvent intercepted by MouseInterceptor \" + parentWindow);\n                if (((MouseInterceptor)parentWindow).interceptMousePress(me))\n                        return true;\n            }\n            \n            break;\n\n        case MouseEvent.MOUSE_RELEASED:\n            if (UseForcedFocus && c == mMousePressedTarget) {\n                inspectMouseEventForForcableFocusChange(e);\n                mMousePressedTarget = null;\n            }\n            break;\n\n        case WindowEvent.WINDOW_ACTIVATED:\n            \n            // Window's java 1.5 doesn't give is COMPONENT_SHOWN\n            // for dialogs -- we need to trap this here\n            if (!GUI.UseAlwaysOnTop && Util.isWindowsPlatform()) {\n                if (c instanceof Dialog)\n                    ensureDialogStaysOnTop((Dialog)c);\n            }\n            break;\n            \n        case ComponentEvent.COMPONENT_SHOWN:\n            //case PaintEvent.PAINT:\n\n            // even if we're not using always on top in general,\n            // we now always use it for 1.5 dialog's with no parent,\n            // otherwise they go behind other windows!\n\n            if (GUI.UseAlwaysOnTop == false) {\n                if (c instanceof Dialog)\n                    ensureDialogStaysOnTop((Dialog)c);\n                // don't go any further if not UseAlwaysOnTop                \n                break;\n            }\n\n            \n            boolean forceOnTop = false;\n            if (c instanceof java.awt.Dialog) {\n                forceOnTop = true;\n            } else {\n                forceOnTop = c instanceof Window && isPopup(c);\n            }\n\n            if (forceOnTop) {\n                final Window window = (Window) e.getSource();\n                if (false /*&& w.isAlwaysOnTop()*/) {\n                    out(name(window) + \" toFront\");\n                    window.toFront();\n                } else {\n                    if (Util.isMacPlatform()) {\n                        MacOSX.raiseToMenuLevel(window);\n                    } else {\n                        // This is experimental overkill for the PC to\n                        // see what's possible worst case.  Apparently: not much.\n                        GUI.setAlwaysOnTop(window, true);\n                        window.toFront();\n                        GUI.invokeAfterAWT(new Runnable() { public void run() {\n                            out(name(window) + \" setAlwaysOnTop RUN\");\n                            GUI.setAlwaysOnTop(window, true);\n                            window.toFront();\n                        }});\n                    }\n                }\n            }\n            \n            break;\n            \n        case ComponentEvent.COMPONENT_HIDDEN:\n            if (UseForcedFocus && c == mForcedFocusWindow) {\n                // Be sure to clear forced focus if the Window that contains it hides\n                clearForcedFocus();\n            }\n            break;\n        }\n\n        boolean dispatched = super.dispatchEvent(e);\n\n\n        // We could process this in dispatchKeyEvent, but it is not\n        // guaranteed to always be used, so we must catch this here.\n        if (id == KeyEvent.KEY_PRESSED && !((KeyEvent)e).isConsumed()) {\n            if (!dispatched) Util.printStackTrace(\"FAILED TO DISPATCH \" + e);\n\n            final KeyEvent ke = (KeyEvent) e;\n\n            final int MENU_BAR_MAYBE =\n                InputEvent.CTRL_MASK |\n                InputEvent.META_MASK |\n                InputEvent.ALT_MASK |\n                InputEvent.ALT_GRAPH_MASK;\n\n            if ((ke.getModifiers() & MENU_BAR_MAYBE) != 0 || ke.isActionKey())\n                relayUnconsumedKeyPress(ke);\n        }\n\n        return dispatched;\n    }","id":39473,"modified_method":"/**\n     * Here we see all the KeyEvents and MouseEvents, within the entire VM context,\n     * and Window/Component events related to focus.\n     * \n     * @return <code>true<\/code> if this method dispatched the event;\n     *         <code>false<\/code> otherwise\n     */\n    public boolean dispatchEvent(AWTEvent e) {\n        final int id = e.getID();\n        \n        if (id >= HierarchyEvent.HIERARCHY_FIRST && id <= HierarchyEvent.HIERARCHY_LAST)\n            return super.dispatchEvent(e);\n\n        // If this is a resize event, and the window is animating resize,\n        // we do NOT want to dispatch any COMPONENT_RESIZED events: just\n        // return true, claiming it's been handled.  Ah: but there's\n        // no way to know it's animating: we get these events after\n        // -- maybe we can stick something in the queue to let us know\n        // when AWT is done?\n        // See Component.dispatchEventImpl(AWTEvent e)\n\n        switch (id) {\n        case MouseEvent.MOUSE_MOVED:\n        case MouseEvent.MOUSE_DRAGGED:\n            //case ComponentEvent.COMPONENT_MOVED:\n            //case ComponentEvent.COMPONENT_RESIZED:\n            //case PaintEvent.PAINT:\n            //case PaintEvent.UPDATE:\n            // do don't report these.\n            if (DEBUG.META == false)\n                break;\n            \n        default:\n            //if (e instanceof WindowEvent || e instanceof FocusEvent)\n            if (DEBUG.FOCUS \n                || (DEBUG.MOUSE && e instanceof MouseEvent)\n                || (DEBUG.PAINT && e instanceof PaintEvent)\n                || (DEBUG.KEYS && e instanceof KeyEvent)\n                ) {\n                if (!DEBUG.META && e instanceof MouseEvent && ((MouseEvent)e).getComponent().isShowing() == false) {\n                    // don't report mouse-overs of invisible windows that may be scattered about\n                    break;\n                    //return true;\n                }\n                // especially highlight the start of input chains\n                if (id == MouseEvent.MOUSE_PRESSED ||\n                    id == KeyEvent.KEY_PRESSED ||\n                    id == ComponentEvent.COMPONENT_SHOWN )\n                    out(TERM_YELLOW + eventName(e) + TERM_CLEAR);\n                else\n                    out(TERM_RED + eventName(e) + TERM_CLEAR);\n            }\n        }\n\n        Component c = (Component) e.getSource();\n            \n        switch (id) {\n        case MouseEvent.MOUSE_PRESSED:\n\n            MouseEvent me = (MouseEvent) e;\n            \n            // In some cases, we get two mouse presses & releases, such as clicking on a\n            // combo-box in a JTable, where we get a press for the JTable, a press for\n            // the combo-box, then a release for the JTable, then a release for the\n            // combo-box.  We only want to take action on the last pressed object.  (Or\n            // the combo pops up and then immediately goes away) Unforunately, this\n            // means we can't shift the focus on MOUSE_PRESSED like regular focus\n            // changes, unless we can figure another workaround for this, or specialize\n            // for just the JTable case, or make a VueTable that provides us an\n            // indicator for this situation.\n\n            if (DEBUG.FOCUS && !UseForcedFocus)\n                getFocusCycleRoot(c); // for diagnostic output\n\n            mMousePressedTarget = c;\n            \n            Window parentWindow = getFocusCycleWindow(c);\n            if (parentWindow instanceof MouseInterceptor) {\n                if (DEBUG.FOCUS) out(\"AWTEvent intercepted by MouseInterceptor \" + parentWindow);\n                if (((MouseInterceptor)parentWindow).interceptMousePress(me))\n                        return true;\n            }\n            \n            break;\n\n        case MouseEvent.MOUSE_RELEASED:\n            if (UseForcedFocus && c == mMousePressedTarget) {\n                inspectMouseEventForForcableFocusChange(e);\n                mMousePressedTarget = null;\n            }\n            break;\n\n        case WindowEvent.WINDOW_ACTIVATED:\n            \n            // Window's java 1.5 doesn't give is COMPONENT_SHOWN\n            // for dialogs -- we need to trap this here\n            if (!GUI.UseAlwaysOnTop && Util.isWindowsPlatform()) {\n                if (c instanceof Dialog)\n                    ensureDialogStaysOnTop((Dialog)c);\n            }\n            break;\n            \n        case ComponentEvent.COMPONENT_SHOWN:\n            //case PaintEvent.PAINT:\n\n            // even if we're not using always on top in general,\n            // we now always use it for 1.5 dialog's with no parent,\n            // otherwise they go behind other windows!\n\n            if (GUI.UseAlwaysOnTop == false) {\n                if (c instanceof Dialog)\n                    ensureDialogStaysOnTop((Dialog)c);\n                // don't go any further if not UseAlwaysOnTop                \n                break;\n            }\n\n            \n            boolean forceOnTop = false;\n            if (c instanceof java.awt.Dialog) {\n                forceOnTop = true;\n            } else {\n                forceOnTop = c instanceof Window && isPopup(c);\n            }\n\n            if (forceOnTop) {\n                final Window window = (Window) e.getSource();\n                if (false /*&& w.isAlwaysOnTop()*/) {\n                    out(name(window) + \" toFront\");\n                    window.toFront();\n                } else {\n                    if (Util.isMacPlatform()) {\n                        MacOSX.raiseToMenuLevel(window);\n                    } else {\n                        // This is experimental overkill for the PC to\n                        // see what's possible worst case.  Apparently: not much.\n                        GUI.setAlwaysOnTop(window, true);\n                        window.toFront();\n                        GUI.invokeAfterAWT(new Runnable() { public void run() {\n                            out(name(window) + \" setAlwaysOnTop RUN\");\n                            GUI.setAlwaysOnTop(window, true);\n                            window.toFront();\n                        }});\n                    }\n                }\n            }\n            \n            break;\n            \n        case ComponentEvent.COMPONENT_HIDDEN:\n            if (UseForcedFocus && c == mForcedFocusWindow) {\n                // Be sure to clear forced focus if the Window that contains it hides\n                clearForcedFocus(true);\n            }\n            break;\n        }\n\n        boolean dispatched = super.dispatchEvent(e);\n\n\n        // We could process this in dispatchKeyEvent, but it is not\n        // guaranteed to always be used, so we must catch this here.\n        if (id == KeyEvent.KEY_PRESSED && !((KeyEvent)e).isConsumed()) {\n            if (!dispatched) Util.printStackTrace(\"FAILED TO DISPATCH \" + e);\n\n            final KeyEvent ke = (KeyEvent) e;\n\n            final int MENU_BAR_MAYBE =\n                InputEvent.CTRL_MASK |\n                InputEvent.META_MASK |\n                InputEvent.ALT_MASK |\n                InputEvent.ALT_GRAPH_MASK;\n\n            if ((ke.getModifiers() & MENU_BAR_MAYBE) != 0 || ke.isActionKey())\n                relayUnconsumedKeyPress(ke);\n        }\n\n        return dispatched;\n    }","commit_id":"54f6456879aea659a565ae2dd6f3e972af301483","url":"https://github.com/VUE/VUE"},{"original_method":"private synchronized void setForcedFocus(Component forceable, Component child, Container focusCycleRoot)\n    {\n        if (DEBUG.FOCUS) out(TERM_GREEN + \"SETTING FORCED FOCUS \" + name(forceable) + TERM_CLEAR);\n        \n        if (mForcingFocus) {\n            if (mForcedFocus == forceable)\n                return;\n            else\n                clearForcedFocus();\n        }\n        \n        Component realFocusOwner = super.getFocusOwner();\n        if (realFocusOwner != null)\n            simulateFocusLost(realFocusOwner);\n        \n        mForcedFocus = forceable;\n        mForcedFocusClickedChild = child;\n        mForcedFocusCycleRoot = focusCycleRoot;\n        mForcedFocusWindow = getFocusCycleWindow(focusCycleRoot);\n        mForcingFocus = true;\n        simulateFocusGained(mForcedFocus);\n        \n    }","id":39474,"modified_method":"private synchronized void setForcedFocus(Component forceable, Component child, Container focusCycleRoot)\n    {\n        if (DEBUG.FOCUS) out(TERM_GREEN + \"SETTING FORCED FOCUS \" + name(forceable) + TERM_CLEAR);\n        \n        if (mForcingFocus) {\n\n            // We're currently forced focus, so this is just\n            // a focus-transfer among force-focusable components.\n            // Clear the current forced focus, but not \"permanently\"\n\n            if (mForcedFocus == forceable)\n                return;\n            else\n                clearForcedFocus(false);\n\n        } else {\n        \n            // We're beginning a new forced-focus ownership --\n            // convince the real focus owner it's lost focus\n            // with a simulated event, and remember it for\n            // later focus return once the forced-focus is over.\n\n            mFocusOwnerBeforeForced = super.getFocusOwner();\n            if (mFocusOwnerBeforeForced != null)\n                simulateFocusLost(mFocusOwnerBeforeForced, forceable);\n        }\n        \n        mForcedFocus = forceable;\n        mForcedFocusClickedChild = child;\n        mForcedFocusCycleRoot = focusCycleRoot;\n        mForcedFocusWindow = getFocusCycleWindow(focusCycleRoot);\n        mForcingFocus = true;\n        simulateFocusGained(mForcedFocus);\n        \n    }","commit_id":"54f6456879aea659a565ae2dd6f3e972af301483","url":"https://github.com/VUE/VUE"},{"original_method":"private void simulateFocusLost(Component c)\n    {\n        AWTEvent fakeEvent = new FakeFocusEvent(c, FocusEvent.FOCUS_LOST, false, null);\n        if (DEBUG.FOCUS) out(\"DELIVERING SIMULATED \" + eventName(fakeEvent));\n        super.redispatchEvent(c, fakeEvent);\n    }","id":39475,"modified_method":"private void simulateFocusLost(Component c, Component focusLostTo)\n    {\n        AWTEvent fakeEvent = new FakeFocusEvent(c, FocusEvent.FOCUS_LOST, false, focusLostTo);\n        if (DEBUG.FOCUS) out(\"DELIVERING SIMULATED \" + eventName(fakeEvent));\n        super.redispatchEvent(c, fakeEvent);\n    }","commit_id":"54f6456879aea659a565ae2dd6f3e972af301483","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n     * If Container 'c' is Window, it is returned.  Otherwise the first parent that\n     * is a Window is returned.\n     * @param c - component to find focus cycle root of\n     */\n    public static Window getFocusCycleWindow(final Component c)\n    {\n        Container parent;\n\n        if (c instanceof Container)\n            parent = (Container) c;\n        else\n            parent = c.getParent();\n                \n        if (parent == null) {\n            //tufts.Util.printStackTrace(\"getFocusCycleWindow: null component\");\n            if (DEBUG.FOCUS) out(\"focusCycleWindow: null parent\");\n            return null;\n        }\n\n        do {\n            if (parent instanceof Window) {\n                if (DEBUG.FOCUS) {\n                    out(\"focusCycleWindow of \" + name(c) + \" == \" + name(parent) + \" peer=\" + parent.getPeer()\n                                     + \" parent=\" + name(parent.getParent()));\n                    //tufts.macosx.Screen.getWindow(parent).getParent();\n                    //tufts.macosx.Screen.dumpWindows();\n                }\n                return (Window) parent;\n            }\n            parent = parent.getParent();\n        } while (parent != null);\n\n        if (DEBUG.FOCUS) out(\"failed to find focusCycleWindow for \" + c);\n        return null;\n    }","id":39476,"modified_method":"/**\n     * If Container 'c' is Window, it is returned.  Otherwise the first parent that\n     * is a Window is returned.\n     * @param c - component to find focus cycle root of\n     */\n    public static Window getFocusCycleWindow(final Component c)\n    {\n        Container parent;\n\n        if (c instanceof Container)\n            parent = (Container) c;\n        else\n            parent = c.getParent();\n                \n        if (parent == null) {\n            //tufts.Util.printStackTrace(\"getFocusCycleWindow: null component\");\n            if (DEBUG.FOCUS) out(\"focusCycleWindow: null parent\");\n            return null;\n        }\n\n        do {\n            if (parent instanceof Window) {\n                if (DEBUG.FOCUS) {\n                    out(\"focusCycleWindow of \" + name(c) + \" == \" + name(parent)\n                        + \" peer=\" + name(parent.getPeer())\n                        + \" parent=\" + name(parent.getParent())\n                        + \" focusable=\" + parent.isFocusable()\n                        + \" focusableWin=\" + ((Window)parent).isFocusableWindow()\n                        );\n                    //tufts.macosx.Screen.getWindow(parent).getParent();\n                    //tufts.macosx.Screen.dumpWindows();\n                }\n                return (Window) parent;\n            }\n            parent = parent.getParent();\n        } while (parent != null);\n\n        if (DEBUG.FOCUS) out(\"failed to find focusCycleWindow for \" + c);\n        return null;\n    }","commit_id":"54f6456879aea659a565ae2dd6f3e972af301483","url":"https://github.com/VUE/VUE"},{"original_method":"public void clearGlobalFocusOwner() {\n        if (DEBUG.FOCUS) trace(\"clearGlobalFocusOwner; force\", mForcedFocus);\n        if (DEBUG.FOCUS) out(\"KeyboardFocusManager.clearGlobalFocusOwner: honoring\");\n        \n        //-------------------------------------------------------\n        // We trust the DefaultKeyboardFocusManager in this case.\n        // E.g., the entire application just lost focus.\n        //-------------------------------------------------------\n\n        // In this case, may be able to skip the simulated FOCUS_LOST\n        // event, as one has sometimes just come through, even\n        // for our forced focus component!  But we deliver it just\n        // in case...  be on the lookout for problems related to\n        // multiple FOCUS_LOST events tho.  We can fix this easily\n        // if need be.\n        \n        clearForcedFocus();\n        \n        super.clearGlobalFocusOwner();\n    }","id":39477,"modified_method":"public void clearGlobalFocusOwner() {\n        if (DEBUG.FOCUS) trace(\"clearGlobalFocusOwner; force\", mForcedFocus);\n        if (DEBUG.FOCUS) out(\"KeyboardFocusManager.clearGlobalFocusOwner: honoring\");\n        \n        //-------------------------------------------------------\n        // We trust the DefaultKeyboardFocusManager in this case.\n        // E.g., the entire application just lost focus.\n        //-------------------------------------------------------\n\n        // In this case, may be able to skip the simulated FOCUS_LOST\n        // event, as one has sometimes just come through, even\n        // for our forced focus component!  But we deliver it just\n        // in case...  be on the lookout for problems related to\n        // multiple FOCUS_LOST events tho.  We can fix this easily\n        // if need be.\n        \n        clearForcedFocus(true);\n        \n        super.clearGlobalFocusOwner();\n    }","commit_id":"54f6456879aea659a565ae2dd6f3e972af301483","url":"https://github.com/VUE/VUE"},{"original_method":"public RouterIdentity establishConnection() {\n        long start = _context.clock().now();\n        long success = 0;\n        if (_log.shouldLog(Log.DEBUG)) _log.debug(\"Establishing connection...\");\n        \n        BigInteger myPub = _builder.getMyPublicValue();\n        try {\n            _socket.setSoTimeout(ESTABLISHMENT_TIMEOUT);\n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"Before key exchange...\");\n            exchangeKey();\n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"Key exchanged...\");\n            // key exchanged.  now say who we are and prove it\n            boolean ok = identifyStationToStation();\n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"After station to station [\" + ok + \"]...\");\n            \n            if (!ok) {\n                throw new DataFormatException(\"Station to station identification failed!  MITM?\");\n            }\n            \n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"before validateVersion...\");\n            boolean versionOk = validateVersion();\n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"after validateVersion [\" + versionOk + \"]...\");\n            \n            if (!versionOk) {\n                // not only do we remove the reference to the invalid peer\n                _context.netDb().fail(_remoteIdentity.getHash());\n                // but we make sure that we don't try to talk to them soon even if we get a new ref\n                _context.shitlist().shitlistRouter(_remoteIdentity.getHash(), \"Invalid protocol version\");\n                throw new DataFormatException(\"Peer uses an invalid version!  dropping\");\n            }\n            \n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"before validateTime...\");\n            boolean timeOk = validateTime();\n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"after validateTime [\" + timeOk + \"]...\");\n            if (!timeOk) {\n                _context.shitlist().shitlistRouter(_remoteIdentity.getHash(), \"Time too far out of sync\");\n                throw new DataFormatException(\"Peer is too far out of sync with the current router's clock!  dropping\");\n            }\n            \n            try {\n                _context.netDb().store(_remoteIdentity.getHash(), _remoteInfo);\n            } catch (IllegalArgumentException iae) {\n                if (_log.shouldLog(Log.ERROR))\n                    _log.error(\"Peer gave us invalid router info\", iae);\n                // not only do we remove the reference to the invalid peer\n                _context.netDb().fail(_remoteIdentity.getHash());\n                // but we make sure that we don't try to talk to them soon even if we get a new ref\n                _context.shitlist().shitlistRouter(_remoteIdentity.getHash(), \"Invalid peer info\");\n                throw new DataFormatException(\"Invalid peer info provided\");\n            }\n            \n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"before validate peer address...\");\n            boolean peerReachable = validatePeerAddress();\n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"after validatePeerAddress [\" + peerReachable + \"]...\");\n            if (!peerReachable) {\n                _context.shitlist().shitlistRouter(_remoteIdentity.getHash(), \"Unreachable address\");\n                throw new DataFormatException(\"Peer provided us with an unreachable router address, and we can't handle restricted routes yet!  dropping\");\n            }\n            \n            if (_log.shouldLog(Log.INFO))\n                _log.info(\"TCP connection \" + _id + \" established with \" + _remoteIdentity.getHash().toBase64());\n            \n            _in = new BandwidthLimitedInputStream(_context, new AESInputStream(_context, _in, _key, _iv), _remoteIdentity);\n            _out = new AESOutputStream(_context, new BufferedOutputStream(new BandwidthLimitedOutputStream(_context, _out, _remoteIdentity), BUF_SIZE), _key, _iv);\n            _socket.setSoTimeout(0);\n            success = _context.clock().now();\n            established();\n            return _remoteIdentity;\n            \n        } catch (IOException ioe) {\n            if (_log.shouldLog(Log.WARN))\n                _log.warn(\"Error establishing connection with \" + _remoteHost + \":\" + _remotePort, ioe);\n            closeConnection();\n            return null;\n        } catch (DataFormatException dfe) {\n            if (_log.shouldLog(Log.WARN))\n                _log.warn(\"Error establishing connection with \" + _remoteHost + \":\" + _remotePort, dfe);\n            closeConnection();\n            return null;\n        } catch (Throwable t) {\n            if (_log.shouldLog(Log.ERROR))\n                _log.error(\"jrandom is paranoid so we're catching it all during establishConnection \" + _remoteHost + \":\" + _remotePort, t);\n            closeConnection();\n            return null;\n        } finally {\n            if (success > 0)\n                _context.statManager().addRateData(\"tcp.establishConnectionTime\", success-start, success-start);\n        }\n    }","id":39478,"modified_method":"public RouterIdentity establishConnection() {\n        long start = _context.clock().now();\n        long success = 0;\n        if (_log.shouldLog(Log.DEBUG)) _log.debug(\"Establishing connection...\");\n        \n        BigInteger myPub = _builder.getMyPublicValue();\n        try {\n            _socket.setSoTimeout(ESTABLISHMENT_TIMEOUT);\n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"Before key exchange...\");\n            exchangeKey();\n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"Key exchanged...\");\n            // key exchanged.  now say who we are and prove it\n            boolean ok = identifyStationToStation();\n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"After station to station [\" + ok + \"]...\");\n            \n            if (!ok) {\n                throw new DataFormatException(\"Station to station identification failed!  MITM?\");\n            }\n            \n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"before validateVersion...\");\n            boolean versionOk = validateVersion();\n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"after validateVersion [\" + versionOk + \"]...\");\n            \n            if (!versionOk) {\n                // not only do we remove the reference to the invalid peer\n                _context.netDb().fail(_remoteIdentity.getHash());\n                // but we make sure that we don't try to talk to them soon even if we get a new ref\n                _context.shitlist().shitlistRouter(_remoteIdentity.getHash(), \"Invalid protocol version\");\n                throw new DataFormatException(\"Peer uses an invalid version!  dropping\");\n            }\n            \n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"before validateTime...\");\n            boolean timeOk = validateTime();\n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"after validateTime [\" + timeOk + \"]...\");\n            if (!timeOk) {\n                _context.shitlist().shitlistRouter(_remoteIdentity.getHash(), \"Time too far out of sync\");\n                throw new DataFormatException(\"Peer is too far out of sync with the current router's clock!  dropping\");\n            }\n            \n            try {\n                _context.netDb().store(_remoteIdentity.getHash(), _remoteInfo);\n            } catch (IllegalArgumentException iae) {\n                if (_log.shouldLog(Log.ERROR))\n                    _log.error(\"Peer gave us invalid router info\", iae);\n                // not only do we remove the reference to the invalid peer\n                _context.netDb().fail(_remoteIdentity.getHash());\n                // but we make sure that we don't try to talk to them soon even if we get a new ref\n                _context.shitlist().shitlistRouter(_remoteIdentity.getHash(), \"Invalid peer info\");\n                throw new DataFormatException(\"Invalid peer info provided\");\n            }\n            \n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"before validate peer address...\");\n            boolean peerReachable = validatePeerAddress();\n            if (_log.shouldLog(Log.DEBUG)) _log.debug(\"after validatePeerAddress [\" + peerReachable + \"]...\");\n            if (!peerReachable) {\n                _context.shitlist().shitlistRouter(_remoteIdentity.getHash(), \"Unreachable address\");\n                throw new DataFormatException(\"Peer provided us with an unreachable router address, and we can't handle restricted routes yet!  dropping\");\n            }\n            \n            if (_log.shouldLog(Log.INFO))\n                _log.info(\"TCP connection \" + _id + \" established with \" + _remoteIdentity.getHash().toBase64());\n            \n            _in = new BandwidthLimitedInputStream(_context, new AESInputStream(_context, _in, _key, _iv), _remoteIdentity);\n            _out = new AESOutputStream(_context, new BufferedOutputStream(new BandwidthLimitedOutputStream(_context, _out, _remoteIdentity), BUF_SIZE), _key, _iv);\n            _socket.setSoTimeout(0);\n            success = _context.clock().now();\n            \n            for (Iterator iter = _remoteInfo.getAddresses().iterator(); iter.hasNext(); ) {\n                RouterAddress curAddr = (RouterAddress)iter.next();\n                if (TCPTransport.STYLE.equals(curAddr.getTransportStyle())) {\n                    _remoteAddress = new TCPAddress(curAddr);\n                    break;\n                }\n            }\n            if (_remoteAddress == null) {\n                throw new DataFormatException(\"wtf, no TCP addresses?  we already verified!\");\n            }\n            \n            established();\n            return _remoteIdentity;\n            \n        } catch (IOException ioe) {\n            if (_log.shouldLog(Log.WARN))\n                _log.warn(\"Error establishing connection with \" + _remoteHost + \":\" + _remotePort, ioe);\n            closeConnection();\n            return null;\n        } catch (DataFormatException dfe) {\n            if (_log.shouldLog(Log.WARN))\n                _log.warn(\"Error establishing connection with \" + _remoteHost + \":\" + _remotePort, dfe);\n            closeConnection();\n            return null;\n        } catch (Throwable t) {\n            if (_log.shouldLog(Log.ERROR))\n                _log.error(\"jrandom is paranoid so we're catching it all during establishConnection \" + _remoteHost + \":\" + _remotePort, t);\n            closeConnection();\n            return null;\n        } finally {\n            if (success > 0)\n                _context.statManager().addRateData(\"tcp.establishConnectionTime\", success-start, success-start);\n        }\n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public TCPAddress(InetAddress addr, int port) {\n\t_host = addr.getHostName();\n\t_addr = addr;\n\t_port = port;\n    }","id":39479,"modified_method":"public TCPAddress(InetAddress addr, int port) {\n        if (addr != null)\n            _host = addr.getHostAddress();\n\t_addr = addr;\n\t_port = port;\n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public TCPAddress(String host, int port) {\n\t_host = host;\n\t_port = port;\n\t_addr = null;\n    }","id":39480,"modified_method":"public TCPAddress(String host, int port) {\n        try {\n            if (host != null) {\n                InetAddress iaddr = InetAddress.getByName(host);\n                _host = iaddr.getHostAddress();\n                _addr = iaddr;\n            }\n            _port = port;\n        } catch (UnknownHostException uhe) {\n            _host = null;\n            _port = -1;\n            _addr = null;\n        }\n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public boolean equals(Object val) {\n\tif ( (val != null) && (val instanceof TCPAddress) ) {\n\t    TCPAddress addr = (TCPAddress)val;\n\t    if (getAddress().getHostAddress() != null)\n\t\treturn DataHelper.eq(getAddress().getHostAddress(), addr.getAddress().getHostAddress()) &&\n \t\t       (getPort() == addr.getPort());\n\t    else\n\t\treturn DataHelper.eq(getHost(), addr.getHost()) &&\n\t\t       (getPort() == addr.getPort());\n\t} \n\treturn false;\n    }","id":39481,"modified_method":"public boolean equals(Object val) {\n\tif ( (val != null) && (val instanceof TCPAddress) ) {\n\t    TCPAddress addr = (TCPAddress)val;\n\t    if ( (_addr != null) && (_addr.getHostAddress() != null) ) {\n\t\treturn DataHelper.eq(getAddress().getHostAddress(), addr.getAddress().getHostAddress()) &&\n \t\t       (getPort() == addr.getPort());\n            } else {\n\t\treturn DataHelper.eq(getHost(), addr.getHost()) &&\n\t\t       (getPort() == addr.getPort());\n            }\n\t} \n\treturn false;\n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public TCPAddress(RouterAddress addr) {\n\tif (addr == null) throw new IllegalArgumentException(\"Null router address\");\n\t_host = addr.getOptions().getProperty(PROP_HOST);\n\tString port = addr.getOptions().getProperty(PROP_PORT);\n\tif ( (port != null) && (port.trim().length() > 0) ) {\n\t    try {\n\t\t_port = Integer.parseInt(port);\n\t    } catch (NumberFormatException nfe) {\n\t\t_log.error(\"Invalid port [\" + port + \"]\", nfe);\n\t\t_port = -1;\n\t    }\n\t} else {\n\t    _port = -1;\n\t}\n    }","id":39482,"modified_method":"public TCPAddress(RouterAddress addr) {\n\tif (addr == null) throw new IllegalArgumentException(\"Null router address\");\n        String host = addr.getOptions().getProperty(PROP_HOST);\n        try {\n            InetAddress iaddr = InetAddress.getByName(host);\n            _host = iaddr.getHostAddress();\n            _addr = iaddr;\n            \n            String port = addr.getOptions().getProperty(PROP_PORT);\n            if ( (port != null) && (port.trim().length() > 0) ) {\n                try {\n                    _port = Integer.parseInt(port);\n                } catch (NumberFormatException nfe) {\n                    _log.error(\"Invalid port [\" + port + \"]\", nfe);\n                    _port = -1;\n                }\n            } else {\n                _port = -1;\n            }\n        } catch (UnknownHostException uhe) {\n            _host = null;\n            _port = -1;\n        }\n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public TCPConnection(RouterContext context, Socket s, boolean locallyInitiated) throws IOException {\n        _context = context;\n        _log = context.logManager().getLog(TCPConnection.class);\n        _context.statManager().createRateStat(\"tcp.queueSize\", \"How many messages were already in the queue when a new message was added (only when it wasnt empty)?\", \n                                              \"TCP Transport\", new long[] { 60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createRateStat(\"tcp.writeTimeLarge\", \"How long it takes to write a message that is over 2K?\", \n                                              \"TCP Transport\", new long[] { 60*1000l, 10*60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createRateStat(\"tcp.writeTimeSmall\", \"How long it takes to write a message that is under 2K?\", \n                                              \"TCP Transport\", new long[] { 60*1000l, 10*60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createRateStat(\"tcp.writeTimeSlow\", \"How long it takes to write a message (ignoring messages transferring in under a second)?\", \n                                              \"TCP Transport\", new long[] { 60*1000l, 10*60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _id = ++_idCounter;\n        _weInitiated = locallyInitiated;\n        _closed = false;\n        _socket = s;\n        _created = -1;\n        _toBeSent = new ArrayList();\n        try {\n            _in = _socket.getInputStream();\n            _out = _socket.getOutputStream();\n        } catch (IOException ioe) {\n            _log.error(\"Error getting streams for the connection\", ioe);\n        }\n        _builder = new DHSessionKeyBuilder();\n        _extraBytes = null;\n\n        // sun keeps the socket's InetAddress around after its been closed, but kaffe (and the rest of classpath)\n        // doesn't, so we've got to check & cache it here if we want to log it later.  (kaffe et al are acting per\n        // spec, btw)\n        try {\n            _remoteHost = s.getInetAddress() + \"\";\n            _remotePort = s.getPort();\n        } catch (NullPointerException npe) {\n            throw new IOException(\"kaffe is being picky since the socket closed too fast...\");\n        }\n        if (_log.shouldLog(Log.INFO))\n            _log.info(\"Connected with peer: \" + _remoteHost + \":\" + _remotePort);\n    }","id":39483,"modified_method":"public TCPConnection(RouterContext context, Socket s, boolean locallyInitiated) throws IOException {\n        _context = context;\n        _log = context.logManager().getLog(TCPConnection.class);\n        _context.statManager().createRateStat(\"tcp.queueSize\", \"How many messages were already in the queue when a new message was added (only when it wasnt empty)?\", \n                                              \"TCP Transport\", new long[] { 60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createRateStat(\"tcp.writeTimeLarge\", \"How long it takes to write a message that is over 2K?\", \n                                              \"TCP Transport\", new long[] { 60*1000l, 10*60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createRateStat(\"tcp.writeTimeSmall\", \"How long it takes to write a message that is under 2K?\", \n                                              \"TCP Transport\", new long[] { 60*1000l, 10*60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createRateStat(\"tcp.writeTimeSlow\", \"How long it takes to write a message (ignoring messages transferring in under a second)?\", \n                                              \"TCP Transport\", new long[] { 60*1000l, 10*60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _id = ++_idCounter;\n        _weInitiated = locallyInitiated;\n        _closed = false;\n        _socket = s;\n        _created = -1;\n        _toBeSent = new ArrayList();\n        try {\n            _in = _socket.getInputStream();\n            _out = _socket.getOutputStream();\n        } catch (IOException ioe) {\n            _log.error(\"Error getting streams for the connection\", ioe);\n        }\n        _builder = new DHSessionKeyBuilder();\n        _extraBytes = null;\n\n        // sun keeps the socket's InetAddress around after its been closed, but kaffe (and the rest of classpath)\n        // doesn't, so we've got to check & cache it here if we want to log it later.  (kaffe et al are acting per\n        // spec, btw)\n        try {\n            InetAddress addr = s.getInetAddress();\n            if (addr != null) {\n                _remoteHost = addr.getHostAddress();\n            }\n            _remotePort = s.getPort();\n            if (locallyInitiated)\n                _remoteAddress = new TCPAddress(_remoteHost, _remotePort);\n        } catch (NullPointerException npe) {\n            throw new IOException(\"kaffe is being picky since the socket closed too fast...\");\n        }\n        if (_log.shouldLog(Log.INFO))\n            _log.info(\"Connected with peer: \" + _remoteHost + \":\" + _remotePort);\n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public RouterIdentity establishConnection() {\n        BigInteger myPub = _builder.getMyPublicValue();\n        try {\n            _socket.setSoTimeout(ESTABLISHMENT_TIMEOUT);\n            exchangeKey();\n            // key exchanged.  now say who we are and prove it\n            boolean ok = identifyStationToStation();\n\n            if (!ok)\n                throw new DataFormatException(\"Station to station identification failed!  MITM?\");\n            else {\n                if (_log.shouldLog(Log.INFO))\n                    _log.info(\"TCP connection \" + _id + \" established with \" \n                              + _remoteIdentity.getHash().toBase64());\n                _in = new AESInputStream(_context, new BandwidthLimitedInputStream(_context, _in, _remoteIdentity), _key, _iv);\n                _out = new AESOutputStream(_context, new BandwidthLimitedOutputStream(_context, _out, _remoteIdentity), _key, _iv);\n                _socket.setSoTimeout(0);\n                established();\n                return _remoteIdentity;\n            }\n        } catch (IOException ioe) {\n            if (_log.shouldLog(Log.ERROR))\n                _log.error(\"Error establishing connection\", ioe);\n            closeConnection();\n            return null;\n        } catch (DataFormatException dfe) {\n            if (_log.shouldLog(Log.ERROR))\n                _log.error(\"Error establishing connection\", dfe);\n            closeConnection();\n            return null;\n        } catch (Throwable t) {\n            if (_log.shouldLog(Log.ERROR))\n                _log.error(\"jrandom is paranoid so we're catching it all during establishConnection\", t);\n            closeConnection();\n            return null;\n        } \n    }","id":39484,"modified_method":"public RouterIdentity establishConnection() {\n        BigInteger myPub = _builder.getMyPublicValue();\n        try {\n            _socket.setSoTimeout(ESTABLISHMENT_TIMEOUT);\n            exchangeKey();\n            // key exchanged.  now say who we are and prove it\n            boolean ok = identifyStationToStation();\n\n            if (!ok)\n                throw new DataFormatException(\"Station to station identification failed!  MITM?\");\n            else {\n                if (_log.shouldLog(Log.INFO))\n                    _log.info(\"TCP connection \" + _id + \" established with \" \n                              + _remoteIdentity.getHash().toBase64());\n                _in = new AESInputStream(_context, new BandwidthLimitedInputStream(_context, _in, _remoteIdentity), _key, _iv);\n                _out = new AESOutputStream(_context, new BandwidthLimitedOutputStream(_context, _out, _remoteIdentity), _key, _iv);\n                _socket.setSoTimeout(0);\n                \n                for (Iterator iter = _remoteInfo.getAddresses().iterator(); iter.hasNext(); ) {\n                    RouterAddress curAddr = (RouterAddress)iter.next();\n                    if (TCPTransport.STYLE.equals(curAddr.getTransportStyle())) {\n                        _remoteAddress = new TCPAddress(curAddr);\n                        break;\n                    }\n                }\n                if (_remoteAddress == null) {\n                    throw new DataFormatException(\"wtf, peer \" + _remoteIdentity.calculateHash().toBase64() \n                                                  + \" unreachable?  we already verified!\");\n                }\n                established();\n                return _remoteIdentity;\n            }\n        } catch (IOException ioe) {\n            if (_log.shouldLog(Log.ERROR))\n                _log.error(\"Error establishing connection\", ioe);\n            closeConnection();\n            return null;\n        } catch (DataFormatException dfe) {\n            if (_log.shouldLog(Log.ERROR))\n                _log.error(\"Error establishing connection\", dfe);\n            closeConnection();\n            return null;\n        } catch (Throwable t) {\n            if (_log.shouldLog(Log.ERROR))\n                _log.error(\"jrandom is paranoid so we're catching it all during establishConnection\", t);\n            closeConnection();\n            return null;\n        } \n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public TCPTransport(RouterContext context, RouterAddress address) {\n        super(context);\n        _log = context.logManager().getLog(TCPTransport.class);\n        if (_context == null) throw new RuntimeException(\"Context is null\");\n        if (_context.statManager() == null) throw new RuntimeException(\"Stat manager is null\");\n        _context.statManager().createFrequencyStat(\"tcp.attemptFailureFrequency\", \"How often do we attempt to contact someone, and fail?\", \"TCP Transport\", new long[] { 60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createFrequencyStat(\"tcp.attemptSuccessFrequency\", \"How often do we attempt to contact someone, and succeed?\", \"TCP Transport\", new long[] { 60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createFrequencyStat(\"tcp.acceptFailureFrequency\", \"How often do we reject someone who contacts us?\", \"TCP Transport\", new long[] { 60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createFrequencyStat(\"tcp.acceptSuccessFrequency\", \"How often do we accept someone who contacts us?\", \"TCP Transport\", new long[] { 60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createRateStat(\"tcp.connectionLifetime\", \"How long do connections last (measured when they close)?\", \"TCP Transport\", new long[] { 60*1000l, 60*60*1000l, 24*60*60*1000l });\n\n        _listeners = new ArrayList();\n        _connections = new HashMap();\n        _msgs = new HashMap();\n        _address = address;\n        if (address != null) {\n            _listenHost = address.getOptions().getProperty(TCPAddress.PROP_HOST);\n            String portStr = address.getOptions().getProperty(TCPAddress.PROP_PORT);\n            try {\n                _listenPort = Integer.parseInt(portStr);\n            } catch (NumberFormatException nfe) {\n                _log.error(\"Invalid port: \" + portStr + \" Address: \\n\" + address, nfe);\n            }\n        }\n        _listenAddressIsValid = false;\n        try {\n            String setting = _context.router().getConfigSetting(PROP_LISTEN_IS_VALID);\n            _listenAddressIsValid = Boolean.TRUE.toString().equalsIgnoreCase(setting);\n        } catch (Throwable t) {\n            _listenAddressIsValid = false;\n            if (_log.shouldLog(Log.WARN))\n                _log.warn(\"Unable to determine whether TCP listening address is valid, so we're assuming it isn't.  Set \" + PROP_LISTEN_IS_VALID + \" otherwise\");\n        }\n        _running = false;\n    }","id":39485,"modified_method":"public TCPTransport(RouterContext context, RouterAddress address) {\n        super(context);\n        _log = context.logManager().getLog(TCPTransport.class);\n        if (_context == null) throw new RuntimeException(\"Context is null\");\n        if (_context.statManager() == null) throw new RuntimeException(\"Stat manager is null\");\n        _context.statManager().createFrequencyStat(\"tcp.attemptFailureFrequency\", \"How often do we attempt to contact someone, and fail?\", \"TCP Transport\", new long[] { 60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createFrequencyStat(\"tcp.attemptSuccessFrequency\", \"How often do we attempt to contact someone, and succeed?\", \"TCP Transport\", new long[] { 60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createFrequencyStat(\"tcp.acceptFailureFrequency\", \"How often do we reject someone who contacts us?\", \"TCP Transport\", new long[] { 60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createFrequencyStat(\"tcp.acceptSuccessFrequency\", \"How often do we accept someone who contacts us?\", \"TCP Transport\", new long[] { 60*1000l, 60*60*1000l, 24*60*60*1000l });\n        _context.statManager().createRateStat(\"tcp.connectionLifetime\", \"How long do connections last (measured when they close)?\", \"TCP Transport\", new long[] { 60*1000l, 60*60*1000l, 24*60*60*1000l });\n\n        _listeners = new ArrayList();\n        _connections = new HashMap();\n        _connectionAddresses = new HashMap();\n        _msgs = new HashMap();\n        _address = address;\n        if (address != null) {\n            _listenHost = address.getOptions().getProperty(TCPAddress.PROP_HOST);\n            String portStr = address.getOptions().getProperty(TCPAddress.PROP_PORT);\n            try {\n                _listenPort = Integer.parseInt(portStr);\n            } catch (NumberFormatException nfe) {\n                _log.error(\"Invalid port: \" + portStr + \" Address: \\n\" + address, nfe);\n            }\n            _tcpAddress = new TCPAddress(_listenHost, _listenPort);\n        }\n        _listenAddressIsValid = false;\n        try {\n            String setting = _context.router().getConfigSetting(PROP_LISTEN_IS_VALID);\n            _listenAddressIsValid = Boolean.TRUE.toString().equalsIgnoreCase(setting);\n        } catch (Throwable t) {\n            _listenAddressIsValid = false;\n            if (_log.shouldLog(Log.WARN))\n                _log.warn(\"Unable to determine whether TCP listening address is valid, so we're assuming it isn't.  Set \" + PROP_LISTEN_IS_VALID + \" otherwise\");\n        }\n        _running = false;\n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public void stopListening() {\n        if (_log.shouldLog(Log.ERROR))\n            _log.error(\"Stop listening called!  No more TCP\", new Exception(\"Die tcp, die\"));\n        _running = false;\n        \n        for (int i = 0; i < _listeners.size(); i++) {\n            TCPListener lsnr = (TCPListener)_listeners.get(i);\n            lsnr.stopListening();\n        }\n        Set allCons = new HashSet();\n        synchronized (_connections) {\n            for (Iterator iter = _connections.values().iterator(); iter.hasNext(); ) {\n                List cons = (List)iter.next();\n                for (Iterator citer = cons.iterator(); citer.hasNext(); ) {\n                    TCPConnection con = (TCPConnection)citer.next();\n                    allCons.add(con);\n                }\n            }\n        }\n        for (Iterator iter = allCons.iterator(); iter.hasNext(); ) {\n            TCPConnection con = (TCPConnection)iter.next();\n            con.closeConnection();\n        }\n    }","id":39486,"modified_method":"public void stopListening() {\n        if (_log.shouldLog(Log.ERROR))\n            _log.error(\"Stop listening called!  No more TCP\", new Exception(\"Die tcp, die\"));\n        _running = false;\n        \n        for (int i = 0; i < _listeners.size(); i++) {\n            TCPListener lsnr = (TCPListener)_listeners.get(i);\n            lsnr.stopListening();\n        }\n        Set allCons = new HashSet();\n        synchronized (_connections) {\n            for (Iterator iter = _connections.values().iterator(); iter.hasNext(); ) {\n                List cons = (List)iter.next();\n                for (Iterator citer = cons.iterator(); citer.hasNext(); ) {\n                    TCPConnection con = (TCPConnection)citer.next();\n                    allCons.add(con);\n                }\n            }\n            _connectionAddresses.clear();\n        }\n        for (Iterator iter = allCons.iterator(); iter.hasNext(); ) {\n            TCPConnection con = (TCPConnection)iter.next();\n            con.closeConnection();\n        }\n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"void connectionClosed(TCPConnection con) {\n        if (_log.shouldLog(Log.INFO))\n            _log.info(\"Connection closed with \" + con.getRemoteRouterIdentity());\n        StringBuffer buf = new StringBuffer(256);\n        buf.append(\"Still connected to: \");\n        synchronized (_connections) {\n            List cons = (List)_connections.get(con.getRemoteRouterIdentity());\n            if ( (cons != null) && (cons.size() > 0) ) {\n                cons.remove(con);\n                long lifetime = con.getLifetime();\n                if (_log.shouldLog(Log.INFO))\n                    _log.info(\"Connection closed (with remaining) after lifetime \" + lifetime);\n                _context.statManager().addRateData(\"tcp.connectionLifetime\", lifetime, 0);\n            }\n            Set toRemove = new HashSet();\n            for (Iterator iter = _connections.keySet().iterator(); iter.hasNext();) {\n                RouterIdentity ident = (RouterIdentity)iter.next();\n                List all = (List)_connections.get(ident);\n                if (all.size() > 0)\n                    buf.append(ident.getHash().toBase64()).append(\" \");\n                else\n                    toRemove.add(ident);\n            }\n            for (Iterator iter = toRemove.iterator(); iter.hasNext(); ) {\n                _connections.remove(iter.next());\n            }\n        }\n        if (_log.shouldLog(Log.INFO))\n            _log.info(buf.toString());\n        //if (con.getRemoteRouterIdentity() != null)\n    }","id":39487,"modified_method":"void connectionClosed(TCPConnection con) {\n        if (_log.shouldLog(Log.INFO))\n            _log.info(\"Connection closed with \" + con.getRemoteRouterIdentity());\n        StringBuffer buf = new StringBuffer(256);\n        buf.append(\"Still connected to: \");\n        synchronized (_connections) {\n            List cons = (List)_connections.get(con.getRemoteRouterIdentity());\n            if ( (cons != null) && (cons.size() > 0) ) {\n                cons.remove(con);\n                long lifetime = con.getLifetime();\n                if (_log.shouldLog(Log.INFO))\n                    _log.info(\"Connection closed (with remaining) after lifetime \" + lifetime);\n                _context.statManager().addRateData(\"tcp.connectionLifetime\", lifetime, 0);\n            }\n            Set toRemove = new HashSet();\n            for (Iterator iter = _connections.keySet().iterator(); iter.hasNext();) {\n                RouterIdentity ident = (RouterIdentity)iter.next();\n                List all = (List)_connections.get(ident);\n                if (all.size() > 0)\n                    buf.append(ident.getHash().toBase64()).append(\" \");\n                else\n                    toRemove.add(ident);\n            }\n            for (Iterator iter = toRemove.iterator(); iter.hasNext(); ) {\n                _connections.remove(iter.next());\n            }\n        }\n        \n        TCPAddress address = con.getRemoteAddress();\n        if (address != null) {\n            synchronized (_connectionAddresses) {\n                _connectionAddresses.remove(address);\n            }\n        }\n        if (_log.shouldLog(Log.INFO))\n            _log.info(buf.toString());\n        //if (con.getRemoteRouterIdentity() != null)\n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     * Add a new message to the outbound pool to be established asap (may be sent\n     * along existing connections if they appear later)\n     *\n     */\n    public void addPending(OutNetMessage msg) {\n        synchronized (_msgs) {\n            Hash target = msg.getTarget().getIdentity().getHash();\n            PendingMessages msgs = (PendingMessages)_msgs.get(target);\n            if (msgs == null) {\n                msgs = new PendingMessages(msg.getTarget());\n                msgs.addPending(msg);\n                _msgs.put(target, msgs);\n                if (_log.shouldLog(Log.DEBUG))\n                    _log.debug(\"Adding a pending to new \" + target.toBase64());\n            } else {\n                msgs.addPending(msg);\n                if (_log.shouldLog(Log.DEBUG))\n                    _log.debug(\"Adding a pending to existing \" + target.toBase64());\n            }\n            int level = Log.INFO;\n            if (msgs.getMessageCount() > 1)\n                level = Log.WARN;\n            if (_log.shouldLog(level))\n                _log.log(level, \"Add message to \" + target.toBase64() + \", making a total of \" + msgs.getMessageCount() + \" for them, with another \" + (_msgs.size() -1) + \" peers pending establishment\");\n            _msgs.notifyAll();\n        }\n        msg.timestamp(\"TCPTransport.addPending finished and notified\");\n    }","id":39488,"modified_method":"/**\n     * Add a new message to the outbound pool to be established asap (may be sent\n     * along existing connections if they appear later)\n     *\n     */\n    public void addPending(OutNetMessage msg) {\n        synchronized (_msgs) {\n            Hash target = msg.getTarget().getIdentity().getHash();\n            PendingMessages msgs = (PendingMessages)_msgs.get(target);\n            if (msgs == null) {\n                msgs = new PendingMessages(msg.getTarget());\n                msgs.addPending(msg);\n                _msgs.put(target, msgs);\n                if (_log.shouldLog(Log.DEBUG))\n                    _log.debug(\"Adding a pending to new \" + target.toBase64());\n            } else {\n                msgs.addPending(msg);\n                if (_log.shouldLog(Log.DEBUG))\n                    _log.debug(\"Adding a pending to existing \" + target.toBase64());\n            }\n            int level = Log.INFO;\n            if (msgs.getMessageCount() > 2)\n                level = Log.WARN;\n            if (_log.shouldLog(level))\n                _log.log(level, \"Add message to \" + target.toBase64() + \", making a total of \" + msgs.getMessageCount() + \" for them, with another \" + (_msgs.size() -1) + \" peers pending establishment\");\n            _msgs.notifyAll();\n        }\n        msg.timestamp(\"TCPTransport.addPending finished and notified\");\n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"boolean handleConnection(TCPConnection con, RouterInfo target) {\n        con.setTransport(this);\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Before establishing connection\");\n        long start = _context.clock().now();\n        RouterIdentity ident = con.establishConnection();\n        long afterEstablish = _context.clock().now();\n        long startRunning = 0;\n        \n        if (ident == null) {\n            _context.statManager().updateFrequency(\"tcp.acceptFailureFrequency\");\n            con.closeConnection();\n            return false;\n        }\n        \n        if (_log.shouldLog(Log.INFO))\n            _log.info(\"Connection established with \" + ident + \" after \" + (afterEstablish-start) + \"ms\");\n        if (target != null) {\n            if (!target.getIdentity().equals(ident)) {\n                _context.statManager().updateFrequency(\"tcp.acceptFailureFrequency\");\n                if (_log.shouldLog(Log.ERROR))\n                    _log.error(\"Target changed identities!!!  was \" + target.getIdentity().getHash().toBase64() + \", now is \" + ident.getHash().toBase64() + \"!  DROPPING CONNECTION\");\n                con.closeConnection();\n                // remove the old ref, since they likely just created a new identity\n                _context.netDb().fail(target.getIdentity().getHash());\n                _context.shitlist().shitlistRouter(target.getIdentity().getHash(), \"Peer changed identities\");\n                return false;\n            } else {\n                if (_log.shouldLog(Log.DEBUG))\n                    _log.debug(\"Target is the same as who we connected with\");\n            }\n        }\n        if (ident != null) {\n            Set toClose = new HashSet(4);\n            List toAdd = new LinkedList();\n            synchronized (_connections) {\n                if (!_connections.containsKey(ident))\n                    _connections.put(ident, new ArrayList(2));\n                List cons = (List)_connections.get(ident);\n                if (cons.size() > 0) {\n                    if (_log.shouldLog(Log.WARN))\n                        _log.warn(\"Attempted to open additional connections with \" + ident.getHash() + \": closing older connections\", new Exception(\"multiple cons\"));\n                    while (cons.size() > 0) {\n                        TCPConnection oldCon = (TCPConnection)cons.remove(0);\n                        toAdd.addAll(oldCon.getPendingMessages());\n                        toClose.add(oldCon);\n                    }\n                }\n                cons.add(con);\n                \n                Set toRemove = new HashSet();\n                for (Iterator iter = _connections.keySet().iterator(); iter.hasNext();) {\n                    RouterIdentity cur = (RouterIdentity)iter.next();\n                    List all = (List)_connections.get(cur);\n                    if (all.size() <= 0)\n                        toRemove.add(ident);\n                }\n                for (Iterator iter = toRemove.iterator(); iter.hasNext(); ) {\n                    _connections.remove(iter.next());\n                }\n            }\n            \n            if (toAdd.size() > 0) {\n                for (Iterator iter = toAdd.iterator(); iter.hasNext(); ) {\n                    OutNetMessage msg = (OutNetMessage)iter.next();\n                    con.addMessage(msg);\n                }\n                if (_log.shouldLog(Log.INFO))\n                    _log.info(\"Transferring \" + toAdd.size() + \" messages from old cons to the newly established con\");\n            }\n            \n            _context.shitlist().unshitlistRouter(ident.getHash());\n            con.runConnection();\n            startRunning = _context.clock().now();\n            \n            if (toClose.size() > 0) {\n                for (Iterator iter = toClose.iterator(); iter.hasNext(); ) {\n                    TCPConnection oldCon = (TCPConnection)iter.next();\n                    if (_log.shouldLog(Log.INFO))\n                        _log.info(\"Closing old duplicate connection \" + oldCon.toString(), new Exception(\"Closing old con\"));\n                    oldCon.closeConnection();\n                    _context.statManager().addRateData(\"tcp.connectionLifetime\", oldCon.getLifetime(), 0);\n                }\n            }\n            long done = _context.clock().now();\n            \n            long diff = done - start;\n            if ( (diff > 3*1000) && (_log.shouldLog(Log.WARN)) ) {\n                _log.warn(\"handleConnection took too long: \" + diff + \"ms with \" +\n                (afterEstablish-start) + \"ms to establish \" +\n                (startRunning-afterEstablish) + \"ms to start running \" +\n                (done-startRunning) + \"ms to cleanup\");\n            }\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"runConnection called on the con\");\n        }\n        \n        _context.statManager().updateFrequency(\"tcp.acceptSuccessFrequency\");\n        return true;\n    }","id":39489,"modified_method":"boolean handleConnection(TCPConnection con, RouterInfo target) {\n        con.setTransport(this);\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Before establishing connection\");\n        TCPAddress remAddr = con.getRemoteAddress();\n        if (remAddr != null) {\n            synchronized (_connectionAddresses) {\n                if (_connectionAddresses.containsKey(remAddr)) {\n                    if (_log.shouldLog(Log.WARN))\n                        _log.warn(\"refusing connection from \" + remAddr + \" as it is a dup\");\n                    con.closeConnection();\n                    return false;\n                }\n            }\n        \n            if (_tcpAddress.equals(remAddr)) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"refusing connection to ourselves...\");\n                _context.shitlist().shitlistRouter(target.getIdentity().getHash(), \"Our old address\");\n                _context.netDb().fail(target.getIdentity().getHash());\n                con.closeConnection();\n                return false;\n            }\n        } else {\n            //if (_log.shouldLog(Log.WARN))\n            //    _log.warn(\"Why do we not have a remoteAddress for \" + con, new Exception(\"hrm\"));\n        }\n        \n        long start = _context.clock().now();\n        RouterIdentity ident = con.establishConnection();\n        long afterEstablish = _context.clock().now();\n        long startRunning = 0;\n        \n        if (ident == null) {\n            _context.statManager().updateFrequency(\"tcp.acceptFailureFrequency\");\n            con.closeConnection();\n            return false;\n        }\n        \n        if (ident.equals(_context.router().getRouterInfo().getIdentity())) {\n            if (_log.shouldLog(Log.WARN))\n                _log.warn(\"Dropping established connection with *cough* ourselves: listenHost=[\" \n                          + _tcpAddress.getHost() + \"] listenPort=[\" +_tcpAddress.getPort()+ \"] remoteHost=[\"\n                          + remAddr.getHost() + \"] remPort=[\" + remAddr.getPort() + \"]\");\n            con.closeConnection();\n            return false;\n        }\n        \n        if (_log.shouldLog(Log.INFO))\n            _log.info(\"Connection established with \" + ident + \" after \" + (afterEstablish-start) + \"ms\");\n        if (target != null) {\n            if (!target.getIdentity().equals(ident)) {\n                //_context.statManager().updateFrequency(\"tcp.acceptFailureFrequency\");\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"Target changed identities!  was \" + target.getIdentity().getHash().toBase64() + \", now is \" + ident.getHash().toBase64() + \"!\");\n                // remove the old ref, since they likely just created a new identity\n                _context.netDb().fail(target.getIdentity().getHash());\n                _context.shitlist().shitlistRouter(target.getIdentity().getHash(), \"Peer changed identities\");\n                //return false;\n            } else {\n                if (_log.shouldLog(Log.DEBUG))\n                    _log.debug(\"Target is the same as who we connected with\");\n            }\n        }\n        if (ident != null) {\n            Set toClose = new HashSet(4);\n            List toAdd = new ArrayList(1);\n            List cons = null;\n            synchronized (_connections) {\n                if (!_connections.containsKey(ident))\n                    _connections.put(ident, new ArrayList(2));\n                cons = (List)_connections.get(ident);\n                if (cons.size() > 0) {\n                    if (_log.shouldLog(Log.WARN)) {\n                        _log.warn(\"Attempted to open additional connections with \" + ident.getHash() + \": closing older connections\", new Exception(\"multiple cons\"));\n\n                        StringBuffer buf = new StringBuffer(128);\n                        if (remAddr == null)\n                            remAddr = con.getRemoteAddress();\n                        buf.append(\"Connection address: [\").append(remAddr.toString()).append(']');\n                        synchronized (_connectionAddresses) {\n                            if (_connectionAddresses.containsKey(remAddr)) {\n                                buf.append(\" NOT KNOWN in: \");\n                            } else {\n                                buf.append(\" KNOWN IN: \");\n                            }\n                            for (Iterator iter = _connectionAddresses.keySet().iterator(); iter.hasNext(); ) {\n                                TCPAddress curAddr = (TCPAddress)iter.next();\n                                buf.append('[').append(curAddr.toString()).append(\"] \");\n                            }\n                        }\n                        _log.warn(buf.toString());\n                    }\n            \n                    while (cons.size() > 0) {\n                        TCPConnection oldCon = (TCPConnection)cons.remove(0);\n                        toAdd.addAll(oldCon.getPendingMessages());\n                        toClose.add(oldCon);\n                    }\n                }\n                cons.add(con);\n                \n                Set toRemove = new HashSet();\n                for (Iterator iter = _connections.keySet().iterator(); iter.hasNext();) {\n                    RouterIdentity cur = (RouterIdentity)iter.next();\n                    List all = (List)_connections.get(cur);\n                    if (all.size() <= 0)\n                        toRemove.add(ident);\n                }\n                for (Iterator iter = toRemove.iterator(); iter.hasNext(); ) {\n                    _connections.remove(iter.next());\n                }\n            }\n            \n            synchronized (_connectionAddresses) {\n                _connectionAddresses.put(con.getRemoteAddress(), cons);\n            }\n            \n            if (toAdd.size() > 0) {\n                for (Iterator iter = toAdd.iterator(); iter.hasNext(); ) {\n                    OutNetMessage msg = (OutNetMessage)iter.next();\n                    con.addMessage(msg);\n                }\n                if (_log.shouldLog(Log.INFO))\n                    _log.info(\"Transferring \" + toAdd.size() + \" messages from old cons to the newly established con\");\n            }\n            \n            _context.shitlist().unshitlistRouter(ident.getHash());\n            con.runConnection();\n            startRunning = _context.clock().now();\n            \n            if (toClose.size() > 0) {\n                for (Iterator iter = toClose.iterator(); iter.hasNext(); ) {\n                    TCPConnection oldCon = (TCPConnection)iter.next();\n                    if (_log.shouldLog(Log.INFO))\n                        _log.info(\"Closing old duplicate connection \" + oldCon.toString(), new Exception(\"Closing old con\"));\n                    oldCon.closeConnection();\n                    _context.statManager().addRateData(\"tcp.connectionLifetime\", oldCon.getLifetime(), 0);\n                }\n            }\n            long done = _context.clock().now();\n            \n            long diff = done - start;\n            if ( (diff > 3*1000) && (_log.shouldLog(Log.WARN)) ) {\n                _log.warn(\"handleConnection took too long: \" + diff + \"ms with \" +\n                (afterEstablish-start) + \"ms to establish \" +\n                (startRunning-afterEstablish) + \"ms to start running \" +\n                (done-startRunning) + \"ms to cleanup\");\n            }\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"runConnection called on the con\");\n        }\n        \n        _context.statManager().updateFrequency(\"tcp.acceptSuccessFrequency\");\n        return true;\n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public PendingMessages(RouterInfo peer) {\n            _messages = new LinkedList();\n            _peerInfo = peer;\n            _peer = peer.getIdentity().getHash();\n            _establisher = null;\n        }","id":39490,"modified_method":"public PendingMessages(RouterInfo peer) {\n            _messages = new ArrayList(2);\n            _peerInfo = peer;\n            _peer = peer.getIdentity().getHash();\n            _establisher = null;\n        }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"protected boolean establishConnection(RouterInfo target) {\n        long startEstablish = 0;\n        long socketCreated = 0;\n        long conCreated = 0;\n        long conEstablished = 0;\n        try {\n            for (Iterator iter = target.getAddresses().iterator(); iter.hasNext(); ) {\n                RouterAddress addr = (RouterAddress)iter.next();\n                startEstablish = _context.clock().now();\n                if (getStyle().equals(addr.getTransportStyle())) {\n                    if (_log.shouldLog(Log.DEBUG))\n                        _log.debug(\"Establishing a connection with address \" + addr);\n                    Socket s = createSocket(addr);\n                    socketCreated = _context.clock().now();\n                    if (s == null) {\n                        if (_log.shouldLog(Log.WARN))\n                            _log.warn(\"Unable to establish a socket in time to \" + addr);\n                        _context.profileManager().commErrorOccurred(target.getIdentity().getHash());\n                        _context.shitlist().shitlistRouter(target.getIdentity().getHash(), \"Unable to contact host\");\n                        return false;\n                    }\n                    if (_log.shouldLog(Log.DEBUG))\n                        _log.debug(\"Socket created\");\n                    \n                    TCPConnection con = new RestrictiveTCPConnection(_context, s, true);\n                    conCreated = _context.clock().now();\n                    if (_log.shouldLog(Log.DEBUG))\n                        _log.debug(\"TCPConnection created\");\n                    boolean established = handleConnection(con, target);\n                    conEstablished = _context.clock().now();\n                    if (_log.shouldLog(Log.DEBUG))\n                        _log.debug(\"connection handled\");\n                    return established;\n                }\n            }\n\n            _context.shitlist().shitlistRouter(target.getIdentity().getHash(), \"No addresses we can handle\");\n            return false;\n        } catch (Throwable t) {\n            if (_log.shouldLog(Log.WARN))\n                _log.warn(\"Unexpected error establishing the connection\", t);\n            _context.shitlist().shitlistRouter(target.getIdentity().getHash(), \"Internal error connecting\");\n            return false;\n        } finally {\n            long diff = conEstablished - startEstablish;\n            if ( ( (diff > 6000) || (conEstablished == 0) ) && (_log.shouldLog(Log.WARN)) )  {\n                _log.warn(\"establishConnection took too long: socketCreate: \" +\n                (socketCreated-startEstablish) + \"ms conCreated: \" +\n                (conCreated-socketCreated) + \"ms conEstablished: \" +\n                (conEstablished - conCreated) + \"ms overall: \" + diff);\n            }\n        }        \n    }","id":39491,"modified_method":"protected boolean establishConnection(RouterInfo target) {\n        long startEstablish = 0;\n        long socketCreated = 0;\n        long conCreated = 0;\n        long conEstablished = 0;\n        try {\n            for (Iterator iter = target.getAddresses().iterator(); iter.hasNext(); ) {\n                RouterAddress addr = (RouterAddress)iter.next();\n                startEstablish = _context.clock().now();\n                if (getStyle().equals(addr.getTransportStyle())) {\n\n                    TCPAddress tcpAddr = new TCPAddress(addr);\n                    synchronized (_connectionAddresses) {\n                        if (_connectionAddresses.containsKey(tcpAddr)) {\n                            if (_log.shouldLog(Log.WARN))\n                                _log.warn(\"We already have a connection to another router at \" + tcpAddr);\n                            _context.shitlist().shitlistRouter(target.getIdentity().getHash(), \"Duplicate TCP address (changed identities?)\");\n                            _context.netDb().fail(target.getIdentity().getHash());\n                            return false;\n                        }\n                    }\n                    \n                    if (tcpAddr.equals(_tcpAddress)) {\n                        if (_log.shouldLog(Log.WARN))\n                            _log.warn(\"Peer \" + target.getIdentity().getHash().toBase64() \n                                      + \" has OUR address [\" + tcpAddr + \"]\");\n                        _context.profileManager().commErrorOccurred(target.getIdentity().getHash());\n                        _context.shitlist().shitlistRouter(target.getIdentity().getHash(), \"Points at us\");\n                        _context.netDb().fail(target.getIdentity().getHash());\n                        return false;\n                    }\n\n                    if (!tcpAddr.isPubliclyRoutable() && false) {\n                        if (_log.shouldLog(Log.WARN))\n                            _log.warn(\"Peer \" + target.getIdentity().getHash().toBase64() \n                                      + \" has an unroutable address [\" + tcpAddr + \"]\");\n                        _context.profileManager().commErrorOccurred(target.getIdentity().getHash());\n                        _context.shitlist().shitlistRouter(target.getIdentity().getHash(), \"Unroutable address\");\n                        _context.netDb().fail(target.getIdentity().getHash());\n                        return false;\n                    }\n                    \n                    if (_log.shouldLog(Log.DEBUG))\n                        _log.debug(\"Establishing a connection with address \" + addr);\n                    Socket s = createSocket(addr);\n                    socketCreated = _context.clock().now();\n                    if (s == null) {\n                        if (_log.shouldLog(Log.WARN))\n                            _log.warn(\"Unable to establish a socket in time to \" + addr);\n                        _context.profileManager().commErrorOccurred(target.getIdentity().getHash());\n                        _context.shitlist().shitlistRouter(target.getIdentity().getHash(), \"Unable to contact host\");\n                        return false;\n                    }\n                    if (_log.shouldLog(Log.DEBUG))\n                        _log.debug(\"Socket created\");\n                    \n                    TCPConnection con = new RestrictiveTCPConnection(_context, s, true);\n                    conCreated = _context.clock().now();\n                    if (_log.shouldLog(Log.DEBUG))\n                        _log.debug(\"TCPConnection created\");\n                    boolean established = handleConnection(con, target);\n                    conEstablished = _context.clock().now();\n                    if (_log.shouldLog(Log.DEBUG))\n                        _log.debug(\"connection handled\");\n                    return established;\n                }\n            }\n\n            _context.shitlist().shitlistRouter(target.getIdentity().getHash(), \"No addresses we can handle\");\n            return false;\n        } catch (Throwable t) {\n            if (_log.shouldLog(Log.WARN))\n                _log.warn(\"Unexpected error establishing the connection\", t);\n            _context.shitlist().shitlistRouter(target.getIdentity().getHash(), \"Internal error connecting\");\n            return false;\n        } finally {\n            long diff = conEstablished - startEstablish;\n            if ( ( (diff > 6000) || (conEstablished == 0) ) && (_log.shouldLog(Log.WARN)) )  {\n                _log.warn(\"establishConnection took too long: socketCreate: \" +\n                (socketCreated-startEstablish) + \"ms conCreated: \" +\n                (conCreated-socketCreated) + \"ms conEstablished: \" +\n                (conEstablished - conCreated) + \"ms overall: \" + diff);\n            }\n        }        \n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     * Send all the messages targetting the given location\n     * over the established connection\n     *\n     */\n    private void sendPending(TCPConnection con, PendingMessages pending) {\n        if (con == null) {\n            if (_log.shouldLog(Log.ERROR))\n                _log.error(\"Send pending to null con?\", new Exception(\"Hmm\"));\n            return;\n        }\n        if (pending == null) {\n            if (_log.shouldLog(Log.ERROR))\n                _log.error(\"Null pending, 'eh?\", new Exception(\"Hmm..\"));\n            return;\n        }\n        if (_log.shouldLog(Log.INFO))\n            _log.info(\"Connection established, now queueing up \" + pending.getMessageCount() + \" messages to be sent\");\n        synchronized (_msgs) {\n            _msgs.remove(pending.getPeer());\n            \n            OutNetMessage msg = null;\n            while ( (msg = pending.getNextMessage()) != null) {\n                msg.timestamp(\"TCPTransport.sendPending to con.addMessage\");\n                con.addMessage(msg);\n            }\n        }\n    }","id":39492,"modified_method":"/**\n     * Send all the messages targetting the given location\n     * over the established connection\n     *\n     */\n    private void sendPending(TCPConnection con, PendingMessages pending) {\n        if (con == null) {\n            if (_log.shouldLog(Log.ERROR))\n                _log.error(\"Send pending to null con?\", new Exception(\"Hmm\"));\n            return;\n        }\n        if (pending == null) {\n            if (_log.shouldLog(Log.ERROR))\n                _log.error(\"Null pending, 'eh?\", new Exception(\"Hmm..\"));\n            return;\n        }\n        if (_log.shouldLog(Log.INFO))\n            _log.info(\"Connection established, now queueing up \" + pending.getMessageCount() + \" messages to be sent\");\n        synchronized (_msgs) {\n            _msgs.remove(pending.getPeer());\n        }\n        if (pending.getPeer().equals(con.getRemoteRouterIdentity().calculateHash())) {\n            OutNetMessage msg = null;\n            while ( (msg = pending.getNextMessage()) != null) {\n                msg.timestamp(\"TCPTransport.sendPending to con.addMessage\");\n                con.addMessage(msg);\n            }\n        } else {\n            // we connected to someone we didn't try to connect to...\n            OutNetMessage msg = null;\n            while ( (msg = pending.getNextMessage()) != null) {\n                msg.timestamp(\"TCPTransport.sendPending connected to a different peer\");\n                afterSend(msg, false, false);\n            }\n        }\n    }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public void run() {\n            while (_running) {\n                try {\n                    PendingMessages pending = nextPeer(this);\n                    \n                    long start = _context.clock().now();\n                    \n                    if (_log.shouldLog(Log.INFO))\n                        _log.info(\"Beginning establishment with \" + pending.getPeer().toBase64() + \" [not error]\");\n                    \n                    TCPConnection con = getConnection(pending.getPeerInfo().getIdentity());\n                    long conFetched = _context.clock().now();\n                    long sentPending = 0;\n                    long establishedCon = 0;\n                    long refetchedCon = 0;\n                    long sentRefetched = 0;\n                    long failedPending = 0;\n                    \n                    if (con != null) {\n                        sendPending(con, pending);\n                        sentPending = _context.clock().now();\n                    } else {\n                        boolean established = establishConnection(pending.getPeerInfo());\n                        establishedCon = _context.clock().now();\n                        if (established) {\n                            _context.statManager().updateFrequency(\"tcp.attemptSuccessFrequency\");\n                            if (_log.shouldLog(Log.DEBUG))\n                                _log.debug(\"Connection established\");\n                            con = getConnection(pending.getPeerInfo().getIdentity());\n                            refetchedCon = _context.clock().now();\n                            if (con == null) {\n                                if (_log.shouldLog(Log.ERROR))\n                                    _log.error(\"Connection established but we can't find the connection? wtf!  peer = \" + pending.getPeer());\n                            } else {\n                                _context.shitlist().unshitlistRouter(pending.getPeer());\n                                sendPending(con, pending);\n                                sentRefetched = _context.clock().now();\n                            }\n                        } else {\n                            _context.statManager().updateFrequency(\"tcp.attemptFailureFrequency\");\n                            if (_log.shouldLog(Log.INFO))\n                                _log.info(\"Unable to establish a connection to \" + pending.getPeer());\n                            failPending(pending);\n                            \n                            // shitlisted by establishConnection with a more detailed reason\n                            //_context.shitlist().shitlistRouter(pending.getPeer(), \"Unable to contact host\");\n                            //ProfileManager.getInstance().commErrorOccurred(pending.getPeer());\n                            failedPending = _context.clock().now();\n                        }\n                    }\n                    \n                    long end = _context.clock().now();\n                    long diff = end - start;\n                    \n                    StringBuffer buf = new StringBuffer(128);\n                    buf.append(\"Time to establish with \").append(pending.getPeer().toBase64()).append(\": \").append(diff).append(\"ms\");\n                    buf.append(\" fetched: \").append(conFetched-start).append(\" ms\");\n                    if (sentPending != 0)\n                        buf.append(\" sendPending: \").append(sentPending - conFetched).append(\"ms\");\n                    if (establishedCon != 0) {\n                        buf.append(\" established: \").append(establishedCon - conFetched).append(\"ms\");\n                        if (refetchedCon != 0) {\n                            buf.append(\" refetched: \").append(refetchedCon - establishedCon).append(\"ms\");\n                            if (sentRefetched != 0) {\n                                buf.append(\" sentRefetched: \").append(sentRefetched - refetchedCon).append(\"ms\");\n                            }\n                        } else {\n                            buf.append(\" failedPending: \").append(failedPending - establishedCon).append(\"ms\");\n                        }\n                    }\n                    if (diff > 6000) {\n                        if (_log.shouldLog(Log.WARN))\n                            _log.warn(buf.toString());\n                    } else {\n                        if (_log.shouldLog(Log.INFO))\n                            _log.info(buf.toString());\n                    }\n                } catch (Throwable t) {\n                    if (_log.shouldLog(Log.CRIT))\n                        _log.log(Log.CRIT, \"Error in connection establisher thread - NO MORE CONNECTIONS\", t);\n                }\n            }\n        }","id":39493,"modified_method":"public void run() {\n            while (_running) {\n                try {\n                    PendingMessages pending = nextPeer(this);\n                    \n                    long start = _context.clock().now();\n                    \n                    if (_log.shouldLog(Log.INFO))\n                        _log.info(\"Beginning establishment with \" + pending.getPeer().toBase64() + \" [not error]\");\n                    \n                    TCPConnection con = getConnection(pending.getPeerInfo().getIdentity());\n                    long conFetched = _context.clock().now();\n                    long sentPending = 0;\n                    long establishedCon = 0;\n                    long refetchedCon = 0;\n                    long sentRefetched = 0;\n                    long failedPending = 0;\n                    \n                    if (con != null) {\n                        sendPending(con, pending);\n                        sentPending = _context.clock().now();\n                    } else {\n                        boolean established = establishConnection(pending.getPeerInfo());\n                        establishedCon = _context.clock().now();\n                        if (established) {\n                            _context.statManager().updateFrequency(\"tcp.attemptSuccessFrequency\");\n                            if (_log.shouldLog(Log.DEBUG))\n                                _log.debug(\"Connection established\");\n                            con = getConnection(pending.getPeerInfo().getIdentity());\n                            refetchedCon = _context.clock().now();\n                            if (con == null) {\n                                if (_log.shouldLog(Log.ERROR))\n                                    _log.error(\"Connection established to \" + pending.getPeer().toBase64() + \" but they aren't who we wanted\");\n                                _context.shitlist().shitlistRouter(pending.getPeer(), \"Old address of a new peer\");\n                                failPending(pending);\n                            } else {\n                                _context.shitlist().unshitlistRouter(pending.getPeer());\n                                sendPending(con, pending);\n                                sentRefetched = _context.clock().now();\n                            }\n                        } else {\n                            _context.statManager().updateFrequency(\"tcp.attemptFailureFrequency\");\n                            if (_log.shouldLog(Log.INFO))\n                                _log.info(\"Unable to establish a connection to \" + pending.getPeer());\n                            failPending(pending);\n                            \n                            // shitlisted by establishConnection with a more detailed reason\n                            //_context.shitlist().shitlistRouter(pending.getPeer(), \"Unable to contact host\");\n                            //ProfileManager.getInstance().commErrorOccurred(pending.getPeer());\n                            failedPending = _context.clock().now();\n                        }\n                    }\n                    \n                    long end = _context.clock().now();\n                    long diff = end - start;\n                    \n                    StringBuffer buf = new StringBuffer(128);\n                    buf.append(\"Time to establish with \").append(pending.getPeer().toBase64()).append(\": \").append(diff).append(\"ms\");\n                    buf.append(\" fetched: \").append(conFetched-start).append(\" ms\");\n                    if (sentPending != 0)\n                        buf.append(\" sendPending: \").append(sentPending - conFetched).append(\"ms\");\n                    if (establishedCon != 0) {\n                        buf.append(\" established: \").append(establishedCon - conFetched).append(\"ms\");\n                        if (refetchedCon != 0) {\n                            buf.append(\" refetched: \").append(refetchedCon - establishedCon).append(\"ms\");\n                            if (sentRefetched != 0) {\n                                buf.append(\" sentRefetched: \").append(sentRefetched - refetchedCon).append(\"ms\");\n                            }\n                        } else {\n                            buf.append(\" failedPending: \").append(failedPending - establishedCon).append(\"ms\");\n                        }\n                    }\n                    if (diff > 6000) {\n                        if (_log.shouldLog(Log.WARN))\n                            _log.warn(buf.toString());\n                    } else {\n                        if (_log.shouldLog(Log.INFO))\n                            _log.info(buf.toString());\n                    }\n                } catch (Throwable t) {\n                    if (_log.shouldLog(Log.CRIT))\n                        _log.log(Log.CRIT, \"Error in connection establisher thread - NO MORE CONNECTIONS\", t);\n                }\n            }\n        }","commit_id":"05acf32f39394bd7c2b02c9c1b91e7403bdfe7e4","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     * Execute the given HTTP method, returning an HTTP response.\n     * \n     * Note that when you are done with the response, you must call {@link #closeResponse()} so that it gets cleaned up properly.\n     */\n    public CloseableHttpResponse execute(final HttpUriRequest method) throws ClientProtocolException, IOException {\n        System.err.println(\"execute: \" + this.toString());\n        // override some headers with our versions\n        final HttpRequestWrapper requestWrapper = HttpRequestWrapper.wrap(method);\n        if (m_userAgent != null && !m_userAgent.trim().isEmpty()) {\n            requestWrapper.setHeader(HTTP.USER_AGENT, m_userAgent);\n        }\n        if (m_virtualHost != null && !m_virtualHost.trim().isEmpty()) {\n            requestWrapper.setHeader(HTTP.TARGET_HOST, m_virtualHost);\n        }\n        if (m_version != null) {\n            requestWrapper.setProtocolVersion(m_version);\n        }\n\n        return getClient().execute(requestWrapper);\n    }","id":39494,"modified_method":"/**\n     * Execute the given HTTP method, returning an HTTP response.\n     * \n     * Note that when you are done with the response, you must call {@link #closeResponse()} so that it gets cleaned up properly.\n     */\n    public CloseableHttpResponse execute(final HttpUriRequest method) throws ClientProtocolException, IOException {\n        LOG.debug(\"execute: \" + this.toString());\n        // override some headers with our versions\n        final HttpRequestWrapper requestWrapper = HttpRequestWrapper.wrap(method);\n        if (m_userAgent != null && !m_userAgent.trim().isEmpty()) {\n            requestWrapper.setHeader(HTTP.USER_AGENT, m_userAgent);\n        }\n        if (m_virtualHost != null && !m_virtualHost.trim().isEmpty()) {\n            requestWrapper.setHeader(HTTP.TARGET_HOST, m_virtualHost);\n        }\n        if (m_version != null) {\n            requestWrapper.setProtocolVersion(m_version);\n        }\n\n        return getClient().execute(requestWrapper);\n    }","commit_id":"1ba19c77b8df36848fdd0d7c1a564c625d1329fb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected HttpClientWrapper() {\n        m_cookieStore = new BasicCookieStore();\n    }","id":39495,"modified_method":"protected HttpClientWrapper() {\n        m_cookieStore = new BasicCookieStore();\n        // According to the HTTP specification, adding the default ports to the host header is optional.\n        // If the default ports are added, several Web Servers like Microsoft IIS 7.5 will complain about it, and could lead to unwanted results.\n        addRequestInterceptor(new HttpRequestInterceptor() {\n            @Override\n            public void process(HttpRequest request, HttpContext context) throws HttpException, IOException {\n                Header host = request.getFirstHeader(HTTP.TARGET_HOST);\n                if (host != null) {\n                    if (host.getValue().endsWith(\":80\") || host.getValue().endsWith(\":443\")) {\n                        request.setHeader(HTTP.TARGET_HOST, host.getValue().replaceFirst(\":\\\\d+\", \"\"));\n                        LOG.info(\"httpRequestInterceptor: removing default port from host header\");\n                    }\n                }\n            }\n        });\n    }","commit_id":"1ba19c77b8df36848fdd0d7c1a564c625d1329fb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public CloseableHttpClient getClient() {\n        if (m_httpClient == null) {\n            final HttpClientBuilder httpClientBuilder = HttpClientBuilder.create();\n            final RequestConfig.Builder requestConfigBuilder = RequestConfig.custom();\n\n            if (!m_reuseConnections) {\n                httpClientBuilder.setConnectionReuseStrategy(new NoConnectionReuseStrategy());\n            }\n            if (m_usePreemptiveAuth) {\n                enablePreemptiveAuth(httpClientBuilder);\n            }\n            if (m_useSystemProxySettings) {\n                httpClientBuilder.setRoutePlanner(new SystemDefaultRoutePlanner(ProxySelector.getDefault()));\n            }\n            if (m_cookieSpec != null && !m_cookieSpec.trim().isEmpty()) {\n                requestConfigBuilder.setCookieSpec(m_cookieSpec);\n            }\n            if (m_cookieStore != null) {\n                httpClientBuilder.setDefaultCookieStore(m_cookieStore);\n            }\n            if (m_username != null) {\n                setCredentials(httpClientBuilder, m_username, m_password);\n            }\n            if (m_socketTimeout != null) {\n                requestConfigBuilder.setSocketTimeout(m_socketTimeout);\n            }\n            if (m_connectionTimeout != null) {\n                requestConfigBuilder.setConnectTimeout(m_connectionTimeout);\n            }\n            if (m_retries != null) {\n                httpClientBuilder.setRetryHandler(new DefaultHttpRequestRetryHandler(m_retries, false));\n            }\n            if (m_sslContext.size() != 0) {\n                configureSSLContext(httpClientBuilder);\n            }\n            for (final HttpRequestInterceptor interceptor : m_requestInterceptors) {\n                httpClientBuilder.addInterceptorLast(interceptor);\n            }\n            for (final HttpResponseInterceptor interceptor : m_responseInterceptors) {\n                httpClientBuilder.addInterceptorLast(interceptor);\n            }\n\n            httpClientBuilder.setDefaultRequestConfig(requestConfigBuilder.build());\n            m_httpClient = httpClientBuilder.build();\n        }\n        return m_httpClient;\n    }","id":39496,"modified_method":"public CloseableHttpClient getClient() {\n        if (m_httpClient == null) {\n            final HttpClientBuilder httpClientBuilder = HttpClientBuilder.create();\n            final RequestConfig.Builder requestConfigBuilder = RequestConfig.custom();\n\n            if (!m_reuseConnections) {\n                httpClientBuilder.setConnectionReuseStrategy(new NoConnectionReuseStrategy());\n            }\n            if (m_usePreemptiveAuth) {\n                enablePreemptiveAuth(httpClientBuilder);\n            }\n            if (m_useSystemProxySettings) {\n                httpClientBuilder.setRoutePlanner(new SystemDefaultRoutePlanner(ProxySelector.getDefault()));\n            }\n            if (m_cookieSpec != null && !m_cookieSpec.trim().isEmpty()) {\n                requestConfigBuilder.setCookieSpec(m_cookieSpec);\n            }\n            if (m_cookieStore != null) {\n                httpClientBuilder.setDefaultCookieStore(m_cookieStore);\n            }\n            if (m_username != null) {\n                setCredentials(httpClientBuilder, m_username, m_password);\n            }\n            if (m_socketTimeout != null) {\n                requestConfigBuilder.setSocketTimeout(m_socketTimeout);\n            }\n            if (m_connectionTimeout != null) {\n                requestConfigBuilder.setConnectTimeout(m_connectionTimeout);\n            }\n            if (m_retries != null) {\n                httpClientBuilder.setRetryHandler(new DefaultHttpRequestRetryHandler(m_retries, false));\n            }\n            if (m_sslContext.size() != 0) {\n                configureSSLContext(httpClientBuilder);\n            }\n            for (final HttpRequestInterceptor interceptor : m_requestInterceptors) {\n                httpClientBuilder.addInterceptorLast(interceptor);\n            }\n            for (final HttpResponseInterceptor interceptor : m_responseInterceptors) {\n                httpClientBuilder.addInterceptorLast(interceptor);\n            }\n            if (m_useLaxRedirect) {\n                httpClientBuilder.setRedirectStrategy(new LaxRedirectStrategy());\n            }\n            httpClientBuilder.setDefaultRequestConfig(requestConfigBuilder.build());\n            m_httpClient = httpClientBuilder.build();\n        }\n        return m_httpClient;\n    }","commit_id":"1ba19c77b8df36848fdd0d7c1a564c625d1329fb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"void execute(final HttpClientWrapper parentClientWrapper, final MonitoredService svc, final Properties sequenceProperties) {\n            final HttpClientWrapper clientWrapper = parentClientWrapper.duplicate();\n            CloseableHttpResponse response = null;\n            try {\n                URI uri = getURI(svc);\n                PageSequenceHttpUriRequest method = getMethod(uri);\n\n                if (getVirtualHost(svc) != null) {\n                    // According to the standard, adding the default ports to the host header is optional, and this makes IIS 7.5 happy.\n                    HttpHost host = null;\n                    if (\"https\".equals(uri.getScheme()) && uri.getPort() == 443) { // Suppress the addition of default port for HTTPS\n                        host = new HttpHost(getVirtualHost(svc));\n                    } else if (\"http\".equals(uri.getScheme()) && uri.getPort() == 80) { //  Suppress the addition of default port for HTTP\n                        host = new HttpHost(getVirtualHost(svc));\n                    } else {  // Add the port if it is non-standard\n                        host = new HttpHost(getVirtualHost(svc), uri.getPort());\n                    }\n                    clientWrapper.setVirtualHost(host.toHostString());\n                }\n\n                if (getUserAgent() != null && !getUserAgent().trim().isEmpty()) {\n                    clientWrapper.setUserAgent(getUserAgent());\n                } else {\n                    clientWrapper.setUserAgent(\"OpenNMS PageSequenceMonitor (Service name: \" + svc.getSvcName() + \")\");\n                }\n\n                if (\"https\".equals(uri.getScheme())) {\n                    if (Boolean.parseBoolean(m_page.getDisableSslVerification())) {\n                        try {\n                            clientWrapper.useRelaxedSSL(\"https\");\n                        } catch (final GeneralSecurityException e) {\n                            LOG.warn(\"Failed configure relaxed SSL for PageSequence {}\", svc.getSvcName(), e);\n                        }\n                    }\n                }\n\n                if (m_parms.size() > 0) {\n                    method.setQueryParameters(expandParms(svc));\n                }\n\n                if (getUserInfo() != null) {\n                    String userInfo = getUserInfo();\n                    String[] streetCred = userInfo.split(\":\", 2);\n                    if (streetCred.length == 2) {\n                        clientWrapper.addBasicCredentials(streetCred[0], streetCred[1]);\n                    } else { \n                        LOG.warn(\"Illegal value found for username/password HTTP credentials: {}\", userInfo);\n                    }\n                }\n\n                long startTime = System.nanoTime();\n                response = clientWrapper.execute(method);\n                long endTime = System.nanoTime();\n                m_responseTime = (endTime - startTime)/1000000.0;\n\n                int code = response.getStatusLine().getStatusCode();\n                if (!getRange().contains(code)) {\n                    throw new PageSequenceMonitorException(\"response code out of range for uri:\" + uri + \".  Expected \" + getRange() + \" but received \" + code);\n                }\n\n                String responseString = EntityUtils.toString(response.getEntity());\n\n                if (getLocationPattern() != null) {\n                    Header locationHeader = response.getFirstHeader(\"location\");\n                    if (locationHeader == null) {\n                        LOG.debug(\"locationMatch was set, but no Location: header was returned at {}\", uri, new Exception());\n                        throw new PageSequenceMonitorException(\"locationMatch was set, but no Location: header was returned at \" + uri);\n                    }\n                    Matcher matcher = getLocationPattern().matcher(locationHeader.getValue());\n                    if (!matcher.find()) {\n                        LOG.debug(\"failed to find '{}' in Location: header at {}:\\n{}\", getLocationPattern(), uri, locationHeader.getValue(), new Exception());\n                        throw new PageSequenceMonitorException(\"failed to find '\" + getLocationPattern() + \"' in Location: header at \" + uri);\n                    }\n                }\n\n                if (getFailurePattern() != null) {\n                    Matcher matcher = getFailurePattern().matcher(responseString);\n                    if (matcher.find()) {\n                        throw new PageSequenceMonitorException(getResolvedFailureMessage(matcher));\n                    }\n                }\n\n                if (getSuccessPattern() != null) {\n                    Matcher matcher = getSuccessPattern().matcher(responseString);\n                    if (!matcher.find()) {\n                        LOG.debug(\"failed to find '{}' in page content at {}:\\n{}\", getSuccessPattern(), uri, responseString.trim(), new Exception());\n                        throw new PageSequenceMonitorException(\"failed to find '\" + getSuccessPattern() + \"' in page content at \" + uri);\n                    }\n                    updateSequenceProperties(sequenceProperties, matcher);\n                }\n\n            } catch (URISyntaxException e) {\n                throw new IllegalArgumentException(\"unable to construct URL for page\", e);\n            } catch (IOException e) {\n                LOG.debug(\"I/O Error\", e);\n                throw new PageSequenceMonitorException(\"I/O Error\", e);\n            } finally {\n                if (clientWrapper != null) {\n                    clientWrapper.close(response);\n                }\n            }\n        }","id":39497,"modified_method":"void execute(final HttpClientWrapper parentClientWrapper, final MonitoredService svc, final Properties sequenceProperties) {\n            final HttpClientWrapper clientWrapper = parentClientWrapper.duplicate();\n            CloseableHttpResponse response = null;\n            try {\n                URI uri = getURI(svc);\n                PageSequenceHttpUriRequest method = getMethod(uri);\n\n                if (getVirtualHost(svc) == null) {\n                    LOG.debug(\"Adding request interceptor to remove the host header\");\n                    clientWrapper.addRequestInterceptor(new HttpRequestInterceptor() {\n                        @Override\n                        public void process(HttpRequest request, HttpContext ctx) throws HttpException, IOException {\n                            Header host = request.getFirstHeader(HTTP.TARGET_HOST);\n                            if (host != null) {\n                                request.removeHeader(host);\n                                LOG.debug(\"httpRequestInterceptor: virtual-host is not set, removing host header\");\n                            }\n                        }\n                    });\n                } else {\n                    HttpHost host = new HttpHost(getVirtualHost(svc), uri.getPort());\n                    clientWrapper.setVirtualHost(host.toHostString());\n                }\n\n                if (getUserAgent() != null && !getUserAgent().trim().isEmpty()) {\n                    clientWrapper.setUserAgent(getUserAgent());\n                } else {\n                    clientWrapper.setUserAgent(\"OpenNMS PageSequenceMonitor (Service name: \" + svc.getSvcName() + \")\");\n                }\n\n                if (\"https\".equals(uri.getScheme())) {\n                    if (Boolean.parseBoolean(m_page.getDisableSslVerification())) {\n                        try {\n                            clientWrapper.useRelaxedSSL(\"https\");\n                        } catch (final GeneralSecurityException e) {\n                            LOG.warn(\"Failed configure relaxed SSL for PageSequence {}\", svc.getSvcName(), e);\n                        }\n                    }\n                }\n\n                if (m_parms.size() > 0) {\n                    method.setQueryParameters(expandParms(svc));\n                }\n\n                if (getUserInfo() != null) {\n                    String userInfo = getUserInfo();\n                    String[] streetCred = userInfo.split(\":\", 2);\n                    if (streetCred.length == 2) {\n                        clientWrapper.addBasicCredentials(streetCred[0], streetCred[1]);\n                    } else { \n                        LOG.warn(\"Illegal value found for username/password HTTP credentials: {}\", userInfo);\n                    }\n                }\n\n                long startTime = System.nanoTime();\n                response = clientWrapper.execute(method);\n                long endTime = System.nanoTime();\n                m_responseTime = (endTime - startTime)/1000000.0;\n\n                int code = response.getStatusLine().getStatusCode();\n                if (!getRange().contains(code)) {\n                    throw new PageSequenceMonitorException(\"response code out of range for uri:\" + uri + \".  Expected \" + getRange() + \" but received \" + code);\n                }\n\n                String responseString = EntityUtils.toString(response.getEntity());\n\n                if (getLocationPattern() != null) {\n                    Header locationHeader = response.getFirstHeader(\"location\");\n                    if (locationHeader == null) {\n                        LOG.debug(\"locationMatch was set, but no Location: header was returned at {}\", uri, new Exception());\n                        throw new PageSequenceMonitorException(\"locationMatch was set, but no Location: header was returned at \" + uri);\n                    }\n                    Matcher matcher = getLocationPattern().matcher(locationHeader.getValue());\n                    if (!matcher.find()) {\n                        LOG.debug(\"failed to find '{}' in Location: header at {}:\\n{}\", getLocationPattern(), uri, locationHeader.getValue(), new Exception());\n                        throw new PageSequenceMonitorException(\"failed to find '\" + getLocationPattern() + \"' in Location: header at \" + uri);\n                    }\n                }\n\n                if (getFailurePattern() != null) {\n                    Matcher matcher = getFailurePattern().matcher(responseString);\n                    if (matcher.find()) {\n                        throw new PageSequenceMonitorException(getResolvedFailureMessage(matcher));\n                    }\n                }\n\n                if (getSuccessPattern() != null) {\n                    Matcher matcher = getSuccessPattern().matcher(responseString);\n                    if (!matcher.find()) {\n                        LOG.debug(\"failed to find '{}' in page content at {}:\\n{}\", getSuccessPattern(), uri, responseString.trim(), new Exception());\n                        throw new PageSequenceMonitorException(\"failed to find '\" + getSuccessPattern() + \"' in page content at \" + uri);\n                    }\n                    updateSequenceProperties(sequenceProperties, matcher);\n                }\n\n            } catch (URISyntaxException e) {\n                throw new IllegalArgumentException(\"unable to construct URL for page\", e);\n            } catch (IOException e) {\n                LOG.debug(\"I/O Error\", e);\n                throw new PageSequenceMonitorException(\"I/O Error\", e);\n            } finally {\n                if (clientWrapper != null) {\n                    clientWrapper.close(response);\n                }\n            }\n        }","commit_id":"1ba19c77b8df36848fdd0d7c1a564c625d1329fb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Execute the given HTTP method, returning an HTTP response.\n     * \n     * Note that when you are done with the response, you must call {@link #closeResponse()} so that it gets cleaned up properly.\n     */\n    public CloseableHttpResponse execute(final HttpUriRequest method) throws ClientProtocolException, IOException {\n        System.err.println(\"execute: \" + this.toString());\n        // override some headers with our versions\n        final HttpRequestWrapper requestWrapper = HttpRequestWrapper.wrap(method);\n        if (m_userAgent != null && !m_userAgent.trim().isEmpty()) {\n            requestWrapper.setHeader(HTTP.USER_AGENT, m_userAgent);\n        }\n        if (m_virtualHost != null && !m_virtualHost.trim().isEmpty()) {\n            requestWrapper.setHeader(HTTP.TARGET_HOST, m_virtualHost);\n        }\n        if (m_version != null) {\n            requestWrapper.setProtocolVersion(m_version);\n        }\n\n        return getClient().execute(requestWrapper);\n    }","id":39498,"modified_method":"/**\n     * Execute the given HTTP method, returning an HTTP response.\n     * \n     * Note that when you are done with the response, you must call {@link #closeResponse()} so that it gets cleaned up properly.\n     */\n    public CloseableHttpResponse execute(final HttpUriRequest method) throws ClientProtocolException, IOException {\n        LOG.debug(\"execute: \" + this.toString());\n        // override some headers with our versions\n        final HttpRequestWrapper requestWrapper = HttpRequestWrapper.wrap(method);\n        if (m_userAgent != null && !m_userAgent.trim().isEmpty()) {\n            requestWrapper.setHeader(HTTP.USER_AGENT, m_userAgent);\n        }\n        if (m_virtualHost != null && !m_virtualHost.trim().isEmpty()) {\n            requestWrapper.setHeader(HTTP.TARGET_HOST, m_virtualHost);\n        }\n        if (m_version != null) {\n            requestWrapper.setProtocolVersion(m_version);\n        }\n\n        return getClient().execute(requestWrapper);\n    }","commit_id":"430bb8f14b2532aaaf66059ae584acb0198d694d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public CloseableHttpClient getClient() {\n        if (m_httpClient == null) {\n            final HttpClientBuilder httpClientBuilder = HttpClientBuilder.create();\n            final RequestConfig.Builder requestConfigBuilder = RequestConfig.custom();\n\n            if (!m_reuseConnections) {\n                httpClientBuilder.setConnectionReuseStrategy(new NoConnectionReuseStrategy());\n            }\n            if (m_usePreemptiveAuth) {\n                enablePreemptiveAuth(httpClientBuilder);\n            }\n            if (m_useSystemProxySettings) {\n                httpClientBuilder.setRoutePlanner(new SystemDefaultRoutePlanner(ProxySelector.getDefault()));\n            }\n            if (m_cookieSpec != null && !m_cookieSpec.trim().isEmpty()) {\n                requestConfigBuilder.setCookieSpec(m_cookieSpec);\n            }\n            if (m_cookieStore != null) {\n                httpClientBuilder.setDefaultCookieStore(m_cookieStore);\n            }\n            if (m_username != null) {\n                setCredentials(httpClientBuilder, m_username, m_password);\n            }\n            if (m_socketTimeout != null) {\n                requestConfigBuilder.setSocketTimeout(m_socketTimeout);\n            }\n            if (m_connectionTimeout != null) {\n                requestConfigBuilder.setConnectTimeout(m_connectionTimeout);\n            }\n            if (m_retries != null) {\n                httpClientBuilder.setRetryHandler(new DefaultHttpRequestRetryHandler(m_retries, false));\n            }\n            if (m_sslContext.size() != 0) {\n                configureSSLContext(httpClientBuilder);\n            }\n            for (final HttpRequestInterceptor interceptor : m_requestInterceptors) {\n                httpClientBuilder.addInterceptorLast(interceptor);\n            }\n            for (final HttpResponseInterceptor interceptor : m_responseInterceptors) {\n                httpClientBuilder.addInterceptorLast(interceptor);\n            }\n\n            httpClientBuilder.setDefaultRequestConfig(requestConfigBuilder.build());\n            m_httpClient = httpClientBuilder.build();\n        }\n        return m_httpClient;\n    }","id":39499,"modified_method":"public CloseableHttpClient getClient() {\n        if (m_httpClient == null) {\n            final HttpClientBuilder httpClientBuilder = HttpClientBuilder.create();\n            final RequestConfig.Builder requestConfigBuilder = RequestConfig.custom();\n\n            if (!m_reuseConnections) {\n                httpClientBuilder.setConnectionReuseStrategy(new NoConnectionReuseStrategy());\n            }\n            if (m_usePreemptiveAuth) {\n                enablePreemptiveAuth(httpClientBuilder);\n            }\n            if (m_useSystemProxySettings) {\n                httpClientBuilder.setRoutePlanner(new SystemDefaultRoutePlanner(ProxySelector.getDefault()));\n            }\n            if (m_cookieSpec != null && !m_cookieSpec.trim().isEmpty()) {\n                requestConfigBuilder.setCookieSpec(m_cookieSpec);\n            }\n            if (m_cookieStore != null) {\n                httpClientBuilder.setDefaultCookieStore(m_cookieStore);\n            }\n            if (m_username != null) {\n                setCredentials(httpClientBuilder, m_username, m_password);\n            }\n            if (m_socketTimeout != null) {\n                requestConfigBuilder.setSocketTimeout(m_socketTimeout);\n            }\n            if (m_connectionTimeout != null) {\n                requestConfigBuilder.setConnectTimeout(m_connectionTimeout);\n            }\n            if (m_retries != null) {\n                httpClientBuilder.setRetryHandler(new DefaultHttpRequestRetryHandler(m_retries, false));\n            }\n            if (m_sslContext.size() != 0) {\n                configureSSLContext(httpClientBuilder);\n            }\n            for (final HttpRequestInterceptor interceptor : m_requestInterceptors) {\n                httpClientBuilder.addInterceptorLast(interceptor);\n            }\n            for (final HttpResponseInterceptor interceptor : m_responseInterceptors) {\n                httpClientBuilder.addInterceptorLast(interceptor);\n            }\n            if (m_useLaxRedirect) {\n                httpClientBuilder.setRedirectStrategy(new LaxRedirectStrategy());\n            }\n            httpClientBuilder.setDefaultRequestConfig(requestConfigBuilder.build());\n            m_httpClient = httpClientBuilder.build();\n        }\n        return m_httpClient;\n    }","commit_id":"430bb8f14b2532aaaf66059ae584acb0198d694d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected HttpClientWrapper() {\n        m_cookieStore = new BasicCookieStore();\n    }","id":39500,"modified_method":"protected HttpClientWrapper() {\n        m_cookieStore = new BasicCookieStore();\n        // According to the HTTP specification, adding the default ports to the host header is optional.\n        // If the default ports are added, several Web Servers like Microsoft IIS 7.5 will complain about it, and could lead to unwanted results.\n        addRequestInterceptor(new HttpRequestInterceptor() {\n            @Override\n            public void process(HttpRequest request, HttpContext context) throws HttpException, IOException {\n                Header host = request.getFirstHeader(HTTP.TARGET_HOST);\n                if (host != null) {\n                    if (host.getValue().endsWith(\":80\") || host.getValue().endsWith(\":443\")) {\n                        request.setHeader(HTTP.TARGET_HOST, host.getValue().replaceFirst(\":\\\\d+\", \"\"));\n                        LOG.info(\"httpRequestInterceptor: removing default port from host header\");\n                    }\n                }\n            }\n        });\n    }","commit_id":"430bb8f14b2532aaaf66059ae584acb0198d694d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"void execute(final HttpClientWrapper parentClientWrapper, final MonitoredService svc, final Properties sequenceProperties) {\n            final HttpClientWrapper clientWrapper = parentClientWrapper.duplicate();\n            CloseableHttpResponse response = null;\n            try {\n                URI uri = getURI(svc);\n                PageSequenceHttpUriRequest method = getMethod(uri);\n\n                if (getVirtualHost(svc) != null) {\n                    // According to the standard, adding the default ports to the host header is optional, and this makes IIS 7.5 happy.\n                    HttpHost host = null;\n                    if (\"https\".equals(uri.getScheme()) && uri.getPort() == 443) { // Suppress the addition of default port for HTTPS\n                        host = new HttpHost(getVirtualHost(svc));\n                    } else if (\"http\".equals(uri.getScheme()) && uri.getPort() == 80) { //  Suppress the addition of default port for HTTP\n                        host = new HttpHost(getVirtualHost(svc));\n                    } else {  // Add the port if it is non-standard\n                        host = new HttpHost(getVirtualHost(svc), uri.getPort());\n                    }\n                    clientWrapper.setVirtualHost(host.toHostString());\n                }\n\n                if (getUserAgent() != null && !getUserAgent().trim().isEmpty()) {\n                    clientWrapper.setUserAgent(getUserAgent());\n                } else {\n                    clientWrapper.setUserAgent(\"OpenNMS PageSequenceMonitor (Service name: \" + svc.getSvcName() + \")\");\n                }\n\n                if (\"https\".equals(uri.getScheme())) {\n                    if (Boolean.parseBoolean(m_page.getDisableSslVerification())) {\n                        try {\n                            clientWrapper.useRelaxedSSL(\"https\");\n                        } catch (final GeneralSecurityException e) {\n                            LOG.warn(\"Failed configure relaxed SSL for PageSequence {}\", svc.getSvcName(), e);\n                        }\n                    }\n                }\n\n                if (m_parms.size() > 0) {\n                    method.setQueryParameters(expandParms(svc));\n                }\n\n                if (getUserInfo() != null) {\n                    String userInfo = getUserInfo();\n                    String[] streetCred = userInfo.split(\":\", 2);\n                    if (streetCred.length == 2) {\n                        clientWrapper.addBasicCredentials(streetCred[0], streetCred[1]);\n                    } else { \n                        LOG.warn(\"Illegal value found for username/password HTTP credentials: {}\", userInfo);\n                    }\n                }\n\n                long startTime = System.nanoTime();\n                response = clientWrapper.execute(method);\n                long endTime = System.nanoTime();\n                m_responseTime = (endTime - startTime)/1000000.0;\n\n                int code = response.getStatusLine().getStatusCode();\n                if (!getRange().contains(code)) {\n                    throw new PageSequenceMonitorException(\"response code out of range for uri:\" + uri + \".  Expected \" + getRange() + \" but received \" + code);\n                }\n\n                String responseString = EntityUtils.toString(response.getEntity());\n\n                if (getLocationPattern() != null) {\n                    Header locationHeader = response.getFirstHeader(\"location\");\n                    if (locationHeader == null) {\n                        LOG.debug(\"locationMatch was set, but no Location: header was returned at {}\", uri, new Exception());\n                        throw new PageSequenceMonitorException(\"locationMatch was set, but no Location: header was returned at \" + uri);\n                    }\n                    Matcher matcher = getLocationPattern().matcher(locationHeader.getValue());\n                    if (!matcher.find()) {\n                        LOG.debug(\"failed to find '{}' in Location: header at {}:\\n{}\", getLocationPattern(), uri, locationHeader.getValue(), new Exception());\n                        throw new PageSequenceMonitorException(\"failed to find '\" + getLocationPattern() + \"' in Location: header at \" + uri);\n                    }\n                }\n\n                if (getFailurePattern() != null) {\n                    Matcher matcher = getFailurePattern().matcher(responseString);\n                    if (matcher.find()) {\n                        throw new PageSequenceMonitorException(getResolvedFailureMessage(matcher));\n                    }\n                }\n\n                if (getSuccessPattern() != null) {\n                    Matcher matcher = getSuccessPattern().matcher(responseString);\n                    if (!matcher.find()) {\n                        LOG.debug(\"failed to find '{}' in page content at {}:\\n{}\", getSuccessPattern(), uri, responseString.trim(), new Exception());\n                        throw new PageSequenceMonitorException(\"failed to find '\" + getSuccessPattern() + \"' in page content at \" + uri);\n                    }\n                    updateSequenceProperties(sequenceProperties, matcher);\n                }\n\n            } catch (URISyntaxException e) {\n                throw new IllegalArgumentException(\"unable to construct URL for page\", e);\n            } catch (IOException e) {\n                LOG.debug(\"I/O Error\", e);\n                throw new PageSequenceMonitorException(\"I/O Error\", e);\n            } finally {\n                if (clientWrapper != null) {\n                    clientWrapper.close(response);\n                }\n            }\n        }","id":39501,"modified_method":"void execute(final HttpClientWrapper parentClientWrapper, final MonitoredService svc, final Properties sequenceProperties) {\n            final HttpClientWrapper clientWrapper = parentClientWrapper.duplicate();\n            CloseableHttpResponse response = null;\n            try {\n                URI uri = getURI(svc);\n                PageSequenceHttpUriRequest method = getMethod(uri);\n\n                if (getVirtualHost(svc) == null) {\n                    LOG.debug(\"Adding request interceptor to remove the host header\");\n                    clientWrapper.addRequestInterceptor(new HttpRequestInterceptor() {\n                        @Override\n                        public void process(HttpRequest request, HttpContext ctx) throws HttpException, IOException {\n                            Header host = request.getFirstHeader(HTTP.TARGET_HOST);\n                            if (host != null) {\n                                request.removeHeader(host);\n                                LOG.debug(\"httpRequestInterceptor: virtual-host is not set, removing host header\");\n                            }\n                        }\n                    });\n                } else {\n                    HttpHost host = new HttpHost(getVirtualHost(svc), uri.getPort());\n                    clientWrapper.setVirtualHost(host.toHostString());\n                }\n\n                if (getUserAgent() != null && !getUserAgent().trim().isEmpty()) {\n                    clientWrapper.setUserAgent(getUserAgent());\n                } else {\n                    clientWrapper.setUserAgent(\"OpenNMS PageSequenceMonitor (Service name: \" + svc.getSvcName() + \")\");\n                }\n\n                if (\"https\".equals(uri.getScheme())) {\n                    if (Boolean.parseBoolean(m_page.getDisableSslVerification())) {\n                        try {\n                            clientWrapper.useRelaxedSSL(\"https\");\n                        } catch (final GeneralSecurityException e) {\n                            LOG.warn(\"Failed configure relaxed SSL for PageSequence {}\", svc.getSvcName(), e);\n                        }\n                    }\n                }\n\n                if (m_parms.size() > 0) {\n                    method.setQueryParameters(expandParms(svc));\n                }\n\n                if (getUserInfo() != null) {\n                    String userInfo = getUserInfo();\n                    String[] streetCred = userInfo.split(\":\", 2);\n                    if (streetCred.length == 2) {\n                        clientWrapper.addBasicCredentials(streetCred[0], streetCred[1]);\n                    } else { \n                        LOG.warn(\"Illegal value found for username/password HTTP credentials: {}\", userInfo);\n                    }\n                }\n\n                long startTime = System.nanoTime();\n                response = clientWrapper.execute(method);\n                long endTime = System.nanoTime();\n                m_responseTime = (endTime - startTime)/1000000.0;\n\n                int code = response.getStatusLine().getStatusCode();\n                if (!getRange().contains(code)) {\n                    throw new PageSequenceMonitorException(\"response code out of range for uri:\" + uri + \".  Expected \" + getRange() + \" but received \" + code);\n                }\n\n                String responseString = EntityUtils.toString(response.getEntity());\n\n                if (getLocationPattern() != null) {\n                    Header locationHeader = response.getFirstHeader(\"location\");\n                    if (locationHeader == null) {\n                        LOG.debug(\"locationMatch was set, but no Location: header was returned at {}\", uri, new Exception());\n                        throw new PageSequenceMonitorException(\"locationMatch was set, but no Location: header was returned at \" + uri);\n                    }\n                    Matcher matcher = getLocationPattern().matcher(locationHeader.getValue());\n                    if (!matcher.find()) {\n                        LOG.debug(\"failed to find '{}' in Location: header at {}:\\n{}\", getLocationPattern(), uri, locationHeader.getValue(), new Exception());\n                        throw new PageSequenceMonitorException(\"failed to find '\" + getLocationPattern() + \"' in Location: header at \" + uri);\n                    }\n                }\n\n                if (getFailurePattern() != null) {\n                    Matcher matcher = getFailurePattern().matcher(responseString);\n                    if (matcher.find()) {\n                        throw new PageSequenceMonitorException(getResolvedFailureMessage(matcher));\n                    }\n                }\n\n                if (getSuccessPattern() != null) {\n                    Matcher matcher = getSuccessPattern().matcher(responseString);\n                    if (!matcher.find()) {\n                        LOG.debug(\"failed to find '{}' in page content at {}:\\n{}\", getSuccessPattern(), uri, responseString.trim(), new Exception());\n                        throw new PageSequenceMonitorException(\"failed to find '\" + getSuccessPattern() + \"' in page content at \" + uri);\n                    }\n                    updateSequenceProperties(sequenceProperties, matcher);\n                }\n\n            } catch (URISyntaxException e) {\n                throw new IllegalArgumentException(\"unable to construct URL for page\", e);\n            } catch (IOException e) {\n                LOG.debug(\"I/O Error\", e);\n                throw new PageSequenceMonitorException(\"I/O Error\", e);\n            } finally {\n                if (clientWrapper != null) {\n                    clientWrapper.close(response);\n                }\n            }\n        }","commit_id":"430bb8f14b2532aaaf66059ae584acb0198d694d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private synchronized Connection createConnection() throws Exception {\n        try {\n            ConnectionFactory factory = new ConnectionFactory();\n            factory.setUsername(username);\n            factory.setPassword(password);\n            factory.setVirtualHost(\"/\");\n            factory.setHost(amqpHost);\n            factory.setPort(port);\n            Connection connection = factory.newConnection();\n            connection.addShutdownListener(disconnectHandler);\n            s_connection = connection;\n            return s_connection;\n        } catch (Exception e) {\n            throw e;\n        }\n    }","id":39502,"modified_method":"private synchronized Connection createConnection() throws Exception {\n        try {\n            ConnectionFactory factory = new ConnectionFactory();\n            factory.setUsername(username);\n            factory.setPassword(password);\n            factory.setHost(amqpHost);\n            factory.setPort(port);\n\n            if (virtualHost != null && !virtualHost.isEmpty()) {\n                factory.setVirtualHost(virtualHost);\n            } else {\n                factory.setVirtualHost(\"/\");\n            }\n\n            if (useSsl != null && !useSsl.isEmpty() && useSsl.equalsIgnoreCase(\"true\")) {\n                factory.useSslProtocol();\n            }\n            Connection connection = factory.newConnection();\n            connection.addShutdownListener(disconnectHandler);\n            s_connection = connection;\n            return s_connection;\n        } catch (Exception e) {\n            throw e;\n        }\n    }","commit_id":"bc17f177760b3b61f1df7ed9728738ffe64896d5","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public boolean configure(String name, Map<String, Object> params) throws ConfigurationException {\n\n        try {\n            if (amqpHost == null || amqpHost.isEmpty()) {\n                throw new ConfigurationException(\"Unable to get the AMQP server details\");\n            }\n\n            if (username == null || username.isEmpty()) {\n                throw new ConfigurationException(\"Unable to get the username details\");\n            }\n\n            if (password == null || password.isEmpty()) {\n                throw new ConfigurationException(\"Unable to get the password details\");\n            }\n\n            if (amqpExchangeName == null || amqpExchangeName.isEmpty()) {\n                throw new ConfigurationException(\"Unable to get the _exchange details on the AMQP server\");\n            }\n\n            if (port == null) {\n                throw new ConfigurationException(\"Unable to get the port details of AMQP server\");\n            }\n\n            if (retryInterval == null) {\n                retryInterval = 10000;// default to 10s to try out reconnect\n            }\n\n        } catch (NumberFormatException e) {\n            throw new ConfigurationException(\"Invalid port number/retry interval\");\n        }\n\n        s_subscribers = new ConcurrentHashMap<String, Ternary<String, Channel, EventSubscriber>>();\n        executorService = Executors.newCachedThreadPool();\n        disconnectHandler = new DisconnectHandler();\n\n        return true;\n    }","id":39503,"modified_method":"@Override\n    public boolean configure(String name, Map<String, Object> params) throws ConfigurationException {\n\n        try {\n            if (amqpHost == null || amqpHost.isEmpty()) {\n                throw new ConfigurationException(\"Unable to get the AMQP server details\");\n            }\n\n            if (username == null || username.isEmpty()) {\n                throw new ConfigurationException(\"Unable to get the username details\");\n            }\n\n            if (password == null || password.isEmpty()) {\n                throw new ConfigurationException(\"Unable to get the password details\");\n            }\n\n            if (amqpExchangeName == null || amqpExchangeName.isEmpty()) {\n                throw new ConfigurationException(\"Unable to get the _exchange details on the AMQP server\");\n            }\n\n            if (port == null) {\n                throw new ConfigurationException(\"Unable to get the port details of AMQP server\");\n            }\n\n            if (useSsl != null && !useSsl.isEmpty()) {\n                if (!useSsl.equalsIgnoreCase(\"true\") && !useSsl.equalsIgnoreCase(\"false\")) {\n                    throw new ConfigurationException(\"Invalid configuration parameter for 'ssl'.\");\n                }\n            }\n\n            if (retryInterval == null) {\n                retryInterval = 10000;// default to 10s to try out reconnect\n            }\n\n        } catch (NumberFormatException e) {\n            throw new ConfigurationException(\"Invalid port number/retry interval\");\n        }\n\n        s_subscribers = new ConcurrentHashMap<String, Ternary<String, Channel, EventSubscriber>>();\n        executorService = Executors.newCachedThreadPool();\n        disconnectHandler = new DisconnectHandler();\n\n        return true;\n    }","commit_id":"bc17f177760b3b61f1df7ed9728738ffe64896d5","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public void updateDashboard() {\n    }","id":39504,"modified_method":"final private void updateDashboard() {\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getWallboardComponent() {\n        return new Label(m_name + \" wallboard view\");\n    }","id":39505,"modified_method":"@Override\n    public DashletComponent getWallboardComponent() {\n        return new AbstractDashletComponent() {\n            private Label label = new Label(m_name + \" wallboard view\");\n\n            public void refresh() {\n            }\n\n            public Component getComponent() {\n                return label;\n            }\n        };\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getDashboardComponent() {\n        return new Label(m_name + \" dashboard view\");\n    }","id":39506,"modified_method":"@Override\n    public DashletComponent getDashboardComponent() {\n        return new AbstractDashletComponent() {\n            private Label label = new Label(m_name + \" dashboard view\");\n\n            public void refresh() {\n            }\n\n            public Component getComponent() {\n                return label;\n            }\n        };\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public void updateWallboard() {\n    }","id":39507,"modified_method":"final private void updateWallboard() {\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Adds the alarms components to a {@link AbstractOrderedLayout}\n     *\n     * @param component the component to add alarms to\n     * @param alarms    the alarms list\n     */\n    private void addComponents(AbstractOrderedLayout component, List<OnmsAlarm> alarms) {\n        if (alarms.size() == 0) {\n            Label label = new Label(\"No alarms found!\");\n            label.addStyleName(\"alert-details-noalarms-font\");\n            component.addComponent(label);\n        } else {\n            for (OnmsAlarm onmsAlarm : alarms) {\n                OnmsNode onmsNode = null;\n\n                if (onmsAlarm.getNodeId() != null) {\n                    CriteriaBuilder nodeCb = new CriteriaBuilder(OnmsNode.class);\n                    nodeCb.eq(\"id\", onmsAlarm.getNodeId());\n\n                    List<OnmsNode> nodes = m_nodeDao.findMatching(nodeCb.toCriteria());\n\n                    if (nodes.size() == 1) {\n                        onmsNode = nodes.get(0);\n                    }\n                }\n                component.addComponent(createAlarmComponent(onmsAlarm, onmsNode));\n\n                OnmsSeverity boostSeverity = OnmsSeverity.valueOf(getDashletSpec().getParameters().get(\"boostSeverity\"));\n\n                if (onmsAlarm.getSeverity().isGreaterThanOrEqual(boostSeverity)) {\n                    boosted = true;\n                }\n            }\n        }\n    }","id":39508,"modified_method":"/**\n     * Adds the alarms components to a {@link AbstractOrderedLayout}\n     *\n     * @param component the component to add alarms to\n     * @param alarms    the alarms list\n     */\n    private void addComponents(AbstractOrderedLayout component, List<OnmsAlarm> alarms) {\n        if (alarms.size() == 0) {\n            Label label = new Label(\"No alarms found!\");\n            label.addStyleName(\"alert-details-noalarms-font\");\n            component.addComponent(label);\n        } else {\n            StringBuilder sb = new StringBuilder();\n\n            sb.append(\"<table class='onms'>\");\n            sb.append(\"<thead>\");\n            sb.append(\"<th class='onms'>ID<\/th><th class='onms'>Severity<\/th><th class='onms'>Node<\/th><th class='onms'>Count<\/th><th class='onms'>Last Event Time<\/th><th class='onms'>Log Msg<\/th>\");\n            sb.append(\"<\/thead>\");\n\n            for (OnmsAlarm onmsAlarm : alarms) {\n                OnmsNode onmsNode = null;\n\n                if (onmsAlarm.getNodeId() != null) {\n                    CriteriaBuilder nodeCb = new CriteriaBuilder(OnmsNode.class);\n                    nodeCb.eq(\"id\", onmsAlarm.getNodeId());\n\n                    List<OnmsNode> nodes = m_nodeDao.findMatching(nodeCb.toCriteria());\n\n                    if (nodes.size() == 1) {\n                        onmsNode = nodes.get(0);\n                    }\n                }\n\n                String s = \"\";\n                sb.append(\"<tr class='\" + onmsAlarm.getSeverity().getLabel() + \" onms'>\");\n                sb.append(\"<td class='divider bright onms' valign='middle' rowspan='1'><nobr>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\" + onmsAlarm.getId() + \"<\/nobr><\/td>\");\n                sb.append(\"<td class='divider onms' valign='middle' rowspan='1'><nobr>\" + onmsAlarm.getSeverity().getLabel() + \"<\/nobr><\/td>\");\n                sb.append(\"<td class='divider onms' valign='middle' rowspan='1'><nobr>\" + onmsNode.getLabel() + \"<\/nobr><\/td>\");\n                sb.append(\"<td class='divider onms' valign='middle' rowspan='1'><nobr>\" + onmsAlarm.getCounter() + \"<\/nobr><\/td>\");\n                sb.append(\"<td class='divider onms' valign='middle' rowspan='1'><nobr>\" + onmsAlarm.getLastEventTime().toString() + \"<\/nobr><\/td>\");\n                sb.append(\"<td class='divider onms' valign='middle' rowspan='1'>\" + onmsAlarm.getLogMsg().replaceAll(\"\\\\<.*?>\", \"\") + \"<\/td>\");\n                sb.append(\"<\/td><\/tr>\");\n            }\n            sb.append(\"<\/table>\");\n            Label label = new Label(sb.toString());\n            label.setSizeFull();\n            label.setContentMode(ContentMode.HTML);\n            component.addComponent(label);\n        }\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getDashboardComponent() {\n        if (m_dashboardLayout == null) {\n            /**\n             * Setting up the layout\n             */\n            m_dashboardLayout = new VerticalLayout();\n            m_dashboardLayout.setCaption(getName());\n            m_dashboardLayout.setWidth(\"100%\");\n        }\n        return m_dashboardLayout;\n    }","id":39509,"modified_method":"@Override\n    public DashletComponent getDashboardComponent() {\n        if (m_dashboardComponent == null) {\n            m_dashboardComponent = new AbstractDashletComponent() {\n\n                private AlarmTable m_alarmTable;\n\n                {\n                    m_alarmTable = new AlarmTable(\"Alarms\", new AlarmDaoContainer(m_alarmDao), m_alarmRepository);\n\n                    m_alarmTable.setSizeFull();\n\n                    final VaadinApplicationContextImpl context = new VaadinApplicationContextImpl();\n                    final UI currentUI = UI.getCurrent();\n\n                    context.setSessionId(currentUI.getSession().getSession().getId());\n                    context.setUiId(currentUI.getUIId());\n\n                    m_alarmTable.setVaadinApplicationContext(context);\n\n                    final EventProxy eventProxy = new EventProxy() {\n                        @Override\n                        public <T> void fireEvent(final T eventObject) {\n                            System.out.println(\"got event: {}\" + eventObject);\n                        }\n\n                        @Override\n                        public <T> void addPossibleEventConsumer(final T possibleEventConsumer) {\n                            System.out.println(\"(ignoring) add consumer: {}\" + possibleEventConsumer);\n                        }\n                    };\n\n                    m_alarmTable.setEventProxy(eventProxy);\n\n                    m_alarmTable.setColumnReorderingAllowed(true);\n                    m_alarmTable.setColumnCollapsingAllowed(true);\n                    m_alarmTable.setSortContainerPropertyId(\"id\");\n                    m_alarmTable.setSortAscending(false);\n                    m_alarmTable.setCellStyleGenerator(new AlarmTableCellStyleGenerator());\n\n                    m_alarmTable.addGeneratedColumn(\"severity\", new SeverityGenerator());\n                    m_alarmTable.addGeneratedColumn(\"id\", new AlarmIdColumnLinkGenerator(m_alarmDao, \"id\"));\n                    m_alarmTable.setVisibleColumns(\"id\", \"severity\", \"nodeLabel\", \"counter\", \"lastEventTime\", \"logMsg\");\n                    m_alarmTable.setColumnHeaders(\"ID\", \"Severity\", \"Node\", \"Count\", \"Last Event Time\", \"Log Message\");\n\n                    refresh();\n                }\n\n\n                @Override\n                public void refresh() {\n                    List<OnmsAlarm> alarms = getAlarms();\n\n                    List<Integer> alarmIds = new LinkedList();\n\n                    for (OnmsAlarm onmsAlarm : alarms) {\n                        alarmIds.add(onmsAlarm.getId());\n                    }\n\n                    List<Restriction> restrictions = new LinkedList<Restriction>();\n                    restrictions.add(new InRestriction(\"id\", alarmIds));\n\n                    ((OnmsDaoContainer) m_alarmTable.getContainerDataSource()).setRestrictions(restrictions);\n\n                    setBoosted(checkBoosted(alarms));\n\n                    m_alarmTable.markAsDirtyRecursive();\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_alarmTable;\n                }\n            };\n        }\n        return m_dashboardComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getWallboardComponent() {\n        if (m_wallboardLayout == null) {\n            /**\n             * Setting up the layout\n             */\n            m_wallboardLayout = new VerticalLayout();\n            m_wallboardLayout.setCaption(getName());\n            m_wallboardLayout.setWidth(\"100%\");\n        }\n        return m_wallboardLayout;\n    }","id":39510,"modified_method":"@Override\n    public DashletComponent getWallboardComponent() {\n\n        if (m_wallboardComponent == null) {\n            m_wallboardComponent = new AbstractDashletComponent() {\n\n                private VerticalLayout m_verticalLayout;\n\n                {\n                    m_verticalLayout = new VerticalLayout();\n                    m_verticalLayout.setCaption(getName());\n                    m_verticalLayout.setWidth(\"100%\");\n\n                    refresh();\n                }\n\n                /**\n                 * Injects CSS styles on current page for this dashlet\n                 */\n                private void injectWallboardStyles() {\n                    Page.getCurrent().getStyles().add(\".alert-details.cleared { background: #AAAAAA; border-left: 14px solid #858585; }\");\n                    Page.getCurrent().getStyles().add(\".alert-details.normal { background: #AAAAAA; border-left: 14px solid #336600; }\");\n                    Page.getCurrent().getStyles().add(\".alert-details.indeterminate { background: #AAAAAA; border-left: 14px solid #999; }\");\n                    Page.getCurrent().getStyles().add(\".alert-details.warning { background: #AAAAAA; border-left: 14px solid #FFCC00; }\");\n                    Page.getCurrent().getStyles().add(\".alert-details.minor { background: #AAAAAA; border-left: 14px solid #FF9900; }\");\n                    Page.getCurrent().getStyles().add(\".alert-details.major { background: #AAAAAA; border-left: 14px solid #FF3300; }\");\n                    Page.getCurrent().getStyles().add(\".alert-details.critical { background: #AAAAAA; border-left: 14px solid #CC0000; }\");\n                    Page.getCurrent().getStyles().add(\".alert-details-font {color: #000000; font-size: 17px; line-height: normal; }\");\n                    Page.getCurrent().getStyles().add(\".alert-details-noalarms-font { font-size: 17px; line-height: normal; }\");\n                    Page.getCurrent().getStyles().add(\".alert-details { padding: 5px 5px; margin: 1px; }\");\n                }\n\n                @Override\n                public void refresh() {\n                    List<OnmsAlarm> alarms = getAlarms();\n                    m_verticalLayout.removeAllComponents();\n                    injectWallboardStyles();\n\n                    setBoosted(false);\n\n                    addComponents(m_verticalLayout, alarms);\n\n                    setBoosted(checkBoosted(alarms));\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_verticalLayout;\n                }\n            };\n        }\n        return m_wallboardComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Constructor for instantiating new objects.\n     *\n     * @param dashletSpec the {@link DashletSpec} to be used\n     * @param alarmDao    the {@link AlarmDao} to be used\n     * @param nodeDao     the {@link NodeDao} to be used\n     */\n    public AlarmDetailsDashlet(String name, DashletSpec dashletSpec, AlarmDao alarmDao, NodeDao nodeDao) {\n        super(name, dashletSpec);\n\n        /**\n         * Setting the member fields\n         */\n        m_alarmDao = alarmDao;\n        m_nodeDao = nodeDao;\n    }","id":39511,"modified_method":"/**\n     * Constructor for instantiating new objects.\n     *\n     * @param dashletSpec the {@link DashletSpec} to be used\n     * @param alarmDao    the {@link AlarmDao} to be used\n     * @param nodeDao     the {@link NodeDao} to be used\n     */\n    public AlarmDetailsDashlet(String name, DashletSpec dashletSpec, AlarmDao alarmDao, NodeDao nodeDao, AlarmRepository alarmRepository) {\n        super(name, dashletSpec);\n\n        /**\n         * Setting the member fields\n         */\n        m_alarmDao = alarmDao;\n        m_nodeDao = nodeDao;\n        m_alarmRepository = alarmRepository;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Constructor used for instantiating a new factory.\n     *\n     * @param alarmDao the {@link AlarmDao} to be used\n     * @param nodeDao  the {@link NodeDao} to be used\n     */\n    public AlarmDetailsDashletFactory(AlarmDao alarmDao, NodeDao nodeDao) {\n        m_alarmDao = alarmDao;\n        m_nodeDao = nodeDao;\n    }","id":39512,"modified_method":"/**\n     * Constructor used for instantiating a new factory.\n     *\n     * @param alarmDao the {@link AlarmDao} to be used\n     * @param nodeDao  the {@link NodeDao} to be used\n     */\n    public AlarmDetailsDashletFactory(AlarmDao alarmDao, NodeDao nodeDao, AlarmRepository alarmRepository) {\n        m_alarmDao = alarmDao;\n        m_nodeDao = nodeDao;\n        m_alarmRepository = alarmRepository;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Method for instatiating a new {@link Dashlet} instance.\n     *\n     * @param dashletSpec the {@link DashletSpec} to use\n     * @return a new {@link Dashlet} instance\n     */\n    public Dashlet newDashletInstance(DashletSpec dashletSpec) {\n        return new AlarmDetailsDashlet(getName(), dashletSpec, m_alarmDao, m_nodeDao);\n    }","id":39513,"modified_method":"/**\n     * Method for instatiating a new {@link Dashlet} instance.\n     *\n     * @param dashletSpec the {@link DashletSpec} to use\n     * @return a new {@link Dashlet} instance\n     */\n    public Dashlet newDashletInstance(DashletSpec dashletSpec) {\n        return new AlarmDetailsDashlet(getName(), dashletSpec, m_alarmDao, m_nodeDao, m_alarmRepository);\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getWallboardComponent() {\n        if (m_wallboardLayout == null) {\n            m_wallboardLayout = new VerticalLayout();\n            m_wallboardLayout.setCaption(getName());\n            m_wallboardLayout.setWidth(\"100%\");\n        }\n        return m_wallboardLayout;\n    }","id":39514,"modified_method":"@Override\n    public DashletComponent getWallboardComponent() {\n        if (m_wallboardComponent == null) {\n            m_wallboardComponent = new AbstractDashletComponent() {\n                private VerticalLayout m_verticalLayout = new VerticalLayout();\n\n                {\n                    m_verticalLayout.setCaption(getName());\n                    m_verticalLayout.setWidth(\"100%\");\n                    refresh();\n                }\n\n                /**\n                 * Injects CSS styles on current page for this dashlet\n                 */\n                private void injectWallboardStyles() {\n                    Page.getCurrent().getStyles().add(\".alerts.cleared { background: #000000; border-left: 15px solid #858585; }\");\n                    Page.getCurrent().getStyles().add(\".alerts.normal { background: #000000; border-left: 15px solid #336600; }\");\n                    Page.getCurrent().getStyles().add(\".alerts.indeterminate {  background: #000000; border-left: 15px solid #999; }\");\n                    Page.getCurrent().getStyles().add(\".alerts.warning { background: #000000; border-left: 15px solid #FFCC00; }\");\n                    Page.getCurrent().getStyles().add(\".alerts.minor { background: #000000;  border-left: 15px solid #FF9900; }\");\n                    Page.getCurrent().getStyles().add(\".alerts.major { background: #000000; border-left: 15px solid #FF3300; }\");\n                    Page.getCurrent().getStyles().add(\".alerts.critical { background: #000000; border-left: 15px solid #CC0000; }\");\n                    Page.getCurrent().getStyles().add(\".alerts-font {color: #3ba300; font-size: 18px; line-height: normal; }\");\n                    Page.getCurrent().getStyles().add(\".alerts-noalarms-font { font-size: 18px; line-height: normal; }\");\n                    Page.getCurrent().getStyles().add(\".alerts { padding: 5px 5px; margin: 1px; }\");\n                }\n\n                @Override\n                public void refresh() {\n                    List<OnmsAlarm> alarms = getAlarms();\n\n                    OnmsSeverity boostSeverity = OnmsSeverity.valueOf(getDashletSpec().getParameters().get(\"boostSeverity\"));\n\n                    m_verticalLayout.removeAllComponents();\n\n                    injectWallboardStyles();\n\n                    boosted = false;\n\n                    addComponents(m_verticalLayout, alarms);\n\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_verticalLayout;\n                }\n            };\n        }\n        return m_wallboardComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getDashboardComponent() {\n        if (m_dashboardLayout == null) {\n            /**\n             * Setting up the layout\n             */\n            m_dashboardLayout = new VerticalLayout();\n            m_dashboardLayout.setCaption(getName());\n            m_dashboardLayout.setWidth(\"100%\");\n        }\n        return m_dashboardLayout;\n    }","id":39515,"modified_method":"@Override\n    public DashletComponent getDashboardComponent() {\n        if (m_dashboardComponent == null) {\n            m_dashboardComponent = new AbstractDashletComponent() {\n                private VerticalLayout m_verticalLayout = new VerticalLayout();\n\n                {\n                    m_verticalLayout.setCaption(getName());\n                    m_verticalLayout.setWidth(\"100%\");\n                    refresh();\n                }\n\n                /**\n                 * Injects CSS styles on current page for this dashlet\n                 */\n                private void injectDashboardStyles() {\n                    Page.getCurrent().getStyles().add(\".alerts.cleared { background: #000000; border-left: 8px solid #858585; }\");\n                    Page.getCurrent().getStyles().add(\".alerts.normal { background: #000000; border-left: 8px solid #336600; }\");\n                    Page.getCurrent().getStyles().add(\".alerts.indeterminate {  background: #000000; border-left: 8px solid #999; }\");\n                    Page.getCurrent().getStyles().add(\".alerts.warning { background: #000000; border-left: 8px solid #FFCC00; }\");\n                    Page.getCurrent().getStyles().add(\".alerts.minor { background: #000000;  border-left: 8px solid #FF9900; }\");\n                    Page.getCurrent().getStyles().add(\".alerts.major { background: #000000; border-left: 8px solid #FF3300; }\");\n                    Page.getCurrent().getStyles().add(\".alerts.critical { background: #000000; border-left: 8px solid #CC0000; }\");\n                    Page.getCurrent().getStyles().add(\".alerts-font {color: #3ba300; font-size: 11px; line-height: normal; }\");\n                    Page.getCurrent().getStyles().add(\".alerts-noalarms-font { font-size: 11px; line-height: normal; }\");\n                    Page.getCurrent().getStyles().add(\".alerts { padding: 5px 5px; margin: 1px; }\");\n                }\n\n                @Override\n                public void refresh() {\n                    List<OnmsAlarm> alarms = getAlarms();\n\n                    m_verticalLayout.removeAllComponents();\n\n                    injectDashboardStyles();\n\n                    boosted = false;\n\n                    addComponents(m_verticalLayout, alarms);\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_verticalLayout;\n                }\n            };\n        }\n        return m_dashboardComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getWallboardComponent() {\n        if (m_verticalLayout == null) {\n            m_verticalLayout = new VerticalLayout();\n            m_verticalLayout.setCaption(getName());\n            m_verticalLayout.setSizeFull();\n        }\n\n        return m_verticalLayout;\n    }","id":39516,"modified_method":"@Override\n    public DashletComponent getWallboardComponent() {\n        if (m_dashletComponent == null) {\n            m_dashletComponent = new AbstractDashletComponent() {\n                private VerticalLayout m_verticalLayout = new VerticalLayout();\n\n                {\n                    m_verticalLayout.setCaption(getName());\n                    m_verticalLayout.setSizeFull();\n                }\n\n                @Override\n                public void refresh() {\n                    String newImage = \"/opennms/charts?chart-name=\" + getDashletSpec().getParameters().get(\"chart\");\n\n                    String maximizeHeightString = getDashletSpec().getParameters().get(\"maximizeHeight\");\n                    String maximizeWidthString = getDashletSpec().getParameters().get(\"maximizeWidth\");\n\n                    boolean maximizeHeight = (\"true\".equals(maximizeHeightString) || \"yes\".equals(maximizeHeightString) || \"1\".equals(maximizeHeightString));\n                    boolean maximizeWidth = (\"true\".equals(maximizeWidthString) || \"yes\".equals(maximizeWidthString) || \"1\".equals(maximizeWidthString));\n\n                    if (!newImage.equals(m_imageUrl)) {\n                        m_imageUrl = newImage;\n                        m_verticalLayout.removeAllComponents();\n                        Image image = new Image(null, new ExternalResource(m_imageUrl));\n                        if (maximizeHeight && maximizeWidth) {\n                            image.setSizeFull();\n                        } else {\n                            if (maximizeHeight) {\n                                image.setHeight(100, Sizeable.Unit.PERCENTAGE);\n                            }\n                            if (maximizeWidth) {\n                                image.setWidth(100, Sizeable.Unit.PERCENTAGE);\n                            }\n                        }\n                        m_verticalLayout.addComponent(image);\n                        m_verticalLayout.setComponentAlignment(image, Alignment.MIDDLE_CENTER);\n                    }\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_verticalLayout;\n                }\n            };\n        }\n\n        return m_dashletComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getDashboardComponent() {\n        return getWallboardComponent();\n    }","id":39517,"modified_method":"@Override\n    public DashletComponent getDashboardComponent() {\n        return getWallboardComponent();\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * This method sets the {@link List} of {@link DashletSpec} instances.\n     *\n     * @param dashletSpecs the list of {@link DashletSpec} instances\n     */\n    public void setDashletSpecs(List<DashletSpec> dashletSpecs) {\n\n        int c = 0;\n\n        List<DashletSpec> dashboardSuitableDashlets = new LinkedList<DashletSpec>();\n\n        if (dashletSpecs.size() == 0) {\n            return;\n        } else {\n            for (DashletSpec dashletSpec : dashletSpecs) {\n                if (suitableForDashboard(dashletSpec)) {\n                    dashboardSuitableDashlets.add(dashletSpec);\n                }\n            }\n        }\n\n        if (dashboardSuitableDashlets.size() == 0) {\n            return;\n        }\n\n        int columns = (int) Math.ceil(Math.sqrt(dashboardSuitableDashlets.size()));\n\n        int rows = (int) Math.ceil((double) dashboardSuitableDashlets.size() / (double) columns);\n\n        setColumns(columns);\n        setRows(rows);\n\n        int i = 0;\n\n        removeAllComponents();\n\n        for (int y = 0; y < rows; y++) {\n            for (int x = 0; x < columns; x++) {\n                if (i < dashboardSuitableDashlets.size()) {\n                    Dashlet dashlet = getDashletInstance(dashboardSuitableDashlets.get(i));\n\n                    //boolean boosted = dashlet.isBoosted();\n\n                    addComponent(createPanel(dashlet.getDashboardComponent()), x, y);\n\n                    dashlet.updateDashboard();\n\n                    i++;\n                }\n            }\n        }\n    }","id":39518,"modified_method":"/**\n     * This method sets the {@link List} of {@link DashletSpec} instances.\n     *\n     * @param dashletSpecs the list of {@link DashletSpec} instances\n     */\n    public void setDashletSpecs(List<DashletSpec> dashletSpecs) {\n\n        m_displayDashlets = new HashMap<Component, DashletComponent>();\n\n        int c = 0;\n\n        List<DashletSpec> dashboardSuitableDashlets = new LinkedList<DashletSpec>();\n\n        if (dashletSpecs.size() == 0) {\n            return;\n        } else {\n            for (DashletSpec dashletSpec : dashletSpecs) {\n                if (suitableForDashboard(dashletSpec)) {\n                    dashboardSuitableDashlets.add(dashletSpec);\n                }\n            }\n        }\n\n        if (dashboardSuitableDashlets.size() == 0) {\n            return;\n        }\n\n        int columns = (int) Math.ceil(Math.sqrt(dashboardSuitableDashlets.size()));\n\n        int rows = (int) Math.ceil((double) dashboardSuitableDashlets.size() / (double) columns);\n\n        setColumns(columns);\n        setRows(rows);\n\n        int i = 0;\n\n        removeAllComponents();\n\n        for (int y = 0; y < rows; y++) {\n            for (int x = 0; x < columns; x++) {\n                if (i < dashboardSuitableDashlets.size()) {\n                    Dashlet dashlet = getDashletInstance(dashboardSuitableDashlets.get(i));\n\n                    DashletComponent dashletComponent = dashlet.getDashboardComponent();\n\n                    m_displayDashlets.put(dashletComponent.getComponent(), dashletComponent);\n\n                    dashletComponent.refresh();\n\n                    addComponent(createPanel(dashletComponent.getComponent()), x, y);\n\n                    i++;\n                }\n            }\n        }\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Default constructor.\n     */\n    public HeaderLayout() {\n        /**\n         * Setting up the layout\n         */\n        addStyleName(\"header\");\n        setMargin(true);\n        setSpacing(true);\n        setWidth(\"100%\");\n\n        /**\n         * Adding the logo\n         */\n        Link link = new Link(null, new ExternalResource(\"/opennms/index.jsp\"));\n        link.setIcon(new ThemeResource(\"img/logo.png\"));\n        addComponent(link);\n        setExpandRatio(link, 1.0f);\n\n        /**\n         * Adding the selection box\n         */\n        final NativeSelect nativeSelect = new NativeSelect();\n        nativeSelect.setContainerDataSource(WallboardProvider.getInstance().getBeanContainer());\n        nativeSelect.setItemCaptionPropertyId(\"title\");\n        nativeSelect.setNullSelectionAllowed(false);\n        nativeSelect.setImmediate(true);\n\n        nativeSelect.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(Property.ValueChangeEvent valueChangeEvent) {\n                wallboardButton.setEnabled(true);\n                dashboardButton.setEnabled(true);\n            }\n        });\n\n        dashboardButton = new Button(\"Dashboard\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                UI.getCurrent().getNavigator().addViewChangeListener(HeaderLayout.this);\n                UI.getCurrent().getNavigator().navigateTo(\"dashboard/\" + nativeSelect.getContainerProperty(nativeSelect.getValue(), \"title\"));\n            }\n        });\n\n        /**\n         * Adding the wallboard button\n         */\n        pauseButton = new Button(\"Pause\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                if (wallboardView.isPaused()) {\n                    wallboardView.resume();\n                } else {\n                    wallboardView.pause();\n                }\n\n                updatePauseButton();\n            }\n        });\n\n        /**\n         * Adding the wallboard button\n         */\n        wallboardButton = new Button(\"Wallboard\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                UI.getCurrent().getNavigator().addViewChangeListener(HeaderLayout.this);\n                UI.getCurrent().getNavigator().navigateTo(\"wallboard/\" + nativeSelect.getContainerProperty(nativeSelect.getValue(), \"title\"));\n            }\n        });\n\n        pauseButton.setEnabled(false);\n        wallboardButton.setEnabled(false);\n        dashboardButton.setEnabled(false);\n\n        addComponents(nativeSelect, dashboardButton, wallboardButton, pauseButton);\n        setComponentAlignment(nativeSelect, Alignment.MIDDLE_CENTER);\n        setComponentAlignment(dashboardButton, Alignment.MIDDLE_CENTER);\n        setComponentAlignment(wallboardButton, Alignment.MIDDLE_CENTER);\n        setComponentAlignment(pauseButton, Alignment.MIDDLE_CENTER);\n    }","id":39519,"modified_method":"/**\n     * Default constructor.\n     */\n    public HeaderLayout() {\n        /**\n         * Setting up the layout\n         */\n        addStyleName(\"header\");\n        setMargin(true);\n        setSpacing(true);\n        setWidth(\"100%\");\n\n        /**\n         * Adding the logo\n         */\n        Link link = new Link(null, new ExternalResource(\"/opennms/index.jsp\"));\n        link.setIcon(new ThemeResource(\"img/logo.png\"));\n        addComponent(link);\n        setExpandRatio(link, 1.0f);\n\n        /**\n         * Adding the selection box\n         */\n        final NativeSelect nativeSelect = new NativeSelect();\n        nativeSelect.setContainerDataSource(WallboardProvider.getInstance().getBeanContainer());\n        nativeSelect.setItemCaptionPropertyId(\"title\");\n        nativeSelect.setNullSelectionAllowed(false);\n        nativeSelect.setImmediate(true);\n\n        nativeSelect.addValueChangeListener(new Property.ValueChangeListener() {\n            @Override\n            public void valueChange(Property.ValueChangeEvent valueChangeEvent) {\n                wallboardButton.setEnabled(true);\n                dashboardButton.setEnabled(true);\n            }\n        });\n\n        dashboardButton = new Button(\"Dashboard\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                UI.getCurrent().getNavigator().addViewChangeListener(HeaderLayout.this);\n                UI.getCurrent().getNavigator().navigateTo(\"dashboard/\" + nativeSelect.getContainerProperty(nativeSelect.getValue(), \"title\"));\n            }\n        });\n\n        /**\n         * Adding the wallboard button\n         */\n        pauseButton = new Button(\"Pause\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                if (wallboardView instanceof WallboardView) {\n                if (((WallboardView) wallboardView).isPaused()) {\n                    ((WallboardView) wallboardView).resume();\n                } else {\n                    ((WallboardView) wallboardView).pause();\n                }\n                } else {\n                    if (wallboardView instanceof DashboardView) {\n                        ((DashboardView) wallboardView).updateAll();\n                    }\n                }\n\n                updatePauseButton();\n            }\n        });\n\n        /**\n         * Adding the wallboard button\n         */\n        wallboardButton = new Button(\"Wallboard\", new Button.ClickListener() {\n            @Override\n            public void buttonClick(Button.ClickEvent event) {\n                UI.getCurrent().getNavigator().addViewChangeListener(HeaderLayout.this);\n                UI.getCurrent().getNavigator().navigateTo(\"wallboard/\" + nativeSelect.getContainerProperty(nativeSelect.getValue(), \"title\"));\n            }\n        });\n\n        pauseButton.setEnabled(false);\n        wallboardButton.setEnabled(false);\n        dashboardButton.setEnabled(false);\n\n        addComponents(nativeSelect, dashboardButton, wallboardButton, pauseButton);\n        setComponentAlignment(nativeSelect, Alignment.MIDDLE_CENTER);\n        setComponentAlignment(dashboardButton, Alignment.MIDDLE_CENTER);\n        setComponentAlignment(wallboardButton, Alignment.MIDDLE_CENTER);\n        setComponentAlignment(pauseButton, Alignment.MIDDLE_CENTER);\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void updatePauseButton() {\n        if (wallboardView.isPausable()) {\n            pauseButton.setEnabled(true);\n\n            if (wallboardView.isPaused()) {\n                pauseButton.setCaption(\"Resume\");\n            } else {\n                pauseButton.setCaption(\"Pause\");\n            }\n        } else {\n            pauseButton.setEnabled(false);\n            pauseButton.setCaption(\"Pause\");\n        }\n    }","id":39520,"modified_method":"private void updatePauseButton() {\n        if (wallboardView instanceof WallboardView) {\n            if (((WallboardView) wallboardView).isPausable()) {\n                pauseButton.setEnabled(true);\n\n                if (((WallboardView) wallboardView).isPaused()) {\n                    pauseButton.setCaption(\"Resume\");\n                } else {\n                    pauseButton.setCaption(\"Pause\");\n                }\n            } else {\n                pauseButton.setEnabled(false);\n                pauseButton.setCaption(\"Pause\");\n            }\n        } else {\n            if (wallboardView instanceof DashboardView) {\n                pauseButton.setCaption(\"Refresh\");\n                pauseButton.setEnabled(true);\n            } else {\n                pauseButton.setCaption(\"Pause\");\n                pauseButton.setEnabled(false);\n            }\n        }\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public void afterViewChange(ViewChangeListener.ViewChangeEvent viewChangeEvent) {\n        if (viewChangeEvent.getNewView() instanceof WallboardView) {\n            wallboardView = (WallboardView) viewChangeEvent.getNewView();\n\n            updatePauseButton();\n        } else {\n            pauseButton.setCaption(\"Pause\");\n            pauseButton.setEnabled(false);\n        }\n    }","id":39521,"modified_method":"@Override\n    public void afterViewChange(ViewChangeListener.ViewChangeEvent viewChangeEvent) {\n        wallboardView = viewChangeEvent.getNewView();\n\n        updatePauseButton();\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getDashboardComponent() {\n        return getWallboardComponent();\n    }","id":39522,"modified_method":"@Override\n    public DashletComponent getDashboardComponent() {\n        return getWallboardComponent();\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getWallboardComponent() {\n        if (m_wallboardLayout == null) {\n            m_wallboardLayout = new VerticalLayout();\n            m_wallboardLayout.setCaption(getName());\n            m_wallboardLayout.setSizeFull();\n        }\n\n        return m_wallboardLayout;\n    }","id":39523,"modified_method":"@Override\n    public DashletComponent getWallboardComponent() {\n        if (m_dashletComponent == null) {\n            m_dashletComponent = new AbstractDashletComponent() {\n                private VerticalLayout m_verticalLayout = new VerticalLayout();\n\n                {\n                    m_verticalLayout.setCaption(getName());\n                    m_verticalLayout.setSizeFull();\n                }\n\n                @Override\n                public void refresh() {\n                    String newImage = getDashletSpec().getParameters().get(\"imageUrl\");\n\n                    String maximizeHeightString = getDashletSpec().getParameters().get(\"maximizeHeight\");\n                    String maximizeWidthString = getDashletSpec().getParameters().get(\"maximizeWidth\");\n\n                    boolean maximizeHeight = (\"true\".equals(maximizeHeightString) || \"yes\".equals(maximizeHeightString) || \"1\".equals(maximizeHeightString));\n                    boolean maximizeWidth = (\"true\".equals(maximizeWidthString) || \"yes\".equals(maximizeWidthString) || \"1\".equals(maximizeWidthString));\n\n                    if (!newImage.equals(m_imageUrl)) {\n                        m_imageUrl = newImage;\n                        m_verticalLayout.removeAllComponents();\n                        Image image = new Image(null, new ExternalResource(m_imageUrl));\n                        if (maximizeHeight && maximizeWidth) {\n                            image.setSizeFull();\n                        } else {\n                            if (maximizeHeight) {\n                                image.setHeight(100, Sizeable.Unit.PERCENTAGE);\n                            }\n                            if (maximizeWidth) {\n                                image.setWidth(100, Sizeable.Unit.PERCENTAGE);\n                            }\n                        }\n                        m_verticalLayout.addComponent(image);\n                        m_verticalLayout.setComponentAlignment(image, Alignment.MIDDLE_CENTER);\n                    }\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_verticalLayout;\n                }\n            };\n        }\n\n        return m_dashletComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getDashboardComponent() {\n        if (m_dashboardLayout == null) {\n            m_dashboardLayout = new VerticalLayout();\n            m_dashboardLayout.setCaption(getName());\n            m_dashboardLayout.setSizeFull();\n        }\n\n        return m_dashboardLayout;\n    }","id":39524,"modified_method":"@Override\n    public DashletComponent getDashboardComponent() {\n        if (m_dashboardComponent == null) {\n            m_dashboardComponent = new AbstractDashletComponent() {\n                private VerticalLayout m_verticalLayout = new VerticalLayout();\n\n                {\n                    m_verticalLayout.setCaption(getName());\n                    m_verticalLayout.setSizeFull();\n                }\n\n                @Override\n                public void refresh() {\n                    m_verticalLayout.removeAllComponents();\n\n                    String kscReportName = getDashletSpec().getParameters().get(\"kscReport\");\n\n                    if (kscReportName == null || \"\".equals(kscReportName)) {\n                        return;\n                    }\n\n                    KSC_PerformanceReportFactory kscPerformanceReportFactory = KSC_PerformanceReportFactory.getInstance();\n\n                    Map<Integer, String> reportsMap = kscPerformanceReportFactory.getReportList();\n\n                    int kscReportId = -1;\n\n                    for (Map.Entry<Integer, String> entry : reportsMap.entrySet()) {\n\n                        if (kscReportName.equals(entry.getValue())) {\n                            kscReportId = entry.getKey();\n                            break;\n                        }\n                    }\n\n                    if (kscReportId == -1) {\n                        return;\n                    }\n\n                    Report kscReport = kscPerformanceReportFactory.getReportByIndex(kscReportId);\n\n                    Page.getCurrent().getStyles().add(\".box { margin: 5px; background-color: #444; border: 1px solid #999; border-top: 0; overflow: auto; }\");\n                    Page.getCurrent().getStyles().add(\".text { color:#ffffff; line-height: 11px; font-size: 9px; font-family: 'Lucida Grande', Verdana, sans-serif; font-weight: bold; }\");\n                    Page.getCurrent().getStyles().add(\".margin { margin:5px; }\");\n\n                    int width = 0;\n                    int height = 0;\n\n                    Accordion accordion = new Accordion();\n                    accordion.setSizeFull();\n                    m_verticalLayout.addComponent(accordion);\n\n                    for (Graph graph : kscReport.getGraph()) {\n                        Map<String, String> data = getDataForResourceId(graph.getNodeId(), graph.getResourceId());\n\n                        Calendar beginTime = Calendar.getInstance();\n                        Calendar endTime = Calendar.getInstance();\n\n                        KSC_PerformanceReportFactory.getBeginEndTime(graph.getTimespan(), beginTime, endTime);\n\n                        String urlString = \"/opennms/graph/graph.png?resourceId=\" + graph.getResourceId() + \"&report=\" + graph.getGraphtype() + \"&start=\" + beginTime.getTimeInMillis() + \"&end=\" + endTime.getTimeInMillis() + (width > 0 ? \"&width=\" + width : \"\") + (height > 0 ? \"&height=\" + height : \"\");\n\n                        Image image = new Image(null, new ExternalResource(urlString));\n\n                        VerticalLayout verticalLayout = new VerticalLayout();\n\n                        HorizontalLayout horizontalLayout = new HorizontalLayout();\n                        horizontalLayout.addStyleName(\"box\");\n                        horizontalLayout.setWidth(\"100%\");\n                        horizontalLayout.setHeight(\"42px\");\n\n                        VerticalLayout leftLayout = new VerticalLayout();\n                        leftLayout.setDefaultComponentAlignment(Alignment.TOP_LEFT);\n                        leftLayout.addStyleName(\"margin\");\n\n                        Label labelTitle;\n\n                        if (graph.getTitle() == null || \"\".equals(graph.getTitle())) {\n                            labelTitle = new Label(\"&nbsp;\");\n                            labelTitle.setContentMode(ContentMode.HTML);\n                        } else {\n                            labelTitle = new Label(graph.getTitle());\n                        }\n\n                        labelTitle.addStyleName(\"text\");\n\n                        Label labelFrom = new Label(\"From: \" + beginTime.getTime().toString());\n                        labelFrom.addStyleName(\"text\");\n\n                        Label labelTo = new Label(\"To: \" + endTime.getTime().toString());\n                        labelTo.addStyleName(\"text\");\n\n                        Label labelNodeLabel = new Label(data.get(\"nodeLabel\"));\n                        labelNodeLabel.addStyleName(\"text\");\n\n                        Label labelResourceLabel = new Label(data.get(\"resourceTypeLabel\") + \": \" + data.get(\"resourceLabel\"));\n                        labelResourceLabel.addStyleName(\"text\");\n\n                        leftLayout.addComponent(labelTitle);\n                        leftLayout.addComponent(labelFrom);\n                        leftLayout.addComponent(labelTo);\n\n                        VerticalLayout rightLayout = new VerticalLayout();\n                        rightLayout.setDefaultComponentAlignment(Alignment.TOP_LEFT);\n                        rightLayout.addStyleName(\"margin\");\n\n                        rightLayout.addComponent(labelNodeLabel);\n                        rightLayout.addComponent(labelResourceLabel);\n\n                        horizontalLayout.addComponent(leftLayout);\n                        horizontalLayout.addComponent(rightLayout);\n\n                        horizontalLayout.setExpandRatio(leftLayout, 1.0f);\n                        horizontalLayout.setExpandRatio(rightLayout, 1.0f);\n\n                        verticalLayout.addComponent(horizontalLayout);\n                        verticalLayout.addComponent(image);\n                        verticalLayout.setWidth(image.getWidth() + \"px\");\n\n                        accordion.addTab(verticalLayout, data.get(\"nodeLabel\") + \"/\" + data.get(\"resourceTypeLabel\") + \": \" + data.get(\"resourceLabel\"));\n\n                        verticalLayout.setComponentAlignment(horizontalLayout, Alignment.MIDDLE_CENTER);\n                        verticalLayout.setComponentAlignment(image, Alignment.MIDDLE_CENTER);\n                        verticalLayout.setMargin(true);\n                    }\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_verticalLayout;\n                }\n            };\n        }\n\n        return m_dashboardComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getWallboardComponent() {\n        if (m_gridLayout == null) {\n            m_gridLayout = new GridLayout();\n            m_gridLayout.setCaption(getName());\n            m_gridLayout.setSizeFull();\n            m_gridLayout.setColumns(1);\n            m_gridLayout.setRows(1);\n        }\n\n        return m_gridLayout;\n    }","id":39525,"modified_method":"@Override\n    public DashletComponent getWallboardComponent() {\n        if (m_wallboardComponent == null) {\n            m_wallboardComponent = new AbstractDashletComponent() {\n                private GridLayout m_gridLayout = new GridLayout();\n\n                {\n                    m_gridLayout.setCaption(getName());\n                    m_gridLayout.setSizeFull();\n                    m_gridLayout.setColumns(1);\n                    m_gridLayout.setRows(1);\n                }\n\n                @Override\n                public void refresh() {\n                    m_gridLayout.removeAllComponents();\n\n                    /**\n                     * initializing the parameters\n                     */\n                    int columns = 0;\n                    int rows = 0;\n\n                    String kscReportName = getDashletSpec().getParameters().get(\"kscReport\");\n\n                    if (kscReportName == null || \"\".equals(kscReportName)) {\n                        return;\n                    }\n\n                    KSC_PerformanceReportFactory kscPerformanceReportFactory = KSC_PerformanceReportFactory.getInstance();\n\n                    Map<Integer, String> reportsMap = kscPerformanceReportFactory.getReportList();\n\n                    int kscReportId = -1;\n\n                    for (Map.Entry<Integer, String> entry : reportsMap.entrySet()) {\n\n                        if (kscReportName.equals(entry.getValue())) {\n                            kscReportId = entry.getKey();\n                            break;\n                        }\n                    }\n\n                    if (kscReportId == -1) {\n                        return;\n                    }\n\n                    Report kscReport = kscPerformanceReportFactory.getReportByIndex(kscReportId);\n\n                    columns = kscReport.getGraphs_per_line();\n\n                    if (columns == 0) {\n                        columns = 1;\n                    }\n\n                    rows = kscReport.getGraphCount() / columns;\n\n                    if (rows == 0) {\n                        rows = 1;\n                    }\n\n                    if (kscReport.getGraphCount() % columns > 0) {\n                        rows++;\n                    }\n\n                    int width = 0;\n                    int height = 0;\n\n        /*\n        try {\n            width = Integer.parseInt(m_dashletSpec.getParameters().get(\"width\"));\n        } catch (NumberFormatException numberFormatException) {\n            width = 400;\n        }\n\n        try {\n            height = Integer.parseInt(m_dashletSpec.getParameters().get(\"height\"));\n        } catch (NumberFormatException numberFormatException) {\n            height = 100;\n        }\n        */\n\n                    /**\n                     * setting new columns/rows\n                     */\n                    m_gridLayout.setColumns(columns);\n                    m_gridLayout.setRows(rows);\n\n                    int i = 0;\n\n                    /**\n                     * adding the components\n                     */\n\n                    Page.getCurrent().getStyles().add(\".box { margin: 5px; background-color: #444; border: 1px solid #999; border-top: 0; overflow: auto; }\");\n                    Page.getCurrent().getStyles().add(\".text { color:#ffffff; line-height: 11px; font-size: 9px; font-family: 'Lucida Grande', Verdana, sans-serif; font-weight: bold; }\");\n                    Page.getCurrent().getStyles().add(\".margin { margin:5px; }\");\n\n                    for (int y = 0; y < m_gridLayout.getRows(); y++) {\n                        for (int x = 0; x < m_gridLayout.getColumns(); x++) {\n\n                            if (i < kscReport.getGraphCount()) {\n                                Graph graph = kscReport.getGraph(i);\n\n                                Map<String, String> data = getDataForResourceId(graph.getNodeId(), graph.getResourceId());\n\n                                Calendar beginTime = Calendar.getInstance();\n                                Calendar endTime = Calendar.getInstance();\n\n                                KSC_PerformanceReportFactory.getBeginEndTime(graph.getTimespan(), beginTime, endTime);\n\n                                String urlString = \"/opennms/graph/graph.png?resourceId=\" + graph.getResourceId() + \"&report=\" + graph.getGraphtype() + \"&start=\" + beginTime.getTimeInMillis() + \"&end=\" + endTime.getTimeInMillis() + (width > 0 ? \"&width=\" + width : \"\") + (height > 0 ? \"&height=\" + height : \"\");\n\n                                Image image = new Image(null, new ExternalResource(urlString));\n\n                                VerticalLayout verticalLayout = new VerticalLayout();\n\n                                HorizontalLayout horizontalLayout = new HorizontalLayout();\n                                horizontalLayout.addStyleName(\"box\");\n                                horizontalLayout.setWidth(\"100%\");\n                                horizontalLayout.setHeight(\"42px\");\n\n                                VerticalLayout leftLayout = new VerticalLayout();\n                                leftLayout.setDefaultComponentAlignment(Alignment.TOP_LEFT);\n                                leftLayout.addStyleName(\"margin\");\n\n                                Label labelTitle;\n\n                                if (graph.getTitle() == null || \"\".equals(graph.getTitle())) {\n                                    labelTitle = new Label(\"&nbsp;\");\n                                    labelTitle.setContentMode(ContentMode.HTML);\n                                } else {\n                                    labelTitle = new Label(graph.getTitle());\n                                }\n\n                                labelTitle.addStyleName(\"text\");\n\n                                Label labelFrom = new Label(\"From: \" + beginTime.getTime().toString());\n                                labelFrom.addStyleName(\"text\");\n\n                                Label labelTo = new Label(\"To: \" + endTime.getTime().toString());\n                                labelTo.addStyleName(\"text\");\n\n                                Label labelNodeLabel = new Label(data.get(\"nodeLabel\"));\n                                labelNodeLabel.addStyleName(\"text\");\n\n                                Label labelResourceLabel = new Label(data.get(\"resourceTypeLabel\") + \": \" + data.get(\"resourceLabel\"));\n                                labelResourceLabel.addStyleName(\"text\");\n\n                                leftLayout.addComponent(labelTitle);\n                                leftLayout.addComponent(labelFrom);\n                                leftLayout.addComponent(labelTo);\n\n                                VerticalLayout rightLayout = new VerticalLayout();\n                                rightLayout.setDefaultComponentAlignment(Alignment.TOP_LEFT);\n                                rightLayout.addStyleName(\"margin\");\n\n                                rightLayout.addComponent(labelNodeLabel);\n                                rightLayout.addComponent(labelResourceLabel);\n\n                                horizontalLayout.addComponent(leftLayout);\n                                horizontalLayout.addComponent(rightLayout);\n\n                                horizontalLayout.setExpandRatio(leftLayout, 1.0f);\n                                horizontalLayout.setExpandRatio(rightLayout, 1.0f);\n\n                                verticalLayout.addComponent(horizontalLayout);\n                                verticalLayout.addComponent(image);\n                                verticalLayout.setWidth(image.getWidth() + \"px\");\n\n                                m_gridLayout.addComponent(verticalLayout, x, y);\n\n                                verticalLayout.setComponentAlignment(horizontalLayout, Alignment.MIDDLE_CENTER);\n                                verticalLayout.setComponentAlignment(image, Alignment.MIDDLE_CENTER);\n                                m_gridLayout.setComponentAlignment(verticalLayout, Alignment.MIDDLE_CENTER);\n                            }\n                            i++;\n                        }\n                    }\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_gridLayout;\n                }\n            };\n        }\n\n        return m_wallboardComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getWallboardComponent() {\n        if (m_wallboardLayout == null) {\n            m_wallboardLayout = new VerticalLayout();\n            m_wallboardLayout.setCaption(getName());\n            m_wallboardLayout.setSizeFull();\n\n            String searchString = \"\";\n\n            if (getDashletSpec().getParameters().containsKey(\"search\")) {\n                searchString = getDashletSpec().getParameters().get(\"search\");\n            }\n\n\n            BrowserFrame browserFrame = new BrowserFrame(null, new ExternalResource(\"/opennms/node-maps#search/\" + searchString));\n            browserFrame.setSizeFull();\n            m_wallboardLayout.addComponent(browserFrame);\n        }\n\n        return m_wallboardLayout;\n    }","id":39526,"modified_method":"@Override\n    public DashletComponent getWallboardComponent() {\n        if (m_dashletComponent == null) {\n            m_dashletComponent = new AbstractDashletComponent() {\n                private VerticalLayout m_verticalLayout = new VerticalLayout();\n\n                {\n                    m_verticalLayout.setCaption(getName());\n                    m_verticalLayout.setSizeFull();\n                }\n\n                @Override\n                public void refresh() {\n                    m_verticalLayout.removeAllComponents();\n                    String searchString = \"\";\n\n                    if (getDashletSpec().getParameters().containsKey(\"search\")) {\n                        searchString = getDashletSpec().getParameters().get(\"search\");\n                    }\n\n                    BrowserFrame browserFrame = new BrowserFrame(null, new ExternalResource(\"/opennms/node-maps#search/\" + searchString));\n                    browserFrame.setSizeFull();\n                    m_verticalLayout.addComponent(browserFrame);\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_verticalLayout;\n                }\n            };\n        }\n\n        return m_dashletComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getDashboardComponent() {\n        return getWallboardComponent();\n    }","id":39527,"modified_method":"@Override\n    public DashletComponent getDashboardComponent() {\n        return getWallboardComponent();\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getDashboardComponent() {\n        if (m_dashboardLayout == null) {\n            m_dashboardLayout = new VerticalLayout();\n            m_dashboardLayout.setCaption(getName());\n            m_dashboardLayout.setSizeFull();\n        }\n\n        return m_dashboardLayout;\n    }","id":39528,"modified_method":"@Override\n    public DashletComponent getDashboardComponent() {\n        if (m_dashboardComponent == null) {\n            m_dashboardComponent = new AbstractDashletComponent() {\n                private VerticalLayout m_verticalLayout = new VerticalLayout();\n\n                {\n                    m_verticalLayout.setCaption(getName());\n                    m_verticalLayout.setSizeFull();\n                }\n\n                @Override\n                public void refresh() {\n                    /**\n                     * removing old components\n                     */\n                    m_verticalLayout.removeAllComponents();\n\n                    /**\n                     * iniatizing the parameters\n                     */\n                    int columns = 0;\n                    int rows = 0;\n                    int width = 0;\n                    int height = 0;\n\n                    try {\n                        columns = Integer.parseInt(getDashletSpec().getParameters().get(\"columns\"));\n                    } catch (NumberFormatException numberFormatException) {\n                        columns = 1;\n                    }\n\n                    try {\n                        rows = Integer.parseInt(getDashletSpec().getParameters().get(\"rows\"));\n                    } catch (NumberFormatException numberFormatException) {\n                        rows = 1;\n                    }\n\n                    try {\n                        width = Integer.parseInt(getDashletSpec().getParameters().get(\"width\"));\n                    } catch (NumberFormatException numberFormatException) {\n                        width = 400;\n                    }\n\n                    try {\n                        height = Integer.parseInt(getDashletSpec().getParameters().get(\"height\"));\n                    } catch (NumberFormatException numberFormatException) {\n                        height = 100;\n                    }\n\n                    /**\n                     * getting the timeframe values\n                     */\n                    int timeFrameValue;\n                    int timeFrameType;\n\n                    try {\n                        timeFrameValue = Integer.parseInt(getDashletSpec().getParameters().get(\"timeFrameValue\"));\n                    } catch (NumberFormatException numberFormatException) {\n                        timeFrameValue = 1;\n                    }\n\n                    try {\n                        timeFrameType = Integer.parseInt(getDashletSpec().getParameters().get(\"timeFrameType\"));\n                    } catch (NumberFormatException numberFormatException) {\n                        timeFrameType = Calendar.HOUR;\n                    }\n\n                    int i = 0;\n\n                    Page.getCurrent().getStyles().add(\".box { margin: 5px; background-color: #444; border: 1px solid #999; border-top: 0; overflow: auto; }\");\n                    Page.getCurrent().getStyles().add(\".text { color:#ffffff; line-height: 11px; font-size: 9px; font-family: 'Lucida Grande', Verdana, sans-serif; font-weight: bold; }\");\n                    Page.getCurrent().getStyles().add(\".margin { margin:5px; }\");\n\n                    Accordion accordion = new Accordion();\n                    accordion.setSizeFull();\n\n                    /**\n                     * adding the components\n                     */\n                    for (int y = 0; y < rows; y++) {\n                        for (int x = 0; x < columns; x++) {\n                            String graphUrl = getDashletSpec().getParameters().get(\"graphUrl\" + i);\n\n                            if (graphUrl != null && !\"\".equals(graphUrl)) {\n                                accordion.addTab(getGraphComponent(i, width, height, timeFrameType, timeFrameValue), getDashletSpec().getParameters().get(\"nodeLabel\" + i) + \"/\" + getDashletSpec().getParameters().get(\"resourceTypeLabel\" + i) + \": \" + getDashletSpec().getParameters().get(\"resourceLabel\" + i));\n                            }\n                            i++;\n                        }\n                    }\n\n                    m_verticalLayout.addComponent(accordion);\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_verticalLayout;\n                }\n            };\n        }\n\n        return m_dashboardComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getWallboardComponent() {\n        if (m_gridLayout == null) {\n            m_gridLayout = new GridLayout();\n            m_gridLayout.setCaption(getName());\n            m_gridLayout.setSizeFull();\n            m_gridLayout.setColumns(1);\n            m_gridLayout.setRows(1);\n        }\n\n        return m_gridLayout;\n    }","id":39529,"modified_method":"@Override\n    public DashletComponent getWallboardComponent() {\n        if (m_wallboardComponent == null) {\n            m_wallboardComponent = new AbstractDashletComponent() {\n                private GridLayout m_gridLayout = new GridLayout();\n\n                {\n                    m_gridLayout.setCaption(getName());\n                    m_gridLayout.setSizeFull();\n                    m_gridLayout.setColumns(1);\n                    m_gridLayout.setRows(1);\n                }\n\n                @Override\n                public void refresh() {\n                    /**\n                     * removing old components\n                     */\n                    m_gridLayout.removeAllComponents();\n\n                    /**\n                     * iniatizing the parameters\n                     */\n                    int columns = 0;\n                    int rows = 0;\n                    int width = 0;\n                    int height = 0;\n\n                    try {\n                        columns = Integer.parseInt(getDashletSpec().getParameters().get(\"columns\"));\n                    } catch (NumberFormatException numberFormatException) {\n                        columns = 1;\n                    }\n\n                    try {\n                        rows = Integer.parseInt(getDashletSpec().getParameters().get(\"rows\"));\n                    } catch (NumberFormatException numberFormatException) {\n                        rows = 1;\n                    }\n\n                    try {\n                        width = Integer.parseInt(getDashletSpec().getParameters().get(\"width\"));\n                    } catch (NumberFormatException numberFormatException) {\n                        width = 400;\n                    }\n\n                    try {\n                        height = Integer.parseInt(getDashletSpec().getParameters().get(\"height\"));\n                    } catch (NumberFormatException numberFormatException) {\n                        height = 100;\n                    }\n\n                    /**\n                     * getting the timeframe values\n                     */\n                    int timeFrameValue;\n                    int timeFrameType;\n\n                    try {\n                        timeFrameValue = Integer.parseInt(getDashletSpec().getParameters().get(\"timeFrameValue\"));\n                    } catch (NumberFormatException numberFormatException) {\n                        timeFrameValue = 1;\n                    }\n\n                    try {\n                        timeFrameType = Integer.parseInt(getDashletSpec().getParameters().get(\"timeFrameType\"));\n                    } catch (NumberFormatException numberFormatException) {\n                        timeFrameType = Calendar.HOUR;\n                    }\n\n                    /**\n                     * setting new columns/rows\n                     */\n                    m_gridLayout.setColumns(columns);\n                    m_gridLayout.setRows(rows);\n\n                    int i = 0;\n\n                    Page.getCurrent().getStyles().add(\".box { margin: 5px; background-color: #444; border: 1px solid #999; border-top: 0; overflow: auto; }\");\n                    Page.getCurrent().getStyles().add(\".text { color:#ffffff; line-height: 11px; font-size: 9px; font-family: 'Lucida Grande', Verdana, sans-serif; font-weight: bold; }\");\n                    Page.getCurrent().getStyles().add(\".margin { margin:5px; }\");\n\n                    /**\n                     * adding the components\n                     */\n                    for (int y = 0; y < m_gridLayout.getRows(); y++) {\n                        for (int x = 0; x < m_gridLayout.getColumns(); x++) {\n                            String graphUrl = getDashletSpec().getParameters().get(\"graphUrl\" + i);\n\n                            if (graphUrl != null && !\"\".equals(graphUrl)) {\n                                Component component = getGraphComponent(i, width, height, timeFrameType, timeFrameValue);\n                                m_gridLayout.addComponent(component, x, y);\n                                m_gridLayout.setComponentAlignment(component, Alignment.MIDDLE_CENTER);\n                            }\n                            i++;\n                        }\n                    }\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_gridLayout;\n                }\n            };\n        }\n\n        return m_wallboardComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getDashboardComponent() {\n        return getWallboardComponent();\n    }","id":39530,"modified_method":"@Override\n    public DashletComponent getDashboardComponent() {\n        return getWallboardComponent();\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getWallboardComponent() {\n        if (m_verticalLayout == null) {\n            m_verticalLayout = new VerticalLayout();\n            m_verticalLayout.setCaption(getName());\n            m_verticalLayout.setSizeFull();\n\n            m_browserFrame = new BrowserFrame(null, new ExternalResource(\"/opennms/rtc/fullscreen-categories-box.jsp\"));\n            m_browserFrame.setSizeFull();\n            m_verticalLayout.addComponent(m_browserFrame);\n        }\n\n        return m_verticalLayout;\n    }","id":39531,"modified_method":"@Override\n    public DashletComponent getWallboardComponent() {\n        if (m_dashletComponent == null) {\n            m_dashletComponent = new AbstractDashletComponent() {\n                private VerticalLayout m_verticalLayout = new VerticalLayout();\n\n                {\n                    m_verticalLayout.setCaption(getName());\n                    m_verticalLayout.setSizeFull();\n                }\n\n                @Override\n                public void refresh() {\n                    m_verticalLayout.removeAllComponents();\n                    m_browserFrame = new BrowserFrame(null, new ExternalResource(\"/opennms/rtc/fullscreen-categories-box.jsp\"));\n                    m_browserFrame.setSizeFull();\n                    m_verticalLayout.addComponent(m_browserFrame);\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_verticalLayout;\n                }\n            };\n        }\n\n        return m_dashletComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getDashboardComponent() {\n        if (m_dashboardLayout == null) {\n            m_dashboardLayout = new HorizontalLayout();\n            m_dashboardLayout.setCaption(getName());\n            m_dashboardLayout.setSizeFull();\n        }\n\n        return m_dashboardLayout;\n    }","id":39532,"modified_method":"@Override\n    public DashletComponent getDashboardComponent() {\n        if (m_dashboardComponent == null) {\n            m_dashboardComponent = new AbstractDashletComponent() {\n                private HorizontalLayout m_horizontalLayout = new HorizontalLayout();\n\n                {\n                    m_horizontalLayout.setCaption(getName());\n                    m_horizontalLayout.setSizeFull();\n                }\n\n                /**\n                 * Injects CSS styles in the current page\n                 */\n                private void injectDashboardStyles() {\n                    Page.getCurrent().getStyles().add(\".summary.cleared { background: #000000; border-left: 8px solid #858585; }\");\n                    Page.getCurrent().getStyles().add(\".summary.normal { background: #000000; border-left: 8px solid #336600; }\");\n                    Page.getCurrent().getStyles().add(\".summary.indeterminate {  background: #000000; border-left: 8px solid #999; }\");\n                    Page.getCurrent().getStyles().add(\".summary.warning { background: #000000; border-left: 8px solid #FFCC00; }\");\n                    Page.getCurrent().getStyles().add(\".summary.minor { background: #000000;  border-left: 8px solid #FF9900; }\");\n                    Page.getCurrent().getStyles().add(\".summary.major { background: #000000; border-left: 8px solid #FF3300; }\");\n                    Page.getCurrent().getStyles().add(\".summary.critical { background: #000000; border-left: 8px solid #CC0000; }\");\n                    Page.getCurrent().getStyles().add(\".summary.global { background: #000000; border-left: 8px solid #000000; }\");\n                    Page.getCurrent().getStyles().add(\".summary { padding: 5px 5px; margin: 1px; }\");\n                    Page.getCurrent().getStyles().add(\".summary-font { font-size: 17px; line-height: normal; text-align: right; color: #3ba300; }\");\n                    Page.getCurrent().getStyles().add(\".summary-font-legend { font-size: 9px; line-height: normal; text-align: right; color: #3ba300; }\");\n                }\n\n                @Override\n                public void refresh() {\n                    m_timeslot = 3600;\n\n                    try {\n                        m_timeslot = Math.max(1, Integer.parseInt(getDashletSpec().getParameters().get(\"timeslot\")));\n                    } catch (NumberFormatException numberFormatException) {\n                        /**\n                         * Just ignore\n                         */\n                    }\n\n                    m_horizontalLayout.removeAllComponents();\n\n                    Accordion accordion = new Accordion();\n                    accordion.setSizeFull();\n\n                    injectDashboardStyles();\n\n                    Component severity = getComponentSeverity(16);\n                    Component uei = getComponentUei(16);\n\n                    VerticalLayout v1 = new VerticalLayout(severity);\n                    v1.setSizeFull();\n                    v1.setComponentAlignment(severity, Alignment.MIDDLE_CENTER);\n                    v1.setMargin(true);\n                    accordion.addTab(v1, \"by Severity\");\n\n                    VerticalLayout v2 = new VerticalLayout(uei);\n                    v2.setSizeFull();\n                    v2.setComponentAlignment(uei, Alignment.MIDDLE_CENTER);\n                    v2.setMargin(true);\n                    accordion.addTab(v2, \"by Uei\");\n\n                    m_horizontalLayout.addComponent(accordion);\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_horizontalLayout;\n                }\n\n                @Override\n                public boolean isBoosted() {\n                    return SummaryDashlet.this.m_boosted;\n                }\n            };\n        }\n\n        return m_dashboardComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getWallboardComponent() {\n        if (m_wallboardLayout == null) {\n            m_wallboardLayout = new HorizontalLayout();\n            m_wallboardLayout.setCaption(getName());\n            m_wallboardLayout.setSizeFull();\n        }\n\n        return m_wallboardLayout;\n    }","id":39533,"modified_method":"@Override\n    public DashletComponent getWallboardComponent() {\n        if (m_wallboardComponent == null) {\n            m_wallboardComponent = new AbstractDashletComponent() {\n                private HorizontalLayout m_horizontalLayout = new HorizontalLayout();\n\n                {\n                    m_horizontalLayout.setCaption(getName());\n                    m_horizontalLayout.setSizeFull();\n                }\n\n                /**\n                 * Injects CSS styles in the current page\n                 */\n                private void injectWallboardStyles() {\n                    Page.getCurrent().getStyles().add(\".summary.cleared { background: #000000; border-left: 15px solid #858585; }\");\n                    Page.getCurrent().getStyles().add(\".summary.normal { background: #000000; border-left: 15px solid #336600; }\");\n                    Page.getCurrent().getStyles().add(\".summary.indeterminate {  background: #000000; border-left: 15px solid #999; }\");\n                    Page.getCurrent().getStyles().add(\".summary.warning { background: #000000; border-left: 15px solid #FFCC00; }\");\n                    Page.getCurrent().getStyles().add(\".summary.minor { background: #000000;  border-left: 15px solid #FF9900; }\");\n                    Page.getCurrent().getStyles().add(\".summary.major { background: #000000; border-left: 15px solid #FF3300; }\");\n                    Page.getCurrent().getStyles().add(\".summary.critical { background: #000000; border-left: 15px solid #CC0000; }\");\n                    Page.getCurrent().getStyles().add(\".summary.global { background: #000000; border-left: 15px solid #000000; }\");\n                    Page.getCurrent().getStyles().add(\".summary { padding: 5px 5px; margin: 1px; }\");\n                    Page.getCurrent().getStyles().add(\".summary-font { font-size: 24px; line-height: normal; text-align: right; color: #3ba300; }\");\n                    Page.getCurrent().getStyles().add(\".summary-font-legend { font-size: 16px; line-height: normal; text-align: right; color: #3ba300; }\");\n                }\n\n                @Override\n                public void refresh() {\n                    m_timeslot = 3600;\n\n                    try {\n                        m_timeslot = Math.max(1, Integer.parseInt(getDashletSpec().getParameters().get(\"timeslot\")));\n                    } catch (NumberFormatException numberFormatException) {\n                        /**\n                         * Just ignore\n                         */\n                    }\n\n                    m_horizontalLayout.removeAllComponents();\n\n                    injectWallboardStyles();\n\n                    Component severity = getComponentSeverity(32);\n                    Component uei = getComponentUei(32);\n\n                    m_horizontalLayout.addComponent(severity);\n                    m_horizontalLayout.addComponent(uei);\n\n                    m_horizontalLayout.setSizeFull();\n                    m_horizontalLayout.setComponentAlignment(severity, Alignment.TOP_CENTER);\n                    m_horizontalLayout.setComponentAlignment(uei, Alignment.TOP_CENTER);\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_horizontalLayout;\n                }\n\n                @Override\n                public boolean isBoosted() {\n                    return SummaryDashlet.this.m_boosted;\n                }\n            };\n        }\n\n        return m_wallboardComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getWallboardComponent() {\n        if (m_verticalLayout == null) {\n            m_verticalLayout = new VerticalLayout();\n            m_verticalLayout.setCaption(getName());\n            m_verticalLayout.setSizeFull();\n\n            String viewName = \"default\";\n\n            if (getDashletSpec().getParameters().containsKey(\"viewName\")) {\n                viewName = getDashletSpec().getParameters().get(\"viewName\");\n            }\n\n            /**\n             * creating browser frame to display node-maps\n             */\n            BrowserFrame browserFrame = new BrowserFrame(null, new ExternalResource(\"/opennms/surveillanceView.htm?quiet=true&viewName=\" + viewName));\n            browserFrame.setSizeFull();\n\n            m_verticalLayout.addComponent(browserFrame);\n        }\n\n        return m_verticalLayout;\n    }","id":39534,"modified_method":"@Override\n    public DashletComponent getWallboardComponent() {\n        if (m_dashletComponent == null) {\n            m_dashletComponent = new AbstractDashletComponent() {\n                private VerticalLayout m_verticalLayout = new VerticalLayout();\n\n                {\n                    m_verticalLayout.setCaption(getName());\n                    m_verticalLayout.setSizeFull();\n                }\n\n                @Override\n                public void refresh() {\n                    m_verticalLayout.removeAllComponents();\n\n                    String viewName = \"default\";\n\n                    if (getDashletSpec().getParameters().containsKey(\"viewName\")) {\n                        viewName = getDashletSpec().getParameters().get(\"viewName\");\n                    }\n\n                    /**\n                     * creating browser frame to display node-maps\n                     */\n                    BrowserFrame browserFrame = new BrowserFrame(null, new ExternalResource(\"/opennms/surveillanceView.htm?quiet=true&viewName=\" + viewName));\n                    browserFrame.setSizeFull();\n\n                    m_verticalLayout.addComponent(browserFrame);\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_verticalLayout;\n                }\n            };\n        }\n\n        return m_dashletComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getDashboardComponent() {\n        return getWallboardComponent();\n    }","id":39535,"modified_method":"@Override\n    public DashletComponent getDashboardComponent() {\n        return getWallboardComponent();\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getDashboardComponent() {\n        return getWallboardComponent();\n    }","id":39536,"modified_method":"@Override\n    public DashletComponent getDashboardComponent() {\n        return getWallboardComponent();\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getWallboardComponent() {\n        if (m_verticalLayout == null) {\n            m_verticalLayout = new VerticalLayout();\n            /**\n             * Setting up the layout\n             */\n            m_verticalLayout.setCaption(getName());\n            m_verticalLayout.setSizeFull();\n\n            String focusNodes = \"\";\n            String szl = \"\";\n            String provider = \"\";\n\n            if (getDashletSpec().getParameters().containsKey(\"focusNodes\")) {\n                focusNodes = getDashletSpec().getParameters().get(\"focusNodes\");\n            }\n\n            if (getDashletSpec().getParameters().containsKey(\"szl\")) {\n                szl = getDashletSpec().getParameters().get(\"szl\");\n            }\n\n            if (getDashletSpec().getParameters().containsKey(\"provider\")) {\n                provider = getDashletSpec().getParameters().get(\"provider\");\n            }\n\n            String query = \"\";\n\n            if (!\"\".equals(focusNodes)) {\n                query += \"focusNodes=\" + focusNodes + \"&\";\n            }\n\n            if (!\"\".equals(szl)) {\n                query += \"szl=\" + szl + \"&\";\n            }\n\n            if (!\"\".equals(provider)) {\n                query += \"provider=\" + provider + \"&\";\n            }\n            /**\n             * creating browser frame to display node-maps\n             */\n            BrowserFrame browserFrame = new BrowserFrame(null, new ExternalResource(\"/opennms/topology?\" + query));\n            browserFrame.setSizeFull();\n            m_verticalLayout.addComponent(browserFrame);\n\n        }\n\n        return m_verticalLayout;\n    }","id":39537,"modified_method":"@Override\n    public DashletComponent getWallboardComponent() {\n        if (m_dashletComponent == null) {\n            m_dashletComponent = new AbstractDashletComponent() {\n                private VerticalLayout m_verticalLayout = new VerticalLayout();\n\n                {\n                    m_verticalLayout.setCaption(getName());\n                    m_verticalLayout.setSizeFull();\n                }\n\n                @Override\n                public void refresh() {\n                    m_verticalLayout.removeAllComponents();\n\n                    String focusNodes = \"\";\n                    String szl = \"\";\n                    String provider = \"\";\n\n                    if (getDashletSpec().getParameters().containsKey(\"focusNodes\")) {\n                        focusNodes = getDashletSpec().getParameters().get(\"focusNodes\");\n                    }\n\n                    if (getDashletSpec().getParameters().containsKey(\"szl\")) {\n                        szl = getDashletSpec().getParameters().get(\"szl\");\n                    }\n\n                    if (getDashletSpec().getParameters().containsKey(\"provider\")) {\n                        provider = getDashletSpec().getParameters().get(\"provider\");\n                    }\n\n                    String query = \"\";\n\n                    if (!\"\".equals(focusNodes)) {\n                        query += \"focusNodes=\" + focusNodes + \"&\";\n                    }\n\n                    if (!\"\".equals(szl)) {\n                        query += \"szl=\" + szl + \"&\";\n                    }\n\n                    if (!\"\".equals(provider)) {\n                        query += \"provider=\" + provider + \"&\";\n                    }\n                    /**\n                     * creating browser frame to display node-maps\n                     */\n                    BrowserFrame browserFrame = new BrowserFrame(null, new ExternalResource(\"/opennms/topology?\" + query));\n                    browserFrame.setSizeFull();\n                    m_verticalLayout.addComponent(browserFrame);\n                }\n\n                @Override\n                public Component getComponent() {\n                    return m_verticalLayout;\n                }\n            };\n        }\n\n        return m_dashletComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getDashboardComponent() {\n        return getWallboardComponent();\n    }","id":39538,"modified_method":"@Override\n    public DashletComponent getDashboardComponent() {\n        return getWallboardComponent();\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    public Component getWallboardComponent() {\n        if (m_verticalLayout == null) {\n            m_verticalLayout = new VerticalLayout();\n            Label label = new Label(\"The defined dashlet could not be found!\");\n            m_verticalLayout.addComponent(label);\n            m_verticalLayout.setComponentAlignment(label, Alignment.MIDDLE_CENTER);\n            m_verticalLayout.setCaption(getName());\n\n        }\n        return m_verticalLayout;\n    }","id":39539,"modified_method":"@Override\n    public DashletComponent getWallboardComponent() {\n        DashletComponent dashletComponent = new AbstractDashletComponent() {\n            @Override\n            public void refresh() {\n            }\n\n            @Override\n            public Component getComponent() {\n                VerticalLayout verticalLayout = new VerticalLayout();\n                Label label = new Label(\"The defined dashlet could not be found!\");\n                verticalLayout.addComponent(label);\n                verticalLayout.setComponentAlignment(label, Alignment.MIDDLE_CENTER);\n                verticalLayout.setCaption(getName());\n\n                return verticalLayout;\n            }\n        };\n        return dashletComponent;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private void advanceTimer() {\n\n        if (paused) {\n            return;\n        }\n\n        waitFor = (waitFor > 250 ? waitFor - 250 : 0);\n\n        if (dashletSpecs.size() > 0) {\n            if (waitFor <= 0) {\n\n                int next = next();\n\n                contentLayout.removeAllComponents();\n\n                if (next != -1) {\n                    waitFor = oldDurationMap.get(next) * 1000;\n\n                    if (!dashlets.get(next).getName().equals(dashletSpecs.get(next).getDashletName())) {\n                        dashlets.put(next, getDashletInstance(dashletSpecs.get(next)));\n                    }\n\n                    contentLayout.addComponent(dashlets.get(next).getWallboardComponent());\n\n                    if (!progressIndicator.isVisible()) {\n                        progressIndicator.setVisible(true);\n                    }\n\n                } else {\n                    contentLayout.addComponent(new Label(\"Nothing to display\"));\n                    progressIndicator.setVisible(false);\n                }\n            }\n        } else {\n            contentLayout.removeAllComponents();\n            contentLayout.addComponent(new Label(\"Nothing to display\"));\n            progressIndicator.setVisible(false);\n        }\n\n        if (durationMap.containsKey(index)) {\n            float x = 1 - ((float) waitFor / (float) (durationMap.get(index) * 1000));\n            progressIndicator.setValue(x);\n        }\n\n        debug();\n    }","id":39540,"modified_method":"private void advanceTimer() {\n\n        if (paused) {\n            return;\n        }\n\n        waitFor = (waitFor > 250 ? waitFor - 250 : 0);\n\n        if (dashletSpecs.size() > 0) {\n            if (waitFor <= 0) {\n\n                int next = next();\n\n                contentLayout.removeAllComponents();\n\n                if (next != -1) {\n                    waitFor = oldDurationMap.get(next) * 1000;\n\n                    if (!dashlets.get(next).getName().equals(dashletSpecs.get(next).getDashletName())) {\n                        dashlets.put(next, getDashletInstance(dashletSpecs.get(next)));\n                    }\n\n                    contentLayout.addComponent(dashlets.get(next).getWallboardComponent().getComponent());\n\n                    if (!progressIndicator.isVisible()) {\n                        progressIndicator.setVisible(true);\n                    }\n\n                } else {\n                    contentLayout.addComponent(new Label(\"Nothing to display\"));\n                    progressIndicator.setVisible(false);\n                }\n            }\n        } else {\n            contentLayout.removeAllComponents();\n            contentLayout.addComponent(new Label(\"Nothing to display\"));\n            progressIndicator.setVisible(false);\n        }\n\n        if (durationMap.containsKey(index)) {\n            float x = 1 - ((float) waitFor / (float) (durationMap.get(index) * 1000));\n            progressIndicator.setValue(x);\n        }\n\n        debug();\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private int next() {\n        if (dashletSpecs.size() == 0) {\n            return -1;\n        }\n\n        int oldIndex = index;\n\n        while (true) {\n            index++;\n\n            if (index >= dashletSpecs.size()) {\n                iteration++;\n                index = 0;\n            }\n\n            if (index == oldIndex && dashletSpecs.size() > 1) {\n                int minValue = Integer.MAX_VALUE, maxIndex = -1;\n\n                for (Map.Entry<Integer, Integer> entry : priorityMap.entrySet()) {\n                    if (entry.getKey() != oldIndex && entry.getValue() < minValue) {\n                        minValue = entry.getValue();\n                        maxIndex = entry.getKey();\n                    }\n                }\n\n                if (maxIndex != -1) {\n                    index = maxIndex;\n                    priorityMap.put(index, 0);\n                }\n            }\n\n            if (!priorityMap.containsKey(index)) {\n                Dashlet dashlet = getDashletInstance(dashletSpecs.get(index));\n                dashlet.getWallboardComponent().addStyleName(\"wallboard\");\n\n                dashlets.put(index, dashlet);\n\n                dashlets.get(index).updateWallboard();\n\n                if (dashlets.get(index).isBoosted()) {\n                    priorityMap.put(index, Math.max(0, dashletSpecs.get(index).getPriority() - dashletSpecs.get(index).getBoostPriority()));\n                    durationMap.put(index, dashletSpecs.get(index).getDuration() + dashletSpecs.get(index).getBoostDuration());\n                } else {\n                    priorityMap.put(index, dashletSpecs.get(index).getPriority());\n                    durationMap.put(index, dashletSpecs.get(index).getDuration());\n                }\n\n                oldPriorityMap.put(index, priorityMap.get(index));\n                oldDurationMap.put(index, durationMap.get(index));\n            }\n\n            if (priorityMap.get(index) <= 0) {\n\n                dashlets.get(index).updateWallboard();\n\n                if (dashlets.get(index).isBoosted()) {\n                    priorityMap.put(index, Math.max(0, dashletSpecs.get(index).getPriority() - dashletSpecs.get(index).getBoostPriority()));\n                    durationMap.put(index, dashletSpecs.get(index).getDuration() + dashletSpecs.get(index).getBoostDuration());\n                } else {\n                    priorityMap.put(index, Math.min(oldPriorityMap.get(index) + PRIORITY_DECREASE, dashletSpecs.get(index).getPriority()));\n                    durationMap.put(index, Math.max(oldDurationMap.get(index) - DURATION_DECREASE, dashletSpecs.get(index).getDuration()));\n                }\n\n                oldPriorityMap.put(index, priorityMap.get(index));\n                oldDurationMap.put(index, durationMap.get(index));\n\n                return index;\n            } else {\n                priorityMap.put(index, priorityMap.get(index) - 1);\n            }\n        }\n    }","id":39541,"modified_method":"private int next() {\n        if (dashletSpecs.size() == 0) {\n            return -1;\n        }\n\n        int oldIndex = index;\n\n        while (true) {\n            index++;\n\n            if (index >= dashletSpecs.size()) {\n                iteration++;\n                index = 0;\n            }\n\n            if (index == oldIndex && dashletSpecs.size() > 1) {\n                int minValue = Integer.MAX_VALUE, maxIndex = -1;\n\n                for (Map.Entry<Integer, Integer> entry : priorityMap.entrySet()) {\n                    if (entry.getKey() != oldIndex && entry.getValue() < minValue) {\n                        minValue = entry.getValue();\n                        maxIndex = entry.getKey();\n                    }\n                }\n\n                if (maxIndex != -1) {\n                    index = maxIndex;\n                    priorityMap.put(index, 0);\n                }\n            }\n\n            if (!priorityMap.containsKey(index)) {\n                Dashlet dashlet = getDashletInstance(dashletSpecs.get(index));\n                dashlet.getWallboardComponent().getComponent().addStyleName(\"wallboard\");\n\n                dashlets.put(index, dashlet);\n\n                dashlets.get(index).getWallboardComponent().refresh();\n\n                if (dashlets.get(index).isBoosted()) {\n                    priorityMap.put(index, Math.max(0, dashletSpecs.get(index).getPriority() - dashletSpecs.get(index).getBoostPriority()));\n                    durationMap.put(index, dashletSpecs.get(index).getDuration() + dashletSpecs.get(index).getBoostDuration());\n                } else {\n                    priorityMap.put(index, dashletSpecs.get(index).getPriority());\n                    durationMap.put(index, dashletSpecs.get(index).getDuration());\n                }\n\n                oldPriorityMap.put(index, priorityMap.get(index));\n                oldDurationMap.put(index, durationMap.get(index));\n            }\n\n            if (priorityMap.get(index) <= 0) {\n\n                dashlets.get(index).getWallboardComponent().refresh();\n\n                if (dashlets.get(index).isBoosted()) {\n                    priorityMap.put(index, Math.max(0, dashletSpecs.get(index).getPriority() - dashletSpecs.get(index).getBoostPriority()));\n                    durationMap.put(index, dashletSpecs.get(index).getDuration() + dashletSpecs.get(index).getBoostDuration());\n                } else {\n                    priorityMap.put(index, Math.min(oldPriorityMap.get(index) + PRIORITY_DECREASE, dashletSpecs.get(index).getPriority()));\n                    durationMap.put(index, Math.max(oldDurationMap.get(index) - DURATION_DECREASE, dashletSpecs.get(index).getDuration()));\n                }\n\n                oldPriorityMap.put(index, priorityMap.get(index));\n                oldDurationMap.put(index, durationMap.get(index));\n\n                return index;\n            } else {\n                priorityMap.put(index, priorityMap.get(index) - 1);\n            }\n        }\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Dashlet getDashletInstance(DashletSpec dashletSpec) {\n        DashletSelector dashletSelector = ((DashletSelectorAccess) getUI()).getDashletSelector();\n        Dashlet dashlet = dashletSelector.getDashletFactoryForName(dashletSpec.getDashletName()).newDashletInstance(dashletSpec);\n        dashlet.getWallboardComponent().setCaption(null);\n        return dashlet;\n    }","id":39542,"modified_method":"public Dashlet getDashletInstance(DashletSpec dashletSpec) {\n        DashletSelector dashletSelector = ((DashletSelectorAccess) getUI()).getDashletSelector();\n        Dashlet dashlet = dashletSelector.getDashletFactoryForName(dashletSpec.getDashletName()).newDashletInstance(dashletSpec);\n        dashlet.getWallboardComponent().getComponent().setCaption(null);\n        return dashlet;\n    }","commit_id":"7ab02ef0cf526c0193fe94c4e8bd00807f3597c0","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public synchronized void start(final StartContext context) throws StartException {\n        serviceTarget = new TrackingServiceTarget(context.getController().getServiceContainer());\n        final ServiceActivatorContext serviceActivatorContext = new ServiceActivatorContext() {\n            public ServiceTarget getServiceTarget() {\n                return serviceTarget;\n            }\n\n            public ServiceRegistry getServiceRegistry() {\n                return new DelegatingServiceRegistry(context.getController().getServiceContainer());\n            }\n        };\n        serverController = new ServerControllerImpl(new ServerModel(configuration.getName(), configuration.getPortOffset()), context.getController().getServiceContainer(), configuration.getServerEnvironment().isStandalone());\n        for (ServiceActivator activator : services) {\n            activator.activate(serviceActivatorContext);\n        }\n        // todo: apply boot updates here, but don't bother waiting for completion - the updates should install new services\n        \n    }","id":39543,"modified_method":"public synchronized void start(final StartContext context) throws StartException {\n        serviceTarget = new TrackingServiceTarget(context.getController().getServiceContainer());\n        final ServiceActivatorContext serviceActivatorContext = new ServiceActivatorContext() {\n            public ServiceTarget getServiceTarget() {\n                return serviceTarget;\n            }\n\n            public ServiceRegistry getServiceRegistry() {\n                return new DelegatingServiceRegistry(context.getController().getServiceContainer());\n            }\n        };\n        serverController = new ServerControllerImpl(new ServerModel(configuration.getName(), configuration.getPortOffset()), context.getController().getServiceContainer());\n        for (ServiceActivator activator : services) {\n            activator.activate(serviceActivatorContext);\n        }\n        // todo: apply boot updates here, but don't bother waiting for completion - the updates should install new services\n        \n    }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"public AsyncFuture<ServerController> start(final Configuration configuration, final List<AbstractServerModelUpdate<?>> bootUpdates, final List<ServiceActivator> extraServices) {\n        if (configuration == null) {\n            throw new IllegalArgumentException(\"configuration is null\");\n        }\n        if (bootUpdates == null) {\n            throw new IllegalArgumentException(\"bootUpdates is null\");\n        }\n        final ModuleLoader moduleLoader = configuration.getModuleLoader();\n        final String name = configuration.getName();\n        final ServerEnvironment serverEnvironment = configuration.getServerEnvironment();\n        if (moduleLoader == null) {\n            throw new IllegalArgumentException(\"moduleLoader is null\");\n        }\n        if (name == null) {\n            throw new IllegalArgumentException(\"name is null\");\n        }\n        if (serverEnvironment == null) {\n            throw new IllegalArgumentException(\"serverEnvironment is null\");\n        }\n        final ServiceContainer container = ServiceContainer.Factory.create();\n        final StartTask future = new StartTask(container);\n        final ServiceTarget tracker = container.subTarget();\n        final Service<ServerController> serverControllerService = new ApplicationServerService(configuration, bootUpdates, extraServices);\n        tracker.addListener(new BootstrapListener(future, serverControllerService, configuration.getStartTime()));\n        tracker.addService(ServiceName.JBOSS.append(\"as\"), serverControllerService).install();\n        return future;\n    }","id":39544,"modified_method":"public AsyncFuture<ServerController> start(final Configuration configuration, final List<AbstractServerModelUpdate<?>> bootUpdates, final List<ServiceActivator> extraServices) {\n        if (configuration == null) {\n            throw new IllegalArgumentException(\"configuration is null\");\n        }\n        if (bootUpdates == null) {\n            throw new IllegalArgumentException(\"bootUpdates is null\");\n        }\n        final ModuleLoader moduleLoader = configuration.getModuleLoader();\n        final String name = configuration.getName();\n        final ServerEnvironment serverEnvironment = configuration.getServerEnvironment();\n        if (moduleLoader == null) {\n            throw new IllegalArgumentException(\"moduleLoader is null\");\n        }\n        if (name == null) {\n            throw new IllegalArgumentException(\"name is null\");\n        }\n        if (serverEnvironment == null) {\n            throw new IllegalArgumentException(\"serverEnvironment is null\");\n        }\n        final ServiceContainer container = ServiceContainer.Factory.create();\n        final int threads = Runtime.getRuntime().availableProcessors();\n        container.setExecutor(new ThreadPoolExecutor(threads, threads, Long.MAX_VALUE, TimeUnit.NANOSECONDS, new LinkedBlockingQueue<Runnable>()));\n\n        final StartTask future = new StartTask(container);\n        final ServiceTarget tracker = container.subTarget();\n        final Service<ServerController> serverControllerService = new ApplicationServerService(configuration, bootUpdates, extraServices);\n        tracker.addListener(new BootstrapListener(future, serverControllerService, configuration.getStartTime()));\n        tracker.addService(ServiceName.JBOSS.append(\"as\"), serverControllerService).install();\n        return future;\n    }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void backupConfigFile() throws IOException {\n        File backup = new File(configFile.getParent(), configFile.getName() + \".last-known-good\");\n        copyFile(configFile, backup);\n    }","id":39545,"modified_method":"private void backupConfigFile() throws IOException {\n        File backup = new File(configFile.getParent(), configFile.getName() + \".last-known-good\");\n        moveFile(configFile, backup);\n    }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void copyFile(File file, File backup) throws IOException {\n\n        if (backup.exists())\n            backup.delete();\n\n        if (!file.renameTo(backup)) {\n            FileOutputStream fos = null;\n            BufferedOutputStream bos = null;\n            FileInputStream fis = null;\n            try {\n                fos = new FileOutputStream(backup);\n                bos = new BufferedOutputStream(fos);\n                fis = new FileInputStream(file);\n                BufferedInputStream bis = new BufferedInputStream(fis);\n                byte[] bytes = new byte[8192];\n                int read;\n                while ((read = bis.read(bytes)) > -1) {\n                    bos.write(bytes, 0, read);\n                }\n            }\n            finally {\n                try {\n                    if (bos != null) {\n                        bos.close();\n                    }\n                 } catch (Exception ignored) {}\n                 try {\n                     if (fos != null) {\n                         fos.close();\n                     }\n                  } catch (Exception ignored) {}\n                  try {\n                      if (fis != null) {\n                          fis.close();\n                      }\n                   } catch (Exception ignored) {}\n            }\n        }\n    }","id":39546,"modified_method":"private void moveFile(File file, File backup) throws IOException {\n\n        if (backup.exists())\n            backup.delete();\n\n        if (!file.renameTo(backup)) {\n            final FileInputStream fis = new FileInputStream(file);\n            try {\n                final FileOutputStream fos = new FileOutputStream(backup);\n                try {\n                    VFSUtils.copyStreamAndClose(fis, fos);\n                } finally {\n                    VFSUtils.safeClose(fos);\n                }\n            } finally {\n                VFSUtils.safeClose(fis);\n            }\n        }\n    }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void configurationModified() {\n        if (configFile != null) {\n\n            FileOutputStream fos = null;\n            BufferedOutputStream bos = null;\n            XMLStreamWriter writer = null;\n            try {\n                backupConfigFile();\n                configFile.createNewFile();\n                fos = new FileOutputStream(configFile);\n                bos = new BufferedOutputStream(fos);\n                writer = XMLOutputFactory.newInstance().createXMLStreamWriter(bos);\n                final XMLMapper mapper = XMLMapper.Factory.create();\n                mapper.deparseDocument(new RootElementWriter(), writer);\n            }\n            catch (Exception e) {\n                logger.errorf(e, \"Failed persisting configuration file %s\" , configFile.getAbsolutePath());\n            }\n            finally {\n                 if (writer != null) {\n                     try {\n                        writer.close();\n                    } catch (XMLStreamException e) {\n                        logger.warnf(e, \"Failed closing writer to configuration file %s\" , configFile.getAbsolutePath());\n                    }\n                 }\n                 if (fos != null) {\n                     try {\n                        fos.close();\n                    } catch (IOException e) {\n                        logger.warnf(e, \"Failed closing output stream to configuration file %s\" , configFile.getAbsolutePath());\n                    }\n                 }\n            }\n\n        }\n\n    }","id":39547,"modified_method":"@Override\n    public void configurationModified() {\n        if (configFile != null) {\n            try {\n                backupConfigFile();\n                configFile.createNewFile();\n                final FileOutputStream fos = new FileOutputStream(configFile);\n                try {\n                    final BufferedOutputStream bos = new BufferedOutputStream(fos);\n                    try {\n                        final XMLStreamWriter writer = XMLOutputFactory.newInstance().createXMLStreamWriter(bos);\n                        try {\n                            final XMLMapper mapper = XMLMapper.Factory.create();\n                            mapper.deparseDocument(new RootElementWriter(), writer);\n                        } finally {\n                            StreamUtils.safeClose(writer);\n                        }\n                    } finally {\n                        StreamUtils.safeClose(bos);\n                    }\n                } finally {\n                    StreamUtils.safeClose(fos);\n                }\n            } catch (Exception e) {\n                logger.errorf(e, \"Failed persisting configuration file %s\" , configFile.getAbsolutePath());\n            }\n        }\n    }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void handleRollbackSuccess(Integer param) {\n            log.tracef(\"Update %s rolled back\", param);\n            UpdateResultHandlerResponse<?> rsp = map.get(param);\n            if (rsp == null) {\n                log.warn(\"No response associated with index \" + param);\n                return;\n            }\n            map.put(param, UpdateResultHandlerResponse.createRollbackResponse(rsp));\n        }","id":39548,"modified_method":"@Override\n        public void handleRollbackSuccess(Integer param) {\n            log.tracef(\"Update %d rolled back\", param);\n            UpdateResultHandlerResponse<?> rsp = map.get(param);\n            if (rsp == null) {\n                log.warn(\"No response associated with index \" + param);\n                return;\n            }\n            map.put(param, UpdateResultHandlerResponse.createRollbackResponse(rsp));\n        }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void handleFailure(Throwable cause, Integer param) {\n            log.tracef(\"Update %s failed with %s\", param, cause);\n            map.put(param, UpdateResultHandlerResponse.createFailureResponse(cause));\n        }","id":39549,"modified_method":"@Override\n        public void handleFailure(Throwable cause, Integer param) {\n            log.tracef(\"Update %d failed with %s\", param, cause);\n            map.put(param, UpdateResultHandlerResponse.createFailureResponse(cause));\n        }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void handleTimeout(Integer param) {\n            log.tracef(\"Update %s timed out\", param);\n            responses.set(param, UpdateResultHandlerResponse.createTimeoutResponse());\n        }","id":39550,"modified_method":"@Override\n        public void handleTimeout(Integer param) {\n            log.tracef(\"Update %d timed out\", param);\n            responses.set(param.intValue(), UpdateResultHandlerResponse.createTimeoutResponse());\n        }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void handleRollbackTimeout(Integer param) {\n            log.tracef(\"Update %s rollback timed out\", param);\n            UpdateResultHandlerResponse<?> rsp = map.get(param);\n            if (rsp == null) {\n                log.warn(\"No response associated with index \" + param);\n                return;\n            }\n            map.put(param, UpdateResultHandlerResponse.createRollbackTimedOutResponse(rsp));\n        }","id":39551,"modified_method":"@Override\n        public void handleRollbackTimeout(Integer param) {\n            log.tracef(\"Update %d rollback timed out\", param);\n            UpdateResultHandlerResponse<?> rsp = map.get(param);\n            if (rsp == null) {\n                log.warn(\"No response associated with index \" + param);\n                return;\n            }\n            map.put(param, UpdateResultHandlerResponse.createRollbackTimedOutResponse(rsp));\n        }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"ServerControllerImpl(final ServerModel model, final ServiceContainer container, final boolean standalone) {\n        this.serverModel = model;\n        this.container = container;\n        this.standalone = standalone;\n    }","id":39552,"modified_method":"ServerControllerImpl(final ServerModel serverModel, final ServiceContainer container, final ServerEnvironment serverEnvironment) {\n        this.serverModel = serverModel;\n        this.container = container;\n        this.serverEnvironment = serverEnvironment;\n    }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public List<UpdateResultHandlerResponse<?>> applyUpdates(List<AbstractServerModelUpdate<?>> updates,\n            boolean rollbackOnFailure, boolean modelOnly) {\n\n        int count = updates.size();\n        log.debugf(\"Received %s updates\", count);\n\n        List<UpdateResultHandlerResponse<?>> results = new ArrayList<UpdateResultHandlerResponse<?>>(count);\n        if (modelOnly && !standalone) {\n            Exception e = new IllegalStateException(\"Update sets that only affect the configuration and not the runtime are not valid on a domain-based server\");\n            for (int i = 0; i < count; i++) {\n                results.add(UpdateResultHandlerResponse.createFailureResponse(e));\n            }\n            return results;\n        }\n\n        final CountDownLatch latch = new CountDownLatch(1);\n        ServerUpdateCommitHandlerImpl handler = new ServerUpdateCommitHandlerImpl(results, count, latch);\n        final ServerUpdateController controller = new ServerUpdateController(getServerModel(),\n                container, executor, handler, rollbackOnFailure, !modelOnly);\n\n        for(int i = 0; i < count; i++) {\n            controller.addServerModelUpdate(updates.get(i), handler, Integer.valueOf(i));\n        }\n\n        controller.executeUpdates();\n        log.debugf(\"Executed %s updates\", updates.size());\n        try {\n            latch.await();\n        } catch(InterruptedException e) {\n            Thread.currentThread().interrupt();\n            throw new ManagementException(\"failed to execute updates\", e);\n        }\n\n        return results;\n    }","id":39553,"modified_method":"/** {@inheritDoc} */\n    @Override\n    public List<UpdateResultHandlerResponse<?>> applyUpdates(List<AbstractServerModelUpdate<?>> updates,\n            boolean rollbackOnFailure, boolean modelOnly) {\n\n        int count = updates.size();\n        log.debugf(\"Received %d updates\", Integer.valueOf(count));\n\n        List<UpdateResultHandlerResponse<?>> results = new ArrayList<UpdateResultHandlerResponse<?>>(count);\n        if (modelOnly && ! serverEnvironment.isStandalone()) {\n            Exception e = new IllegalStateException(\"Update sets that only affect the configuration and not the runtime are not valid on a domain-based server\");\n            for (int i = 0; i < count; i++) {\n                results.add(UpdateResultHandlerResponse.createFailureResponse(e));\n            }\n            return results;\n        }\n\n        final CountDownLatch latch = new CountDownLatch(1);\n        ServerUpdateCommitHandlerImpl handler = new ServerUpdateCommitHandlerImpl(results, count, latch);\n        final ServerUpdateController controller = new ServerUpdateController(serverModel,\n                container, executor, handler, rollbackOnFailure, !modelOnly);\n\n        for(int i = 0; i < count; i++) {\n            controller.addServerModelUpdate(updates.get(i), handler, Integer.valueOf(i));\n        }\n\n        controller.executeUpdates();\n        log.debugf(\"Executed %d updates\", Integer.valueOf(updates.size()));\n        try {\n            latch.await();\n        } catch(InterruptedException e) {\n            Thread.currentThread().interrupt();\n            throw new ManagementException(\"failed to execute updates\", e);\n        }\n\n        return results;\n    }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void handleRollbackCancellation(Integer param) {\n            log.tracef(\"Update %s rollback cancelled\", param);\n            UpdateResultHandlerResponse<?> rsp = map.get(param);\n            if (rsp == null) {\n                log.warn(\"No response associated with index \" + param);\n                return;\n            }\n            map.put(param, UpdateResultHandlerResponse.createRollbackCancelledResponse(rsp));\n        }","id":39554,"modified_method":"@Override\n        public void handleRollbackCancellation(Integer param) {\n            log.tracef(\"Update %d rollback cancelled\", param);\n            UpdateResultHandlerResponse<?> rsp = map.get(param);\n            if (rsp == null) {\n                log.warn(\"No response associated with index \" + param);\n                return;\n            }\n            map.put(param, UpdateResultHandlerResponse.createRollbackCancelledResponse(rsp));\n        }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void handleRollbackFailure(Throwable cause, Integer param) {\n            log.tracef(\"Update %s rollback failed with %s\", param, cause);\n            UpdateResultHandlerResponse<?> rsp = map.get(param);\n            if (rsp == null) {\n                log.warn(\"No response associated with index \" + param);\n                return;\n            }\n            map.put(param, UpdateResultHandlerResponse.createRollbackFailedResponse(rsp, cause));\n        }","id":39555,"modified_method":"@Override\n        public void handleRollbackFailure(Throwable cause, Integer param) {\n            log.tracef(\"Update %d rollback failed with %s\", param, cause);\n            UpdateResultHandlerResponse<?> rsp = map.get(param);\n            if (rsp == null) {\n                log.warn(\"No response associated with index \" + param);\n                return;\n            }\n            map.put(param, UpdateResultHandlerResponse.createRollbackFailedResponse(rsp, cause));\n        }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void handleSuccess(Object result, Integer param) {\n            log.tracef(\"Update %s succeeded\", param);\n            map.put(param, UpdateResultHandlerResponse.createSuccessResponse(result));\n        }","id":39556,"modified_method":"@Override\n        public void handleSuccess(Object result, Integer param) {\n            log.tracef(\"Update %d succeeded\", param);\n            map.put(param, UpdateResultHandlerResponse.createSuccessResponse(result));\n        }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void handleCancellation(Integer param) {\n            log.tracef(\"Update %s cancelled\", param);\n            map.put(param, UpdateResultHandlerResponse.createCancellationResponse());\n        }","id":39557,"modified_method":"@Override\n        public void handleCancellation(Integer param) {\n            log.tracef(\"Update %d cancelled\", param);\n            map.put(param, UpdateResultHandlerResponse.createCancellationResponse());\n        }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"public ServerEnvironment(Properties props, String processName, boolean standalone) {\n        this.standalone = standalone;\n        if (props == null) {\n            throw new IllegalArgumentException(\"props is null\");\n        }\n\n        if (processName == null && !standalone) {\n            throw new IllegalArgumentException(\"processName is null\");\n        }\n        this.processName = processName;\n\n        // Must have HOME_DIR\n        homeDir = getFileFromProperty(HOME_DIR, props);\n        if (homeDir == null)\n           throw new IllegalStateException(\"Missing configuration value for: \" + HOME_DIR);\n        System.setProperty(HOME_DIR, homeDir.getAbsolutePath());\n\n        File tmp = getFileFromProperty(MODULES_DIR, props);\n        if (tmp == null) {\n            tmp = new File(homeDir, \"modules\");\n        }\n        modulesDir = tmp;\n        System.setProperty(MODULES_DIR, modulesDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_BASE_DIR, props);\n        if (tmp == null) {\n            tmp = new File(homeDir, \"standalone\");\n        }\n        serverBaseDir = tmp;\n        System.setProperty(SERVER_BASE_DIR, serverBaseDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_CONFIG_DIR, props);\n        if (tmp == null) {\n            tmp = new File(serverBaseDir, \"configuration\");\n        }\n        serverConfigurationDir = tmp;\n        System.setProperty(SERVER_CONFIG_DIR, serverConfigurationDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_DATA_DIR, props);\n        if (tmp == null) {\n            tmp = new File(serverBaseDir, \"data\");\n        }\n        serverDataDir = tmp;\n        System.setProperty(SERVER_DATA_DIR, serverDataDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_DEPLOY_DIR, props);\n        if (tmp == null) {\n            tmp = new File(serverDataDir, \"content\");\n        }\n        serverDeployDir = tmp;\n        System.setProperty(SERVER_DEPLOY_DIR, serverDeployDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_SYSTEM_DEPLOY_DIR, props);\n        if (tmp == null) {\n            tmp = new File(serverDataDir, \"system-content\");\n        }\n        serverSystemDeployDir = tmp;\n        System.setProperty(SERVER_SYSTEM_DEPLOY_DIR, serverSystemDeployDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_LOG_DIR, props);\n        if (tmp == null) {\n            tmp = new File(serverBaseDir, \"log\");\n        }\n        serverLogDir = tmp;\n        System.setProperty(SERVER_LOG_DIR, serverLogDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_TEMP_DIR, props);\n        if (tmp == null) {\n            tmp = new File(serverBaseDir, \"tmp\");\n        }\n        serverTempDir = tmp;\n        System.setProperty(SERVER_TEMP_DIR, serverTempDir.getAbsolutePath());\n    }","id":39558,"modified_method":"public ServerEnvironment(Properties props, String serverName, boolean standalone) {\n        this.standalone = standalone;\n        if (props == null) {\n            throw new IllegalArgumentException(\"props is null\");\n        }\n\n        if (serverName == null && !standalone) {\n            throw new IllegalArgumentException(\"processName is null\");\n        }\n        this.serverName = serverName;\n\n        // Must have HOME_DIR\n        homeDir = getFileFromProperty(HOME_DIR, props);\n        if (homeDir == null)\n           throw new IllegalStateException(\"Missing configuration value for: \" + HOME_DIR);\n        System.setProperty(HOME_DIR, homeDir.getAbsolutePath());\n\n        File tmp = getFileFromProperty(MODULES_DIR, props);\n        if (tmp == null) {\n            tmp = new File(homeDir, \"modules\");\n        }\n        modulesDir = tmp;\n        System.setProperty(MODULES_DIR, modulesDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_BASE_DIR, props);\n        if (tmp == null) {\n            tmp = new File(homeDir, \"standalone\");\n        }\n        serverBaseDir = tmp;\n        System.setProperty(SERVER_BASE_DIR, serverBaseDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_CONFIG_DIR, props);\n        if (tmp == null) {\n            tmp = new File(serverBaseDir, \"configuration\");\n        }\n        serverConfigurationDir = tmp;\n        System.setProperty(SERVER_CONFIG_DIR, serverConfigurationDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_DATA_DIR, props);\n        if (tmp == null) {\n            tmp = new File(serverBaseDir, \"data\");\n        }\n        serverDataDir = tmp;\n        System.setProperty(SERVER_DATA_DIR, serverDataDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_DEPLOY_DIR, props);\n        if (tmp == null) {\n            tmp = new File(serverDataDir, \"content\");\n        }\n        serverDeployDir = tmp;\n        System.setProperty(SERVER_DEPLOY_DIR, serverDeployDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_SYSTEM_DEPLOY_DIR, props);\n        if (tmp == null) {\n            tmp = new File(serverDataDir, \"system-content\");\n        }\n        serverSystemDeployDir = tmp;\n        System.setProperty(SERVER_SYSTEM_DEPLOY_DIR, serverSystemDeployDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_LOG_DIR, props);\n        if (tmp == null) {\n            tmp = new File(serverBaseDir, \"log\");\n        }\n        serverLogDir = tmp;\n        System.setProperty(SERVER_LOG_DIR, serverLogDir.getAbsolutePath());\n\n        tmp = getFileFromProperty(SERVER_TEMP_DIR, props);\n        if (tmp == null) {\n            tmp = new File(serverBaseDir, \"tmp\");\n        }\n        serverTempDir = tmp;\n        System.setProperty(SERVER_TEMP_DIR, serverTempDir.getAbsolutePath());\n    }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void run(final List<ServiceActivator> runServices) {\n        if (serverName != null) {\n            MDC.put(\"process\", \"server-\" + serverName);\n\n            log.infof(\"Starting server \\\"%s\\\"\", serverName);\n        }\n        else {\n            MDC.put(\"process\", \"standalone-server\");\n\n            log.infof(\"Starting standalone server\");\n        }\n\n        final Bootstrap bootstrap = Bootstrap.Factory.newInstance();\n        bootstrap.start(new Bootstrap.Configuration(), updates, startServices);\n\n        final ServiceContainer container = ServiceContainer.Factory.create();\n        final int threads = Runtime.getRuntime().availableProcessors();\n        container.setExecutor(new ThreadPoolExecutor(threads, threads, Long.MAX_VALUE, TimeUnit.NANOSECONDS, new LinkedBlockingQueue<Runnable>()));\n\n        final BatchBuilder batchBuilder = container.batchBuilder();\n\n        // First-stage (boot) services\n\n        final ServiceActivatorContext serviceActivatorContext = new ServiceActivatorContext() {\n            public ServiceTarget getServiceTarget() {\n                return container;\n            }\n\n            public ServiceRegistry getServiceRegistry() {\n                return container;\n            }\n        };\n\n        // Root service\n        batchBuilder.addService(AS_SERVER_SERVICE_NAME, Service.NULL)\n            .setInitialMode(ServiceController.Mode.ACTIVE)\n            .install();\n\n        // Services specified by the creator of this object\n        for (ServiceActivator service : startServices) {\n            service.activate(serviceActivatorContext);\n        }\n\n        // Next-stage services\n        for(ServiceActivator service : runServices) {\n            service.activate(serviceActivatorContext);\n        }\n\n        // Initial model\n        final ServerModel serverModel = new ServerModel(serverName, portOffset);\n\n        final Properties systemProperties = System.getProperties();\n        final ServerEnvironment environment = providedEnvironment != null\n                        ? providedEnvironment\n                        : new ServerEnvironment(systemProperties, serverName, false);\n\n        log.info(\"Activating core services\");\n\n        // The server controller\n        // TODO make ServerConfigurationPersister internal\n        // TODO share thread pool\n        ServerControllerImpl serverController = new ServerControllerImpl(serverModel, container, environment.isStandalone());\n        batchBuilder.addService(ServerController.SERVICE_NAME, serverController)\n            .addDependency(ServerConfigurationPersister.SERVICE_NAME, ServerConfigurationPersister.class, serverController.getConfigurationPersisterValue())\n            .addInjection(serverController.getExecutorValue(), Executors.newCachedThreadPool())\n            .install();\n\n        // Server environment services\n        ServerEnvironmentServices.addServices(environment, batchBuilder);\n\n        // Deployment repository\n        ServerDeploymentRepositoryImpl.addService(batchBuilder);\n\n        // Graceful shutdown\n        ShutdownHandlerImpl.addService(batchBuilder);\n\n        // Server model service - TODO: replace with ServerController\n        ServerModelService.addService(serverModel, batchBuilder);\n\n        // Server deployment manager - TODO: move into startServices, only start in standalone mode\n        ServerDeploymentManagerImpl.addService(serverModel, container, batchBuilder);\n\n        // Server configuration persister - TODO: move into startServices, only start in standalone mode\n        ServerConfigurationPersisterImpl.addService(serverModel, batchBuilder);\n\n        // Server deployment scanner factory\n        DeploymentScannerFactoryService.addService(batchBuilder);\n\n        batchBuilder.addService(SocketBindingManager.SOCKET_BINDING_MANAGER,\n                new SocketBindingManagerService(portOffset)).setInitialMode(ServiceController.Mode.ON_DEMAND)\n            .install();\n\n        // Activate deployment module loader\n        batchBuilder.addService(ClassifyingModuleLoaderService.SERVICE_NAME, new ClassifyingModuleLoaderService())\n            .install();\n\n        // todo move elsewhere...\n        final DeploymentChain deploymentChain = new DeploymentChainImpl();\n        deploymentChain.addProcessor(new DeploymentModuleLoaderProcessor(new DeploymentModuleLoaderImpl()), Phase.DEPLOYMENT_MODULE_LOADER_PROCESSOR);\n        batchBuilder.addService(DeploymentChain.SERVICE_NAME, new DeploymentChainService(deploymentChain))\n            .setInitialMode(ServiceController.Mode.ACTIVE)\n            .install();\n\n        new JarDeploymentActivator().activate(deploymentChain);\n\n        for (AbstractServerModelUpdate<?> update : updates) {\n            try {\n                serverModel.update(update);\n            } catch (UpdateFailedException e) {\n                throw new IllegalStateException(\"Failed to start server\", e);\n            }\n        }\n\n        final BootUpdateContext context = new BootUpdateContext() {\n            public BatchBuilder getBatchBuilder() {\n                return batchBuilder;\n            }\n\n            public ServiceContainer getServiceContainer() {\n                return container;\n            }\n\n            public void addDeploymentProcessor(DeploymentUnitProcessor processor, long priority) {\n                deploymentChain.addProcessor(processor, priority);\n            }\n        };\n\n        for (AbstractServerModelUpdate<?> update : updates) {\n            if(!update.isDeploymentUpdate()) {\n                update.applyUpdateBootAction(context);\n            }\n        }\n\n        DeploymentUpdateService.addService(batchBuilder, updates, serverStartupListener);\n\n        StandaloneServerManagementServices.addServices(serverModel, container, batchBuilder);\n\n        try {\n            batchBuilder.install();\n        } catch (ServiceRegistryException e) {\n            throw new IllegalStateException(\"Failed to install boot services\", e);\n        }\n    }","id":39559,"modified_method":"public void run(final List<ServiceActivator> runServices) {\n        if (serverName != null) {\n            MDC.put(\"process\", \"server-\" + serverName);\n\n            log.infof(\"Starting server \\\"%s\\\"\", serverName);\n        }\n        else {\n            MDC.put(\"process\", \"standalone-server\");\n\n            log.infof(\"Starting standalone server\");\n        }\n\n        final Bootstrap bootstrap = Bootstrap.Factory.newInstance();\n        bootstrap.start(new Bootstrap.Configuration(), updates, startServices);\n\n        final BatchBuilder batchBuilder = container.batchBuilder();\n\n        // First-stage (boot) services\n\n        final Properties systemProperties = System.getProperties();\n        final ServerEnvironment environment = providedEnvironment != null\n                        ? providedEnvironment\n                        : new ServerEnvironment(systemProperties, serverName, false);\n\n        log.info(\"Activating core services\");\n\n        // The server controller\n        // TODO make ServerConfigurationPersister internal\n        // TODO share thread pool\n        ServerControllerImpl serverController = new ServerControllerImpl(serverModel, container);\n        batchBuilder.addService(ServerController.SERVICE_NAME, serverController)\n            .addDependency(ServerConfigurationPersister.SERVICE_NAME, ServerConfigurationPersister.class, serverController.getConfigurationPersisterValue())\n            .addInjection(serverController.getExecutorValue(), Executors.newCachedThreadPool())\n            .install();\n\n        // Server environment services\n        ServerEnvironmentServices.addServices(environment, batchBuilder);\n\n        // Deployment repository\n        ServerDeploymentRepositoryImpl.addService(batchBuilder);\n\n        // Graceful shutdown\n        ShutdownHandlerImpl.addService(batchBuilder);\n\n        // Server model service - TODO: replace with ServerController\n        ServerModelService.addService(serverModel, batchBuilder);\n\n        // Server deployment manager - TODO: move into startServices, only start in standalone mode\n        ServerDeploymentManagerImpl.addService(serverModel, container, batchBuilder);\n\n        // Server configuration persister - TODO: move into startServices, only start in standalone mode\n        ServerConfigurationPersisterImpl.addService(serverModel, batchBuilder);\n\n        // Server deployment scanner factory\n        DeploymentScannerFactoryService.addService(batchBuilder);\n\n        batchBuilder.addService(SocketBindingManager.SOCKET_BINDING_MANAGER,\n                new SocketBindingManagerService(portOffset)).setInitialMode(ServiceController.Mode.ON_DEMAND)\n            .install();\n\n        // Activate deployment module loader\n        batchBuilder.addService(ClassifyingModuleLoaderService.SERVICE_NAME, new ClassifyingModuleLoaderService())\n            .install();\n\n        // todo move elsewhere...\n        final DeploymentChain deploymentChain = new DeploymentChainImpl();\n        deploymentChain.addProcessor(new DeploymentModuleLoaderProcessor(new DeploymentModuleLoaderImpl()), Phase.DEPLOYMENT_MODULE_LOADER_PROCESSOR);\n        batchBuilder.addService(DeploymentChain.SERVICE_NAME, new DeploymentChainService(deploymentChain))\n            .setInitialMode(ServiceController.Mode.ACTIVE)\n            .install();\n\n        new JarDeploymentActivator().activate(deploymentChain);\n\n        for (AbstractServerModelUpdate<?> update : updates) {\n            try {\n                serverModel.update(update);\n            } catch (UpdateFailedException e) {\n                throw new IllegalStateException(\"Failed to start server\", e);\n            }\n        }\n\n        final BootUpdateContext context = new BootUpdateContext() {\n            public BatchBuilder getBatchBuilder() {\n                return batchBuilder;\n            }\n\n            public ServiceContainer getServiceContainer() {\n                return container;\n            }\n\n            public void addDeploymentProcessor(DeploymentUnitProcessor processor, long priority) {\n                deploymentChain.addProcessor(processor, priority);\n            }\n        };\n\n        for (AbstractServerModelUpdate<?> update : updates) {\n            if(!update.isDeploymentUpdate()) {\n                update.applyUpdateBootAction(context);\n            }\n        }\n\n        DeploymentUpdateService.addService(batchBuilder, updates, serverStartupListener);\n\n        StandaloneServerManagementServices.addServices(serverModel, container, batchBuilder);\n\n        try {\n            batchBuilder.install();\n        } catch (ServiceRegistryException e) {\n            throw new IllegalStateException(\"Failed to install boot services\", e);\n        }\n    }","commit_id":"1cc5aa89153a3f71527dfdb1a7234f2ba656745b","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void persistConfiguration(final DomainModel domainModel) {\n\n        FileOutputStream fos = null;\n        BufferedOutputStream bos = null;\n        XMLStreamWriter xmlWriter = null;\n        try {\n            backupConfigFile();\n            configFile.createNewFile();\n            fos = new FileOutputStream(configFile);\n            bos = new BufferedOutputStream(fos);\n            xmlWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(bos);\n            final XMLMapper mapper = XMLMapper.Factory.create();\n            mapper.deparseDocument(new RootElementWriter(domainModel), xmlWriter);\n            xmlWriter.close();\n        } catch (Exception e) {\n            logger.errorf(e, \"Failed persisting configuration file %s\" , configFile.getAbsolutePath());\n        } finally {\n            StreamUtils.safeClose(bos);\n            StreamUtils.safeClose(fos);\n        }\n    }","id":39560,"modified_method":"@Override\n    public void persistConfiguration(final DomainModel domainModel) {\n\n        FileOutputStream fos = null;\n        BufferedOutputStream bos = null;\n        XMLStreamWriter xmlWriter = null;\n        try {\n            backupConfigFile();\n            configFile.createNewFile();\n            fos = new FileOutputStream(configFile);\n            bos = new BufferedOutputStream(fos);\n            xmlWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(bos);\n            final XMLMapper mapper = XMLMapper.Factory.create();\n            mapper.deparseDocument(new RootElementWriter(domainModel), xmlWriter);\n        } catch (Exception e) {\n            logger.errorf(e, \"Failed persisting configuration file %s\" , configFile.getAbsolutePath());\n        } finally {\n            if (xmlWriter != null) {\n                try {\n                    xmlWriter.close();\n               } catch (XMLStreamException e) {\n                   logger.warnf(e, \"Failed closing writer to configuration file %s\" , configFile.getAbsolutePath());\n               }\n            }\n            StreamUtils.safeClose(bos);\n            StreamUtils.safeClose(fos);\n        }\n    }","commit_id":"78c15c0ced434e3d9cf37fff0323c70316ac971d","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public InputStream getConfigurationReader() throws IOException {\n        return new FileInputStream(configFile);\n    }","id":39561,"modified_method":"@Override\n    public InputStream getConfigurationInputStream() throws IOException {\n        return new FileInputStream(configFile);\n    }","commit_id":"78c15c0ced434e3d9cf37fff0323c70316ac971d","url":"https://github.com/wildfly/wildfly"},{"original_method":"private DomainModel parseDomain(final XMLMapper mapper) {\n        try {\n            InputStream reader = configPersister.getConfigurationReader();\n            final List<AbstractDomainModelUpdate<?>> domainUpdates = new ArrayList<AbstractDomainModelUpdate<?>>();\n            mapper.parseDocument(domainUpdates, XMLInputFactory.newInstance().createXMLStreamReader(new BufferedInputStream(reader)));\n            final DomainModel domainModel = new DomainModel();\n            for(final AbstractDomainModelUpdate<?> update : domainUpdates) {\n                domainModel.update(update);\n            }\n            return domainModel;\n        } catch (RuntimeException e) {\n            throw e;\n        } catch (Exception e) {\n            throw new RuntimeException(\"Caught exception during processing of domain.xml\", e);\n        }\n    }","id":39562,"modified_method":"private DomainModel parseDomain(final XMLMapper mapper) {\n        try {\n            InputStream reader = configPersister.getConfigurationInputStream();\n            final List<AbstractDomainModelUpdate<?>> domainUpdates = new ArrayList<AbstractDomainModelUpdate<?>>();\n            mapper.parseDocument(domainUpdates, XMLInputFactory.newInstance().createXMLStreamReader(new BufferedInputStream(reader)));\n            final DomainModel domainModel = new DomainModel();\n            for(final AbstractDomainModelUpdate<?> update : domainUpdates) {\n                domainModel.update(update);\n            }\n            return domainModel;\n        } catch (RuntimeException e) {\n            throw e;\n        } catch (Exception e) {\n            throw new RuntimeException(\"Caught exception during processing of domain.xml\", e);\n        }\n    }","commit_id":"78c15c0ced434e3d9cf37fff0323c70316ac971d","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void persistConfiguration(final HostModel hostModel) {\n\n        FileOutputStream fos = null;\n        BufferedOutputStream bos = null;\n        OutputStreamWriter writer = null;\n        try {\n            backupConfigFile();\n            configFile.createNewFile();\n            fos = new FileOutputStream(configFile);\n            bos = new BufferedOutputStream(fos);\n            writer = new OutputStreamWriter(bos);\n            final XMLMapper mapper = XMLMapper.Factory.create();\n            mapper.deparseDocument(new RootElementWriter(hostModel), XMLOutputFactory.newInstance().createXMLStreamWriter(writer));\n        }\n        catch (Exception e) {\n            logger.errorf(e, \"Failed persisting configuration file %s\" , configFile.getAbsolutePath());\n        }\n        finally {\n             if (writer != null) {\n                 try {\n                    writer.close();\n                } catch (IOException e) {\n                    logger.warnf(e, \"Failed closing writer to configuration file %s\" , configFile.getAbsolutePath());\n                }\n             }\n             if (fos != null) {\n                 try {\n                    fos.close();\n                } catch (IOException e) {\n                    logger.warnf(e, \"Failed closing output stream to configuration file %s\" , configFile.getAbsolutePath());\n                }\n             }\n        }\n\n    }","id":39563,"modified_method":"@Override\n    public void persistConfiguration(final HostModel hostModel) {\n\n        FileOutputStream fos = null;\n        BufferedOutputStream bos = null;\n        XMLStreamWriter writer = null;\n        try {\n            backupConfigFile();\n            configFile.createNewFile();\n            fos = new FileOutputStream(configFile);\n            bos = new BufferedOutputStream(fos);\n            writer = XMLOutputFactory.newInstance().createXMLStreamWriter(bos);\n            final XMLMapper mapper = XMLMapper.Factory.create();\n            mapper.deparseDocument(new RootElementWriter(hostModel), writer);\n        }\n        catch (Exception e) {\n            logger.errorf(e, \"Failed persisting configuration file %s\" , configFile.getAbsolutePath());\n        }\n        finally {\n             if (writer != null) {\n                 try {\n                    writer.close();\n                } catch (XMLStreamException e) {\n                    logger.warnf(e, \"Failed closing writer to configuration file %s\" , configFile.getAbsolutePath());\n                }\n             }\n             if (fos != null) {\n                 try {\n                    fos.close();\n                } catch (IOException e) {\n                    logger.warnf(e, \"Failed closing output stream to configuration file %s\" , configFile.getAbsolutePath());\n                }\n             }\n        }\n\n    }","commit_id":"78c15c0ced434e3d9cf37fff0323c70316ac971d","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Reader getConfigurationReader() throws IOException {\n        return new FileReader(configFile);\n    }","id":39564,"modified_method":"@Override\n    public InputStream getConfigurationInputStream() throws IOException {\n        return new FileInputStream(configFile);\n    }","commit_id":"78c15c0ced434e3d9cf37fff0323c70316ac971d","url":"https://github.com/wildfly/wildfly"},{"original_method":"private HostModel parseHostXml() {\n\n        try {\n            final List<AbstractHostModelUpdate<?>> hostUpdates = new ArrayList<AbstractHostModelUpdate<?>>();\n            final XMLMapper mapper = XMLMapper.Factory.create();\n            extensionRegistrar.registerStandardHostReaders(mapper);\n            mapper.parseDocument(hostUpdates, XMLInputFactory.newInstance().createXMLStreamReader(new BufferedReader(configPersister.getConfigurationReader())));\n            final HostModel hostModel = new HostModel();\n            for(final AbstractHostModelUpdate<?> update : hostUpdates) {\n                hostModel.update(update);\n            }\n            return hostModel;\n        } catch (RuntimeException e) {\n            throw e;\n        } catch (Exception e) {\n            throw new RuntimeException(\"Caught exception during processing of host.xml\", e);\n        }\n    }","id":39565,"modified_method":"private HostModel parseHostXml() {\n\n        try {\n            final List<AbstractHostModelUpdate<?>> hostUpdates = new ArrayList<AbstractHostModelUpdate<?>>();\n            final XMLMapper mapper = XMLMapper.Factory.create();\n            extensionRegistrar.registerStandardHostReaders(mapper);\n            mapper.parseDocument(hostUpdates, XMLInputFactory.newInstance().createXMLStreamReader(new BufferedInputStream(configPersister.getConfigurationInputStream())));\n            final HostModel hostModel = new HostModel();\n            for(final AbstractHostModelUpdate<?> update : hostUpdates) {\n                hostModel.update(update);\n            }\n            return hostModel;\n        } catch (RuntimeException e) {\n            throw e;\n        } catch (Exception e) {\n            throw new RuntimeException(\"Caught exception during processing of host.xml\", e);\n        }\n    }","commit_id":"78c15c0ced434e3d9cf37fff0323c70316ac971d","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void configurationModified() {\n        if (configFile != null) {\n\n            FileOutputStream fos = null;\n            BufferedOutputStream bos = null;\n            OutputStreamWriter writer = null;\n            try {\n                backupConfigFile();\n                configFile.createNewFile();\n                fos = new FileOutputStream(configFile);\n                bos = new BufferedOutputStream(fos);\n                writer = new OutputStreamWriter(bos);\n                final XMLMapper mapper = XMLMapper.Factory.create();\n                mapper.deparseDocument(new RootElementWriter(), XMLOutputFactory.newInstance().createXMLStreamWriter(writer));\n            }\n            catch (Exception e) {\n                logger.errorf(e, \"Failed persisting configuration file %s\" , configFile.getAbsolutePath());\n            }\n            finally {\n                 if (writer != null) {\n                     try {\n                        writer.close();\n                    } catch (IOException e) {\n                        logger.warnf(e, \"Failed closing writer to configuration file %s\" , configFile.getAbsolutePath());\n                    }\n                 }\n                 if (fos != null) {\n                     try {\n                        fos.close();\n                    } catch (IOException e) {\n                        logger.warnf(e, \"Failed closing output stream to configuration file %s\" , configFile.getAbsolutePath());\n                    }\n                 }\n            }\n\n        }\n\n    }","id":39566,"modified_method":"@Override\n    public void configurationModified() {\n        if (configFile != null) {\n\n            FileOutputStream fos = null;\n            BufferedOutputStream bos = null;\n            XMLStreamWriter writer = null;\n            try {\n                backupConfigFile();\n                configFile.createNewFile();\n                fos = new FileOutputStream(configFile);\n                bos = new BufferedOutputStream(fos);\n                writer = XMLOutputFactory.newInstance().createXMLStreamWriter(bos);\n                final XMLMapper mapper = XMLMapper.Factory.create();\n                mapper.deparseDocument(new RootElementWriter(), writer);\n            }\n            catch (Exception e) {\n                logger.errorf(e, \"Failed persisting configuration file %s\" , configFile.getAbsolutePath());\n            }\n            finally {\n                 if (writer != null) {\n                     try {\n                        writer.close();\n                    } catch (XMLStreamException e) {\n                        logger.warnf(e, \"Failed closing writer to configuration file %s\" , configFile.getAbsolutePath());\n                    }\n                 }\n                 if (fos != null) {\n                     try {\n                        fos.close();\n                    } catch (IOException e) {\n                        logger.warnf(e, \"Failed closing output stream to configuration file %s\" , configFile.getAbsolutePath());\n                    }\n                 }\n            }\n\n        }\n\n    }","commit_id":"78c15c0ced434e3d9cf37fff0323c70316ac971d","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void persistConfiguration(final DomainModel domainModel) {\n\n        FileOutputStream fos = null;\n        BufferedOutputStream bos = null;\n        try {\n            backupConfigFile();\n            configFile.createNewFile();\n            fos = new FileOutputStream(configFile);\n            bos = new BufferedOutputStream(fos);\n            final XMLMapper mapper = XMLMapper.Factory.create();\n            mapper.deparseDocument(new RootElementWriter(domainModel), XMLOutputFactory.newInstance().createXMLStreamWriter(bos));\n            fos.close();\n        } catch (Exception e) {\n            logger.errorf(e, \"Failed persisting configuration file %s\" , configFile.getAbsolutePath());\n        } finally {\n            StreamUtils.safeClose(fos);\n        }\n    }","id":39567,"modified_method":"@Override\n    public void persistConfiguration(final DomainModel domainModel) {\n\n        FileOutputStream fos = null;\n        BufferedOutputStream bos = null;\n        XMLStreamWriter xmlWriter = null;\n        try {\n            backupConfigFile();\n            configFile.createNewFile();\n            fos = new FileOutputStream(configFile);\n            bos = new BufferedOutputStream(fos);\n            xmlWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(bos);\n            final XMLMapper mapper = XMLMapper.Factory.create();\n            mapper.deparseDocument(new RootElementWriter(domainModel), xmlWriter);\n            xmlWriter.close();\n        } catch (Exception e) {\n            logger.errorf(e, \"Failed persisting configuration file %s\" , configFile.getAbsolutePath());\n        } finally {\n            StreamUtils.safeClose(bos);\n            StreamUtils.safeClose(fos);\n        }\n    }","commit_id":"8775d6d227a7094c9a3263b8c0a1d3e7c14afffd","url":"https://github.com/wildfly/wildfly"},{"original_method":"public static void main(String[] args) throws Exception {\n        DeploymentUtils utils = null;\n        try {\n            utils = new DeploymentUtils(\"ds-mbean.sar\", Test.class.getPackage(), true);\n\n            utils.deploy();\n            ObjectName objectName = new ObjectName(\"jboss:name=test,type=ds\");\n\n            MBeanServerConnection mbeanServer = utils.getConnection();\n            System.out.println(\"Calling TestMBean.test() on server\");\n            String s = (String) mbeanServer.invoke(objectName, \"test\", new Object[0], new String[0]);\n            System.out.println(\"Received reply: \" + s);\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            utils.undeploy();\n            safeClose(utils);\n        }\n    }","id":39568,"modified_method":"public static void main(String[] args) throws Exception {\n        DeploymentUtils utils = null;\n        try {\n            utils = new DeploymentUtils(\"ds-mbean.sar\", Test.class.getPackage(), true);\n\n            utils.deploy();\n            ObjectName objectName = new ObjectName(\"jboss:name=test,type=ds\");\n\n            MBeanServerConnection mbeanServer = utils.getConnection();\n            System.out.println(\"Calling TestMBean.test() on server\");\n            String s = (String) mbeanServer.invoke(objectName, \"test\", new Object[0], new String[0]);\n            System.out.println(\"Received reply: \" + s);\n        } catch (Exception e) {\n            Throwable parent = e;\n            while (parent != null) {\n                if (parent instanceof NameNotFoundException && e.getMessage().indexOf(\"H2DS\") > -1) {\n                    usage(parent);\n                    return;\n                }\n                parent = parent.getCause();\n            }\n            e.printStackTrace();\n        } finally {\n            if (utils != null) {\n                utils.undeploy();\n            }\n            safeClose(utils);\n        }\n    }","commit_id":"8775d6d227a7094c9a3263b8c0a1d3e7c14afffd","url":"https://github.com/wildfly/wildfly"},{"original_method":"public static void main(String[] args) throws Exception {\n        DomainDeploymentUtils utils = null;\n        try {\n            utils = new DomainDeploymentUtils(\"ds-mbean.sar\", Test.class.getPackage());\n\n            utils.deploy();\n\n            ObjectName objectName = new ObjectName(\"jboss:name=test,type=ds\");\n\n            MBeanServerConnection mbeanServer = utils.getServerOneConnection();\n            System.out.println(\"Calling TestMBean.test() on server one\");\n            String s = (String) mbeanServer.invoke(objectName, \"test\", new Object[0], new String[0]);\n            System.out.println(\"Received reply: \" + s);\n\n            mbeanServer = utils.getServerTwoConnection();\n            System.out.println(\"Calling TestMBean.test() on server two\");\n            s = (String) mbeanServer.invoke(objectName, \"test\", new Object[0], new String[0]);\n            System.out.println(\"Received reply: \" + s);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            utils.undeploy();\n            safeClose(utils);\n        }\n    }","id":39569,"modified_method":"public static void main(String[] args) throws Exception {\n        DomainDeploymentUtils utils = null;\n        try {\n            utils = new DomainDeploymentUtils(\"ds-mbean.sar\", Test.class.getPackage());\n\n            utils.deploy();\n\n            ObjectName objectName = new ObjectName(\"jboss:name=test,type=ds\");\n\n            MBeanServerConnection mbeanServer = utils.getServerOneConnection();\n            System.out.println(\"Calling TestMBean.test() on server one\");\n            String s = (String) mbeanServer.invoke(objectName, \"test\", new Object[0], new String[0]);\n            System.out.println(\"Received reply: \" + s);\n\n            mbeanServer = utils.getServerTwoConnection();\n            System.out.println(\"Calling TestMBean.test() on server two\");\n            s = (String) mbeanServer.invoke(objectName, \"test\", new Object[0], new String[0]);\n            System.out.println(\"Received reply: \" + s);\n\n        } catch (Exception e) {\n            Throwable parent = e;\n            while (parent != null) {\n                if (parent instanceof NameNotFoundException && e.getMessage().indexOf(\"H2DS\") > -1) {\n                    usage(parent);\n                    return;\n                }\n                parent = parent.getCause();\n            }\n            e.printStackTrace();\n        } finally {\n            utils.undeploy();\n            safeClose(utils);\n        }\n    }","commit_id":"8775d6d227a7094c9a3263b8c0a1d3e7c14afffd","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testHost() throws Exception {\n        URL url = getXmlUrl(\"domain/configuration/host.xml\");\n        Reader reader = getReader(url);\n        HostModel model = parseHost(reader);\n        String xml = writeModel(Element.HOST, model);\n        reader = new StringReader(xml);\n        parseHost(reader);\n    }","id":39570,"modified_method":"public void testHost() throws Exception {\n        URL url = getXmlUrl(\"domain/configuration/host.xml\");\n        InputStream reader = getReader(url);\n        HostModel model = parseHost(reader);\n        String xml = writeModel(Element.HOST, model);\n        reader = new ByteArrayInputStream(xml.getBytes());\n        parseHost(reader);\n    }","commit_id":"8775d6d227a7094c9a3263b8c0a1d3e7c14afffd","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testStandalone() throws Exception {\n        URL url = getXmlUrl(\"standalone/configuration/standalone.xml\");\n        Reader reader = getReader(url);\n        ServerModel model = parseServer(reader);\n        String xml = writeModel(Element.SERVER, model);\n        reader = new StringReader(xml);\n        parseServer(reader);\n    }","id":39571,"modified_method":"public void testStandalone() throws Exception {\n        URL url = getXmlUrl(\"standalone/configuration/standalone.xml\");\n        InputStream reader = getReader(url);\n        ServerModel model = parseServer(reader);\n        String xml = writeModel(Element.SERVER, model);\n        reader = new ByteArrayInputStream(xml.getBytes());\n        parseServer(reader);\n    }","commit_id":"8775d6d227a7094c9a3263b8c0a1d3e7c14afffd","url":"https://github.com/wildfly/wildfly"},{"original_method":"private Reader getReader(URL url) throws IOException {\n        URLConnection connection = url.openConnection();\n        InputStream is = connection.getInputStream();\n        InputStreamReader isr = new InputStreamReader(is);\n        return isr;\n    }","id":39572,"modified_method":"private InputStream getReader(URL url) throws IOException {\n        URLConnection connection = url.openConnection();\n        InputStream is = connection.getInputStream();\n//        InputStreamReader isr = new InputStreamReader(is);\n//        return isr;\n        return is;\n    }","commit_id":"8775d6d227a7094c9a3263b8c0a1d3e7c14afffd","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void testDomain() throws Exception {\n        URL url = getXmlUrl(\"domain/configuration/domain.xml\");\n        Reader reader = getReader(url);\n        DomainModel model = parseDomain(reader);\n        String xml = writeModel(Element.DOMAIN, model);\n        reader = new StringReader(xml);\n        parseDomain(reader);\n    }","id":39573,"modified_method":"public void testDomain() throws Exception {\n        URL url = getXmlUrl(\"domain/configuration/domain.xml\");\n        InputStream reader = getReader(url);\n        DomainModel model = parseDomain(reader);\n        String xml = writeModel(Element.DOMAIN, model);\n        reader = new ByteArrayInputStream(xml.getBytes());\n        parseDomain(reader);\n    }","commit_id":"8775d6d227a7094c9a3263b8c0a1d3e7c14afffd","url":"https://github.com/wildfly/wildfly"},{"original_method":"private String writeModel(final Element element, final XMLContentWriter content) throws XMLStreamException, FactoryConfigurationError {\n        final XMLMapper mapper = XMLMapper.Factory.create();\n        final StringWriter writer = new StringWriter();\n        try {\n            mapper.deparseDocument(new RootElementWriter(element, content), XMLOutputFactory.newInstance().createXMLStreamWriter(writer));\n        }\n        catch (XMLStreamException e) {\n            // Dump some diagnostics\n            System.out.println(\"XML Content that was written prior to exception:\");\n            System.out.println(writer.toString());\n            throw e;\n        }\n        return writer.toString();\n    }","id":39574,"modified_method":"private String writeModel(final Element element, final XMLContentWriter content) throws Exception, FactoryConfigurationError {\n        final XMLMapper mapper = XMLMapper.Factory.create();\n        final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        final BufferedOutputStream bos = new BufferedOutputStream(baos);\n        final XMLStreamWriter xmlWriter = XMLOutputFactory.newInstance().createXMLStreamWriter(bos);\n        try {\n            mapper.deparseDocument(new RootElementWriter(element, content), xmlWriter);\n            xmlWriter.close();\n        }\n        catch (XMLStreamException e) {\n            xmlWriter.close();\n            bos.close();\n            baos.close();\n            // Dump some diagnostics\n            System.out.println(\"XML Content that was written prior to exception:\");\n            System.out.println(new String(baos.toByteArray()));\n            throw e;\n        }\n        finally {\n            bos.close();\n            baos.close();\n        }\n        return new String(baos.toByteArray());\n    }","commit_id":"8775d6d227a7094c9a3263b8c0a1d3e7c14afffd","url":"https://github.com/wildfly/wildfly"},{"original_method":"public static void main(String[] args) throws Exception {\n        DomainClient client = null;\n        try {\n            client = DomainClient.Factory.create(InetAddress.getByName(\"localhost\"), 9999);\n\n            System.out.println(\"\\nReading the domain configuration:\\n\");\n            System.out.println(writeModel(\"domain\", client.getDomainModel()));\n            System.out.println(\"\\nReading the list of active server managers:\\n\");\n            List<String> serverManagers = client.getServerManagerNames();\n            for (String sm : serverManagers) {\n                System.out.println(sm);\n            }\n\n            for (String sm : serverManagers) {\n                System.out.println(\"\\nReading host configuration for server manager \" + sm + \"\\n\");\n                System.out.println(writeModel(\"host\", client.getHostModel(sm)));\n            }\n\n            System.out.println(\"\\nReading the list of configured servers:\");\n            Map<ServerIdentity, ServerStatus> statuses = new HashMap<ServerIdentity, ServerStatus>(client.getServerStatuses());\n            for(Map.Entry<ServerIdentity, ServerStatus> server : statuses.entrySet()) {\n                ServerIdentity id = server.getKey();\n                System.out.println(\"\\nServer:\\n\");\n                System.out.println(\"server name:         \" + id.getServerName());\n                System.out.println(\"server manager name: \" + id.getHostName());\n                System.out.println(\"server group name:   \" + id.getServerGroupName());\n                System.out.println(\"status:              \" + server.getValue());\n            }\n            // Find some servers to manipulate\n            List<ServerIdentity> servers = findUsefulServers(statuses, ServerStatus.STARTED);\n\n            for (ServerIdentity server : servers) {\n                System.out.println(\"\\nReading runtime configuration for \" + server.getServerName() + \"\\n\");\n                ServerModel sm = client.getServerModel(server.getHostName(), server.getServerName());\n                if (sm == null) {\n                    System.out.println(\"ERROR: server model is null\");\n                }\n                else {\n                    System.out.println(writeModel(\"server\", sm));\n                }\n            }\n\n            for (ServerIdentity server : servers) {\n                System.out.println(\"\\nStopping server \" + server.getServerName() + \"\\n\");\n                ServerStatus status = client.stopServer(server.getHostName(), server.getServerName(), -1, TimeUnit.SECONDS);\n                System.out.println(\"Stop executed. Server status is \" + status);\n                statuses.put(server, status);\n            }\n\n            servers = findUsefulServers(statuses, ServerStatus.STOPPED);\n\n            for (ServerIdentity server : servers) {\n                System.out.println(\"\\nStarting server \" + server.getServerName() + \"\\n\");\n                ServerStatus status = client.startServer(server.getHostName(), server.getServerName());\n                System.out.println(\"Start executed. Server status is \" + status);\n                statuses.put(server, status);\n            }\n\n            Thread.sleep(2000);\n\n            servers = findUsefulServers(statuses, ServerStatus.STARTED);\n\n            for (ServerIdentity server : servers) {\n                System.out.println(\"\\nRestarting server \" + server.getServerName() + \"\\n\");\n                ServerStatus status = client.restartServer(server.getHostName(), server.getServerName(), -1, TimeUnit.SECONDS);\n                System.out.println(\"Restart executed. Server status is \" + status);\n                statuses.put(server, status);\n            }\n\n            Thread.sleep(2000);\n\n            System.out.println(\"\\nCurrent server statuses\\n\");\n            for(Map.Entry<ServerIdentity, ServerStatus> server : client.getServerStatuses().entrySet()) {\n                ServerIdentity id = server.getKey();\n                System.out.println(\"\\nServer:\\n\");\n                System.out.println(\"server name:         \" + id.getServerName());\n                System.out.println(\"server manager name: \" + id.getHostName());\n                System.out.println(\"server group name:   \" + id.getServerGroupName());\n                System.out.println(\"status:              \" + server.getValue());\n            }\n\n        } finally {\n            safeClose(client);\n        }\n    }","id":39575,"modified_method":"public static void main(String[] args) throws Exception {\n        DomainClient client = null;\n        try {\n            client = DomainClient.Factory.create(InetAddress.getByName(\"localhost\"), 9999);\n\n            System.out.println(\"\\nReading the list of configured servers:\");\n            Map<ServerIdentity, ServerStatus> statuses = new HashMap<ServerIdentity, ServerStatus>(client.getServerStatuses());\n            for(Map.Entry<ServerIdentity, ServerStatus> server : statuses.entrySet()) {\n                ServerIdentity id = server.getKey();\n                System.out.println(\"\\nServer:\\n\");\n                System.out.println(\"server name:         \" + id.getServerName());\n                System.out.println(\"server manager name: \" + id.getHostName());\n                System.out.println(\"server group name:   \" + id.getServerGroupName());\n                System.out.println(\"status:              \" + server.getValue());\n            }\n            // Find some servers to manipulate\n            List<ServerIdentity> servers = findUsefulServers(statuses, ServerStatus.STARTED);\n\n            for (ServerIdentity server : servers) {\n                System.out.println(\"\\nReading runtime configuration for \" + server.getServerName() + \"\\n\");\n                ServerModel sm = client.getServerModel(server.getHostName(), server.getServerName());\n                if (sm == null) {\n                    System.out.println(\"ERROR: server model is null\");\n                }\n                else {\n                    System.out.println(writeModel(\"server\", sm));\n                }\n            }\n\n            for (ServerIdentity server : servers) {\n                System.out.println(\"\\nStopping server \" + server.getServerName() + \"\\n\");\n                ServerStatus status = client.stopServer(server.getHostName(), server.getServerName(), -1, TimeUnit.SECONDS);\n                System.out.println(\"Stop executed. Server status is \" + status);\n                statuses.put(server, status);\n            }\n\n            servers = findUsefulServers(statuses, ServerStatus.STOPPED);\n\n            for (ServerIdentity server : servers) {\n                System.out.println(\"\\nStarting server \" + server.getServerName() + \"\\n\");\n                ServerStatus status = client.startServer(server.getHostName(), server.getServerName());\n                System.out.println(\"Start executed. Server status is \" + status);\n                statuses.put(server, status);\n            }\n\n            Thread.sleep(2000);\n\n            servers = findUsefulServers(statuses, ServerStatus.STARTED);\n\n            for (ServerIdentity server : servers) {\n                System.out.println(\"\\nRestarting server \" + server.getServerName() + \"\\n\");\n                ServerStatus status = client.restartServer(server.getHostName(), server.getServerName(), -1, TimeUnit.SECONDS);\n                System.out.println(\"Restart executed. Server status is \" + status);\n                statuses.put(server, status);\n            }\n\n            Thread.sleep(2000);\n\n            System.out.println(\"\\nCurrent server statuses\\n\");\n            for(Map.Entry<ServerIdentity, ServerStatus> server : client.getServerStatuses().entrySet()) {\n                ServerIdentity id = server.getKey();\n                System.out.println(\"\\nServer:\\n\");\n                System.out.println(\"server name:         \" + id.getServerName());\n                System.out.println(\"server manager name: \" + id.getHostName());\n                System.out.println(\"server group name:   \" + id.getServerGroupName());\n                System.out.println(\"status:              \" + server.getValue());\n            }\n\n        } finally {\n            safeClose(client);\n        }\n    }","commit_id":"062517a8499095ea02369a8b3a9f3acb3ba920e0","url":"https://github.com/wildfly/wildfly"},{"original_method":"private static String writeModel(final String element, final XMLContentWriter content) throws XMLStreamException, FactoryConfigurationError {\n        final XMLMapper mapper = XMLMapper.Factory.create();\n        final StringWriter writer = new StringWriter();\n        try {\n            mapper.deparseDocument(new RootElementWriter(element, content), XMLOutputFactory.newInstance().createXMLStreamWriter(writer));\n        }\n        catch (XMLStreamException e) {\n            // Dump some diagnostics\n            System.out.println(\"XML Content that was written prior to exception:\");\n            System.out.println(writer.toString());\n            throw e;\n        }\n        return writer.toString();\n    }","id":39576,"modified_method":"private static String writeModel(final String element, final XMLContentWriter content) throws Exception, FactoryConfigurationError {\n        final XMLMapper mapper = XMLMapper.Factory.create();\n        final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        final BufferedOutputStream bos = new BufferedOutputStream(baos);\n        final XMLStreamWriter writer = XMLOutputFactory.newInstance().createXMLStreamWriter(bos);\n        try {\n            mapper.deparseDocument(new RootElementWriter(element, content), writer);\n        }\n        catch (XMLStreamException e) {\n            // Dump some diagnostics\n            System.out.println(\"XML Content that was written prior to exception:\");\n            System.out.println(writer.toString());\n            throw e;\n        }\n        finally {\n            writer.close();\n            bos.close();\n        }\n        return new String(baos.toByteArray());\n    }","commit_id":"062517a8499095ea02369a8b3a9f3acb3ba920e0","url":"https://github.com/wildfly/wildfly"},{"original_method":"protected void processBlockingInteractionResponse(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse,\n\t\t\tWSRPConsumerManager wsrpConsumerManager,\n\t\t\tBlockingInteractionResponse blockingInteractionResponse)\n\t\tthrows Exception {\n\n\t\tString redirectURL = blockingInteractionResponse.getRedirectURL();\n\n\t\tif (Validator.isNotNull(redirectURL)) {\n\t\t\tsendRedirect(actionResponse, redirectURL);\n\n\t\t\treturn;\n\t\t}\n\n\t\tprocessUpdateResponse(\n\t\t\tactionRequest, actionResponse, wsrpConsumerManager,\n\t\t\tblockingInteractionResponse.getUpdateResponse());\n\t}","id":39577,"modified_method":"protected void processBlockingInteractionResponse(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse,\n\t\t\tWSRPConsumerManager wsrpConsumerManager,\n\t\t\tBlockingInteractionResponse blockingInteractionResponse)\n\t\tthrows Exception {\n\n\t\tString redirectURL = blockingInteractionResponse.getRedirectURL();\n\n\t\tif (Validator.isNotNull(redirectURL)) {\n\t\t\tsendRedirect(actionRequest, actionResponse, redirectURL);\n\n\t\t\treturn;\n\t\t}\n\n\t\tprocessUpdateResponse(\n\t\t\tactionRequest, actionResponse, wsrpConsumerManager,\n\t\t\tblockingInteractionResponse.getUpdateResponse());\n\t}","commit_id":"de00836833f8c34d81f169cc272ee6ff451e475e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void doServeResource(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tString resourceID = resourceRequest.getResourceID();\n\n\t\tString url = ParamUtil.getString(resourceRequest, \"wsrp-url\");\n\t\tboolean preferOperation = ParamUtil.getBoolean(\n\t\t\tresourceRequest, \"wsrp-preferOperation\");\n\n\t\tif (Validator.isNotNull(resourceID) && Validator.isNotNull(url) &&\n\t\t\tpreferOperation) {\n\n\t\t\tgetResource(resourceRequest, resourceResponse);\n\t\t}\n\t\telse if (Validator.isNotNull(url)) {\n\t\t\tproxyURL(resourceRequest, resourceResponse, url);\n\t\t}\n\t\telse if (Validator.isNotNull(resourceID)) {\n\t\t\tgetResource(resourceRequest, resourceResponse);\n\t\t}\n\t}","id":39578,"modified_method":"protected void doServeResource(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tif (PortletPropsValues.SECURE_RESOURCE_URLS) {\n\t\t\tif (!authorize(resourceRequest, resourceResponse)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tString resourceID = resourceRequest.getResourceID();\n\n\t\tString url = ParamUtil.getString(resourceRequest, \"wsrp-url\");\n\t\tboolean preferOperation = ParamUtil.getBoolean(\n\t\t\tresourceRequest, \"wsrp-preferOperation\");\n\n\t\tif (Validator.isNotNull(resourceID) && Validator.isNotNull(url) &&\n\t\t\tpreferOperation) {\n\n\t\t\tgetResource(resourceRequest, resourceResponse);\n\t\t}\n\t\telse if (Validator.isNotNull(url)) {\n\t\t\tproxyURL(resourceRequest, resourceResponse, url);\n\t\t}\n\t\telse if (Validator.isNotNull(resourceID)) {\n\t\t\tgetResource(resourceRequest, resourceResponse);\n\t\t}\n\t}","commit_id":"de00836833f8c34d81f169cc272ee6ff451e475e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected String rewriteURL(\n\t\t\tPortletResponse portletResponse, Map<String, String> parameterMap)\n\t\tthrows Exception {\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t(LiferayPortletResponse)portletResponse;\n\n\t\tString lifecycle = parameterMap.get(\"wsrp-urlType\");\n\n\t\tLiferayPortletURL liferayPortletURL = null;\n\n\t\tif (lifecycle.equals(\"blockingAction\")) {\n\t\t\tliferayPortletURL =\n\t\t\t\t(LiferayPortletURL)liferayPortletResponse.createActionURL();\n\t\t}\n\t\telse if (lifecycle.equals(\"render\")) {\n\t\t\tliferayPortletURL =\n\t\t\t\t(LiferayPortletURL)liferayPortletResponse.createRenderURL();\n\t\t}\n\t\telse if (lifecycle.equals(\"resource\")) {\n\t\t\tliferayPortletURL =\n\t\t\t\t(LiferayPortletURL)liferayPortletResponse.createResourceURL();\n\t\t}\n\n\t\tfor (Map.Entry<String, String> parameter : parameterMap.entrySet()) {\n\t\t\tString name = parameter.getKey();\n\t\t\tString value = parameter.getValue();\n\n\t\t\tif (name.equals(\"wsrp-mode\")) {\n\t\t\t\ttry {\n\t\t\t\t\tliferayPortletURL.setPortletMode(getPortletMode(value));\n\t\t\t\t}\n\t\t\t\tcatch (Exception e) {\n\t\t\t\t\tliferayPortletURL.setPortletMode(PortletMode.VIEW);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (name.equals(\"wsrp-navigationalState\")) {\n\t\t\t\tif (Validator.isNotNull(value)) {\n\t\t\t\t\tbyte[] valueBytes = value.getBytes(StringPool.UTF8);\n\n\t\t\t\t\tvalue = Base64.toURLSafe(Base64.encode(valueBytes));\n\n\t\t\t\t\tliferayPortletURL.setParameter(name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (name.equals(\"wsrp-navigationalValues\")) {\n\t\t\t\tMatcher navigationalValuesMatcher =\n\t\t\t\t\t_navigationalValuesPattern.matcher(value);\n\n\t\t\t\twhile (navigationalValuesMatcher.find()) {\n\t\t\t\t\tString navigationalValuesName =\n\t\t\t\t\t\tnavigationalValuesMatcher.group(1);\n\t\t\t\t\tString navigationalValuesValue =\n\t\t\t\t\t\tnavigationalValuesMatcher.group(2);\n\n\t\t\t\t\tif (Validator.isNull(navigationalValuesValue)) {\n\t\t\t\t\t\tliferayPortletURL.removePublicRenderParameter(\n\t\t\t\t\t\t\tnavigationalValuesName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tliferayPortletURL.setParameter(\n\t\t\t\t\t\t\tnavigationalValuesName, navigationalValuesValue,\n\t\t\t\t\t\t\ttrue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (name.equals(\"wsrp-resourceID\")) {\n\t\t\t\tliferayPortletURL.setResourceID(value);\n\t\t\t}\n\t\t\telse if (name.equals(\"wsrp-urlType\")) {\n\t\t\t}\n\t\t\telse if (name.equals(\"wsrp-windowState\")) {\n\t\t\t\ttry {\n\t\t\t\t\tliferayPortletURL.setWindowState(getWindowState(value));\n\t\t\t\t}\n\t\t\t\tcatch (Exception e) {\n\t\t\t\t\tliferayPortletURL.setWindowState(WindowState.NORMAL);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tliferayPortletURL.setParameter(name, value);\n\t\t\t}\n\t\t}\n\n\t\tString url = liferayPortletURL.toString();\n\n\t\treturn url;\n\t}","id":39579,"modified_method":"protected String rewriteURL(\n\t\t\tPortletRequest portletRequest, PortletResponse portletResponse,\n\t\t\tMap<String, String> parameterMap)\n\t\tthrows Exception {\n\n\t\tLiferayPortletResponse liferayPortletResponse =\n\t\t\t(LiferayPortletResponse)portletResponse;\n\n\t\tString lifecycle = parameterMap.get(\"wsrp-urlType\");\n\n\t\tLiferayPortletURL liferayPortletURL = null;\n\n\t\tif (lifecycle.equals(\"blockingAction\")) {\n\t\t\tliferayPortletURL =\n\t\t\t\t(LiferayPortletURL)liferayPortletResponse.createActionURL();\n\t\t}\n\t\telse if (lifecycle.equals(\"render\")) {\n\t\t\tliferayPortletURL =\n\t\t\t\t(LiferayPortletURL)liferayPortletResponse.createRenderURL();\n\t\t}\n\t\telse if (lifecycle.equals(\"resource\")) {\n\t\t\tliferayPortletURL =\n\t\t\t\t(LiferayPortletURL)liferayPortletResponse.createResourceURL();\n\n\t\t\tif (PortletPropsValues.SECURE_RESOURCE_URLS) {\n\t\t\t\tsecureResourceURL(\n\t\t\t\t\tportletRequest, liferayPortletURL, parameterMap);\n\t\t\t}\n\t\t}\n\n\t\tfor (Map.Entry<String, String> parameter : parameterMap.entrySet()) {\n\t\t\tString name = parameter.getKey();\n\t\t\tString value = parameter.getValue();\n\n\t\t\tif (name.equals(\"wsrp-mode\")) {\n\t\t\t\ttry {\n\t\t\t\t\tliferayPortletURL.setPortletMode(getPortletMode(value));\n\t\t\t\t}\n\t\t\t\tcatch (Exception e) {\n\t\t\t\t\tliferayPortletURL.setPortletMode(PortletMode.VIEW);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (name.equals(\"wsrp-navigationalState\")) {\n\t\t\t\tif (Validator.isNotNull(value)) {\n\t\t\t\t\tbyte[] valueBytes = value.getBytes(StringPool.UTF8);\n\n\t\t\t\t\tvalue = Base64.toURLSafe(Base64.encode(valueBytes));\n\n\t\t\t\t\tliferayPortletURL.setParameter(name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (name.equals(\"wsrp-navigationalValues\")) {\n\t\t\t\tMatcher navigationalValuesMatcher =\n\t\t\t\t\t_navigationalValuesPattern.matcher(value);\n\n\t\t\t\twhile (navigationalValuesMatcher.find()) {\n\t\t\t\t\tString navigationalValuesName =\n\t\t\t\t\t\tnavigationalValuesMatcher.group(1);\n\t\t\t\t\tString navigationalValuesValue =\n\t\t\t\t\t\tnavigationalValuesMatcher.group(2);\n\n\t\t\t\t\tif (Validator.isNull(navigationalValuesValue)) {\n\t\t\t\t\t\tliferayPortletURL.removePublicRenderParameter(\n\t\t\t\t\t\t\tnavigationalValuesName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tliferayPortletURL.setParameter(\n\t\t\t\t\t\t\tnavigationalValuesName, navigationalValuesValue,\n\t\t\t\t\t\t\ttrue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (name.equals(\"wsrp-resourceID\")) {\n\t\t\t\tliferayPortletURL.setResourceID(value);\n\t\t\t}\n\t\t\telse if (name.equals(\"wsrp-urlType\")) {\n\t\t\t}\n\t\t\telse if (name.equals(\"wsrp-windowState\")) {\n\t\t\t\ttry {\n\t\t\t\t\tliferayPortletURL.setWindowState(getWindowState(value));\n\t\t\t\t}\n\t\t\t\tcatch (Exception e) {\n\t\t\t\t\tliferayPortletURL.setWindowState(WindowState.NORMAL);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tliferayPortletURL.setParameter(name, value);\n\t\t\t}\n\t\t}\n\n\t\tString url = liferayPortletURL.toString();\n\n\t\treturn url;\n\t}","commit_id":"de00836833f8c34d81f169cc272ee6ff451e475e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected String rewriteURLs(\n\t\t\tPortletResponse portletResponse, String content)\n\t\tthrows Exception {\n\n\t\tMatcher rewriteMatcher = _rewritePattern.matcher(content);\n\n\t\tStringBuffer sb = new StringBuffer();\n\n\t\twhile (rewriteMatcher.find()) {\n\t\t\tString namespace = rewriteMatcher.group(1);\n\t\t\tString url = rewriteMatcher.group(2);\n\t\t\tString extensionURL1 = rewriteMatcher.group(3);\n\t\t\tString extensionURL2 = rewriteMatcher.group(4);\n\n\t\t\tString replacement = null;\n\n\t\t\tMap<String, String> parameterMap =\n\t\t\t\tnew HashMap<String, String>();\n\n\t\t\tif (Validator.isNotNull(namespace)) {\n\t\t\t\trewriteMatcher.appendReplacement(\n\t\t\t\t\tsb, portletResponse.getNamespace());\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(url)) {\n\t\t\t\tMatcher parameterMatcher = _parameterPattern.matcher(url);\n\n\t\t\t\twhile (parameterMatcher.find()) {\n\t\t\t\t\tString name = parameterMatcher.group(1);\n\t\t\t\t\tString value = parameterMatcher.group(2);\n\n\t\t\t\t\tif (Validator.isNull(value) ||\n\t\t\t\t\t\tvalue.equals(StringPool.DOUBLE_QUOTE)) {\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tparameterMap.put(name, HttpUtil.decodeURL(value));\n\t\t\t\t}\n\n\t\t\t\trewriteMatcher.appendReplacement(\n\t\t\t\t\tsb, rewriteURL(portletResponse, parameterMap));\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(extensionURL1)) {\n\t\t\t\tparameterMap.put(\"wsrp-urlType\", \"render\");\n\t\t\t\tparameterMap.put(\"wsrp-windowState\", \"wsrp:normal\");\n\n\t\t\t\treplacement =\n\t\t\t\t\t\"location.href = '\" +\n\t\t\t\t\t\trewriteURL(portletResponse, parameterMap) + \"'\";\n\n\t\t\t\trewriteMatcher.appendReplacement(sb, replacement);\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(extensionURL2)) {\n\t\t\t\tparameterMap.put(\"wsrp-urlType\", \"render\");\n\t\t\t\tparameterMap.put(\"wsrp-windowState\", \"wsrp:normal\");\n\n\t\t\t\treplacement =\n\t\t\t\t\t\"href=\\\"\" + rewriteURL(portletResponse, parameterMap) +\n\t\t\t\t\t\t\"\\\"\";\n\n\t\t\t\trewriteMatcher.appendReplacement(sb, replacement);\n\t\t\t}\n\t\t}\n\n\t\trewriteMatcher.appendTail(sb);\n\n\t\treturn sb.toString();\n\t}","id":39580,"modified_method":"protected String rewriteURLs(\n\t\t\tPortletRequest portletRequest, PortletResponse portletResponse,\n\t\t\tString content)\n\t\tthrows Exception {\n\n\t\tMatcher rewriteMatcher = _rewritePattern.matcher(content);\n\n\t\tStringBuffer sb = new StringBuffer();\n\n\t\twhile (rewriteMatcher.find()) {\n\t\t\tString namespace = rewriteMatcher.group(1);\n\t\t\tString url = rewriteMatcher.group(2);\n\t\t\tString extensionURL1 = rewriteMatcher.group(3);\n\t\t\tString extensionURL2 = rewriteMatcher.group(4);\n\n\t\t\tString replacement = null;\n\t\t\tString rewrittenUrl = null;\n\n\t\t\tMap<String, String> parameterMap =\n\t\t\t\tnew HashMap<String, String>();\n\n\t\t\tif (Validator.isNotNull(namespace)) {\n\t\t\t\trewriteMatcher.appendReplacement(\n\t\t\t\t\tsb, portletResponse.getNamespace());\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(url)) {\n\t\t\t\tMatcher parameterMatcher = _parameterPattern.matcher(url);\n\n\t\t\t\twhile (parameterMatcher.find()) {\n\t\t\t\t\tString name = parameterMatcher.group(1);\n\t\t\t\t\tString value = parameterMatcher.group(2);\n\n\t\t\t\t\tif (Validator.isNull(value) ||\n\t\t\t\t\t\tvalue.equals(StringPool.DOUBLE_QUOTE)) {\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tparameterMap.put(name, HttpUtil.decodeURL(value));\n\t\t\t\t}\n\n\t\t\t\trewrittenUrl = rewriteURL(\n\t\t\t\t\tportletRequest, portletResponse, parameterMap);\n\n\t\t\t\trewriteMatcher.appendReplacement(sb, rewrittenUrl);\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(extensionURL1)) {\n\t\t\t\tparameterMap.put(\"wsrp-urlType\", \"render\");\n\t\t\t\tparameterMap.put(\"wsrp-windowState\", \"wsrp:normal\");\n\n\t\t\t\trewrittenUrl = rewriteURL(\n\t\t\t\t\tportletRequest, portletResponse, parameterMap);\n\n\t\t\t\treplacement = \"location.href = '\" + rewrittenUrl + \"'\";\n\n\t\t\t\trewriteMatcher.appendReplacement(sb, replacement);\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(extensionURL2)) {\n\t\t\t\tparameterMap.put(\"wsrp-urlType\", \"render\");\n\t\t\t\tparameterMap.put(\"wsrp-windowState\", \"wsrp:normal\");\n\n\t\t\t\trewrittenUrl = rewriteURL(\n\t\t\t\t\tportletRequest, portletResponse, parameterMap);\n\n\t\t\t\treplacement = \"href=\\\"\" + rewrittenUrl + \"\\\"\";\n\n\t\t\t\trewriteMatcher.appendReplacement(sb, replacement);\n\t\t\t}\n\t\t}\n\n\t\trewriteMatcher.appendTail(sb);\n\n\t\treturn sb.toString();\n\t}","commit_id":"de00836833f8c34d81f169cc272ee6ff451e475e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void sendRedirect(\n\t\t\tActionResponse actionResponse, String redirectURL)\n\t\tthrows Exception {\n\n\t\tredirectURL = rewriteURLs(actionResponse, redirectURL);\n\n\t\tactionResponse.sendRedirect(redirectURL);\n\t}","id":39581,"modified_method":"protected void sendRedirect(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse,\n\t\t\tString redirectURL)\n\t\tthrows Exception {\n\n\t\tredirectURL = rewriteURLs(actionRequest, actionResponse, redirectURL);\n\n\t\tactionResponse.sendRedirect(redirectURL);\n\t}","commit_id":"de00836833f8c34d81f169cc272ee6ff451e475e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void processMimeResponse(\n\t\t\tPortletRequest portletRequest,\n\t\t\tjavax.portlet.MimeResponse jxMimeResponse,\n\t\t\tMimeResponse mimeResponse)\n\t\tthrows Exception {\n\n\t\tString contentType = GetterUtil.get(\n\t\t\tmimeResponse.getMimeType(), ContentTypes.TEXT_HTML_UTF8);\n\n\t\tjxMimeResponse.setContentType(contentType);\n\n\t\tString charSet = getCharSet(contentType);\n\n\t\tString itemString = mimeResponse.getItemString();\n\t\tbyte[] itemBinary = mimeResponse.getItemBinary();\n\n\t\tBoolean requiresRewriting = mimeResponse.getRequiresRewriting();\n\n\t\tif (requiresRewriting == null) {\n\t\t\trequiresRewriting = Boolean.FALSE;\n\t\t}\n\n\t\tif (ParamUtil.getBoolean(portletRequest, \"wsrp-requiresRewrite\") ||\n\t\t\trequiresRewriting) {\n\n\t\t\tif (itemBinary != null) {\n\t\t\t\titemString = new String(itemBinary, charSet);\n\t\t\t}\n\n\t\t\titemString = rewriteURLs(jxMimeResponse, itemString);\n\t\t}\n\n\t\tif (Validator.isNotNull(itemString)) {\n\t\t\tif (jxMimeResponse instanceof ResourceResponse) {\n\t\t\t\tResourceResponse resourceResponse =\n\t\t\t\t\t(ResourceResponse)jxMimeResponse;\n\n\t\t\t\tresourceResponse.setContentLength(itemString.length());\n\t\t\t}\n\n\t\t\tPortletResponseUtil.write(jxMimeResponse, itemString);\n\t\t}\n\t\telse if (itemBinary != null) {\n\t\t\tif (jxMimeResponse instanceof ResourceResponse) {\n\t\t\t\tResourceResponse resourceResponse =\n\t\t\t\t\t(ResourceResponse)jxMimeResponse;\n\n\t\t\t\tresourceResponse.setContentLength(itemBinary.length);\n\t\t\t}\n\n\t\t\tPortletResponseUtil.write(jxMimeResponse, itemBinary);\n\t\t}\n\t}","id":39582,"modified_method":"protected void processMimeResponse(\n\t\t\tPortletRequest portletRequest,\n\t\t\tjavax.portlet.MimeResponse jxMimeResponse,\n\t\t\tMimeResponse mimeResponse)\n\t\tthrows Exception {\n\n\t\tString contentType = GetterUtil.get(\n\t\t\tmimeResponse.getMimeType(), ContentTypes.TEXT_HTML_UTF8);\n\n\t\tjxMimeResponse.setContentType(contentType);\n\n\t\tString charSet = getCharSet(contentType);\n\n\t\tString itemString = mimeResponse.getItemString();\n\t\tbyte[] itemBinary = mimeResponse.getItemBinary();\n\n\t\tBoolean requiresRewriting = mimeResponse.getRequiresRewriting();\n\n\t\tif (requiresRewriting == null) {\n\t\t\trequiresRewriting = Boolean.FALSE;\n\t\t}\n\n\t\tif (ParamUtil.getBoolean(portletRequest, \"wsrp-requiresRewrite\") ||\n\t\t\trequiresRewriting) {\n\n\t\t\tif (itemBinary != null) {\n\t\t\t\titemString = new String(itemBinary, charSet);\n\t\t\t}\n\n\t\t\titemString = rewriteURLs(\n\t\t\t\tportletRequest, jxMimeResponse, itemString);\n\t\t}\n\n\t\tif (Validator.isNotNull(itemString)) {\n\t\t\tif (jxMimeResponse instanceof ResourceResponse) {\n\t\t\t\tResourceResponse resourceResponse =\n\t\t\t\t\t(ResourceResponse)jxMimeResponse;\n\n\t\t\t\tresourceResponse.setContentLength(itemString.length());\n\t\t\t}\n\n\t\t\tPortletResponseUtil.write(jxMimeResponse, itemString);\n\t\t}\n\t\telse if (itemBinary != null) {\n\t\t\tif (jxMimeResponse instanceof ResourceResponse) {\n\t\t\t\tResourceResponse resourceResponse =\n\t\t\t\t\t(ResourceResponse)jxMimeResponse;\n\n\t\t\t\tresourceResponse.setContentLength(itemBinary.length);\n\t\t\t}\n\n\t\t\tPortletResponseUtil.write(jxMimeResponse, itemBinary);\n\t\t}\n\t}","commit_id":"de00836833f8c34d81f169cc272ee6ff451e475e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void proxyURL(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse,\n\t\t\tString url)\n\t\tthrows Exception {\n\n\t\tPortletSession portletSession = resourceRequest.getPortletSession();\n\n\t\tWSRPConsumerPortlet wsrpConsumerPortlet = getWSRPConsumerPortlet();\n\n\t\tWSRPConsumer wsrpConsumer =\n\t\t\tWSRPConsumerLocalServiceUtil.getWSRPConsumer(\n\t\t\t\twsrpConsumerPortlet.getWsrpConsumerId());\n\n\t\tHttp.Options options = new Http.Options();\n\n\t\toptions.setLocation(url);\n\n\t\tString cookieKey = getSessionKey(\n\t\t\tWebKeys.COOKIE, resourceRequest, wsrpConsumer);\n\n\t\tString cookie = (String)portletSession.getAttribute(\n\t\t\tcookieKey, PortletSession.APPLICATION_SCOPE);\n\n\t\tif (Validator.isNotNull(cookie)) {\n\t\t\tMap<String, String> headers = new HashMap<String, String>();\n\n\t\t\theaders.put(HttpHeaders.COOKIE, cookie);\n\n\t\t\toptions.setHeaders(headers);\n\t\t}\n\n\t\tbyte[] bytes = HttpUtil.URLtoByteArray(options);\n\n\t\tHttp.Response response = options.getResponse();\n\n\t\tString contentDisposition = response.getHeader(\n\t\t\tHttpHeaders.CONTENT_DISPOSITION);\n\n\t\tif (Validator.isNotNull(contentDisposition)) {\n\t\t\tresourceResponse.setProperty(\n\t\t\t\tHttpHeaders.CONTENT_DISPOSITION, contentDisposition);\n\t\t}\n\n\t\tint contentLength = response.getContentLength();\n\n\t\tif (contentLength >= 0) {\n\t\t\tresourceResponse.setContentLength(contentLength);\n\t\t}\n\n\t\tString contentType = response.getContentType();\n\n\t\tif (Validator.isNotNull(contentType)) {\n\t\t\tresourceResponse.setContentType(contentType);\n\t\t}\n\n\t\tString charSet = getCharSet(contentType);\n\n\t\tif (ParamUtil.getBoolean(resourceRequest, \"wsrp-requiresRewrite\")) {\n\t\t\tString content = rewriteURLs(\n\t\t\t\tresourceResponse, new String(bytes, charSet));\n\n\t\t\tPortletResponseUtil.write(resourceResponse, content);\n\t\t}\n\n\t\tPortletResponseUtil.write(resourceResponse, bytes);\n\t}","id":39583,"modified_method":"protected void proxyURL(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse,\n\t\t\tString url)\n\t\tthrows Exception {\n\n\t\tPortletSession portletSession = resourceRequest.getPortletSession();\n\n\t\tWSRPConsumerPortlet wsrpConsumerPortlet = getWSRPConsumerPortlet();\n\n\t\tWSRPConsumer wsrpConsumer =\n\t\t\tWSRPConsumerLocalServiceUtil.getWSRPConsumer(\n\t\t\t\twsrpConsumerPortlet.getWsrpConsumerId());\n\n\t\tHttp.Options options = new Http.Options();\n\n\t\toptions.setLocation(url);\n\n\t\tString cookieKey = getSessionKey(\n\t\t\tWebKeys.COOKIE, resourceRequest, wsrpConsumer);\n\n\t\tString cookie = (String)portletSession.getAttribute(\n\t\t\tcookieKey, PortletSession.APPLICATION_SCOPE);\n\n\t\tif (Validator.isNotNull(cookie)) {\n\t\t\tMap<String, String> headers = new HashMap<String, String>();\n\n\t\t\theaders.put(HttpHeaders.COOKIE, cookie);\n\n\t\t\toptions.setHeaders(headers);\n\t\t}\n\n\t\tbyte[] bytes = HttpUtil.URLtoByteArray(options);\n\n\t\tHttp.Response response = options.getResponse();\n\n\t\tString contentDisposition = response.getHeader(\n\t\t\tHttpHeaders.CONTENT_DISPOSITION);\n\n\t\tif (Validator.isNotNull(contentDisposition)) {\n\t\t\tresourceResponse.setProperty(\n\t\t\t\tHttpHeaders.CONTENT_DISPOSITION, contentDisposition);\n\t\t}\n\n\t\tint contentLength = response.getContentLength();\n\n\t\tif (contentLength >= 0) {\n\t\t\tresourceResponse.setContentLength(contentLength);\n\t\t}\n\n\t\tString contentType = response.getContentType();\n\n\t\tif (Validator.isNotNull(contentType)) {\n\t\t\tresourceResponse.setContentType(contentType);\n\t\t}\n\n\t\tString charSet = getCharSet(contentType);\n\n\t\tif (ParamUtil.getBoolean(resourceRequest, \"wsrp-requiresRewrite\")) {\n\t\t\tString content = rewriteURLs(\n\t\t\t\tresourceRequest, resourceResponse, new String(bytes, charSet));\n\n\t\t\tPortletResponseUtil.write(resourceResponse, content);\n\t\t}\n\n\t\tPortletResponseUtil.write(resourceResponse, bytes);\n\t}","commit_id":"de00836833f8c34d81f169cc272ee6ff451e475e","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void startElement (String uri, String localName, String qName,  Attributes atts) throws SAXException \n  {\n    AttributesImpl attsImpl = new AttributesImpl(atts);\n\n    if (attsImpl.getIndex(\"href\") != -1)\n    {\n      rewriteURL(\"a\", \"href\", qName, atts, attsImpl);\n      rewriteURL(\"area\", \"href\", qName, atts, attsImpl);\n      rewriteURL(\"map\", \"href\", qName, atts, attsImpl);\n    }\n    else if (qName.equals(\"form\"))\n    {\n      passThrough = (String)runtimeData.get(\"cw_passThrough\");\n      if (passThrough.equals(\"all\") || passThrough.equals(\"marked\")\n                                    || passThrough.equals(\"application\"))\n      {\n        insideForm = true;\n       \n        // determine original action value\n        String attValue = atts.getValue(\"action\");\n        if (attValue != null)\n        {\n          origActionValue = attValue;\n        }\n        else // action attribute required\n        {\n          attsImpl.addAttribute(uri, localName, \"action\", \"CDATA\", \"\");\n          origActionValue = \"\";\n        }\n\n        // set up a buffer for form elements\n        buffer = new SAX2BufferImpl(this.contentHandler);\n        buffer.clearBuffer();\n        buffer.startBuffering();\n      }\n    }\n    else if (qName.equals(\"input\"))\n    {\n      if (insideForm)\n      {\n        String name = atts.getValue(\"name\");\n        if (name != null)\n        {\n          if (name.equals(\"cw_download\"))\n            actionURL = atts.getValue(\"value\");\n          else if (passThrough.equals(\"marked\") && name.equals(\"cw_inChannelLink\"))\n            markedInputExists = true;\n        }\n      }\n    }\n\n    if (insideForm)\n      buffer.startElement(uri, localName, qName, attsImpl);\n    else\n      super.startElement(uri, localName, qName, attsImpl);\n  }","id":39584,"modified_method":"public void startElement (String uri, String localName, String qName,  Attributes atts) throws SAXException \n  {\n    AttributesImpl attsImpl = new AttributesImpl(atts);\n\n    if (attsImpl.getIndex(\"href\") != -1)\n    {\n      String target = atts.getValue(\"target\");\n      // if target exists, do not go through channel\n      if (target == null)\n        rewriteURL(\"a\", \"href\", qName, atts, attsImpl);\n      if (target == null)\n        rewriteURL(\"area\", \"href\", qName, atts, attsImpl);\n      rewriteURL(\"map\", \"href\", qName, atts, attsImpl);\n    }\n    else if (qName.equals(\"form\"))\n    {\n      String target = atts.getValue(\"target\");\n      if (target == null)\n      {\n        passThrough = (String)runtimeData.get(\"cw_passThrough\");\n        if (passThrough.equals(\"all\") || passThrough.equals(\"marked\")\n                                      || passThrough.equals(\"application\"))\n        {\n          insideForm = true;\n       \n          // determine original action value\n          String attValue = atts.getValue(\"action\");\n          if (attValue != null)\n          {\n            origActionValue = attValue;\n          }\n          else // action attribute required\n          {\n            attsImpl.addAttribute(uri, localName, \"action\", \"CDATA\", \"\");\n            origActionValue = \"\";\n          }\n\n          // set up a buffer for form elements\n          buffer = new SAX2BufferImpl(this.contentHandler);\n          buffer.clearBuffer();\n          buffer.startBuffering();\n        }\n      }\n    }\n    else if (qName.equals(\"input\"))\n    {\n      if (insideForm)\n      {\n        String name = atts.getValue(\"name\");\n        if (name != null)\n        {\n          if (name.equals(\"cw_download\"))\n            actionURL = atts.getValue(\"value\");\n          else if (passThrough.equals(\"marked\") && name.equals(\"cw_inChannelLink\"))\n            markedInputExists = true;\n        }\n      }\n    }\n\n    if (insideForm)\n      buffer.startElement(uri, localName, qName, attsImpl);\n    else\n      super.startElement(uri, localName, qName, attsImpl);\n  }","commit_id":"d6e0f63cf28bc8f0bdaa44d691660d86542b7e8f","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void visitClassContext(ClassContext classContext) {\n\t\tjavaClass = classContext.getJavaClass();\n\n\t\tMethod[] methodList = javaClass.getMethods();\n\t\tfor (int i = 0; i < methodList.length; ++i) {\n\t\t\tMethod method = methodList[i];\n\n\t\t\tMethodGen methodGen = classContext.getMethodGen(method);\n\t\t\tif (methodGen == null)\n\t\t\t\tcontinue;\n\n\t\t\tif (!preScreen(methodGen))\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tanalyzeMethod(classContext, method);\n\t\t\t} catch (DataflowAnalysisException e) {\n\t\t\t\tbugReporter.logError(\"Error analyzing \" + method.toString(), e);\n\t\t\t} catch (CFGBuilderException e) {\n\t\t\t\tbugReporter.logError(\"Error analyzing \" + method.toString(), e);\n\t\t\t}\n\t\t}\n\t}","id":39585,"modified_method":"public void visitClassContext(ClassContext classContext) {\n\t\tjavaClass = classContext.getJavaClass();\n\t\tsawTwoLockWait = sawTwoLockNotify = false;\n\t\tMethod[] methodList = javaClass.getMethods();\n\t\tfor (int i = 0; i < methodList.length; ++i) {\n\t\t\tMethod method = methodList[i];\n\n\t\t\tMethodGen methodGen = classContext.getMethodGen(method);\n\t\t\tif (methodGen == null)\n\t\t\t\tcontinue;\n\n\t\t\tif (!preScreen(methodGen))\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tanalyzeMethod(classContext, method);\n\t\t\t} catch (DataflowAnalysisException e) {\n\t\t\t\tbugReporter.logError(\"Error analyzing \" + method.toString(), e);\n\t\t\t} catch (CFGBuilderException e) {\n\t\t\t\tbugReporter.logError(\"Error analyzing \" + method.toString(), e);\n\t\t\t}\n\t\t}\n\t}","commit_id":"253e74326afcfbd51e6cb019ebe0d7c6f9655e62","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public boolean preScreen(MethodGen mg) {\n\t\tConstantPoolGen cpg = mg.getConstantPool();\n\n\t\tint lockCount = mg.isSynchronized() ? 1 : 0;\n\t\tboolean sawWait = false;\n\n\t\tInstructionHandle handle = mg.getInstructionList().getStart();\n\t\twhile (handle != null && !(lockCount >= 2 && sawWait)) {\n\t\t\tInstruction ins = handle.getInstruction();\n\t\t\tif (ins instanceof MONITORENTER)\n\t\t\t\t++lockCount;\n\t\t\telse if (ins instanceof INVOKEVIRTUAL) {\n\t\t\t\tINVOKEVIRTUAL inv = (INVOKEVIRTUAL) ins;\n\t\t\t\tif (inv.getMethodName(cpg).equals(\"wait\"))\n\t\t\t\t\tsawWait = true;\n\t\t\t}\n\n\t\t\thandle = handle.getNext();\n\t\t}\n\n\t\treturn lockCount >= 2 && sawWait;\n\t}","id":39586,"modified_method":"public boolean preScreen(MethodGen mg) {\n\t\tConstantPoolGen cpg = mg.getConstantPool();\n\n\t\tint lockCount = mg.isSynchronized() ? 1 : 0;\n\t\tboolean sawWaitOrNotify = false;\n\n\t\tInstructionHandle handle = mg.getInstructionList().getStart();\n\t\twhile (handle != null && !(lockCount >= 2 && sawWaitOrNotify)) {\n\t\t\tInstruction ins = handle.getInstruction();\n\t\t\tif (ins instanceof MONITORENTER)\n\t\t\t\t++lockCount;\n\t\t\telse if (ins instanceof INVOKEVIRTUAL) {\n\t\t\t\tINVOKEVIRTUAL inv = (INVOKEVIRTUAL) ins;\n\t\t\t\tString methodName = inv.getMethodName(cpg);\n\t\t\t\tif (methodName.equals(\"wait\") || methodName.startsWith(\"notify\"))\n\t\t\t\t\tsawWaitOrNotify = true;\n\t\t\t}\n\n\t\t\thandle = handle.getNext();\n\t\t}\n\n\t\treturn lockCount >= 2 && sawWaitOrNotify;\n\t}","commit_id":"253e74326afcfbd51e6cb019ebe0d7c6f9655e62","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void visitLocation(ClassContext classContext, Location location, MethodGen methodGen, LockDataflow dataflow) throws DataflowAnalysisException {\n\t\tConstantPoolGen cpg = methodGen.getConstantPool();\n\t\t\n\t\tif (Hierarchy.isMonitorWait(location.getHandle().getInstruction(), cpg)) {\n\t\t\tint count = dataflow.getFactAtLocation(location).getNumLockedObjects();\n\t\t\tif (count > 1) {\n\t\t\t\t// A wait with multiple locks held?\n\t\t\t\tString sourceFile = javaClass.getSourceFileName();\n\t\t\t\tbugReporter.reportBug(new BugInstance(this, \"TLW_TWO_LOCK_WAIT\", NORMAL_PRIORITY)\n\t\t\t\t\t\t.addClass(javaClass)\n\t\t\t\t\t\t.addMethod(methodGen, sourceFile)\n\t\t\t\t\t\t.addSourceLine(classContext, methodGen, sourceFile, location.getHandle()));\n\t\t\t}\n\t\t}\n\t}","id":39587,"modified_method":"public void visitLocation(ClassContext classContext, Location location, MethodGen methodGen, LockDataflow dataflow) throws DataflowAnalysisException {\n\t\tConstantPoolGen cpg = methodGen.getConstantPool();\n\t\t\n\t\tif (Hierarchy.isMonitorWait(location.getHandle().getInstruction(), cpg)) {\n\t\t\tint count = dataflow.getFactAtLocation(location).getNumLockedObjects();\n\t\t\tif (count > 1) {\n\t\t\t\t// A wait with multiple locks held?\n\t\t\t\tString sourceFile = javaClass.getSourceFileName();\n\t\t\t\tbugReporter.reportBug(new BugInstance(this, \"TLW_TWO_LOCK_WAIT\", sawTwoLockNotify ? HIGH_PRIORITY : NORMAL_PRIORITY)\n\t\t\t\t\t\t.addClass(javaClass)\n\t\t\t\t\t\t.addMethod(methodGen, sourceFile)\n\t\t\t\t\t\t.addSourceLine(classContext, methodGen, sourceFile, location.getHandle()));\n\t\t\t\tsawTwoLockWait = true;\n\t\t\t}\n\t\t}\n\t\tif (Hierarchy.isMonitorNotify(location.getHandle().getInstruction(), cpg)) {\n\t\t\tint count = dataflow.getFactAtLocation(location).getNumLockedObjects();\n\t\t\tif (count > 1) {\n\t\t\t\t// A notify with multiple locks held?\n\t\t\t\tString sourceFile = javaClass.getSourceFileName();\n\t\t\t\tbugReporter.reportBug(new BugInstance(this, \"TLW_TWO_LOCK_NOTIFY\", sawTwoLockWait ? HIGH_PRIORITY : NORMAL_PRIORITY)\n\t\t\t\t\t\t.addClass(javaClass)\n\t\t\t\t\t\t.addMethod(methodGen, sourceFile)\n\t\t\t\t\t\t.addSourceLine(classContext, methodGen, sourceFile, location.getHandle()));\n\t\t\t\tsawTwoLockNotify = true;\n\t\t\t}\n\t\t}\n\t}","commit_id":"253e74326afcfbd51e6cb019ebe0d7c6f9655e62","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void onTestStart(ExposedTestResult result) {\n    final String testMethodName = result.getMethodName();\n    final Object[] parameters = result.getParameters();\n    if (!testMethodName.equals(myMethodName)) {\n      myInvocationCount = 0;\n      myMethodName = testMethodName;\n    }\n    final String paramString = getParamsString(parameters, myInvocationCount);\n    myParamsMap.put(result, paramString);\n    onTestStart(result, paramString, myInvocationCount);\n    myInvocationCount++;\n  }","id":39588,"modified_method":"public void onTestStart(ExposedTestResult result) {\n    final Object[] parameters = result.getParameters();\n    final String qualifiedName = result.getClassName() + result.getMethodName();\n    Integer invocationCount = myInvocationCounts.get(qualifiedName);\n    if (invocationCount == null) {\n      invocationCount = 0;\n    }\n    \n    final String paramString = getParamsString(parameters, invocationCount);\n    myParamsMap.put(result, paramString);\n    onTestStart(result, paramString, invocationCount);\n    myInvocationCounts.put(qualifiedName, invocationCount + 1);\n  }","commit_id":"55ccc9b7c0463999d4ca6843330864cc354830c6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean matchesClass(String className) {\n        return this.className.equals(className);\n    }","id":39589,"modified_method":"public boolean matchesClass(String className) {\n        return this.classPattern.equals(className);\n    }","commit_id":"ada1c1f2136bc7ab7494a534ff5941a788e6cd55","url":"https://github.com/gradle/gradle"},{"original_method":"public DefaultTestSelectionSpec(String className, String methodName) {\n        assert className != null : \"class name for included test cannot be null\";\n        assert methodName != null : \"method name for included test cannot be null\";\n        this.className = className;\n        this.methodName = methodName;\n    }","id":39590,"modified_method":"public DefaultTestSelectionSpec(String classPattern, String methodPattern) {\n        assert classPattern != null : \"class pattern for included test cannot be null\";\n        assert methodPattern != null : \"method pattern for included test cannot be null\";\n        this.classPattern = classPattern;\n        this.methodPattern = methodPattern;\n    }","commit_id":"ada1c1f2136bc7ab7494a534ff5941a788e6cd55","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (!(o instanceof DefaultTestSelectionSpec)) {\n            return false;\n        }\n\n        DefaultTestSelectionSpec that = (DefaultTestSelectionSpec) o;\n\n        if (!className.equals(that.className)) {\n            return false;\n        }\n        if (!methodName.equals(that.methodName)) {\n            return false;\n        }\n\n        return true;\n    }","id":39591,"modified_method":"@Override\n    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (!(o instanceof DefaultTestSelectionSpec)) {\n            return false;\n        }\n\n        DefaultTestSelectionSpec that = (DefaultTestSelectionSpec) o;\n\n        if (!classPattern.equals(that.classPattern)) {\n            return false;\n        }\n        if (!methodPattern.equals(that.methodPattern)) {\n            return false;\n        }\n\n        return true;\n    }","commit_id":"ada1c1f2136bc7ab7494a534ff5941a788e6cd55","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public int hashCode() {\n        int result = className.hashCode();\n        result = 31 * result + methodName.hashCode();\n        return result;\n    }","id":39592,"modified_method":"@Override\n    public int hashCode() {\n        int result = classPattern.hashCode();\n        result = 31 * result + methodPattern.hashCode();\n        return result;\n    }","commit_id":"ada1c1f2136bc7ab7494a534ff5941a788e6cd55","url":"https://github.com/gradle/gradle"},{"original_method":"public String toString() {\n        return className + \".\" + methodName;\n    }","id":39593,"modified_method":"public String toString() {\n        return \"class: '\" + classPattern + \"', method: '\" + methodPattern + \"'\";\n    }","commit_id":"ada1c1f2136bc7ab7494a534ff5941a788e6cd55","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n        public boolean shouldRun(Description description) {\n            for (DefaultTestSelectionSpec t : includedTests) {\n                if (description.getMethodName().equals(t.getMethodName())\n                    && description.getClassName().equals(t.getClassName())) {\n                    return true;\n                }\n            }\n            return false;\n        }","id":39594,"modified_method":"@Override\n        public boolean shouldRun(Description description) {\n            for (DefaultTestSelectionSpec t : includedTests) {\n                if (t.matchesTest(description.getClassName(), description.getMethodName())) {\n                    return true;\n                }\n            }\n            return false;\n        }","commit_id":"ada1c1f2136bc7ab7494a534ff5941a788e6cd55","url":"https://github.com/gradle/gradle"},{"original_method":"public String describe() {\n            return \"Includes matching method names\";\n        }","id":39595,"modified_method":"public String describe() {\n            return \"Includes matching test methods\";\n        }","commit_id":"ada1c1f2136bc7ab7494a534ff5941a788e6cd55","url":"https://github.com/gradle/gradle"},{"original_method":"private static void configureXmlTestSuite(TestNG testNg, List<Class<?>> testClasses, List<DefaultTestSelectionSpec> includedTests) {\n        XmlSuite suite = new XmlSuite();\n        XmlTest xmlTest = new XmlTest(suite);\n        xmlTest.setName(\"Gradle test\");\n        for (Class klass : testClasses) {\n            XmlClass xmlClass = null;\n            for (DefaultTestSelectionSpec includedTest : includedTests) {\n                if (includedTest.matchesClass(klass.getName())) {\n                    if (xmlClass == null) {\n                        xmlClass = new XmlClass(klass, true);\n                        xmlTest.getXmlClasses().add(xmlClass);\n                    }\n                    XmlInclude method = new XmlInclude(includedTest.getMethodName());\n                    xmlClass.getIncludedMethods().add(method);\n                    //need to configure exclude for all other methods (pattern)\n                    xmlClass.getExcludedMethods().add(\".*\");\n                }\n            }\n        }\n        testNg.setCommandLineSuite(suite);\n    }","id":39596,"modified_method":"private static void configureXmlTestSuite(TestNG testNg, List<Class<?>> testClasses, List<DefaultTestSelectionSpec> includedTests) {\n        XmlSuite suite = new XmlSuite();\n        XmlTest xmlTest = new XmlTest(suite);\n        xmlTest.setName(\"Gradle test\");\n        for (Class klass : testClasses) {\n            XmlClass xmlClass = null;\n            for (DefaultTestSelectionSpec includedTest : includedTests) {\n                if (includedTest.matchesClass(klass.getName())) {\n                    if (xmlClass == null) {\n                        xmlClass = new XmlClass(klass, true);\n                        xmlTest.getXmlClasses().add(xmlClass);\n                    }\n                    XmlInclude method = new XmlInclude(includedTest.getMethodPattern());\n                    xmlClass.getIncludedMethods().add(method);\n                    //need to configure exclude for all other methods (pattern)\n                    xmlClass.getExcludedMethods().add(\".*\");\n                }\n            }\n        }\n        testNg.setCommandLineSuite(suite);\n    }","commit_id":"ada1c1f2136bc7ab7494a534ff5941a788e6cd55","url":"https://github.com/gradle/gradle"},{"original_method":"@Nullable\n    public final Result match(XmlTag element) {\n        if (XsltSupport.isIncludeOrImport(element)) {\n            final XmlAttribute href = element.getAttribute(\"href\", null);\n            if (href != null) {\n                final PsiFile psiFile = element.getContainingFile();\n                assert psiFile != null;\n                PsiFile f = psiFile.getOriginalFile();\n                if (f == psiFile || f.getVirtualFile() == null) f = myDocument.getContainingFile();\n\n                final PsiFile file = ResolveUtil.resolveFile(href, f);\n                if (file instanceof XmlFile) {\n\n                  final List<PsiElement> data = myDocument.getContainingFile().getUserData(ResolveUtil.DEPENDENCIES);\n                  if (data == null) {\n                    myDocument.getContainingFile().putUserData(ResolveUtil.DEPENDENCIES, new SmartList<PsiElement>(file));\n                  } else if (!data.contains(file)) {\n                    data.add(file);\n                  }\n\n                  return Result.create(changeDocument(((XmlFile)file).getDocument()));\n                }\n            }\n        } else {\n            return matchImpl(element);\n        }\n        return null;\n    }","id":39597,"modified_method":"@Nullable\n    public final Result match(XmlTag element) {\n        if (XsltSupport.isIncludeOrImport(element)) {\n            final XmlAttribute href = element.getAttribute(\"href\", null);\n            if (href != null) {\n                final PsiFile psiFile = element.getContainingFile();\n                assert psiFile != null;\n                PsiFile f = psiFile.getOriginalFile();\n                if (f == psiFile || f.getVirtualFile() == null) f = myDocument.getContainingFile();\n\n                final PsiFile file = ResolveUtil.resolveFile(href, f);\n                if (file instanceof XmlFile) {\n                  return Result.create(changeDocument(((XmlFile)file).getDocument()));\n                }\n            }\n        } else {\n            return matchImpl(element);\n        }\n        return null;\n    }","commit_id":"aef5aef05f28852f00e18c42e32126ce729392a8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public CachedValueProvider.Result<Map<Pair<QName, Integer>, Function>> compute(XmlFile param) {\n      final XmlTag rootTag = param.getRootTag();\n      assert rootTag != null;\n\n      final Map<Pair<QName, Integer>, Function> candidates = new HashMap<Pair<QName, Integer>, Function>();\n      final XsltFunction[] functions = XsltElementFactory.getInstance().wrapElement(rootTag, XsltStylesheet.class).getFunctions();\n      for (XsltFunction function : functions) {\n        candidates.put(Pair.create(function.getQName(), function.getParameters().length), function);\n      }\n\n      List<PsiElement> data = param.getUserData(ResolveUtil.DEPENDENCIES);\n      if (data == null) {\n        data = new SmartList<PsiElement>(param);\n      } else {\n        data.add(param);\n        param.putUserData(ResolveUtil.DEPENDENCIES, null);\n      }\n      return CachedValueProvider.Result.create(candidates, ArrayUtil.toObjectArray(data));\n    }","id":39598,"modified_method":"@Override\n    public CachedValueProvider.Result<Map<Pair<QName, Integer>, Function>> compute(XmlFile param) {\n      final XmlTag rootTag = param.getRootTag();\n      assert rootTag != null;\n\n      final Map<Pair<QName, Integer>, Function> candidates = new HashMap<Pair<QName, Integer>, Function>();\n      final XsltFunction[] functions = XsltElementFactory.getInstance().wrapElement(rootTag, XsltStylesheet.class).getFunctions();\n      for (XsltFunction function : functions) {\n        candidates.put(Pair.create(function.getQName(), function.getParameters().length), function);\n      }\n\n      final Collection<XmlFile> data = ResolveUtil.getDependencies(param);\n      final Object[] dependencies;\n      if (data == null || data.size() == 0) {\n        dependencies = new Object[]{ param };\n      } else {\n        data.add(param);\n        dependencies = ArrayUtil.toObjectArray(data);\n      }\n      return CachedValueProvider.Result.create(candidates, dependencies);\n    }","commit_id":"aef5aef05f28852f00e18c42e32126ce729392a8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean processBackwardDependencies(@NotNull XmlFile file, Processor<XmlFile> processor) {\n      final VirtualFile virtualFile = file.getVirtualFile();\n      if (virtualFile == null) {\n        return true;\n      }\n      final Project project = file.getProject();\n      final PsiManager psiManager = PsiManager.getInstance(project);\n\n      final VirtualFile[] files = FileIncludeManager.getManager(project).getIncludingFiles(virtualFile, true);\n      final PsiFile[] psiFiles = ContainerUtil.map2Array(files, PsiFile.class, new NullableFunction<VirtualFile, PsiFile>() {\n        public PsiFile fun(VirtualFile file) {\n          return psiManager.findFile(file);\n        }\n      });\n      for (final PsiFile psiFile : psiFiles) {\n        if (XsltSupport.isXsltFile(psiFile)) {\n          if (!processor.process((XmlFile)psiFile)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }","id":39599,"modified_method":"public static boolean processBackwardDependencies(@NotNull XmlFile file, Processor<XmlFile> processor) {\n    final VirtualFile virtualFile = file.getVirtualFile();\n    if (virtualFile == null) {\n      return true;\n    }\n    final Project project = file.getProject();\n\n    final VirtualFile[] files = FileIncludeManager.getManager(project).getIncludingFiles(virtualFile, true);\n    return _process(files, project, processor);\n  }","commit_id":"aef5aef05f28852f00e18c42e32126ce729392a8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ChangesBrowserChangeListNode(Project project, ChangeList userObject, final ChangeListRemoteState changeListRemoteState) {\n    super(userObject);\n    myChangeListRemoteState = changeListRemoteState;\n    myClManager = (ChangeListManagerEx) ChangeListManager.getInstance(project);\n\n    //noinspection unchecked\n    myDecorators = project.getPicoContainer().getComponentInstancesOfType(ChangeListDecorator.class);\n  }","id":39600,"modified_method":"public ChangesBrowserChangeListNode(Project project, ChangeList userObject, final ChangeListRemoteState changeListRemoteState) {\n    super(userObject);\n    myChangeListRemoteState = changeListRemoteState;\n    myClManager = (ChangeListManagerEx) ChangeListManager.getInstance(project);\n    myDecorators = ComponentsPackage.getComponents(project, ChangeListDecorator.class);\n  }","commit_id":"5e82ffc92a6bcbfdd892058a2157125c8853af6d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  @NotNull\n  public <T> T[] getComponents(@NotNull Class<T> baseClass) {\n    List list = getPicoContainer().getComponentInstancesOfType(baseClass);\n    //noinspection unchecked\n    return (T[])ArrayUtil.toObjectArray(list, baseClass);\n  }","id":39601,"modified_method":"@Override\n  @NotNull\n  public <T> T[] getComponents(@NotNull Class<T> baseClass) {\n    return ArrayUtil.toObjectArray(getComponentInstancesOfType(baseClass), baseClass);\n  }","commit_id":"5e82ffc92a6bcbfdd892058a2157125c8853af6d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  protected final <T> List<T> getComponentInstancesOfType(@NotNull Class<T> baseClass) {\n    //noinspection unchecked\n    return getPicoContainer().getComponentInstancesOfType(baseClass);\n  }","id":39602,"modified_method":"@NotNull\n  @Override\n  public final <T> List<T> getComponentInstancesOfType(@NotNull Class<T> baseClass) {\n    List<T> result = null;\n    // we must use instances only from our adapter (could be service or extension point or something else)\n    for (ComponentAdapter componentAdapter : ((DefaultPicoContainer)getPicoContainer()).getComponentAdapters()) {\n      if (componentAdapter instanceof ComponentConfigComponentAdapter && ReflectionUtil.isAssignable(baseClass, componentAdapter.getComponentImplementation())) {\n        //noinspection unchecked\n        T instance = (T)((ComponentConfigComponentAdapter)componentAdapter).myInitializedComponentInstance;\n        if (instance != null) {\n          if (result == null) {\n            result = new ArrayList<T>();\n          }\n          result.add(instance);\n        }\n      }\n    }\n    return ContainerUtil.notNullize(result);\n  }","commit_id":"5e82ffc92a6bcbfdd892058a2157125c8853af6d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public Object getComponentInstance(PicoContainer picoContainer) throws PicoInitializationException, PicoIntrospectionException, ProcessCanceledException {\n      Object componentInstance = null;\n      try {\n        long startTime = System.nanoTime();\n\n        componentInstance = super.getComponentInstance(picoContainer);\n\n        if (!myInitialized) {\n          if (myInitializing) {\n            String errorMessage = \"Cyclic component initialization: \" + getComponentKey();\n            if (myConfig.pluginDescriptor != null) {\n              LOG.error(new PluginException(errorMessage, myConfig.pluginDescriptor.getPluginId()));\n            }\n            else {\n              LOG.error(new Throwable(errorMessage));\n            }\n          }\n\n          try {\n            myInitializing = true;\n            myComponentsRegistry.registerComponentInstance(componentInstance);\n\n            ProgressIndicator indicator = getProgressIndicator();\n            if (indicator != null) {\n              indicator.checkCanceled();\n              setProgressDuringInit(indicator);\n            }\n            initializeComponent(componentInstance, false);\n            if (componentInstance instanceof BaseComponent) {\n              ((BaseComponent)componentInstance).initComponent();\n            }\n\n            long ms = (System.nanoTime() - startTime) / 1000000;\n            if (ms > 10 && logSlowComponents()) {\n              LOG.info(componentInstance.getClass().getName() + \" initialized in \" + ms + \" ms\");\n            }\n          }\n          finally {\n            myInitializing = false;\n          }\n\n          myInitialized = true;\n        }\n      }\n      catch (ProcessCanceledException e) {\n        throw e;\n      }\n      catch (StateStorageException e) {\n        throw e;\n      }\n      catch (Throwable t) {\n        handleInitComponentError(t, ((String)getComponentKey()), myConfig);\n      }\n\n      return componentInstance;\n    }","id":39603,"modified_method":"@Override\n    public Object getComponentInstance(PicoContainer picoContainer) throws PicoInitializationException, PicoIntrospectionException, ProcessCanceledException {\n      Object instance = myInitializedComponentInstance;\n      if (instance != null) {\n        return instance;\n      }\n\n      try {\n        long startTime = System.nanoTime();\n\n        instance = super.getComponentInstance(picoContainer);\n\n        if (myInitializing) {\n          String errorMessage = \"Cyclic component initialization: \" + getComponentKey();\n          if (myConfig.pluginDescriptor != null) {\n            LOG.error(new PluginException(errorMessage, myConfig.pluginDescriptor.getPluginId()));\n          }\n          else {\n            LOG.error(new Throwable(errorMessage));\n          }\n        }\n\n        try {\n          myInitializing = true;\n          myComponentsRegistry.registerComponentInstance(instance);\n\n          ProgressIndicator indicator = getProgressIndicator();\n          if (indicator != null) {\n            indicator.checkCanceled();\n            setProgressDuringInit(indicator);\n          }\n          initializeComponent(instance, false);\n          if (instance instanceof BaseComponent) {\n            ((BaseComponent)instance).initComponent();\n          }\n\n          long ms = (System.nanoTime() - startTime) / 1000000;\n          if (ms > 10 && logSlowComponents()) {\n            LOG.info(instance.getClass().getName() + \" initialized in \" + ms + \" ms\");\n          }\n        }\n        finally {\n          myInitializing = false;\n        }\n        myInitializedComponentInstance = instance;\n      }\n      catch (ProcessCanceledException e) {\n        throw e;\n      }\n      catch (StateStorageException e) {\n        throw e;\n      }\n      catch (Throwable t) {\n        handleInitComponentError(t, ((String)getComponentKey()), myConfig);\n      }\n\n      return instance;\n    }","commit_id":"5e82ffc92a6bcbfdd892058a2157125c8853af6d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private synchronized void ensureInitialized() {\n    if (!myInspectionComponentsLoaded) {\n      myInspectionComponentsLoaded = true;\n      Set<InspectionToolProvider> providers = new THashSet<InspectionToolProvider>();\n      //noinspection unchecked\n      providers.addAll((Collection<? extends InspectionToolProvider>)ApplicationManager.getApplication().getPicoContainer().getComponentInstancesOfType(InspectionToolProvider.class));\n      ContainerUtil.addAll(providers, Extensions.getExtensions(InspectionToolProvider.EXTENSION_POINT_NAME));\n      List<Factory<InspectionToolWrapper>> factories = new ArrayList<Factory<InspectionToolWrapper>>();\n      registerTools(providers, factories);\n      for (final LocalInspectionEP ep : Extensions.getExtensions(LocalInspectionEP.LOCAL_INSPECTION)) {\n        factories.add(new Factory<InspectionToolWrapper>() {\n          @Override\n          public InspectionToolWrapper create() {\n            return new LocalInspectionToolWrapper(ep);\n          }\n        });\n      }\n      for (final InspectionEP ep : Extensions.getExtensions(InspectionEP.GLOBAL_INSPECTION)) {\n        factories.add(new Factory<InspectionToolWrapper>() {\n          @Override\n          public InspectionToolWrapper create() {\n            return new GlobalInspectionToolWrapper(ep);\n          }\n        });\n      }\n      for (InspectionToolsFactory factory : Extensions.getExtensions(InspectionToolsFactory.EXTENSION_POINT_NAME)) {\n        for (final InspectionProfileEntry profileEntry : factory.createTools()) {\n          factories.add(new Factory<InspectionToolWrapper>() {\n            @Override\n            public InspectionToolWrapper create() {\n              return wrapTool(profileEntry);\n            }\n          });\n        }\n      }\n      myInspectionToolFactories.addAll(factories);\n    }\n  }","id":39604,"modified_method":"private synchronized void ensureInitialized() {\n    if (!myInspectionComponentsLoaded) {\n      myInspectionComponentsLoaded = true;\n      Set<InspectionToolProvider> providers = new THashSet<InspectionToolProvider>();\n      //noinspection unchecked\n      providers.addAll((((ComponentManagerEx)ApplicationManager.getApplication()).getComponentInstancesOfType(InspectionToolProvider.class)));\n      ContainerUtil.addAll(providers, Extensions.getExtensions(InspectionToolProvider.EXTENSION_POINT_NAME));\n      List<Factory<InspectionToolWrapper>> factories = new ArrayList<Factory<InspectionToolWrapper>>();\n      registerTools(providers, factories);\n      for (final LocalInspectionEP ep : Extensions.getExtensions(LocalInspectionEP.LOCAL_INSPECTION)) {\n        factories.add(new Factory<InspectionToolWrapper>() {\n          @Override\n          public InspectionToolWrapper create() {\n            return new LocalInspectionToolWrapper(ep);\n          }\n        });\n      }\n      for (final InspectionEP ep : Extensions.getExtensions(InspectionEP.GLOBAL_INSPECTION)) {\n        factories.add(new Factory<InspectionToolWrapper>() {\n          @Override\n          public InspectionToolWrapper create() {\n            return new GlobalInspectionToolWrapper(ep);\n          }\n        });\n      }\n      for (InspectionToolsFactory factory : Extensions.getExtensions(InspectionToolsFactory.EXTENSION_POINT_NAME)) {\n        for (final InspectionProfileEntry profileEntry : factory.createTools()) {\n          factories.add(new Factory<InspectionToolWrapper>() {\n            @Override\n            public InspectionToolWrapper create() {\n              return wrapTool(profileEntry);\n            }\n          });\n        }\n      }\n      myInspectionToolFactories.addAll(factories);\n    }\n  }","commit_id":"5e82ffc92a6bcbfdd892058a2157125c8853af6d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void projectOpened() {\n    //noinspection unchecked\n    for (ProjectComponent component : ((List<ProjectComponent>)getPicoContainer().getComponentInstancesOfType(ProjectComponent.class))) {\n      try {\n        component.projectOpened();\n      }\n      catch (Throwable e) {\n        LOG.error(component.toString(), e);\n      }\n    }\n  }","id":39605,"modified_method":"public void projectOpened() {\n    final ProjectComponent[] components = getComponents(ProjectComponent.class);\n    for (ProjectComponent component : components) {\n      try {\n        component.projectOpened();\n      }\n      catch (Throwable e) {\n        LOG.error(component.toString(), e);\n      }\n    }\n  }","commit_id":"5e82ffc92a6bcbfdd892058a2157125c8853af6d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String[] getNames(boolean checkBoxState) {\n    Set<String> names = new HashSet<String>();\n    for (ChooseByNameContributor contributor : myContributors) {\n      try {\n        ContainerUtil.addAll(names, contributor.getNames(myProject, checkBoxState));\n      }\n      catch(ProcessCanceledException ex) {\n        // index corruption detected, ignore\n      }\n      catch(IndexNotReadyException ex) {\n        // index corruption detected, ignore\n      }\n      catch(Exception ex) {\n        LOG.error(ex);\n      }\n    }\n\n    return ArrayUtil.toStringArray(names);\n  }","id":39606,"modified_method":"public String[] getNames(final boolean checkBoxState) {\n    final Set<String> names = new ConcurrentHashSet<String>();\n\n    JobUtil.invokeConcurrentlyUnderMyProgress(filterDumb(myContributors), new Processor<ChooseByNameContributor>() {\n      @Override\n      public boolean process(ChooseByNameContributor contributor) {\n        try {\n          ContainerUtil.addAll(names, contributor.getNames(myProject, checkBoxState));\n        }\n        catch(ProcessCanceledException ex) {\n          // index corruption detected, ignore\n        }\n        catch(IndexNotReadyException ex) {\n          // index corruption detected, ignore\n        }\n        catch(Exception ex) {\n          LOG.error(ex);\n        }\n        return true;\n      }\n    }, false);\n\n    return ArrayUtil.toStringArray(names);\n  }","commit_id":"f5ea08c29aa551be0465636cb5ab7f7f71c3a5f0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Get elements by name from contributors.\n   *\n   * @param name a name\n   * @param checkBoxState if true, non-project files are considered as well\n   * @param pattern a pattern to use\n   * @return a list of navigation items from contributors for\n   *  which {@link #acceptItem(NavigationItem) returns true.\n   *\n   */\n  public Object[] getElementsByName(String name, boolean checkBoxState, final String pattern) {\n    List<NavigationItem> items = null;\n    final boolean dumb = DumbService.getInstance(myProject).isDumb();\n\n    for (ChooseByNameContributor contributor : myContributors) {\n      try {\n        if (dumb && !DumbService.isDumbAware(contributor)) {\n          continue;\n        }\n\n        for (NavigationItem item : contributor.getItemsByName(name, pattern, myProject, checkBoxState)) {\n          if (acceptItem(item)) {\n            if (items == null) {\n              items = new ArrayList<NavigationItem>(2);\n            }\n            items.add(item);\n          }\n        }\n      }\n      catch(ProcessCanceledException ex) {\n        // index corruption detected, ignore\n      }\n      catch(Exception ex) {\n        LOG.error(ex);\n      }\n    }\n    return items == null ? ArrayUtil.EMPTY_OBJECT_ARRAY : ArrayUtil.toObjectArray(items);\n  }","id":39607,"modified_method":"/**\n   * Get elements by name from contributors.\n   *\n   * @param name a name\n   * @param checkBoxState if true, non-project files are considered as well\n   * @param pattern a pattern to use\n   * @return a list of navigation items from contributors for\n   *  which {@link #acceptItem(NavigationItem) returns true.\n   *\n   */\n  public Object[] getElementsByName(final String name, final boolean checkBoxState, final String pattern) {\n    final List<NavigationItem> items = Collections.synchronizedList(new ArrayList<NavigationItem>());\n\n    JobUtil.invokeConcurrentlyUnderMyProgress(filterDumb(myContributors), new Processor<ChooseByNameContributor>() {\n      @Override\n      public boolean process(ChooseByNameContributor contributor) {\n        try {\n          for (NavigationItem item : contributor.getItemsByName(name, pattern, myProject, checkBoxState)) {\n            if (acceptItem(item)) {\n              items.add(item);\n            }\n          }\n        }\n        catch (ProcessCanceledException ex) {\n          // index corruption detected, ignore\n        }\n        catch (Exception ex) {\n          LOG.error(ex);\n        }\n        return true;\n      }\n    }, false);\n    \n    return ArrayUtil.toObjectArray(items);\n  }","commit_id":"f5ea08c29aa551be0465636cb5ab7f7f71c3a5f0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n\t * Save to existing name, if content is dirty. Update version.\n\t * Saves according to flow controller in force, or creates one according to\n\t * the value of raw specified.\n\t * @throws IOException \n\t */\n\tpublic void save(Timestamp version) throws IOException {\n\t\tif (null == _baseName) {\n\t\t\tthrow new IllegalStateException(\"Cannot save an object without giving it a name!\");\n\t\t}\n\t\tsaveInternal(version, false);\n\t}","id":39608,"modified_method":"/**\n\t * Save to existing name, if content is dirty. Update version.\n\t * Saves according to flow controller in force, or creates one according to\n\t * the value of raw specified.\n\t * @throws IOException \n\t */\n\tpublic boolean save(Timestamp version) throws IOException {\n\t\tif (null == _baseName) {\n\t\t\tthrow new IllegalStateException(\"Cannot save an object without giving it a name!\");\n\t\t}\n\t\treturn saveInternal(version, false);\n\t}","commit_id":"2f2cce64c5a2e94b1d8d4ed8acdf7f493af6b608","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Save this object as GONE. Intended to mark the latest version, rather\n\t * than a specific version as GONE. So for now, require that name handed in\n\t * is *not* already versioned; throw an IOException if it is.\n\t * @param name\n\t * @throws IOException\n\t */\n\tpublic void saveAsGone() throws IOException {\t\t\n\t\tif (null == _baseName) {\n\t\t\tthrow new IllegalStateException(\"Cannot save an object without giving it a name!\");\n\t\t}\n\t\t_data = null;\n\t\t_available = true;\n\t\tsaveInternal(null, true);\n\t}","id":39609,"modified_method":"/**\n\t * Save this object as GONE. Intended to mark the latest version, rather\n\t * than a specific version as GONE. So for now, require that name handed in\n\t * is *not* already versioned; throw an IOException if it is.\n\t * @param name\n\t * @throws IOException\n\t */\n\tpublic boolean saveAsGone() throws IOException {\t\t\n\t\tif (null == _baseName) {\n\t\t\tthrow new IllegalStateException(\"Cannot save an object without giving it a name!\");\n\t\t}\n\t\t_data = null;\n\t\t_available = true;\n\t\treturn saveInternal(null, true);\n\t}","commit_id":"2f2cce64c5a2e94b1d8d4ed8acdf7f493af6b608","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public void saveToRepository(Timestamp version, E data) throws IOException {\n\t\tsetData(data);\n\t\tsaveToRepository(version);\n\t}","id":39610,"modified_method":"public boolean saveToRepository(Timestamp version, E data) throws IOException {\n\t\tsetData(data);\n\t\treturn saveToRepository(version);\n\t}","commit_id":"2f2cce64c5a2e94b1d8d4ed8acdf7f493af6b608","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public void save(Timestamp version, E data) throws IOException {\n\t\tsetData(data);\n\t\tsave(version);\n\t}","id":39611,"modified_method":"public boolean save(Timestamp version, E data) throws IOException {\n\t\tsetData(data);\n\t\treturn save(version);\n\t}","commit_id":"2f2cce64c5a2e94b1d8d4ed8acdf7f493af6b608","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * If raw=true or DEFAULT_RAW=true specified, this must be the first call to save made\n\t * for this object.\n\t */\n\tpublic void saveToRepositoryAsGone() throws XMLStreamException, IOException {\n\t\tif ((null != _flowControl) && !(_flowControl instanceof RepositoryFlowControl)) {\n\t\t\tthrow new IOException(\"Cannot call saveToRepository on raw object!\");\n\t\t}\n\t\t_raw = false; // control what flow controller will be made\n\t\tsaveAsGone();\n\t}","id":39612,"modified_method":"/**\n\t * If raw=true or DEFAULT_RAW=true specified, this must be the first call to save made\n\t * for this object.\n\t */\n\tpublic boolean saveToRepositoryAsGone() throws XMLStreamException, IOException {\n\t\tif ((null != _flowControl) && !(_flowControl instanceof RepositoryFlowControl)) {\n\t\t\tthrow new IOException(\"Cannot call saveToRepository on raw object!\");\n\t\t}\n\t\t_raw = false; // control what flow controller will be made\n\t\treturn saveAsGone();\n\t}","commit_id":"2f2cce64c5a2e94b1d8d4ed8acdf7f493af6b608","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public void saveToRepository() throws IOException {\t\t\n\t\tsaveToRepository((Timestamp)null);\n\t}","id":39613,"modified_method":"public boolean saveToRepository() throws IOException {\t\t\n\t\treturn saveToRepository((Timestamp)null);\n\t}","commit_id":"2f2cce64c5a2e94b1d8d4ed8acdf7f493af6b608","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public void save(E data) throws XMLStreamException, IOException {\n\t\tsetData(data);\n\t\tsave();\n\t}","id":39614,"modified_method":"public boolean save(E data) throws XMLStreamException, IOException {\n\t\tsetData(data);\n\t\treturn save();\n\t}","commit_id":"2f2cce64c5a2e94b1d8d4ed8acdf7f493af6b608","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public void saveToRepository(E data) throws IOException {\n\t\tsetData(data);\n\t\tsaveToRepository();\n\t}","id":39615,"modified_method":"public boolean saveToRepository(E data) throws IOException {\n\t\tsetData(data);\n\t\treturn saveToRepository();\n\t}","commit_id":"2f2cce64c5a2e94b1d8d4ed8acdf7f493af6b608","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Save to existing name, if content is dirty. Update version.\n\t * Saves according to flow controller in force, or creates one according to\n\t * the value of raw specified.\n\t * @throws IOException \n\t */\n\tpublic void save() throws IOException {\n\t\tif (null == _baseName) {\n\t\t\tthrow new IllegalStateException(\"Cannot save an object without giving it a name!\");\n\t\t}\n\t\tsaveInternal(null, false);\n\t}","id":39616,"modified_method":"/**\n\t * Save to existing name, if content is dirty. Update version.\n\t * Saves according to flow controller in force, or creates one according to\n\t * the value of raw specified.\n\t * @throws IOException \n\t */\n\tpublic boolean save() throws IOException {\n\t\tif (null == _baseName) {\n\t\t\tthrow new IllegalStateException(\"Cannot save an object without giving it a name!\");\n\t\t}\n\t\treturn saveInternal(null, false);\n\t}","commit_id":"2f2cce64c5a2e94b1d8d4ed8acdf7f493af6b608","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * For repeatability, Timestamp should be quantized using methods in DataUtils class.\n\t * If raw=true or DEFAULT_RAW=true specified, this must be the first call to save made\n\t * for this object.\n\t */\n\tpublic void saveToRepository(Timestamp version) throws IOException {\n\t\tif (null == _baseName) {\n\t\t\tthrow new IllegalStateException(\"Cannot save an object without giving it a name!\");\n\t\t}\n\t\tif ((null != _flowControl) && !(_flowControl instanceof RepositoryFlowControl)) {\n\t\t\tthrow new IOException(\"Cannot call saveToRepository on raw object!\");\n\t\t}\n\t\t_raw = false; // control what flow controller will be made\n\t\tsave(version);\n\t}","id":39617,"modified_method":"/**\n\t * For repeatability, Timestamp should be quantized using methods in DataUtils class.\n\t * If raw=true or DEFAULT_RAW=true specified, this must be the first call to save made\n\t * for this object.\n\t */\n\tpublic boolean saveToRepository(Timestamp version) throws IOException {\n\t\tif (null == _baseName) {\n\t\t\tthrow new IllegalStateException(\"Cannot save an object without giving it a name!\");\n\t\t}\n\t\tif ((null != _flowControl) && !(_flowControl instanceof RepositoryFlowControl)) {\n\t\t\tthrow new IOException(\"Cannot call saveToRepository on raw object!\");\n\t\t}\n\t\t_raw = false; // control what flow controller will be made\n\t\treturn save(version);\n\t}","commit_id":"2f2cce64c5a2e94b1d8d4ed8acdf7f493af6b608","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Save content to specific version. If version is non-null, assume that is the desired\n\t * version. If not, set version based on current time.\n\t * @param name\n\t * @throws IOException \n\t */\n\tpublic void saveInternal(Timestamp version, boolean gone) throws IOException {\n\t\t// move object to this name\n\t\t// need to make sure we get back the actual name we're using,\n\t\t// even if output stream does automatic versioning\n\t\t// probably need to refactor save behavior -- right now, internalWriteObject\n\t\t// either writes the object or not; we need to only make a new name if we do\n\t\t// write the object, and figure out if that's happened. Also need to make\n\t\t// parent behavior just write, put the dirty check higher in the state.\n\n\t\tif (_data != null && !isDirty()) { // Should we check potentially dirty?\n\t\t\tLibrary.logger().info(\"Object not dirty. Not saving.\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (!gone && (null == _data)) {\n\t\t\t// skip some of the prep steps that have side effects rather than getting this exception later from superclass\n\t\t\tthrow new InvalidObjectException(\"No data to save!\");\n\t\t}\n\t\t\n\t\tif (null == _baseName) {\n\t\t\tthrow new IllegalStateException(\"Cannot save an object without giving it a name!\");\n\t\t}\n\t\t\n\t\t// Create the flow controller, if we haven't already.\n\t\tcreateFlowController();\n\t\t\n\t\t// Handle versioning ourselves to make name handling easier. VOS should respect it.\n\t\tContentName name = _baseName;\n\t\tif (null != version) {\n\t\t\tname = VersioningProfile.addVersion(_baseName, version);\n\t\t} else {\n\t\t\tname = VersioningProfile.addVersion(_baseName);\n\t\t}\n\t\t// DKS if we add the versioned name, we don't handle get latest version.\n\t\t// We re-add the baseName here in case an update has changed it.\n\t\t// TODO -- perhaps disallow updates for unrelated names.\n\t\t_flowControl.addNameSpace(_baseName);\n\t\t\n\t\tif (_data != null) {\n\t\t\t// CCNVersionedOutputStream will version an unversioned name. \n\t\t\t// If it gets a versioned name, will respect it. \n\t\t\tCCNVersionedOutputStream cos = new CCNVersionedOutputStream(name, _keyLocator, _publisher, contentType(), _flowControl);\n\t\t\tsave(cos); // superclass stream save. calls flush but not close on a wrapping\n\t\t\t// digest stream; want to make sure we end up with a single non-MHT signed\n\t\t\t// block and no header on small objects\n\t\t\tcos.close();\n\t\t\t_currentPublisher = (_publisher == null) ? _flowControl.getLibrary().getDefaultPublisher() : _publisher; // TODO DKS -- is this always correct?\n\t\t\t_currentPublisherKeyLocator = (_keyLocator == null) ? \n\t\t\t\t\t\t\t_flowControl.getLibrary().keyManager().getKeyLocator(_publisher) : _keyLocator;\n\t\t} else {\n\t\t\t// saving object as gone, currently this is always one empty block so we don't use an OutputStream\n\t\t\tContentName segmentedName = SegmentationProfile.segmentName(name, SegmentationProfile.BASE_SEGMENT );\n\t\t\tbyte [] empty = { };\n\t\t\tContentObject goneObject = \n\t\t\t\tContentObject.buildContentObject(segmentedName, ContentType.GONE, empty, _publisher, _keyLocator, null, null);\n\t\t\t_flowControl.put(goneObject);\n\t\t\t_currentPublisher = goneObject.signedInfo().getPublisherKeyID();\n\t\t\t_currentPublisherKeyLocator = goneObject.signedInfo().getKeyLocator();\n\t\t}\n\t\t_currentVersionComponent = name.lastComponent();\n\t\t_currentVersionName = null;\n\t\tsetPotentiallyDirty(false);\n\t}","id":39618,"modified_method":"/**\n\t * Save content to specific version. If version is non-null, assume that is the desired\n\t * version. If not, set version based on current time.\n\t * @param name\n\t * @param return Returns true if it saved data, false if it thought data was stale and didn't\n\t * \t\tsave. (DKS TODO: add force write flag if you need to update version. Also allow specification of freshness.)\n\t * @throws IOException \n\t */\n\tpublic boolean saveInternal(Timestamp version, boolean gone) throws IOException {\n\t\t// move object to this name\n\t\t// need to make sure we get back the actual name we're using,\n\t\t// even if output stream does automatic versioning\n\t\t// probably need to refactor save behavior -- right now, internalWriteObject\n\t\t// either writes the object or not; we need to only make a new name if we do\n\t\t// write the object, and figure out if that's happened. Also need to make\n\t\t// parent behavior just write, put the dirty check higher in the state.\n\n\t\tif (_data != null && !isDirty()) { // Should we check potentially dirty?\n\t\t\tLibrary.logger().info(\"Object not dirty. Not saving.\");\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (!gone && (null == _data)) {\n\t\t\t// skip some of the prep steps that have side effects rather than getting this exception later from superclass\n\t\t\tthrow new InvalidObjectException(\"No data to save!\");\n\t\t}\n\t\t\n\t\tif (null == _baseName) {\n\t\t\tthrow new IllegalStateException(\"Cannot save an object without giving it a name!\");\n\t\t}\n\t\t\n\t\t// Create the flow controller, if we haven't already.\n\t\tcreateFlowController();\n\t\t\n\t\t// Handle versioning ourselves to make name handling easier. VOS should respect it.\n\t\tContentName name = _baseName;\n\t\tif (null != version) {\n\t\t\tname = VersioningProfile.addVersion(_baseName, version);\n\t\t} else {\n\t\t\tname = VersioningProfile.addVersion(_baseName);\n\t\t}\n\t\t// DKS if we add the versioned name, we don't handle get latest version.\n\t\t// We re-add the baseName here in case an update has changed it.\n\t\t// TODO -- perhaps disallow updates for unrelated names.\n\t\t_flowControl.addNameSpace(_baseName);\n\t\t\n\t\tif (_data != null) {\n\t\t\t// CCNVersionedOutputStream will version an unversioned name. \n\t\t\t// If it gets a versioned name, will respect it. \n\t\t\tCCNVersionedOutputStream cos = new CCNVersionedOutputStream(name, _keyLocator, _publisher, contentType(), _flowControl);\n\t\t\tsave(cos); // superclass stream save. calls flush but not close on a wrapping\n\t\t\t// digest stream; want to make sure we end up with a single non-MHT signed\n\t\t\t// block and no header on small objects\n\t\t\tcos.close();\n\t\t\t_currentPublisher = (_publisher == null) ? _flowControl.getLibrary().getDefaultPublisher() : _publisher; // TODO DKS -- is this always correct?\n\t\t\t_currentPublisherKeyLocator = (_keyLocator == null) ? \n\t\t\t\t\t\t\t_flowControl.getLibrary().keyManager().getKeyLocator(_publisher) : _keyLocator;\n\t\t} else {\n\t\t\t// saving object as gone, currently this is always one empty block so we don't use an OutputStream\n\t\t\tContentName segmentedName = SegmentationProfile.segmentName(name, SegmentationProfile.BASE_SEGMENT );\n\t\t\tbyte [] empty = { };\n\t\t\tContentObject goneObject = \n\t\t\t\tContentObject.buildContentObject(segmentedName, ContentType.GONE, empty, _publisher, _keyLocator, null, null);\n\t\t\t_flowControl.put(goneObject);\n\t\t\t_currentPublisher = goneObject.signedInfo().getPublisherKeyID();\n\t\t\t_currentPublisherKeyLocator = goneObject.signedInfo().getKeyLocator();\n\t\t}\n\t\t_currentVersionComponent = name.lastComponent();\n\t\t_currentVersionName = null;\n\t\tsetPotentiallyDirty(false);\n\t\treturn true;\n\t}","commit_id":"2f2cce64c5a2e94b1d8d4ed8acdf7f493af6b608","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"@Override\n  public void actionPerformed(AnActionEvent e) {\n    final Project project = e.getData(CommonDataKeys.PROJECT);\n    if (project != null) {\n      FeatureUsageTracker.getInstance().triggerFeatureUsed(\"navigation.recent.files\");\n      final Switcher.SwitcherPanel switcher = Switcher.createAndShowSwitcher(project, IdeBundle.message(\"title.popup.recent.files\"), true);\n      if (FileEditorManagerEx.getInstanceEx(project).hasOpenedFile()) {\n        switcher.goForward();\n      }\n    }\n  }","id":39619,"modified_method":"@Override\n  public void actionPerformed(AnActionEvent e) {\n    final Project project = e.getData(CommonDataKeys.PROJECT);\n    if (project != null) {\n      FeatureUsageTracker.getInstance().triggerFeatureUsed(\"navigation.recent.files\");\n      Switcher.createAndShowSwitcher(project, IdeBundle.message(\"title.popup.recent.files\"), true);\n    }\n  }","commit_id":"317be6ec958d0fa73ec7ea75daa59a70f009fc2e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings({\"ManualArrayToCollectionCopy\", \"ConstantConditions\"})\n    SwitcherPanel(final Project project, String title, boolean pinned) {\n      setLayout(new SwitcherLayouter());\n      this.project = project;\n      MAX_FILES_IN_SWITCHER = pinned ? UISettings.getInstance().RECENT_FILES_LIMIT : 30;\n      myPinned = pinned;\n      mySpeedSearch =  pinned ? new SwitcherSpeedSearch() : null;\n\n      setFocusable(true);\n      addKeyListener(this);\n      setBorder(new EmptyBorder(0, 0, 0, 0));\n      setBackground(JBColor.background());\n      pathLabel.setHorizontalAlignment(SwingConstants.LEFT);\n\n      final Font font = pathLabel.getFont();\n      pathLabel.setFont(font.deriveFont(Math.max(10f, font.getSize() - 4f)));\n\n      descriptions = new JPanel(new BorderLayout()) {\n        @Override\n        protected void paintComponent(Graphics g) {\n          super.paintComponent(g);\n          g.setColor(UIUtil.isUnderDarcula() ? SEPARATOR_COLOR : BORDER_COLOR);\n          g.drawLine(0, 0, getWidth(), 0);\n        }\n      };\n\n      descriptions.setBorder(BorderFactory.createEmptyBorder(1, 4, 1, 4));\n      descriptions.add(pathLabel, BorderLayout.CENTER);\n      twManager = ToolWindowManager.getInstance(project);\n      DefaultListModel twModel = new DefaultListModel();\n      for (String id : twManager.getToolWindowIds()) {\n        final ToolWindow tw = twManager.getToolWindow(id);\n        if (tw.isAvailable()) {\n          ids.put(tw, id);\n        }\n      }\n\n      final ArrayList<ToolWindow> windows = new ArrayList<ToolWindow>(ids.keySet());\n      twShortcuts = createShortcuts(windows);\n      final Map<ToolWindow, String> map = ContainerUtil.reverseMap(twShortcuts);\n      Collections.sort(windows, new Comparator<ToolWindow>() {\n        @Override\n        public int compare(ToolWindow o1, ToolWindow o2) {\n          return map.get(o1).compareTo(map.get(o2));\n        }\n      });\n      for (ToolWindow window : windows) {\n        twModel.addElement(window);\n      }\n\n      toolWindows = new MyList(twModel);\n      if (pinned) {\n        new NameFilteringListModel<ToolWindow>(toolWindows, new Function<ToolWindow, String>() {\n          @Override\n          public String fun(ToolWindow window) {\n            return ids.get(window);\n          }\n        }, new Condition<String>() {\n          @Override\n          public boolean value(String s) {\n            return !mySpeedSearch.isPopupActive()\n                   || StringUtil.isEmpty(mySpeedSearch.getEnteredPrefix())\n                   || mySpeedSearch.getComparator().matchingFragments(mySpeedSearch.getEnteredPrefix(), s) != null;\n          }\n        }, mySpeedSearch);\n      }\n\n      toolWindows.setBorder(IdeBorderFactory.createEmptyBorder(5, 5, 5, 20));\n      toolWindows.setSelectionMode(pinned ? ListSelectionModel.MULTIPLE_INTERVAL_SELECTION : ListSelectionModel.SINGLE_SELECTION);\n      toolWindows.setCellRenderer(new SwitcherToolWindowsListRenderer(mySpeedSearch, ids, map, myPinned) {\n        @Override\n        public Component getListCellRendererComponent(JList list,\n                                                      Object value,\n                                                      int index,\n                                                      boolean selected,\n                                                      boolean hasFocus) {\n          final JComponent renderer = (JComponent)super.getListCellRendererComponent(list, value, index, selected, hasFocus);\n          if (selected) {\n            return renderer;\n          }\n          final Color bgColor = list == mouseMoveSrc && index == mouseMoveListIndex ? ON_MOUSE_OVER_BG_COLOR : list.getBackground();\n          UIUtil.changeBackGround(renderer, bgColor);\n          return renderer;\n        }\n      });\n      toolWindows.addKeyListener(this);\n      toolWindows.addMouseListener(this);\n      toolWindows.addMouseMotionListener(this);\n      myClickListener.installOn(toolWindows);\n      toolWindows.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n        public void valueChanged(ListSelectionEvent e) {\n          if (!toolWindows.isSelectionEmpty() && !files.isSelectionEmpty()) {\n            files.clearSelection();\n          }\n        }\n      });\n\n      separator = new JPanel() {\n        @Override\n        protected void paintComponent(Graphics g) {\n          super.paintComponent(g);\n          g.setColor(SEPARATOR_COLOR);\n          g.drawLine(0, 0, 0, getHeight());\n        }\n      };\n      separator.setBackground(toolWindows.getBackground());\n\n      int selectionIndex = -1;\n      final FileEditorManagerImpl editorManager = (FileEditorManagerImpl)FileEditorManager.getInstance(project);\n      final ArrayList<FileInfo> filesData = new ArrayList<FileInfo>();\n      final ArrayList<FileInfo> editors = new ArrayList<FileInfo>();\n      if (!pinned) {\n        for (Pair<VirtualFile, EditorWindow> pair : editorManager.getSelectionHistory()) {\n          editors.add(new FileInfo(pair.first, pair.second));\n        }\n      }\n      if (editors.size() < 2 || isPinnedMode()) {\n        if (isPinnedMode() && editors.size() > 1) {\n          filesData.addAll(editors);\n        }\n        final VirtualFile[] recentFiles = ArrayUtil.reverseArray(EditorHistoryManager.getInstance(project).getFiles());\n        final int maxFiles = Math.max(editors.size(), recentFiles.length);\n        final int len = isPinnedMode() ? recentFiles.length : Math.min(toolWindows.getModel().getSize(), maxFiles);\n        boolean firstRecentMarked = false;\n        for (int i = 0; i < len; i++) {\n          final FileInfo info = new FileInfo(recentFiles[i], null);\n          boolean add = true;\n          if (isPinnedMode()) {\n            for (FileInfo fileInfo : filesData) {\n              if (fileInfo.first.equals(info.first)) {\n                add = false;\n                break;\n              }\n            }\n          }\n          if (add) {\n            filesData.add(info);\n            if (!firstRecentMarked) {\n              firstRecentMarked = true;\n              selectionIndex = filesData.size() - 1;\n            }\n          }\n        }\n        if (editors.size() == 1) selectionIndex++;\n        if (editors.size() == 1 && (filesData.isEmpty() || !editors.get(0).getFirst().equals(filesData.get(0).getFirst()))) {\n          filesData.add(0, editors.get(0));\n        }\n      } else {\n        for (int i = 0; i < Math.min(MAX_FILES_IN_SWITCHER, editors.size()); i++) {\n          filesData.add(editors.get(i));\n        }\n      }\n\n      final DefaultListModel filesModel = new DefaultListModel();\n      for (FileInfo editor : filesData) {\n        filesModel.addElement(editor);\n      }\n\n      final VirtualFilesRenderer filesRenderer = new VirtualFilesRenderer(this) {\n        JPanel myPanel = new JPanel(new BorderLayout());\n        JLabel myLabel = new JLabel() {\n          @Override\n          protected void paintComponent(Graphics g) {\n            GraphicsConfig config = new GraphicsConfig(g);\n              ((Graphics2D)g).setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.3f));\n            super.paintComponent(g);\n            config.restore();\n          }\n        };\n        {\n          myPanel.setOpaque(false);\n          myPanel.setBackground(UIUtil.getListBackground());\n          myLabel.setText(\"* \");\n        }\n\n        @Override\n        public Component getListCellRendererComponent(JList list,\n                                                      Object value,\n                                                      int index,\n                                                      boolean selected,\n                                                      boolean hasFocus) {\n          final Component c = super.getListCellRendererComponent(list, value, index, selected, hasFocus);\n          final Color bg = UIUtil.getListBackground();\n          final Color fg = UIUtil.getListForeground();\n          myLabel.setFont(list.getFont());\n          myLabel.setForeground(open ? fg : bg);\n\n          myPanel.removeAll();\n          myPanel.add(myLabel, BorderLayout.WEST);\n          myPanel.add(c, BorderLayout.CENTER);\n          return myPanel;\n        }\n      };\n\n      final ListSelectionListener filesSelectionListener = new ListSelectionListener() {\n        private String getTitle2Text(String fullText) {\n          int labelWidth = pathLabel.getWidth();\n          if (fullText == null || fullText.length() == 0) return \" \";\n          while (pathLabel.getFontMetrics(pathLabel.getFont()).stringWidth(fullText) > labelWidth) {\n            int sep = fullText.indexOf(File.separatorChar, 4);\n            if (sep < 0) return fullText;\n            fullText = \"...\" + fullText.substring(sep);\n          }\n\n          return fullText;\n        }\n\n        public void valueChanged(final ListSelectionEvent e) {\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            public void run() {\n              updatePathLabel();\n            }\n          });\n        }\n\n        private void updatePathLabel() {\n          final Object[] values = files.getSelectedValues();\n          if (values != null && values.length == 1) {\n            final VirtualFile parent = ((FileInfo)values[0]).first.getParent();\n            if (parent != null) {\n              pathLabel.setText(getTitle2Text(FileUtil.getLocationRelativeToUserHome(parent.getPresentableUrl())));\n            } else {\n              pathLabel.setText(\" \");\n            }\n          } else {\n            pathLabel.setText(\" \");\n          }\n        }\n      };\n\n      files = new MyList(filesModel);\n      if (pinned) {\n        new NameFilteringListModel<FileInfo>(files, new Function<FileInfo, String>() {\n          @Override\n          public String fun(FileInfo info) {\n            final VirtualFile file = info.getFirst();\n            return file instanceof VirtualFilePathWrapper ? ((VirtualFilePathWrapper)file).getPresentablePath() : file.getName();\n          }\n        }, new Condition<String>() {\n          @Override\n          public boolean value(String s) {\n            return !mySpeedSearch.isPopupActive()\n                   || StringUtil.isEmpty(mySpeedSearch.getEnteredPrefix())\n                   || mySpeedSearch.getComparator().matchingFragments(mySpeedSearch.getEnteredPrefix(), s) != null;\n          }\n        }, mySpeedSearch);\n      }\n\n      files.setSelectionMode(pinned ? ListSelectionModel.MULTIPLE_INTERVAL_SELECTION : ListSelectionModel.SINGLE_SELECTION);\n      files.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n        public void valueChanged(ListSelectionEvent e) {\n          if (!files.isSelectionEmpty() && !toolWindows.isSelectionEmpty()) {\n            toolWindows.getSelectionModel().clearSelection();\n          }\n        }\n      });\n\n      files.getSelectionModel().addListSelectionListener(filesSelectionListener);\n\n      files.setCellRenderer(filesRenderer);\n      files.setBorder(IdeBorderFactory.createEmptyBorder(5, 5, 5, 20));\n      files.addKeyListener(this);\n      files.addMouseListener(this);\n      files.addMouseMotionListener(this);\n      myClickListener.installOn(files);\n\n      this.add(toolWindows, BorderLayout.WEST);\n      if (filesModel.size() > 0) {\n        files.setAlignmentY(1f);\n        if (files.getModel().getSize() > 20) {\n          final JScrollPane pane = ScrollPaneFactory.createScrollPane(files, true);\n          pane.setPreferredSize(new Dimension(files.getPreferredSize().width + 10, 20 * 20));\n          pane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n          this.add(pane, BorderLayout.EAST);\n        } else {\n          this.add(files, BorderLayout.EAST);\n        }\n        if (selectionIndex > -1) {\n          files.setSelectedIndex(selectionIndex);\n        }\n        this.add(separator, BorderLayout.CENTER);\n      }\n      this.add(descriptions, BorderLayout.SOUTH);\n\n      final ShortcutSet shortcutSet = ActionManager.getInstance().getAction(\"Switcher\").getShortcutSet();\n      final int modifiers = getModifiers(shortcutSet);\n      final boolean isAlt = (modifiers & Event.ALT_MASK) != 0;\n      ALT_KEY = isAlt ? VK_CONTROL : VK_ALT;\n      CTRL_KEY = isAlt ? VK_ALT : VK_CONTROL;\n\n      final IdeFrameImpl ideFrame = WindowManagerEx.getInstanceEx().getFrame(project);\n      myPopup = JBPopupFactory.getInstance().createComponentPopupBuilder(this, this)\n        .setResizable(pinned)\n        .setModalContext(false)\n        .setFocusable(true)\n        .setRequestFocus(true)\n        .setTitle(title)\n        .setCancelOnWindowDeactivation(true)\n        .setCancelOnOtherWindowOpen(true)\n        .setMovable(pinned)\n        .setCancelKeyEnabled(false)\n        .setCancelCallback(new Computable<Boolean>() {\n          public Boolean compute() {\n            SWITCHER = null;\n            return true;\n          }\n        }).createPopup();\n\n      if (isPinnedMode()) {\n        new AnAction(null ,null ,null) {\n          @Override\n          public void actionPerformed(AnActionEvent e) {\n            changeSelection();\n          }\n        }.registerCustomShortcutSet(CustomShortcutSet.fromString(\"TAB\"), this, myPopup);\n\n        new AnAction(null, null, null) {\n          @Override\n          public void actionPerformed(AnActionEvent e) {\n            //suppress all actions to activate a toolwindow : IDEA-71277\n          }\n        }.registerCustomShortcutSet(TW_SHORTCUT, this, myPopup);\n        new AnAction(null, null, null) {\n\n          @Override\n          public void actionPerformed(AnActionEvent e) {\n            if (mySpeedSearch != null && mySpeedSearch.isPopupActive()) {\n              mySpeedSearch.hidePopup();\n            } else {\n              myPopup.cancel();\n            }\n          }\n        }.registerCustomShortcutSet(CustomShortcutSet.fromString(\"ESCAPE\"), this, myPopup);\n      }\n\n      final Window window = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusedWindow();\n      myAlarm = new Alarm(Alarm.ThreadToUse.SWING_THREAD, myPopup);\n      myPopup.showInCenterOf(window);\n    }","id":39620,"modified_method":"@SuppressWarnings({\"ManualArrayToCollectionCopy\", \"ConstantConditions\"})\n    SwitcherPanel(final Project project, String title, boolean pinned) {\n      setLayout(new SwitcherLayouter());\n      this.project = project;\n      MAX_FILES_IN_SWITCHER = pinned ? UISettings.getInstance().RECENT_FILES_LIMIT : 30;\n      myPinned = pinned;\n      mySpeedSearch =  pinned ? new SwitcherSpeedSearch() : null;\n\n      setFocusable(true);\n      addKeyListener(this);\n      setBorder(new EmptyBorder(0, 0, 0, 0));\n      setBackground(JBColor.background());\n      pathLabel.setHorizontalAlignment(SwingConstants.LEFT);\n\n      final Font font = pathLabel.getFont();\n      pathLabel.setFont(font.deriveFont(Math.max(10f, font.getSize() - 4f)));\n\n      descriptions = new JPanel(new BorderLayout()) {\n        @Override\n        protected void paintComponent(Graphics g) {\n          super.paintComponent(g);\n          g.setColor(UIUtil.isUnderDarcula() ? SEPARATOR_COLOR : BORDER_COLOR);\n          g.drawLine(0, 0, getWidth(), 0);\n        }\n      };\n\n      descriptions.setBorder(BorderFactory.createEmptyBorder(1, 4, 1, 4));\n      descriptions.add(pathLabel, BorderLayout.CENTER);\n      twManager = ToolWindowManager.getInstance(project);\n      DefaultListModel twModel = new DefaultListModel();\n      for (String id : twManager.getToolWindowIds()) {\n        final ToolWindow tw = twManager.getToolWindow(id);\n        if (tw.isAvailable()) {\n          ids.put(tw, id);\n        }\n      }\n\n      final ArrayList<ToolWindow> windows = new ArrayList<ToolWindow>(ids.keySet());\n      twShortcuts = createShortcuts(windows);\n      final Map<ToolWindow, String> map = ContainerUtil.reverseMap(twShortcuts);\n      Collections.sort(windows, new Comparator<ToolWindow>() {\n        @Override\n        public int compare(ToolWindow o1, ToolWindow o2) {\n          return map.get(o1).compareTo(map.get(o2));\n        }\n      });\n      for (ToolWindow window : windows) {\n        twModel.addElement(window);\n      }\n\n      toolWindows = new MyList(twModel);\n      if (pinned) {\n        new NameFilteringListModel<ToolWindow>(toolWindows, new Function<ToolWindow, String>() {\n          @Override\n          public String fun(ToolWindow window) {\n            return ids.get(window);\n          }\n        }, new Condition<String>() {\n          @Override\n          public boolean value(String s) {\n            return !mySpeedSearch.isPopupActive()\n                   || StringUtil.isEmpty(mySpeedSearch.getEnteredPrefix())\n                   || mySpeedSearch.getComparator().matchingFragments(mySpeedSearch.getEnteredPrefix(), s) != null;\n          }\n        }, mySpeedSearch);\n      }\n\n      toolWindows.setBorder(IdeBorderFactory.createEmptyBorder(5, 5, 5, 20));\n      toolWindows.setSelectionMode(pinned ? ListSelectionModel.MULTIPLE_INTERVAL_SELECTION : ListSelectionModel.SINGLE_SELECTION);\n      toolWindows.setCellRenderer(new SwitcherToolWindowsListRenderer(mySpeedSearch, ids, map, myPinned) {\n        @Override\n        public Component getListCellRendererComponent(JList list,\n                                                      Object value,\n                                                      int index,\n                                                      boolean selected,\n                                                      boolean hasFocus) {\n          final JComponent renderer = (JComponent)super.getListCellRendererComponent(list, value, index, selected, hasFocus);\n          if (selected) {\n            return renderer;\n          }\n          final Color bgColor = list == mouseMoveSrc && index == mouseMoveListIndex ? ON_MOUSE_OVER_BG_COLOR : list.getBackground();\n          UIUtil.changeBackGround(renderer, bgColor);\n          return renderer;\n        }\n      });\n      toolWindows.addKeyListener(this);\n      toolWindows.addMouseListener(this);\n      toolWindows.addMouseMotionListener(this);\n      myClickListener.installOn(toolWindows);\n      toolWindows.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n        public void valueChanged(ListSelectionEvent e) {\n          if (!toolWindows.isSelectionEmpty() && !files.isSelectionEmpty()) {\n            files.clearSelection();\n          }\n        }\n      });\n\n      separator = new JPanel() {\n        @Override\n        protected void paintComponent(Graphics g) {\n          super.paintComponent(g);\n          g.setColor(SEPARATOR_COLOR);\n          g.drawLine(0, 0, 0, getHeight());\n        }\n      };\n      separator.setBackground(toolWindows.getBackground());\n\n      int selectionIndex = -1;\n      final FileEditorManagerImpl editorManager = (FileEditorManagerImpl)FileEditorManager.getInstance(project);\n      final ArrayList<FileInfo> filesData = new ArrayList<FileInfo>();\n      final ArrayList<FileInfo> editors = new ArrayList<FileInfo>();\n      if (!pinned) {\n        for (Pair<VirtualFile, EditorWindow> pair : editorManager.getSelectionHistory()) {\n          editors.add(new FileInfo(pair.first, pair.second));\n        }\n      }\n      if (editors.size() < 2 || isPinnedMode()) {\n        if (isPinnedMode() && editors.size() > 1) {\n          filesData.addAll(editors);\n        }\n        final VirtualFile[] recentFiles = ArrayUtil.reverseArray(EditorHistoryManager.getInstance(project).getFiles());\n        final int maxFiles = Math.max(editors.size(), recentFiles.length);\n        final int len = isPinnedMode() ? recentFiles.length : Math.min(toolWindows.getModel().getSize(), maxFiles);\n        boolean firstRecentMarked = false;\n        final List<VirtualFile> selectedFiles = Arrays.asList(editorManager.getSelectedFiles());\n        for (int i = 0; i < len; i++) {\n          if (isPinnedMode() && selectedFiles.contains(recentFiles[i])) {\n            continue;\n          }\n\n          final FileInfo info = new FileInfo(recentFiles[i], null);\n          boolean add = true;\n          if (isPinnedMode()) {\n            for (FileInfo fileInfo : filesData) {\n              if (fileInfo.first.equals(info.first)) {\n                add = false;\n                break;\n              }\n            }\n          }\n          if (add) {\n            filesData.add(info);\n            if (!firstRecentMarked) {\n              firstRecentMarked = true;\n              selectionIndex = filesData.size() - 1;\n            }\n          }\n        }\n        if (editors.size() == 1) selectionIndex++;\n        if (editors.size() == 1 && (filesData.isEmpty() || !editors.get(0).getFirst().equals(filesData.get(0).getFirst()))) {\n          filesData.add(0, editors.get(0));\n        }\n      } else {\n        for (int i = 0; i < Math.min(MAX_FILES_IN_SWITCHER, editors.size()); i++) {\n          filesData.add(editors.get(i));\n        }\n      }\n\n      final DefaultListModel filesModel = new DefaultListModel();\n      for (FileInfo editor : filesData) {\n        filesModel.addElement(editor);\n      }\n\n      final VirtualFilesRenderer filesRenderer = new VirtualFilesRenderer(this) {\n        JPanel myPanel = new JPanel(new BorderLayout());\n        JLabel myLabel = new JLabel() {\n          @Override\n          protected void paintComponent(Graphics g) {\n            GraphicsConfig config = new GraphicsConfig(g);\n              ((Graphics2D)g).setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.3f));\n            super.paintComponent(g);\n            config.restore();\n          }\n        };\n        {\n          myPanel.setOpaque(false);\n          myPanel.setBackground(UIUtil.getListBackground());\n          myLabel.setText(\"* \");\n        }\n\n        @Override\n        public Component getListCellRendererComponent(JList list,\n                                                      Object value,\n                                                      int index,\n                                                      boolean selected,\n                                                      boolean hasFocus) {\n          final Component c = super.getListCellRendererComponent(list, value, index, selected, hasFocus);\n          final Color bg = UIUtil.getListBackground();\n          final Color fg = UIUtil.getListForeground();\n          myLabel.setFont(list.getFont());\n          myLabel.setForeground(open ? fg : bg);\n\n          myPanel.removeAll();\n          myPanel.add(myLabel, BorderLayout.WEST);\n          myPanel.add(c, BorderLayout.CENTER);\n          return myPanel;\n        }\n      };\n\n      final ListSelectionListener filesSelectionListener = new ListSelectionListener() {\n        private String getTitle2Text(String fullText) {\n          int labelWidth = pathLabel.getWidth();\n          if (fullText == null || fullText.length() == 0) return \" \";\n          while (pathLabel.getFontMetrics(pathLabel.getFont()).stringWidth(fullText) > labelWidth) {\n            int sep = fullText.indexOf(File.separatorChar, 4);\n            if (sep < 0) return fullText;\n            fullText = \"...\" + fullText.substring(sep);\n          }\n\n          return fullText;\n        }\n\n        public void valueChanged(final ListSelectionEvent e) {\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            public void run() {\n              updatePathLabel();\n            }\n          });\n        }\n\n        private void updatePathLabel() {\n          final Object[] values = files.getSelectedValues();\n          if (values != null && values.length == 1) {\n            final VirtualFile parent = ((FileInfo)values[0]).first.getParent();\n            if (parent != null) {\n              pathLabel.setText(getTitle2Text(FileUtil.getLocationRelativeToUserHome(parent.getPresentableUrl())));\n            } else {\n              pathLabel.setText(\" \");\n            }\n          } else {\n            pathLabel.setText(\" \");\n          }\n        }\n      };\n\n      files = new MyList(filesModel);\n      if (pinned) {\n        new NameFilteringListModel<FileInfo>(files, new Function<FileInfo, String>() {\n          @Override\n          public String fun(FileInfo info) {\n            final VirtualFile file = info.getFirst();\n            return file instanceof VirtualFilePathWrapper ? ((VirtualFilePathWrapper)file).getPresentablePath() : file.getName();\n          }\n        }, new Condition<String>() {\n          @Override\n          public boolean value(String s) {\n            return !mySpeedSearch.isPopupActive()\n                   || StringUtil.isEmpty(mySpeedSearch.getEnteredPrefix())\n                   || mySpeedSearch.getComparator().matchingFragments(mySpeedSearch.getEnteredPrefix(), s) != null;\n          }\n        }, mySpeedSearch);\n      }\n\n      files.setSelectionMode(pinned ? ListSelectionModel.MULTIPLE_INTERVAL_SELECTION : ListSelectionModel.SINGLE_SELECTION);\n      files.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n        public void valueChanged(ListSelectionEvent e) {\n          if (!files.isSelectionEmpty() && !toolWindows.isSelectionEmpty()) {\n            toolWindows.getSelectionModel().clearSelection();\n          }\n        }\n      });\n\n      files.getSelectionModel().addListSelectionListener(filesSelectionListener);\n\n      files.setCellRenderer(filesRenderer);\n      files.setBorder(IdeBorderFactory.createEmptyBorder(5, 5, 5, 20));\n      files.addKeyListener(this);\n      files.addMouseListener(this);\n      files.addMouseMotionListener(this);\n      myClickListener.installOn(files);\n\n      this.add(toolWindows, BorderLayout.WEST);\n      if (filesModel.size() > 0) {\n        files.setAlignmentY(1f);\n        if (files.getModel().getSize() > 20) {\n          final JScrollPane pane = ScrollPaneFactory.createScrollPane(files, true);\n          pane.setPreferredSize(new Dimension(files.getPreferredSize().width + 10, 20 * 20));\n          pane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n          this.add(pane, BorderLayout.EAST);\n        } else {\n          this.add(files, BorderLayout.EAST);\n        }\n        if (selectionIndex > -1) {\n          files.setSelectedIndex(selectionIndex);\n        }\n        this.add(separator, BorderLayout.CENTER);\n      }\n      this.add(descriptions, BorderLayout.SOUTH);\n\n      final ShortcutSet shortcutSet = ActionManager.getInstance().getAction(\"Switcher\").getShortcutSet();\n      final int modifiers = getModifiers(shortcutSet);\n      final boolean isAlt = (modifiers & Event.ALT_MASK) != 0;\n      ALT_KEY = isAlt ? VK_CONTROL : VK_ALT;\n      CTRL_KEY = isAlt ? VK_ALT : VK_CONTROL;\n\n      final IdeFrameImpl ideFrame = WindowManagerEx.getInstanceEx().getFrame(project);\n      myPopup = JBPopupFactory.getInstance().createComponentPopupBuilder(this, this)\n        .setResizable(pinned)\n        .setModalContext(false)\n        .setFocusable(true)\n        .setRequestFocus(true)\n        .setTitle(title)\n        .setCancelOnWindowDeactivation(true)\n        .setCancelOnOtherWindowOpen(true)\n        .setMovable(pinned)\n        .setCancelKeyEnabled(false)\n        .setCancelCallback(new Computable<Boolean>() {\n          public Boolean compute() {\n            SWITCHER = null;\n            return true;\n          }\n        }).createPopup();\n\n      if (isPinnedMode()) {\n        new AnAction(null ,null ,null) {\n          @Override\n          public void actionPerformed(AnActionEvent e) {\n            changeSelection();\n          }\n        }.registerCustomShortcutSet(CustomShortcutSet.fromString(\"TAB\"), this, myPopup);\n\n        new AnAction(null, null, null) {\n          @Override\n          public void actionPerformed(AnActionEvent e) {\n            //suppress all actions to activate a toolwindow : IDEA-71277\n          }\n        }.registerCustomShortcutSet(TW_SHORTCUT, this, myPopup);\n        new AnAction(null, null, null) {\n\n          @Override\n          public void actionPerformed(AnActionEvent e) {\n            if (mySpeedSearch != null && mySpeedSearch.isPopupActive()) {\n              mySpeedSearch.hidePopup();\n            } else {\n              myPopup.cancel();\n            }\n          }\n        }.registerCustomShortcutSet(CustomShortcutSet.fromString(\"ESCAPE\"), this, myPopup);\n      }\n\n      final Window window = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusedWindow();\n      myAlarm = new Alarm(Alarm.ThreadToUse.SWING_THREAD, myPopup);\n      myPopup.showInCenterOf(window);\n    }","commit_id":"317be6ec958d0fa73ec7ea75daa59a70f009fc2e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void actionPerformed(AnActionEvent e) {\n    final Project project = e.getData(PlatformDataKeys.PROJECT);\n    if (project != null) {\n      FeatureUsageTracker.getInstance().triggerFeatureUsed(\"navigation.recent.files\");\n      Switcher.createAndShowSwitcher(project, IdeBundle.message(\"title.popup.recent.files\"), true).goForward();\n    }\n  }","id":39621,"modified_method":"@Override\n  public void actionPerformed(AnActionEvent e) {\n    final Project project = e.getData(PlatformDataKeys.PROJECT);\n    if (project != null) {\n      FeatureUsageTracker.getInstance().triggerFeatureUsed(\"navigation.recent.files\");\n      Switcher.createAndShowSwitcher(project, IdeBundle.message(\"title.popup.recent.files\"), true);\n    }\n  }","commit_id":"408a33b376275588ce54dd64df97f75ef5f7990b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings({\"ManualArrayToCollectionCopy\"})\n    SwitcherPanel(Project project, String title, boolean pinned) {\n      super(new BorderLayout(0, 0));\n      this.project = project;\n      MAX_FILES_IN_SWITCHER = pinned ? UISettings.getInstance().RECENT_FILES_LIMIT + UISettings.getInstance().EDITOR_TAB_LIMIT : 30;\n      myPinned = pinned;\n      mySpeedSearch =  pinned ? new SwitcherSpeedSearch() : null;\n\n      setFocusable(true);\n      addKeyListener(this);\n      setBorder(new EmptyBorder(0, 0, 0, 0));\n      setBackground(Color.WHITE);\n      pathLabel.setHorizontalAlignment(SwingConstants.LEFT);\n\n      final Font font = pathLabel.getFont();\n      pathLabel.setFont(font.deriveFont((float)10));\n\n      descriptions = new JPanel(new BorderLayout()) {\n        @Override\n        protected void paintComponent(Graphics g) {\n          super.paintComponent(g);\n          g.setColor(BORDER_COLOR);\n          g.drawLine(0, 0, getWidth(), 0);\n        }\n      };\n\n      descriptions.setBorder(BorderFactory.createEmptyBorder(1, 4, 1, 4));\n      descriptions.add(pathLabel, BorderLayout.CENTER);\n      twManager = ToolWindowManager.getInstance(project);\n      DefaultListModel twModel = new DefaultListModel();\n      for (String id : twManager.getToolWindowIds()) {\n        final ToolWindow tw = twManager.getToolWindow(id);\n        if (tw.isAvailable()) {\n          ids.put(tw, id);\n        }\n      }\n\n      final ArrayList<ToolWindow> windows = new ArrayList<ToolWindow>(ids.keySet());\n      twShortcuts = createShortcuts(windows);\n      final Map<ToolWindow, String> map = ContainerUtil.reverseMap(twShortcuts);\n      Collections.sort(windows, new Comparator<ToolWindow>() {\n        @Override\n        public int compare(ToolWindow o1, ToolWindow o2) {\n          return map.get(o1).compareTo(map.get(o2));\n        }\n      });\n      for (ToolWindow window : windows) {\n        twModel.addElement(window);\n      }\n\n      toolWindows = new JBList(twModel);\n      if (pinned) {\n        new NameFilteringListModel<ToolWindow>(toolWindows, new Function<ToolWindow, String>() {\n          @Override\n          public String fun(ToolWindow window) {\n            return ids.get(window);\n          }\n        }, new Condition<String>() {\n          @Override\n          public boolean value(String s) {\n            return !mySpeedSearch.isPopupActive()\n                   || StringUtil.isEmpty(mySpeedSearch.getEnteredPrefix())\n                   || mySpeedSearch.getComparator().matchingFragments(mySpeedSearch.getEnteredPrefix(), s) != null;\n          }\n        }, mySpeedSearch);\n      }\n\n      toolWindows.setBorder(IdeBorderFactory.createEmptyBorder(5, 5, 5, 20));\n      toolWindows.setSelectionMode(pinned ? ListSelectionModel.MULTIPLE_INTERVAL_SELECTION : ListSelectionModel.SINGLE_SELECTION);\n      toolWindows.setCellRenderer(new SwitcherToolWindowsListRenderer(mySpeedSearch, ids, map, myPinned) {\n        @Override\n        public Component getListCellRendererComponent(JList list,\n                                                      Object value,\n                                                      int index,\n                                                      boolean selected,\n                                                      boolean hasFocus) {\n          final JComponent renderer = (JComponent)super.getListCellRendererComponent(list, value, index, selected, hasFocus);\n          if (selected) {\n            return renderer;\n          }\n          final Color bgColor = list == mouseMoveSrc && index == mouseMoveListIndex ? ON_MOUSE_OVER_BG_COLOR : Color.WHITE;\n          UIUtil.changeBackGround(renderer, bgColor);\n          return renderer;\n        }\n      });\n      toolWindows.addKeyListener(this);\n      toolWindows.addMouseListener(this);\n      toolWindows.addMouseMotionListener(this);\n      toolWindows.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n        public void valueChanged(ListSelectionEvent e) {\n          if (!toolWindows.isSelectionEmpty() && !files.isSelectionEmpty()) {\n            files.clearSelection();\n          }\n        }\n      });\n\n      separator = new JPanel() {\n        @Override\n        protected void paintComponent(Graphics g) {\n          super.paintComponent(g);\n          g.setColor(SEPARATOR_COLOR);\n          g.drawLine(getWidth() - 1, 0, getWidth() - 1, getHeight());\n        }\n      };\n      separator.setBackground(Color.WHITE);\n\n      int selectionIndex = -1;\n      final FileEditorManagerImpl editorManager = (FileEditorManagerImpl)FileEditorManager.getInstance(project);\n      final ArrayList<FileInfo> filesData = new ArrayList<FileInfo>();\n      final ArrayList<FileInfo> editors = new ArrayList<FileInfo>();\n      for (Pair<VirtualFile, EditorWindow> pair : editorManager.getSelectionHistory()) {\n        editors.add(new FileInfo(pair.first, pair.second));\n      }\n      if (editors.size() < 2 || isPinnedMode()) {\n        if (isPinnedMode() && editors.size() > 1) {\n          filesData.addAll(editors);\n        }\n        final VirtualFile[] recentFiles = ArrayUtil.reverseArray(EditorHistoryManager.getInstance(project).getFiles());\n        final int maxFiles = Math.max(editors.size(), recentFiles.length);\n        final int len = isPinnedMode() ? maxFiles : Math.min(toolWindows.getModel().getSize(), maxFiles);\n        boolean firstRecentMarked = false;\n        for (int i = 0; i < len; i++) {\n          final FileInfo info = new FileInfo(recentFiles[i], null);\n          boolean add = true;\n          if (isPinnedMode()) {\n            for (FileInfo fileInfo : filesData) {\n              if (fileInfo.first.equals(info.first)) {\n                add = false;\n                break;\n              }\n            }\n          }\n          if (add) {\n            filesData.add(info);\n            if (!firstRecentMarked) {\n              firstRecentMarked = true;\n              selectionIndex = filesData.size() - 1;\n            }\n          }\n        }\n        if (editors.size() == 1 && (filesData.isEmpty() || !editors.get(0).getFirst().equals(filesData.get(0).getFirst()))) {\n          filesData.add(0, editors.get(0));\n          selectionIndex--;\n        }\n      } else {\n        for (int i = 0; i < Math.min(MAX_FILES_IN_SWITCHER, editors.size()); i++) {\n          filesData.add(editors.get(i));\n        }\n      }\n\n      final DefaultListModel filesModel = new DefaultListModel();\n      for (FileInfo editor : filesData) {\n        filesModel.addElement(editor);\n      }\n\n      final VirtualFilesRenderer filesRenderer = new VirtualFilesRenderer(project);\n\n      final ListSelectionListener filesSelectionListener = new ListSelectionListener() {\n        private String getTitle2Text(String fullText) {\n          int labelWidth = pathLabel.getWidth();\n          if (fullText == null || fullText.length() == 0) return \" \";\n          while (pathLabel.getFontMetrics(pathLabel.getFont()).stringWidth(fullText) > labelWidth) {\n            int sep = fullText.indexOf(File.separatorChar, 4);\n            if (sep < 0) return fullText;\n            fullText = \"...\" + fullText.substring(sep);\n          }\n\n          return fullText;\n        }\n\n        public void valueChanged(final ListSelectionEvent e) {\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            public void run() {\n              updatePathLabel();\n            }\n          });\n        }\n\n        private void updatePathLabel() {\n          final Object[] values = files.getSelectedValues();\n          if (values != null && values.length == 1) {\n            final VirtualFile parent = ((FileInfo)values[0]).first.getParent();\n            if (parent != null) {\n              pathLabel.setText(getTitle2Text(parent.getPresentableUrl()));\n            } else {\n              pathLabel.setText(\" \");\n            }\n          } else {\n            pathLabel.setText(\" \");\n          }\n        }\n      };\n\n      files = new JBList(filesModel);\n      if (pinned) {\n        new NameFilteringListModel<FileInfo>(files, new Function<FileInfo, String>() {\n          @Override\n          public String fun(FileInfo info) {\n            return info.getFirst().getName();\n          }\n        }, new Condition<String>() {\n          @Override\n          public boolean value(String s) {\n            return !mySpeedSearch.isPopupActive()\n                   || StringUtil.isEmpty(mySpeedSearch.getEnteredPrefix())\n                   || mySpeedSearch.getComparator().matchingFragments(mySpeedSearch.getEnteredPrefix(), s) != null;\n          }\n        }, mySpeedSearch);\n      }\n\n      files.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n      files.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n        public void valueChanged(ListSelectionEvent e) {\n          if (!files.isSelectionEmpty() && !toolWindows.isSelectionEmpty()) {\n            toolWindows.getSelectionModel().clearSelection();\n          }\n        }\n      });\n\n      files.getSelectionModel().addListSelectionListener(filesSelectionListener);\n\n      files.setCellRenderer(filesRenderer);\n      files.setBorder(IdeBorderFactory.createEmptyBorder(5, 5, 5, 20));\n      files.addKeyListener(this);\n      files.addMouseListener(this);\n      files.addMouseMotionListener(this);\n\n\n      this.add(toolWindows, BorderLayout.WEST);\n      if (filesModel.size() > 0) {\n        files.setAlignmentY(1f);\n        if (files.getModel().getSize() > 30) {\n          final JScrollPane pane = ScrollPaneFactory.createScrollPane(files, true);\n          pane.setPreferredSize(new Dimension(files.getPreferredSize().width + 10, 30 * 20));\n          pane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n          this.add(pane, BorderLayout.EAST);\n        } else {\n          this.add(files, BorderLayout.EAST);\n        }\n        if (selectionIndex > -1) {\n          files.setSelectedIndex(selectionIndex);\n        }\n        this.add(separator, BorderLayout.CENTER);\n      }\n      this.add(descriptions, BorderLayout.SOUTH);\n\n      final ShortcutSet shortcutSet = ActionManager.getInstance().getAction(\"Switcher\").getShortcutSet();\n      final int modifiers = getModifiers(shortcutSet);\n      final boolean isAlt = (modifiers & Event.ALT_MASK) != 0;\n      ALT_KEY = isAlt ? VK_CONTROL : VK_ALT;\n      CTRL_KEY = isAlt ? VK_ALT : VK_CONTROL;\n\n      final IdeFrameImpl ideFrame = WindowManagerEx.getInstanceEx().getFrame(project);\n      myPopup = JBPopupFactory.getInstance().createComponentPopupBuilder(this, this)\n          .setResizable(pinned)\n          .setModalContext(false)\n          .setFocusable(true)\n          .setRequestFocus(true)\n          .setTitle(title)\n          .setMovable(pinned)\n          .setCancelKeyEnabled(false)\n          .setCancelCallback(new Computable<Boolean>() {\n            public Boolean compute() {\n              SWITCHER = null;\n              return true;\n            }\n          }).createPopup();\n\n      if (isPinnedMode()) {\n        new AnAction(null, null, null) {\n          @Override\n          public void actionPerformed(AnActionEvent e) {\n            //suppress all actions to activate a toolwindow : IDEA-71277\n          }\n        }.registerCustomShortcutSet(TW_SHORTCUT, this, myPopup);\n        new AnAction(null, null, null) {\n\n          @Override\n          public void actionPerformed(AnActionEvent e) {\n            if (mySpeedSearch != null && mySpeedSearch.isPopupActive()) {\n              mySpeedSearch.hidePopup();\n            } else {\n              myPopup.cancel();\n            }\n          }\n        }.registerCustomShortcutSet(CustomShortcutSet.fromString(\"ESCAPE\"), this, myPopup);\n      }\n\n      Component comp = null;\n      final EditorWindow result = FileEditorManagerEx.getInstanceEx(project).getActiveWindow().getResult();\n      if (result != null) {\n        comp = result.getOwner();\n      }\n      if (comp == null) {\n        comp = ideFrame.getContentPane();\n      }\n      myAlarm = new Alarm(Alarm.ThreadToUse.SWING_THREAD, myPopup);\n      myPopup.showInCenterOf(comp);\n    }","id":39622,"modified_method":"@SuppressWarnings({\"ManualArrayToCollectionCopy\"})\n    SwitcherPanel(Project project, String title, boolean pinned) {\n      super(new BorderLayout(0, 0));\n      this.project = project;\n      MAX_FILES_IN_SWITCHER = pinned ? UISettings.getInstance().RECENT_FILES_LIMIT + UISettings.getInstance().EDITOR_TAB_LIMIT : 30;\n      myPinned = pinned;\n      mySpeedSearch =  pinned ? new SwitcherSpeedSearch() : null;\n\n      setFocusable(true);\n      addKeyListener(this);\n      setBorder(new EmptyBorder(0, 0, 0, 0));\n      setBackground(Color.WHITE);\n      pathLabel.setHorizontalAlignment(SwingConstants.LEFT);\n\n      final Font font = pathLabel.getFont();\n      pathLabel.setFont(font.deriveFont((float)10));\n\n      descriptions = new JPanel(new BorderLayout()) {\n        @Override\n        protected void paintComponent(Graphics g) {\n          super.paintComponent(g);\n          g.setColor(BORDER_COLOR);\n          g.drawLine(0, 0, getWidth(), 0);\n        }\n      };\n\n      descriptions.setBorder(BorderFactory.createEmptyBorder(1, 4, 1, 4));\n      descriptions.add(pathLabel, BorderLayout.CENTER);\n      twManager = ToolWindowManager.getInstance(project);\n      DefaultListModel twModel = new DefaultListModel();\n      for (String id : twManager.getToolWindowIds()) {\n        final ToolWindow tw = twManager.getToolWindow(id);\n        if (tw.isAvailable()) {\n          ids.put(tw, id);\n        }\n      }\n\n      final ArrayList<ToolWindow> windows = new ArrayList<ToolWindow>(ids.keySet());\n      twShortcuts = createShortcuts(windows);\n      final Map<ToolWindow, String> map = ContainerUtil.reverseMap(twShortcuts);\n      Collections.sort(windows, new Comparator<ToolWindow>() {\n        @Override\n        public int compare(ToolWindow o1, ToolWindow o2) {\n          return map.get(o1).compareTo(map.get(o2));\n        }\n      });\n      for (ToolWindow window : windows) {\n        twModel.addElement(window);\n      }\n\n      toolWindows = new JBList(twModel);\n      if (pinned) {\n        new NameFilteringListModel<ToolWindow>(toolWindows, new Function<ToolWindow, String>() {\n          @Override\n          public String fun(ToolWindow window) {\n            return ids.get(window);\n          }\n        }, new Condition<String>() {\n          @Override\n          public boolean value(String s) {\n            return !mySpeedSearch.isPopupActive()\n                   || StringUtil.isEmpty(mySpeedSearch.getEnteredPrefix())\n                   || mySpeedSearch.getComparator().matchingFragments(mySpeedSearch.getEnteredPrefix(), s) != null;\n          }\n        }, mySpeedSearch);\n      }\n\n      toolWindows.setBorder(IdeBorderFactory.createEmptyBorder(5, 5, 5, 20));\n      toolWindows.setSelectionMode(pinned ? ListSelectionModel.MULTIPLE_INTERVAL_SELECTION : ListSelectionModel.SINGLE_SELECTION);\n      toolWindows.setCellRenderer(new SwitcherToolWindowsListRenderer(mySpeedSearch, ids, map, myPinned) {\n        @Override\n        public Component getListCellRendererComponent(JList list,\n                                                      Object value,\n                                                      int index,\n                                                      boolean selected,\n                                                      boolean hasFocus) {\n          final JComponent renderer = (JComponent)super.getListCellRendererComponent(list, value, index, selected, hasFocus);\n          if (selected) {\n            return renderer;\n          }\n          final Color bgColor = list == mouseMoveSrc && index == mouseMoveListIndex ? ON_MOUSE_OVER_BG_COLOR : Color.WHITE;\n          UIUtil.changeBackGround(renderer, bgColor);\n          return renderer;\n        }\n      });\n      toolWindows.addKeyListener(this);\n      toolWindows.addMouseListener(this);\n      toolWindows.addMouseMotionListener(this);\n      toolWindows.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n        public void valueChanged(ListSelectionEvent e) {\n          if (!toolWindows.isSelectionEmpty() && !files.isSelectionEmpty()) {\n            files.clearSelection();\n          }\n        }\n      });\n\n      separator = new JPanel() {\n        @Override\n        protected void paintComponent(Graphics g) {\n          super.paintComponent(g);\n          g.setColor(SEPARATOR_COLOR);\n          g.drawLine(getWidth() - 1, 0, getWidth() - 1, getHeight());\n        }\n      };\n      separator.setBackground(Color.WHITE);\n\n      int selectionIndex = -1;\n      final FileEditorManagerImpl editorManager = (FileEditorManagerImpl)FileEditorManager.getInstance(project);\n      final ArrayList<FileInfo> filesData = new ArrayList<FileInfo>();\n      final ArrayList<FileInfo> editors = new ArrayList<FileInfo>();\n      for (Pair<VirtualFile, EditorWindow> pair : editorManager.getSelectionHistory()) {\n        editors.add(new FileInfo(pair.first, pair.second));\n      }\n      if (editors.size() < 2 || isPinnedMode()) {\n        if (isPinnedMode() && editors.size() > 1) {\n          filesData.addAll(editors);\n        }\n        final VirtualFile[] recentFiles = ArrayUtil.reverseArray(EditorHistoryManager.getInstance(project).getFiles());\n        final int maxFiles = Math.max(editors.size(), recentFiles.length);\n        final int len = isPinnedMode() ? maxFiles : Math.min(toolWindows.getModel().getSize(), maxFiles);\n        boolean firstRecentMarked = false;\n        for (int i = 0; i < len; i++) {\n          final FileInfo info = new FileInfo(recentFiles[i], null);\n          boolean add = true;\n          if (isPinnedMode()) {\n            for (FileInfo fileInfo : filesData) {\n              if (fileInfo.first.equals(info.first)) {\n                add = false;\n                break;\n              }\n            }\n          }\n          if (add) {\n            filesData.add(info);\n            if (!firstRecentMarked) {\n              firstRecentMarked = true;\n              selectionIndex = filesData.size() - 1;\n            }\n          }\n        }\n        if (editors.size() == 1) selectionIndex++;\n        if (editors.size() == 1 && (filesData.isEmpty() || !editors.get(0).getFirst().equals(filesData.get(0).getFirst()))) {\n          filesData.add(0, editors.get(0));\n        }\n      } else {\n        for (int i = 0; i < Math.min(MAX_FILES_IN_SWITCHER, editors.size()); i++) {\n          filesData.add(editors.get(i));\n        }\n      }\n\n      final DefaultListModel filesModel = new DefaultListModel();\n      for (FileInfo editor : filesData) {\n        filesModel.addElement(editor);\n      }\n\n      final VirtualFilesRenderer filesRenderer = new VirtualFilesRenderer(project);\n\n      final ListSelectionListener filesSelectionListener = new ListSelectionListener() {\n        private String getTitle2Text(String fullText) {\n          int labelWidth = pathLabel.getWidth();\n          if (fullText == null || fullText.length() == 0) return \" \";\n          while (pathLabel.getFontMetrics(pathLabel.getFont()).stringWidth(fullText) > labelWidth) {\n            int sep = fullText.indexOf(File.separatorChar, 4);\n            if (sep < 0) return fullText;\n            fullText = \"...\" + fullText.substring(sep);\n          }\n\n          return fullText;\n        }\n\n        public void valueChanged(final ListSelectionEvent e) {\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            public void run() {\n              updatePathLabel();\n            }\n          });\n        }\n\n        private void updatePathLabel() {\n          final Object[] values = files.getSelectedValues();\n          if (values != null && values.length == 1) {\n            final VirtualFile parent = ((FileInfo)values[0]).first.getParent();\n            if (parent != null) {\n              pathLabel.setText(getTitle2Text(parent.getPresentableUrl()));\n            } else {\n              pathLabel.setText(\" \");\n            }\n          } else {\n            pathLabel.setText(\" \");\n          }\n        }\n      };\n\n      files = new JBList(filesModel);\n      if (pinned) {\n        new NameFilteringListModel<FileInfo>(files, new Function<FileInfo, String>() {\n          @Override\n          public String fun(FileInfo info) {\n            return info.getFirst().getName();\n          }\n        }, new Condition<String>() {\n          @Override\n          public boolean value(String s) {\n            return !mySpeedSearch.isPopupActive()\n                   || StringUtil.isEmpty(mySpeedSearch.getEnteredPrefix())\n                   || mySpeedSearch.getComparator().matchingFragments(mySpeedSearch.getEnteredPrefix(), s) != null;\n          }\n        }, mySpeedSearch);\n      }\n\n      files.setSelectionMode(pinned ? ListSelectionModel.MULTIPLE_INTERVAL_SELECTION : ListSelectionModel.SINGLE_SELECTION);\n      files.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n        public void valueChanged(ListSelectionEvent e) {\n          if (!files.isSelectionEmpty() && !toolWindows.isSelectionEmpty()) {\n            toolWindows.getSelectionModel().clearSelection();\n          }\n        }\n      });\n\n      files.getSelectionModel().addListSelectionListener(filesSelectionListener);\n\n      files.setCellRenderer(filesRenderer);\n      files.setBorder(IdeBorderFactory.createEmptyBorder(5, 5, 5, 20));\n      files.addKeyListener(this);\n      files.addMouseListener(this);\n      files.addMouseMotionListener(this);\n\n\n      this.add(toolWindows, BorderLayout.WEST);\n      if (filesModel.size() > 0) {\n        files.setAlignmentY(1f);\n        if (files.getModel().getSize() > 30) {\n          final JScrollPane pane = ScrollPaneFactory.createScrollPane(files, true);\n          pane.setPreferredSize(new Dimension(files.getPreferredSize().width + 10, 30 * 20));\n          pane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n          this.add(pane, BorderLayout.EAST);\n        } else {\n          this.add(files, BorderLayout.EAST);\n        }\n        if (selectionIndex > -1) {\n          files.setSelectedIndex(selectionIndex);\n        }\n        this.add(separator, BorderLayout.CENTER);\n      }\n      this.add(descriptions, BorderLayout.SOUTH);\n\n      final ShortcutSet shortcutSet = ActionManager.getInstance().getAction(\"Switcher\").getShortcutSet();\n      final int modifiers = getModifiers(shortcutSet);\n      final boolean isAlt = (modifiers & Event.ALT_MASK) != 0;\n      ALT_KEY = isAlt ? VK_CONTROL : VK_ALT;\n      CTRL_KEY = isAlt ? VK_ALT : VK_CONTROL;\n\n      final IdeFrameImpl ideFrame = WindowManagerEx.getInstanceEx().getFrame(project);\n      myPopup = JBPopupFactory.getInstance().createComponentPopupBuilder(this, this)\n          .setResizable(pinned)\n          .setModalContext(false)\n          .setFocusable(true)\n          .setRequestFocus(true)\n          .setTitle(title)\n          .setMovable(pinned)\n          .setCancelKeyEnabled(false)\n          .setCancelCallback(new Computable<Boolean>() {\n            public Boolean compute() {\n              SWITCHER = null;\n              return true;\n            }\n          }).createPopup();\n\n      if (isPinnedMode()) {\n        new AnAction(null, null, null) {\n          @Override\n          public void actionPerformed(AnActionEvent e) {\n            //suppress all actions to activate a toolwindow : IDEA-71277\n          }\n        }.registerCustomShortcutSet(TW_SHORTCUT, this, myPopup);\n        new AnAction(null, null, null) {\n\n          @Override\n          public void actionPerformed(AnActionEvent e) {\n            if (mySpeedSearch != null && mySpeedSearch.isPopupActive()) {\n              mySpeedSearch.hidePopup();\n            } else {\n              myPopup.cancel();\n            }\n          }\n        }.registerCustomShortcutSet(CustomShortcutSet.fromString(\"ESCAPE\"), this, myPopup);\n      }\n\n      Component comp = null;\n      final EditorWindow result = FileEditorManagerEx.getInstanceEx(project).getActiveWindow().getResult();\n      if (result != null) {\n        comp = result.getOwner();\n      }\n      if (comp == null) {\n        comp = ideFrame.getContentPane();\n      }\n      myAlarm = new Alarm(Alarm.ThreadToUse.SWING_THREAD, myPopup);\n      myPopup.showInCenterOf(comp);\n    }","commit_id":"408a33b376275588ce54dd64df97f75ef5f7990b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void actionPerformed(AnActionEvent e) {\n    final Project project = e.getData(CommonDataKeys.PROJECT);\n    if (project != null) {\n      FeatureUsageTracker.getInstance().triggerFeatureUsed(\"navigation.recent.files\");\n      Switcher.createAndShowSwitcher(project, IdeBundle.message(\"title.popup.recent.files\"), true).goForward();\n    }\n  }","id":39623,"modified_method":"@Override\n  public void actionPerformed(AnActionEvent e) {\n    final Project project = e.getData(CommonDataKeys.PROJECT);\n    if (project != null) {\n      FeatureUsageTracker.getInstance().triggerFeatureUsed(\"navigation.recent.files\");\n      final Switcher.SwitcherPanel switcher = Switcher.createAndShowSwitcher(project, IdeBundle.message(\"title.popup.recent.files\"), true);\n      if (FileEditorManagerEx.getInstanceEx(project).hasOpenedFile()) {\n        switcher.goForward();\n      }\n    }\n  }","commit_id":"e9eda0db499a3cc9502b59c570c064c9d4ef1e5d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    protected StreamInfo getStreamInfo(ActionMapping mapping, ActionForm form,\n            HttpServletRequest request, HttpServletResponse response) throws Exception {\n\n        String path = \"\";\n        Map params = (Map) request.getAttribute(PARAMS);\n        String type = (String) params.get(TYPE);\n        if (type.equals(DownloadManager.DOWNLOAD_TYPE_KICKSTART)) {\n            return getStreamInfoKickstart(mapping, form, request, response, path);\n        }\n        else if (type.equals(DownloadManager.DOWNLOAD_TYPE_COBBLER)) {\n            String url = ConfigDefaults.get().getCobblerServerUrl() +\n                        (String) params.get(URL);\n            KickstartHelper helper = new KickstartHelper(request);\n            String data = \"\";\n            if (helper.isProxyRequest()) {\n                data = KickstartManager.getInstance().renderKickstart(\n                        helper.getKickstartHost(), url);\n            }\n            else {\n                data = KickstartManager.getInstance().renderKickstart(url);\n            }\n            //Must set content length or it doesn't quite work right\n            response.addHeader(\"Content-Length\", data.length() + \"\");\n            return getStreamForText(data.getBytes());\n        }\n        else {\n            Long fileId = (Long) params.get(FILEID);\n            Long userid = (Long) params.get(USERID);\n            User user = UserFactory.lookupById(userid);\n            if (type.equals(DownloadManager.DOWNLOAD_TYPE_PACKAGE)) {\n                Package pack = PackageFactory.lookupByIdAndOrg(fileId, user.getOrg());\n                response.addHeader(\"Content-Length\", pack.getPackageSize() + \"\");\n                path = Config.get().getString(ConfigDefaults.MOUNT_POINT) +\n                    \"/\" + pack.getPath();\n                return getStreamForBinary(path);\n            }\n            else if (type.equals(DownloadManager.DOWNLOAD_TYPE_SOURCE)) {\n                Package pack = PackageFactory.lookupByIdAndOrg(fileId, user.getOrg());\n                List<PackageSource> src = PackageFactory.lookupPackageSources(pack);\n                if (!src.isEmpty()) {\n                    response.addHeader(\"Content-Length\", src.get(0).getPackageSize() + \"\");\n                    path = Config.get().getString(ConfigDefaults.MOUNT_POINT) + \"/\" +\n                        src.get(0).getPath();\n                    return getStreamForBinary(path);\n                }\n            }\n            else if (type.equals(DownloadManager.DOWNLOAD_TYPE_PATCH_README)) {\n                Patch patch = (Patch) PackageFactory.lookupByIdAndOrg(fileId,\n                        user.getOrg());\n                response.addHeader(\"Content-Length\", patch.getPackageSize() + \"\");\n                return getStreamForText(patch.getReadme());\n\n            }\n            else if (type.equals(DownloadManager.DOWNLOAD_TYPE_PATCH_SET_README)) {\n                PatchSet patch = (PatchSet) PackageFactory.lookupByIdAndOrg(fileId,\n                        user.getOrg());\n                response.addHeader(\"Content-Length\", patch.getPackageSize() + \"\");\n                return getStreamForText(patch.getReadme());\n            }\n            else if (type.equals(DownloadManager.DOWNLOAD_TYPE_REPO_LOG)) {\n                Channel c = ChannelFactory.lookupById(fileId);\n                ChannelManager.verifyChannelAdmin(user, fileId);\n                File file = new File(ChannelManager.getLatestSyncLogFile(c));\n\n                StringBuilder output = new StringBuilder();\n                BufferedReader input =  new BufferedReader(new FileReader(file));\n                String line;\n                while ((line = input.readLine()) != null) {\n                    output.append(line);\n                    output.append(\"\\n\");\n                }\n\n                response.addHeader(\"Content-Length\", output.length() + \"\");\n                return getStreamForText(output.toString().getBytes());\n            }\n        }\n\n        throw new UnknownDownloadTypeException(\"The specified download type \" + type +\n                \" is not currently supported\");\n\n    }","id":39624,"modified_method":"@Override\n    protected StreamInfo getStreamInfo(ActionMapping mapping, ActionForm form,\n            HttpServletRequest request, HttpServletResponse response) throws Exception {\n\n        String path = \"\";\n        Map params = (Map) request.getAttribute(PARAMS);\n        String type = (String) params.get(TYPE);\n        if (type.equals(DownloadManager.DOWNLOAD_TYPE_KICKSTART)) {\n            return getStreamInfoKickstart(mapping, form, request, response, path);\n        }\n        else if (type.equals(DownloadManager.DOWNLOAD_TYPE_COBBLER)) {\n            String url = ConfigDefaults.get().getCobblerServerUrl() +\n                        (String) params.get(URL);\n            KickstartHelper helper = new KickstartHelper(request);\n            String data = \"\";\n            if (helper.isProxyRequest()) {\n                data = KickstartManager.getInstance().renderKickstart(\n                        helper.getKickstartHost(), url);\n            }\n            else {\n                data = KickstartManager.getInstance().renderKickstart(url);\n            }\n            setTextContentInfo(response, data.length());\n            return getStreamForText(data.getBytes());\n        }\n        else {\n            Long fileId = (Long) params.get(FILEID);\n            Long userid = (Long) params.get(USERID);\n            User user = UserFactory.lookupById(userid);\n            if (type.equals(DownloadManager.DOWNLOAD_TYPE_PACKAGE)) {\n                Package pack = PackageFactory.lookupByIdAndOrg(fileId, user.getOrg());\n                setBinaryContentInfo(response, pack.getPackageSize().intValue());\n                path = Config.get().getString(ConfigDefaults.MOUNT_POINT) +\n                    \"/\" + pack.getPath();\n                return getStreamForBinary(path);\n            }\n            else if (type.equals(DownloadManager.DOWNLOAD_TYPE_SOURCE)) {\n                Package pack = PackageFactory.lookupByIdAndOrg(fileId, user.getOrg());\n                List<PackageSource> src = PackageFactory.lookupPackageSources(pack);\n                if (!src.isEmpty()) {\n                    setBinaryContentInfo(response, src.get(0).getPackageSize().intValue());\n                    path = Config.get().getString(ConfigDefaults.MOUNT_POINT) + \"/\" +\n                        src.get(0).getPath();\n                    return getStreamForBinary(path);\n                }\n            }\n            else if (type.equals(DownloadManager.DOWNLOAD_TYPE_PATCH_README)) {\n                Patch patch = (Patch) PackageFactory.lookupByIdAndOrg(fileId,\n                        user.getOrg());\n                setTextContentInfo(response, patch.getPackageSize().intValue());\n                return getStreamForText(patch.getReadme());\n\n            }\n            else if (type.equals(DownloadManager.DOWNLOAD_TYPE_PATCH_SET_README)) {\n                PatchSet patch = (PatchSet) PackageFactory.lookupByIdAndOrg(fileId,\n                        user.getOrg());\n                setTextContentInfo(response, patch.getPackageSize().intValue());\n                return getStreamForText(patch.getReadme());\n            }\n            else if (type.equals(DownloadManager.DOWNLOAD_TYPE_REPO_LOG)) {\n                Channel c = ChannelFactory.lookupById(fileId);\n                ChannelManager.verifyChannelAdmin(user, fileId);\n                File file = new File(ChannelManager.getLatestSyncLogFile(c));\n\n                StringBuilder output = new StringBuilder();\n                BufferedReader input =  new BufferedReader(new FileReader(file));\n                String line;\n                while ((line = input.readLine()) != null) {\n                    output.append(line);\n                    output.append(\"\\n\");\n                }\n\n                setTextContentInfo(response, output.length());\n                return getStreamForText(output.toString().getBytes());\n            }\n        }\n\n        throw new UnknownDownloadTypeException(\"The specified download type \" + type +\n                \" is not currently supported\");\n\n    }","commit_id":"a5e30664d5780c078e3a51ccc3c97cbaf275cb7a","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private StreamInfo getStreamInfoKickstart(ActionMapping mapping, ActionForm form,\n            HttpServletRequest request, HttpServletResponse response,\n                String path) throws Exception {\n\n        Map params = (Map) request.getAttribute(PARAMS);\n        path = (String) params.get(FILENAME);\n        if (log.isDebugEnabled()) {\n            log.debug(\"getStreamInfo KICKSTART type, path: \" + path);\n        }\n        String diskPath = null;\n        String kickstartMount = Config.get().getString(ConfigDefaults.MOUNT_POINT);\n        String fileName;\n        KickstartSession ksession = (KickstartSession) params.get(SESSION);\n        KickstartSessionState newState = null;\n        KickstartableTree tree = (KickstartableTree) params.get(TREE);\n        Package rpmPackage = null;\n        Channel child = (Channel) params.get(CHILD);\n\n        if (tree.getBasePath().indexOf(kickstartMount) == 0) {\n            log.debug(\"Trimming mount because tree is\" +\n                \" explicitly rooted to the mount point\");\n            kickstartMount = \"\";\n        }\n        // If the tree is rooted somewhere other than\n        // /var/satellite then no need to prepend it.\n        if (tree.getBasePath().startsWith(\"/\")) {\n            log.debug(\"Tree isnt rooted at /var/satellite, lets just use basepath\");\n            kickstartMount = \"\";\n        }\n        // Searching for RPM\n        if (path.endsWith(\".rpm\")) {\n            String[] split = StringUtils.split(path, '/');\n            fileName = split[split.length - 1];\n            if (log.isDebugEnabled()) {\n                log.debug(\"RPM filename: \" + fileName);\n            }\n            Channel channel = tree.getChannel();\n            if (child != null) {\n                channel = child;\n            }\n\n            rpmPackage = ChannelFactory.lookupPackageByFilename(channel, fileName);\n            if (rpmPackage != null) {\n                diskPath = Config.get().getString(ConfigDefaults.MOUNT_POINT) + \"/\" +\n                    rpmPackage.getPath();\n                if (log.isDebugEnabled()) {\n                    log.debug(\"found package :: diskPath path: \" + diskPath);\n                }\n                newState = KickstartFactory.\n                    lookupSessionStateByLabel(KickstartSessionState.IN_PROGRESS);\n            }\n            else {\n                if (log.isDebugEnabled()) {\n                    log.debug(\"Package was not in channel, looking in distro path.\");\n                }\n            }\n        }\n        // either it's not an rpm, or we didn't find it in the channel\n        // check for dir pings, virt manager or install, bz #345721\n        if (diskPath == null) {\n            // my $dp = File::Spec->catfile($kickstart_mount, $tree->base_path, $path);\n\n            if (child == null) {\n                diskPath = kickstartMount + \"/\" + tree.getBasePath() + path;\n            }\n            else {\n                String[] split = StringUtils.split(path, '/');\n                if (split[0].equals(\"repodata\")) {\n                    split[0] = child.getLabel();\n                }\n                diskPath = \"/var/cache/\" +\n                    Config.get().getString(\"repomd_path_prefix\", \"rhn/repodata/\") + \"/\" +\n                    StringUtils.join(split, '/');\n            }\n\n            if (log.isDebugEnabled()) {\n                log.debug(\"DirCheck path: \" + diskPath);\n            }\n            File actualFile = new File(diskPath);\n            if (actualFile.exists() && actualFile.isDirectory()) {\n                log.debug(\"Directory hit.  just return 200\");\n                response.setContentLength(0);\n                response.setStatus(HttpServletResponse.SC_OK);\n                return getStreamForText(\"\".getBytes());\n            }\n            else if (actualFile.exists()) {\n                log.debug(\"Looks like it is an actual file and it exists.\");\n                newState = KickstartFactory.\n                    lookupSessionStateByLabel(KickstartSessionState.STARTED);\n\n            }\n            else {\n                log.error(diskPath + \" Not Found .. 404!\");\n                response.sendError(HttpServletResponse.SC_NOT_FOUND);\n                return getStreamForText(\"\".getBytes());\n            }\n\n        }\n        if (log.isDebugEnabled()) {\n            log.debug(\"Final path before returning getStreamForBinary(): \" + diskPath);\n        }\n        if (log.isDebugEnabled()) {\n            Enumeration e = request.getHeaderNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                log.debug(\"header: [\" + name + \"]: \" + request.getHeader(name));\n            }\n        }\n        if (request.getMethod().equals(\"HEAD\")) {\n            log.debug(\"Method is HEAD .. serving checksum\");\n            return manualServeChecksum(response, rpmPackage, diskPath);\n        }\n        else if (request.getHeader(\"Range\") != null) {\n            log.debug(\"range detected.  serving chunk of file\");\n            String range = request.getHeader(\"Range\");\n            return manualServeByteRange(request, response, diskPath, range);\n        }\n        // Update kickstart session\n        if (ksession != null) {\n            ksession.setState(newState);\n            if (ksession.getPackageFetchCount() == null) {\n                ksession.setPackageFetchCount(new Long(0));\n            }\n            if (ksession.getState().getLabel().equals(\n                    KickstartSessionState.IN_PROGRESS)) {\n                log.debug(\"Incrementing counter.\");\n                ksession.setPackageFetchCount(\n                        ksession.getPackageFetchCount().longValue() + 1);\n                ksession.setLastFileRequest(path);\n            }\n            log.debug(\"Saving session.\");\n            KickstartFactory.saveKickstartSession(ksession);\n        }\n        log.debug(\"returning getStreamForBinary\");\n\n        File actualFile = new File(diskPath);\n        Date mtime = new Date(actualFile.lastModified());\n        SimpleDateFormat formatter = new SimpleDateFormat(\n                \"EEE, dd MMM yyyy HH:mm:ss zzz\", Locale.US);\n        formatter.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n        response.addHeader(\"last-modified\", formatter.format(mtime));\n        response.addHeader(\"Content-Length\", String.valueOf(actualFile.length()));\n        log.debug(\"added last-modified and content-length values\");\n        return getStreamForBinary(diskPath);\n    }","id":39625,"modified_method":"private StreamInfo getStreamInfoKickstart(ActionMapping mapping, ActionForm form,\n            HttpServletRequest request, HttpServletResponse response,\n                String path) throws Exception {\n\n        Map params = (Map) request.getAttribute(PARAMS);\n        path = (String) params.get(FILENAME);\n        if (log.isDebugEnabled()) {\n            log.debug(\"getStreamInfo KICKSTART type, path: \" + path);\n        }\n        String diskPath = null;\n        String kickstartMount = Config.get().getString(ConfigDefaults.MOUNT_POINT);\n        String fileName;\n        KickstartSession ksession = (KickstartSession) params.get(SESSION);\n        KickstartSessionState newState = null;\n        KickstartableTree tree = (KickstartableTree) params.get(TREE);\n        Package rpmPackage = null;\n        Channel child = (Channel) params.get(CHILD);\n\n        if (tree.getBasePath().indexOf(kickstartMount) == 0) {\n            log.debug(\"Trimming mount because tree is\" +\n                \" explicitly rooted to the mount point\");\n            kickstartMount = \"\";\n        }\n        // If the tree is rooted somewhere other than\n        // /var/satellite then no need to prepend it.\n        if (tree.getBasePath().startsWith(\"/\")) {\n            log.debug(\"Tree isnt rooted at /var/satellite, lets just use basepath\");\n            kickstartMount = \"\";\n        }\n        // Searching for RPM\n        if (path.endsWith(\".rpm\")) {\n            String[] split = StringUtils.split(path, '/');\n            fileName = split[split.length - 1];\n            if (log.isDebugEnabled()) {\n                log.debug(\"RPM filename: \" + fileName);\n            }\n            Channel channel = tree.getChannel();\n            if (child != null) {\n                channel = child;\n            }\n\n            rpmPackage = ChannelFactory.lookupPackageByFilename(channel, fileName);\n            if (rpmPackage != null) {\n                diskPath = Config.get().getString(ConfigDefaults.MOUNT_POINT) + \"/\" +\n                    rpmPackage.getPath();\n                if (log.isDebugEnabled()) {\n                    log.debug(\"found package :: diskPath path: \" + diskPath);\n                }\n                newState = KickstartFactory.\n                    lookupSessionStateByLabel(KickstartSessionState.IN_PROGRESS);\n            }\n            else {\n                if (log.isDebugEnabled()) {\n                    log.debug(\"Package was not in channel, looking in distro path.\");\n                }\n            }\n        }\n        // either it's not an rpm, or we didn't find it in the channel\n        // check for dir pings, virt manager or install, bz #345721\n        if (diskPath == null) {\n            // my $dp = File::Spec->catfile($kickstart_mount, $tree->base_path, $path);\n\n            if (child == null) {\n                diskPath = kickstartMount + \"/\" + tree.getBasePath() + path;\n            }\n            else {\n                String[] split = StringUtils.split(path, '/');\n                if (split[0].equals(\"repodata\")) {\n                    split[0] = child.getLabel();\n                }\n                diskPath = \"/var/cache/\" +\n                    Config.get().getString(\"repomd_path_prefix\", \"rhn/repodata/\") + \"/\" +\n                    StringUtils.join(split, '/');\n            }\n\n            if (log.isDebugEnabled()) {\n                log.debug(\"DirCheck path: \" + diskPath);\n            }\n            File actualFile = new File(diskPath);\n            if (actualFile.exists() && actualFile.isDirectory()) {\n                log.debug(\"Directory hit.  just return 200\");\n                response.setContentLength(0);\n                response.setStatus(HttpServletResponse.SC_OK);\n                return getStreamForText(\"\".getBytes());\n            }\n            else if (actualFile.exists()) {\n                log.debug(\"Looks like it is an actual file and it exists.\");\n                newState = KickstartFactory.\n                    lookupSessionStateByLabel(KickstartSessionState.STARTED);\n\n            }\n            else {\n                log.error(diskPath + \" Not Found .. 404!\");\n                response.sendError(HttpServletResponse.SC_NOT_FOUND);\n                return getStreamForText(\"\".getBytes());\n            }\n\n        }\n        if (log.isDebugEnabled()) {\n            log.debug(\"Final path before returning getStreamForBinary(): \" + diskPath);\n        }\n        if (log.isDebugEnabled()) {\n            Enumeration e = request.getHeaderNames();\n            while (e.hasMoreElements()) {\n                String name = (String) e.nextElement();\n                log.debug(\"header: [\" + name + \"]: \" + request.getHeader(name));\n            }\n        }\n        if (request.getMethod().equals(\"HEAD\")) {\n            log.debug(\"Method is HEAD .. serving checksum\");\n            return manualServeChecksum(response, rpmPackage, diskPath);\n        }\n        else if (request.getHeader(\"Range\") != null) {\n            log.debug(\"range detected.  serving chunk of file\");\n            String range = request.getHeader(\"Range\");\n            return manualServeByteRange(request, response, diskPath, range);\n        }\n        // Update kickstart session\n        if (ksession != null) {\n            ksession.setState(newState);\n            if (ksession.getPackageFetchCount() == null) {\n                ksession.setPackageFetchCount(new Long(0));\n            }\n            if (ksession.getState().getLabel().equals(\n                    KickstartSessionState.IN_PROGRESS)) {\n                log.debug(\"Incrementing counter.\");\n                ksession.setPackageFetchCount(\n                        ksession.getPackageFetchCount().longValue() + 1);\n                ksession.setLastFileRequest(path);\n            }\n            log.debug(\"Saving session.\");\n            KickstartFactory.saveKickstartSession(ksession);\n        }\n        log.debug(\"returning getStreamForBinary\");\n\n        File actualFile = new File(diskPath);\n        Date mtime = new Date(actualFile.lastModified());\n        SimpleDateFormat formatter = new SimpleDateFormat(\n                \"EEE, dd MMM yyyy HH:mm:ss zzz\", Locale.US);\n        formatter.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n        setBinaryContentInfo(response, (int) actualFile.length());\n        response.addHeader(\"last-modified\", formatter.format(mtime));\n        log.debug(\"added last-modified and content-length values\");\n        return getStreamForBinary(diskPath);\n    }","commit_id":"a5e30664d5780c078e3a51ccc3c97cbaf275cb7a","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private StreamInfo manualServeChecksum(HttpServletResponse response,\n            Package rpmPackage, String diskPath) throws IOException {\n\n        response.setContentType(\"application/octet-stream\");\n        String checksum;\n        // Obtain the checksum for the file in question and stick it in the\n        // outgoing HTTP headers under \"X-RHN-Checksum\".\n        if (rpmPackage != null && rpmPackage.getChecksum() != null &&\n                    rpmPackage.getChecksum().getChecksum() != null) {\n            checksum = rpmPackage.getChecksum().getChecksum();\n            response.setHeader(\"Content-Length\",\n                String.valueOf(rpmPackage.getPackageSize()));\n        }\n        else {\n            File f = new File(diskPath);\n            if (!f.exists()) {\n                log.error(\"manualServeChecksum :: File not found: \" + diskPath);\n                response.sendError(HttpServletResponse.SC_NOT_FOUND);\n                return getStreamForText(new byte[0]);\n            }\n            checksum = MD5Sum.getFileMD5Sum(f);\n            response.setHeader(\"Content-Length\", String.valueOf(f.length()));\n        }\n        // Create some headers.\n        response.addHeader(\"X-RHN-Checksum\", checksum);\n        response.setStatus(HttpServletResponse.SC_OK);\n        return getStreamForText(\"\".getBytes());\n    }","id":39626,"modified_method":"private StreamInfo manualServeChecksum(HttpServletResponse response,\n            Package rpmPackage, String diskPath) throws IOException {\n\n        response.setContentType(CONTENT_TYPE_OCTET_STREAM);\n        String checksum;\n        // Obtain the checksum for the file in question and stick it in the\n        // outgoing HTTP headers under \"X-RHN-Checksum\".\n        if (rpmPackage != null && rpmPackage.getChecksum() != null &&\n                    rpmPackage.getChecksum().getChecksum() != null) {\n            checksum = rpmPackage.getChecksum().getChecksum();\n            response.setHeader(\"Content-Length\",\n                String.valueOf(rpmPackage.getPackageSize()));\n        }\n        else {\n            File f = new File(diskPath);\n            if (!f.exists()) {\n                log.error(\"manualServeChecksum :: File not found: \" + diskPath);\n                response.sendError(HttpServletResponse.SC_NOT_FOUND);\n                return getStreamForText(new byte[0]);\n            }\n            checksum = MD5Sum.getFileMD5Sum(f);\n            response.setHeader(\"Content-Length\", String.valueOf(f.length()));\n        }\n        // Create some headers.\n        response.addHeader(\"X-RHN-Checksum\", checksum);\n        response.setStatus(HttpServletResponse.SC_OK);\n        return getStreamForText(\"\".getBytes());\n    }","commit_id":"a5e30664d5780c078e3a51ccc3c97cbaf275cb7a","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private StreamInfo getStreamForBinary(String path) {\n        File file = new File(path);\n        FileStreamInfo stream = new FileStreamInfo(\"application/octet-stream\", file);\n        return stream;\n    }","id":39627,"modified_method":"private StreamInfo getStreamForBinary(String path) {\n        File file = new File(path);\n        FileStreamInfo stream = new FileStreamInfo(CONTENT_TYPE_OCTET_STREAM, file);\n        return stream;\n    }","commit_id":"a5e30664d5780c078e3a51ccc3c97cbaf275cb7a","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private StreamInfo manualServeByteRange(HttpServletRequest request,\n            HttpServletResponse response,\n            String diskPath, String range) {\n\n        // bytes=440-25183\n        String[] bytesheader = StringUtils.split(range, \"=\");\n        String[] ranges = StringUtils.split(bytesheader[1], \"-\");\n        long start = Long.valueOf(ranges[0]).longValue();\n        long end = Long.valueOf(ranges[1]).longValue();\n        if (log.isDebugEnabled()) {\n            log.debug(\"manualServeByteRange Start    : \" + start);\n            log.debug(\"manualServeByteRange End      : \" + end);\n        }\n        long size = end - start + 1;\n        File actualFile = new File(diskPath);\n        long totalSize = actualFile.length();\n\n        if (log.isDebugEnabled()) {\n            log.debug(\"manualServeByteRange totalsize: \" + totalSize);\n        }\n\n        if (size <= 0) {\n            return getStreamForBinary(diskPath);\n        }\n        response.setContentType(\"application/octet-stream\");\n        response.setStatus(HttpServletResponse.SC_PARTIAL_CONTENT);\n        Date mtime = new Date(actualFile.lastModified());\n        // \"EEE, dd MMM yyyy HH:mm:ss zzz\";\n        SimpleDateFormat formatter = new SimpleDateFormat(\n                \"EEE, dd MMM yyyy HH:mm:ss zzz\", Locale.US);\n        formatter.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n        String fdate = formatter.format(mtime);\n        response.addHeader(\"last-modified\", fdate);\n        response.addHeader(\"Content-Length\", String.valueOf(size));\n        response.addHeader(\"Content-Range\", \"bytes \" + start + \"-\" + end +\n                \"/\" + totalSize);\n        response.addHeader(\"Accept-Ranges\", \"bytes\");\n        if (log.isDebugEnabled()) {\n            log.debug(\"Added header last-modified: \" + fdate);\n            log.debug(\"Added header Content-Length: \" + String.valueOf(size));\n            log.debug(\"Added header Content-Range: \" + \"bytes \" + start +\n                    \"-\" + end + \"/\" + totalSize);\n            log.debug(\"Added header Accept-Ranges: bytes\");\n        }\n        // gotta make sure it is end + 1\n        byte[] chunk = FileUtils.readByteArrayFromFile(actualFile, start, end + 1);\n        if (log.isDebugEnabled()) {\n            log.debug(\"chunk size: \" + chunk.length);\n            log.debug(\"read chunk into byte array.  returning ByteArrayStreamInfo\");\n        }\n        ByteArrayStreamInfo stream = new\n            ByteArrayStreamInfo(\"application/octet-stream\", chunk);\n        return stream;\n    }","id":39628,"modified_method":"private StreamInfo manualServeByteRange(HttpServletRequest request,\n            HttpServletResponse response,\n            String diskPath, String range) {\n\n        // bytes=440-25183\n        String[] bytesheader = StringUtils.split(range, \"=\");\n        String[] ranges = StringUtils.split(bytesheader[1], \"-\");\n        long start = Long.valueOf(ranges[0]).longValue();\n        long end = Long.valueOf(ranges[1]).longValue();\n        if (log.isDebugEnabled()) {\n            log.debug(\"manualServeByteRange Start    : \" + start);\n            log.debug(\"manualServeByteRange End      : \" + end);\n        }\n        long size = end - start + 1;\n        File actualFile = new File(diskPath);\n        long totalSize = actualFile.length();\n\n        if (log.isDebugEnabled()) {\n            log.debug(\"manualServeByteRange totalsize: \" + totalSize);\n        }\n\n        if (size <= 0) {\n            return getStreamForBinary(diskPath);\n        }\n        setBinaryContentInfo(response, (int) size);\n        response.setStatus(HttpServletResponse.SC_PARTIAL_CONTENT);\n        Date mtime = new Date(actualFile.lastModified());\n        // \"EEE, dd MMM yyyy HH:mm:ss zzz\";\n        SimpleDateFormat formatter = new SimpleDateFormat(\n                \"EEE, dd MMM yyyy HH:mm:ss zzz\", Locale.US);\n        formatter.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n        String fdate = formatter.format(mtime);\n        response.addHeader(\"last-modified\", fdate);\n        response.addHeader(\"Content-Range\", \"bytes \" + start + \"-\" + end +\n                \"/\" + totalSize);\n        response.addHeader(\"Accept-Ranges\", \"bytes\");\n        if (log.isDebugEnabled()) {\n            log.debug(\"Added header last-modified: \" + fdate);\n            log.debug(\"Added header Content-Length: \" + String.valueOf(size));\n            log.debug(\"Added header Content-Range: \" + \"bytes \" + start +\n                    \"-\" + end + \"/\" + totalSize);\n            log.debug(\"Added header Accept-Ranges: bytes\");\n        }\n        // gotta make sure it is end + 1\n        byte[] chunk = FileUtils.readByteArrayFromFile(actualFile, start, end + 1);\n        if (log.isDebugEnabled()) {\n            log.debug(\"chunk size: \" + chunk.length);\n            log.debug(\"read chunk into byte array.  returning ByteArrayStreamInfo\");\n        }\n        ByteArrayStreamInfo stream = new\n            ByteArrayStreamInfo(CONTENT_TYPE_OCTET_STREAM, chunk);\n        return stream;\n    }","commit_id":"a5e30664d5780c078e3a51ccc3c97cbaf275cb7a","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"protected EObject createProxy(EObject obj, INode node, EReference eRef) {\n\t\tif (obj.eResource() == null)\n\t\t\tthrow new IllegalStateException(\"object must be contained in a resource\");\n\t\tfinal URI uri = obj.eResource().getURI();\n\t\tfinal URI encodedLink = uri.appendFragment(encoder.encode(obj, eRef, node));\n\t\tEClass referenceType = ecoreGenericsUtil.getReferenceType(eRef, obj.eClass());\n\t\tEClass instantiableType = instantiableSubTypes.get(referenceType);\n\t\tfinal EObject proxy = EcoreUtil.create(instantiableType);\n\t\t((InternalEObject) proxy).eSetProxyURI(encodedLink);\n\t\treturn proxy;\n\t}","id":39629,"modified_method":"protected EObject createProxy(EObject obj, INode node, EReference eRef) {\n\t\tfinal Resource resource = obj.eResource();\n\t\tif (resource == null)\n\t\t\tthrow new IllegalStateException(\"object must be contained in a resource\");\n\t\tfinal URI uri = resource.getURI();\n\t\tfinal URI encodedLink = uri.appendFragment(encoder.encode(obj, eRef, node));\n\t\tEClass referenceType = ecoreGenericsUtil.getReferenceType(eRef, obj.eClass());\n\t\tEClass instantiableType = instantiableSubTypes.get(referenceType);\n\t\tfinal EObject proxy = EcoreUtil.create(instantiableType);\n\t\t((InternalEObject) proxy).eSetProxyURI(encodedLink);\n\t\treturn proxy;\n\t}","commit_id":"e184540463e91e0447f5f939c19515b9180c16c5","url":"https://github.com/eclipse/xtext"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tpublic T parse(InputStream in, URI uriToUse, Map<?, ?> options, ResourceSet resourceSet) {\n\t\tResource resource = resourceFactory.createResource(uriToUse);\n\t\tresourceSet.getResources().add(resource);\n\t\ttry {\n\t\t\tresource.load(in, options);\n\t\t\tfinal T root = (T) (resource.getContents().isEmpty() ? null : resource.getContents().get(0));\n\t\t\treturn root;\n\t\t} catch (IOException e) {\n\t\t\tthrow new WrappedException(e);\n\t\t}\n\t}","id":39630,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tpublic T parse(InputStream in, URI uriToUse, Map<?, ?> options, ResourceSet resourceSet) {\n\t\tresourceHelper.setFileExtension(fileExtension);\n\t\tResource resource = resourceHelper.resource(in, uriToUse, options, resourceSet);\n\t\tfinal T root = (T) (resource.getContents().isEmpty() ? null : resource.getContents().get(0));\n\t\treturn root;\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected URI computeUnusedUri(ResourceSet resourceSet) {\n\t\tString name = \"__synthetic\";\n\t\tfor (int i = 0; i < Integer.MAX_VALUE; i++) {\n\t\t\tURI syntheticUri = URI.createURI(name + i + \".\" + fileExtension);\n\t\t\tif (resourceSet.getResource(syntheticUri, false) == null)\n\t\t\t\treturn syntheticUri;\n\t\t}\n\t\tthrow new IllegalStateException();\n\t}","id":39631,"modified_method":"protected URI computeUnusedUri(ResourceSet resourceSet) {\n\t\treturn resourceHelper.computeUnusedUri(resourceSet);\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected InputStream getAsStream(CharSequence text) {\n\t\treturn new LazyStringInputStream(text == null ? \"\" : text.toString());\n\t}","id":39632,"modified_method":"protected InputStream getAsStream(CharSequence text) {\n\t\treturn resourceHelper.getAsStream(text);\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"public T parse(CharSequence text) throws Exception {\n\t\treturn parse(text, resourceSetProvider.get());\n\t}","id":39633,"modified_method":"public T parse(CharSequence text) throws Exception {\n\t\treturn parse(text, resourceHelper.createResourceSet());\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"public List<Issue> validate(EObject model) {\n\t\tIResourceValidator validator = ((XtextResource) model.eResource()).getResourceServiceProvider()\n\t\t\t\t.getResourceValidator();\n\t\treturn validator.validate(model.eResource(), CheckMode.ALL, CancelIndicator.NullImpl);\n\t}","id":39634,"modified_method":"public List<Issue> validate(EObject model) {\n\t\treturn validate(model.eResource());\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"public void assertNoErrors(final EObject model) {\n\t\tfinal List<Issue> validate = validate(model);\n\t\tIterable<Issue> issues = filter(validate, new Predicate<Issue>() {\n\t\t\t@Override\n\t\t\tpublic boolean apply(Issue input) {\n\t\t\t\treturn Severity.ERROR == input.getSeverity();\n\t\t\t}\n\t\t});\n\t\tif (!isEmpty(issues))\n\t\t\tfail(\"Expected no errors, but got :\" + getIssuesAsString(model, issues, new StringBuilder()));\n\t}","id":39635,"modified_method":"public void assertNoErrors(final EObject model) {\n\t\tassertNoErrors(model.eResource());\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * @since 2.4\n\t */\n\tpublic void assertIssue(final EObject model, final EClass objectType, final String code, final int offset, final int length,  final Severity severity,\n\t\t\tfinal String... messageParts) {\n\t\tfinal List<Issue> allIssues = validate(model);\n\t\tfinal Iterable<Issue> validate = matchIssues(model, objectType, code, offset, length, severity, allIssues, messageParts);\n\t\tif (Iterables.isEmpty(validate)) {\n\t\t\tStringBuilder message = new StringBuilder(\"Expected \")\n\t\t\t\t.append(severity)\n\t\t\t\t.append(\" '\")\n\t\t\t\t.append(code)\n\t\t\t\t.append(\"' on \")\n\t\t\t\t.append(objectType.getName())\n\t\t\t\t.append(\" at [\")\n\t\t\t\t.append(offset)\n\t\t\t\t.append(\":\")\n\t\t\t\t.append(length)\n\t\t\t\t.append(\"] but got\\n\");\n\t\t\tgetIssuesAsString(model, allIssues, message);\n\t\t\tassertEquals(Joiner.on('\\n').join(messageParts), message.toString());\n\t\t\tfail(message.toString());\n\t\t}\n\t}","id":39636,"modified_method":"/**\n\t * @since 2.4\n\t */\n\tpublic void assertIssue(EObject model, EClass objectType, String issueCode, int offset, int length,  Severity severity,\n\t\t\tString... messageParts) {\n\t\tassertIssue(model.eResource(), objectType, issueCode, offset, length, severity, messageParts);\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * @since 2.4\n\t */\n\tpublic void assertNoIssues(final EObject root, final EClass objectType) {\n\t\tfinal List<Issue> validate = validate(root);\n\t\tIterable<Issue> issues = filter(validate, new Predicate<Issue>() {\n\t\t\t@Override\n\t\t\tpublic boolean apply(Issue input) {\n\t\t\t\tEObject object = root.eResource().getEObject(input.getUriToProblem().fragment());\n\t\t\t\tif (objectType.isInstance(object)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tif (!isEmpty(issues))\n\t\t\tfail(\"Expected no error on instances of  '\" + objectType.getName() + \"' but got \" + getIssuesAsString(root, issues, new StringBuilder()));\n\t}","id":39637,"modified_method":"/**\n\t * @since 2.4\n\t */\n\tpublic void assertNoIssues(final EObject model, final EClass objectType) {\n\t\tassertNoIssues(model.eResource(), objectType);\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * @since 2.4\n\t */\n\tprotected StringBuilder getIssuesAsString(final EObject model, final Iterable<Issue> issues, StringBuilder result) {\n\t\tfor (Issue issue : issues) {\n\t\t\tURI uri = issue.getUriToProblem();\n\t\t\tresult.append(issue.getSeverity());\n\t\t\tresult.append(\" (\");\n\t\t\tresult.append(issue.getCode());\n\t\t\tresult.append(\") '\");\n\t\t\tresult.append(issue.getMessage());\n\t\t\tresult.append(\"'\");\n\t\t\tif (uri != null) {\n\t\t\t\tEObject eObject = model.eResource().getResourceSet().getEObject(uri, true);\n\t\t\t\tresult.append(\" on \");\n\t\t\t\tresult.append(eObject.eClass().getName());\n\t\t\t}\n\t\t\tresult.append(\", offset \" + issue.getOffset() + \", length \" + issue.getLength());\n\t\t\tresult.append(\"\\n\");\n\t\t}\n\t\treturn result;\n\t}","id":39638,"modified_method":"/**\n\t * @since 2.4\n\t */\n\tprotected StringBuilder getIssuesAsString(final EObject model, final Iterable<Issue> issues, StringBuilder result) {\n\t\treturn doGetIssuesAsString(model.eResource(), issues, result);\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * @since 2.4\n\t */\n\tpublic void assertNoIssue(final EObject root, final EClass objectType, final String issuecode) {\n\t\tfinal List<Issue> validate = validate(root);\n\t\tIterable<Issue> issues = filter(validate, new Predicate<Issue>() {\n\t\t\t@Override\n\t\t\tpublic boolean apply(Issue input) {\n\t\t\t\tif (issuecode.equals(input.getCode())) {\n\t\t\t\t\tEObject object = root.eResource().getEObject(input.getUriToProblem().fragment());\n\t\t\t\t\tif (objectType.isInstance(object)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tif (!isEmpty(issues)) {\n\t\t\tfail(\"Expected no error '\" + issuecode + \"' but got \" + getIssuesAsString(root, issues, new StringBuilder()));\n\t\t}\n\t}","id":39639,"modified_method":"/**\n\t * @since 2.4\n\t */\n\tpublic void assertNoIssue(final EObject model, final EClass objectType, final String issueCode) {\n\t\tassertNoIssue(model.eResource(), objectType, issueCode);\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"public void assertNoIssues(final EObject model) {\n\t\tfinal List<Issue> validate = validate(model);\n\t\tif (!isEmpty(validate))\n\t\t\tfail(\"Expected no issues, but got :\" + getIssuesAsString(model, validate, new StringBuilder()));\n\t}","id":39640,"modified_method":"public void assertNoIssues(final EObject model) {\n\t\tassertNoIssues(model.eResource());\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * @since 2.4\n\t */\n\tprotected Iterable<Issue> matchIssues(final EObject model, final EClass objectType, final String code,\n\t\t\tfinal int offset, final int length, final Severity severity, final List<Issue> validate,\n\t\t\tfinal String... messageParts) {\n\t\treturn Iterables.filter(validate, new Predicate<Issue>() {\n\t\t\t@Override\n\t\t\tpublic boolean apply(Issue input) {\n\t\t\t\tif (Strings.equal(input.getCode(), code) && input.getSeverity()==severity) {\n\t\t\t\t\tif ((offset < 0 || offset == input.getOffset()) && (length < 0 || length == input.getLength())) {\n\t\t\t\t\t\tEObject object = model.eResource().getResourceSet().getEObject(input.getUriToProblem(), true);\n\t\t\t\t\t\tif (objectType.isInstance(object)) {\n\t\t\t\t\t\t\tfor (String messagePart : messageParts) {\n\t\t\t\t\t\t\t\tif (!input.getMessage().toLowerCase().contains(messagePart.toLowerCase())) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}","id":39641,"modified_method":"/**\n\t * @since 2.4\n\t */\n\tprotected Iterable<Issue> matchIssues(final EObject model, final EClass objectType, final String code,\n\t\t\tfinal int offset, final int length, final Severity severity, final List<Issue> validate,\n\t\t\tfinal String... messageParts) {\n\t\treturn doMatchIssues(model.eResource(), objectType, code, offset, length, severity, validate, messageParts);\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * @since 2.4\n\t */\n\tpublic void assertNoIssues(final EObject model, final EClass objectType, final String code, final int offset, final int length,  final Severity severity,\n\t\t\tfinal String... messageParts) {\n\t\tfinal List<Issue> allIssues = validate(model);\n\t\tfinal Iterable<Issue> validate = matchIssues(model, objectType, code, offset, length, severity, allIssues, messageParts);\n\t\tif (!Iterables.isEmpty(validate)) {\n\t\t\tStringBuilder message = new StringBuilder(\"Expected no \")\n\t\t\t\t.append(severity)\n\t\t\t\t.append(\" '\")\n\t\t\t\t.append(code)\n\t\t\t\t.append(\"' on \")\n\t\t\t\t.append(objectType.getName())\n\t\t\t\t.append(\" but got\\n\");\n\t\t\tgetIssuesAsString(model, allIssues, message);\n\t\t\tassertEquals(Joiner.on('\\n').join(messageParts), message.toString());\n\t\t\tfail(message.toString());\n\t\t}\n\t}","id":39642,"modified_method":"/**\n\t * @since 2.4\n\t */\n\tpublic void assertNoIssues(EObject model, EClass objectType, String issueCode, int offset, int length,  Severity severity,\n\t\t\tString... messageParts) {\n\t\tassertNoIssues(model.eResource(), objectType, issueCode, offset, length, severity, messageParts);\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"public void assertNoError(final EObject model, final String issuecode) {\n\t\tfinal List<Issue> validate = validate(model);\n\t\tIterable<Issue> issues = filter(validate, new Predicate<Issue>() {\n\t\t\t@Override\n\t\t\tpublic boolean apply(Issue input) {\n\t\t\t\treturn issuecode.equals(input.getCode());\n\t\t\t}\n\t\t});\n\t\tif (!isEmpty(issues))\n\t\t\tfail(\"Expected no error '\" + issuecode + \"' but got \" + getIssuesAsString(model, issues, new StringBuilder()));\n\t}","id":39643,"modified_method":"public void assertNoError(final EObject model, final String issueCode) {\n\t\tassertNoError(model.eResource(), issueCode);\n\t}","commit_id":"75bdcce29dcf34e7f97760aeacf6f053bafd3a1c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected static ILocationData createLocationData(ITraceURIConverter converter, EObject object, ITextRegionWithLineInformation textRegion) {\n\t\tURI uri = null;\n\t\tif (object.eResource() instanceof XtextResource)\n\t\t\turi = converter.getURIForTrace((XtextResource) object.eResource());\n\t\tILocationData newData = new LocationData(textRegion, uri);\n\t\treturn newData;\n\t}","id":39644,"modified_method":"protected static ILocationData createLocationData(ITraceURIConverter converter, EObject object, ITextRegionWithLineInformation textRegion) {\n\t\tURI uri = null;\n\t\tResource resource = object.eResource();\n\t\tif (resource instanceof XtextResource) {\n\t\t\turi = converter.getURIForTrace((XtextResource) resource);\n\t\t}\n\t\tILocationData newData = new LocationData(textRegion, uri);\n\t\treturn newData;\n\t}","commit_id":"72c319c245220818623d20979159ff4d275fb2f5","url":"https://github.com/eclipse/xtext"},{"original_method":"protected TreeAppendable(SharedAppendableState state,\n\t\t\tITraceURIConverter converter,\n\t\t\tILocationInFileProvider locationProvider,\n\t\t\tIJvmModelAssociations jvmModelAssociations,\n\t\t\tSet<ILocationData> sourceLocations, \n\t\t\tboolean useForDebugging) {\n\t\tthis.state = state;\n\t\tthis.traceURIConverter = converter;\n\t\tthis.locationProvider = locationProvider;\n\t\tthis.jvmModelAssociations = jvmModelAssociations;\n\t\tthis.children = Lists.newArrayList();\n\t\tthis.locationData = sourceLocations;\n\t\tthis.useForDebugging = useForDebugging;\n\t\tthis.lightweightTypeReferenceSerializer = createLightweightTypeReferenceSerializer();\n\t}","id":39645,"modified_method":"protected TreeAppendable(SharedAppendableState state,\n\t\t\tfinal ITraceURIConverter converter,\n\t\t\tILocationInFileProvider locationProvider,\n\t\t\tIJvmModelAssociations jvmModelAssociations,\n\t\t\tSet<ILocationData> sourceLocations, \n\t\t\tboolean useForDebugging) {\n\t\tthis.state = state;\n\t\tthis.traceURIConverter = new ITraceURIConverter() {\n\t\t\t\n\t\t\tprivate Map<XtextResource, URI> uriForTraceCache = newHashMap();\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic URI getURIForTrace(URI uri) {\n\t\t\t\treturn converter.getURIForTrace(uri);\n\t\t\t}\n\t\t\t\n\t\t\t@Override\n\t\t\tpublic URI getURIForTrace(XtextResource context) {\n\t\t\t\tif (!uriForTraceCache.containsKey(context)) {\n\t\t\t\t\tURI uriForTrace = converter.getURIForTrace(context);\n\t\t\t\t\turiForTraceCache.put(context, uriForTrace);\n\t\t\t\t}\n\t\t\t\treturn uriForTraceCache.get(context);\n\t\t\t}\n\t\t};\n\t\tthis.locationProvider = locationProvider;\n\t\tthis.jvmModelAssociations = jvmModelAssociations;\n\t\tthis.children = Lists.newArrayList();\n\t\tthis.locationData = sourceLocations;\n\t\tthis.useForDebugging = useForDebugging;\n\t\tthis.lightweightTypeReferenceSerializer = createLightweightTypeReferenceSerializer();\n\t}","commit_id":"72c319c245220818623d20979159ff4d275fb2f5","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public Iterable<QualifiedName> getImportedNames() {\n    final HashSet<QualifiedName> result = CollectionLiterals.<QualifiedName>newHashSet();\n    Resource _resource = this.getResource();\n    EList<EObject> _contents = _resource.getContents();\n    final EObject astRoot = IterableExtensions.<EObject>head(_contents);\n    boolean _notEquals = (!Objects.equal(astRoot, null));\n    if (_notEquals) {\n      final IResolvedTypes types = this.typeResolver.resolveTypes(astRoot);\n      TreeIterator<Object> _allContents = EcoreUtil.<Object>getAllContents(astRoot, true);\n      Iterable<Object> _iterable = IteratorExtensions.<Object>toIterable(_allContents);\n      Iterable<XExpression> _filter = Iterables.<XExpression>filter(_iterable, XExpression.class);\n      for (final XExpression expression : _filter) {\n        {\n          boolean _matched = false;\n          if (!_matched) {\n            if (expression instanceof XMemberFeatureCall) {\n              boolean _and = false;\n              boolean _and_1 = false;\n              JvmIdentifiableElement _feature = ((XMemberFeatureCall)expression).getFeature();\n              boolean _notEquals_1 = (!Objects.equal(_feature, null));\n              if (!_notEquals_1) {\n                _and_1 = false;\n              } else {\n                JvmIdentifiableElement _feature_1 = ((XMemberFeatureCall)expression).getFeature();\n                boolean _eIsProxy = _feature_1.eIsProxy();\n                _and_1 = _eIsProxy;\n              }\n              if (!_and_1) {\n                _and = false;\n              } else {\n                boolean _isExplicitOperationCallOrBuilderSyntax = ((XMemberFeatureCall)expression).isExplicitOperationCallOrBuilderSyntax();\n                boolean _not = (!_isExplicitOperationCallOrBuilderSyntax);\n                _and = _not;\n              }\n              if (_and) {\n                _matched=true;\n                final XExpression receiver = ((XMemberFeatureCall)expression).getActualReceiver();\n                boolean _matched_1 = false;\n                if (!_matched_1) {\n                  if (receiver instanceof XAbstractFeatureCall) {\n                    boolean _isTypeLiteral = ((XAbstractFeatureCall)receiver).isTypeLiteral();\n                    if (_isTypeLiteral) {\n                      _matched_1=true;\n                      final JvmIdentifiableElement type = ((XAbstractFeatureCall)receiver).getFeature();\n                      String _identifier = type.getIdentifier();\n                      String _plus = (_identifier + \"$\");\n                      String _concreteSyntaxFeatureName = ((XMemberFeatureCall)expression).getConcreteSyntaxFeatureName();\n                      String _plus_1 = (_plus + _concreteSyntaxFeatureName);\n                      QualifiedName _qualifiedName = this.nameConverter.toQualifiedName(_plus_1);\n                      QualifiedName _lowerCase = _qualifiedName.toLowerCase();\n                      result.add(_lowerCase);\n                    }\n                  }\n                }\n              }\n            }\n          }\n          if (!_matched) {\n            if (expression instanceof XAbstractFeatureCall) {\n              boolean _isTypeLiteral = ((XAbstractFeatureCall)expression).isTypeLiteral();\n              if (_isTypeLiteral) {\n                _matched=true;\n                final JvmIdentifiableElement type = ((XAbstractFeatureCall)expression).getFeature();\n                if ((type instanceof JvmDeclaredType)) {\n                  final Function1<String, Boolean> _function = new Function1<String, Boolean>() {\n                    @Override\n                    public Boolean apply(final String it) {\n                      QualifiedName _qualifiedName = XtendResourceDescription.this.nameConverter.toQualifiedName(it);\n                      QualifiedName _lowerCase = _qualifiedName.toLowerCase();\n                      return Boolean.valueOf(result.add(_lowerCase));\n                    }\n                  };\n                  this.registerAllTypes(((JvmType)type), _function);\n                }\n              }\n            }\n          }\n          final LightweightTypeReference typeRef = types.getActualType(expression);\n          boolean _notEquals_1 = (!Objects.equal(typeRef, null));\n          if (_notEquals_1) {\n            JvmType _type = typeRef.getType();\n            final Function1<String, Boolean> _function = new Function1<String, Boolean>() {\n              @Override\n              public Boolean apply(final String it) {\n                QualifiedName _qualifiedName = XtendResourceDescription.this.nameConverter.toQualifiedName(it);\n                QualifiedName _lowerCase = _qualifiedName.toLowerCase();\n                return Boolean.valueOf(result.add(_lowerCase));\n              }\n            };\n            this.registerAllTypes(_type, _function);\n          }\n        }\n      }\n      Resource _resource_1 = this.getResource();\n      EList<EObject> _contents_1 = _resource_1.getContents();\n      for (final EObject eobject : _contents_1) {\n        {\n          TreeIterator<Object> _allContents_1 = EcoreUtil.<Object>getAllContents(eobject, true);\n          Iterator<JvmIdentifiableElement> _filter_1 = Iterators.<JvmIdentifiableElement>filter(_allContents_1, JvmIdentifiableElement.class);\n          final Function1<JvmIdentifiableElement, LightweightTypeReference> _function = new Function1<JvmIdentifiableElement, LightweightTypeReference>() {\n            @Override\n            public LightweightTypeReference apply(final JvmIdentifiableElement it) {\n              LightweightTypeReference _xifexpression = null;\n              boolean _or = false;\n              if ((!(it instanceof JvmType))) {\n                _or = true;\n              } else {\n                _or = (it instanceof JvmDeclaredType);\n              }\n              if (_or) {\n                _xifexpression = types.getActualType(it);\n              }\n              return _xifexpression;\n            }\n          };\n          Iterator<LightweightTypeReference> _map = IteratorExtensions.<JvmIdentifiableElement, LightweightTypeReference>map(_filter_1, _function);\n          final Iterable<LightweightTypeReference> typesOfIdentifiables = IteratorExtensions.<LightweightTypeReference>toIterable(_map);\n          for (final LightweightTypeReference typeRef : typesOfIdentifiables) {\n            boolean _notEquals_1 = (!Objects.equal(typeRef, null));\n            if (_notEquals_1) {\n              JvmType _type = typeRef.getType();\n              final Function1<String, Boolean> _function_1 = new Function1<String, Boolean>() {\n                @Override\n                public Boolean apply(final String it) {\n                  QualifiedName _qualifiedName = XtendResourceDescription.this.nameConverter.toQualifiedName(it);\n                  QualifiedName _lowerCase = _qualifiedName.toLowerCase();\n                  return Boolean.valueOf(result.add(_lowerCase));\n                }\n              };\n              this.registerAllTypes(_type, _function_1);\n            }\n          }\n        }\n      }\n    }\n    Iterable<QualifiedName> _importedNames = super.getImportedNames();\n    Iterables.<QualifiedName>addAll(result, _importedNames);\n    final Function1<QualifiedName, Boolean> _function = new Function1<QualifiedName, Boolean>() {\n      @Override\n      public Boolean apply(final QualifiedName it) {\n        String _lastSegment = it.getLastSegment();\n        boolean _contains = XtendResourceDescription.primitivesFilter.contains(_lastSegment);\n        return Boolean.valueOf((!_contains));\n      }\n    };\n    Iterable<QualifiedName> _filter_1 = IterableExtensions.<QualifiedName>filter(result, _function);\n    final Set<QualifiedName> finalResult = IterableExtensions.<QualifiedName>toSet(_filter_1);\n    return finalResult;\n  }","id":39646,"modified_method":"@Override\n  public Iterable<QualifiedName> getImportedNames() {\n    boolean _notEquals = (!Objects.equal(this.importedNames, null));\n    if (_notEquals) {\n      return this.importedNames;\n    }\n    final HashSet<QualifiedName> result = CollectionLiterals.<QualifiedName>newHashSet();\n    Resource _resource = this.getResource();\n    EList<EObject> _contents = _resource.getContents();\n    final EObject astRoot = IterableExtensions.<EObject>head(_contents);\n    boolean _notEquals_1 = (!Objects.equal(astRoot, null));\n    if (_notEquals_1) {\n      final IResolvedTypes types = this.typeResolver.resolveTypes(astRoot);\n      TreeIterator<Object> _allContents = EcoreUtil.<Object>getAllContents(astRoot, true);\n      Iterable<Object> _iterable = IteratorExtensions.<Object>toIterable(_allContents);\n      Iterable<XExpression> _filter = Iterables.<XExpression>filter(_iterable, XExpression.class);\n      for (final XExpression expression : _filter) {\n        {\n          boolean _matched = false;\n          if (!_matched) {\n            if (expression instanceof XMemberFeatureCall) {\n              boolean _and = false;\n              boolean _and_1 = false;\n              JvmIdentifiableElement _feature = ((XMemberFeatureCall)expression).getFeature();\n              boolean _notEquals_2 = (!Objects.equal(_feature, null));\n              if (!_notEquals_2) {\n                _and_1 = false;\n              } else {\n                JvmIdentifiableElement _feature_1 = ((XMemberFeatureCall)expression).getFeature();\n                boolean _eIsProxy = _feature_1.eIsProxy();\n                _and_1 = _eIsProxy;\n              }\n              if (!_and_1) {\n                _and = false;\n              } else {\n                boolean _isExplicitOperationCallOrBuilderSyntax = ((XMemberFeatureCall)expression).isExplicitOperationCallOrBuilderSyntax();\n                boolean _not = (!_isExplicitOperationCallOrBuilderSyntax);\n                _and = _not;\n              }\n              if (_and) {\n                _matched=true;\n                final XExpression receiver = ((XMemberFeatureCall)expression).getActualReceiver();\n                boolean _matched_1 = false;\n                if (!_matched_1) {\n                  if (receiver instanceof XAbstractFeatureCall) {\n                    boolean _isTypeLiteral = ((XAbstractFeatureCall)receiver).isTypeLiteral();\n                    if (_isTypeLiteral) {\n                      _matched_1=true;\n                      final JvmIdentifiableElement type = ((XAbstractFeatureCall)receiver).getFeature();\n                      String _identifier = type.getIdentifier();\n                      String _plus = (_identifier + \"$\");\n                      String _concreteSyntaxFeatureName = ((XMemberFeatureCall)expression).getConcreteSyntaxFeatureName();\n                      String _plus_1 = (_plus + _concreteSyntaxFeatureName);\n                      QualifiedName _qualifiedName = this.nameConverter.toQualifiedName(_plus_1);\n                      QualifiedName _lowerCase = _qualifiedName.toLowerCase();\n                      result.add(_lowerCase);\n                    }\n                  }\n                }\n              }\n            }\n          }\n          if (!_matched) {\n            if (expression instanceof XAbstractFeatureCall) {\n              boolean _isTypeLiteral = ((XAbstractFeatureCall)expression).isTypeLiteral();\n              if (_isTypeLiteral) {\n                _matched=true;\n                final JvmIdentifiableElement type = ((XAbstractFeatureCall)expression).getFeature();\n                if ((type instanceof JvmDeclaredType)) {\n                  final Function1<String, Boolean> _function = new Function1<String, Boolean>() {\n                    @Override\n                    public Boolean apply(final String it) {\n                      QualifiedName _qualifiedName = XtendResourceDescription.this.nameConverter.toQualifiedName(it);\n                      QualifiedName _lowerCase = _qualifiedName.toLowerCase();\n                      return Boolean.valueOf(result.add(_lowerCase));\n                    }\n                  };\n                  this.registerAllTypes(((JvmType)type), _function);\n                }\n              }\n            }\n          }\n          final LightweightTypeReference typeRef = types.getActualType(expression);\n          boolean _notEquals_2 = (!Objects.equal(typeRef, null));\n          if (_notEquals_2) {\n            JvmType _type = typeRef.getType();\n            final Function1<String, Boolean> _function = new Function1<String, Boolean>() {\n              @Override\n              public Boolean apply(final String it) {\n                QualifiedName _qualifiedName = XtendResourceDescription.this.nameConverter.toQualifiedName(it);\n                QualifiedName _lowerCase = _qualifiedName.toLowerCase();\n                return Boolean.valueOf(result.add(_lowerCase));\n              }\n            };\n            this.registerAllTypes(_type, _function);\n          }\n        }\n      }\n      Resource _resource_1 = this.getResource();\n      EList<EObject> _contents_1 = _resource_1.getContents();\n      for (final EObject eobject : _contents_1) {\n        {\n          TreeIterator<Object> _allContents_1 = EcoreUtil.<Object>getAllContents(eobject, true);\n          Iterator<JvmIdentifiableElement> _filter_1 = Iterators.<JvmIdentifiableElement>filter(_allContents_1, JvmIdentifiableElement.class);\n          final Function1<JvmIdentifiableElement, LightweightTypeReference> _function = new Function1<JvmIdentifiableElement, LightweightTypeReference>() {\n            @Override\n            public LightweightTypeReference apply(final JvmIdentifiableElement it) {\n              LightweightTypeReference _xifexpression = null;\n              boolean _or = false;\n              if ((!(it instanceof JvmType))) {\n                _or = true;\n              } else {\n                _or = (it instanceof JvmDeclaredType);\n              }\n              if (_or) {\n                _xifexpression = types.getActualType(it);\n              }\n              return _xifexpression;\n            }\n          };\n          Iterator<LightweightTypeReference> _map = IteratorExtensions.<JvmIdentifiableElement, LightweightTypeReference>map(_filter_1, _function);\n          final Iterable<LightweightTypeReference> typesOfIdentifiables = IteratorExtensions.<LightweightTypeReference>toIterable(_map);\n          for (final LightweightTypeReference typeRef : typesOfIdentifiables) {\n            boolean _notEquals_2 = (!Objects.equal(typeRef, null));\n            if (_notEquals_2) {\n              JvmType _type = typeRef.getType();\n              final Function1<String, Boolean> _function_1 = new Function1<String, Boolean>() {\n                @Override\n                public Boolean apply(final String it) {\n                  QualifiedName _qualifiedName = XtendResourceDescription.this.nameConverter.toQualifiedName(it);\n                  QualifiedName _lowerCase = _qualifiedName.toLowerCase();\n                  return Boolean.valueOf(result.add(_lowerCase));\n                }\n              };\n              this.registerAllTypes(_type, _function_1);\n            }\n          }\n        }\n      }\n    }\n    Iterable<QualifiedName> _importedNames = super.getImportedNames();\n    Iterables.<QualifiedName>addAll(result, _importedNames);\n    final Function1<QualifiedName, Boolean> _function = new Function1<QualifiedName, Boolean>() {\n      @Override\n      public Boolean apply(final QualifiedName it) {\n        String _lastSegment = it.getLastSegment();\n        boolean _contains = XtendResourceDescription.primitivesFilter.contains(_lastSegment);\n        return Boolean.valueOf((!_contains));\n      }\n    };\n    Iterable<QualifiedName> _filter_1 = IterableExtensions.<QualifiedName>filter(result, _function);\n    Set<QualifiedName> _set = IterableExtensions.<QualifiedName>toSet(_filter_1);\n    this.importedNames = _set;\n    return this.importedNames;\n  }","commit_id":"72c319c245220818623d20979159ff4d275fb2f5","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testGetModel_05() throws Exception {\n\t\tString model = \"Model containment C containment C reference C\";\n\t\tgetModelAndExpect(model, 1);\n\t}","id":39647,"modified_method":"public void testGetModel_05() throws Exception {\n\t\tString model = \"Model containment C containment C reference C\";\n\t\tgetModelAndExpect(model, 0);\n\t}","commit_id":"028da081e1aef16ff3bf824ab7384894e3019048","url":"https://github.com/eclipse/xtext"},{"original_method":"public IScope getScope(EObject context, final EReference reference) {\n\t\tfinal IResourceDescription resourceDescription = getResourceDescription(context.eResource());\n\t\tif (resourceDescription == null) {\n\t\t\treturn getGlobalScope(context, reference);\n\t\t}\n\t\treturn new ResourceDescriptionBasedScope(getGlobalScope(context, reference), resourceDescription, reference.getEReferenceType());\n\t}","id":39648,"modified_method":"public IScope getScope(final EObject context, final EReference reference) {\n\t\tMap<String, IEObjectDescription> map = cache.get(Tuples.pair(SimpleLocalScopeProvider.class.getName(),\n\t\t\t\treference), context.eResource(), new Provider<Map<String, IEObjectDescription>>() {\n\n\t\t\tpublic Map<String, IEObjectDescription> get() {\n\t\t\t\tTreeIterator<EObject> iterator = context.eResource().getAllContents();\n\t\t\t\tMap<String, IEObjectDescription> result = Maps.newHashMap();\n\t\t\t\twhile (iterator.hasNext()) {\n\t\t\t\t\tEObject next = iterator.next();\n\t\t\t\t\tif (reference.getEReferenceType().isInstance(next)) {\n\t\t\t\t\t\tString name = nameProvider.getQualifiedName(next);\n\t\t\t\t\t\tif (name != null && !result.containsKey(name)) {\n\t\t\t\t\t\t\tEObjectDescription description = createEObjectDescription(next, name);\n\t\t\t\t\t\t\tif (description != null)\n\t\t\t\t\t\t\t\tresult.put(name, description);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t});\n\t\treturn new MapBasedScope(getGlobalScope(context, reference), map);\n\t}","commit_id":"028da081e1aef16ff3bf824ab7384894e3019048","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testLoadModelWithLinkingErrors() throws Exception {\n\t\tStringBuilder modelBuilder = new StringBuilder(NUM_ELEMENTS * 64);\n\t\tmodelBuilder.append(\"spielplatz \" + NUM_ELEMENTS + \" {\\n\");\n\t\tfor (int i = 1; i <= NUM_ELEMENTS; i++) {\n\t\t\tmodelBuilder.append(\"  kind (Bob \" + i + \")\\n\");\n\t\t\tmodelBuilder.append(\"  kind (Joe \" + i + \")\\n\");\n\t\t\tmodelBuilder.append(\"  erwachsener (Mutter \" + i + \")\\n\");\n\t\t\tmodelBuilder.append(\"  erwachsener (Vater \" + i + \")\\n\");\n\t\t\tmodelBuilder.append(\"  familie(Familie\" + i + \" Vater Mutter Bob, Joe)\\n\");\n\t\t}\n\t\tmodelBuilder.append('}');\n\t\tmodel = modelBuilder.toString();\n\t\tXtextResource resource = getResourceFromStringAndExpect(model, 4 * NUM_ELEMENTS);\n\t\tassertNotNull(resource);\n\t\tassertTrue(resource.getParseResult().getParseErrors().isEmpty());\n\t\tassertEquals(4 * NUM_ELEMENTS, resource.getErrors().size());\n\t}","id":39649,"modified_method":"public void testLoadModelWithLinkingErrors() throws Exception {\n\t\tStringBuilder modelBuilder = new StringBuilder(NUM_ELEMENTS * 64);\n\t\tmodelBuilder.append(\"spielplatz \" + NUM_ELEMENTS + \" {\\n\");\n\t\tfor (int i = 1; i <= NUM_ELEMENTS; i++) {\n\t\t\tmodelBuilder.append(\"  kind (Bob\" + i + \" \" + i + \")\\n\");\n\t\t\tmodelBuilder.append(\"  kind (Joe\" + i + \" \" + i + \")\\n\");\n\t\t\tmodelBuilder.append(\"  erwachsener (Mutter\" + i + \" \" + i + \")\\n\");\n\t\t\tmodelBuilder.append(\"  erwachsener (Vater\" + i + \" \" + i + \")\\n\");\n\t\t\tmodelBuilder.append(\"  familie(Familie\" + i + \" Vater Mutter Bob, Joe)\\n\");\n\t\t}\n\t\tmodelBuilder.append('}');\n\t\tmodel = modelBuilder.toString();\n\t\tXtextResource resource = getResourceFromStringAndExpect(model, 4 * NUM_ELEMENTS);\n\t\tassertNotNull(resource);\n\t\tassertTrue(resource.getParseResult().getParseErrors().isEmpty());\n\t\tassertEquals(4 * NUM_ELEMENTS, resource.getErrors().size());\n\t}","commit_id":"028da081e1aef16ff3bf824ab7384894e3019048","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n    public void handleInsert(InsertionContext context) {\n      context.getDocument().replaceString(context.getStartOffset(), context.getTailOffset(), getInsertString());\n      context.commitDocument();\n      \n      PsiMethodCallExpression call =\n        PsiTreeUtil.findElementOfClassAtOffset(context.getFile(), context.getStartOffset(), PsiMethodCallExpression.class, false);\n      if (call == null) return;\n\n      PsiExpression[] args = call.getArgumentList().getExpressions();\n      if (args.length != 1 || !(args[0] instanceof PsiMethodCallExpression)) return;\n\n      JavaCodeStyleManager.getInstance(context.getProject()).shortenClassReferences(args[0]);\n    }","id":39650,"modified_method":"@Override\n    public void handleInsert(InsertionContext context) {\n      context.getDocument().replaceString(context.getStartOffset(), context.getTailOffset(), getInsertString());\n      context.commitDocument();\n      \n      PsiMethodCallExpression call =\n        PsiTreeUtil.findElementOfClassAtOffset(context.getFile(), context.getStartOffset(), PsiMethodCallExpression.class, false);\n      if (call == null) return;\n\n      PsiExpression[] args = call.getArgumentList().getExpressions();\n      if (args.length != 1 || !(args[0] instanceof PsiMethodCallExpression)) return;\n\n      PsiMethodCallExpression innerCall = (PsiMethodCallExpression)args[0];\n      PsiMethod collectorMethod = innerCall.resolveMethod();\n      if (collectorMethod != null && collectorMethod.getParameterList().getParametersCount() > 0) {\n        context.getEditor().getCaretModel().moveToOffset(innerCall.getArgumentList().getFirstChild().getTextRange().getEndOffset());\n      }\n\n      JavaCodeStyleManager.getInstance(context.getProject()).shortenClassReferences(innerCall);\n    }","commit_id":"473384bbf6df4ab5546844673b58991c815f3103","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"static void addCollectConversion(PsiReferenceExpression ref, Collection<ExpectedTypeInfo> expectedTypes, Consumer<LookupElement> consumer) {\n    final PsiExpression qualifier = ref.getQualifierExpression();\n    PsiType component = qualifier == null ? null : PsiUtil.substituteTypeParameter(qualifier.getType(), JAVA_UTIL_STREAM_STREAM, 0, true);\n    if (component == null) return;\n\n    JavaPsiFacade facade = JavaPsiFacade.getInstance(ref.getProject());\n    GlobalSearchScope scope = ref.getResolveScope();\n    PsiClass list = facade.findClass(JAVA_UTIL_LIST, scope);\n    PsiClass set = facade.findClass(JAVA_UTIL_SET, scope);\n    if (facade.findClass(JAVA_UTIL_STREAM_COLLECTORS, scope) == null || list == null || set == null) return;\n\n    boolean hasList = false;\n    boolean hasSet = false;\n    for (ExpectedTypeInfo info : expectedTypes) {\n      PsiType type = info.getDefaultType();\n      PsiClass expectedClass = PsiUtil.resolveClassInClassTypeOnly(type);\n      PsiType expectedComponent = PsiUtil.extractIterableTypeParameter(type, true);\n      if (expectedClass == null || expectedComponent == null || !TypeConversionUtil.isAssignable(expectedComponent, component)) continue;\n\n      if (!hasList && InheritanceUtil.isInheritorOrSelf(list, expectedClass, true)) {\n        hasList = true;\n        consumer.consume(new MyLookupElement(\"toList\", type));\n      }\n\n      if (!hasSet && InheritanceUtil.isInheritorOrSelf(set, expectedClass, true)) {\n        hasSet = true;\n        consumer.consume(new MyLookupElement(\"toSet\", type));\n      }\n\n    }\n  }","id":39651,"modified_method":"static void addCollectConversion(PsiReferenceExpression ref, Collection<ExpectedTypeInfo> expectedTypes, Consumer<LookupElement> consumer) {\n    final PsiExpression qualifier = ref.getQualifierExpression();\n    PsiType component = qualifier == null ? null : PsiUtil.substituteTypeParameter(qualifier.getType(), JAVA_UTIL_STREAM_STREAM, 0, true);\n    if (component == null) return;\n\n    JavaPsiFacade facade = JavaPsiFacade.getInstance(ref.getProject());\n    PsiElementFactory factory = facade.getElementFactory();\n    GlobalSearchScope scope = ref.getResolveScope();\n    PsiClass list = facade.findClass(JAVA_UTIL_LIST, scope);\n    PsiClass set = facade.findClass(JAVA_UTIL_SET, scope);\n    PsiClass collection = facade.findClass(JAVA_UTIL_COLLECTION, scope);\n    if (facade.findClass(JAVA_UTIL_STREAM_COLLECTORS, scope) == null || list == null || set == null || collection == null) return;\n\n    PsiType listType = null;\n    PsiType setType = null;\n    boolean hasIterable = false;\n    for (ExpectedTypeInfo info : expectedTypes) {\n      PsiType type = info.getDefaultType();\n      PsiClass expectedClass = PsiUtil.resolveClassInClassTypeOnly(type);\n      PsiType expectedComponent = PsiUtil.extractIterableTypeParameter(type, true);\n      if (expectedClass == null || expectedComponent == null || !TypeConversionUtil.isAssignable(expectedComponent, component)) continue;\n      hasIterable = true;\n\n      if (InheritanceUtil.isInheritorOrSelf(list, expectedClass, true)) {\n        listType = type;\n      }\n      if (InheritanceUtil.isInheritorOrSelf(set, expectedClass, true)) {\n        setType = type;\n      }\n    }\n\n    if (expectedTypes.isEmpty()) {\n      listType = factory.createType(list, component);\n      setType = factory.createType(set, component);\n    }\n\n    if (listType != null) {\n      consumer.consume(new MyLookupElement(\"toList\", listType));\n    }\n    if (setType != null) {\n      consumer.consume(new MyLookupElement(\"toSet\", setType));\n    }\n\n    if (expectedTypes.isEmpty() || hasIterable) {\n      consumer.consume(new MyLookupElement(\"toCollection\", factory.createType(collection, component)));\n    }\n  }","commit_id":"473384bbf6df4ab5546844673b58991c815f3103","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private PsiImportStatementBase findImport(PsiMember member, List<PsiImportStatementBase> importStatements) {\n    final String qualifiedName;\n    final String packageName;\n    final PsiClass containingClass = member.getContainingClass();\n    if (member instanceof PsiClass) {\n      final PsiClass referencedClass = (PsiClass)member;\n      qualifiedName = referencedClass.getQualifiedName();\n      packageName = qualifiedName != null ? StringUtil.getPackageName(qualifiedName) : null;\n    }\n    else {\n      if (!member.hasModifierProperty(PsiModifier.STATIC) || containingClass == null) {\n        return null;\n      }\n      packageName = containingClass.getQualifiedName();\n      qualifiedName = packageName + '.' + member.getName();\n    }\n    if (packageName == null) {\n      return null;\n    }\n    final boolean hasOnDemandImportConflict = ImportUtils.hasOnDemandImportConflict(qualifiedName, myFile);\n    for (PsiImportStatementBase importStatement : importStatements) {\n      if (!importStatement.isOnDemand()) {\n        final PsiJavaCodeReferenceElement reference = importStatement.getImportReference();\n        if (reference == null) {\n          continue;\n        }\n        final JavaResolveResult[] targets = reference.multiResolve(false);\n        for (JavaResolveResult target : targets) {\n          if (member.equals(target.getElement())) {\n            return importStatement;\n          }\n        }\n      }\n      else {\n        if (hasOnDemandImportConflict) {\n          continue;\n        }\n        final PsiElement target = importStatement.resolve();\n        if (target instanceof PsiPackage) {\n          final PsiPackage aPackage = (PsiPackage)target;\n          if (packageName.equals(aPackage.getQualifiedName())) {\n            return importStatement;\n          }\n        }\n        else if (target instanceof PsiClass) {\n          final PsiClass aClass = (PsiClass)target;\n          if (InheritanceUtil.isInheritorOrSelf(aClass, containingClass, true)) {\n            if (importStatement instanceof PsiImportStaticStatement) {\n              if (member.hasModifierProperty(PsiModifier.STATIC)) {\n                return importStatement;\n              }\n            }\n            else if (importStatement instanceof PsiImportStatement && member instanceof PsiClass) {\n              return importStatement;\n            }\n          }\n        }\n      }\n    }\n    return null;\n  }","id":39652,"modified_method":"private PsiImportStatementBase findImport(PsiMember member, List<PsiImportStatementBase> importStatements) {\n    final String qualifiedName;\n    final String packageName;\n    final PsiClass containingClass = member.getContainingClass();\n    if (member instanceof PsiClass) {\n      final PsiClass referencedClass = (PsiClass)member;\n      qualifiedName = referencedClass.getQualifiedName();\n      packageName = qualifiedName != null ? StringUtil.getPackageName(qualifiedName) : null;\n    }\n    else {\n      if (!member.hasModifierProperty(PsiModifier.STATIC) || containingClass == null) {\n        return null;\n      }\n      packageName = containingClass.getQualifiedName();\n      qualifiedName = packageName + '.' + member.getName();\n    }\n    if (packageName == null) {\n      return null;\n    }\n    final boolean hasOnDemandImportConflict = ImportUtils.hasOnDemandImportConflict(qualifiedName, myFile);\n    for (PsiImportStatementBase importStatement : importStatements) {\n      if (!importStatement.isOnDemand()) {\n        final PsiJavaCodeReferenceElement reference = importStatement.getImportReference();\n        if (reference == null) {\n          continue;\n        }\n        final JavaResolveResult[] targets = reference.multiResolve(false);\n        for (JavaResolveResult target : targets) {\n          if (member.equals(target.getElement())) {\n            return importStatement;\n          }\n        }\n      }\n      else {\n        if (hasOnDemandImportConflict) {\n          continue;\n        }\n        final PsiElement target = importStatement.resolve();\n        if (target instanceof PsiPackage) {\n          final PsiPackage aPackage = (PsiPackage)target;\n          if (packageName.equals(aPackage.getQualifiedName())) {\n            return importStatement;\n          }\n        }\n        else if (target instanceof PsiClass) {\n          final PsiClass aClass = (PsiClass)target;\n          // a regular import statement does NOT import inner classes from super classes, but a static import does\n          if (importStatement instanceof PsiImportStaticStatement) {\n            if (member.hasModifierProperty(PsiModifier.STATIC) && InheritanceUtil.isInheritorOrSelf(aClass, containingClass, true)) {\n              return importStatement;\n            }\n          }\n          else if (importStatement instanceof PsiImportStatement && member instanceof PsiClass && aClass.equals(containingClass)) {\n            return importStatement;\n          }\n        }\n      }\n    }\n    return null;\n  }","commit_id":"95b4005dd7a3f86ed678fac5513dfa5a8f84d82e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean addSuperMethods(final HierarchicalMethodSignature signature,\n                                  final PsiMethod method,\n                                  final PsiClass parentClass,\n                                  final boolean allowStaticMethod,\n                                  final boolean checkBases,\n                                  final Processor<MethodSignatureBackedByPsiMethod> consumer) {\n    PsiMethod signatureMethod = signature.getMethod();\n    PsiClass hisClass = signatureMethod.getContainingClass();\n    if (InheritanceUtil.isInheritorOrSelf(parentClass, hisClass, true)) {\n      if (isAcceptable(signatureMethod, method, allowStaticMethod)) {\n        if (parentClass.equals(hisClass) || checkBases) {\n          return consumer.process(signature); //no need to check super classes\n        } else {\n          return true;\n        }\n      }\n    }\n    for (HierarchicalMethodSignature superSignature : signature.getSuperSignatures()) {\n      if (MethodSignatureUtil.isSubsignature(superSignature, signature)) {\n        addSuperMethods(superSignature, method, parentClass, allowStaticMethod, checkBases, consumer);\n      }\n    }\n\n    return true;\n  }","id":39653,"modified_method":"private static boolean addSuperMethods(final HierarchicalMethodSignature signature,\n                                  final PsiMethod method,\n                                  final PsiClass parentClass,\n                                  final boolean allowStaticMethod,\n                                  final boolean checkBases,\n                                  final Processor<MethodSignatureBackedByPsiMethod> consumer) {\n    PsiMethod signatureMethod = signature.getMethod();\n    PsiClass hisClass = signatureMethod.getContainingClass();\n    if (parentClass == null || InheritanceUtil.isInheritorOrSelf(parentClass, hisClass, true)) {\n      if (isAcceptable(signatureMethod, method, allowStaticMethod)) {\n        if (parentClass == null || parentClass.equals(hisClass) || checkBases) {\n          return consumer.process(signature); //no need to check super classes\n        } else {\n          return true;\n        }\n      }\n    }\n    for (HierarchicalMethodSignature superSignature : signature.getSuperSignatures()) {\n      if (MethodSignatureUtil.isSubsignature(superSignature, signature)) {\n        addSuperMethods(superSignature, method, parentClass, allowStaticMethod, checkBases, consumer);\n      }\n    }\n\n    return true;\n  }","commit_id":"791e2562715c0c5bee75066804b91c6722da7938","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static @NotNull PsiMethod[] findSuperMethods(PsiMethod method) {\n    return findSuperMethods(method, method.getContainingClass());\n  }","id":39654,"modified_method":"public static @NotNull PsiMethod[] findSuperMethods(PsiMethod method) {\n    return findSuperMethods(method, null);\n  }","commit_id":"791e2562715c0c5bee75066804b91c6722da7938","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static @NotNull PsiMethod[] findSuperMethods(PsiMethod method, boolean checkAccess) {\n    if (!canHaveSuperMethod(method, checkAccess, false)) return PsiMethod.EMPTY_ARRAY;\n    final PsiClass aClass = method.getContainingClass();\n    return findSuperMethodsInternal(method, aClass);\n  }","id":39655,"modified_method":"public static @NotNull PsiMethod[] findSuperMethods(PsiMethod method, boolean checkAccess) {\n    if (!canHaveSuperMethod(method, checkAccess, false)) return PsiMethod.EMPTY_ARRAY;\n    return findSuperMethodsInternal(method, null);\n  }","commit_id":"791e2562715c0c5bee75066804b91c6722da7938","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static @NotNull List<MethodSignatureBackedByPsiMethod> findSuperMethodSignaturesIncludingStatic(PsiMethod method,\n                                                                                                         boolean checkAccess) {\n    if (!canHaveSuperMethod(method, checkAccess, true)) return Collections.emptyList();\n    return findSuperMethodSignatures(method, method.getContainingClass(), true);\n  }","id":39656,"modified_method":"public static @NotNull List<MethodSignatureBackedByPsiMethod> findSuperMethodSignaturesIncludingStatic(PsiMethod method,\n                                                                                                         boolean checkAccess) {\n    if (!canHaveSuperMethod(method, checkAccess, true)) return Collections.emptyList();\n    return findSuperMethodSignatures(method, null, true);\n  }","commit_id":"791e2562715c0c5bee75066804b91c6722da7938","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ClientNamenodeProtocolTranslatorR23(InetSocketAddress nameNodeAddr,\n      Configuration conf, UserGroupInformation ugi) throws IOException {\n    rpcProxyWithoutRetry = createNamenode(nameNodeAddr, conf, ugi);\n    rpcProxy = createNamenodeWithRetry(rpcProxyWithoutRetry);\n  }","id":39657,"modified_method":"public ClientNamenodeProtocolTranslatorR23(InetSocketAddress nameNodeAddr,\n      Configuration conf, UserGroupInformation ugi) throws IOException {\n    rpcProxy = createNamenodeWithRetry(createNamenode(nameNodeAddr, conf, ugi));\n  }","commit_id":"abe45f59acd21989afa4d1729bd06a90d05dfebe","url":"https://github.com/apache/hadoop"},{"original_method":"public void close() {\n    RPC.stopProxy(rpcProxyWithoutRetry);\n  }","id":39658,"modified_method":"public void close() {\n    RPC.stopProxy(rpcProxy);\n  }","commit_id":"abe45f59acd21989afa4d1729bd06a90d05dfebe","url":"https://github.com/apache/hadoop"},{"original_method":"public NamenodeProtocolTranslatorR23(InetSocketAddress nameNodeAddr,\n      Configuration conf, UserGroupInformation ugi) throws IOException {\n    rpcProxyWithoutRetry = createNamenode(nameNodeAddr, conf, ugi);\n    rpcProxy = createNamenodeWithRetry(rpcProxyWithoutRetry);\n  }","id":39659,"modified_method":"public NamenodeProtocolTranslatorR23(InetSocketAddress nameNodeAddr,\n      Configuration conf, UserGroupInformation ugi) throws IOException {\n    rpcProxy = createNamenodeWithRetry(createNamenode(nameNodeAddr, conf, ugi));\n  }","commit_id":"abe45f59acd21989afa4d1729bd06a90d05dfebe","url":"https://github.com/apache/hadoop"},{"original_method":"public void close() {\n    RPC.stopProxy(rpcProxyWithoutRetry);\n  }","id":39660,"modified_method":"public void close() {\n    RPC.stopProxy(rpcProxy);\n  }","commit_id":"abe45f59acd21989afa4d1729bd06a90d05dfebe","url":"https://github.com/apache/hadoop"},{"original_method":"public DatanodeProtocolClientSideTranslatorPB(InetSocketAddress nameNodeAddr,\n      Configuration conf) throws IOException {\n    RPC.setProtocolEngine(conf, DatanodeProtocolPB.class,\n        ProtobufRpcEngine.class);\n    UserGroupInformation ugi = UserGroupInformation.getCurrentUser();\n    rpcProxy = createNamenodeWithRetry(createNamenode(nameNodeAddr, conf, ugi));\n  }","id":39661,"modified_method":"public DatanodeProtocolClientSideTranslatorPB(InetSocketAddress nameNodeAddr,\n      Configuration conf) throws IOException {\n    RPC.setProtocolEngine(conf, DatanodeProtocolPB.class,\n        ProtobufRpcEngine.class);\n    UserGroupInformation ugi = UserGroupInformation.getCurrentUser();\n    rpcProxy = createNamenode(nameNodeAddr, conf, ugi);\n  }","commit_id":"f4151bbf4f54dc33836c76e6860aa043a9626e48","url":"https://github.com/apache/hadoop"},{"original_method":"private static ClientProtocol createNNProxyWithClientProtocol(\n      InetSocketAddress address, Configuration conf, UserGroupInformation ugi,\n      boolean withRetries) throws IOException {\n    RPC.setProtocolEngine(conf, ClientNamenodeProtocolPB.class, ProtobufRpcEngine.class);\n\n    final RetryPolicy defaultPolicy = \n        RetryUtils.getDefaultRetryPolicy(\n            conf, \n            DFSConfigKeys.DFS_CLIENT_RETRY_POLICY_ENABLED_KEY, \n            DFSConfigKeys.DFS_CLIENT_RETRY_POLICY_ENABLED_DEFAULT, \n            DFSConfigKeys.DFS_CLIENT_RETRY_POLICY_SPEC_KEY,\n            DFSConfigKeys.DFS_CLIENT_RETRY_POLICY_SPEC_DEFAULT,\n            SafeModeException.class);\n    \n    final long version = RPC.getProtocolVersion(ClientNamenodeProtocolPB.class);\n    ClientNamenodeProtocolPB proxy = RPC.getProtocolProxy(\n        ClientNamenodeProtocolPB.class, version, address, ugi, conf,\n        NetUtils.getDefaultSocketFactory(conf),\n        org.apache.hadoop.ipc.Client.getTimeout(conf), defaultPolicy)\n            .getProxy();\n\n    if (withRetries) { // create the proxy with retries\n\n      RetryPolicy createPolicy = RetryPolicies\n          .retryUpToMaximumCountWithFixedSleep(5,\n              HdfsConstants.LEASE_SOFTLIMIT_PERIOD, TimeUnit.MILLISECONDS);\n    \n      Map<Class<? extends Exception>, RetryPolicy> remoteExceptionToPolicyMap \n                 = new HashMap<Class<? extends Exception>, RetryPolicy>();\n      remoteExceptionToPolicyMap.put(AlreadyBeingCreatedException.class,\n          createPolicy);\n    \n      Map<Class<? extends Exception>, RetryPolicy> exceptionToPolicyMap\n                 = new HashMap<Class<? extends Exception>, RetryPolicy>();\n      exceptionToPolicyMap.put(RemoteException.class, RetryPolicies\n          .retryByRemoteException(defaultPolicy,\n              remoteExceptionToPolicyMap));\n      RetryPolicy methodPolicy = RetryPolicies.retryByException(\n          defaultPolicy, exceptionToPolicyMap);\n      Map<String, RetryPolicy> methodNameToPolicyMap \n                 = new HashMap<String, RetryPolicy>();\n    \n      methodNameToPolicyMap.put(\"create\", methodPolicy);\n    \n      proxy = (ClientNamenodeProtocolPB) RetryProxy.create(\n          ClientNamenodeProtocolPB.class,\n          new DefaultFailoverProxyProvider<ClientNamenodeProtocolPB>(\n              ClientNamenodeProtocolPB.class, proxy),\n          methodNameToPolicyMap,\n          defaultPolicy);\n    }\n    return new ClientNamenodeProtocolTranslatorPB(proxy);\n  }","id":39662,"modified_method":"private static ClientProtocol createNNProxyWithClientProtocol(\n      InetSocketAddress address, Configuration conf, UserGroupInformation ugi,\n      boolean withRetries) throws IOException {\n    RPC.setProtocolEngine(conf, ClientNamenodeProtocolPB.class, ProtobufRpcEngine.class);\n\n    final RetryPolicy defaultPolicy = \n        RetryUtils.getDefaultRetryPolicy(\n            conf, \n            DFSConfigKeys.DFS_CLIENT_RETRY_POLICY_ENABLED_KEY, \n            DFSConfigKeys.DFS_CLIENT_RETRY_POLICY_ENABLED_DEFAULT, \n            DFSConfigKeys.DFS_CLIENT_RETRY_POLICY_SPEC_KEY,\n            DFSConfigKeys.DFS_CLIENT_RETRY_POLICY_SPEC_DEFAULT,\n            SafeModeException.class);\n    \n    final long version = RPC.getProtocolVersion(ClientNamenodeProtocolPB.class);\n    ClientNamenodeProtocolPB proxy = RPC.getProtocolProxy(\n        ClientNamenodeProtocolPB.class, version, address, ugi, conf,\n        NetUtils.getDefaultSocketFactory(conf),\n        org.apache.hadoop.ipc.Client.getTimeout(conf), defaultPolicy)\n            .getProxy();\n\n    if (withRetries) { // create the proxy with retries\n\n      RetryPolicy createPolicy = RetryPolicies\n          .retryUpToMaximumCountWithFixedSleep(5,\n              HdfsConstants.LEASE_SOFTLIMIT_PERIOD, TimeUnit.MILLISECONDS);\n    \n      Map<Class<? extends Exception>, RetryPolicy> remoteExceptionToPolicyMap \n                 = new HashMap<Class<? extends Exception>, RetryPolicy>();\n      remoteExceptionToPolicyMap.put(AlreadyBeingCreatedException.class,\n          createPolicy);\n\n      RetryPolicy methodPolicy = RetryPolicies.retryByRemoteException(\n          defaultPolicy, remoteExceptionToPolicyMap);\n      Map<String, RetryPolicy> methodNameToPolicyMap \n                 = new HashMap<String, RetryPolicy>();\n    \n      methodNameToPolicyMap.put(\"create\", methodPolicy);\n\n      ClientProtocol translatorProxy =\n        new ClientNamenodeProtocolTranslatorPB(proxy);\n      return (ClientProtocol) RetryProxy.create(\n          ClientProtocol.class,\n          new DefaultFailoverProxyProvider<ClientProtocol>(\n              ClientProtocol.class, translatorProxy),\n          methodNameToPolicyMap,\n          defaultPolicy);\n    } else {\n      return new ClientNamenodeProtocolTranslatorPB(proxy);\n    }\n  }","commit_id":"f4151bbf4f54dc33836c76e6860aa043a9626e48","url":"https://github.com/apache/hadoop"},{"original_method":"private static NamenodeProtocol createNNProxyWithNamenodeProtocol(\n      InetSocketAddress address, Configuration conf, UserGroupInformation ugi,\n      boolean withRetries) throws IOException {\n    NamenodeProtocolPB proxy = (NamenodeProtocolPB) createNameNodeProxy(\n        address, conf, ugi, NamenodeProtocolPB.class, 0);\n    if (withRetries) { // create the proxy with retries\n      RetryPolicy timeoutPolicy = RetryPolicies.exponentialBackoffRetry(5, 200,\n          TimeUnit.MILLISECONDS);\n      Map<Class<? extends Exception>, RetryPolicy> exceptionToPolicyMap \n                     = new HashMap<Class<? extends Exception>, RetryPolicy>();\n      RetryPolicy methodPolicy = RetryPolicies.retryByException(timeoutPolicy,\n          exceptionToPolicyMap);\n      Map<String, RetryPolicy> methodNameToPolicyMap \n                     = new HashMap<String, RetryPolicy>();\n      methodNameToPolicyMap.put(\"getBlocks\", methodPolicy);\n      methodNameToPolicyMap.put(\"getAccessKeys\", methodPolicy);\n      proxy = (NamenodeProtocolPB) RetryProxy.create(NamenodeProtocolPB.class,\n          proxy, methodNameToPolicyMap);\n    }\n    return new NamenodeProtocolTranslatorPB(proxy);\n  }","id":39663,"modified_method":"private static NamenodeProtocol createNNProxyWithNamenodeProtocol(\n      InetSocketAddress address, Configuration conf, UserGroupInformation ugi,\n      boolean withRetries) throws IOException {\n    NamenodeProtocolPB proxy = (NamenodeProtocolPB) createNameNodeProxy(\n        address, conf, ugi, NamenodeProtocolPB.class, 0);\n    if (withRetries) { // create the proxy with retries\n      RetryPolicy timeoutPolicy = RetryPolicies.exponentialBackoffRetry(5, 200,\n              TimeUnit.MILLISECONDS);\n      Map<String, RetryPolicy> methodNameToPolicyMap\n           = new HashMap<String, RetryPolicy>();\n      methodNameToPolicyMap.put(\"getBlocks\", timeoutPolicy);\n      methodNameToPolicyMap.put(\"getAccessKeys\", timeoutPolicy);\n      NamenodeProtocol translatorProxy =\n          new NamenodeProtocolTranslatorPB(proxy);\n      return (NamenodeProtocol) RetryProxy.create(\n          NamenodeProtocol.class, translatorProxy, methodNameToPolicyMap);\n    } else {\n      return new NamenodeProtocolTranslatorPB(proxy);\n    }\n  }","commit_id":"f4151bbf4f54dc33836c76e6860aa043a9626e48","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Test that a file which is open for write is overwritten by another\n   * client. Regression test for HDFS-3755.\n   */\n  @Test\n  public void testOverwriteOpenForWrite() throws Exception {\n    Configuration conf = new HdfsConfiguration();\n    SimulatedFSDataset.setFactory(conf);\n    conf.setBoolean(DFSConfigKeys.DFS_PERMISSIONS_ENABLED_KEY, false);\n    final MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).build();\n    FileSystem fs = cluster.getFileSystem();\n    \n    UserGroupInformation otherUgi = UserGroupInformation.createUserForTesting(\n        \"testuser\", new String[]{\"testgroup\"});\n    FileSystem fs2 = otherUgi.doAs(new PrivilegedExceptionAction<FileSystem>() {\n      @Override\n      public FileSystem run() throws Exception {\n        return FileSystem.get(cluster.getConfiguration(0));\n      }\n    });\n    \n    try {\n      Path p = new Path(\"/testfile\");\n      FSDataOutputStream stm1 = fs.create(p);\n      stm1.write(1);\n\n      // Create file again without overwrite\n      try {\n        fs2.create(p, false);\n        fail(\"Did not throw!\");\n      } catch (IOException abce) {\n        GenericTestUtils.assertExceptionContains(\"already being created by\",\n            abce);\n      }\n      \n      FSDataOutputStream stm2 = fs2.create(p, true);\n      stm2.write(2);\n      stm2.close();\n      \n      try {\n        stm1.close();\n        fail(\"Should have exception closing stm1 since it was deleted\");\n      } catch (IOException ioe) {\n        GenericTestUtils.assertExceptionContains(\"No lease on /testfile\", ioe);\n        GenericTestUtils.assertExceptionContains(\"File does not exist.\", ioe);\n      }\n      \n    } finally {\n      IOUtils.closeStream(fs);\n      IOUtils.closeStream(fs2);\n      cluster.shutdown();\n    }\n  }","id":39664,"modified_method":"/**\n   * Test that a file which is open for write is overwritten by another\n   * client. Regression test for HDFS-3755.\n   */\n  @Test\n  public void testOverwriteOpenForWrite() throws Exception {\n    Configuration conf = new HdfsConfiguration();\n    SimulatedFSDataset.setFactory(conf);\n    conf.setBoolean(DFSConfigKeys.DFS_PERMISSIONS_ENABLED_KEY, false);\n    final MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).build();\n    FileSystem fs = cluster.getFileSystem();\n\n    UserGroupInformation otherUgi = UserGroupInformation.createUserForTesting(\n        \"testuser\", new String[]{\"testgroup\"});\n    FileSystem fs2 = otherUgi.doAs(new PrivilegedExceptionAction<FileSystem>() {\n      @Override\n      public FileSystem run() throws Exception {\n        return FileSystem.get(cluster.getConfiguration(0));\n      }\n    });\n\n    String metricsName = RPC_DETAILED_METRICS + cluster.getNameNodePort();\n\n    try {\n      Path p = new Path(\"/testfile\");\n      FSDataOutputStream stm1 = fs.create(p);\n      stm1.write(1);\n\n      assertCounter(\"CreateNumOps\", 1L, getMetrics(metricsName));\n\n      // Create file again without overwrite\n      try {\n        fs2.create(p, false);\n        fail(\"Did not throw!\");\n      } catch (IOException abce) {\n        GenericTestUtils.assertExceptionContains(\"already being created by\",\n            abce);\n      }\n      // NameNodeProxies' createNNProxyWithClientProtocol has 5 retries.\n      assertCounter(\"AlreadyBeingCreatedExceptionNumOps\",\n          6L, getMetrics(metricsName));\n      FSDataOutputStream stm2 = fs2.create(p, true);\n      stm2.write(2);\n      stm2.close();\n      \n      try {\n        stm1.close();\n        fail(\"Should have exception closing stm1 since it was deleted\");\n      } catch (IOException ioe) {\n        GenericTestUtils.assertExceptionContains(\"No lease on /testfile\", ioe);\n        GenericTestUtils.assertExceptionContains(\"File does not exist.\", ioe);\n      }\n      \n    } finally {\n      IOUtils.closeStream(fs);\n      IOUtils.closeStream(fs2);\n      cluster.shutdown();\n    }\n  }","commit_id":"f4151bbf4f54dc33836c76e6860aa043a9626e48","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testClientNamenodeProtocol() throws IOException {\n    ClientNamenodeProtocolTranslatorPB translator = \n        (ClientNamenodeProtocolTranslatorPB) NameNodeProxies.createNonHAProxy(\n            conf, nnAddress, ClientProtocol.class,\n            UserGroupInformation.getCurrentUser(), true).getProxy();\n    assertTrue(translator.isMethodSupported(\"mkdirs\"));\n  }","id":39665,"modified_method":"@Test\n  public void testClientNamenodeProtocol() throws IOException {\n    ClientProtocol cp =\n        NameNodeProxies.createNonHAProxy(\n            conf, nnAddress, ClientProtocol.class,\n            UserGroupInformation.getCurrentUser(), true).getProxy();\n    RpcClientUtil.isMethodSupported(cp,\n        ClientNamenodeProtocolPB.class, RPC.RpcKind.RPC_PROTOCOL_BUFFER,\n        RPC.getProtocolVersion(ClientNamenodeProtocolPB.class), \"mkdirs\");\n  }","commit_id":"f4151bbf4f54dc33836c76e6860aa043a9626e48","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testNamenodeProtocol() throws IOException {\n    NamenodeProtocolTranslatorPB translator =\n        (NamenodeProtocolTranslatorPB) NameNodeProxies.createNonHAProxy(conf,\n            nnAddress, NamenodeProtocol.class, UserGroupInformation.getCurrentUser(),\n            true).getProxy();\n    boolean exists = translator.isMethodSupported(\"rollEditLog\");\n    assertTrue(exists);\n    exists = translator.isMethodSupported(\"bogusMethod\");\n    assertFalse(exists);\n  }","id":39666,"modified_method":"@Test\n  public void testNamenodeProtocol() throws IOException {\n    NamenodeProtocol np =\n        NameNodeProxies.createNonHAProxy(conf,\n            nnAddress, NamenodeProtocol.class, UserGroupInformation.getCurrentUser(),\n            true).getProxy();\n\n    boolean exists = RpcClientUtil.isMethodSupported(np,\n        NamenodeProtocolPB.class, RPC.RpcKind.RPC_PROTOCOL_BUFFER,\n        RPC.getProtocolVersion(NamenodeProtocolPB.class), \"rollEditLog\");\n\n    assertTrue(exists);\n    exists = RpcClientUtil.isMethodSupported(np,\n        NamenodeProtocolPB.class, RPC.RpcKind.RPC_PROTOCOL_BUFFER,\n        RPC.getProtocolVersion(NamenodeProtocolPB.class), \"bogusMethod\");\n    assertFalse(exists);\n  }","commit_id":"f4151bbf4f54dc33836c76e6860aa043a9626e48","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Permanent permanent = game.getPermanent(source.getSourceId());\n        if (permanent != null) {\n            if (counter != null) {\n                permanent.addCounters(counter.copy(), game);\n            }\n        }\n        return true;\n    }","id":39667,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Permanent permanent = game.getPermanent(source.getSourceId());\n        if (permanent != null) {\n            if (counter != null) {\n                permanent.addCounters(counter.copy(), game);\n                if (informPlayers) {\n                    Player player = game.getPlayer(source.getControllerId());\n                    if (player != null) {\n                        game.informPlayers(player.getName()+ \" puts \" + counter.getCount() + \" \" + counter.getName() + \" counter on \" + permanent.getName());\n                    }\n                }\n            }\n        }\n        return true;\n    }","commit_id":"d065b9550199e8415b3dde80776700ad8db82506","url":"https://github.com/magefree/mage"},{"original_method":"public AddCountersSourceEffect(Counter counter) {\n        super(Outcome.Benefit);\n        this.counter = counter.copy();\n        setText();\n    }","id":39668,"modified_method":"public AddCountersSourceEffect(Counter counter) {\n        this(counter, false);\n    }","commit_id":"d065b9550199e8415b3dde80776700ad8db82506","url":"https://github.com/magefree/mage"},{"original_method":"public AddCountersSourceEffect(final AddCountersSourceEffect effect) {\n        super(effect);\n        if (effect.counter != null)\n            this.counter = effect.counter.copy();\n    }","id":39669,"modified_method":"public AddCountersSourceEffect(final AddCountersSourceEffect effect) {\n        super(effect);\n        if (effect.counter != null) {\n            this.counter = effect.counter.copy();\n        }\n        this.informPlayers = effect.informPlayers;\n    }","commit_id":"d065b9550199e8415b3dde80776700ad8db82506","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Spell spell = game.getStack().getSpell(targetPointer.getFirst(game, source));\r\n        if (spell != null) {\r\n            Spell copy = spell.copySpell();\r\n            copy.setControllerId(source.getControllerId());\r\n            copy.setCopiedSpell(true);\r\n            game.getStack().push(copy);\r\n            copy.chooseNewTargets(game, source.getControllerId());\r\n            return true;\r\n        }\r\n        return false;\r\n    }","id":39670,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Spell spell = game.getStack().getSpell(targetPointer.getFirst(game, source));\r\n        if (spell != null) {\r\n            Spell copy = spell.copySpell();\r\n            copy.setControllerId(source.getControllerId());\r\n            copy.setCopiedSpell(true);\r\n            game.getStack().push(copy);\r\n            copy.chooseNewTargets(game, source.getControllerId());\r\n            Player player = game.getPlayer(source.getControllerId());\r\n            String activateMessage = copy.getSpellAbility().getActivatedMessage(game);\r\n            if (activateMessage.startsWith(\" casts \")) {\r\n                activateMessage = activateMessage.substring(6);\r\n            }\r\n            game.informPlayers(player.getName() + \" copies \" + activateMessage);;\r\n            return true;\r\n        }\r\n        return false;\r\n    }","commit_id":"d065b9550199e8415b3dde80776700ad8db82506","url":"https://github.com/magefree/mage"},{"original_method":"private void setText() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"put \");\n        if (counter.getCount() > 1) {\n            sb.append(Integer.toString(counter.getCount())).append(\" \").append(counter.getName()).append(\" counters on each \");\n        } else {\n            sb.append(\"a \").append(counter.getName()).append(\" counter on each \");\n        }\n        sb.append(filter.getMessage());\n        staticText = sb.toString();\n    }","id":39671,"modified_method":"private void setText() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"put \");\n        if (counter.getCount() > 1) {\n            sb.append(Integer.toString(counter.getCount())).append(\" \").append(counter.getName().toLowerCase()).append(\" counters on each \");\n        } else {\n            sb.append(\"a \").append(counter.getName().toLowerCase()).append(\" counter on each \");\n        }\n        sb.append(filter.getMessage());\n        staticText = sb.toString();\n    }","commit_id":"5869f77f0cb08368bf93ce037728a645bf92389f","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        boolean applied = false;\n        if (counter != null) {\n            UUID controllerId = source.getControllerId();\n            List<Permanent> permanents = game.getBattlefield().getAllActivePermanents();\n            for (Permanent permanent : permanents) {\n                if (filter.match(permanent, source.getSourceId(), controllerId, game)) {\n                    permanent.addCounters(counter.copy(), game);\n                    applied = true;\n                }\n            }\n        }\n        return applied;\n    }","id":39672,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Player controller = game.getPlayer(source.getControllerId());\n        MageObject sourceObject = game.getObject(source.getSourceId());\n        if (controller != null && sourceObject != null) {\n            if (counter != null) {\n                UUID controllerId = source.getControllerId();\n                List<Permanent> permanents = game.getBattlefield().getAllActivePermanents();\n                for (Permanent permanent : permanents) {\n                    if (filter.match(permanent, source.getSourceId(), controllerId, game)) {\n                        permanent.addCounters(counter.copy(), game);\n                        game.informPlayers(new StringBuilder(sourceObject.getName()).append(\": \")\n                                .append(controller.getName()).append(\" puts \")\n                                .append(counter.getCount()).append(\" \").append(counter.getName().toLowerCase())\n                                .append(\" counter on \").append(permanent.getName()).toString());\n                    }\n                }\n            }            \n            return true;\n        }        \n        return false;\n    }","commit_id":"5869f77f0cb08368bf93ce037728a645bf92389f","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        int affectedTargets = 0;\n        for (UUID uuid : targetPointer.getTargets(game, source)) {\n            Permanent permanent = game.getPermanent(uuid);\n            if (permanent != null) {\n                if (counter != null) {\n                    Counter newCounter = counter.copy();\n                    newCounter.add(amount.calculate(game, source));\n                    permanent.addCounters(newCounter, game);\n                    affectedTargets ++;\n                }\n            } else {\n                Player player = game.getPlayer(uuid);\n                if (player != null) {\n                    Counter newCounter = counter.copy();\n                    newCounter.add(amount.calculate(game, source));\n                    player.addCounters(newCounter, game);\n                    affectedTargets ++;\n                }\n            }\n        }\n        return affectedTargets > 0;\n    }","id":39673,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Player controller = game.getPlayer(source.getControllerId());\n        MageObject sourceObject = game.getObject(source.getSourceId());\n        if (controller != null && sourceObject != null) {\n            int affectedTargets = 0;\n            for (UUID uuid : targetPointer.getTargets(game, source)) {\n                Permanent permanent = game.getPermanent(uuid);\n                if (permanent != null) {\n                    if (counter != null) {\n                        Counter newCounter = counter.copy();\n                        newCounter.add(amount.calculate(game, source));\n                        permanent.addCounters(newCounter, game);\n                        affectedTargets ++;\n                        game.informPlayers(new StringBuilder(sourceObject.getName()).append(\": \")\n                                .append(controller.getName()).append(\" puts \")\n                                .append(counter.getCount()).append(\" \").append(counter.getName().toLowerCase())\n                                .append(\" counter on \").append(permanent.getName()).toString());                        \n                    }\n                } else {\n                    Player player = game.getPlayer(uuid);\n                    if (player != null) {\n                        Counter newCounter = counter.copy();\n                        newCounter.add(amount.calculate(game, source));\n                        player.addCounters(newCounter, game);\n                        affectedTargets ++;\n                        game.informPlayers(new StringBuilder(sourceObject.getName()).append(\": \")\n                                .append(controller.getName()).append(\" puts \")\n                                .append(counter.getCount()).append(\" \").append(counter.getName().toLowerCase())\n                                .append(\" counter on \").append(player.getName()).toString());                        \n                    }\n                }\n            }  \n            return affectedTargets > 0;\n        }\n        return false;\n    }","commit_id":"5869f77f0cb08368bf93ce037728a645bf92389f","url":"https://github.com/magefree/mage"},{"original_method":"public String getText(Mode mode) {\n        StringBuilder sbText = new StringBuilder();\n        String rule = null;\n        for (Effect effect: this) {\n            String endString = \"\";\n            if (rule != null && rule.length()> 3 && !rule.endsWith(\".\")) {\n                endString = \". \";\n            }\n            rule = effect.getText(mode);\n            if (rule != null) {\n                if (rule.startsWith(\"and \") || rule.startsWith(\",\")) {\n                    endString = \" \";\n                }\n                sbText.append(endString).append(rule);\n            }\n        }\n        if (rule != null && rule.length()> 3 && !rule.endsWith(\".\") && !rule.endsWith(\"\\\"\") && !rule.startsWith(\"<b>Level \")) {\n            sbText.append(\".\");\n        }\n        return sbText.toString();\n    }","id":39674,"modified_method":"public String getText(Mode mode) {\n        StringBuilder sbText = new StringBuilder();\n        String rule = null;\n        for (Effect effect: this) {\n            String endString = \"\";\n            if (rule != null && rule.length()> 3 && !rule.endsWith(\".\")) {\n                endString = \". \";\n            }\n            rule = effect.getText(mode);\n            if (rule != null) {\n                if (rule.startsWith(\"and \")) {\n                    endString = \" \";\n                } else if (rule.startsWith(\",\")) {\n                    endString = \"\";\n                }\n                sbText.append(endString).append(rule);\n            }\n        }\n        if (rule != null && rule.length()> 3 && !rule.endsWith(\".\") && !rule.endsWith(\"\\\"\") && !rule.startsWith(\"<b>Level \")) {\n            sbText.append(\".\");\n        }\n        return sbText.toString();\n    }","commit_id":"5869f77f0cb08368bf93ce037728a645bf92389f","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean replaceEvent(GameEvent event, Ability source, Game game) {\r\n        Permanent p = game.getPermanent(event.getTargetId());\r\n        if (p != null) {\r\n            p.addCounters(CounterType.valueOf(event.getData().toUpperCase(Locale.ENGLISH)).createInstance(event.getAmount() * 2), game, event.getAppliedEffects());\r\n        }\r\n        return true;\r\n    }","id":39675,"modified_method":"@Override\r\n    public boolean replaceEvent(GameEvent event, Ability source, Game game) {\r\n        Permanent p = game.getPermanent(event.getTargetId());\r\n        if (p != null) {\r\n            String counterName = event.getData().toUpperCase(Locale.ENGLISH);\r\n            Counter counter;\r\n            if (counterName.equals(\"+1/+1\")) {\r\n                counter = CounterType.P1P1.createInstance(event.getAmount() * 2);\r\n            } else if (counterName.equals(\"-1/-1\")) {\r\n                counter = CounterType.M1M1.createInstance(event.getAmount() * 2);\r\n            } else {\r\n                counter = new Counter(counterName, event.getAmount() * 2);\r\n            }\r\n            p.addCounters(counter, game, event.getAppliedEffects());\r\n\r\n\r\n        }\r\n        return true;\r\n    }","commit_id":"0d643848ae990617896056e4901a6e51cc6248e4","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {        \n        Player controller = game.getPlayer(source.getControllerId());\n        Permanent sourcePermanent = game.getPermanentOrLKIBattlefield(source.getSourceId());\n        if (sourcePermanent != null && controller != null) {\n            sourcePermanent.addCounters(CounterType.DESPAIR.createInstance(), game);\n            int count = sourcePermanent.getCounters().getCount(CounterType.DESPAIR);\n            if (count > 0) {\n                // select the permanents and hand cards in turn order\n                LinkedList<UUID> selectedObjects = new LinkedList<>();\n                PlayerList playerList = game.getState().getPlayerList(controller.getId());\n                Player currentPlayer = controller;\n                do {\n                    selectCards(currentPlayer, selectedObjects, count, source, game);\n                    currentPlayer = playerList.getNextInRange(controller, game);                    \n                } while (!currentPlayer.equals(controller) && controller.isInGame());\n                \n                // move permanents and hand cards to exile\n                for (UUID objectId : selectedObjects) {\n                    if (game.getState().getZone(objectId).equals(Zone.BATTLEFIELD)) {\n                        Permanent permanent = game.getPermanent(objectId);\n                        if (permanent != null) {\n                            Player player = game.getPlayer(permanent.getControllerId());\n                            if (player != null) {\n                                player.moveCardToExileWithInfo(permanent, null, \"\", source.getSourceId(), game, Zone.BATTLEFIELD);\n                            }\n                        }\n                    } else if (game.getState().getZone(objectId).equals(Zone.HAND)) {\n                        Card card = game.getCard(objectId);\n                        if (card != null) {\n                            Player player = game.getPlayer(card.getOwnerId());\n                            if (player != null) {\n                                player.moveCardToExileWithInfo(card, null, \"\", source.getSourceId(), game, Zone.HAND);\n                            }\n                        }                        \n                    }\n                }\n                \n            }\n            return true;\n        }\n        return false;\n    }","id":39676,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {        \n        Player controller = game.getPlayer(source.getControllerId());\n        Permanent sourcePermanent = game.getPermanent(source.getSourceId());\n        if (sourcePermanent != null && controller != null) {\n            sourcePermanent.addCounters(CounterType.DESPAIR.createInstance(), game);\n        }\n        if (sourcePermanent == null) {\n            sourcePermanent = (Permanent) game.getLastKnownInformation(source.getSourceId(), Zone.BATTLEFIELD);\n        }\n        if (sourcePermanent != null && controller != null) {            \n            int count = sourcePermanent.getCounters().getCount(CounterType.DESPAIR);\n            if (count > 0) {\n                // select the permanents and hand cards in turn order\n                LinkedList<UUID> selectedObjects = new LinkedList<>();\n                PlayerList playerList = game.getState().getPlayerList(controller.getId());\n                Player currentPlayer = controller;\n                do {\n                    selectCards(currentPlayer, selectedObjects, count, source, game);\n                    currentPlayer = playerList.getNextInRange(controller, game);                    \n                } while (!currentPlayer.equals(controller) && controller.isInGame());\n                \n                // move permanents and hand cards to exile\n                for (UUID objectId : selectedObjects) {\n                    if (game.getState().getZone(objectId).equals(Zone.BATTLEFIELD)) {\n                        Permanent permanent = game.getPermanent(objectId);\n                        if (permanent != null) {\n                            Player player = game.getPlayer(permanent.getControllerId());\n                            if (player != null) {\n                                player.moveCardToExileWithInfo(permanent, null, \"\", source.getSourceId(), game, Zone.BATTLEFIELD);\n                            }\n                        }\n                    } else if (game.getState().getZone(objectId).equals(Zone.HAND)) {\n                        Card card = game.getCard(objectId);\n                        if (card != null) {\n                            Player player = game.getPlayer(card.getOwnerId());\n                            if (player != null) {\n                                player.moveCardToExileWithInfo(card, null, \"\", source.getSourceId(), game, Zone.HAND);\n                            }\n                        }                        \n                    }\n                }\n                \n            }\n            return true;\n        }\n        return false;\n    }","commit_id":"ede16deca1876c117a88345de0c408f9934bb80d","url":"https://github.com/magefree/mage"},{"original_method":"public Object evaluate(E exchange) {\n        return evaluateAs(exchange, resultQName);\n    }","id":39677,"modified_method":"public Object evaluate(E exchange) {\n        Object answer = evaluateAs(exchange, resultQName);\n        if (resultType != null) {\n            return ExchangeHelper.convertToType(exchange, resultType, answer);\n        }\n        return answer;\n    }","commit_id":"f439f4b3c21dbc41199629215b1640e186d4aad1","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Evaluates the expression as the given result type\n     */\n    protected synchronized Object evaluateAs(E exchange, QName resultType) {\n        this.exchange = exchange;\n        variableResolver.setExchange(exchange);\n        try {\n            Object document = getDocument(exchange);\n            if (resultType != null) {\n                if (document instanceof InputSource) {\n                    InputSource inputSource = (InputSource)document;\n                    return getExpression().evaluate(inputSource, resultType);\n                } else if (document instanceof DOMSource) {\n                    DOMSource source = (DOMSource) document;\n                    return getExpression().evaluate(source.getNode(), resultType);\n                } else {\n                    return getExpression().evaluate(document, resultType);\n                }\n            } else {\n                if (document instanceof InputSource) {\n                    InputSource inputSource = (InputSource)document;\n                    return getExpression().evaluate(inputSource);\n                }\n                else if (document instanceof DOMSource) {\n                    DOMSource source = (DOMSource)document;\n                    return getExpression().evaluate(source.getNode());\n                } else {\n                    return getExpression().evaluate(document);\n                }\n            }\n        } catch (XPathExpressionException e) {\n            throw new InvalidXPathExpression(getText(), e);\n        } catch (XPathFactoryConfigurationException e) {\n            throw new InvalidXPathExpression(getText(), e);\n        }\n    }","id":39678,"modified_method":"/**\n     * Evaluates the expression as the given result type\n     */\n    protected synchronized Object evaluateAs(E exchange, QName resultQName) {\n        this.exchange = exchange;\n        variableResolver.setExchange(exchange);\n        try {\n            Object document = getDocument(exchange);\n            if (resultQName != null) {\n                if (document instanceof InputSource) {\n                    InputSource inputSource = (InputSource)document;\n                    return getExpression().evaluate(inputSource, resultQName);\n                } else if (document instanceof DOMSource) {\n                    DOMSource source = (DOMSource) document;\n                    return getExpression().evaluate(source.getNode(), resultQName);\n                } else {\n                    return getExpression().evaluate(document, resultQName);\n                }\n            } else {\n                if (document instanceof InputSource) {\n                    InputSource inputSource = (InputSource)document;\n                    return getExpression().evaluate(inputSource);\n                }\n                else if (document instanceof DOMSource) {\n                    DOMSource source = (DOMSource)document;\n                    return getExpression().evaluate(source.getNode());\n                } else {\n                    return getExpression().evaluate(document);\n                }\n            }\n        } catch (XPathExpressionException e) {\n            throw new InvalidXPathExpression(getText(), e);\n        } catch (XPathFactoryConfigurationException e) {\n            throw new InvalidXPathExpression(getText(), e);\n        }\n    }","commit_id":"f439f4b3c21dbc41199629215b1640e186d4aad1","url":"https://github.com/apache/camel"},{"original_method":"public XPathFunction getOutBodyFunction() {\n        if (outBodyFunction == null) {\n            outBodyFunction = new XPathFunction() {\n                public Object evaluate(List list) throws XPathFunctionException {\n                    if (exchange == null) {\n                        return null;\n                    }\n                    return exchange.getOut().getBody();\n                }\n            };\n        }\n        return outBodyFunction;\n    }","id":39679,"modified_method":"public XPathFunction getOutBodyFunction() {\n        if (outBodyFunction == null) {\n            outBodyFunction = new XPathFunction() {\n                public Object evaluate(List list) throws XPathFunctionException {\n                    if (exchange != null) {\n                        Message out = exchange.getOut(false);\n                        if (out != null) {\n                            return out.getBody();\n                        }\n                    }\n                    return null;\n                }\n            };\n        }\n        return outBodyFunction;\n    }","commit_id":"f439f4b3c21dbc41199629215b1640e186d4aad1","url":"https://github.com/apache/camel"},{"original_method":"protected Object evaluate(Exchange exchange) {\n        Object answer = evaluateAs(exchange, resultQName);\n        if (resultType != null) {\n            return ExchangeHelper.convertToType(exchange, resultType, answer);\n        }\n        return answer;\n    }","id":39680,"modified_method":"protected Object evaluate(Exchange exchange) {\n        // only evaluate if there is some body\n        Object answer = exchange.getIn();\n        if (answer != null) {\n            answer = evaluateAs(exchange, resultQName);\n        }\n\n        // let the type converter have a chance if we for example should convert to a boolean\n        // which a null body will result in false\n        if (resultType != null) {\n            return ExchangeHelper.convertToType(exchange, resultType, answer);\n        }\n\n        return answer;\n    }","commit_id":"a7c6ec4c9fb75507bc733d8cf58343e7b5549e37","url":"https://github.com/apache/camel"},{"original_method":"protected Object doInEvaluateAs(XPathExpression xpathExpression, Exchange exchange, QName resultQName) {\n        if (LOG.isTraceEnabled()) {\n            LOG.trace(\"Evaluating exchange: \" + exchange + \" as: \" + resultQName);\n        }\n\n        Object answer;\n\n        // set exchange and variable resolver as thread locals for concurrency\n        this.exchange.set(exchange);\n\n        try {\n            Object document = getDocument(exchange);\n            if (resultQName != null) {\n                if (document instanceof InputSource) {\n                    InputSource inputSource = (InputSource) document;\n                    answer = xpathExpression.evaluate(inputSource, resultQName);\n                } else if (document instanceof DOMSource) {\n                    DOMSource source = (DOMSource) document;\n                    answer = xpathExpression.evaluate(source.getNode(), resultQName);\n                } else {\n                    answer = xpathExpression.evaluate(document, resultQName);\n                }\n            } else {\n                if (document instanceof InputSource) {\n                    InputSource inputSource = (InputSource) document;\n                    answer = xpathExpression.evaluate(inputSource);\n                } else if (document instanceof DOMSource) {\n                    DOMSource source = (DOMSource) document;\n                    answer = xpathExpression.evaluate(source.getNode());\n                } else {\n                    answer = xpathExpression.evaluate(document);\n                }\n            }\n        } catch (XPathExpressionException e) {\n            throw new InvalidXPathExpression(getText(), e);\n        }\n\n        if (LOG.isTraceEnabled()) {\n            LOG.trace(\"Done evaluating exchange: \" + exchange + \" as: \" + resultQName + \" with result: \" + answer);\n        }\n        return answer;\n    }","id":39681,"modified_method":"protected Object doInEvaluateAs(XPathExpression xpathExpression, Exchange exchange, QName resultQName) {\n        if (LOG.isTraceEnabled()) {\n            LOG.trace(\"Evaluating exchange: \" + exchange + \" as: \" + resultQName);\n        }\n\n        Object answer;\n\n        // set exchange and variable resolver as thread locals for concurrency\n        this.exchange.set(exchange);\n\n        try {\n            Object document = getDocument(exchange);\n\n            if (document == null) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Could not evaluate XPath as Exchange cannot be converted to a Document: \" + exchange + \". Returning null.\");\n                }\n                return null;\n            }\n\n            if (resultQName != null) {\n                if (document instanceof InputSource) {\n                    InputSource inputSource = (InputSource) document;\n                    answer = xpathExpression.evaluate(inputSource, resultQName);\n                } else if (document instanceof DOMSource) {\n                    DOMSource source = (DOMSource) document;\n                    answer = xpathExpression.evaluate(source.getNode(), resultQName);\n                } else {\n                    answer = xpathExpression.evaluate(document, resultQName);\n                }\n            } else {\n                if (document instanceof InputSource) {\n                    InputSource inputSource = (InputSource) document;\n                    answer = xpathExpression.evaluate(inputSource);\n                } else if (document instanceof DOMSource) {\n                    DOMSource source = (DOMSource) document;\n                    answer = xpathExpression.evaluate(source.getNode());\n                } else {\n                    answer = xpathExpression.evaluate(document);\n                }\n            }\n        } catch (XPathExpressionException e) {\n            throw new InvalidXPathExpression(getText(), e);\n        }\n\n        if (LOG.isTraceEnabled()) {\n            LOG.trace(\"Done evaluating exchange: \" + exchange + \" as: \" + resultQName + \" with result: \" + answer);\n        }\n        return answer;\n    }","commit_id":"a7c6ec4c9fb75507bc733d8cf58343e7b5549e37","url":"https://github.com/apache/camel"},{"original_method":"public boolean matches(Exchange exchange) {\n        Object booleanResult = evaluateAs(exchange, XPathConstants.BOOLEAN);\n        return exchange.getContext().getTypeConverter().convertTo(Boolean.class, booleanResult);\n    }","id":39682,"modified_method":"public boolean matches(Exchange exchange) {\n        // only evaluate if there is some body\n        Object answer = exchange.getIn();\n        if (answer != null) {\n            answer = evaluateAs(exchange, XPathConstants.BOOLEAN);\n        }\n\n        return exchange.getContext().getTypeConverter().convertTo(Boolean.class, answer);\n    }","commit_id":"a7c6ec4c9fb75507bc733d8cf58343e7b5549e37","url":"https://github.com/apache/camel"},{"original_method":"public void changeHistoryToXML(RWikiObject rwo, ContentHandler ch)\n\t\t\tthrows Exception\n\t{\n\t\tif (!isAvailable()) return;\n\n\t\tList changes = rwikiObjectService.findRWikiHistoryObjectsInReverse(rwo);\n\t\tif (changes == null) return;\n\t\tfor (Iterator i = changes.iterator(); i.hasNext();)\n\t\t{\n\t\t\tRWikiHistoryObject rwco = (RWikiHistoryObject) i.next();\n\t\t\tAttributesImpl propA = new AttributesImpl();\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_ID, SchemaNames.ATTR_ID, //$NON-NLS-1$\n\t\t\t\t\t\"string\", rwco.getId()); //$NON-NLS-1$\n\t\t\t// FIXME why do we know about \"@\" here?!\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", rwco.getName() + \"@\" //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t\t\t\t+ rwco.getRevision());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_LOCAL_NAME, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_LOCAL_NAME, \"string\", NameHelper //$NON-NLS-1$\n\t\t\t\t\t\t\t.localizeName(rwo.getName(), rwo.getRealm()));\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_OWNER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_OWNER, \"string\", rwco.getOwner()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_OWNER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REALM, \"string\", rwco.getRealm()); //$NON-NLS-1$\n\t\t\tpropA\n\t\t\t\t\t.addAttribute(\"\", SchemaNames.ATTR_REFERENCED, //$NON-NLS-1$\n\t\t\t\t\t\t\tSchemaNames.ATTR_REFERENCED, \"string\", rwco //$NON-NLS-1$\n\t\t\t\t\t\t\t\t\t.getReferenced());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_SHA1, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_SHA1, \"string\", rwco.getSha1()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_USER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_USER, \"string\", rwco.getUser()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_DISPLAY_USER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_DISPLAY_USER, \"string\", UserDisplayHelper //$NON-NLS-1$\n\t\t\t\t\t\t\t.formatDisplayName(rwco.getUser(), rwco.getRealm()));\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REVISION, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REVISION, \"string\", String.valueOf(rwco //$NON-NLS-1$\n\t\t\t\t\t\t\t.getRevision()));\n\t\t\tSimpleDateFormat sd = new SimpleDateFormat(RFC822DATE);\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_LAST_CHANGE, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_LAST_CHANGE, \"string\", sd.format(rwco //$NON-NLS-1$\n\t\t\t\t\t\t\t.getVersion()));\n\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_CHANGE,\n\t\t\t\t\tSchemaNames.EL_NSCHANGE, propA);\n\t\t\trenderToXML(rwco, ch,true);\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_CHANGE,\n\t\t\t\t\tSchemaNames.EL_NSCHANGE);\n\t\t}\n\n\t}","id":39683,"modified_method":"public void changeHistoryToXML(RWikiObject rwo, ContentHandler ch)\n\t\t\tthrows Exception\n\t{\n\t\tif (!isAvailable()) return;\n\n\t\tList changes = rwikiObjectService.findRWikiHistoryObjectsInReverse(rwo);\n\t\tif (changes == null) return;\n\t\tfor (Iterator i = changes.iterator(); i.hasNext();)\n\t\t{\n\t\t\tRWikiHistoryObject rwco = (RWikiHistoryObject) i.next();\n\t\t\tAttributesImpl propA = new AttributesImpl();\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_ID, SchemaNames.ATTR_ID, //$NON-NLS-1$\n\t\t\t\t\t\"string\", rwco.getId()); //$NON-NLS-1$\n\t\t\t// FIXME why do we know about \"@\" here?!\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", rwco.getName() + \"@\" //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t\t\t\t+ rwco.getRevision());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_LOCAL_NAME, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_LOCAL_NAME, \"string\", NameHelper //$NON-NLS-1$\n\t\t\t\t\t\t\t.localizeName(rwo.getName(), rwo.getRealm()));\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_OWNER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_OWNER, \"string\", rwco.getOwner()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_OWNER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REALM, \"string\", rwco.getRealm()); //$NON-NLS-1$\n\t\t\tpropA\n\t\t\t\t\t.addAttribute(\"\", SchemaNames.ATTR_REFERENCED, //$NON-NLS-1$\n\t\t\t\t\t\t\tSchemaNames.ATTR_REFERENCED, \"string\", rwco //$NON-NLS-1$\n\t\t\t\t\t\t\t\t\t.getReferenced());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_SHA1, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_SHA1, \"string\", rwco.getSha1()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_USER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_USER, \"string\", rwco.getUser()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_DISPLAY_USER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_DISPLAY_USER, \"string\", UserDisplayHelper //$NON-NLS-1$\n\t\t\t\t\t\t\t.formatDisplayName(rwco.getUser(), rwco.getRealm()));\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REVISION, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REVISION, \"string\", String.valueOf(rwco //$NON-NLS-1$\n\t\t\t\t\t\t\t.getRevision()));\n\t\t\tSimpleDateFormat sd = new SimpleDateFormat(RFC822DATE);\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_LAST_CHANGE, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_LAST_CHANGE, \"string\", sd.format(rwco //$NON-NLS-1$\n\t\t\t\t\t\t\t.getVersion()));\n\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_CHANGE,\n\t\t\t\t\tSchemaNames.EL_NSCHANGE, propA);\n\t\t\trenderToXML(rwco, ch, true, true);\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_CHANGE,\n\t\t\t\t\tSchemaNames.EL_NSCHANGE);\n\t\t}\n\n\t}","commit_id":"40a5fda9e9d17e653cc0fb5774633871284307e1","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void recentChangesToXML(RWikiEntity rwe, ContentHandler ch)\n\t\t\tthrows Exception\n\t{\n\t\tif (!isAvailable()) return;\n\n\t\tGregorianCalendar g = new GregorianCalendar();\n\t\tg.setTime(new Date());\n\t\tg.add(GregorianCalendar.YEAR, -1);\n\n\t\tDecoded d = decode(rwe.getReference() + getMinorType());\n\t\tString basepath = d.getContext() + d.getContainer();\n\t\tList changes = rwikiObjectService.findAllChangedSince(g.getTime(),\n\t\t\t\tbasepath);\n\t\tint nchanges = 0;\n\t\t\n\t\t\n\t\tfor (Iterator i = changes.iterator(); i.hasNext() && nchanges < 20;)\n\t\t{\n\t\t\tnchanges++;\n\t\t\tRWikiCurrentObject rwco = (RWikiCurrentObject) i.next();\n\t\t\tAttributesImpl propA = new AttributesImpl();\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_ID, SchemaNames.ATTR_ID, //$NON-NLS-1$\n\t\t\t\t\t\"string\", rwco.getId()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", rwco.getName()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_LOCAL_NAME, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_LOCAL_NAME, \"string\", NameHelper //$NON-NLS-1$\n\t\t\t\t\t\t\t.localizeName(rwco.getName(), rwco.getRealm()));\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_OWNER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_OWNER, \"string\", rwco.getOwner()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REALM, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REALM, \"string\", rwco.getRealm()); //$NON-NLS-1$\n\t\t\tpropA\n\t\t\t\t\t.addAttribute(\"\", SchemaNames.ATTR_REFERENCED, //$NON-NLS-1$\n\t\t\t\t\t\t\tSchemaNames.ATTR_REFERENCED, \"string\", rwco //$NON-NLS-1$\n\t\t\t\t\t\t\t\t\t.getReferenced());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_SHA1, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_SHA1, \"string\", rwco.getSha1()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_USER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_USER, \"string\", rwco.getUser()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_DISPLAY_USER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_DISPLAY_USER, \"string\", UserDisplayHelper //$NON-NLS-1$\n\t\t\t\t\t\t\t.formatDisplayName(rwco.getUser(), rwco.getRealm()));\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REVISION, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REVISION, \"string\", String.valueOf(rwco //$NON-NLS-1$\n\t\t\t\t\t\t\t.getRevision()));\n\t\t\tSimpleDateFormat sd = new SimpleDateFormat(RFC822DATE);\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_LAST_CHANGE, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_LAST_CHANGE, \"string\", sd.format(rwco //$NON-NLS-1$\n\t\t\t\t\t\t\t.getVersion()));\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_CHANGE,\n\t\t\t\t\tSchemaNames.EL_NSCHANGE, propA);\n\t\t\trenderToXML(rwco, ch, true);\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_CHANGE,\n\t\t\t\t\tSchemaNames.EL_NSCHANGE);\n\t\t}\n\n\t}","id":39684,"modified_method":"public void recentChangesToXML(RWikiEntity rwe, ContentHandler ch)\n\t\t\tthrows Exception\n\t{\n\t\tif (!isAvailable()) return;\n\n\t\tGregorianCalendar g = new GregorianCalendar();\n\t\tg.setTime(new Date());\n\t\tg.add(GregorianCalendar.YEAR, -1);\n\n\t\tDecoded d = decode(rwe.getReference() + getMinorType());\n\t\tString basepath = d.getContext() + d.getContainer();\n\t\tList changes = rwikiObjectService.findAllChangedSince(g.getTime(),\n\t\t\t\tbasepath);\n\t\tint nchanges = 0;\n\t\t\n\t\t\n\t\tfor (Iterator i = changes.iterator(); i.hasNext() && nchanges < 20;)\n\t\t{\n\t\t\tnchanges++;\n\t\t\tRWikiCurrentObject rwco = (RWikiCurrentObject) i.next();\n\t\t\tAttributesImpl propA = new AttributesImpl();\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_ID, SchemaNames.ATTR_ID, //$NON-NLS-1$\n\t\t\t\t\t\"string\", rwco.getId()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", rwco.getName()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_LOCAL_NAME, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_LOCAL_NAME, \"string\", NameHelper //$NON-NLS-1$\n\t\t\t\t\t\t\t.localizeName(rwco.getName(), rwco.getRealm()));\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_OWNER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_OWNER, \"string\", rwco.getOwner()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REALM, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REALM, \"string\", rwco.getRealm()); //$NON-NLS-1$\n\t\t\tpropA\n\t\t\t\t\t.addAttribute(\"\", SchemaNames.ATTR_REFERENCED, //$NON-NLS-1$\n\t\t\t\t\t\t\tSchemaNames.ATTR_REFERENCED, \"string\", rwco //$NON-NLS-1$\n\t\t\t\t\t\t\t\t\t.getReferenced());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_SHA1, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_SHA1, \"string\", rwco.getSha1()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_USER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_USER, \"string\", rwco.getUser()); //$NON-NLS-1$\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_DISPLAY_USER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_DISPLAY_USER, \"string\", UserDisplayHelper //$NON-NLS-1$\n\t\t\t\t\t\t\t.formatDisplayName(rwco.getUser(), rwco.getRealm()));\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REVISION, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REVISION, \"string\", String.valueOf(rwco //$NON-NLS-1$\n\t\t\t\t\t\t\t.getRevision()));\n\t\t\tSimpleDateFormat sd = new SimpleDateFormat(RFC822DATE);\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_LAST_CHANGE, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_LAST_CHANGE, \"string\", sd.format(rwco //$NON-NLS-1$\n\t\t\t\t\t\t\t.getVersion()));\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_CHANGE,\n\t\t\t\t\tSchemaNames.EL_NSCHANGE, propA);\n\t\t\trenderToXML(rwco, ch, true, true);\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_CHANGE,\n\t\t\t\t\tSchemaNames.EL_NSCHANGE);\n\t\t}\n\n\t}","commit_id":"40a5fda9e9d17e653cc0fb5774633871284307e1","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic void outputContent(Entity entity, Entity sidebar, HttpServletRequest request,\n\t\t\tHttpServletResponse res)\n\t{\n\t\tif (!isAvailable()) return;\n\n\t\tif (!(entity instanceof RWikiEntity)) return;\n\n\t\ttry\n\t\t{\n\n\t\t\tMap rheaders = getResponseHeaders();\n\t\t\tif (rheaders != null)\n\t\t\t{\n\t\t\t\tfor (Iterator i = rheaders.keySet().iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tString name = (String) i.next();\n\t\t\t\t\tString value = (String) rheaders.get(name);\n\t\t\t\t\tres.setHeader(name, value);\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tContentHandler opch = getOutputHandler(res.getOutputStream());\n\t\t\tContentHandler ch = null;\n\t\t\tif (false)\n\t\t\t{\n\t\t\t\tch = new DebugContentHandler(opch);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tch = opch;\n\t\t\t}\n\t\t\tDecoded decodedReference = decode(entity.getReference() + getMinorType());\t\t\t\n\t\t\t\n\t\t\tAttributes dummyAttributes = new AttributesImpl();\n\n\t\t\tch.startDocument();\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\tSchemaNames.EL_ENTITYSERVICE,\n\t\t\t\t\tSchemaNames.EL_NSENTITYSERVICE, dummyAttributes);\n\n\t\t\t{\n\t\t\t\tAttributesImpl propA = new AttributesImpl();\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_PATH_INFO, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_REQUEST_PATH_INFO, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t\t.getPathInfo());\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_USER, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_REQUEST_USER, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t\t.getRemoteUser());\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_PROTOCOL, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_REQUEST_PROTOCOL, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t\t.getProtocol());\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_SERVER_NAME, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_REQUEST_SERVER_NAME, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t\t.getServerName());\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_SERVER_PORT, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_REQUEST_SERVER_PORT, \"string\", String //$NON-NLS-1$\n\t\t\t\t\t\t\t\t.valueOf(request.getServerPort()));\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_REQUEST_URL, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_REQUEST_REQUEST_URL, \"string\", String //$NON-NLS-1$\n\t\t\t\t\t\t\t\t.valueOf(request.getRequestURL()));\n\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_SERVER_URL, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_SERVER_URL, \"string\", //$NON-NLS-1$\n\t\t\t\t\t\tServerConfigurationService.getServerUrl());\n\n\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\tSchemaNames.EL_REQUEST_PROPERTIES,\n\t\t\t\t\t\tSchemaNames.EL_NSREQUEST_PROPERTIES, propA);\n\n\t\t\t}\n\n\t\t\taddRequestAttributes(ch, request);\n\n\t\t\taddRequestParameters(ch, request);\n\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\tSchemaNames.EL_REQUEST_PROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSREQUEST_PROPERTIES);\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ENTITY,\n\t\t\t\t\tSchemaNames.EL_NSENTITY, dummyAttributes);\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\tSchemaNames.EL_XMLPROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTIES, dummyAttributes);\n\t\t\tResourceProperties rp = entity.getProperties();\n\n\t\t\tfor (Iterator i = rp.getPropertyNames(); i.hasNext();)\n\t\t\t{\n\t\t\t\tObject key = i.next();\n\t\t\t\tString name = String.valueOf(key);\n\t\t\t\tString value = String.valueOf(rp.getProperty(name));\n\t\t\t\tAttributesImpl propA = new AttributesImpl();\n\t\t\t\taddPropertyElement(name, value, ch);\n\t\t\t}\n\t\t\taddPropertyElement(\"_handler\", \" XSLTEntity Handler\", ch); //$NON-NLS-1$ //$NON-NLS-2$\n\n\t\t\tSite site = (Site) siteService.getEntity(EntityManager.newReference(decodedReference.getContext()));\n\t\t\tString title;\n\t\t\tif (site != null) {\n\t\t\t\ttitle = site.getTitle();\n\t\t\t} else {\n\t\t\t\ttitle = decodedReference.getContext();\n\t\t\t}\n\n\t\t\taddPropertyElement(\"_siteDisplay\", title, ch); //$NON-NLS-1$\n\t\t\taddPropertyElement(\"_container\", decodedReference.getContainer(), ch); //$NON-NLS-1$\n\n\t\t\tif (entity instanceof RWikiEntity)\n\t\t\t{\n\t\t\t\tRWikiEntity rwe = (RWikiEntity) entity;\n\n\t\t\t\tif (!rwe.isContainer())\n\t\t\t\t{\n\t\t\t\t\tRWikiObject rwo = rwe.getRWikiObject();\n\t\t\t\t\ttitle = Messages.getString(\"XLSTChangesHandler.19\") + title + \":\" + NameHelper.localizeName(rwo.getName(), decodedReference.getContext());\t\t\t\t\t //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (decodedReference.getContainer() != null && decodedReference.getContainer().length() > 1) {\n\t\t\t\t\t\ttitle = Messages.getString(\"XLSTChangesHandler.21\") + title + \":\" + decodedReference.getContainer().substring(1); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttitle = Messages.getString(\"XLSTChangesHandler.23\") + title; //$NON-NLS-1$\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\taddPropertyElement(\"_title\", title, ch); //$NON-NLS-1$\n\n\t\t\t}\n\t\t\t\n\t\t\t{\n\t\t\t\taddPropertyElement(\"_description\", ServerConfigurationService.getString(\"ui.service\"), ch); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t\n\t\t\t}\n\t\t\t{\n\t\t\t\t// 2006-02-16T18:28:03+01:00\n\t\t\t\tSimpleDateFormat sd = new SimpleDateFormat(\n\t\t\t\t\t\tRFC822DATE);\n\t\t\t\taddPropertyElement(\"_datestamp\", sd //$NON-NLS-1$\n\t\t\t\t\t\t.format(new Date()), ch);\n\t\t\t}\n\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\tSchemaNames.EL_XMLPROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTIES);\n\n\t\t\tif (entity instanceof RWikiEntity)\n\t\t\t{\n\t\t\t\tRWikiEntity rwe = (RWikiEntity) entity;\n\t\t\t\tif (!rwe.isContainer())\n\t\t\t\t{\n\t\t\t\t\tRWikiObject rwo = rwe.getRWikiObject();\n\t\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\t\tSchemaNames.EL_RENDEREDCONTENT,\n\t\t\t\t\t\t\tSchemaNames.EL_NSRENDEREDCONTENT, dummyAttributes);\n\n\t\t\t\t\trenderToXML(rwo, ch,true);\n\t\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\t\tSchemaNames.EL_RENDEREDCONTENT,\n\t\t\t\t\t\t\tSchemaNames.EL_NSRENDEREDCONTENT);\n\t\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\t\tSchemaNames.EL_CHANGES, SchemaNames.EL_NSCHANGES,\n\t\t\t\t\t\t\tdummyAttributes);\n\t\t\t\t\tchangeHistoryToXML(rwo, ch);\n\t\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\t\tSchemaNames.EL_CHANGES, SchemaNames.EL_NSCHANGES);\n\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\t\tSchemaNames.EL_CHANGES, SchemaNames.EL_NSCHANGES,\n\t\t\t\t\t\t\tdummyAttributes);\n\t\t\t\t\trecentChangesToXML(rwe, ch);\n\t\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\t\tSchemaNames.EL_CHANGES, SchemaNames.EL_NSCHANGES);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ENTITY,\n\t\t\t\t\tSchemaNames.EL_NSXMLSERVICE);\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\tSchemaNames.EL_ENTITYSERVICE, SchemaNames.EL_NSXMLSERVICE);\n\n\t\t\tch.endDocument();\n\n\t\t}\n\t\tcatch (Exception ex)\n\t\t{\n\t\t\tex.printStackTrace();\n\t\t\tthrow new RuntimeException(\"Failed to serialise \" //$NON-NLS-1$\n\t\t\t\t\t+ ex.getLocalizedMessage(), ex);\n\t\t}\n\t}","id":39685,"modified_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic void outputContent(Entity entity, Entity sidebar, HttpServletRequest request,\n\t\t\tHttpServletResponse res)\n\t{\n\t\tif (!isAvailable()) return;\n\n\t\tif (!(entity instanceof RWikiEntity)) return;\n\n\t\ttry\n\t\t{\n\n\t\t\tMap rheaders = getResponseHeaders();\n\t\t\tif (rheaders != null)\n\t\t\t{\n\t\t\t\tfor (Iterator i = rheaders.keySet().iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tString name = (String) i.next();\n\t\t\t\t\tString value = (String) rheaders.get(name);\n\t\t\t\t\tres.setHeader(name, value);\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tContentHandler opch = getOutputHandler(res.getOutputStream());\n\t\t\tContentHandler ch = null;\n\t\t\tif (false)\n\t\t\t{\n\t\t\t\tch = new DebugContentHandler(opch);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tch = opch;\n\t\t\t}\n\t\t\tDecoded decodedReference = decode(entity.getReference() + getMinorType());\t\t\t\n\t\t\t\n\t\t\tAttributes dummyAttributes = new AttributesImpl();\n\n\t\t\tch.startDocument();\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\tSchemaNames.EL_ENTITYSERVICE,\n\t\t\t\t\tSchemaNames.EL_NSENTITYSERVICE, dummyAttributes);\n\n\t\t\t{\n\t\t\t\tAttributesImpl propA = new AttributesImpl();\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_PATH_INFO, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_REQUEST_PATH_INFO, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t\t.getPathInfo());\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_USER, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_REQUEST_USER, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t\t.getRemoteUser());\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_PROTOCOL, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_REQUEST_PROTOCOL, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t\t.getProtocol());\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_SERVER_NAME, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_REQUEST_SERVER_NAME, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t\t.getServerName());\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_SERVER_PORT, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_REQUEST_SERVER_PORT, \"string\", String //$NON-NLS-1$\n\t\t\t\t\t\t\t\t.valueOf(request.getServerPort()));\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_REQUEST_URL, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_REQUEST_REQUEST_URL, \"string\", String //$NON-NLS-1$\n\t\t\t\t\t\t\t\t.valueOf(request.getRequestURL()));\n\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_SERVER_URL, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_SERVER_URL, \"string\", //$NON-NLS-1$\n\t\t\t\t\t\tServerConfigurationService.getServerUrl());\n\n\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\tSchemaNames.EL_REQUEST_PROPERTIES,\n\t\t\t\t\t\tSchemaNames.EL_NSREQUEST_PROPERTIES, propA);\n\n\t\t\t}\n\n\t\t\taddRequestAttributes(ch, request);\n\n\t\t\taddRequestParameters(ch, request);\n\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\tSchemaNames.EL_REQUEST_PROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSREQUEST_PROPERTIES);\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ENTITY,\n\t\t\t\t\tSchemaNames.EL_NSENTITY, dummyAttributes);\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\tSchemaNames.EL_XMLPROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTIES, dummyAttributes);\n\t\t\tResourceProperties rp = entity.getProperties();\n\n\t\t\tfor (Iterator i = rp.getPropertyNames(); i.hasNext();)\n\t\t\t{\n\t\t\t\tObject key = i.next();\n\t\t\t\tString name = String.valueOf(key);\n\t\t\t\tString value = String.valueOf(rp.getProperty(name));\n\t\t\t\tAttributesImpl propA = new AttributesImpl();\n\t\t\t\taddPropertyElement(name, value, ch);\n\t\t\t}\n\t\t\taddPropertyElement(\"_handler\", \" XSLTEntity Handler\", ch); //$NON-NLS-1$ //$NON-NLS-2$\n\n\t\t\tSite site = (Site) siteService.getEntity(EntityManager.newReference(decodedReference.getContext()));\n\t\t\tString title;\n\t\t\tif (site != null) {\n\t\t\t\ttitle = site.getTitle();\n\t\t\t} else {\n\t\t\t\ttitle = decodedReference.getContext();\n\t\t\t}\n\n\t\t\taddPropertyElement(\"_siteDisplay\", title, ch); //$NON-NLS-1$\n\t\t\taddPropertyElement(\"_container\", decodedReference.getContainer(), ch); //$NON-NLS-1$\n\n\t\t\tif (entity instanceof RWikiEntity)\n\t\t\t{\n\t\t\t\tRWikiEntity rwe = (RWikiEntity) entity;\n\n\t\t\t\tif (!rwe.isContainer())\n\t\t\t\t{\n\t\t\t\t\tRWikiObject rwo = rwe.getRWikiObject();\n\t\t\t\t\ttitle = Messages.getString(\"XLSTChangesHandler.19\") + title + \":\" + NameHelper.localizeName(rwo.getName(), decodedReference.getContext());\t\t\t\t\t //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (decodedReference.getContainer() != null && decodedReference.getContainer().length() > 1) {\n\t\t\t\t\t\ttitle = Messages.getString(\"XLSTChangesHandler.21\") + title + \":\" + decodedReference.getContainer().substring(1); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttitle = Messages.getString(\"XLSTChangesHandler.23\") + title; //$NON-NLS-1$\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\taddPropertyElement(\"_title\", title, ch); //$NON-NLS-1$\n\n\t\t\t}\n\t\t\t\n\t\t\t{\n\t\t\t\taddPropertyElement(\"_description\", ServerConfigurationService.getString(\"ui.service\"), ch); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t\n\t\t\t}\n\t\t\t{\n\t\t\t\t// 2006-02-16T18:28:03+01:00\n\t\t\t\tSimpleDateFormat sd = new SimpleDateFormat(\n\t\t\t\t\t\tRFC822DATE);\n\t\t\t\taddPropertyElement(\"_datestamp\", sd //$NON-NLS-1$\n\t\t\t\t\t\t.format(new Date()), ch);\n\t\t\t}\n\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\tSchemaNames.EL_XMLPROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTIES);\n\n\t\t\tif (entity instanceof RWikiEntity)\n\t\t\t{\n\t\t\t\tRWikiEntity rwe = (RWikiEntity) entity;\n\t\t\t\tif (!rwe.isContainer())\n\t\t\t\t{\n\t\t\t\t\tRWikiObject rwo = rwe.getRWikiObject();\n\t\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\t\tSchemaNames.EL_RENDEREDCONTENT,\n\t\t\t\t\t\t\tSchemaNames.EL_NSRENDEREDCONTENT, dummyAttributes);\n\n\t\t\t\t\trenderToXML(rwo, ch, true, true);\n\t\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\t\tSchemaNames.EL_RENDEREDCONTENT,\n\t\t\t\t\t\t\tSchemaNames.EL_NSRENDEREDCONTENT);\n\t\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\t\tSchemaNames.EL_CHANGES, SchemaNames.EL_NSCHANGES,\n\t\t\t\t\t\t\tdummyAttributes);\n\t\t\t\t\tchangeHistoryToXML(rwo, ch);\n\t\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\t\tSchemaNames.EL_CHANGES, SchemaNames.EL_NSCHANGES);\n\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\t\tSchemaNames.EL_CHANGES, SchemaNames.EL_NSCHANGES,\n\t\t\t\t\t\t\tdummyAttributes);\n\t\t\t\t\trecentChangesToXML(rwe, ch);\n\t\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\t\t\tSchemaNames.EL_CHANGES, SchemaNames.EL_NSCHANGES);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ENTITY,\n\t\t\t\t\tSchemaNames.EL_NSXMLSERVICE);\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER,\n\t\t\t\t\tSchemaNames.EL_ENTITYSERVICE, SchemaNames.EL_NSXMLSERVICE);\n\n\t\t\tch.endDocument();\n\n\t\t}\n\t\tcatch (Exception ex)\n\t\t{\n\t\t\tex.printStackTrace();\n\t\t\tthrow new RuntimeException(\"Failed to serialise \" //$NON-NLS-1$\n\t\t\t\t\t+ ex.getLocalizedMessage(), ex);\n\t\t}\n\t}","commit_id":"40a5fda9e9d17e653cc0fb5774633871284307e1","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic void outputContent(final Entity entity, final Entity sideBar,\n\t\t\tfinal HttpServletRequest request, final HttpServletResponse res)\n\t{\n\t\tif (!isAvailable()) return;\n\t\tif (!(entity instanceof RWikiEntity)) return;\n\n\t\ttry\n\t\t{\n\t\t\tString skin = ServerConfigurationService.getString(\"skin.default\"); //$NON-NLS-1$\n\t\t\tString skinRepo = ServerConfigurationService.getString(\"skin.repo\"); //$NON-NLS-1$\n\t\t\trequest.setAttribute(\"sakai.skin.repo\", skinRepo); //$NON-NLS-1$\n\t\t\trequest.setAttribute(\"sakai.skin\", skin); //$NON-NLS-1$\n\n\t\t\tHttpSession s = request.getSession();\n\t\t\tPageVisits pageVisits = (PageVisits) s.getAttribute(XSLTEntityHandler.class\n\t\t\t\t\t.getName()\n\t\t\t\t\t+ this.getMinorType() + \"_visits\");\n\t\t\t\n\t\t\tboolean withBreadcrumbs = !\"0\".equals(request.getParameter(breadCrumbParameter ) );\n\t\t\tif (pageVisits == null)\n\t\t\t{\n\t\t\t\tpageVisits = new PageVisits();\n\t\t\t\ts.setAttribute(XSLTEntityHandler.class.getName() + this.getMinorType()\n\t\t\t\t\t\t+ \"_visits\", pageVisits);\n\t\t\t}\n\t\t\tRWikiEntity rwe = (RWikiEntity) entity;\n\t\t\tif (!rwe.isContainer())\n\t\t\t{\n\t\t\t\tRWikiObject rwo = rwe.getRWikiObject();\n\t\t\t\tpageVisits.addPage(rwo.getName());\n\t\t\t}\n\n\t\t\tsetCurrentRequest(request);\n\n\t\t\tif (responseHeaders != null)\n\t\t\t{\n\t\t\t\tfor (Iterator i = responseHeaders.keySet().iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tString name = (String) i.next();\n\t\t\t\t\tString value = (String) responseHeaders.get(name);\n\t\t\t\t\tres.setHeader(name, value);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tOutputStream out = res.getOutputStream();\n\n\t\t\tContentHandler opch = getOutputHandler(out);\n\t\t\tContentHandler ch = null;\n\t\t\tif (false)\n\t\t\t{\n\t\t\t\tch = new DebugContentHandler(opch);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tch = opch;\n\t\t\t}\n\n\t\t\tAttributes dummyAttributes = new AttributesImpl();\n\n\t\t\tch.startDocument();\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ENTITYSERVICE,\n\t\t\t\t\tSchemaNames.EL_NSENTITYSERVICE, dummyAttributes);\n\n\t\t\tAttributesImpl propA = new AttributesImpl();\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_PATH_INFO, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REQUEST_PATH_INFO, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t.getPathInfo());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_USER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REQUEST_USER, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t.getRemoteUser());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_PROTOCOL, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REQUEST_PROTOCOL, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t.getProtocol());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_SERVER_NAME, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REQUEST_SERVER_NAME, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t.getServerName());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_SERVER_PORT, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REQUEST_SERVER_PORT, \"string\", String //$NON-NLS-1$\n\t\t\t\t\t\t\t.valueOf(request.getServerPort()));\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_REQUEST_URL, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REQUEST_REQUEST_URL, \"string\", String //$NON-NLS-1$\n\t\t\t\t\t\t\t.valueOf(request.getRequestURL()));\n\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_REQUEST_PROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSREQUEST_PROPERTIES, propA);\n\t\t\taddRequestAttributes(ch, request);\n\t\t\taddRequestParameters(ch, request);\n\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_REQUEST_PROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSREQUEST_PROPERTIES);\n\n\t\t\tif ( withBreadcrumbs ) {\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_PAGEVISITS,\n\t\t\t\t\tSchemaNames.EL_NSPAGEVISITS, dummyAttributes);\n\n\t\t\tList<String[]> pv = pageVisits.getPageNames(this.getMinorType());\n\n\t\t\tfor (Iterator<String[]> i = pv.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tString[] visit = i.next();\n\t\t\t\tpropA = new AttributesImpl();\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_URL, SchemaNames.ATTR_URL,\n\t\t\t\t\t\t\"string\", visit[0]);\n\t\t\t\taddElement(ch, SchemaNames.NS_CONTAINER, SchemaNames.EL_PAGEVISIT,\n\t\t\t\t\t\tSchemaNames.EL_NSPAGEVISIT, propA, visit[1]);\n\t\t\t}\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_PAGEVISITS,\n\t\t\t\t\tSchemaNames.EL_NSPAGEVISITS);\n\t\t\t}\n\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ENTITY,\n\t\t\t\t\tSchemaNames.EL_NSENTITY, dummyAttributes);\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTIES, dummyAttributes);\n\t\t\tResourceProperties rp = entity.getProperties();\n\n\t\t\tfor (Iterator i = rp.getPropertyNames(); i.hasNext();)\n\t\t\t{\n\t\t\t\tObject key = i.next();\n\t\t\t\tString name = String.valueOf(key);\n\t\t\t\tString value = String.valueOf(rp.getProperty(name));\n\t\t\t\tpropA = new AttributesImpl();\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", name); //$NON-NLS-1$\n\t\t\t\taddElement(ch, SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTY,\n\t\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTY, propA, value);\n\t\t\t}\n\t\t\tpropA = new AttributesImpl();\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", \"_handler\"); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\taddElement(ch, SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTY,\n\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTY, propA, \" XSLTEntity Handler\"); //$NON-NLS-1$\n\n\t\t\tif (!rwe.isContainer())\n\t\t\t{\n\t\t\t\tRWikiObject rwo = rwe.getRWikiObject();\n\t\t\t\tpropA = new AttributesImpl();\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", \"_title\"); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\taddElement(ch, SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTY,\n\t\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTY, propA, NameHelper.localizeName(rwo\n\t\t\t\t\t\t\t\t.getName(), rwo.getRealm()));\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpropA = new AttributesImpl();\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", \"_title\"); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\taddElement(ch, SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTY,\n\t\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTY, propA, entity.getReference());\n\n\t\t\t}\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTIES);\n\n\t\t\tif (!rwe.isContainer())\n\t\t\t{\n\t\t\t\tRWikiObject rwo = rwe.getRWikiObject();\n\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RENDEREDCONTENT,\n\t\t\t\t\t\tSchemaNames.EL_NSRENDEREDCONTENT, dummyAttributes);\n\t\t\t\trenderToXML(rwo, ch, withBreadcrumbs);\n\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RENDEREDCONTENT,\n\t\t\t\t\t\tSchemaNames.EL_NSRENDEREDCONTENT);\n\t\t\t}\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ENTITY,\n\t\t\t\t\tSchemaNames.EL_NSENTITY);\n\n\t\t\tif (sideBar != null && sideBar instanceof RWikiEntity)\n\t\t\t{\n\n\t\t\t\tRWikiEntity sbrwe = (RWikiEntity) sideBar;\n\t\t\t\tRWikiObject sbrwo = sbrwe.getRWikiObject();\n\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_SIDEBAR,\n\t\t\t\t\t\tSchemaNames.EL_NSSIDEBAR, dummyAttributes);\n\n\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTIES,\n\t\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTIES, dummyAttributes);\n\t\t\t\tpropA = new AttributesImpl();\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", \"_title\"); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\taddElement(ch, SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTY,\n\t\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTY, propA, NameHelper.localizeName(\n\t\t\t\t\t\t\t\tsbrwo.getName(), sbrwo.getRealm()));\n\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTIES,\n\t\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTIES);\n\n\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RENDEREDCONTENT,\n\t\t\t\t\t\tSchemaNames.EL_NSRENDEREDCONTENT, dummyAttributes);\n\t\t\t\trenderToXML(sbrwo, ch, withBreadcrumbs);\n\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RENDEREDCONTENT,\n\t\t\t\t\t\tSchemaNames.EL_NSRENDEREDCONTENT);\n\n\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_SIDEBAR,\n\t\t\t\t\t\tSchemaNames.EL_NSSIDEBAR);\n\n\t\t\t}\n\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ENTITYSERVICE,\n\t\t\t\t\tSchemaNames.EL_NSENTITYSERVICE);\n\n\t\t\tch.endDocument();\n\n\t\t}\n\t\tcatch (Throwable ex)\n\t\t{\n\t\t\tlog.info(\"Failed to serialize \" + ex.getMessage()); //$NON-NLS-1$\n\t\t\tex.printStackTrace();\n\t\t\tthrow new RuntimeException(Messages.getString(\"XSLTEntityHandler.68\") //$NON-NLS-1$\n\t\t\t\t\t+ ex.getLocalizedMessage(), ex);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tsetCurrentRequest(null);\n\t\t}\n\t}","id":39686,"modified_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic void outputContent(final Entity entity, final Entity sideBar,\n\t\t\tfinal HttpServletRequest request, final HttpServletResponse res)\n\t{\n\t\tif (!isAvailable()) return;\n\t\tif (!(entity instanceof RWikiEntity)) return;\n\n\t\ttry\n\t\t{\n\t\t\tString skin = ServerConfigurationService.getString(\"skin.default\"); //$NON-NLS-1$\n\t\t\tString skinRepo = ServerConfigurationService.getString(\"skin.repo\"); //$NON-NLS-1$\n\t\t\trequest.setAttribute(\"sakai.skin.repo\", skinRepo); //$NON-NLS-1$\n\t\t\trequest.setAttribute(\"sakai.skin\", skin); //$NON-NLS-1$\n\n\t\t\tHttpSession s = request.getSession();\n\t\t\tPageVisits pageVisits = (PageVisits) s.getAttribute(XSLTEntityHandler.class\n\t\t\t\t\t.getName()\n\t\t\t\t\t+ this.getMinorType() + \"_visits\");\n\t\t\t\n\t\t\tboolean withBreadcrumbs = !\"0\".equals(request.getParameter(breadCrumbParameter ) );\n\t\t\tif (pageVisits == null)\n\t\t\t{\n\t\t\t\tpageVisits = new PageVisits();\n\t\t\t\ts.setAttribute(XSLTEntityHandler.class.getName() + this.getMinorType()\n\t\t\t\t\t\t+ \"_visits\", pageVisits);\n\t\t\t}\n\t\t\tRWikiEntity rwe = (RWikiEntity) entity;\n\t\t\tif (!rwe.isContainer())\n\t\t\t{\n\t\t\t\tRWikiObject rwo = rwe.getRWikiObject();\n\t\t\t\tpageVisits.addPage(rwo.getName());\n\t\t\t}\n\n\t\t\tsetCurrentRequest(request);\n\n\t\t\tif (responseHeaders != null)\n\t\t\t{\n\t\t\t\tfor (Iterator i = responseHeaders.keySet().iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tString name = (String) i.next();\n\t\t\t\t\tString value = (String) responseHeaders.get(name);\n\t\t\t\t\tres.setHeader(name, value);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tOutputStream out = res.getOutputStream();\n\n\t\t\tContentHandler opch = getOutputHandler(out);\n\t\t\tContentHandler ch = null;\n\t\t\tif (false)\n\t\t\t{\n\t\t\t\tch = new DebugContentHandler(opch);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tch = opch;\n\t\t\t}\n\n\t\t\tAttributes dummyAttributes = new AttributesImpl();\n\n\t\t\tch.startDocument();\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ENTITYSERVICE,\n\t\t\t\t\tSchemaNames.EL_NSENTITYSERVICE, dummyAttributes);\n\n\t\t\tAttributesImpl propA = new AttributesImpl();\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_PATH_INFO, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REQUEST_PATH_INFO, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t.getPathInfo());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_USER, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REQUEST_USER, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t.getRemoteUser());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_PROTOCOL, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REQUEST_PROTOCOL, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t.getProtocol());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_SERVER_NAME, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REQUEST_SERVER_NAME, \"string\", request //$NON-NLS-1$\n\t\t\t\t\t\t\t.getServerName());\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_SERVER_PORT, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REQUEST_SERVER_PORT, \"string\", String //$NON-NLS-1$\n\t\t\t\t\t\t\t.valueOf(request.getServerPort()));\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_REQUEST_REQUEST_URL, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_REQUEST_REQUEST_URL, \"string\", String //$NON-NLS-1$\n\t\t\t\t\t\t\t.valueOf(request.getRequestURL()));\n\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_REQUEST_PROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSREQUEST_PROPERTIES, propA);\n\t\t\taddRequestAttributes(ch, request);\n\t\t\taddRequestParameters(ch, request);\n\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_REQUEST_PROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSREQUEST_PROPERTIES);\n\n\t\t\tif ( withBreadcrumbs ) {\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_PAGEVISITS,\n\t\t\t\t\tSchemaNames.EL_NSPAGEVISITS, dummyAttributes);\n\n\t\t\tList<String[]> pv = pageVisits.getPageNames(this.getMinorType());\n\n\t\t\tfor (Iterator<String[]> i = pv.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tString[] visit = i.next();\n\t\t\t\tpropA = new AttributesImpl();\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_URL, SchemaNames.ATTR_URL,\n\t\t\t\t\t\t\"string\", visit[0]);\n\t\t\t\taddElement(ch, SchemaNames.NS_CONTAINER, SchemaNames.EL_PAGEVISIT,\n\t\t\t\t\t\tSchemaNames.EL_NSPAGEVISIT, propA, visit[1]);\n\t\t\t}\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_PAGEVISITS,\n\t\t\t\t\tSchemaNames.EL_NSPAGEVISITS);\n\t\t\t}\n\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ENTITY,\n\t\t\t\t\tSchemaNames.EL_NSENTITY, dummyAttributes);\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTIES, dummyAttributes);\n\t\t\tResourceProperties rp = entity.getProperties();\n\n\t\t\tfor (Iterator i = rp.getPropertyNames(); i.hasNext();)\n\t\t\t{\n\t\t\t\tObject key = i.next();\n\t\t\t\tString name = String.valueOf(key);\n\t\t\t\tString value = String.valueOf(rp.getProperty(name));\n\t\t\t\tpropA = new AttributesImpl();\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", name); //$NON-NLS-1$\n\t\t\t\taddElement(ch, SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTY,\n\t\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTY, propA, value);\n\t\t\t}\n\t\t\tpropA = new AttributesImpl();\n\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", \"_handler\"); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\taddElement(ch, SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTY,\n\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTY, propA, \" XSLTEntity Handler\"); //$NON-NLS-1$\n\n\t\t\tif (!rwe.isContainer())\n\t\t\t{\n\t\t\t\tRWikiObject rwo = rwe.getRWikiObject();\n\t\t\t\tpropA = new AttributesImpl();\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", \"_title\"); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\taddElement(ch, SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTY,\n\t\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTY, propA, NameHelper.localizeName(rwo\n\t\t\t\t\t\t\t\t.getName(), rwo.getRealm()));\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpropA = new AttributesImpl();\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", \"_title\"); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\taddElement(ch, SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTY,\n\t\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTY, propA, entity.getReference());\n\n\t\t\t}\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTIES,\n\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTIES);\n\n\t\t\t/* http://jira.sakaiproject.org/browse/SAK-13281\n\t\t\t * escapeXML is controlled via config settings\n\t\t\t */\n\t\t\t\n\t\t\tif (!rwe.isContainer())\n\t\t\t{\n\t\t\t\tRWikiObject rwo = rwe.getRWikiObject();\n\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RENDEREDCONTENT,\n\t\t\t\t\t\tSchemaNames.EL_NSRENDEREDCONTENT, dummyAttributes);\n\t\t\t\t\n\t\t\t\trenderToXML(rwo, ch, withBreadcrumbs, this.escaped);\n\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RENDEREDCONTENT,\n\t\t\t\t\t\tSchemaNames.EL_NSRENDEREDCONTENT);\n\t\t\t}\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ENTITY,\n\t\t\t\t\tSchemaNames.EL_NSENTITY);\n\n\t\t\tif (sideBar != null && sideBar instanceof RWikiEntity)\n\t\t\t{\n\n\t\t\t\tRWikiEntity sbrwe = (RWikiEntity) sideBar;\n\t\t\t\tRWikiObject sbrwo = sbrwe.getRWikiObject();\n\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_SIDEBAR,\n\t\t\t\t\t\tSchemaNames.EL_NSSIDEBAR, dummyAttributes);\n\n\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTIES,\n\t\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTIES, dummyAttributes);\n\t\t\t\tpropA = new AttributesImpl();\n\t\t\t\tpropA.addAttribute(\"\", SchemaNames.ATTR_NAME, //$NON-NLS-1$\n\t\t\t\t\t\tSchemaNames.ATTR_NAME, \"string\", \"_title\"); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\taddElement(ch, SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTY,\n\t\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTY, propA, NameHelper.localizeName(\n\t\t\t\t\t\t\t\tsbrwo.getName(), sbrwo.getRealm()));\n\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_XMLPROPERTIES,\n\t\t\t\t\t\tSchemaNames.EL_NSXMLPROPERTIES);\n\n\t\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RENDEREDCONTENT,\n\t\t\t\t\t\tSchemaNames.EL_NSRENDEREDCONTENT, dummyAttributes);\n\t\t\t\trenderToXML(sbrwo, ch, withBreadcrumbs, this.escaped);\n\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RENDEREDCONTENT,\n\t\t\t\t\t\tSchemaNames.EL_NSRENDEREDCONTENT);\n\n\t\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_SIDEBAR,\n\t\t\t\t\t\tSchemaNames.EL_NSSIDEBAR);\n\n\t\t\t}\n\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ENTITYSERVICE,\n\t\t\t\t\tSchemaNames.EL_NSENTITYSERVICE);\n\n\t\t\tch.endDocument();\n\n\t\t}\n\t\tcatch (Throwable ex)\n\t\t{\n\t\t\tlog.info(\"Failed to serialize \" + ex.getMessage()); //$NON-NLS-1$\n\t\t\tex.printStackTrace();\n\t\t\tthrow new RuntimeException(Messages.getString(\"XSLTEntityHandler.68\") //$NON-NLS-1$\n\t\t\t\t\t+ ex.getLocalizedMessage(), ex);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tsetCurrentRequest(null);\n\t\t}\n\t}","commit_id":"40a5fda9e9d17e653cc0fb5774633871284307e1","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * Serialises the rendered content of the RWiki Object to SAX\n\t * \n\t * @param rwo\n\t * @param ch\n\t * @param withBreadCrumb \n\t */\n\tpublic void renderToXML(RWikiObject rwo, final ContentHandler ch, boolean withBreadCrumb)\n\t\t\tthrows SAXException, IOException\n\t{\n\n\t\tString renderedPage;\n\t\ttry\n\t\t{\n\t\t\trenderedPage = render(rwo,withBreadCrumb);\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\trenderedPage = Messages.getString(\"XSLTEntityHandler.32\") + rwo.getName() + Messages.getString(\"XSLTEntityHandler.33\") + e.getClass() + Messages.getString(\"XSLTEntityHandler.34\") + e.getMessage(); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\t\tlog.info(renderedPage, e);\n\t\t}\n\t\tString contentDigest = DigestHtml.digest(renderedPage);\n\t\tif (contentDigest.length() > 500)\n\t\t{\n\t\t\tcontentDigest = contentDigest.substring(0, 500);\n\t\t}\n\t\tif (renderedPage == null || renderedPage.trim().length() == 0)\n\t\t{\n\t\t\trenderedPage = Messages.getString(\"XSLTEntityHandler.35\"); //$NON-NLS-1$\n\t\t}\n\t\tif (contentDigest == null || contentDigest.trim().length() == 0)\n\t\t{\n\t\t\tcontentDigest = Messages.getString(\"XSLTEntityHandler.36\"); //$NON-NLS-1$\n\t\t}\n\n\t\tString cdataEscapedRendered = renderedPage\n\t\t\t\t.replaceAll(\"]]>\", \"]]>]]&gt;<![CDATA[\"); //$NON-NLS-1$ //$NON-NLS-2$\n\t\tString cdataContentDigest = contentDigest.replaceAll(\"]]>\", \"]]>]]&gt;<![CDATA[\"); //$NON-NLS-1$ //$NON-NLS-2$\n\n        /* http://jira.sakaiproject.org/browse/SAK-13281\n         * ensure all page content is escaped or double escaped before it goes into the parser,\n         * if this is not done then the parser will unescape html entities during processing\n         */\n        renderedPage = \"<content><rendered>\" + StringEscapeUtils.escapeXml(renderedPage) //$NON-NLS-1$\n\t\t\t\t+ \"<\/rendered><rendered-cdata><![CDATA[\" + cdataEscapedRendered + \"]]><\/rendered-cdata><contentdigest><![CDATA[\" + cdataContentDigest //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t+ \"]]><\/contentdigest><\/content>\"; //$NON-NLS-1$\n\n\t\ttry\n\t\t{\n\t\t\tparseToSAX(renderedPage, ch);\n\t\t}\n\t\tcatch (SAXException ex)\n\t\t{\n\t\t\tSimpleCoverage.cover(\"Failed to parse renderedPage from \" + rwo.getName()); //$NON-NLS-1$\n\t\t\tAttributes dummyAttributes = new AttributesImpl();\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERROR,\n\t\t\t\t\tSchemaNames.EL_NSERROR, dummyAttributes);\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERRORDESC,\n\t\t\t\t\tSchemaNames.EL_NSERRORDESC, dummyAttributes);\n\t\t\tString s = Messages.getString(\"XSLTEntityHandler.46\") //$NON-NLS-1$\n\t\t\t\t\t+ ex.getMessage();\n\t\t\tch.characters(s.toCharArray(), 0, s.length());\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERRORDESC,\n\t\t\t\t\tSchemaNames.EL_NSERRORDESC);\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RAWCONTENT,\n\t\t\t\t\tSchemaNames.EL_NSRAWCONTENT, dummyAttributes);\n\t\t\tch.characters(renderedPage.toCharArray(), 0, renderedPage.length());\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RAWCONTENT,\n\t\t\t\t\tSchemaNames.EL_NSRAWCONTENT);\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERROR,\n\t\t\t\t\tSchemaNames.EL_NSERROR);\n\n\t\t}\n\n\t\t// SimpleCoverage.cover(\"Failed to parse ::\\n\" + renderedPage\n\t\t// + \"\\n:: from ::\\n\" + rwo.getContent());\n\t\t// Attributes dummyAttributes = new AttributesImpl();\n\t\t// ch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERROR,\n\t\t// SchemaNames.EL_NSERROR, dummyAttributes);\n\t\t// ch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERRORDESC,\n\t\t// SchemaNames.EL_NSERRORDESC, dummyAttributes);\n\t\t// String s = \"The Rendered Content did not parse correctly \"\n\t\t// + ex.getMessage();\n\t\t// ch.characters(s.toCharArray(), 0, s.length());\n\t\t// ch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERRORDESC,\n\t\t// SchemaNames.EL_NSERRORDESC);\n\t\t// ch.startElement(SchemaNames.NS_CONTAINER,\n\t\t// SchemaNames.EL_RAWCONTENT, SchemaNames.EL_NSRAWCONTENT,\n\t\t// dummyAttributes);\n\t\t// ch.characters(renderedPage.toCharArray(), 0, renderedPage.length());\n\t\t// ch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RAWCONTENT,\n\t\t// SchemaNames.EL_NSRAWCONTENT);\n\t\t// ch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERROR,\n\t\t// SchemaNames.EL_NSERROR);\n\n\t}","id":39687,"modified_method":"/**\n\t * Serialises the rendered content of the RWiki Object to SAX\n\t * \n\t * @param rwo\n\t * @param ch\n\t * @param withBreadCrumb \n\t */\n\tpublic void renderToXML(RWikiObject rwo, final ContentHandler ch, boolean withBreadCrumb, boolean escapeXML)\n\t\t\tthrows SAXException, IOException\n\t{\n\n\t\tString renderedPage;\n\t\ttry\n\t\t{\n\t\t\trenderedPage = render(rwo,withBreadCrumb);\n\t\t}\n\t\tcatch (Exception e)\n\t\t{\n\t\t\trenderedPage = Messages.getString(\"XSLTEntityHandler.32\") + rwo.getName() + Messages.getString(\"XSLTEntityHandler.33\") + e.getClass() + Messages.getString(\"XSLTEntityHandler.34\") + e.getMessage(); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\t\tlog.info(renderedPage, e);\n\t\t}\n\t\tString contentDigest = DigestHtml.digest(renderedPage);\n\t\tif (contentDigest.length() > 500)\n\t\t{\n\t\t\tcontentDigest = contentDigest.substring(0, 500);\n\t\t}\n\t\tif (renderedPage == null || renderedPage.trim().length() == 0)\n\t\t{\n\t\t\trenderedPage = Messages.getString(\"XSLTEntityHandler.35\"); //$NON-NLS-1$\n\t\t}\n\t\tif (contentDigest == null || contentDigest.trim().length() == 0)\n\t\t{\n\t\t\tcontentDigest = Messages.getString(\"XSLTEntityHandler.36\"); //$NON-NLS-1$\n\t\t}\n\n\t\tString cdataEscapedRendered = renderedPage\n\t\t\t\t.replaceAll(\"]]>\", \"]]>]]&gt;<![CDATA[\"); //$NON-NLS-1$ //$NON-NLS-2$\n\t\tString cdataContentDigest = contentDigest.replaceAll(\"]]>\", \"]]>]]&gt;<![CDATA[\"); //$NON-NLS-1$ //$NON-NLS-2$\n\n        /* http://jira.sakaiproject.org/browse/SAK-13281\n         * ensure all page content is escaped or double escaped before it goes into the parser,\n         * if this is not done then the parser will unescape html entities during processing\n         */\t\t\n        renderedPage = \"<content><rendered>\" + (escapeXML ? StringEscapeUtils.escapeXml(renderedPage) : renderedPage) //$NON-NLS-1$\n\t\t\t\t+ \"<\/rendered><rendered-cdata><![CDATA[\" + cdataEscapedRendered + \"]]><\/rendered-cdata><contentdigest><![CDATA[\" + cdataContentDigest //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t+ \"]]><\/contentdigest><\/content>\"; //$NON-NLS-1$\n\n\t\ttry\n\t\t{\n\t\t\tparseToSAX(renderedPage, ch);\n\t\t}\n\t\tcatch (SAXException ex)\n\t\t{\n\t\t\tSimpleCoverage.cover(\"Failed to parse renderedPage from \" + rwo.getName()); //$NON-NLS-1$\n\t\t\tAttributes dummyAttributes = new AttributesImpl();\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERROR,\n\t\t\t\t\tSchemaNames.EL_NSERROR, dummyAttributes);\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERRORDESC,\n\t\t\t\t\tSchemaNames.EL_NSERRORDESC, dummyAttributes);\n\t\t\tString s = Messages.getString(\"XSLTEntityHandler.46\") //$NON-NLS-1$\n\t\t\t\t\t+ ex.getMessage();\n\t\t\tch.characters(s.toCharArray(), 0, s.length());\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERRORDESC,\n\t\t\t\t\tSchemaNames.EL_NSERRORDESC);\n\t\t\tch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RAWCONTENT,\n\t\t\t\t\tSchemaNames.EL_NSRAWCONTENT, dummyAttributes);\n\t\t\tch.characters(renderedPage.toCharArray(), 0, renderedPage.length());\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RAWCONTENT,\n\t\t\t\t\tSchemaNames.EL_NSRAWCONTENT);\n\t\t\tch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERROR,\n\t\t\t\t\tSchemaNames.EL_NSERROR);\n\n\t\t}\n\n\t\t// SimpleCoverage.cover(\"Failed to parse ::\\n\" + renderedPage\n\t\t// + \"\\n:: from ::\\n\" + rwo.getContent());\n\t\t// Attributes dummyAttributes = new AttributesImpl();\n\t\t// ch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERROR,\n\t\t// SchemaNames.EL_NSERROR, dummyAttributes);\n\t\t// ch.startElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERRORDESC,\n\t\t// SchemaNames.EL_NSERRORDESC, dummyAttributes);\n\t\t// String s = \"The Rendered Content did not parse correctly \"\n\t\t// + ex.getMessage();\n\t\t// ch.characters(s.toCharArray(), 0, s.length());\n\t\t// ch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERRORDESC,\n\t\t// SchemaNames.EL_NSERRORDESC);\n\t\t// ch.startElement(SchemaNames.NS_CONTAINER,\n\t\t// SchemaNames.EL_RAWCONTENT, SchemaNames.EL_NSRAWCONTENT,\n\t\t// dummyAttributes);\n\t\t// ch.characters(renderedPage.toCharArray(), 0, renderedPage.length());\n\t\t// ch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_RAWCONTENT,\n\t\t// SchemaNames.EL_NSRAWCONTENT);\n\t\t// ch.endElement(SchemaNames.NS_CONTAINER, SchemaNames.EL_ERROR,\n\t\t// SchemaNames.EL_NSERROR);\n\n\t}","commit_id":"40a5fda9e9d17e653cc0fb5774633871284307e1","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public final MuleEvent routeMessage(MuleMessage message,\n                                          MuleSession session,\n                                          Transaction trans,\n                                          OutputStream outputStream) throws MuleException\n    {\n\n        final Object o = message.getInboundProperty(MuleProperties.MULE_REMOTE_SYNC_PROPERTY);\n        if (ObjectUtils.getBoolean(o, false) && !endpoint.getExchangePattern().hasResponse())\n        {\n            logger.warn(\"MuleClient.send() was used but inbound endpoint \"\n                        + endpoint.getEndpointURI().getUri().toString()\n                        + \" is not 'request-response'.  No response will be returned.\");\n        }\n\n        message.removeProperty(MuleProperties.MULE_REMOTE_SYNC_PROPERTY, PropertyScope.INBOUND);\n\n        MuleEvent muleEvent = createMuleEvent(message, outputStream);\n        muleEvent = OptimizedRequestContext.unsafeSetEvent(muleEvent);\n\n        if (!endpoint.isDisableTransportTransformer())\n        {\n            applyInboundTransformers(muleEvent);\n        }\n        MuleEvent resultEvent = listener.process(muleEvent);\n        if (resultEvent != null && resultEvent.getMessage() != null\n            && resultEvent.getMessage().getExceptionPayload() != null\n            && resultEvent.getMessage().getExceptionPayload().getException() instanceof FilterUnacceptedException)\n        {\n            handleUnacceptedFilter(muleEvent.getMessage());\n            return muleEvent;\n        }\n\n        if (endpoint.getExchangePattern()== MessageExchangePattern.REQUEST_RESPONSE && resultEvent != null && resultEvent.getMessage() != null && !endpoint.isDisableTransportTransformer())\n        {\n            applyResponseTransformers(resultEvent);\n        }\n\n        if (connector.isEnableMessageEvents() && endpoint.getExchangePattern().hasResponse())\n        {\n            connector.fireNotification(new EndpointMessageNotification(\n                    resultEvent.getMessage(), endpoint, resultEvent\n                            .getFlowConstruct().getName(),\n                    EndpointMessageNotification.MESSAGE_RESPONSE));\n        }\n\n        return resultEvent;\n    }","id":39688,"modified_method":"public final MuleEvent routeMessage(MuleMessage message,\n                                          MuleSession session,\n                                          Transaction trans,\n                                          OutputStream outputStream) throws MuleException\n    {\n\n        final Object o = message.getInboundProperty(MuleProperties.MULE_REMOTE_SYNC_PROPERTY);\n        if (ObjectUtils.getBoolean(o, false) && !endpoint.getExchangePattern().hasResponse())\n        {\n            logger.warn(\"MuleClient.send() was used but inbound endpoint \"\n                        + endpoint.getEndpointURI().getUri().toString()\n                        + \" is not 'request-response'.  No response will be returned.\");\n        }\n\n        message.removeProperty(MuleProperties.MULE_REMOTE_SYNC_PROPERTY, PropertyScope.INBOUND);\n\n        MuleEvent muleEvent = createMuleEvent(message, outputStream);\n        muleEvent = OptimizedRequestContext.unsafeSetEvent(muleEvent);\n\n        if (!endpoint.isDisableTransportTransformer())\n        {\n            applyInboundTransformers(muleEvent);\n        }\n        MuleEvent resultEvent = listener.process(muleEvent);\n        if (resultEvent != null && resultEvent.getMessage() != null\n            && resultEvent.getMessage().getExceptionPayload() != null\n            && resultEvent.getMessage().getExceptionPayload().getException() instanceof FilterUnacceptedException)\n        {\n            handleUnacceptedFilter(muleEvent.getMessage());\n            return muleEvent;\n        }\n\n        if (endpoint.getExchangePattern()== MessageExchangePattern.REQUEST_RESPONSE && resultEvent != null && resultEvent.getMessage() != null && !endpoint.isDisableTransportTransformer())\n        {\n            applyResponseTransformers(resultEvent);\n        }\n\n        if (connector.isEnableMessageEvents() && endpoint.getExchangePattern().hasResponse())\n        {\n            connector.fireNotification(new EndpointMessageNotification(\n                    resultEvent.getMessage(), endpoint, resultEvent\n                            .getFlowConstruct(),\n                    EndpointMessageNotification.MESSAGE_RESPONSE));\n        }\n\n        return resultEvent;\n    }","commit_id":"b3026259564b797e3ce449db7fb0f82e07425791","url":"https://github.com/mulesoft/mule"},{"original_method":"public EndpointMessageNotification(MuleMessage resource,\n                               ImmutableEndpoint endpoint,\n                               String identifier,\n                               int action)\n    {\n        super(cloneMessage(resource), action);\n        resourceIdentifier = identifier;\n        this.endpoint = endpoint.getEndpointURI().toString();\n    }","id":39689,"modified_method":"public EndpointMessageNotification(MuleMessage resource,\n                               ImmutableEndpoint endpoint,\n                               FlowConstruct flowConstruct,\n                               int action)\n    {\n        super(cloneMessage(resource), action);\n        resourceIdentifier = flowConstruct != null ? flowConstruct.getName() : null;\n        this.endpoint = endpoint.getEndpointURI().toString();\n        this.immutableEndpoint = endpoint;\n        this.flowConstruct = flowConstruct;\n    }","commit_id":"b3026259564b797e3ce449db7fb0f82e07425791","url":"https://github.com/mulesoft/mule"},{"original_method":"public MuleEvent process(MuleEvent event) throws MuleException\n    {\n        AbstractConnector connector = (AbstractConnector) endpoint.getConnector();\n        if (connector.isEnableMessageEvents())\n        {\n            connector.fireNotification(new EndpointMessageNotification(event.getMessage(), endpoint,\n                event.getFlowConstruct().getName(), EndpointMessageNotification.MESSAGE_RECEIVED));\n        }\n\n        return event;\n    }","id":39690,"modified_method":"public MuleEvent process(MuleEvent event) throws MuleException\n    {\n        AbstractConnector connector = (AbstractConnector) endpoint.getConnector();\n        if (connector.isEnableMessageEvents())\n        {\n            connector.fireNotification(new EndpointMessageNotification(event.getMessage(), endpoint,\n                event.getFlowConstruct(), EndpointMessageNotification.MESSAGE_RECEIVED));\n        }\n\n        return event;\n    }","commit_id":"b3026259564b797e3ce449db7fb0f82e07425791","url":"https://github.com/mulesoft/mule"},{"original_method":"public MuleEvent process(MuleEvent event) throws MuleException\n    {\n        AbstractConnector connector = (AbstractConnector) endpoint.getConnector();\n        if (connector.isEnableMessageEvents())\n        {\n            String component = null;\n            if (event.getFlowConstruct() != null)\n            {\n                component = event.getFlowConstruct().getName();\n            }\n\n            int notificationAction;\n            if (endpoint.getExchangePattern().hasResponse())\n            {\n                notificationAction = EndpointMessageNotification.MESSAGE_SENT;\n            }\n            else\n            {\n                notificationAction = EndpointMessageNotification.MESSAGE_DISPATCHED;\n            }\n            connector.fireNotification(new EndpointMessageNotification(event.getMessage(), endpoint,\n                component, notificationAction));\n        }\n\n        return event;\n    }","id":39691,"modified_method":"public MuleEvent process(MuleEvent event) throws MuleException\n    {\n        AbstractConnector connector = (AbstractConnector) endpoint.getConnector();\n        if (connector.isEnableMessageEvents())\n        {\n            int notificationAction;\n            if (endpoint.getExchangePattern().hasResponse())\n            {\n                notificationAction = EndpointMessageNotification.MESSAGE_SENT;\n            }\n            else\n            {\n                notificationAction = EndpointMessageNotification.MESSAGE_DISPATCHED;\n            }\n            connector.fireNotification(new EndpointMessageNotification(event.getMessage(), endpoint,\n                    event.getFlowConstruct(), notificationAction));\n        }\n\n        return event;\n    }","commit_id":"b3026259564b797e3ce449db7fb0f82e07425791","url":"https://github.com/mulesoft/mule"},{"original_method":"public String[] getValues() {\n\t\t\tObject multiValue;\n\t\t\ttry {\n\t\t\t\tmultiValue = property.getValue(createEvaluationContext());\n\t\t\t} catch (EvaluationException e) {\n\t\t\t\tthrow new IllegalStateException(e);\n\t\t\t}\n\t\t\tif (multiValue == null) {\n\t\t\t\treturn EMPTY_STRING_ARRAY;\n\t\t\t}\n\t\t\tTypeDescriptor<?> type = TypeDescriptor.valueOf(multiValue.getClass());\n\t\t\tString[] formattedValues;\n\t\t\tif (type.isCollection()) {\n\t\t\t\tCollection<?> values = ((Collection<?>)multiValue);\n\t\t\t\tformattedValues = (String[]) Array.newInstance(String.class, values.size());\n\t\t\t\tcopy(values, formattedValues);\n\t\t\t} else if (type.isArray()) {\n\t\t\t\tformattedValues = (String[]) Array.newInstance(String.class, Array.getLength(multiValue));\n\t\t\t\tcopy((Iterable<?>) multiValue, formattedValues);\t\t\t\n\t\t\t} else {\n\t\t\t\tthrow new IllegalStateException();\n\t\t\t}\n\t\t\treturn formattedValues;\n\t\t}","id":39692,"modified_method":"public String[] getValues() {\n\t\t\tObject multiValue;\n\t\t\ttry {\n\t\t\t\tmultiValue = property.getValue(createEvaluationContext());\n\t\t\t} catch (EvaluationException e) {\n\t\t\t\tthrow new IllegalStateException(\"Failed to get property expression value - this should not happen\", e);\n\t\t\t}\n\t\t\tif (multiValue == null) {\n\t\t\t\treturn EMPTY_STRING_ARRAY;\n\t\t\t}\n\t\t\tTypeDescriptor<?> type = TypeDescriptor.valueOf(multiValue.getClass());\n\t\t\tString[] formattedValues;\n\t\t\tif (type.isCollection()) {\n\t\t\t\tCollection<?> values = ((Collection<?>) multiValue);\n\t\t\t\tformattedValues = (String[]) Array.newInstance(String.class, values.size());\n\t\t\t\tcopy(values, formattedValues);\n\t\t\t} else if (type.isArray()) {\n\t\t\t\tformattedValues = (String[]) Array.newInstance(String.class, Array.getLength(multiValue));\n\t\t\t\tcopy((Iterable<?>) multiValue, formattedValues);\n\t\t\t} else {\n\t\t\t\tthrow new IllegalStateException();\n\t\t\t}\n\t\t\treturn formattedValues;\n\t\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void setValue(String formatted) {\n\t\t\tsetValue(parse(formatted, getFormatter()));\n\t\t}","id":39693,"modified_method":"public BindingResult setValue(String formatted) {\n\t\t\tFormatter formatter;\n\t\t\ttry {\n\t\t\t\tformatter = getFormatter();\n\t\t\t} catch (EvaluationException e) {\n\t\t\t\t// could occur the property was not found or is not readable\n\t\t\t\t// TODO probably should not handle all EL failures, only type conversion & property not found?\n\t\t\t\treturn new ExpressionEvaluationErrorResult(property.getExpressionString(), formatted, e);\n\t\t\t}\n\t\t\tObject parsed;\n\t\t\ttry {\n\t\t\t\tparsed = formatter.parse(formatted, LocaleContextHolder.getLocale());\n\t\t\t} catch (ParseException e) {\n\t\t\t\treturn new InvalidFormatResult(property.getExpressionString(), formatted, e);\n\t\t\t}\n\t\t\treturn setValue(parsed, formatted);\n\t\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public String getValue() {\n\t\t\ttry {\n\t\t\t\treturn format(property.getValue(createEvaluationContext()));\n\t\t\t} catch (ExpressionException e) {\n\t\t\t\tthrow new IllegalArgumentException(e);\n\t\t\t}\n\t\t}","id":39694,"modified_method":"public String getValue() {\n\t\t\tObject value;\n\t\t\ttry {\n\t\t\t\tvalue = property.getValue(createEvaluationContext());\n\t\t\t} catch (ExpressionException e) {\n\t\t\t\tthrow new IllegalStateException(\"Failed to get property expression value - this should not happen\", e);\n\t\t\t}\n\t\t\treturn format(value);\n\t\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"private Class<?> getValueType() {\n\t\t\ttry {\n\t\t\t\treturn property.getValueType(createEvaluationContext());\n\t\t\t} catch (EvaluationException e) {\n\t\t\t\tthrow new IllegalStateException(e);\n\t\t\t}\n\t\t}","id":39695,"modified_method":"private Class<?> getValueType() throws EvaluationException {\n\t\t\treturn property.getValueType(createEvaluationContext());\n\t\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public String format(Object selectableValue) {\n\t\t\tFormatter formatter = getFormatter();\n\t\t\tClass<?> formattedType = getFormattedObjectType(formatter);\n\t\t\tselectableValue = typeConverter.convert(selectableValue, formattedType);\n\t\t\treturn formatter.format(selectableValue, LocaleContextHolder.getLocale());\n\t\t}","id":39696,"modified_method":"public String format(Object selectableValue) {\n\t\t\tFormatter formatter;\n\t\t\ttry {\n\t\t\t\tformatter = getFormatter();\n\t\t\t} catch (EvaluationException e) {\n\t\t\t\tthrow new IllegalStateException(\"Failed to get property expression value type - this should not happen\", e);\n\t\t\t}\n\t\t\tClass<?> formattedType = getFormattedObjectType(formatter);\n\t\t\tselectableValue = typeConverter.convert(selectableValue, formattedType);\n\t\t\treturn formatter.format(selectableValue, LocaleContextHolder.getLocale());\n\t\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"private Annotation[] getAnnotations() {\n\t\t\ttry {\n\t\t\t\treturn property.getValueTypeDescriptor(\n\t\t\t\t\t\tcreateEvaluationContext()).getAnnotations();\n\t\t\t} catch (EvaluationException e) {\n\t\t\t\tthrow new IllegalStateException(e);\n\t\t\t}\n\t\t}","id":39697,"modified_method":"private Annotation[] getAnnotations() throws EvaluationException {\n\t\t\treturn property.getValueTypeDescriptor(createEvaluationContext()).getAnnotations();\n\t\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public boolean isCollection() {\n\t\t\tTypeDescriptor<?> type = TypeDescriptor.valueOf(getValueType());\n\t\t\treturn type.isCollection() || type.isArray();\n\t\t}","id":39698,"modified_method":"public boolean isCollection() {\n\t\t\tClass type;\n\t\t\ttry { \n\t\t\t\ttype = getValueType();\n\t\t\t} catch (EvaluationException e) {\n\t\t\t\tthrow new IllegalArgumentException(\"Failed to get property expression value type - this should not happen\", e);\n\t\t\t}\n\t\t\tTypeDescriptor<?> typeDesc = TypeDescriptor.valueOf(type);\n\t\t\treturn typeDesc.isCollection() || typeDesc.isArray();\n\t\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"private Class getFormattedObjectType(Formatter formatter) {\n\t\t// TODO consider caching this info\n\t\tClass classToIntrospect = formatter.getClass();\n\t\twhile (classToIntrospect != null) {\n\t\t\tType[] genericInterfaces = classToIntrospect.getGenericInterfaces();\n\t\t\tfor (Type genericInterface : genericInterfaces) {\n\t\t\t\tif (genericInterface instanceof ParameterizedType) {\n\t\t\t\t\tParameterizedType pInterface = (ParameterizedType) genericInterface;\n\t\t\t\t\tif (Formatter.class.isAssignableFrom((Class) pInterface.getRawType())) {\n\t\t\t\t\t\treturn getParameterClass(pInterface.getActualTypeArguments()[0], formatter.getClass());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tclassToIntrospect = classToIntrospect.getSuperclass();\n\t\t}\n\t\treturn null;\n\t}","id":39699,"modified_method":"private BindingResult setValue(Object parsed, Object formatted) {\n\t\t\ttry {\n\t\t\t\tproperty.setValue(createEvaluationContext(), parsed);\n\t\t\t\treturn new SuccessResult(property.getExpressionString(), formatted);\n\t\t\t} catch (EvaluationException e) {\n\t\t\t\treturn new ExpressionEvaluationErrorResult(property.getExpressionString(), formatted, e);\n\t\t\t}\n\t\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public void setValues(String[] formattedValues) {\n\t\t\tFormatter formatter = getFormatter();\n\t\t\tClass parsedType = getFormattedObjectType(formatter);\n\t\t\tif (parsedType == null) {\n\t\t\t\tparsedType = String.class;\n\t\t\t}\n\t\t\tObject values = Array.newInstance(parsedType, formattedValues.length);\n\t\t\tfor (int i = 0; i < formattedValues.length; i++) {\n\t\t\t\tArray.set(values, i, parse(formattedValues[i], formatter));\n\t\t\t}\n\t\t\tsetValue(values);\t\t\t\n\t\t}","id":39700,"modified_method":"public BindingResult setValues(String[] formatted) {\n\t\t\tFormatter formatter;\n\t\t\ttry {\n\t\t\t\tformatter = getFormatter();\n\t\t\t} catch (EvaluationException e) {\n\t\t\t\t// could occur the property was not found or is not readable\n\t\t\t\t// TODO probably should not handle all EL failures, only type conversion & property not found?\n\t\t\t\treturn new ExpressionEvaluationErrorResult(property.getExpressionString(), formatted, e);\n\t\t\t}\t\t\t\n\t\t\tClass parsedType = getFormattedObjectType(formatter);\n\t\t\tif (parsedType == null) {\n\t\t\t\tparsedType = String.class;\n\t\t\t}\n\t\t\tObject parsed = Array.newInstance(parsedType, formatted.length);\n\t\t\tfor (int i = 0; i < formatted.length; i++) {\n\t\t\t\tObject parsedValue;\n\t\t\t\ttry {\n\t\t\t\t\tparsedValue = formatter.parse(formatted[i], LocaleContextHolder.getLocale());\n\t\t\t\t} catch (ParseException e) {\n\t\t\t\t\treturn new InvalidFormatResult(property.getExpressionString(), formatted, e);\n\t\t\t\t}\n\t\t\t\tArray.set(parsed, i, parsedValue);\n\t\t\t}\n\t\t\treturn setValue(parsed, formatted);\n\t\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void bindSingleValueWithFormatterRegisteredByAnnotation() throws ParseException {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tbinder.add(new CurrencyFormatter(), CurrencyFormat.class);\n\t\tMap<String, String> propertyValues = new HashMap<String, String>();\n\t\tpropertyValues.put(\"currency\", \"$23.56\");\n\t\tbinder.bind(propertyValues);\n\t\tassertEquals(new BigDecimal(\"23.56\"), binder.getModel().getCurrency());\n\t}","id":39701,"modified_method":"@Test\n\tpublic void bindSingleValueWithFormatterRegisteredByAnnotation() throws ParseException {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tbinder.add(new CurrencyFormatter(), CurrencyFormat.class);\n\t\tbinder.bind(UserValue.singleton(\"currency\", \"$23.56\"));\n\t\tassertEquals(new BigDecimal(\"23.56\"), binder.getModel().getCurrency());\n\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void bindSingleValueWithFormatterRegistedByType() throws ParseException {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tbinder.add(new DateFormatter(), Date.class);\n\t\tMap<String, String> propertyValues = new HashMap<String, String>();\n\t\tpropertyValues.put(\"date\", \"2009-06-01\");\n\t\tbinder.bind(propertyValues);\n\t\tassertEquals(new DateFormatter().parse(\"2009-06-01\", Locale.US), binder.getModel().getDate());\n\t}","id":39702,"modified_method":"@Test\n\tpublic void bindSingleValueWithFormatterRegistedByType() throws ParseException {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tbinder.add(new DateFormatter(), Date.class);\n\t\tbinder.bind(UserValue.singleton(\"date\", \"2009-06-01\"));\n\t\tassertEquals(new DateFormatter().parse(\"2009-06-01\", Locale.US), binder.getModel().getDate());\n\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void bindSingleValuePropertyFormatter() throws ParseException {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tbinder.add(new BindingConfiguration(\"date\", new DateFormatter()));\n\t\tMap<String, String> propertyValues = new HashMap<String, String>();\n\t\tpropertyValues.put(\"date\", \"2009-06-01\");\n\t\tbinder.bind(propertyValues);\n\t\tassertEquals(new DateFormatter().parse(\"2009-06-01\", Locale.US), binder.getModel().getDate());\n\t}","id":39703,"modified_method":"@Test\n\tpublic void bindSingleValuePropertyFormatter() throws ParseException {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tbinder.add(new BindingConfiguration(\"date\", new DateFormatter()));\n\t\tbinder.bind(UserValue.singleton(\"date\", \"2009-06-01\"));\n\t\tassertEquals(new DateFormatter().parse(\"2009-06-01\", Locale.US), binder.getModel().getDate());\n\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void bindSingleValuesWithDefaultTypeConverterConversion() {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tMap<String, String> propertyValues = new HashMap<String, String>();\n\t\tpropertyValues.put(\"string\", \"test\");\n\t\tpropertyValues.put(\"integer\", \"3\");\n\t\tpropertyValues.put(\"foo\", \"BAR\");\n\t\tbinder.bind(propertyValues);\n\t\tassertEquals(\"test\", binder.getModel().getString());\n\t\tassertEquals(3, binder.getModel().getInteger());\n\t\tassertEquals(FooEnum.BAR, binder.getModel().getFoo());\n\t}","id":39704,"modified_method":"@Test\n\tpublic void bindSingleValuesWithDefaultTypeConverterConversion() {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tList<UserValue> values = new ArrayList<UserValue>();\n\t\tvalues.add(new UserValue(\"string\", \"test\"));\n\t\tvalues.add(new UserValue(\"integer\", \"3\"));\n\t\tvalues.add(new UserValue(\"foo\", \"BAR\"));\n\t\tList<BindingResult> results = binder.bind(values);\n\t\tassertEquals(3, results.size());\n\t\t\n\t\tassertEquals(\"string\", results.get(0).getProperty());\n\t\tassertFalse(results.get(0).isError());\n\t\tassertNull(results.get(0).getErrorCause());\n\t\tassertEquals(\"test\", results.get(0).getUserValue());\n\n\t\tassertEquals(\"integer\", results.get(1).getProperty());\n\t\tassertFalse(results.get(1).isError());\n\t\tassertNull(results.get(1).getErrorCause());\n\t\tassertEquals(\"3\", results.get(1).getUserValue());\n\n\t\tassertEquals(\"foo\", results.get(2).getProperty());\n\t\tassertFalse(results.get(2).isError());\n\t\tassertNull(results.get(2).getErrorCause());\t\t\n\t\tassertEquals(\"BAR\", results.get(2).getUserValue());\n\t\t\n\t\tassertEquals(\"test\", binder.getModel().getString());\n\t\tassertEquals(3, binder.getModel().getInteger());\n\t\tassertEquals(FooEnum.BAR, binder.getModel().getFoo());\n\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void getBindingOptimistic() {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tBinding b = binder.getBinding(\"integer\");\n\t\tassertFalse(b.isCollection());\n\t\tassertEquals(\"0\", b.getValue());\n\t\tb.setValue(\"5\");\n\t\tassertEquals(\"5\", b.getValue());\n\t}","id":39705,"modified_method":"@Test\n\tpublic void getBindingOptimistic() {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tBinding b = binder.getBinding(\"integer\");\n\t\tassertFalse(b.isCollection());\n\t\tassertEquals(\"0\", b.getValue());\n\t\tBindingResult result = b.setValue(\"5\");\n\t\tassertEquals(\"5\", b.getValue());\n\t\tassertFalse(result.isError());\n\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void getBindingStrict() {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tbinder.setStrict(true);\n\t\tBinding b = binder.getBinding(\"integer\");\n\t\tassertNull(b);\n\t\tbinder.add(new BindingConfiguration(\"integer\", null));\n\t\tb = binder.getBinding(\"integer\");\n\t\tassertFalse(b.isCollection());\n\t\tassertEquals(\"0\", b.getValue());\n\t\tb.setValue(\"5\");\n\t\tassertEquals(\"5\", b.getValue());\n\t}","id":39706,"modified_method":"@Test\n\tpublic void getBindingStrict() {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tbinder.setStrict(true);\n\t\tBinding b = binder.getBinding(\"integer\");\n\t\tassertNull(b);\n\t\tbinder.add(new BindingConfiguration(\"integer\", null));\n\t\tb = binder.getBinding(\"integer\");\n\t\tassertFalse(b.isCollection());\n\t\tassertEquals(\"0\", b.getValue());\n\t\tBindingResult result = b.setValue(\"5\");\n\t\tassertEquals(\"5\", b.getValue());\n\t\tassertFalse(result.isError());\n\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test(expected=IllegalArgumentException.class)\t\n\tpublic void bindSingleValuePropertyFormatterParseException() {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tbinder.add(new BindingConfiguration(\"date\", new DateFormatter()));\n\t\tMap<String, String> propertyValues = new HashMap<String, String>();\n\t\tpropertyValues.put(\"date\", \"bogus\");\n\t\tbinder.bind(propertyValues);\n\t}","id":39707,"modified_method":"@Test\n\tpublic void bindSingleValuePropertyFormatterParseException() {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tbinder.add(new BindingConfiguration(\"date\", new DateFormatter()));\n\t\tbinder.bind(UserValue.singleton(\"date\", \"bogus\"));\n\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void bindHandleNullValueInNestedPath() {\n\t\tTestBean testbean = new TestBean();\n\t\tBinder<TestBean> binder = new Binder<TestBean>(testbean);\n\t\tMap<String, String> propertyValues = new HashMap<String, String>();\n\t\t\n\t\t// EL configured with some options from SpelExpressionParserConfiguration:\n\t\t// (see where Binder creates the parser)\n\t\t// - new addresses List is created if null\n\t\t// - new entries automatically built if List is currently too short - all new entries\n\t\t//   are new instances of the type of the list entry, they are not null.\n\t\t// not currently doing anything for maps or arrays\n\t\t\n\t\tpropertyValues.put(\"addresses[0].street\", \"4655 Macy Lane\");\n\t\tpropertyValues.put(\"addresses[0].city\", \"Melbourne\");\n\t\tpropertyValues.put(\"addresses[0].state\", \"FL\");\n\t\tpropertyValues.put(\"addresses[0].state\", \"35452\");\n\n\t\t// Auto adds new Address at 1\n\t\tpropertyValues.put(\"addresses[1].street\", \"1234 Rostock Circle\");\n\t\tpropertyValues.put(\"addresses[1].city\", \"Palm Bay\");\n\t\tpropertyValues.put(\"addresses[1].state\", \"FL\");\n\t\tpropertyValues.put(\"addresses[1].state\", \"32901\");\n\n\t\t// Auto adds new Address at 5 (plus intermediates 2,3,4)\n\t\tpropertyValues.put(\"addresses[5].street\", \"1234 Rostock Circle\");\n\t\tpropertyValues.put(\"addresses[5].city\", \"Palm Bay\");\n\t\tpropertyValues.put(\"addresses[5].state\", \"FL\");\n\t\tpropertyValues.put(\"addresses[5].state\", \"32901\");\n\n\t\tbinder.bind(propertyValues);\n\t\tAssert.assertEquals(6,testbean.addresses.size());\n\t\tAssert.assertEquals(\"Palm Bay\",testbean.addresses.get(1).city);\n\t\tAssert.assertNotNull(testbean.addresses.get(2));\n\t}","id":39708,"modified_method":"@Test\n\tpublic void bindHandleNullValueInNestedPath() {\n\t\tTestBean testbean = new TestBean();\n\t\tBinder<TestBean> binder = new Binder<TestBean>(testbean);\n\t\tList<UserValue> values = new ArrayList<UserValue>();\n\t\t\n\t\t// EL configured with some options from SpelExpressionParserConfiguration:\n\t\t// (see where Binder creates the parser)\n\t\t// - new addresses List is created if null\n\t\t// - new entries automatically built if List is currently too short - all new entries\n\t\t//   are new instances of the type of the list entry, they are not null.\n\t\t// not currently doing anything for maps or arrays\n\t\t\n\t\tvalues.add(new UserValue(\"addresses[0].street\", \"4655 Macy Lane\"));\n\t\tvalues.add(new UserValue(\"addresses[0].city\", \"Melbourne\"));\n\t\tvalues.add(new UserValue(\"addresses[0].state\", \"FL\"));\n\t\tvalues.add(new UserValue(\"addresses[0].state\", \"35452\"));\n\n\t\t// Auto adds new Address at 1\n\t\tvalues.add(new UserValue(\"addresses[1].street\", \"1234 Rostock Circle\"));\n\t\tvalues.add(new UserValue(\"addresses[1].city\", \"Palm Bay\"));\n\t\tvalues.add(new UserValue(\"addresses[1].state\", \"FL\"));\n\t\tvalues.add(new UserValue(\"addresses[1].state\", \"32901\"));\n\n\t\t// Auto adds new Address at 5 (plus intermediates 2,3,4)\n\t\tvalues.add(new UserValue(\"addresses[5].street\", \"1234 Rostock Circle\"));\n\t\tvalues.add(new UserValue(\"addresses[5].city\", \"Palm Bay\"));\n\t\tvalues.add(new UserValue(\"addresses[5].state\", \"FL\"));\n\t\tvalues.add(new UserValue(\"addresses[5].state\", \"32901\"));\n\n\t\tList<BindingResult> results = binder.bind(values);\n\t\tAssert.assertEquals(6,testbean.addresses.size());\n\t\tAssert.assertEquals(\"Palm Bay\",testbean.addresses.get(1).city);\n\t\tAssert.assertNotNull(testbean.addresses.get(2));\n\t\tassertEquals(12, results.size());\n\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void bindSingleValueWithnAnnotationFormatterFactoryRegistered() throws ParseException {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tbinder.add(new CurrencyAnnotationFormatterFactory());\n\t\tMap<String, String> propertyValues = new HashMap<String, String>();\n\t\tpropertyValues.put(\"currency\", \"$23.56\");\n\t\tbinder.bind(propertyValues);\n\t\tassertEquals(new BigDecimal(\"23.56\"), binder.getModel().getCurrency());\n\t}","id":39709,"modified_method":"@Test\n\tpublic void bindSingleValueWithnAnnotationFormatterFactoryRegistered() throws ParseException {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tbinder.add(new CurrencyAnnotationFormatterFactory());\n\t\tbinder.bind(UserValue.singleton(\"currency\", \"$23.56\"));\n\t\tassertEquals(new BigDecimal(\"23.56\"), binder.getModel().getCurrency());\n\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test(expected=IllegalArgumentException.class)\n\tpublic void bindSingleValuesWithDefaultTypeCoversionFailure() {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tMap<String, String> propertyValues = new HashMap<String, String>();\n\t\tpropertyValues.put(\"string\", \"test\");\n\t\tpropertyValues.put(\"integer\", \"bogus\");\n\t\tpropertyValues.put(\"foo\", \"bogus\");\n\t\tbinder.bind(propertyValues);\n\t}","id":39710,"modified_method":"@Test\n\tpublic void bindSingleValuesWithDefaultTypeCoversionFailure() {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tList<UserValue> values = new ArrayList<UserValue>();\n\t\tvalues.add(new UserValue(\"string\", \"test\"));\n\t\t// bad value\n\t\tvalues.add(new UserValue(\"integer\", \"bogus\"));\n\t\tvalues.add(new UserValue(\"foo\", \"BAR\"));\n\t\tList<BindingResult> results = binder.bind(values);\n\t\tassertEquals(3, results.size());\n\t\tassertTrue(results.get(1).isError());\n\t\tassertEquals(\"typeConversionFailure\", results.get(1).getErrorCode());\n\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test(expected=IllegalArgumentException.class)\n\tpublic void getBindingMultiValuedTypeConversionError() {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tBinding b = binder.getBinding(\"foos\");\n\t\tassertTrue(b.isCollection());\n\t\tassertEquals(0, b.getValues().length);\n\t\tb.setValues(new String[] { \"BAR\", \"BOGUS\", \"BOOP\" });\n\t}","id":39711,"modified_method":"@Test\n\tpublic void getBindingMultiValuedTypeConversionFailure() {\n\t\tBinder<TestBean> binder = new Binder<TestBean>(new TestBean());\n\t\tBinding b = binder.getBinding(\"foos\");\n\t\tassertTrue(b.isCollection());\n\t\tassertEquals(0, b.getValues().length);\n\t\tBindingResult result = b.setValues(new String[] { \"BAR\", \"BOGUS\", \"BOOP\" });\n\t\tassertTrue(result.isError());\n\t\tassertTrue(result.getErrorCause() instanceof EvaluationException);\n\t\tassertEquals(\"typeConversionFailure\", result.getErrorCode());\n\t}","commit_id":"a437fdfc7d687f204544be362e9fce509cd29265","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n     * Returns the configured java-script head include resources.<p>\n     * \n     * @param cms the current cms context\n     * @param resource the resource\n     * \n     * @return the configured java-script head include resources\n     * \n     * @throws CmsLoaderException if something goes wrong reading the resource type\n     */\n    public static Set<String> getJSHeadIncludes(CmsObject cms, CmsResource resource) throws CmsLoaderException {\n\n        I_CmsResourceType resType = OpenCms.getResourceManager().getResourceType(resource.getTypeId());\n        if (resType instanceof CmsResourceTypeXmlContent) {\n            CmsXmlContentDefinition contentDefinition = ((CmsResourceTypeXmlContent)resType).searchContentDefinition(\n                cms,\n                resource);\n            return contentDefinition.getContentHandler().getJSHeadIncludes();\n        }\n        return Collections.<String> emptySet();\n    }","id":39712,"modified_method":"/**\n     * Returns the configured JavaScript head include resources.<p>\n     * \n     * @param cms the current cms context\n     * @param resource the resource\n     * \n     * @return the configured JavaScript head include resources\n     * \n     * @throws CmsLoaderException if something goes wrong reading the resource type\n     */\n    public static Set<String> getJSHeadIncludes(CmsObject cms, CmsResource resource) throws CmsLoaderException {\n\n        I_CmsResourceType resType = OpenCms.getResourceManager().getResourceType(resource.getTypeId());\n        if (resType instanceof CmsResourceTypeXmlContent) {\n            try {\n                CmsXmlContentDefinition contentDefinition = CmsXmlContentDefinition.getContentDefinitionForResource(\n                    cms,\n                    resource);\n                return contentDefinition.getContentHandler().getJSHeadIncludes();\n            } catch (CmsException e) {\n                // NOOP, use the empty set\n            }\n        }\n        return Collections.emptySet();\n    }","commit_id":"7a91fbda1fb35d63f9a4ff39a50b33b9c943a2fc","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the configured CSS head include resources.<p>\n     * \n     * @param cms the current cms context\n     * @param resource the resource\n     * \n     * @return the configured CSS head include resources\n     * \n     * @throws CmsLoaderException if something goes wrong reading the resource type\n     */\n    public static Set<String> getCSSHeadIncludes(CmsObject cms, CmsResource resource) throws CmsLoaderException {\n\n        I_CmsResourceType resType = OpenCms.getResourceManager().getResourceType(resource.getTypeId());\n        if (resType instanceof CmsResourceTypeXmlContent) {\n            CmsXmlContentDefinition contentDefinition = ((CmsResourceTypeXmlContent)resType).searchContentDefinition(\n                cms,\n                resource);\n            return contentDefinition.getContentHandler().getCSSHeadIncludes();\n        }\n        return Collections.<String> emptySet();\n    }","id":39713,"modified_method":"/**\n     * Returns the configured CSS head include resources.<p>\n     * \n     * @param cms the current cms context\n     * @param resource the resource\n     * \n     * @return the configured CSS head include resources\n     * \n     * @throws CmsLoaderException if something goes wrong reading the resource type\n     */\n    public static Set<String> getCSSHeadIncludes(CmsObject cms, CmsResource resource) throws CmsLoaderException {\n\n        I_CmsResourceType resType = OpenCms.getResourceManager().getResourceType(resource.getTypeId());\n        if (resType instanceof CmsResourceTypeXmlContent) {\n            try {\n                CmsXmlContentDefinition contentDefinition = CmsXmlContentDefinition.getContentDefinitionForResource(\n                    cms,\n                    resource);\n                return contentDefinition.getContentHandler().getCSSHeadIncludes();\n            } catch (CmsException e) {\n                // NOOP, use the empty set\n            }\n        }\n        return Collections.emptySet();\n    }","commit_id":"7a91fbda1fb35d63f9a4ff39a50b33b9c943a2fc","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.file.types.A_CmsResourceType#getFormatterForContainer(org.opencms.file.CmsObject, org.opencms.file.CmsResource, java.lang.String, int)\n     */\n    @Override\n    public CmsFormatterBean getFormatterForContainer(CmsObject cms, CmsResource resource, String type, int width) {\n\n        if (CmsFormatterBean.isPreviewType(type)\n            || (getTypeId() == CmsResourceTypeXmlContainerPage.GROUP_CONTAINER_TYPE_ID)) {\n            return CmsFormatterBean.getDefaultPreviewFormatter();\n        }\n        CmsXmlContentDefinition contentDef = searchContentDefinition(cms, resource);\n        CmsFormatterConfiguration formatterConfiguration = contentDef.getContentHandler().getFormatterConfiguration();\n\n        if (!formatterConfiguration.hasFormatters()) {\n            LOG.warn(Messages.get().getBundle().key(\n                Messages.LOG_WARN_NO_FORMATTERS_DEFINED_1,\n                contentDef.getSchemaLocation()));\n        }\n\n        return formatterConfiguration.getFormatter(type, width);\n    }","id":39714,"modified_method":"/**\n     * @see org.opencms.file.types.A_CmsResourceType#getFormatterForContainer(org.opencms.file.CmsObject, org.opencms.file.CmsResource, java.lang.String, int)\n     */\n    @Override\n    public CmsFormatterBean getFormatterForContainer(CmsObject cms, CmsResource resource, String type, int width) {\n\n        if (CmsFormatterBean.isPreviewType(type)\n            || (getTypeId() == CmsResourceTypeXmlContainerPage.GROUP_CONTAINER_TYPE_ID)) {\n            return CmsFormatterBean.getDefaultPreviewFormatter();\n        }\n        CmsFormatterBean result = null;\n        CmsXmlContentDefinition cd = null;\n        try {\n            cd = CmsXmlContentDefinition.getContentDefinitionForResource(cms, resource);\n            CmsFormatterConfiguration formatterConfiguration = cd.getContentHandler().getFormatterConfiguration();\n            if (formatterConfiguration.hasFormatters()) {\n                result = formatterConfiguration.getFormatter(type, width);\n            }\n        } catch (CmsException e) {\n            // no content definition found, use the preview formatter\n        }\n        if (result == null) {\n            LOG.warn(Messages.get().getBundle().key(\n                Messages.LOG_WARN_NO_FORMATTERS_DEFINED_1,\n                cd == null ? resource.getRootPath() : cd.getSchemaLocation()));\n            result = CmsFormatterBean.getDefaultPreviewFormatter();\n        }\n        return result;\n    }","commit_id":"7a91fbda1fb35d63f9a4ff39a50b33b9c943a2fc","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public void invalidate() {\n        // we must invalidate hazelcast session first\n        // invalidating original session will trigger another\n        // invalidation as our SessionListener will be triggered.\n        webFilter.destroySession(this, true);\n        originalSession.invalidate();\n    }","id":39715,"modified_method":"public void invalidate() {\n        // we must invalidate hazelcast session first\n        // invalidating original session will trigger another\n        // invalidation as our SessionListener will be triggered.\n        webFilter.destroySession(this, true);\n        originalSession.invalidate();\n        invalidatedOriginalSessionId = originalSession.getId();\n    }","commit_id":"25424fefdf7a1c99a92fd1bc55eee8dc8424c0db","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private HazelcastHttpSession readSessionFromLocal() {\n\n            if (hazelcastSession != null && !hazelcastSession.isValid()) {\n                LOGGER.finest(\"Session is invalid!\");\n                destroySession(hazelcastSession, true);\n                hazelcastSession = null;\n            } else if (hazelcastSession != null) {\n                return hazelcastSession;\n            }\n            HttpSession originalSession = getOriginalSession(false);\n            if (originalSession != null) {\n                String hazelcastSessionId = originalSessions.get(originalSession.getId());\n                if (hazelcastSessionId != null) {\n                    hazelcastSession = sessions.get(hazelcastSessionId);\n\n                    if (hazelcastSession != null && !hazelcastSession.isStickySession()) {\n                        hazelcastSession.updateReloadFlag();\n                    }\n                    return hazelcastSession;\n                }\n                originalSessions.remove(originalSession.getId());\n                originalSession.invalidate();\n            }\n            if (clusteredSessionId != null) {\n                hazelcastSession = sessions.get(clusteredSessionId);\n            }\n            return readFromCookie();\n        }","id":39716,"modified_method":"private HazelcastHttpSession readSessionFromLocal() {\n            String invalidatedOriginalSessionId = null;\n            if (hazelcastSession != null && !hazelcastSession.isValid()) {\n                LOGGER.finest(\"Session is invalid!\");\n                destroySession(hazelcastSession, true);\n                invalidatedOriginalSessionId = hazelcastSession.invalidatedOriginalSessionId;\n                hazelcastSession = null;\n            } else if (hazelcastSession != null) {\n                return hazelcastSession;\n            }\n            HttpSession originalSession = getOriginalSession(false);\n            if (originalSession != null) {\n                String hazelcastSessionId = originalSessions.get(originalSession.getId());\n                if (hazelcastSessionId != null) {\n                    hazelcastSession = sessions.get(hazelcastSessionId);\n                    if (hazelcastSession != null && !hazelcastSession.isStickySession()) {\n                        hazelcastSession.updateReloadFlag();\n                    }\n                    return hazelcastSession;\n                }\n                // Even though session can be taken from request, it might be already invalidated.\n                // For example, in Wildfly (uses Undertow), taken wrapper session might be valid\n                // but its underlying real session might be already invalidated after redirection\n                // due to its request/url based wrapper session (points to same original session) design.\n                // Therefore, we check the taken session id and\n                // ignore its invalidation if it is already invalidated inside Hazelcast's session.\n                // See issue on Wildfly https://github.com/hazelcast/hazelcast/issues/6335\n                if (!originalSession.getId().equals(invalidatedOriginalSessionId)) {\n                    originalSession.invalidate();\n                }\n            }\n            if (clusteredSessionId != null) {\n                hazelcastSession = sessions.get(clusteredSessionId);\n            }\n            return readFromCookie();\n        }","commit_id":"25424fefdf7a1c99a92fd1bc55eee8dc8424c0db","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private void _basic(GLMParameters glmParams, String trainDatasetId, String trainDatasetFilename,\n\t\t\t\t\t\tString validateDatasetId, String validateDatasetFilename, String[] rawInput) {\n\t\tfinal String pathFile = \"smalldata/testng/\";\n\n\t\tFrame trainFrame = null;\n\t\tFrame validateFrame = null;\n\t\tFrame betaConstraints = null;\n\n\t\tboolean isBetaConstraints = Param.parseBoolean(rawInput[tcHeaders.indexOf(\"betaConstraints\")]);\n\t\tString responseColumnType = rawInput[tcHeaders.indexOf(\"response_column_type\")];\n\t\tString responseColumn = rawInput[tcHeaders.indexOf(\"_response_column\")];\n\t\tString lowerBound = rawInput[tcHeaders.indexOf(\"lowerBound\")];\n\t\tString upperBound = rawInput[tcHeaders.indexOf(\"upperBound\")];\n\t\tString betaGiven = rawInput[tcHeaders.indexOf(\"beta_given\")];\n\n\t\t// create train dataset\n\t\tFile train_dataset = find_test_file_static(pathFile + trainDatasetFilename);\n\t\tSystem.out.println(\"Is train dataset exist? If no, abort the test.\\n\");\n\t\tassert train_dataset.exists();\n\t\tNFSFileVec nfs_train_dataset = NFSFileVec.make(train_dataset);\n\t\tKey key_train_dataset = Key.make(trainDatasetId + \".hex\");\n\t\ttrainFrame = ParseDataset.parse(key_train_dataset, nfs_train_dataset._key);\n\t\tglmParams._train = trainFrame._key;\n\n\t\t// create validate dataset\n\t\tFile validate_dataset = find_test_file_static(pathFile + validateDatasetFilename);\n\t\tassert validate_dataset.exists();\n\t\tNFSFileVec nfs_validate_dataset = NFSFileVec.make(validate_dataset);\n\t\tKey key_validate_dataset = Key.make(validateDatasetId + \".hex\");\n\t\tvalidateFrame = ParseDataset.parse(key_validate_dataset, nfs_validate_dataset._key);\n\t\tglmParams._valid = validateFrame._key;\n\n\t\t// the beta constraints are represented in a frame with columns: \"names\", \"lower_bounds\", \"upper_bounds\",\n\t\t// and \"beta_given\" (optional). Each row corresponds to a predictor in the GLM. \"names\" contains the predictor\n\t\t// names, \"lower\"/\"upper_bounds\", are the lower and upper bounds of beta, and \"beta_given\" is some supplied\n\t\t// starting values for the betas.\n\n\t\t// You need to construct the beta constraints frame. In order to do so, you need to know the names of the\n\t\t// predictor columns, the upper and lower bounds (these are the same for each predictor), and (optionally)\n\t\t// the beta given (we don't provide this in the test case spreadsheet yet).\n\n\t\t// In this example, \"AGE\", \"RACE\", and \"GLEASON\" are the predictor names. -.5 is the lower bound and .5 is the\n\t\t// upper bound. Clearly, this information could change for each test case, so you'll have to generalize this\n\t\t// method.\n\t\t//Key betaConsKey = Key.make(\"beta_constraints\");\n\t\t//FVecTest.makeByteVec(betaConsKey, \"names, lower_bounds, upper_bounds\\n\"+\n\t\t//\t\t\"AGE, -.5, .5\\n\"+\n\t\t//\t\t\"RACE, -.5, .5\\n\"+\n\t\t//\t\t\"GLEASON, -.5, .5\");\n\t\t//betaConstraints = ParseDataset.parse(Key.make(\"beta_constraints.hex\"), betaConsKey);\n\t\t//glmParams._beta_constraints = betaConstraints._key;\n\n\t\tif (isBetaConstraints) {\n\t\t\t// Here's an example of how to make the beta constraints frame.\n\t\t\t// First, represent the beta constraints frame as a string, for example:\n\n\t\t\t//\"names, lower_bounds, upper_bounds\\n\"+\n\t\t\t//\"AGE, -.5, .5\\n\"+\n\t\t\t//\"RACE, -.5, .5\\n\"+\n\t\t\t//\"GLEASON, -.5, .5\"\n\t\t\tString betaConstraintsString = \"names, lower_bounds, upper_bounds\\n\";\n\t\t\tList<String> predictorNames = Arrays.asList(trainFrame._names);\n\t\t\tpredictorNames.remove(glmParams._response_column); // remove the response column name. we only want predictors\n\t\t\tfor(String name : predictorNames){\n\t\t\t\tbetaConstraintsString += name+\", \"+lowerBound+\", \"+upperBound+\"\\n\";\n\t\t\t}\n\t\t\tKey betaConsKey = Key.make(\"beta_constraints\");\n\t\t\tFVecTest.makeByteVec(betaConsKey, betaConstraintsString);\n\t\t\tbetaConstraints = ParseDataset.parse(Key.make(\"beta_constraints.hex\"), betaConsKey);\n\t\t\tglmParams._beta_constraints = betaConstraints._key;\n\t\t}\n\n\t\t// Build the appropriate glm, given the above parameters\n\t\tKey modelKey = Key.make(\"model\");\n\t\tGLM job = null;\n\t\tGLMModel model = null;\n\t\tFrame score = null;\n\t\tHashMap<String, Double> coef = null;\n\n\t\tScope.enter();\n\n\t\tjob = new GLM(modelKey, \"basic glm test\", glmParams);\n\t\tmodel = job.trainModel().get();\n\n\t\t//model = DKV.get(modelKey).get();\n\n\t\tcoef = model.coefficients();\n\n\t\ttry {\n\t\t\tscore = model.score(validateFrame);\n\t\t\t// Assert.assertTrue(model.testJavaScoring(score, trainFrame, 1e-15));\n\t\t\tSystem.out.println(\"Test is passed.\");\n\t\t}\n\t\tcatch (IllegalArgumentException ex) {\n\t\t\t// can't predict testcase\n\t\t\tAssert.fail(\"Test is failed. It can't predict\");\n\t\t\tex.printStackTrace();\n\t\t}\n\t\tfinally {\n\t\t\tif (trainFrame != null) {\n\t\t\t\ttrainFrame.delete();\n\t\t\t}\n\t\t\tif (validateFrame != null) {\n\t\t\t\tvalidateFrame.delete();\n\t\t\t}\n\t\t\tif (betaConstraints != null) {\n\t\t\t\tbetaConstraints.delete();\n\t\t\t}\n\t\t\tif (model != null)\n\t\t\t\tmodel.delete();\n\t\t\tif (job != null)\n\t\t\t\tjob.remove();\n\t\t\tScope.exit();\n\t\t}\n\t}","id":39717,"modified_method":"private void _basic(GLMParameters glmParams, String trainDatasetId, String trainDatasetFilename,\n\t\t\t\t\t\tString validateDatasetId, String validateDatasetFilename, String[] rawInput) {\n\t\tfinal String pathFile = \"smalldata/testng/\";\n\n\t\tFrame trainFrame = null;\n\t\tFrame validateFrame = null;\n\t\tFrame betaConstraints = null;\n\n\t\tboolean isBetaConstraints = Param.parseBoolean(rawInput[tcHeaders.indexOf(\"betaConstraints\")]);\n\t\tString responseColumnType = rawInput[tcHeaders.indexOf(\"response_column_type\")];\n\t\tString responseColumn = rawInput[tcHeaders.indexOf(\"_response_column\")];\n\t\tString lowerBound = rawInput[tcHeaders.indexOf(\"lowerBound\")];\n\t\tString upperBound = rawInput[tcHeaders.indexOf(\"upperBound\")];\n\t\tString betaGiven = rawInput[tcHeaders.indexOf(\"beta_given\")];\n\n\t\t// create train dataset\n\t\tFile train_dataset = find_test_file_static(pathFile + trainDatasetFilename);\n\t\tSystem.out.println(\"Is train dataset exist? If no, abort the test.\\n\");\n\t\tassert train_dataset.exists();\n\t\tNFSFileVec nfs_train_dataset = NFSFileVec.make(train_dataset);\n\t\tKey key_train_dataset = Key.make(trainDatasetId + \".hex\");\n\t\ttrainFrame = ParseDataset.parse(key_train_dataset, nfs_train_dataset._key);\n\t\tglmParams._train = trainFrame._key;\n\n\t\t// create validate dataset\n\t\tFile validate_dataset = find_test_file_static(pathFile + validateDatasetFilename);\n\t\tassert validate_dataset.exists();\n\t\tNFSFileVec nfs_validate_dataset = NFSFileVec.make(validate_dataset);\n\t\tKey key_validate_dataset = Key.make(validateDatasetId + \".hex\");\n\t\tvalidateFrame = ParseDataset.parse(key_validate_dataset, nfs_validate_dataset._key);\n\t\tglmParams._valid = validateFrame._key;\n\n\t\t// the beta constraints are represented in a frame with columns: \"names\", \"lower_bounds\", \"upper_bounds\",\n\t\t// and \"beta_given\" (optional). Each row corresponds to a predictor in the GLM. \"names\" contains the predictor\n\t\t// names, \"lower\"/\"upper_bounds\", are the lower and upper bounds of beta, and \"beta_given\" is some supplied\n\t\t// starting values for the betas.\n\n\t\t// You need to construct the beta constraints frame. In order to do so, you need to know the names of the\n\t\t// predictor columns, the upper and lower bounds (these are the same for each predictor), and (optionally)\n\t\t// the beta given (we don't provide this in the test case spreadsheet yet).\n\n\t\t// In this example, \"AGE\", \"RACE\", and \"GLEASON\" are the predictor names. -.5 is the lower bound and .5 is the\n\t\t// upper bound. Clearly, this information could change for each test case, so you'll have to generalize this\n\t\t// method.\n\t\t//Key betaConsKey = Key.make(\"beta_constraints\");\n\t\t//FVecTest.makeByteVec(betaConsKey, \"names, lower_bounds, upper_bounds\\n\"+\n\t\t//\t\t\"AGE, -.5, .5\\n\"+\n\t\t//\t\t\"RACE, -.5, .5\\n\"+\n\t\t//\t\t\"GLEASON, -.5, .5\");\n\t\t//betaConstraints = ParseDataset.parse(Key.make(\"beta_constraints.hex\"), betaConsKey);\n\t\t//glmParams._beta_constraints = betaConstraints._key;\n\n\t\tif (isBetaConstraints) {\n\t\t\t// Here's an example of how to make the beta constraints frame.\n\t\t\t// First, represent the beta constraints frame as a string, for example:\n\n\t\t\t//\"names, lower_bounds, upper_bounds\\n\"+\n\t\t\t//\"AGE, -.5, .5\\n\"+\n\t\t\t//\"RACE, -.5, .5\\n\"+\n\t\t\t//\"GLEASON, -.5, .5\"\n\t\t\tString betaConstraintsString = \"names, lower_bounds, upper_bounds\\n\";\n\t\t\tList<String> predictorNames = Arrays.asList(trainFrame._names);\n\t\t\t//predictorNames.remove(glmParams._response_column); // remove the response column name. we only want predictors\n\t\t\tfor(String name : predictorNames){\n\t\t\t\tif (!name.equals(glmParams._response_column)) {\n\t\t\t\t\tSystem.out.println(name + \", \" + lowerBound + \", \" + upperBound + \"\\n\");\n\t\t\t\t\tbetaConstraintsString += name + \", \" + lowerBound + \", \" + upperBound + \"\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tKey betaConsKey = Key.make(\"beta_constraints\");\n\t\t\tFVecTest.makeByteVec(betaConsKey, betaConstraintsString);\n\t\t\tbetaConstraints = ParseDataset.parse(Key.make(\"beta_constraints.hex\"), betaConsKey);\n\t\t\tglmParams._beta_constraints = betaConstraints._key;\n\t\t}\n\n\t\t// Build the appropriate glm, given the above parameters\n\t\tKey modelKey = Key.make(\"model\");\n\t\tGLM job = null;\n\t\tGLMModel model = null;\n\t\tFrame score = null;\n\t\tHashMap<String, Double> coef = null;\n\n\t\tScope.enter();\n\n\t\tjob = new GLM(modelKey, \"basic glm test\", glmParams);\n\t\tmodel = job.trainModel().get();\n\n\t\t//model = DKV.get(modelKey).get();\n\n\t\tcoef = model.coefficients();\n\n\t\ttry {\n\t\t\tscore = model.score(validateFrame);\n\t\t\t// Assert.assertTrue(model.testJavaScoring(score, trainFrame, 1e-15));\n\t\t\tSystem.out.println(\"Test is passed.\");\n\t\t}\n\t\tcatch (IllegalArgumentException ex) {\n\t\t\t// can't predict testcase\n\t\t\tAssert.fail(\"Test is failed. It can't predict\");\n\t\t\tex.printStackTrace();\n\t\t}\n\t\tfinally {\n\t\t\tif (trainFrame != null) {\n\t\t\t\ttrainFrame.delete();\n\t\t\t}\n\t\t\tif (validateFrame != null) {\n\t\t\t\tvalidateFrame.delete();\n\t\t\t}\n\t\t\tif (betaConstraints != null) {\n\t\t\t\tbetaConstraints.delete();\n\t\t\t}\n\t\t\tif (model != null)\n\t\t\t\tmodel.delete();\n\t\t\tif (job != null)\n\t\t\t\tjob.remove();\n\t\t\tScope.exit();\n\t\t}\n\t}","commit_id":"e99f3ce6b2e00f35dd74168933a7734015445e3d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override\n    public void onEvent(Event arg0, Object arg1, Object arg2)\n    {\n        if (arg0 instanceof WikiDeletedEvent) {\n            bundleCache.clear();\n        } else {\n            XWikiDocument document = (XWikiDocument) arg1;\n\n            if (document.getLocale() != null) {\n                this.bundleCache.remove(document.getLocale());\n            } else {\n                this.bundleCache.remove(Locale.ROOT);\n                this.bundleCache.remove(document.getDefaultLocale());\n            }\n        }\n    }","id":39718,"modified_method":"@Override\n    public void onEvent(Event arg0, Object arg1, Object arg2)\n    {\n        if (arg0 instanceof WikiDeletedEvent) {\n            bundleCache.clear();\n        } else {\n            XWikiDocument document = (XWikiDocument) arg1;\n\n            this.bundleCache.remove(document.getLocale());\n\n            if (document.getLocale().equals(Locale.ROOT)) {\n                this.bundleCache.remove(document.getDefaultLocale());\n            }\n        }\n    }","commit_id":"2a0d3b2fae13ededd40823534c0bb010617e8492","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void collectExistingContent(Map<String, String> existingContent) {\n    if(myFilesDir != null) {\n      for (IFile f : myFilesDir.list()) {\n        try {\n          String s = FileUtil.read(new InputStreamReader(f.openInputStream(), FileUtil.DEFAULT_CHARSET));\n          existingContent.put(f.getName(), s);\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n      existingContent.remove(TraceInfoCache.TRACE_FILE_NAME);\n    }\n  }","id":39719,"modified_method":"private void collectExistingContent(Map<String, String> existingContent) {\n    if(myFilesDir != null) {\n      for (IFile f : myFilesDir.list()) {\n        try {\n          if (f.isDirectory() || f.getName().equals(TraceInfoCache.TRACE_FILE_NAME))  continue;\n          String s = FileUtil.read(new InputStreamReader(f.openInputStream(), FileUtil.DEFAULT_CHARSET));\n          existingContent.put(f.getName(), s);\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    }\n  }","commit_id":"b0e02c79a196fcc1036030954ca3eefba5d4eac6","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void invalidate() {\n        // we must invalidate hazelcast session first\n        // invalidating original session will trigger another\n        // invalidation as our SessionListener will be triggered.\n        webFilter.destroySession(this, true);\n        originalSession.invalidate();\n    }","id":39720,"modified_method":"public void invalidate() {\n        // we must invalidate hazelcast session first\n        // invalidating original session will trigger another\n        // invalidation as our SessionListener will be triggered.\n        webFilter.destroySession(this, true);\n        originalSession.invalidate();\n        invalidatedOriginalSessionId = originalSession.getId();\n    }","commit_id":"1d4391855b8209aff496f09b251f8b4589d2ac6a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private HazelcastHttpSession readSessionFromLocal() {\n\n            if (hazelcastSession != null && !hazelcastSession.isValid()) {\n                LOGGER.finest(\"Session is invalid!\");\n                destroySession(hazelcastSession, true);\n                hazelcastSession = null;\n            } else if (hazelcastSession != null) {\n                return hazelcastSession;\n            }\n            HttpSession originalSession = getOriginalSession(false);\n            if (originalSession != null) {\n                String hazelcastSessionId = originalSessions.get(originalSession.getId());\n                if (hazelcastSessionId != null) {\n                    hazelcastSession = sessions.get(hazelcastSessionId);\n                    if (hazelcastSession != null && !hazelcastSession.isStickySession()) {\n                        hazelcastSession.updateReloadFlag();\n                    }\n                    return hazelcastSession;\n                }\n                originalSessions.remove(originalSession.getId());\n                originalSession.invalidate();\n            }\n            if (clusteredSessionId != null) {\n                hazelcastSession = sessions.get(clusteredSessionId);\n            }\n            return readFromCookie();\n        }","id":39721,"modified_method":"private HazelcastHttpSession readSessionFromLocal() {\n            String invalidatedOriginalSessionId = null;\n            if (hazelcastSession != null && !hazelcastSession.isValid()) {\n                LOGGER.finest(\"Session is invalid!\");\n                destroySession(hazelcastSession, true);\n                invalidatedOriginalSessionId = hazelcastSession.invalidatedOriginalSessionId;\n                hazelcastSession = null;\n            } else if (hazelcastSession != null) {\n                return hazelcastSession;\n            }\n            HttpSession originalSession = getOriginalSession(false);\n            if (originalSession != null) {\n                String hazelcastSessionId = originalSessions.get(originalSession.getId());\n                if (hazelcastSessionId != null) {\n                    hazelcastSession = sessions.get(hazelcastSessionId);\n                    if (hazelcastSession != null && !hazelcastSession.isStickySession()) {\n                        hazelcastSession.updateReloadFlag();\n                    }\n                    return hazelcastSession;\n                }\n                // Even though session can be taken from request, it might be already invalidated.\n                // For example, in Wildfly (uses Undertow), taken wrapper session might be valid\n                // but its underlying real session might be already invalidated after redirection\n                // due to its request/url based wrapper session (points to same original session) design.\n                // Therefore, we check the taken session id and\n                // ignore its invalidation if it is already invalidated inside Hazelcast's session.\n                // See issue on Wildfly https://github.com/hazelcast/hazelcast/issues/6335\n                if (!originalSession.getId().equals(invalidatedOriginalSessionId)) {\n                    originalSession.invalidate();\n                }\n            }\n            if (clusteredSessionId != null) {\n                hazelcastSession = sessions.get(clusteredSessionId);\n            }\n            return readFromCookie();\n        }","commit_id":"1d4391855b8209aff496f09b251f8b4589d2ac6a","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private static void updateUsageTotals(UsageTotalsArtEntity totals, InstanceArtEntity instance)\n\t{\n\t\tfinal InstanceUsageArtEntity totalEntity = totals.getInstanceTotals();\n\t\tfinal InstanceUsageArtEntity usage = instance.getUsage();\n\n\t\t/* Update metrics */\n\t\taddUsage( totalEntity, usage );\n\n\t\t/* Update total running time and type count for this instance type */\n\t\tfinal Map<String,InstanceUsageArtEntity> typeTotals = totals.getTypeTotals();\n\t\tif (!typeTotals.containsKey(instance.getInstanceType())) {\n\t\t\ttypeTotals.put(instance.getInstanceType(), new InstanceUsageArtEntity());\n\t\t}\n\t\tfinal InstanceUsageArtEntity typeTotal =\n\t\t\t\ttypeTotals.get(instance.getInstanceType());\n\n\t\taddUsage( typeTotal, usage );\n\t}","id":39722,"modified_method":"private static void updateUsageTotals(UsageTotalsArtEntity totals, InstanceArtEntity instance)\n\t{\n\t\tInstanceUsageArtEntity totalEntity = totals.getInstanceTotals();\n\t\tInstanceUsageArtEntity usage = instance.getUsage();\n\t\t\n\t\t/* Update metrics */\n        addUsage( totalEntity, usage );\n\t\t\n\t\t/* Update total running time and type count for this instance type */\n\t\tMap<String,InstanceUsageArtEntity> typeTotals = totals.getTypeTotals();\n\t\tif (!typeTotals.containsKey(instance.getInstanceType().toLowerCase())) {\n\t\t\ttypeTotals.put(instance.getInstanceType().toLowerCase(),\n\t\t\t\t\tnew InstanceUsageArtEntity());\n\t\t}\n\t\tInstanceUsageArtEntity typeTotal =\n\t\t\ttypeTotals.get(instance.getInstanceType().toLowerCase());\n\t\t\n        addUsage( typeTotal, usage );\n\t\t\n\t}","commit_id":"8d465609682cfafb6e308c4f5cb5298aa1acf810","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"protected void foreachInstanceCreateEventInReverse(\n\t\t\tfinal long endExclusive,\n\t\t\tfinal Predicate<? super ReportingInstanceCreateEvent> callback ) {\n\t\tforeach( ReportingInstanceCreateEvent.class,\n\t\t\t\tbefore( endExclusive ),\n\t\t\t\tfalse,\n\t\t\t\tvalidateCreate( callback ) );\n\t}","id":39723,"modified_method":"protected void foreachInstanceCreateEvent(long endExclusive,\n    \t\tPredicate<? super ReportingInstanceCreateEvent> callback )\n    {\n        foreach( ReportingInstanceCreateEvent.class, before( endExclusive ), callback );\n    }","commit_id":"8d465609682cfafb6e308c4f5cb5298aa1acf810","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"protected void foreachInstanceUsageEvent(\n\t\t\tfinal long startInclusive,\n\t\t\tfinal long endExclusive,\n\t\t\tfinal boolean forward,\n\t\t\tfinal Predicate<? super ReportingInstanceUsageEvent> callback ) {\n\t\tforeach( ReportingInstanceUsageEvent.class,\n\t\t\t\tbetween( startInclusive, endExclusive ),\n\t\t\t\tforward,\n\t\t\t\tvalidateUsage( callback ) );\n\t}","id":39724,"modified_method":"protected void foreachInstanceUsageEvent(long startInclusive, long endExclusive,\n            Predicate<? super ReportingInstanceUsageEvent> callback)\n    {\n        foreach( ReportingInstanceUsageEvent.class, between( startInclusive, endExclusive ), callback );\n    }","commit_id":"8d465609682cfafb6e308c4f5cb5298aa1acf810","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic ReportArtEntity generateReportArt( final ReportArtEntity report )\n\t{\n\t\tlog.debug(\"Generating report ART\");\n\n\t\t// locate relevant usage events\n\t\tfinal Map<String, UsageCollator> usageCollators = findUsageEventsForReport( report );\n\n\t\t// cache for user/account info\n\t\tfinal Map<String,ReportingUser> reportingUsersById = Maps.newHashMap();\n\t\tfinal Map<String,String> accountNamesById = Maps.newHashMap();\n\n\t\t/* Create super-tree of availZones, clusters, accounts, users, and instances;\n\t\t * and create a Map of the instance usage nodes at the bottom.\n\t\t */\n\t\tfinal Map<String,InstanceUsageArtEntity> usageEntities = Maps.newHashMap();\n\t\tforeachInstanceCreateEventInReverse( report.getEndMs(), new Predicate<ReportingInstanceCreateEvent>() {\n\t\t\t@Override\n\t\t\tpublic boolean apply( final ReportingInstanceCreateEvent createEvent ) {\n\t\t\t\tif (!usageCollators.keySet().contains(createEvent.getUuid())) {\n\t\t\t\t\treturn true; // ignore, no usage in report period\n\t\t\t\t}\n\n\t\t\t\tif (! report.getZones().containsKey(createEvent.getAvailabilityZone())) {\n\t\t\t\t\treport.getZones().put(createEvent.getAvailabilityZone(), new AvailabilityZoneArtEntity());\n\t\t\t\t}\n\t\t\t\tfinal AvailabilityZoneArtEntity zone = report.getZones().get( createEvent.getAvailabilityZone() );\n\n\t\t\t\tfinal ReportingUser reportingUser = getUserById( reportingUsersById, createEvent.getUserId() );\n\t\t\t\tif (reportingUser==null) {\n\t\t\t\t\tlog.error(\"No user corresponding to event:\" + createEvent.getUserId());\n\t\t\t\t\tusageCollators.remove( createEvent.getUuid() );\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tfinal String accountName = getAccountNameById( accountNamesById, reportingUser.getAccountId() );\n\t\t\t\tif (accountName==null) {\n\t\t\t\t\tlog.error(\"No account corresponding to user:\" + reportingUser.getAccountId());\n\t\t\t\t\tusageCollators.remove( createEvent.getUuid() );\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tusageCollators.get(createEvent.getUuid()).created( report.getBeginMs(), createEvent.getTimestampMs() );\n\t\t\t\tif (! zone.getAccounts().containsKey(accountName)) {\n\t\t\t\t\tzone.getAccounts().put(accountName, new AccountArtEntity());\n\t\t\t\t}\n\t\t\t\tfinal AccountArtEntity account = zone.getAccounts().get(accountName);\n\t\t\t\tif (! account.getUsers().containsKey(reportingUser.getName())) {\n\t\t\t\t\taccount.getUsers().put(reportingUser.getName(), new UserArtEntity());\n\t\t\t\t}\n\t\t\t\tfinal UserArtEntity user = account.getUsers().get(reportingUser.getName());\n\t\t\t\tif (! user.getInstances().containsKey(createEvent.getUuid())) {\n\t\t\t\t\tuser.getInstances().put(createEvent.getUuid(), new InstanceArtEntity(createEvent.getInstanceType(), createEvent.getInstanceId()));\n\t\t\t\t}\n\t\t\t\tfinal InstanceArtEntity instance = user.getInstances().get(createEvent.getUuid());\n\t\t\t\tinstance.getUsage().addInstanceCnt(1);\n\t\t\t\tusageEntities.put(createEvent.getUuid(), instance.getUsage());\n\t\t\t\treturn !usageEntities.keySet().containsAll( usageCollators.keySet() );\n\t\t\t}\n\t\t} );\n\n\t\t/* Scan through instance usage and update instance usage nodes. Also,\n\t\t * find start and end times.\n\t\t */\n\t\tfor( final Map.Entry<String,UsageCollator> usageCollatorEntry : usageCollators.entrySet() ) {\n\t\t\tfinal String instanceUuid = usageCollatorEntry.getKey();\n\t\t\tfinal UsageCollator usageCollator = usageCollatorEntry.getValue();\n\t\t\tfinal InstanceUsageArtEntity usage = usageEntities.get( instanceUuid );\n\t\t\tif ( usage == null ) {\n\t\t\t\tlog.error( \"Missing create event for instance: \" + instanceUuid);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t/* Update duration\n\t\t\t */\n\t\t\tusage.setDurationMs( usageCollator.getDuration( report.getBeginMs(), report.getEndMs() ) );\n\n\t\t\tfor ( final Map.Entry<UsageMetricDimensionKey,UsageMetricDimension> metricsEntry : usageCollator.usage.entrySet() ) {\n\t\t\t\tfinal UsageMetricDimensionKey key = metricsEntry.getKey();\n\t\t\t\tfinal UsageMetricDimension usageMetricDimension = metricsEntry.getValue();\n\t\t\t\tfinal String metric = key.metric;\n\t\t\t\tfinal String dim    = key.dimension;\n\n\t\t\t\tReportingInstanceUsageEvent lastEvent = null;\n\t\t\t\tfor ( final ReportingInstanceUsageEvent usageEvent : usageMetricDimension ) {\n\t\t\t\t\tif ( lastEvent == null ) {\n\t\t\t\t\t\tlastEvent = usageEvent; // we will have added an initial \"zero\" event if appropriate\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( lastEvent.getSequenceNum() >= usageEvent.getSequenceNum() ) {\n\t\t\t\t\t\t// usage reset, treat last usage as zero\n\t\t\t\t\t\tlastEvent = usageEvent.zero( lastEvent.getTimestampMs() );\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Subtract last usage from this usage because all these statistics are CUMULATIVE.\t */\n\t\t\t\t\tfinal Double value = usageEvent.getValue() - Objects.firstNonNull( lastEvent.getValue(), 0d );\n\t\t\t\t\tfinal Double valueMB = value/1024/1024; //don't bitshift a double\n\n\t\t\t\t\tif (metric.equals(METRIC_NET_IN_BYTES) && dim.equals(DIM_TOTAL)) {\n\t\t\t\t\t\tusage.addNetTotalInMegs(interpolate(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB).longValue());\n\t\t\t\t\t} else if (metric.equals(METRIC_NET_OUT_BYTES) && dim.equals(DIM_TOTAL)) {\n\t\t\t\t\t\tusage.addNetTotalOutMegs(interpolate(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB).longValue());\n\t\t\t\t\t} else if (metric.equals(METRIC_DISK_IN_BYTES)) {\n\t\t\t\t\t\tusage.addDiskReadMegs( interpolate( report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB ).longValue() );\n\t\t\t\t\t} else if (metric.equals(METRIC_DISK_OUT_BYTES)) {\n\t\t\t\t\t\tusage.addDiskWriteMegs( interpolate( report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB ).longValue() );\n\t\t\t\t\t} else if (metric.equals(METRIC_DISK_READ_OPS)) {\n\t\t\t\t\t\tusage.addDiskReadOps( interpolate( report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), value ).longValue() );\n\t\t\t\t\t} else if (metric.equals(METRIC_DISK_WRITE_OPS)) {\n\t\t\t\t\t\tusage.addDiskWriteOps( interpolate( report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), value ).longValue() );\n\t\t\t\t\t} else if (metric.equals(METRIC_VOLUME_READ)) {\n\t\t\t\t\t\tusage.addDiskReadTime( interpolate( report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), value ).longValue() );\n\t\t\t\t\t} else if (metric.equals(METRIC_VOLUME_WRITE)) {\n\t\t\t\t\t\tusage.addDiskWriteTime( interpolate( report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), value ).longValue() );\n\t\t\t\t\t} else if (metric.equals(METRIC_CPU_USAGE_MS) && (dim.equals(DIM_DEFAULT))) {\n\t\t\t\t\t\tusage.addCpuUtilizationMs(interpolate(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), value).longValue());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.debug(\"Unrecognized metric for report:\" + metric + \"/\" + dim);\n\t\t\t\t\t}\n\n\t\t\t\t\tlastEvent = usageEvent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* Perform totals and summations\n\t\t */\n\t\tfor ( final AvailabilityZoneArtEntity zone : report.getZones().values() ) {\n\t\t\tfinal UsageTotalsArtEntity zoneUsage = zone.getUsageTotals();\n\t\t\tfor ( final AccountArtEntity account : zone.getAccounts().values() ) {\n\t\t\t\tfinal UsageTotalsArtEntity accountUsage = account.getUsageTotals();\n\t\t\t\tfor ( final UserArtEntity user : account.getUsers().values() ) {\n\t\t\t\t\tfinal UsageTotalsArtEntity userUsage = user.getUsageTotals();\n\t\t\t\t\tfor ( final InstanceArtEntity instance : user.getInstances().values() ) {\n\t\t\t\t\t\tupdateUsageTotals(userUsage, instance);\n\t\t\t\t\t\tupdateUsageTotals(accountUsage, instance);\n\t\t\t\t\t\tupdateUsageTotals(zoneUsage, instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn report;\n\t}","id":39725,"modified_method":"public ReportArtEntity generateReportArt(final ReportArtEntity report)\n\t{\n\t\tlog.debug(\"GENERATING REPORT ART\");\n\n\t\t/* Create super-tree of availZones, clusters, accounts, users, and instances;\n\t\t * and create a Map of the instance usage nodes at the bottom.\n\t\t */\n\t\tfinal Map<String,InstanceUsageArtEntity> usageEntities = new HashMap<String,InstanceUsageArtEntity>();\n\t\tfinal Map<String, Long> instanceStartTimes = new HashMap<String, Long>();\n\n        foreachInstanceCreateEvent( report.getEndMs(), new Predicate<ReportingInstanceCreateEvent>() {\n            @Override\n            public boolean apply( final ReportingInstanceCreateEvent createEvent ) {\n\n            \tif (! report.getZones().containsKey(createEvent.getAvailabilityZone())) {\n            \t\treport.getZones().put(createEvent.getAvailabilityZone(), new AvailabilityZoneArtEntity());\n            \t}\n            \tAvailabilityZoneArtEntity zone = report.getZones().get(createEvent.getAvailabilityZone());\n\n            \tReportingUser reportingUser = ReportingUserDao.getInstance().getReportingUser(createEvent.getUserId());\n            \tif (reportingUser==null) {\n            \t\tlog.error(\"No user corresponding to event:\" + createEvent.getUserId());\n            \t}\n            \tReportingAccount reportingAccount = ReportingAccountDao.getInstance().getReportingAccount(reportingUser.getAccountId());\n            \tif (reportingAccount==null) {\n            \t\tlog.error(\"No account corresponding to user:\" + reportingUser.getAccountId());\n            \t}\n            \tif (! zone.getAccounts().containsKey(reportingAccount.getName())) {\n            \t\tzone.getAccounts().put(reportingAccount.getName(), new AccountArtEntity());\n            \t}\n            \tAccountArtEntity account = zone.getAccounts().get(reportingAccount.getName());\n            \tif (! account.getUsers().containsKey(reportingUser.getName())) {\n            \t\taccount.getUsers().put(reportingUser.getName(), new UserArtEntity());\n            \t}\n            \tUserArtEntity user = account.getUsers().get(reportingUser.getName());\n            \tif (! user.getInstances().containsKey(createEvent.getUuid())) {\n            \t\tuser.getInstances().put(createEvent.getUuid(), new InstanceArtEntity(createEvent.getInstanceType(), createEvent.getInstanceId()));\n            \t}\n            \tInstanceArtEntity instance = user.getInstances().get(createEvent.getUuid());\n            \tinstance.getUsage().addInstanceCnt(1);\n            \tusageEntities.put(createEvent.getUuid(), instance.getUsage());\n            \tinstanceStartTimes.put(createEvent.getUuid(), createEvent.getTimestampMs());\n            \treturn true;            \n            }\n        } );\n\n\n\t\t/* Gather values for the last event before report beginning, the first event after\n\t\t * report beginning, the last event before report end, and the first event after report\n\t\t * end, for every instance/metric/dimension combo, from the usage log. This is\n\t\t * necessary to calculate fractional usage for report boundaries that fall between\n\t\t * usage events.\n\t\t */\n\t\tfinal Map<InstanceMetricDimensionKey, TimestampValueAccumulator> accumulators =\n\t\t\tnew HashMap<InstanceMetricDimensionKey, TimestampValueAccumulator>();\n        foreachInstanceUsageEvent( report.getBeginMs()-USAGE_SEARCH_PERIOD,\n        \t\treport.getEndMs()+USAGE_SEARCH_PERIOD,\n        \t\tnew Predicate<ReportingInstanceUsageEvent>() {\n            @Override\n            public boolean apply( final ReportingInstanceUsageEvent usageEvent ) {\n            \tInstanceMetricDimensionKey key =\n            \t\tnew InstanceMetricDimensionKey(usageEvent.getUuid(), usageEvent.getMetric(),\n            \t\t\t\tusageEvent.getDimension());\n            \tif (!accumulators.containsKey(key)) {\n            \t\taccumulators.put(key, new TimestampValueAccumulator(report.getBeginMs(), report.getEndMs()));\n            \t}\n            \tif (usageEvent.getValue()!=null) {\n            \t\tTimestampValue tv = new TimestampValue(usageEvent.getTimestampMs(), usageEvent.getValue());\n            \t\taccumulators.get(key).addTimestampValue(tv);\n            \t}\n            \t/* Add zeroeth event value if we need one */\n            \tif (instanceStartTimes.containsKey(usageEvent.getUuid())\n            \t\t\t&& (accumulators.get(key).lastBeforeBeginning==null\n            \t\t\t\t\t|| accumulators.get(key).firstAfterBeginning==null)) {\n            \t\taccumulators.get(key).addTimestampValue(new TimestampValue(instanceStartTimes.get(usageEvent.getUuid()), 0d));\n            \t}\n            \treturn true;\n            }\n        } );\n\n\t\t\n\t\t/* Fill in ART values and durations for all the instance/metric/dimension\n\t\t * combo data gathered above.\n\t\t */\n\t\tfor (InstanceMetricDimensionKey key: accumulators.keySet()) {\n\t\t\tTimestampValueAccumulator acc = accumulators.get(key);\n\t\t\t\n\t\t\tif (acc.firstAfterBeginning==null || acc.lastBeforeEnd==null) continue;\n\t\t\tdouble val = 0;\n\t\t\t/* Add all usage which occurs entirely within report boundaries */\n\t\t\tval += (acc.lastBeforeEnd.val - acc.firstAfterBeginning.val);\n\t\t\t/* Add partial usage for periods which cross report beginning or end */\n\t\t\tif (acc.lastBeforeBeginning!=null) {\n\t\t\t\tlong durationMs = acc.firstAfterBeginning.timeMs - acc.lastBeforeBeginning.timeMs;\n\t\t\t\t/* factor is fraction of usage which comes after report beginning */\n\t\t\t\tdouble factor = ((double)acc.firstAfterBeginning.timeMs-report.getBeginMs())/durationMs;\n\t\t\t\tval += (acc.firstAfterBeginning.val-acc.lastBeforeBeginning.val)*factor;\n\t\t\t}\n\t\t\tif (acc.firstAfterEnd!=null) {\n\t\t\t\tlong durationMs = acc.firstAfterEnd.timeMs - acc.lastBeforeEnd.timeMs;\n\t\t\t\t/* factor is fraction of usage which comes before report end */\n\t\t\t\tdouble factor = ((double)report.getEndMs()-acc.lastBeforeEnd.timeMs)/durationMs;\n\t\t\t\tval += (acc.firstAfterEnd.val-acc.lastBeforeEnd.val) * factor;\n\t\t\t}\n\n\t\t\t/* Update usage in ART */\n\t\t\tInstanceUsageArtEntity usageEntity = usageEntities.get(key.instanceUuid);\n\t\t\taddMetricValueToUsageEntity(usageEntity, key.metric, key.dimension, val);\n\n\t\t\t/* Update instance duration in ART */\n\t\t\tlong startMs = acc.lastBeforeBeginning!=null ? report.getBeginMs() : acc.firstAfterBeginning.timeMs;\n\t\t\tlong endMs = acc.firstAfterEnd!=null ? report.getEndMs() : acc.lastBeforeEnd.timeMs;\n\t\t\tusageEntity.setDurationMs(Math.max(usageEntity.getDurationMs(), endMs-startMs));\n\t\t}\n\n\t\t\n\t\t/* Perform totals and summations\n\t\t */\n        for ( final AvailabilityZoneArtEntity zone : report.getZones().values() ) {\n            final UsageTotalsArtEntity zoneUsage = zone.getUsageTotals();\n            for ( final AccountArtEntity account : zone.getAccounts().values() ) {\n                final UsageTotalsArtEntity accountUsage = account.getUsageTotals();\n                for ( final UserArtEntity user : account.getUsers().values() ) {\n                    final UsageTotalsArtEntity userUsage = user.getUsageTotals();\n                    for ( final InstanceArtEntity instance : user.getInstances().values() ) {\n                        updateUsageTotals(userUsage, instance);\n                        updateUsageTotals(accountUsage, instance);\n                        updateUsageTotals(zoneUsage, instance);\n                    }\n                }\n            }\n        }\n\t\t\n\t\treturn report;\n\t}","commit_id":"8d465609682cfafb6e308c4f5cb5298aa1acf810","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void insertUsageEvent( @Nonnull final String uuid,\n                                @Nonnull final Long timestamp,\n                                @Nonnull final String metric,\n                                @Nonnull final Long sequenceNum,\n                                @Nonnull final String dimension,\n                                @Nonnull final Double value ) {\n\n    Preconditions.checkNotNull( uuid, \"Uuid is required\" );\n    Preconditions.checkNotNull( timestamp, \"Timestamp is required\" );\n    Preconditions.checkNotNull( metric, \"Metric is required\" );\n    Preconditions.checkNotNull( sequenceNum, \"SequenceNum is required\" );\n    Preconditions.checkNotNull( dimension, \"Dimension is required\" );\n    Preconditions.checkNotNull( value, \"value is required\" );\n\n    persist( new ReportingInstanceUsageEvent( uuid, metric, sequenceNum, dimension, value, timestamp ) );\n  }","id":39726,"modified_method":"public void insertUsageEvent( @Nonnull final String uuid,\n                                @Nonnull final Long timestamp,\n                                @Nonnull final String metric,\n                                @Nonnull final Long sequenceNum,\n                                @Nonnull final String dimension,\n                                @Nonnull final Double value ) {\n\n    Preconditions.checkNotNull( uuid, \"Uuid is required\" );\n    Preconditions.checkNotNull( timestamp, \"Timestamp is required\" );\n    Preconditions.checkNotNull( metric, \"Metric is required\" );\n    Preconditions.checkNotNull( sequenceNum, \"SequenceNum is required\" );\n    Preconditions.checkNotNull( dimension, \"Dimension is required\" );\n    Preconditions.checkNotNull( value, \"value is required\" );\n\n    /* insertUsageEvent corrects sensor resets before inserting data into the database. Sensors\n     * occasionally reset when an nc reboots or for some other reason. In which case, the sequence\n     * number resets to 0 and the value resets to 0. We correct this by increasing the value\n     * by whatever the last value before reset was (values are cumulative) for every subsequent\n     * event for this metric. To do this, we must retain the last value for each metric value, the\n     * last sequence number, and the offsets; the offsets are increased every time there is a sensor\n     * reset.\n     * \n     * In some circumstances, the CLC will failover and this data will be lost. This will not\n     * affect this algorithm. Only if a sensor has a sequence number lower than a prior remembered\n     * one, will we detect a sequence reset.\n     * \n     * On rare occasions, the sensor can reset at the same moment that the CLC fails over. In this\n     * rare case, instance usage could go backwards in the database. Programs which read the database\n     * should be aware of this rare possibility.\n     * \n     * We must not retain prior data forever for all instances, so the data is periodically\n     * purged.\n     */\n    InstanceMetricDimensionKey key = new InstanceMetricDimensionKey(uuid, metric, dimension);\n    if (!metricInfoMap.containsKey(key)) {\n    \tmetricInfoMap.put(key, new MetricInfo());\n    }\n    MetricInfo info = metricInfoMap.get(key);\n    if (sequenceNum < info.lastSequenceNum) {\n    \t/* RESET HAS OCCURRED */\n    \tinfo.sequenceOffset += info.lastSequenceNum;\n    \tinfo.valueOffset += info.lastValue;\n    }\n    info.lastSequenceNum = sequenceNum;\n    info.lastValue = value;\n    info.lastEventArrived = System.currentTimeMillis();\n    \n    if (eventCnt++ % PURGE_EVERY_NUM_EVENTS==0) purgeMetricInfo();\n\n    persist( new ReportingInstanceUsageEvent( uuid, metric, sequenceNum+info.sequenceOffset,\n    \t\tdimension, value+info.valueOffset, timestamp ) );\n  }","commit_id":"8d465609682cfafb6e308c4f5cb5298aa1acf810","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n   * Parses fulltext options.\n   * @param ftexpr full-text expression\n   * @param opts full-text options\n   * @return expressions\n   */\n  final FTExpr options(final FTExpr ftexpr, final FtOptions opts) {\n    FTExpr fte = ftexpr;\n    if(opts != null) {\n      if(opts.get(FtIndexOptions.ORDERED)) {\n        fte = new FTOrder(info, fte);\n      }\n      if(opts.contains(FtIndexOptions.DISTANCE)) {\n        final FTDistanceOptions fopts = opts.get(FtIndexOptions.DISTANCE);\n        final Int min = Int.get(fopts.get(FTDistanceOptions.MIN));\n        final Int max = Int.get(fopts.get(FTDistanceOptions.MAX));\n        final FTUnit unit = fopts.get(FTDistanceOptions.UNIT);\n        fte = new FTDistance(info, fte, min, max, unit);\n      }\n      if(opts.contains(FtIndexOptions.WINDOW)) {\n        final FTWindowOptions fopts = opts.get(FtIndexOptions.WINDOW);\n        final Int sz = Int.get(fopts.get(FTWindowOptions.SIZE));\n        final FTUnit unit = fopts.get(FTWindowOptions.UNIT);\n        fte = new FTWindow(info, fte, sz, unit);\n      }\n      if(opts.contains(FtIndexOptions.SCOPE)) {\n        final FTScopeOptions fopts = opts.get(FtIndexOptions.SCOPE);\n        final boolean same = fopts.get(FTScopeOptions.SAME);\n        final FTUnit unit = fopts.get(FTScopeOptions.UNIT).unit();\n        fte = new FTScope(info, fte, same, unit);\n      }\n      if(opts.contains(FtIndexOptions.CONTENT)) {\n        final FTContents cont = opts.get(FtIndexOptions.CONTENT);\n        fte = new FTContent(info, fte, cont);\n      }\n    }\n    return fte;\n  }","id":39727,"modified_method":"/**\n   * Parses fulltext options.\n   * @param ftexpr full-text expression\n   * @param opts full-text options\n   * @return expressions\n   */\n  final FTExpr options(final FTExpr ftexpr, final FtIndexOptions opts) {\n    FTExpr fte = ftexpr;\n    if(opts != null) {\n      if(opts.get(FtIndexOptions.ORDERED)) {\n        fte = new FTOrder(info, fte);\n      }\n      if(opts.contains(FtIndexOptions.DISTANCE)) {\n        final FTDistanceOptions fopts = opts.get(FtIndexOptions.DISTANCE);\n        final Int min = Int.get(fopts.get(FTDistanceOptions.MIN));\n        final Int max = Int.get(fopts.get(FTDistanceOptions.MAX));\n        final FTUnit unit = fopts.get(FTDistanceOptions.UNIT);\n        fte = new FTDistance(info, fte, min, max, unit);\n      }\n      if(opts.contains(FtIndexOptions.WINDOW)) {\n        final FTWindowOptions fopts = opts.get(FtIndexOptions.WINDOW);\n        final Int sz = Int.get(fopts.get(FTWindowOptions.SIZE));\n        final FTUnit unit = fopts.get(FTWindowOptions.UNIT);\n        fte = new FTWindow(info, fte, sz, unit);\n      }\n      if(opts.contains(FtIndexOptions.SCOPE)) {\n        final FTScopeOptions fopts = opts.get(FtIndexOptions.SCOPE);\n        final boolean same = fopts.get(FTScopeOptions.SAME);\n        final FTUnit unit = fopts.get(FTScopeOptions.UNIT).unit();\n        fte = new FTScope(info, fte, same, unit);\n      }\n      if(opts.contains(FtIndexOptions.CONTENT)) {\n        final FTContents cont = opts.get(FtIndexOptions.CONTENT);\n        fte = new FTContent(info, fte, cont);\n      }\n    }\n    return fte;\n  }","commit_id":"328d1cf52f1ed6563cd9a9be3f15711ca278f52c","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public Item item(final QueryContext qc, final InputInfo ii) throws QueryException {\n    final Value input = qc.value(exprs[0]);\n    final Value query = qc.value(exprs[1]);\n    final FtOptions opts = toOptions(2, Q_OPTIONS, new FtOptions(), qc);\n\n    final FTOpt opt = new FTOpt();\n    final FTMode mode = opts.get(FtIndexOptions.MODE);\n    opt.set(FZ, opts.get(FtIndexOptions.FUZZY));\n    opt.set(WC, opts.get(FtIndexOptions.WILDCARDS));\n    opt.set(DC, opts.get(FtOptions.DIACRITICS) == FTDiacritics.SENSITIVE);\n    opt.set(ST, opts.get(FtOptions.STEMMING));\n    opt.ln = Language.get(opts.get(FtOptions.LANGUAGE));\n    opt.cs = opts.get(FtOptions.CASE);\n    if(opt.is(FZ) && opt.is(WC)) throw BXFT_MATCH.get(info, this);\n\n    final FTOpt tmp = qc.ftOpt();\n    qc.ftOpt(opt);\n    final FTExpr fte = new FTWords(info, query, mode, null).compile(qc, null);\n    qc.ftOpt(tmp);\n    return new FTContains(input, options(fte, opts), info).item(qc, info);\n  }","id":39728,"modified_method":"@Override\n  public Item item(final QueryContext qc, final InputInfo ii) throws QueryException {\n    final Value input = qc.value(exprs[0]);\n    final Value query = qc.value(exprs[1]);\n    final FtContainsOptions opts = toOptions(2, Q_OPTIONS, new FtContainsOptions(), qc);\n\n    final FTOpt tmp = qc.ftOpt();\n    final FTOpt opt = new FTOpt().copy(tmp);\n    final FTMode mode = opts.get(FtIndexOptions.MODE);\n    opt.set(FZ, opts.get(FtIndexOptions.FUZZY));\n    opt.set(WC, opts.get(FtIndexOptions.WILDCARDS));\n    if(opt.is(FZ) && opt.is(WC)) throw BXFT_MATCH.get(info, this);\n\n    final FTDiacritics dc = opts.get(FtContainsOptions.DIACRITICS);\n    if(dc != null) opt.set(DC, dc == FTDiacritics.SENSITIVE);\n    final Boolean st = opts.get(FtContainsOptions.STEMMING);\n    if(st != null) opt.set(ST, st);\n    final String ln = opts.get(FtContainsOptions.LANGUAGE);\n    if(ln != null) opt.ln = Language.get(ln);\n    final FTCase cs = opts.get(FtContainsOptions.CASE);\n    if(cs != null) opt.cs = cs;\n\n    qc.ftOpt(opt);\n    final FTExpr fte;\n    try {\n      fte = new FTWords(info, query, mode, null).compile(qc, null);\n    } finally {\n      qc.ftOpt(tmp);\n    }\n    return new FTContains(input, options(fte, opts), info).item(qc, info);\n  }","commit_id":"328d1cf52f1ed6563cd9a9be3f15711ca278f52c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/** Test method. */\n  @Test\n  public void tokenize() {\n    query(_FT_TOKENIZE.args(\"A bc\"), \"a bc\");\n    query(\"declare ft-option using stemming; \" + _FT_TOKENIZE.args(\"Gifts\"), \"gift\");\n    query(\"count(\" + _FT_TOKENIZE.args(\"\") + ')', \"0\");\n    query(\"count(\" + _FT_TOKENIZE.args(\"a!b:c\") + ')', \"3\");\n  }","id":39729,"modified_method":"/** Test method. */\n  @Test\n  public void tokenize() {\n    query(_FT_TOKENIZE.args(\"A bc\"), \"a bc\");\n    query(_FT_TOKENIZE.args(\"A bc\", \" map { 'case': 'sensitive' }\"), \"A bc\");\n    query(_FT_TOKENIZE.args(\"\\u00e4\", \" map { 'diacritics': 'sensitive' }\"), \"\\u00e4\");\n    query(_FT_TOKENIZE.args(\"gifts\", \" map { 'stemming': 'true' }\"), \"gift\");\n\n    query(\"declare ft-option using stemming; \" + _FT_TOKENIZE.args(\"Gifts\"), \"gift\");\n    query(\"count(\" + _FT_TOKENIZE.args(\"\") + ')', \"0\");\n    query(\"count(\" + _FT_TOKENIZE.args(\"a!b:c\") + ')', \"3\");\n  }","commit_id":"328d1cf52f1ed6563cd9a9be3f15711ca278f52c","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public Iter iter(final QueryContext qc) throws QueryException {\n    final Data data = checkData(qc);\n    final Value terms = qc.value(exprs[1]);\n    final FtOptions opts = toOptions(2, Q_OPTIONS, new FtOptions(), qc);\n\n    final IndexContext ic = new IndexContext(data, false);\n    if(!data.meta.ftxtindex) throw BXDB_INDEX_X.get(info, data.meta.name,\n        IndexType.FULLTEXT.toString().toLowerCase(Locale.ENGLISH));\n\n    final FTOpt opt = new FTOpt().copy(data.meta);\n    final FTMode mode = opts.get(FtIndexOptions.MODE);\n    opt.set(FZ, opts.get(FtIndexOptions.FUZZY));\n    opt.set(WC, opts.get(FtIndexOptions.WILDCARDS));\n    if(opt.is(FZ) && opt.is(WC)) throw BXFT_MATCH.get(info, this);\n\n    final FTOpt tmp = qc.ftOpt();\n    qc.ftOpt(opt);\n    final FTExpr fte = new FTWords(info, data, terms, mode).compile(qc, null);\n    qc.ftOpt(tmp);\n    return new FTIndexAccess(info, options(fte, opts), ic).iter(qc);\n  }","id":39730,"modified_method":"@Override\n  public Iter iter(final QueryContext qc) throws QueryException {\n    final Data data = checkData(qc);\n    final Value terms = qc.value(exprs[1]);\n    final FtIndexOptions opts = toOptions(2, Q_OPTIONS, new FtIndexOptions(), qc);\n\n    final IndexContext ic = new IndexContext(data, false);\n    if(!data.meta.ftxtindex) throw BXDB_INDEX_X.get(info, data.meta.name,\n        IndexType.FULLTEXT.toString().toLowerCase(Locale.ENGLISH));\n\n    final FTOpt opt = new FTOpt().copy(data.meta);\n    final FTMode mode = opts.get(FtIndexOptions.MODE);\n    opt.set(FZ, opts.get(FtIndexOptions.FUZZY));\n    opt.set(WC, opts.get(FtIndexOptions.WILDCARDS));\n    if(opt.is(FZ) && opt.is(WC)) throw BXFT_MATCH.get(info, this);\n\n    final FTOpt tmp = qc.ftOpt();\n    qc.ftOpt(opt);\n    final FTExpr fte = new FTWords(info, data, terms, mode).compile(qc, null);\n    qc.ftOpt(tmp);\n    return new FTIndexAccess(info, options(fte, opts), ic).iter(qc);\n  }","commit_id":"328d1cf52f1ed6563cd9a9be3f15711ca278f52c","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public Iter iter(final QueryContext qc) throws QueryException {\n    final FTOpt opt = new FTOpt().copy(qc.ftOpt());\n    final FTLexer ftl = new FTLexer(opt).init(toToken(exprs[0], qc));\n    return new Iter() {\n      @Override\n      public Str next() {\n        return ftl.hasNext() ? Str.get(ftl.nextToken()) : null;\n      }\n    };\n  }","id":39731,"modified_method":"@Override\n  public Iter iter(final QueryContext qc) throws QueryException {\n    final byte[] token = toToken(exprs[0], qc);\n    final FtTokenizeOptions opts = toOptions(1, Q_OPTIONS, new FtTokenizeOptions(), qc);\n\n    final FTOpt opt = new FTOpt().copy(qc.ftOpt());\n    final FTDiacritics dc = opts.get(FtTokenizeOptions.DIACRITICS);\n    if(dc != null) opt.set(DC, dc == FTDiacritics.SENSITIVE);\n    final Boolean st = opts.get(FtTokenizeOptions.STEMMING);\n    if(st != null) opt.set(ST, st);\n    final String ln = opts.get(FtTokenizeOptions.LANGUAGE);\n    if(ln != null) opt.ln = Language.get(ln);\n    final FTCase cs = opts.get(FtTokenizeOptions.CASE);\n    if(cs != null) opt.cs = cs;\n\n    final FTLexer ftl = new FTLexer(opt).init(token);\n    return new Iter() {\n      @Override\n      public Str next() {\n        return ftl.hasNext() ? Str.get(ftl.nextToken()) : null;\n      }\n    };\n  }","commit_id":"328d1cf52f1ed6563cd9a9be3f15711ca278f52c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/** Initializes various options. */\n  @AfterClass\n  public static void init() {\n    // instantiate options at least once\n    new UCAOptions();\n    new CsvOptions();\n    new CsvParserOptions();\n    new HtmlOptions();\n    new JsonOptions();\n    new JsonParserOptions();\n    new JsonSerialOptions();\n    new TextOptions();\n    new ArchOptions();\n    new FtIndexOptions();\n    new FtOptions();\n    new XQueryOptions();\n    new BaseXCollationOptions();\n    new FTDistanceOptions();\n    new FTScopeOptions();\n    new FTWindowOptions();\n  }","id":39732,"modified_method":"/** Initializes various options. */\n  @AfterClass\n  public static void init() {\n    // instantiate options at least once\n    new UCAOptions();\n    new CsvOptions();\n    new CsvParserOptions();\n    new HtmlOptions();\n    new JsonOptions();\n    new JsonParserOptions();\n    new JsonSerialOptions();\n    new TextOptions();\n    new ArchOptions();\n    new FtIndexOptions();\n    new FtContainsOptions();\n    new XQueryOptions();\n    new BaseXCollationOptions();\n    new FTDistanceOptions();\n    new FTScopeOptions();\n    new FTWindowOptions();\n  }","commit_id":"328d1cf52f1ed6563cd9a9be3f15711ca278f52c","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public Str item(final QueryContext qc, final InputInfo ii) throws QueryException {\n    final TokenBuilder tb = new TokenBuilder().add(toToken(exprs[0], qc));\n    final Map map = toMap(exprs[1], qc);\n    int c = 0;\n    for(final Item key : map.keys()) {\n      final byte[] name = key.string(ii);\n      for(final Item value : map.get(key, info)) {\n        tb.add(c++ == 0 ? '?' : '&');\n        tb.add(Token.uri(name, false)).add('=').add(Token.uri(value.string(ii), false));\n      }\n    }\n    return Str.get(tb.finish());\n  }","id":39733,"modified_method":"@Override\n  public Str item(final QueryContext qc, final InputInfo ii) throws QueryException {\n    return Str.get(createUrl(toToken(exprs[0], qc), toMap(exprs[1], qc)));\n  }","commit_id":"1aa0ad8abc3d3b0b73b06e47616a115ec8e6fc19","url":"https://github.com/BaseXdb/basex"},{"original_method":"/** Test method. */\n  @Test\n  public void redirect() {\n    query(_WEB_REDIRECT.args(\"a/b\") + \"/*:response/*:header/@value = 'a/b'\", \"true\");\n    query(_WEB_REDIRECT.args(\"a/b\") + \"/*:response/*:header/@name = 'location'\", \"true\");\n    query(_WEB_REDIRECT.args(\"a/b\") + \"/*:response/@status = 302\", \"true\");\n  }","id":39734,"modified_method":"/** Test method. */\n  @Test\n  public void redirect() {\n    query(_WEB_REDIRECT.args(\"a/b\") + \"/*:response/*:header/@value = 'a/b'\", \"true\");\n    query(_WEB_REDIRECT.args(\"a/b\") + \"/*:response/*:header/@name = 'location'\", \"true\");\n    query(_WEB_REDIRECT.args(\"a/b\") + \"/*:response/@status = 302\", \"true\");\n\n    query(_WEB_REDIRECT.args(\"a/b\", \" map { 'a':'b' }\") +\n        \"/*:response/*:header[@name = 'location']/@value/string()\", \"a/b?a=b\");\n  }","commit_id":"1aa0ad8abc3d3b0b73b06e47616a115ec8e6fc19","url":"https://github.com/BaseXdb/basex"},{"original_method":"/** Test method. */\n  @Test\n  public void responseHeader() {\n    query(_WEB_RESPONSE_HEADER.args(\"file.unknown\") +\n        \"/*:response/*:header/@name/string()\", \"Cache-Control\");\n    query(_WEB_RESPONSE_HEADER.args(\"file.unknown\") +\n        \"/*:serialization-parameters/*:method/@value/string()\", \"raw\");\n    query(_WEB_RESPONSE_HEADER.args(\"file.unknown\") +\n        \"/*:serialization-parameters/*:media-type/@value/string()\", \"application/octet-stream\");\n  }","id":39735,"modified_method":"/** Test method. */\n  @Test\n  public void responseHeader() {\n    query(_WEB_RESPONSE_HEADER.args() +\n        \"/*:response/*:header[@name = 'Cache-Control']/@value/string()\", \"max-age=3600,public\");\n    query(_WEB_RESPONSE_HEADER.args() +\n        \"/*:serialization-parameters/*:method/@value/string()\", \"raw\");\n    query(_WEB_RESPONSE_HEADER.args() +\n        \"/*:serialization-parameters/*:media-type/@value/string()\", \"application/octet-stream\");\n\n    // overwrite header\n    query(_WEB_RESPONSE_HEADER.args(\" map { 'media-type': 'X' }\") +\n        \"/*:serialization-parameters/*:media-type/@value/string()\", \"X\");\n    // header is not generated if value is empty\n    query(_WEB_RESPONSE_HEADER.args(\" map { 'media-type': '' }\") +\n        \"/*:serialization-parameters/*:media-type\", \"\");\n\n    // overwrite header\n    query(_WEB_RESPONSE_HEADER.args(\" map { }\", \" map { 'Cache-Control': 'X' }\") +\n        \"/*:response/*:header[@name = 'Cache-Control']/@value/string()\", \"X\");\n    // header is not generated if value is empty\n    query(_WEB_RESPONSE_HEADER.args(\" map { }\", \" map { 'Cache-Control': '' }\") +\n        \"/*:response/*:header[@name = 'Cache-Control']\", \"\");\n    // HTTP response is not generated if no value are specified\n    query(_WEB_RESPONSE_HEADER.args(\" map { }\", \" map { 'Cache-Control': '' }\") +\n        \"/*:response/*:header\", \"\");\n  }","commit_id":"1aa0ad8abc3d3b0b73b06e47616a115ec8e6fc19","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public FElem item(final QueryContext qc, final InputInfo ii) throws QueryException {\n    final FElem hhead = new FElem(QNm.get(HTTP_PREFIX, \"header\", HTTP_URI)).\n        add(\"name\", \"location\").add(\"value\", toToken(exprs[0], qc));\n    final FElem hresp = new FElem(QNm.get(HTTP_PREFIX, \"response\", HTTP_URI)).\n        add(\"status\", \"302\").add(hhead);\n    return new FElem(QNm.get(REST_PREFIX, \"response\", REST_URI)).add(hresp);\n  }","id":39736,"modified_method":"@Override\n  public FElem item(final QueryContext qc, final InputInfo ii) throws QueryException {\n    final byte[] url = createUrl(toToken(exprs[0], qc),\n        exprs.length < 2 ? Map.EMPTY : toMap(exprs[1], qc));\n\n    final FElem hhead = new FElem(QNm.get(HTTP_PREFIX, \"header\", HTTP_URI)).\n        add(\"name\", \"location\").add(\"value\", url);\n    final FElem hresp = new FElem(QNm.get(HTTP_PREFIX, \"response\", HTTP_URI)).\n        add(\"status\", \"302\").add(hhead);\n    return new FElem(QNm.get(REST_PREFIX, \"response\", REST_URI)).add(hresp);\n  }","commit_id":"1aa0ad8abc3d3b0b73b06e47616a115ec8e6fc19","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public Value value(final QueryContext qc) throws QueryException {\n    final byte[] path = toToken(exprs[0], qc);\n    final FElem hhead = new FElem(QNm.get(HTTP_PREFIX, \"header\", HTTP_URI)).\n        add(\"name\", \"Cache-Control\").add(\"value\", \"max-age=3600,public\");\n    final FElem hresp = new FElem(QNm.get(HTTP_PREFIX, \"response\", HTTP_URI)).\n        add(\"status\", \"302\").add(hhead);\n\n    final FElem omedi = new FElem(QNm.get(OUTPUT_PREFIX, SerializerOptions.MEDIA_TYPE.name(),\n        OUTPUT_URI)).add(\"value\", MediaType.get(Token.string(path)).toString());\n    final FElem ometh = new FElem(QNm.get(OUTPUT_PREFIX, SerializerOptions.METHOD.name(),\n        OUTPUT_URI)).add(\"value\", \"raw\");\n    final FElem oseri = new FElem(QNm.get(OUTPUT_PREFIX, SERIALIZATION_PARAMETERS, OUTPUT_URI)).\n        add(omedi).add(ometh);\n\n    return new FElem(QNm.get(REST_PREFIX, \"response\", REST_URI)).add(hresp).add(oseri);\n  }","id":39737,"modified_method":"@Override\n  public Value value(final QueryContext qc) throws QueryException {\n    final HashMap<String, String> output = toOptions(0, null, new Options(), qc).free();\n    final HashMap<String, String> http = toOptions(1, null, new Options(), qc).free();\n\n    // HTTP response\n    if(!http.containsKey(CACHE_CONTROL)) http.put(CACHE_CONTROL, CACHE_CONTROL_DEFAULT);\n\n    final FElem hresp = new FElem(QNm.get(HTTP_PREFIX, \"response\", HTTP_URI));\n    for(final Entry<String, String> entry : http.entrySet()) {\n      final String name = entry.getKey(), value = entry.getValue();\n      if(!value.isEmpty()) hresp.add(new FElem(QNm.get(HTTP_PREFIX, \"header\", HTTP_URI)).\n          add(\"name\", name).add(\"value\", value));\n    }\n\n    // Serialization parameters\n    if(!output.containsKey(SerializerOptions.MEDIA_TYPE.name())) output.put(\n        SerializerOptions.MEDIA_TYPE.name(), MediaType.APPLICATION_OCTET_STREAM.toString());\n    if(!output.containsKey(SerializerOptions.METHOD.name())) output.put(\n        SerializerOptions.METHOD.name(), SerialMethod.RAW.toString());\n\n    final SerializerOptions so = SerializerOptions.get(true);\n    final FElem oseri = new FElem(QNm.get(OUTPUT_PREFIX, SERIALIZATION_PARAMETERS, OUTPUT_URI));\n    for(final Entry<String, String> entry : output.entrySet()) {\n      final String name = entry.getKey(), value = entry.getValue();\n      if(so.option(name) == null) throw INVALIDOPTION_X.get(info, name);\n      if(!value.isEmpty()) oseri.add(new FElem(QNm.get(OUTPUT_PREFIX, name, OUTPUT_URI)).\n          add(\"value\", value));\n    }\n\n    // REST response\n    final FElem resp = new FElem(QNm.get(REST_PREFIX, \"response\", REST_URI));\n    if(hresp.children().next() != null) resp.add(hresp);\n    if(oseri.children().next() != null) resp.add(oseri);\n    return resp;\n  }","commit_id":"1aa0ad8abc3d3b0b73b06e47616a115ec8e6fc19","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public Item item(final QueryContext qc, final InputInfo ii) throws QueryException {\n    final byte[] sep = exprs.length == 2 ? toToken(exprs[1], qc) : EMPTY;\n    final TokenBuilder tb = new TokenBuilder();\n    final Iter iter = exprs[0].atomIter(qc, info);\n    int c = 0;\n    for(Item it; (it = iter.next()) != null;) {\n      if(c++ != 0) tb.add(sep);\n      tb.add(toToken(it));\n    }\n    return Str.get(tb.finish());\n  }","id":39738,"modified_method":"@Override\n  public Str item(final QueryContext qc, final InputInfo ii) throws QueryException {\n    final Iter iter = exprs[0].atomIter(qc, info);\n    final byte[] token = exprs.length == 2 ? toToken(exprs[1], qc) : EMPTY;\n    // no results: empty string\n    Item it = iter.next();\n    if(it == null) return Str.ZERO;\n    // single result\n    if((it = iter.next()) == null) return Str.get(toToken(it));\n    // join multiple strings\n    final TokenBuilder tb = new TokenBuilder(toToken(it));\n    do tb.add(token).add(toToken(it)); while((it = iter.next()) != null);\n    return Str.get(tb.finish());\n  }","commit_id":"01111e2992fbb0113e29d988e9310e967c3f3e2e","url":"https://github.com/BaseXdb/basex"},{"original_method":"public static int getSqlType( ValueMetaInterface valueMeta ) {\n    switch ( valueMeta.getType() ) {\n      case ValueMetaInterface.TYPE_STRING:\n        return java.sql.Types.VARCHAR;\n      case ValueMetaInterface.TYPE_DATE:\n        return java.sql.Types.TIMESTAMP;\n      case ValueMetaInterface.TYPE_INTEGER:\n        return java.sql.Types.BIGINT; // TODO: for metadata we don't want a long?\n      case ValueMetaInterface.TYPE_BIGNUMBER:\n        return java.sql.Types.DECIMAL;\n      case ValueMetaInterface.TYPE_NUMBER:\n        return java.sql.Types.DOUBLE;\n      case ValueMetaInterface.TYPE_BOOLEAN:\n        return java.sql.Types.BOOLEAN;\n      case ValueMetaInterface.TYPE_BINARY:\n        return java.sql.Types.BLOB;\n      default:\n        break;\n    }\n    return java.sql.Types.VARCHAR;\n  }","id":39739,"modified_method":"public static int getSqlType( ValueMetaInterface valueMeta ) {\n    switch ( valueMeta.getType() ) {\n      case ValueMetaInterface.TYPE_STRING:\n        return java.sql.Types.VARCHAR;\n      case ValueMetaInterface.TYPE_DATE:\n        return java.sql.Types.TIMESTAMP;\n      case ValueMetaInterface.TYPE_INTEGER:\n        return java.sql.Types.BIGINT; // TODO: for metadata we don't want a long?\n      case ValueMetaInterface.TYPE_BIGNUMBER:\n        return java.sql.Types.DECIMAL;\n      case ValueMetaInterface.TYPE_NUMBER:\n        return java.sql.Types.DOUBLE;\n      case ValueMetaInterface.TYPE_BOOLEAN:\n        return java.sql.Types.BOOLEAN;\n      case ValueMetaInterface.TYPE_BINARY:\n        return java.sql.Types.BLOB;\n      case ValueMetaInterface.TYPE_NONE:\n        return java.sql.Types.OTHER;\n      default:\n        break;\n    }\n    return java.sql.Types.VARCHAR;\n  }","commit_id":"04048942f07fc24fe24efcc19cc45a2ff9f9d409","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public static ValueMetaInterface getValueMeta( String valueName, int sqlType ) throws SQLException {\n    switch ( sqlType ) {\n      case java.sql.Types.BIGINT:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_INTEGER );\n      case java.sql.Types.INTEGER:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_INTEGER );\n      case java.sql.Types.SMALLINT:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_INTEGER );\n\n      case java.sql.Types.CHAR:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_STRING );\n      case java.sql.Types.VARCHAR:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_STRING );\n      case java.sql.Types.CLOB:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_STRING );\n\n      case java.sql.Types.DATE:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_DATE );\n      case java.sql.Types.TIMESTAMP:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_DATE );\n      case java.sql.Types.TIME:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_DATE );\n\n      case java.sql.Types.DECIMAL:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_BIGNUMBER );\n\n      case java.sql.Types.DOUBLE:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_NUMBER );\n      case java.sql.Types.FLOAT:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_NUMBER );\n\n      case java.sql.Types.BOOLEAN:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_BOOLEAN );\n      case java.sql.Types.BIT:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_BOOLEAN );\n\n      case java.sql.Types.BINARY:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_BINARY );\n      case java.sql.Types.BLOB:\n        return new ValueMeta( valueName, ValueMetaInterface.TYPE_BINARY );\n\n      default:\n        throw new SQLException( \"Don't know how to handle SQL Type: \" + sqlType + \", with name: \" + valueName );\n    }\n  }","id":39740,"modified_method":"public static ValueMetaInterface getValueMeta( String valueName, int sqlType ) throws SQLException {\n    switch ( sqlType ) {\n      case java.sql.Types.OTHER:\n      case java.sql.Types.NULL:\n        return new ValueMetaNone( valueName );\n\n      case java.sql.Types.BIGINT:\n      case java.sql.Types.INTEGER:\n      case java.sql.Types.SMALLINT:\n        return new ValueMetaInteger( valueName );\n\n      case java.sql.Types.CHAR:\n      case java.sql.Types.VARCHAR:\n      case java.sql.Types.CLOB:\n        return new ValueMetaString( valueName );\n\n      case java.sql.Types.DATE:\n      case java.sql.Types.TIMESTAMP:\n      case java.sql.Types.TIME:\n        return new ValueMetaDate( valueName );\n\n      case java.sql.Types.DECIMAL:\n        return new ValueMetaBigNumber( valueName );\n\n      case java.sql.Types.DOUBLE:\n      case java.sql.Types.FLOAT:\n        return new ValueMetaNumber( valueName );\n\n      case java.sql.Types.BOOLEAN:\n      case java.sql.Types.BIT:\n        return new ValueMetaBoolean( valueName );\n\n      case java.sql.Types.BINARY:\n      case java.sql.Types.BLOB:\n        return new ValueMetaBinary( valueName );\n\n      default:\n        throw new SQLException( \"Don't know how to handle SQL Type: \" + sqlType + \", with name: \" + valueName );\n    }\n  }","commit_id":"04048942f07fc24fe24efcc19cc45a2ff9f9d409","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public static String getSqlTypeDesc( ValueMetaInterface valueMeta ) {\n    switch ( valueMeta.getType() ) {\n      case ValueMetaInterface.TYPE_STRING:\n        return \"VARCHAR\";\n      case ValueMetaInterface.TYPE_DATE:\n        return \"TIMESTAMP\";\n      case ValueMetaInterface.TYPE_INTEGER:\n        return \"BIGINT\"; // TODO: for metadata we don't want a long?\n      case ValueMetaInterface.TYPE_NUMBER:\n        return \"DOUBLE\";\n      case ValueMetaInterface.TYPE_BIGNUMBER:\n        return \"DECIMAL\";\n      case ValueMetaInterface.TYPE_BOOLEAN:\n        return \"BOOLEAN\";\n      case ValueMetaInterface.TYPE_BINARY:\n        return \"BLOB\";\n      default:\n        break;\n    }\n    return null;\n  }","id":39741,"modified_method":"public static String getSqlTypeDesc( ValueMetaInterface valueMeta ) {\n    switch ( valueMeta.getType() ) {\n      case ValueMetaInterface.TYPE_STRING:\n        return \"VARCHAR\";\n      case ValueMetaInterface.TYPE_DATE:\n        return \"TIMESTAMP\";\n      case ValueMetaInterface.TYPE_INTEGER:\n        return \"BIGINT\"; // TODO: for metadata we don't want a long?\n      case ValueMetaInterface.TYPE_NUMBER:\n        return \"DOUBLE\";\n      case ValueMetaInterface.TYPE_BIGNUMBER:\n        return \"DECIMAL\";\n      case ValueMetaInterface.TYPE_BOOLEAN:\n        return \"BOOLEAN\";\n      case ValueMetaInterface.TYPE_BINARY:\n        return \"BLOB\";\n      case ValueMetaInterface.TYPE_NONE:\n        return \"OTHER\";\n      default:\n        break;\n    }\n    return null;\n  }","commit_id":"04048942f07fc24fe24efcc19cc45a2ff9f9d409","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@SuppressWarnings( \"deprecation\" )\n  @Test\n  public void testAttemptIntegerValueExtraction() {\n    ValueMetaAndData result = ThinUtil.attemptIntegerValueExtraction( \"12345\" );\n    assertNotNull( result );\n    assertEquals( ValueMetaInterface.TYPE_INTEGER, result.getValueMeta().getType() );\n    assertEquals( Long.valueOf( 12345 ), result.getValueData() );\n\n    //assertNull( ThinUtil.attemptIntegerValueExtraction( null ) );\n    assertNull( ThinUtil.attemptIntegerValueExtraction( \"\" ) );\n    assertNull( ThinUtil.attemptIntegerValueExtraction( \"123.45\" ) );\n  }","id":39742,"modified_method":"@SuppressWarnings( \"deprecation\" )\n  @Test\n  public void testAttemptIntegerValueExtraction() {\n    ValueMetaAndData result = ThinUtil.attemptIntegerValueExtraction( \"12345\" );\n    assertNotNull( result );\n    assertEquals( ValueMetaInterface.TYPE_INTEGER, result.getValueMeta().getType() );\n    assertEquals( 12345L, result.getValueData() );\n\n    //assertNull( ThinUtil.attemptIntegerValueExtraction( null ) );\n    assertNull( ThinUtil.attemptIntegerValueExtraction( \"\" ) );\n    assertNull( ThinUtil.attemptIntegerValueExtraction( \"123.45\" ) );\n  }","commit_id":"04048942f07fc24fe24efcc19cc45a2ff9f9d409","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@SuppressWarnings( \"deprecation\" )\n  @Test\n  public void testGetValueMeta() throws SQLException {\n    ValueMetaInterface testValue;\n    String expectedName = \"testName\";\n    testValue = ThinUtil.getValueMeta( expectedName, Types.BIGINT );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_INTEGER, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.INTEGER );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_INTEGER, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.SMALLINT );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_INTEGER, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.CHAR );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_STRING, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.VARCHAR );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_STRING, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.CLOB );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_STRING, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.DATE );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_DATE, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.TIMESTAMP );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_DATE, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.TIME );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_DATE, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.DECIMAL );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_BIGNUMBER, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.DOUBLE );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_NUMBER, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.FLOAT );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_NUMBER, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.BOOLEAN );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_BOOLEAN, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.BIT );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_BOOLEAN, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.BINARY );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_BINARY, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.BLOB );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_BINARY, testValue.getType() );\n\n    try {\n      testValue = ThinUtil.getValueMeta( expectedName, Integer.MIN_VALUE );\n      fail();\n    } catch ( SQLException expected ) {\n      // Do nothing, there is no SQL Type for Integer.MIN_VALUE, an exception was thrown as expected.\n    }\n  }","id":39743,"modified_method":"@SuppressWarnings( \"deprecation\" )\n  @Test\n  public void testGetValueMeta() throws SQLException {\n    ValueMetaInterface testValue;\n    String expectedName = \"testName\";\n    testValue = ThinUtil.getValueMeta( expectedName, Types.BIGINT );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_INTEGER, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.INTEGER );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_INTEGER, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.SMALLINT );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_INTEGER, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.CHAR );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_STRING, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.VARCHAR );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_STRING, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.CLOB );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_STRING, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.DATE );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_DATE, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.TIMESTAMP );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_DATE, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.TIME );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_DATE, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.DECIMAL );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_BIGNUMBER, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.DOUBLE );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_NUMBER, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.FLOAT );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_NUMBER, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.BOOLEAN );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_BOOLEAN, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.BIT );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_BOOLEAN, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.BINARY );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_BINARY, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.BLOB );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_BINARY, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.OTHER );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_NONE, testValue.getType() );\n\n    testValue = ThinUtil.getValueMeta( expectedName, Types.NULL );\n    assertEquals( expectedName, testValue.getName() );\n    assertEquals( ValueMetaInterface.TYPE_NONE, testValue.getType() );\n\n    try {\n      ThinUtil.getValueMeta( expectedName, Integer.MIN_VALUE );\n      fail();\n    } catch ( SQLException expected ) {\n      // Do nothing, there is no SQL Type for Integer.MIN_VALUE, an exception was thrown as expected.\n    }\n  }","commit_id":"04048942f07fc24fe24efcc19cc45a2ff9f9d409","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private Object[] splitField(Object[] r) throws KettleValueException\n\t{\n\t\tif (first)\n\t\t{\r\n\t\t\tfirst=false;\n\t\t\t// get the RowMeta\n\t\t\tdata.previousMeta = getInputRowMeta().clone();\n\t\t\t\n\t\t\t// search field\n\t\t\tdata.fieldnr=data.previousMeta.indexOfValue(meta.getSplitField());\n\t\t\tif (data.fieldnr<0)\n\t\t\t{\n\t\t\t\tthrow new KettleValueException(Messages.getString(\"FieldSplitter.Log.CouldNotFindFieldToSplit\",meta.getSplitField())); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t}\n\n\t\t\t// only String type allowed\n\t\t\tif (!data.previousMeta.getValueMeta(data.fieldnr).isString())\n\t\t\t{\n\t\t\t\tthrow new KettleValueException((Messages.getString(\"FieldSplitter.Log.SplitFieldNotValid\",meta.getSplitField()))); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t}\n\n\t\t\t// prepare the outputMeta\n\t\t\tdata.outputMeta= getInputRowMeta().clone();\n\t\t\tmeta.getFields(data.outputMeta, getStepname(), null, null, this);\r\n\t\t}\n\t\t\n\t\tString v=data.previousMeta.getString(r, data.fieldnr);\n\t\t\r\n\t\t// reserve room\n\t\tObject[] outputRow = RowDataUtil.allocateRowData(data.outputMeta.size());\r\n\t\t\r\n\t\tint nrExtraFields = meta.getFieldID().length - 1;\r\n\t\t\r\n\t\tfor (int i=0;i<data.fieldnr;i++) outputRow[i] = r[i];\r\n\t\tfor (int i=data.fieldnr+1;i<data.previousMeta.size();i++) outputRow[i+nrExtraFields] = r[i];\r\n\r\n\t\t// OK, now we have room in the middle to place the fields...\r\n\t\t//\r\n\t\t\n\t\t// Named values info.id[0] not filled in!\n\t\tboolean use_ids = meta.getFieldID().length>0 && meta.getFieldID()[0]!=null && meta.getFieldID()[0].length()>0;\n\t\t\n\t\tObject value=null;\n\t\tif (use_ids)\n\t\t{\n\t\t\tif (log.isDebug()) logDebug(Messages.getString(\"FieldSplitter.Log.UsingIds\")); //$NON-NLS-1$\r\n\t\t\t\n\t\t\t// pol all split fields\n\t\t\t// Loop over the specified field list\n\t\t\t// If we spot the corresponding id[] entry in pol, add the value\n\t\t\t//\n\t\t\tString pol[] = new String[meta.getField().length];\n\t\t\tint prev=0;\n\t\t\tint i=0;\n\t\t\twhile(v!=null && prev<v.length() && i<pol.length)\n\t\t\t{\n\t\t\t\tpol[i]=polNext(v, meta.getDelimiter(), prev);\n\t\t\t\tif (log.isDebug()) logDebug(Messages.getString(\"FieldSplitter.Log.SplitFieldsInfo\",pol[i],String.valueOf(prev))); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\tprev+=pol[i].length()+meta.getDelimiter().length();\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\t// We have to add info.field.length variables!\n\t\t\tfor (i=0;i<meta.getField().length;i++)\n\t\t\t{\n\t\t\t\t// We have a field, search the corresponding pol[] entry.\n\t\t\t\tString split=null;\n\n\t\t\t\tfor (int p=0; p<pol.length && split==null; p++) \n\t\t\t\t{\n\t\t\t\t\t// With which line does pol[p] correspond?\n\t\t\t\t\tif (pol[p]!=null && pol[p].indexOf(meta.getFieldID()[i])>=0) split=pol[p];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Optionally remove the indicator\t\t\t\t\n\t\t\t\tif (split!=null && meta.removeID()[i])\n\t\t\t\t{\n\t\t\t\t\tStringBuffer sb = new StringBuffer(split);\n\t\t\t\t\tint idx = sb.indexOf(meta.getFieldID()[i]);\n\t\t\t\t\tsb.delete(idx, idx+meta.getFieldID()[i].length());\n\t\t\t\t\tsplit=sb.toString();\n\t\t\t\t}\n\n\t\t\t\tif (split==null) split=\"\"; //$NON-NLS-1$\n\t\t\t\tif (log.isDebug()) logDebug(Messages.getString(\"FieldSplitter.Log.SplitInfo\")+split); //$NON-NLS-1$\n\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tvalue = data.outputMeta.getValueMeta(data.fieldnr+i).convertDataFromString\n\t\t\t\t\t(\n\t\t\t\t\t\tsplit,\n\t\t\t\t\t\tdata.previousMeta.getValueMeta(data.fieldnr),\n\t\t\t\t\t\tmeta.getFieldDefault()[i],\n\t\t\t\t\t\t\"\", // --> The default String value in case a field is empty. //$NON-NLS-1$\n\t\t\t\t\t\tValueMetaInterface.TRIM_TYPE_BOTH\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcatch(Exception e)\n\t\t\t\t{\n\t\t\t\t\tthrow new KettleValueException(Messages.getString(\"FieldSplitter.Log.ErrorConvertingSplitValue\",split,meta.getSplitField()+\"]!\"), e); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\t\t\t}\n\t\t\t\toutputRow[data.fieldnr+i]=value;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (log.isDebug()) logDebug(Messages.getString(\"FieldSplitter.Log.UsingPositionOfValue\")); //$NON-NLS-1$\n\t\t\tint prev=0;\n\t\t\tfor (int i=0;i<meta.getField().length;i++)\n\t\t\t{\n\t\t\t\tString pol = polNext(v, meta.getDelimiter(), prev);\n\t\t\t\tif (log.isDebug()) logDebug(Messages.getString(\"FieldSplitter.Log.SplitFieldsInfo\",pol,String.valueOf(prev))); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\tprev+=(pol==null?0:pol.length()) + meta.getDelimiter().length();\n\t\t\t\t\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tvalue = data.outputMeta.getValueMeta(data.fieldnr+i).convertDataFromString\n\t\t\t\t\t(\n\t\t\t\t\t\tpol,\n\t\t\t\t\t\tdata.previousMeta.getValueMeta(data.fieldnr),\n\t\t\t\t\t\tmeta.getFieldDefault()[i],\n\t\t\t\t\t\t\"\", // --> The default String value in case a field is empty. //$NON-NLS-1$\n\t\t\t\t\t\tValueMetaInterface.TRIM_TYPE_BOTH\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcatch(Exception e)\n\t\t\t\t{\n\t\t\t\t\tthrow new KettleValueException(Messages.getString(\"FieldSplitter.Log.ErrorConvertingSplitValue\",pol,meta.getSplitField()+\"]!\"), e); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\t\t\t}\n\t\t\t\toutputRow[data.fieldnr+i]=value;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn outputRow;\n\t}","id":39744,"modified_method":"private Object[] splitField(Object[] r) throws KettleValueException\n\t{\n\t\tif (first)\n\t\t{\r\n\t\t\tfirst=false;\n\t\t\t// get the RowMeta\n\t\t\tdata.previousMeta = getInputRowMeta().clone();\n\t\t\t\n\t\t\t// search field\n\t\t\tdata.fieldnr=data.previousMeta.indexOfValue(meta.getSplitField());\n\t\t\tif (data.fieldnr<0)\n\t\t\t{\n\t\t\t\tthrow new KettleValueException(Messages.getString(\"FieldSplitter.Log.CouldNotFindFieldToSplit\",meta.getSplitField())); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t}\n\n\t\t\t// only String type allowed\n\t\t\tif (!data.previousMeta.getValueMeta(data.fieldnr).isString())\n\t\t\t{\n\t\t\t\tthrow new KettleValueException((Messages.getString(\"FieldSplitter.Log.SplitFieldNotValid\",meta.getSplitField()))); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t}\n\n\t\t\t// prepare the outputMeta\r\n\t\t\t//\n\t\t\tdata.outputMeta= getInputRowMeta().clone();\n\t\t\tmeta.getFields(data.outputMeta, getStepname(), null, null, this);\r\n\t\t\t\r\n\t\t\t// Now create objects to do string to data type conversion...\r\n\t\t\t//\r\n\t\t\tdata.conversionMeta = data.outputMeta.clone();\r\n\t\t\tfor (ValueMetaInterface valueMeta : data.conversionMeta.getValueMetaList()) {\r\n\t\t\t\tvalueMeta.setType(ValueMetaInterface.TYPE_STRING);\r\n\t\t\t}\r\n\t\t}\n\t\t\n\t\tString v=data.previousMeta.getString(r, data.fieldnr);\n\t\t\r\n\t\t// reserve room\n\t\tObject[] outputRow = RowDataUtil.allocateRowData(data.outputMeta.size());\r\n\t\t\r\n\t\tint nrExtraFields = meta.getFieldID().length - 1;\r\n\t\t\r\n\t\tfor (int i=0;i<data.fieldnr;i++) outputRow[i] = r[i];\r\n\t\tfor (int i=data.fieldnr+1;i<data.previousMeta.size();i++) outputRow[i+nrExtraFields] = r[i];\r\n\r\n\t\t// OK, now we have room in the middle to place the fields...\r\n\t\t//\r\n\t\t\n\t\t// Named values info.id[0] not filled in!\n\t\tboolean use_ids = meta.getFieldID().length>0 && meta.getFieldID()[0]!=null && meta.getFieldID()[0].length()>0;\n\t\t\n\t\tObject value=null;\n\t\tif (use_ids)\n\t\t{\n\t\t\tif (log.isDebug()) logDebug(Messages.getString(\"FieldSplitter.Log.UsingIds\")); //$NON-NLS-1$\r\n\t\t\t\n\t\t\t// pol all split fields\n\t\t\t// Loop over the specified field list\n\t\t\t// If we spot the corresponding id[] entry in pol, add the value\n\t\t\t//\n\t\t\tString pol[] = new String[meta.getField().length];\n\t\t\tint prev=0;\n\t\t\tint i=0;\n\t\t\twhile(v!=null && prev<v.length() && i<pol.length)\n\t\t\t{\n\t\t\t\tpol[i]=polNext(v, meta.getDelimiter(), prev);\n\t\t\t\tif (log.isDebug()) logDebug(Messages.getString(\"FieldSplitter.Log.SplitFieldsInfo\",pol[i],String.valueOf(prev))); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\tprev+=pol[i].length()+meta.getDelimiter().length();\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\t// We have to add info.field.length variables!\n\t\t\tfor (i=0;i<meta.getField().length;i++)\n\t\t\t{\n\t\t\t\t// We have a field, search the corresponding pol[] entry.\n\t\t\t\tString split=null;\n\n\t\t\t\tfor (int p=0; p<pol.length && split==null; p++) \n\t\t\t\t{\n\t\t\t\t\t// With which line does pol[p] correspond?\n\t\t\t\t\tif (pol[p]!=null && pol[p].indexOf(meta.getFieldID()[i])>=0) split=pol[p];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Optionally remove the indicator\t\t\t\t\n\t\t\t\tif (split!=null && meta.removeID()[i])\n\t\t\t\t{\n\t\t\t\t\tStringBuffer sb = new StringBuffer(split);\n\t\t\t\t\tint idx = sb.indexOf(meta.getFieldID()[i]);\n\t\t\t\t\tsb.delete(idx, idx+meta.getFieldID()[i].length());\n\t\t\t\t\tsplit=sb.toString();\n\t\t\t\t}\n\n\t\t\t\tif (split==null) split=\"\"; //$NON-NLS-1$\n\t\t\t\tif (log.isDebug()) logDebug(Messages.getString(\"FieldSplitter.Log.SplitInfo\")+split); //$NON-NLS-1$\n\n\t\t\t\ttry\n\t\t\t\t{\r\n\t\t\t\t\tValueMetaInterface valueMeta = data.outputMeta.getValueMeta(data.fieldnr+i);\r\n\t\t\t\t\tValueMetaInterface conversionValueMeta = data.conversionMeta.getValueMeta(data.fieldnr+i);\n\t\t\t\t\tvalue = valueMeta.convertDataFromString\n\t\t\t\t\t(\n\t\t\t\t\t\tsplit,\n\t\t\t\t\t\tconversionValueMeta,\n\t\t\t\t\t\tmeta.getFieldDefault()[i],\n\t\t\t\t\t\t\"\", // --> The default String value in case a field is empty. //$NON-NLS-1$\n\t\t\t\t\t\tValueMetaInterface.TRIM_TYPE_BOTH\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcatch(Exception e)\n\t\t\t\t{\n\t\t\t\t\tthrow new KettleValueException(Messages.getString(\"FieldSplitter.Log.ErrorConvertingSplitValue\",split,meta.getSplitField()+\"]!\"), e); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\t\t\t}\n\t\t\t\toutputRow[data.fieldnr+i]=value;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (log.isDebug()) logDebug(Messages.getString(\"FieldSplitter.Log.UsingPositionOfValue\")); //$NON-NLS-1$\n\t\t\tint prev=0;\n\t\t\tfor (int i=0;i<meta.getField().length;i++)\n\t\t\t{\n\t\t\t\tString pol = polNext(v, meta.getDelimiter(), prev);\n\t\t\t\tif (log.isDebug()) logDebug(Messages.getString(\"FieldSplitter.Log.SplitFieldsInfo\",pol,String.valueOf(prev))); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\tprev+=(pol==null?0:pol.length()) + meta.getDelimiter().length();\n\t\t\t\t\n\t\t\t\ttry\n\t\t\t\t{\r\n\t\t\t\t\tValueMetaInterface valueMeta = data.outputMeta.getValueMeta(data.fieldnr+i); \r\n\t\t\t\t\tValueMetaInterface conversionValueMeta = data.conversionMeta.getValueMeta(data.fieldnr+i);\r\n\t\t\t\t\tvalue = valueMeta.convertDataFromString\n\t\t\t\t\t(\n\t\t\t\t\t\tpol,\n\t\t\t\t\t\tconversionValueMeta,\n\t\t\t\t\t\tmeta.getFieldDefault()[i],\n\t\t\t\t\t\t\"\", // --> The default String value in case a field is empty. //$NON-NLS-1$\n\t\t\t\t\t\tValueMetaInterface.TRIM_TYPE_BOTH\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcatch(Exception e)\n\t\t\t\t{\n\t\t\t\t\tthrow new KettleValueException(Messages.getString(\"FieldSplitter.Log.ErrorConvertingSplitValue\",pol,meta.getSplitField()+\"]!\"), e); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\t\t\t}\n\t\t\t\toutputRow[data.fieldnr+i]=value;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn outputRow;\n\t}","commit_id":"da7a86c5a73c3ae26f13edd7510591d455a8e728","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean readLookupValues() throws KettleException\n\t{\n\t\t// data.firstrow=null;\n\t\t\t\n\t\tif (meta.getLookupFromStep()==null)\n\t\t{\n\t\t\tlogError(Messages.getString(\"StreamLookup.Log.NoLookupStepSpecified\")); //$NON-NLS-1$\n\t\t\treturn false;\n\t\t}\n\t\tif (log.isDetailed()) logDetailed(Messages.getString(\"StreamLookup.Log.ReadingFromStream\")+meta.getLookupFromStep().getName()+\"]\"); //$NON-NLS-1$ //$NON-NLS-2$\n\n        int[] keyNrs = new int[meta.getKeylookup().length];\n        int[] valueNrs = new int[meta.getValue().length];\n        boolean firstRun = true;\n        \n        // Which row set do we read from?\n        //\n        RowSet rowSet = findInputRowSet(meta.getLookupFromStep().getName());\n        Object[] rowData=getRowFrom(rowSet); // rows are originating from \"lookup_from\"\n\t\twhile (rowData!=null)\n\t\t{\n            if (log.isRowLevel()) logRowlevel(Messages.getString(\"StreamLookup.Log.ReadLookupRow\")+rowSet.getRowMeta().getString(rowData)); //$NON-NLS-1$\n\n            if (firstRun)\n            {\n                firstRun=false;\n                data.hasLookupRows=true;\n                \n                data.infoMeta = rowSet.getRowMeta().clone();\n                data.keyMeta = new RowMeta();\n                data.valueMeta = new RowMeta();\n            \n                // Look up the keys in the source rows\n                for (int i=0;i<meta.getKeylookup().length;i++)\n                {\n                    keyNrs[i] = rowSet.getRowMeta().indexOfValue(meta.getKeylookup()[i]);\n                    if (keyNrs[i]<0)\n                    {\n                        throw new KettleStepException(Messages.getString(\"StreamLookup.Exception.UnableToFindField\",meta.getKeylookup()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                    }\n                    data.keyMeta.addValueMeta( rowSet.getRowMeta().getValueMeta( keyNrs[i] ));\n                }\n            \n                // Save the data types of the keys to optionally convert input rows later on...\n                if (data.keyTypes==null)\n                {\n                    data.keyTypes=data.keyMeta.clone();\n                }\n\t\t\t\n    \t\t\tfor (int v=0;v<meta.getValue().length;v++)\n    \t\t\t{\n    \t\t\t    valueNrs[v] = rowSet.getRowMeta().indexOfValue( meta.getValue()[v] );\n                    if (valueNrs[v]<0)\n    \t\t\t\t{\n                        throw new KettleStepException(Messages.getString(\"StreamLookup.Exception.UnableToFindField\",meta.getValue()[v])); //$NON-NLS-1$ //$NON-NLS-2$\n    \t\t\t\t}\n                    data.valueMeta.addValueMeta( rowSet.getRowMeta().getValueMeta(valueNrs[v]) );\n    \t\t\t}\n            }\n            \n            Object[] keyData = new Object[keyNrs.length];\n            for (int i=0;i<keyNrs.length;i++)\n            {\r\n            \tValueMetaInterface keyMeta = data.keyMeta.getValueMeta(i);\r\n                keyData[i] = keyMeta.convertToNormalStorageType( rowData[ keyNrs[i] ] ); // Make sure only normal storage goes in\n            }\n\n            Object[] valueData = new Object[valueNrs.length];\n            for (int i=0;i<valueNrs.length;i++)\n            {\r\n            \tValueMetaInterface valueMeta = data.valueMeta.getValueMeta(i);\r\n                valueData[i] = valueMeta.convertToNormalStorageType( rowData[ valueNrs[i] ] ); // make sure only normal storage goes in\n            }\n\n            addToCache(data.keyMeta, keyData, data.valueMeta, valueData);\n\t\t\t\n\t\t\trowData=getRowFrom(rowSet);\n\t\t}\n\t\t\n\t\treturn true;\n\t}","id":39745,"modified_method":"private boolean readLookupValues() throws KettleException\n\t{\n\t\t// data.firstrow=null;\n\t\t\t\n\t\tif (meta.getLookupFromStep()==null)\n\t\t{\n\t\t\tlogError(Messages.getString(\"StreamLookup.Log.NoLookupStepSpecified\")); //$NON-NLS-1$\n\t\t\treturn false;\n\t\t}\n\t\tif (log.isDetailed()) logDetailed(Messages.getString(\"StreamLookup.Log.ReadingFromStream\")+meta.getLookupFromStep().getName()+\"]\"); //$NON-NLS-1$ //$NON-NLS-2$\n\n        int[] keyNrs = new int[meta.getKeylookup().length];\n        int[] valueNrs = new int[meta.getValue().length];\n        boolean firstRun = true;\n        \n        // Which row set do we read from?\n        //\n        RowSet rowSet = findInputRowSet(meta.getLookupFromStep().getName());\n        Object[] rowData=getRowFrom(rowSet); // rows are originating from \"lookup_from\"\n\t\twhile (rowData!=null)\n\t\t{\n            if (log.isRowLevel()) logRowlevel(Messages.getString(\"StreamLookup.Log.ReadLookupRow\")+rowSet.getRowMeta().getString(rowData)); //$NON-NLS-1$\n\n            if (firstRun)\n            {\n                firstRun=false;\n                data.hasLookupRows=true;\n                \n                data.infoMeta = rowSet.getRowMeta().clone();\n                data.keyMeta = new RowMeta();\n                data.valueMeta = new RowMeta();\n            \n                // Look up the keys in the source rows\n                for (int i=0;i<meta.getKeylookup().length;i++)\n                {\n                    keyNrs[i] = rowSet.getRowMeta().indexOfValue(meta.getKeylookup()[i]);\n                    if (keyNrs[i]<0)\n                    {\n                        throw new KettleStepException(Messages.getString(\"StreamLookup.Exception.UnableToFindField\",meta.getKeylookup()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n                    }\n                    data.keyMeta.addValueMeta( rowSet.getRowMeta().getValueMeta( keyNrs[i] ));\r\n                }\r\n                // Save the data types of the keys to optionally convert input rows later on...\n                if (data.keyTypes==null)\n                {\n                    data.keyTypes=data.keyMeta.clone();\n                }\n    \t\t\t// set the meta data for the keys also to STORAGE_TYPE_NORMAL, otherwise it will conflict later on\r\n                // for the data is is already set to STORAGE_TYPE_NORMAL in StreamLookupMeta.getFields()\r\n    \t\t\t// all values in the cache are of this storage type (see convertToNormalStorageType below)\r\n    \t\t\t// position here after keyTypes are stored (needed below for correct convertToNormalStorageType)\r\n                for (int i=0;i<keyNrs.length;i++)\r\n                {\r\n                \tdata.keyMeta.getValueMeta(i).setStorageType(ValueMetaInterface.STORAGE_TYPE_NORMAL);\r\n                }                \r\n            \t\t\t\n    \t\t\tfor (int v=0;v<meta.getValue().length;v++)\n    \t\t\t{\n    \t\t\t    valueNrs[v] = rowSet.getRowMeta().indexOfValue( meta.getValue()[v] );\n                    if (valueNrs[v]<0)\n    \t\t\t\t{\n                        throw new KettleStepException(Messages.getString(\"StreamLookup.Exception.UnableToFindField\",meta.getValue()[v])); //$NON-NLS-1$ //$NON-NLS-2$\n    \t\t\t\t}\n                    data.valueMeta.addValueMeta( rowSet.getRowMeta().getValueMeta(valueNrs[v]) );\n    \t\t\t}\r\n            }\n            \n            Object[] keyData = new Object[keyNrs.length];\n            for (int i=0;i<keyNrs.length;i++)\n            {\r\n            \tValueMetaInterface keyMeta = data.keyTypes.getValueMeta(i);\r\n                keyData[i] = keyMeta.convertToNormalStorageType( rowData[ keyNrs[i] ] ); // Make sure only normal storage goes in\r\n                keyMeta.setStorageType(ValueMetaInterface.STORAGE_TYPE_NORMAL); // now we need to change keyMeta/keyTypes also to normal\r\n            }\n\n            Object[] valueData = new Object[valueNrs.length];\n            for (int i=0;i<valueNrs.length;i++)\n            {\r\n            \tValueMetaInterface valueMeta = data.valueMeta.getValueMeta(i);\r\n                valueData[i] = valueMeta.convertToNormalStorageType( rowData[ valueNrs[i] ] ); // make sure only normal storage goes in\n            }\n\n            addToCache(data.keyMeta, keyData, data.valueMeta, valueData);\n\t\t\t\n\t\t\trowData=getRowFrom(rowSet);\n\t\t}\n\t\t\n\t\treturn true;\n\t}","commit_id":"eee813268b04bba5410b6564f6f07789f63fffc8","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private final int partition(int L, int R, byte[] swapspace) {\n        if (L >= R - 1) return -1;\n        \n        if (R - L < 20) {\n            isort(L, R, swapspace);\n            return -1;\n         }\n        \n        int p = L;\n        int q = R - 1;\n        int pivot = (p + q) / 2;\n        int oldpivot = -1;\n        byte[] compiledPivot = null;\n        if (this.rowdef.objectOrder instanceof kelondroBase64Order) {\n        \twhile (p <= q) {\n        \t\tif (oldpivot != pivot) {\n        \t\t\tcompiledPivot = compilePivot(pivot);\n        \t\t\toldpivot = pivot;\n        \t\t}\n        \t\twhile (comparePivot(compiledPivot, p) ==  1) p++; // chunkAt[p] < pivot\n        \t\twhile (comparePivot(compiledPivot, q) == -1) q--; // chunkAt[q] > pivot\n        \t\tif (p <= q) {\n        \t\t\toldpivot = pivot;\n        \t\t\tpivot = swap(p, q, pivot, swapspace);\n        \t\t\tp++;\n        \t\t\tq--;\n        \t\t}\n        \t}\n        } else {\n        \twhile (p <= q) {\n        \t\twhile (compare(pivot, p) ==  1) p++; // chunkAt[p] < pivot\n        \t\twhile (compare(pivot, q) == -1) q--; // chunkAt[q] > pivot\n        \t\tif (p <= q) {\n        \t\t\tpivot = swap(p, q, pivot, swapspace);\n        \t\t\tp++;\n        \t\t\tq--;\n        \t\t}\n        \t}\n        }\n        return p;\n    }","id":39746,"modified_method":"private final int partition(int L, int R, int S, byte[] swapspace) {\n\t\t// returns {partition-point, new-S}\n        assert (L < R - 1);\n        assert (R - L >= isortlimit);\n        \n        int p = L;\n        int q = R - 1;\n        int pivot = (L + R - 1) / 2;\n        int oldpivot = -1;\n        byte[] compiledPivot = null;\n        if (this.rowdef.objectOrder instanceof kelondroBase64Order) {\n        \twhile (p <= q) {\n        \t\t// wenn pivot < S: pivot befindet sich in sortierter Sequenz von L bis S - 1\n        \t\t// d.h. alle Werte von L bis pivot sind kleiner als das pivot\n        \t\t// zu finden ist ein minimales p <= q so dass chunk[p] >= pivot        \t\t\n        \t\tif (oldpivot != pivot) {\n        \t\t\tcompiledPivot = compilePivot(pivot);\n        \t\t\toldpivot = pivot;\n        \t\t}\n        \t\tif ((pivot < S) && (p < pivot)) {\n        \t\t\t//System.out.println(\"+++ saved \" + (pivot - p) + \" comparisments\");\n        \t\t\tp = pivot;\n        \t\t\tS = 0;\n        \t\t} else {\n        \t\t\twhile (comparePivot(compiledPivot, p) ==  1) p++; // chunkAt[p] < pivot\n        \t\t}\n        \t\t// nun gilt chunkAt[p] >= pivot\n        \t\twhile (comparePivot(compiledPivot, q) == -1) q--; // chunkAt[q] > pivot\n        \t\tif (p <= q) {\n        \t\t\toldpivot = pivot;\n        \t\t\tpivot = swap(p, q, pivot, swapspace);\n        \t\t\tp++;\n        \t\t\tq--;\n        \t\t}\n        \t}\n        } else {\n        \twhile (p <= q) {\n        \t\tif ((pivot < S) && (p < pivot)) {\n        \t\t\tp = pivot;\n        \t\t\tS = 0;\n        \t\t} else {\n        \t\t\twhile (compare(pivot, p) ==  1) p++; // chunkAt[p] < pivot\n        \t\t}\n        \t\twhile (compare(pivot, q) == -1) q--; // chunkAt[q] > pivot\n        \t\tif (p <= q) {\n        \t\t\tpivot = swap(p, q, pivot, swapspace);\n        \t\t\tp++;\n        \t\t\tq--;\n        \t\t}\n        \t}\n        }\n        return p;\n    }","commit_id":"df38aaf7bd6eaa783e9f99c3a049fce6bf40597c","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void run() {\n    \t\tqsort(sl, sr, swapspace);\n    \t}","id":39747,"modified_method":"public void run() {\n    \t\tqsort(sl, sr, sb, new byte[rowdef.objectsize]);\n    \t}","commit_id":"df38aaf7bd6eaa783e9f99c3a049fce6bf40597c","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static void main(String[] args) {\n    \ttest(10000);\n    \ttest(100000);\n    \ttest(1000000);\n    \t\n    \t/*   \t\n        System.out.println(new java.util.Date(10957 * day));\n        System.out.println(new java.util.Date(0));\n        System.out.println(daysSince2000(System.currentTimeMillis()));\n        */\n    }","id":39748,"modified_method":"public static void main(String[] args) {\n    \ttest(10000);\n    \ttest(100000);\n    \t//test(1000000);\n\n        // 368, 12029\n    \t\n    \t/*   \t\n        System.out.println(new java.util.Date(10957 * day));\n        System.out.println(new java.util.Date(0));\n        System.out.println(daysSince2000(System.currentTimeMillis()));\n        */\n    }","commit_id":"df38aaf7bd6eaa783e9f99c3a049fce6bf40597c","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public synchronized boolean isSorted() {\n        assert (this.rowdef.objectOrder != null);\n        if (chunkcount <= 1) return true;\n        for (int i = 0; i < chunkcount - 1; i++) {\n        \t//System.out.println(\"*\" + new String(get(i).getColBytes(0)));\n        \tif (compare(i, i + 1) > 0) {\n        \t\t//System.out.println(\"?\" + new String(get(i+1).getColBytes(0)));\n        \t\treturn false;\n        \t}\n        }\n        return true;\n    }","id":39749,"modified_method":"public synchronized boolean isSorted() {\n        assert (this.rowdef.objectOrder != null);\n        if (chunkcount <= 1) return true;\n        for (int i = 0; i < chunkcount - 1; i++) {\n        \t//System.out.println(\"*\" + new String(get(i).getColBytes(0)));\n        \tif (compare(i, i + 1) > 0) {\n        \t\tSystem.out.println(\"?\" + new String(get(i+1).getColBytes(0)));\n        \t\treturn false;\n        \t}\n        }\n        return true;\n    }","commit_id":"df38aaf7bd6eaa783e9f99c3a049fce6bf40597c","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static void test(int testsize) {\n    \tkelondroRow r = new kelondroRow(new kelondroColumn[]{\n    \t\t\tnew kelondroColumn(\"hash\", kelondroColumn.celltype_string, kelondroColumn.encoder_bytes, yacySeedDB.commonHashLength, \"hash\")},\n    \t\t\tkelondroBase64Order.enhancedCoder, 0);\n    \tkelondroRowCollection c = new kelondroRowCollection(r, testsize);\n    \tSystem.out.println(\"kelondroRowCollection test with size = \" + testsize);\n    \tRandom a = new Random(0);\n    \tlong t0 = System.currentTimeMillis();\n    \tfor (int i = 0; i < testsize; i++) {\n    \t\tString s = kelondroBase64Order.enhancedCoder.encodeLong(a.nextLong(), 6) + kelondroBase64Order.enhancedCoder.encodeLong(a.nextLong(), 6);\n    \t\tc.add(s.getBytes());\n    \t}\n    \tlong t1 = System.currentTimeMillis();\n    \tSystem.out.println(\"create c   : \" + (t1 - t0) + \" milliseconds, \" + (testsize / (t1 - t0)) + \" entries/millisecond\");\n    \tkelondroRowCollection d = new kelondroRowCollection(r, testsize+1);\n    \tfor (int i = 0; i < testsize; i++) {\n    \t\td.add(c.get(i).getColBytes(0));\n    \t}\n    \tlong t2 = System.currentTimeMillis();\n    \tSystem.out.println(\"copy c -> d: \" + (t2 - t1) + \" milliseconds, \" + (testsize / (t2 - t1)) + \" entries/millisecond\");\n    \tprocessors = 1;\n    \tc.sort();\n    \tlong t3 = System.currentTimeMillis();\n    \tSystem.out.println(\"sort c (1) : \" + (t3 - t2) + \" milliseconds, \" + (testsize / (t3 - t2)) + \" entries/millisecond\");\n    \tprocessors = 2;\n    \td.sort();\n    \tlong t4 = System.currentTimeMillis();\n    \tSystem.out.println(\"sort d (2) : \" + (t4 - t3) + \" milliseconds, \" + (testsize / (t4 - t3)) + \" entries/millisecond\");\n    \tc.uniq();\n    \tlong t5 = System.currentTimeMillis();\n    \tSystem.out.println(\"uniq c     : \" + (t5 - t4) + \" milliseconds, \" + (testsize / (t5 - t4)) + \" entries/millisecond\");\n    \td.uniq();\n    \tlong t6 = System.currentTimeMillis();\n    \tSystem.out.println(\"uniq d     : \" + (t6 - t5) + \" milliseconds, \" + (testsize / (t6 - t5)) + \" entries/millisecond\");\n    \tboolean cis = c.isSorted();\n    \tlong t7 = System.currentTimeMillis();\n    \tSystem.out.println(\"c isSorted = \" + ((cis) ? \"true\" : \"false\") + \": \" + (t7 - t6) + \" milliseconds\");\n    \tboolean dis = d.isSorted();\n    \tlong t8 = System.currentTimeMillis();\n    \tSystem.out.println(\"d isSorted = \" + ((dis) ? \"true\" : \"false\") + \": \" + (t8 - t7) + \" milliseconds\");\n    \tSystem.out.println(\"Result size: c = \" + c.size() + \", d = \" + d.size());\n    \tSystem.out.println();\n    }","id":39750,"modified_method":"public static void test(int testsize) {\n    \tkelondroRow r = new kelondroRow(new kelondroColumn[]{\n    \t\t\tnew kelondroColumn(\"hash\", kelondroColumn.celltype_string, kelondroColumn.encoder_bytes, yacySeedDB.commonHashLength, \"hash\")},\n    \t\t\tkelondroBase64Order.enhancedCoder, 0);\n    \tkelondroRowCollection c = new kelondroRowCollection(r, testsize);\n    \tSystem.out.println(\"kelondroRowCollection test with size = \" + testsize);\n    \tRandom a = new Random(0);\n    \tlong t0 = System.currentTimeMillis();\n    \tString s;\n    \tfor (int i = 0; i < testsize; i++) {\n    \t\ts = kelondroBase64Order.enhancedCoder.encodeLong(a.nextLong(), 6) + kelondroBase64Order.enhancedCoder.encodeLong(a.nextLong(), 6);\n    \t\t//assert\n    \t\tc.add(s.getBytes());\n    \t}\n    \tlong t1 = System.currentTimeMillis();\n    \tSystem.out.println(\"create c   : \" + (t1 - t0) + \" milliseconds, \" + (testsize / (t1 - t0)) + \" entries/millisecond\");\n    \tkelondroRowCollection d = new kelondroRowCollection(r, testsize);\n    \tfor (int i = 0; i < testsize; i++) {\n    \t\td.add(c.get(i).getColBytes(0));\n    \t}\n    \tlong t2 = System.currentTimeMillis();\n    \tSystem.out.println(\"copy c -> d: \" + (t2 - t1) + \" milliseconds, \" + (testsize / (t2 - t1)) + \" entries/millisecond\");\n    \tprocessors = 1;\n    \tc.sort();\n    \tlong t3 = System.currentTimeMillis();\n    \tSystem.out.println(\"sort c (1) : \" + (t3 - t2) + \" milliseconds, \" + (testsize / (t3 - t2)) + \" entries/millisecond\");\n    \tprocessors = 2;\n    \td.sort();\n    \tlong t4 = System.currentTimeMillis();\n    \tSystem.out.println(\"sort d (2) : \" + (t4 - t3) + \" milliseconds, \" + (testsize / (t4 - t3)) + \" entries/millisecond\");\n    \tc.uniq();\n    \tlong t5 = System.currentTimeMillis();\n    \tSystem.out.println(\"uniq c     : \" + (t5 - t4) + \" milliseconds, \" + (testsize / (t5 - t4)) + \" entries/millisecond\");\n    \td.uniq();\n    \tlong t6 = System.currentTimeMillis();\n    \tSystem.out.println(\"uniq d     : \" + (t6 - t5) + \" milliseconds, \" + (testsize / (t6 - t5)) + \" entries/millisecond\");\n    \ta = new Random(0);\n    \tkelondroRowSet e = new kelondroRowSet(r, testsize);\n    \tfor (int i = 0; i < testsize; i++) {\n    \t\ts = kelondroBase64Order.enhancedCoder.encodeLong(a.nextLong(), 6) + kelondroBase64Order.enhancedCoder.encodeLong(a.nextLong(), 6);\n    \t\te.put(r.newEntry(s.getBytes()));\n    \t}\n    \tlong t7 = System.currentTimeMillis();\n    \tSystem.out.println(\"create e   : \" + (t7 - t6) + \" milliseconds, \" + (testsize / (t7 - t6)) + \" entries/millisecond\");\n    \te.sort();\n    \tlong t8 = System.currentTimeMillis();\n    \tSystem.out.println(\"sort e (2) : \" + (t8 - t7) + \" milliseconds, \" + (testsize / (t8 - t7)) + \" entries/millisecond\");\n    \te.uniq();\n    \tlong t9 = System.currentTimeMillis();\n    \tSystem.out.println(\"uniq e     : \" + (t9 - t8) + \" milliseconds, \" + (testsize / (t9 - t8)) + \" entries/millisecond\");\n    \tboolean cis = c.isSorted();\n    \tlong t10 = System.currentTimeMillis();\n    \tSystem.out.println(\"c isSorted = \" + ((cis) ? \"true\" : \"false\") + \": \" + (t10 - t9) + \" milliseconds\");\n    \tboolean dis = d.isSorted();\n    \tlong t11 = System.currentTimeMillis();\n    \tSystem.out.println(\"d isSorted = \" + ((dis) ? \"true\" : \"false\") + \": \" + (t11 - t10) + \" milliseconds\");\n    \tboolean eis = e.isSorted();\n    \tlong t12 = System.currentTimeMillis();\n    \tSystem.out.println(\"e isSorted = \" + ((eis) ? \"true\" : \"false\") + \": \" + (t12 - t11) + \" milliseconds\");\n    \tSystem.out.println(\"Result size: c = \" + c.size() + \", d = \" + d.size() + \", e = \" + e.size());\n    \tSystem.out.println();\n    }","commit_id":"df38aaf7bd6eaa783e9f99c3a049fce6bf40597c","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"private final void qsort(int L, int R, byte[] swapspace) {\n\t\tint p = partition(L, R, swapspace);\n\t\tif (p >= 0) {\n\t\t\tqsort(L, p, swapspace);\n\t\t\tqsort(p, R, swapspace);\n\t\t}\n\t}","id":39751,"modified_method":"private final void qsort(int L, int R, int S, byte[] swapspace) {\n    \tif (R - L < isortlimit) {\n            isort(L, R, swapspace);\n            return;\n        }\n\t\tint p = partition(L, R, S, swapspace);\n\t\tqsort(L, p, 0, swapspace);\n\t\tqsort(p, R, 0, swapspace);\n\t}","commit_id":"df38aaf7bd6eaa783e9f99c3a049fce6bf40597c","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public qsortthread(int L, int R) {\n    \t\tthis.sl = L;\n    \t\tthis.sr = R;\n    \t\tthis.swapspace = new byte[rowdef.objectsize];\n    \t}","id":39752,"modified_method":"public qsortthread(int L, int R, int S) {\n    \t\tthis.sl = L;\n    \t\tthis.sr = R;\n    \t\tthis.sb = S;\n    \t}","commit_id":"df38aaf7bd6eaa783e9f99c3a049fce6bf40597c","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public synchronized final void sort() {\n        assert (this.rowdef.objectOrder != null);\n        if (this.sortBound == this.chunkcount) return; // this is already sorted\n\n        int p = partition(0, this.chunkcount, new byte[this.rowdef.objectsize]);\n        if (p >= 0) {\n        \tif ((processors > 1) && (this.chunkcount > 10000)) {\n        \t\t// sort this using multi-threading; use one second thread\n        \t\tqsortthread qs = new qsortthread(0, p);\n            \tqs.start();\n        \t\tqsort(p, this.chunkcount, new byte[this.rowdef.objectsize]);\n        \t\ttry {qs.join();} catch (InterruptedException e) {e.printStackTrace();}\n        \t} else {\n        \t\tbyte[] swapspace = new byte[this.rowdef.objectsize];\n        \t\tqsort(0, p, swapspace);\n        \t\tqsort(p, this.chunkcount, swapspace);\n        \t}\n    \t}\n        this.sortBound = this.chunkcount;\n    }","id":39753,"modified_method":"public synchronized final void sort() {\n        assert (this.rowdef.objectOrder != null);\n        if (this.sortBound == this.chunkcount) return; // this is already sorted\n        if (this.chunkcount < isortlimit) {\n            isort(0, this.chunkcount, new byte[this.rowdef.objectsize]);\n            return;\n        }\n        byte[] swapspace = new byte[this.rowdef.objectsize];\n        int p = partition(0, this.chunkcount, this.sortBound, swapspace);\n        if ((processors > 1) && (this.chunkcount >= 10000)) {\n        \t// sort this using multi-threading; use one second thread\n        \tqsortthread qs = new qsortthread(0, p, 0);\n            qs.start();\n        \tqsort(p, this.chunkcount, 0, swapspace);\n        \ttry {qs.join();} catch (InterruptedException e) {e.printStackTrace();}\n        } else {\n        \tqsort(0, p, 0, swapspace);\n        \tqsort(p, this.chunkcount, 0, swapspace);\n        }\n        this.sortBound = this.chunkcount;\n        assert this.isSorted();\n    }","commit_id":"df38aaf7bd6eaa783e9f99c3a049fce6bf40597c","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"private void notifyRmdOutputClosed(JavaScriptObject closeParams)\n   {\n      // save anchor location for presentations and scroll position for \n      // documents\n      RmdPreviewParams params = closeParams.cast();\n      if (params.isHtmlPresentation())\n      {\n         anchors_.put(params.getOutputFile(), params.getAnchor());\n      }\n      else\n      {\n         scrollPositions_.put(params.getOutputFile(), \n                              params.getScrollPosition());\n      }\n   }","id":39754,"modified_method":"private void notifyRmdOutputClosed(JavaScriptObject closeParams)\n   {\n      // save anchor location for presentations and scroll position for \n      // documents\n      RmdPreviewParams params = closeParams.cast();\n      cacheDocPosition(params.getResult(), params.getScrollPosition(), \n                       params.getAnchor());\n   }","commit_id":"8ff1b0e90affae24c3f73b450bf9c3a0bea09f5e","url":"https://github.com/rstudio/rstudio"},{"original_method":"@Override\n   public void onRmdRenderCompleted(RmdRenderCompletedEvent event)\n   {\n      RmdRenderResult result = event.getResult();\n      if (result.getSucceeded())\n      {\n         // find the last known position for this file\n         int scrollPosition = 0;\n         String anchor = \"\";\n         if (scrollPositions_.containsKey(result.getOutputFile()))\n         {\n            scrollPosition = scrollPositions_.get(result.getOutputFile());\n         }\n         if (anchors_.containsKey(result.getOutputFile()))\n         {\n            anchor = anchors_.get(result.getOutputFile());\n         }\n         RmdPreviewParams params = RmdPreviewParams.create(\n               result, scrollPosition, anchor);\n\n         WindowEx win = satelliteManager_.getSatelliteWindowObject(\n               RmdOutputSatellite.NAME);\n\n         // we're refreshing if the window is up and we're pulling the same\n         // output file as the last one\n         boolean isRefresh = win != null &&\n                             result_ != null && \n                             result_.getOutputFile().equals(\n                                   result.getOutputFile());\n         // if this isn't a refresh but there's a window up, cache the scroll\n         // position of the old document before we replace it\n         if (!isRefresh && result_ != null && win != null)\n         {\n            scrollPositions_.put(result_.getOutputFile(), \n                                 getScrollPosition(win));\n         }\n         if (win != null && !Desktop.isDesktop() && BrowseCap.isChrome())\n         {\n            // we're on Chrome, cache the scroll position unless we're switching\n            // docs and do a hard close/reopen\n            if (isRefresh)\n            {\n               params.setScrollPosition(getScrollPosition(win));\n            }\n            satelliteManager_.forceReopenSatellite(RmdOutputSatellite.NAME, \n                                                   params);\n         }\n         else\n         {\n            satelliteManager_.openSatellite(RmdOutputSatellite.NAME,     \n                                            params,\n                                            params.getPreferredSize());   \n         }\n      }\n\n      // save the result so we know if the next render is a re-render of the\n      // same document\n      result_ = result;\n   }","id":39755,"modified_method":"@Override\n   public void onRmdRenderCompleted(RmdRenderCompletedEvent event)\n   {\n      RmdRenderResult result = event.getResult();\n      if (result.getSucceeded())\n      {\n         displayRenderResult(result);\n      }\n   }","commit_id":"8ff1b0e90affae24c3f73b450bf9c3a0bea09f5e","url":"https://github.com/rstudio/rstudio"},{"original_method":"@Override\n   protected void initToolbar (Toolbar toolbar, Commands commands)\n   {\n      toolbar.addLeftWidget(new ToolbarLabel(\"Viewing: \"));\n      fileLabel_ = new ToolbarLabel();\n      fileLabel_.addStyleName(ThemeStyles.INSTANCE.subtitle());\n      fileLabel_.getElement().getStyle().setMarginRight(7, Unit.PX);\n      toolbar.addLeftWidget(fileLabel_);\n      toolbar.addLeftSeparator();\n      toolbar.addLeftWidget(commands.viewerRefresh().createToolbarButton());\n      publishButtonSeparator_ = toolbar.addLeftSeparator();\n      publishButton_ = commands.publishHTML().createToolbarButton();\n      toolbar.addLeftWidget(publishButton_);\n   }","id":39756,"modified_method":"@Override\n   protected void initToolbar (Toolbar toolbar, Commands commands)\n   {\n      toolbar.addLeftWidget(new ToolbarLabel(\"Viewing: \"));\n      fileLabel_ = new ToolbarLabel();\n      fileLabel_.addStyleName(ThemeStyles.INSTANCE.subtitle());\n      fileLabel_.getElement().getStyle().setMarginRight(7, Unit.PX);\n      toolbar.addLeftWidget(fileLabel_);\n      toolbar.addLeftSeparator();\n      toolbar.addLeftWidget(commands.viewerRefresh().createToolbarButton());\n      publishButtonSeparator_ = toolbar.addLeftSeparator();\n      publishButton_ = commands.publishHTML().createToolbarButton(false);\n      toolbar.addLeftWidget(publishButton_);\n   }","commit_id":"8ff1b0e90affae24c3f73b450bf9c3a0bea09f5e","url":"https://github.com/rstudio/rstudio"},{"original_method":"@Override\n   public void showOutput(RmdPreviewParams params, boolean enablePublish, \n                          boolean refresh)\n   {\n      fileLabel_.setText(params.getOutputFile());\n      boolean showPublish = enablePublish && params.isHtml();\n      publishButton_.setText(params.getResult().getRpubsPublished() ? \n            \"Republish\" : \"Publish\");\n      publishButton_.setVisible(showPublish);\n      publishButton_.setEnabled(showPublish);\n      publishButtonSeparator_.setVisible(showPublish);\n      // when refreshing, reapply the current scroll position \n      scrollPosition_ = refresh ? \n            getScrollPosition() : params.getScrollPosition();\n      String url = server_.getApplicationURL(params.getOutputUrl());\n      if (params.getAnchor().length() > 0)\n      {\n         url += \"#\" + params.getAnchor();\n      }\n      showUrl(url);\n   }","id":39757,"modified_method":"@Override\n   public void showOutput(RmdPreviewParams params, boolean enablePublish, \n                          boolean refresh)\n   {\n      fileLabel_.setText(params.getOutputFile());\n      boolean showPublish = enablePublish && params.getResult().isHtml();\n      publishButton_.setText(params.getResult().getRpubsPublished() ? \n            \"Republish\" : \"Publish\");\n      publishButton_.setVisible(showPublish);\n      publishButtonSeparator_.setVisible(showPublish);\n      // when refreshing, reapply the current scroll position and anchor\n      scrollPosition_ = refresh ? \n            getScrollPosition() : params.getScrollPosition();\n      String url;\n      if (refresh)\n      {\n         url = getCurrentUrl();\n      }\n      else\n      {\n         url = server_.getApplicationURL(params.getOutputUrl());\n         if (params.getAnchor().length() > 0)\n         {\n            url += \"#\" + params.getAnchor();\n         }\n      }\n      showUrl(url);\n   }","commit_id":"8ff1b0e90affae24c3f73b450bf9c3a0bea09f5e","url":"https://github.com/rstudio/rstudio"},{"original_method":"public void showOutput(RmdPreviewParams params) \n   {\n      // detect whether we're really doing a refresh\n      boolean refresh = params_ != null && \n            params_.getOutputFile().equals(params.getOutputFile());\n      params_ = params;\n      view_.showOutput(params, session_.getSessionInfo().getAllowRpubsPublish(), \n                       refresh);\n   }","id":39758,"modified_method":"public void showOutput(RmdPreviewParams params) \n   {\n      // detect whether we're really doing a refresh\n      boolean refresh = params_ != null && \n            params_.getResult().equals(params.getResult());\n      params_ = params;\n      view_.showOutput(params, session_.getSessionInfo().getAllowRpubsPublish(), \n                       refresh);\n   }","commit_id":"8ff1b0e90affae24c3f73b450bf9c3a0bea09f5e","url":"https://github.com/rstudio/rstudio"},{"original_method":"/**\n     * Start of an internal link.\n     * \n     * @param link the link definition (the reference)\n     * @param isFreeStandingURI if true then the link is a free standing URI directly in the text\n     * @param parameters a generic list of parameters. Example: style=\"background-color: blue\"\n     */\n    private void beginInternalLink(Link link, boolean isFreeStandingURI, Map<String, String> parameters) \n    {\n        Map<String, String> spanAttributes = new LinkedHashMap<String, String>();\n        Map<String, String> aAttributes = new LinkedHashMap<String, String>();\n\n        // Add all parameters to the A attributes\n        aAttributes.putAll(parameters);\n        \n        if (StringUtils.isEmpty(link.getReference()) && link.getAnchor() != null) {            \n            spanAttributes.put(CLASS, WIKILINK);\n            aAttributes.put(HREF, \"#\" + link.getAnchor());\n        } else if (StringUtils.isEmpty(link.getReference()) \n            || this.wikiModel.isDocumentAvailable(link.getReference()))\n        {\n            spanAttributes.put(CLASS, WIKILINK);                \n            aAttributes.put(HREF, this.wikiModel.getDocumentViewURL(link.getReference(), link.getAnchor(),\n                link.getQueryString()));\n        } else {\n            // The wiki document doesn't exist\n            spanAttributes.put(CLASS, \"wikicreatelink\");\n            aAttributes.put(HREF, this.wikiModel.getDocumentEditURL(link.getReference(), link.getAnchor(),\n                link.getQueryString()));\n        }\n        \n        getXHTMLWikiPrinter().printXMLStartElement(SPAN, spanAttributes);\n        getXHTMLWikiPrinter().printXMLStartElement(ANCHOR, aAttributes);\n    }","id":39759,"modified_method":"/**\n     * Start of an internal link.\n     * \n     * @param link the link definition (the reference)\n     * @param isFreeStandingURI if true then the link is a free standing URI directly in the text\n     * @param parameters a generic list of parameters. Example: style=\"background-color: blue\"\n     */\n    private void beginInternalLink(Link link, boolean isFreeStandingURI, Map<String, String> parameters)\n    {\n        Map<String, String> spanAttributes = new LinkedHashMap<String, String>();\n        Map<String, String> aAttributes = new LinkedHashMap<String, String>();\n\n        // Add all parameters to the A attributes\n        aAttributes.putAll(parameters);\n\n        if (StringUtils.isEmpty(link.getReference())) {\n            spanAttributes.put(CLASS, WIKILINK);\n\n            StringBuilder buffer = new StringBuilder();\n            if (link.getQueryString() != null) {\n                buffer.append('?');\n                buffer.append(link.getQueryString());\n            }\n            buffer.append('#');\n            if (link.getAnchor() != null) {\n                buffer.append(link.getAnchor());\n            }\n\n            aAttributes.put(HREF, buffer.toString());\n        } else if (this.wikiModel.isDocumentAvailable(link.getReference())) {\n            spanAttributes.put(CLASS, WIKILINK);\n            aAttributes.put(HREF, this.wikiModel.getDocumentViewURL(link.getReference(), link.getAnchor(),\n                link.getQueryString()));\n        } else {\n            // The wiki document doesn't exist\n            spanAttributes.put(CLASS, \"wikicreatelink\");\n            aAttributes.put(HREF, this.wikiModel.getDocumentEditURL(link.getReference(), link.getAnchor(),\n                link.getQueryString()));\n        }\n\n        getXHTMLWikiPrinter().printXMLStartElement(SPAN, spanAttributes);\n        getXHTMLWikiPrinter().printXMLStartElement(ANCHOR, aAttributes);\n    }","commit_id":"941dce6ed72ee9fa548a1ef6c5f328ea69facfc1","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public static Test suite() throws Exception\n    {\n        RenderingTestSuite suite = new RenderingTestSuite(\"Rendering tests requiring the wiki notion\");\n\n        // Links\n        suite.addTestsFromResource(\"link/links1\", false);\n        suite.addTestsFromResource(\"link/links2\", false);\n        suite.addTestsFromResource(\"link/links3\", false);\n        suite.addTestsFromResource(\"link/links4\", false);\n        suite.addTestsFromResource(\"link/links5\", false);\n        suite.addTestsFromResource(\"link/links6\", false);\n        suite.addTestsFromResource(\"link/links7\", false);\n        suite.addTestsFromResource(\"link/links8\", false);\n        suite.addTestsFromResource(\"link/links9\", false);\n        suite.addTestsFromResource(\"link/links10\", false);\n        suite.addTestsFromResource(\"link/links11\", false);\n        suite.addTestsFromResource(\"link/links12\", false);\n        suite.addTestsFromResource(\"link/links13\", false);\n        suite.addTestsFromResource(\"link/links14\", false);\n        suite.addTestsFromResource(\"link/links15\", false);\n        suite.addTestsFromResource(\"link/links16\", false);\n        suite.addTestsFromResource(\"link/links17\", false);\n        suite.addTestsFromResource(\"link/links18\", false);\n        suite.addTestsFromResource(\"link/links19\", false);\n        suite.addTestsFromResource(\"link/links20\", false);\n        suite.addTestsFromResource(\"link/links21\", false);\n        suite.addTestsFromResource(\"link/links22\", false);\n        suite.addTestsFromResource(\"link/links23\", false);\n\n        // Images\n        suite.addTestsFromResource(\"image/image1\", false);\n        suite.addTestsFromResource(\"image/image2\", false);\n        suite.addTestsFromResource(\"image/image3\", false);\n        suite.addTestsFromResource(\"image/image4\", false);\n        suite.addTestsFromResource(\"image/image5\", false);\n\n        List<ComponentDescriptor< ? >> mocks = new ArrayList<ComponentDescriptor< ? >>();\n        mocks.add(MockWikiModel.getComponentDescriptor());\n\n        return new ComponentManagerTestSetup(suite, mocks);\n    }","id":39760,"modified_method":"public static Test suite() throws Exception\n    {\n        RenderingTestSuite suite = new RenderingTestSuite(\"Rendering tests requiring the wiki notion\");\n\n        // Links\n        suite.addTestsFromResource(\"link/links1\", false);\n        suite.addTestsFromResource(\"link/links2\", false);\n        suite.addTestsFromResource(\"link/links3\", false);\n        suite.addTestsFromResource(\"link/links4\", false);\n        suite.addTestsFromResource(\"link/links5\", false);\n        suite.addTestsFromResource(\"link/links6\", false);\n        suite.addTestsFromResource(\"link/links7\", false);\n        suite.addTestsFromResource(\"link/links8\", false);\n        suite.addTestsFromResource(\"link/links9\", false);\n        suite.addTestsFromResource(\"link/links10\", false);\n        suite.addTestsFromResource(\"link/links11\", false);\n        suite.addTestsFromResource(\"link/links12\", false);\n        suite.addTestsFromResource(\"link/links13\", false);\n        suite.addTestsFromResource(\"link/links14\", false);\n        suite.addTestsFromResource(\"link/links15\", false);\n        suite.addTestsFromResource(\"link/links16\", false);\n        suite.addTestsFromResource(\"link/links17\", false);\n        suite.addTestsFromResource(\"link/links18\", false);\n        suite.addTestsFromResource(\"link/links19\", false);\n        suite.addTestsFromResource(\"link/links20\", false);\n        suite.addTestsFromResource(\"link/links21\", false);\n        suite.addTestsFromResource(\"link/links22\", false);\n        suite.addTestsFromResource(\"link/links23\", false);\n\n        // Images\n        suite.addTestsFromResource(\"image/image1\", false);\n        suite.addTestsFromResource(\"image/image2\", false);\n        suite.addTestsFromResource(\"image/image3\", false);\n        suite.addTestsFromResource(\"image/image4\", false);\n        suite.addTestsFromResource(\"image/image5\", false);\n        \n        suite.addTestsFromResource(\"link/links18\", false);\n\n        List<ComponentDescriptor< ? >> mocks = new ArrayList<ComponentDescriptor< ? >>();\n        mocks.add(MockWikiModel.getComponentDescriptor());\n\n        return new ComponentManagerTestSetup(suite, mocks);\n    }","commit_id":"941dce6ed72ee9fa548a1ef6c5f328ea69facfc1","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n  @Nullable\n  public PsiElement getAnchor(@NotNull final PsiMember member, @NotNull final PsiClass targetClass) {\n    if (member instanceof PsiField && member.hasModifierProperty(PsiModifier.STATIC)) {\n      final List<PsiField> afterFields = new ArrayList<PsiField>();\n      final PsiExpression psiExpression = ((PsiField)member).getInitializer();\n      if (psiExpression != null) {\n        psiExpression.accept(new JavaRecursiveElementWalkingVisitor() {\n          @Override\n          public void visitReferenceExpression(final PsiReferenceExpression expression) {\n            super.visitReferenceExpression(expression);\n            final PsiElement psiElement = expression.resolve();\n            if (psiElement instanceof PsiField) {\n              final PsiField psiField = (PsiField)psiElement;\n              if (psiField.getContainingClass() == targetClass && !afterFields.contains(psiField)) {\n                afterFields.add(psiField);\n              }\n            }\n          }\n        });\n      }\n\n      final Comparator<PsiField> fieldComparator = new Comparator<PsiField>() {\n        public int compare(final PsiField o1, final PsiField o2) {\n          return -PsiUtilCore.compareElementsByPosition(o1, o2);\n        }\n      };\n\n      if (!afterFields.isEmpty()) {\n        Collections.sort(afterFields, fieldComparator);\n        return afterFields.get(0);\n      }\n\n      final List<PsiField> beforeFields = new ArrayList<PsiField>();\n      for (PsiReference psiReference : ReferencesSearch.search(member, new LocalSearchScope(targetClass))) {\n        final PsiField fieldWithReference = PsiTreeUtil.getParentOfType(psiReference.getElement(), PsiField.class);\n        if (fieldWithReference != null && !afterFields.contains(fieldWithReference)) {\n          beforeFields.add(fieldWithReference);\n        }\n      }\n      Collections.sort(beforeFields, fieldComparator);\n      if (!beforeFields.isEmpty()) {\n        return beforeFields.get(0).getPrevSibling();\n      }\n    }\n    return null;\n  }","id":39761,"modified_method":"@Override\n  @Nullable\n  public PsiElement getAnchor(@NotNull final PsiMember member, @NotNull final PsiClass targetClass) {\n    if (member instanceof PsiField && member.hasModifierProperty(PsiModifier.STATIC)) {\n      final List<PsiField> afterFields = new ArrayList<PsiField>();\n      final PsiExpression psiExpression = ((PsiField)member).getInitializer();\n      if (psiExpression != null) {\n        psiExpression.accept(new JavaRecursiveElementWalkingVisitor() {\n          @Override\n          public void visitReferenceExpression(final PsiReferenceExpression expression) {\n            super.visitReferenceExpression(expression);\n            final PsiElement psiElement = expression.resolve();\n            if (psiElement instanceof PsiField) {\n              final PsiField psiField = (PsiField)psiElement;\n              if (psiField.getContainingClass() == targetClass && !afterFields.contains(psiField)) {\n                afterFields.add(psiField);\n              }\n            }\n          }\n        });\n      }\n\n      if (!afterFields.isEmpty()) {\n        Collections.sort(afterFields, new Comparator<PsiField>() {\n          public int compare(final PsiField o1, final PsiField o2) {\n            return -PsiUtilCore.compareElementsByPosition(o1, o2);\n          }\n        });\n        return afterFields.get(0);\n      }\n\n      final List<PsiField> beforeFields = new ArrayList<PsiField>();\n      for (PsiReference psiReference : ReferencesSearch.search(member, new LocalSearchScope(targetClass))) {\n        final PsiField fieldWithReference = PsiTreeUtil.getParentOfType(psiReference.getElement(), PsiField.class);\n        if (fieldWithReference != null && !afterFields.contains(fieldWithReference)) {\n          beforeFields.add(fieldWithReference);\n        }\n      }\n      Collections.sort(beforeFields, PsiUtil.BY_POSITION);\n      if (!beforeFields.isEmpty()) {\n        return beforeFields.get(0).getPrevSibling();\n      }\n    }\n    return null;\n  }","commit_id":"680584dc92f3c12e49825bb1001f02020e6cf479","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void performRefactoring(final UsageInfo[] usages) {\n    try {\n      PsiClass targetClass = JavaPsiFacade.getInstance(myProject).findClass(myOptions.getTargetClassName(),\n                                                                            GlobalSearchScope.projectScope(myProject));\n      if (targetClass == null) return;\n\n      // collect anchors to place moved members at\n      final Map<PsiMember, PsiElement> anchors = new HashMap<PsiMember, PsiElement>();\n      for (PsiMember member : myMembersToMove) {\n        final MoveMemberHandler handler = MoveMemberHandler.EP_NAME.forLanguage(member.getLanguage());\n        if (handler != null) {\n          anchors.put(member, handler.getAnchor(member, targetClass));\n        }\n      }\n\n      // correct references to moved members from the outside\n      ArrayList<MoveMembersUsageInfo> otherUsages = new ArrayList<MoveMembersUsageInfo>();\n      for (UsageInfo usageInfo : usages) {\n        MoveMembersUsageInfo usage = (MoveMembersUsageInfo)usageInfo;\n        if (!usage.reference.isValid()) continue;\n        final MoveMemberHandler handler = MoveMemberHandler.EP_NAME.forLanguage(usageInfo.getElement().getLanguage());\n        if (handler != null) {\n          if (handler.changeExternalUsage(myOptions, usage)) continue;\n        }\n        otherUsages.add(usage);\n      }\n\n      // correct references inside moved members and outer references to Inner Classes\n      for (PsiMember member : myMembersToMove) {\n        ArrayList<PsiReference> refsToBeRebind = new ArrayList<PsiReference>();\n        for (Iterator<MoveMembersUsageInfo> iterator = otherUsages.iterator(); iterator.hasNext();) {\n          MoveMembersUsageInfo info = iterator.next();\n          if (member.equals(info.member)) {\n            PsiReference ref = info.getReference();\n            if (ref != null) {\n              refsToBeRebind.add(ref);\n            }\n            iterator.remove();\n          }\n        }\n        final RefactoringElementListener elementListener = getTransaction().getElementListener(member);\n        final MoveMemberHandler handler = MoveMemberHandler.EP_NAME.forLanguage(member.getLanguage());\n        if (handler != null) {\n          PsiMember newMember = handler.doMove(myOptions, member, anchors.get(member), targetClass);\n          elementListener.elementMoved(newMember);\n\n          fixModifierList(member, newMember, usages);\n          for (PsiReference reference : refsToBeRebind) {\n            reference.bindToElement(newMember);\n          }\n        }\n      }\n\n      // qualifier info must be decoded after members are moved\n      final MoveMemberHandler handler = MoveMemberHandler.EP_NAME.forLanguage(myTargetClass.getLanguage());\n      if (handler != null) handler.decodeContextInfo(myTargetClass);\n\n      myMembersToMove.clear();\n      if (myMoveCallback != null) {\n        myMoveCallback.refactoringCompleted();\n      }\n    }\n    catch (IncorrectOperationException e) {\n      LOG.error(e);\n    }\n  }","id":39762,"modified_method":"protected void performRefactoring(final UsageInfo[] usages) {\n    try {\n      PsiClass targetClass = JavaPsiFacade.getInstance(myProject).findClass(myOptions.getTargetClassName(),\n                                                                            GlobalSearchScope.projectScope(myProject));\n      if (targetClass == null) return;\n\n      // collect anchors to place moved members at\n      final Map<PsiMember, SmartPsiElementPointer<PsiElement>> anchors = new HashMap<PsiMember, SmartPsiElementPointer<PsiElement>>();\n      for (PsiMember member : myMembersToMove) {\n        final MoveMemberHandler handler = MoveMemberHandler.EP_NAME.forLanguage(member.getLanguage());\n        if (handler != null) {\n          final PsiElement anchor = handler.getAnchor(member, targetClass);\n          anchors.put(member, anchor == null ? null : SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(anchor));\n        }\n      }\n\n      // correct references to moved members from the outside\n      ArrayList<MoveMembersUsageInfo> otherUsages = new ArrayList<MoveMembersUsageInfo>();\n      for (UsageInfo usageInfo : usages) {\n        MoveMembersUsageInfo usage = (MoveMembersUsageInfo)usageInfo;\n        if (!usage.reference.isValid()) continue;\n        final MoveMemberHandler handler = MoveMemberHandler.EP_NAME.forLanguage(usageInfo.getElement().getLanguage());\n        if (handler != null) {\n          if (handler.changeExternalUsage(myOptions, usage)) continue;\n        }\n        otherUsages.add(usage);\n      }\n\n      // correct references inside moved members and outer references to Inner Classes\n      for (PsiMember member : myMembersToMove) {\n        ArrayList<PsiReference> refsToBeRebind = new ArrayList<PsiReference>();\n        for (Iterator<MoveMembersUsageInfo> iterator = otherUsages.iterator(); iterator.hasNext();) {\n          MoveMembersUsageInfo info = iterator.next();\n          if (member.equals(info.member)) {\n            PsiReference ref = info.getReference();\n            if (ref != null) {\n              refsToBeRebind.add(ref);\n            }\n            iterator.remove();\n          }\n        }\n        final RefactoringElementListener elementListener = getTransaction().getElementListener(member);\n        final MoveMemberHandler handler = MoveMemberHandler.EP_NAME.forLanguage(member.getLanguage());\n        if (handler != null) {\n          final SmartPsiElementPointer<PsiElement> pointer = anchors.get(member);\n          PsiMember newMember = handler.doMove(myOptions, member, pointer != null ? pointer.getElement() : null, targetClass);\n          elementListener.elementMoved(newMember);\n\n          fixModifierList(member, newMember, usages);\n          for (PsiReference reference : refsToBeRebind) {\n            reference.bindToElement(newMember);\n          }\n        }\n      }\n\n      // qualifier info must be decoded after members are moved\n      final MoveMemberHandler handler = MoveMemberHandler.EP_NAME.forLanguage(myTargetClass.getLanguage());\n      if (handler != null) handler.decodeContextInfo(myTargetClass);\n\n      myMembersToMove.clear();\n      if (myMoveCallback != null) {\n        myMoveCallback.refactoringCompleted();\n      }\n    }\n    catch (IncorrectOperationException e) {\n      LOG.error(e);\n    }\n  }","commit_id":"680584dc92f3c12e49825bb1001f02020e6cf479","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void render(\n\t\t\tHttpServletRequest request, HttpServletResponse response,\n\t\t\tPortlet portlet)\n\t\tthrows PortletContainerException {\n\n\t\t_portletContainer.render(request, response, portlet);\n\t}","id":39763,"modified_method":"public void render(\n\t\t\tHttpServletRequest request, HttpServletResponse response,\n\t\t\tPortlet portlet)\n\t\tthrows PortletContainerException {\n\n\t\ttry {\n\t\t\tcheckRender(request, portlet);\n\n\t\t\t_portletContainer.render(request, response, portlet);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletContainerException(e);\n\t\t}\n\t}","commit_id":"66f793c286d7ee6b8eab57b256e8a1a24124f12b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ActionResult processAction(\n\t\t\tHttpServletRequest request, HttpServletResponse response,\n\t\t\tPortlet portlet)\n\t\tthrows PortletContainerException {\n\n\t\treturn _portletContainer.processAction(request, response, portlet);\n\t}","id":39764,"modified_method":"public ActionResult processAction(\n\t\t\tHttpServletRequest request, HttpServletResponse response,\n\t\t\tPortlet portlet)\n\t\tthrows PortletContainerException {\n\n\t\ttry {\n\t\t\tHttpServletRequest ownerLayoutRequest =\n\t\t\t\tgetOwnerLayoutRequestWrapper(request, portlet);\n\n\t\t\tcheckAction(ownerLayoutRequest, portlet);\n\n\t\t\treturn _portletContainer.processAction(request, response, portlet);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletContainerException(e);\n\t\t}\n\t}","commit_id":"66f793c286d7ee6b8eab57b256e8a1a24124f12b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void serveResource(\n\t\t\tHttpServletRequest request, HttpServletResponse response,\n\t\t\tPortlet portlet)\n\t\tthrows PortletContainerException {\n\n\t\t_portletContainer.serveResource(request, response, portlet);\n\t}","id":39765,"modified_method":"public void serveResource(\n\t\t\tHttpServletRequest request, HttpServletResponse response,\n\t\t\tPortlet portlet)\n\t\tthrows PortletContainerException {\n\n\t\ttry {\n\t\t\tHttpServletRequest ownerLayoutRequest =\n\t\t\t\tgetOwnerLayoutRequestWrapper(request, portlet);\n\n\t\t\tcheckResource(ownerLayoutRequest, portlet);\n\n\t\t\t_portletContainer.serveResource(request, response, portlet);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletContainerException(e);\n\t\t}\n\t}","commit_id":"66f793c286d7ee6b8eab57b256e8a1a24124f12b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void serveResource(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows IOException, PortletException {\n\n\t\tExportArticleUtil.sendFile(resourceRequest, resourceResponse);\n\n\t\tsuper.serveResource(resourceRequest, resourceResponse);\n\t}","id":39766,"modified_method":"@Override\n\tpublic void serveResource(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows IOException, PortletException {\n\n\t\tString cmd = ParamUtil.getString(resourceRequest, Constants.CMD);\n\n\t\tif (cmd.equals(Constants.EXPORT)) {\n\t\t\tExportArticleUtil.sendFile(resourceRequest, resourceResponse);\n\t\t}\n\t\telse {\n\t\t\tsuper.serveResource(resourceRequest, resourceResponse);\n\t\t}\n\t}","commit_id":"886c32d8d26ae10a3299b557958daa39e9c1e45e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\tPortletConfig portletConfig = (PortletConfig)request.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_CONFIG);\n\n\t\tPortletRequest portletRequest = (PortletRequest)request.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_REQUEST);\n\n\t\tPortletResponse portletResponse = (PortletResponse)request.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_RESPONSE);\n\n\t\tBoolean strutsExecute = (Boolean)request.getAttribute(\n\t\t\tWebKeys.PORTLET_STRUTS_EXECUTE);\n\n\t\tif ((strutsExecute != null) && strutsExecute.booleanValue()) {\n\t\t\treturn strutsExecute(mapping, form, request, response);\n\t\t}\n\t\telse if (portletRequest instanceof RenderRequest) {\n\t\t\treturn render(\n\t\t\t\tmapping, form, portletConfig, (RenderRequest)portletRequest,\n\t\t\t\t(RenderResponse)portletResponse);\n\t\t}\n\t\telse {\n\t\t\tserveResource(\n\t\t\t\tmapping, form, portletConfig, (ResourceRequest)portletRequest,\n\t\t\t\t(ResourceResponse)portletResponse);\n\n\t\t\treturn mapping.findForward(ActionConstants.COMMON_NULL);\n\t\t}\n\t}","id":39767,"modified_method":"@Override\n\tpublic ActionForward execute(\n\t\t\tActionMapping mapping, ActionForm form, HttpServletRequest request,\n\t\t\tHttpServletResponse response)\n\t\tthrows Exception {\n\n\t\tPortletConfig portletConfig = (PortletConfig)request.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_CONFIG);\n\n\t\tPortletRequest portletRequest = (PortletRequest)request.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_REQUEST);\n\n\t\tPortletResponse portletResponse = (PortletResponse)request.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_RESPONSE);\n\n\t\tBoolean strutsExecute = (Boolean)request.getAttribute(\n\t\t\tWebKeys.PORTLET_STRUTS_EXECUTE);\n\n\t\tif ((strutsExecute != null) && strutsExecute.booleanValue()) {\n\t\t\treturn strutsExecute(mapping, form, request, response);\n\t\t}\n\t\telse if (portletRequest instanceof RenderRequest) {\n\t\t\treturn render(\n\t\t\t\tmapping, form, portletConfig, (RenderRequest)portletRequest,\n\t\t\t\t(RenderResponse)portletResponse);\n\t\t}\n\t\telse {\n\t\t\tif (portletRequest instanceof EventRequest) {\n\t\t\t\tprocessEvent(\n\t\t\t\t\tmapping, form, portletConfig, (EventRequest)portletRequest,\n\t\t\t\t\t(EventResponse)portletResponse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tserveResource(\n\t\t\t\t\tmapping, form, portletConfig,\n\t\t\t\t\t(ResourceRequest)portletRequest,\n\t\t\t\t\t(ResourceResponse)portletResponse);\n\t\t\t}\n\n\t\t\treturn mapping.findForward(ActionConstants.COMMON_NULL);\n\t\t}\n\t}","commit_id":"cd9221d9dc2c1f1dac3ef4412c07b40fbb09e261","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static EditorFragmentComponent createEditorFragmentComponent(Editor editor,\n                                                                      int startLine,\n                                                                      int endLine,\n                                                                      boolean showFolding,\n                                                                      boolean showGutter,\n                                                                      Pair<RangeHighlighter, int[]>... highlighters) {\n    final EditorEx editorEx = (EditorEx)editor;\n    final Color old = editorEx.getBackgroundColor();\n    Color backColor = getBackgroundColor(editor);\n    editorEx.setBackgroundColor(backColor);\n    EditorFragmentComponent fragmentComponent = new EditorFragmentComponent(editorEx, startLine, endLine,\n                                                                            showFolding, showGutter, highlighters);\n    fragmentComponent.setBackground(backColor);\n\n    editorEx.setBackgroundColor(old);\n    return fragmentComponent;\n  }","id":39768,"modified_method":"public static EditorFragmentComponent createEditorFragmentComponent(Editor editor,\n                                                                      int startLine,\n                                                                      int endLine,\n                                                                      boolean showFolding, boolean showGutter) {\n    final EditorEx editorEx = (EditorEx)editor;\n    final Color old = editorEx.getBackgroundColor();\n    Color backColor = getBackgroundColor(editor);\n    editorEx.setBackgroundColor(backColor);\n    EditorFragmentComponent fragmentComponent = new EditorFragmentComponent(editorEx, startLine, endLine,\n                                                                            showFolding, showGutter);\n    fragmentComponent.setBackground(backColor);\n\n    editorEx.setBackgroundColor(old);\n    return fragmentComponent;\n  }","commit_id":"c1545b51b2981b32481ecf4e02b5bd07f8b09d82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * @param hideByAnyKey\n   * @param x <code>x<\/code> coordinate in layered pane coordinate system.\n   * @param y <code>y<\/code> coordinate in layered pane coordinate system.\n   */\n  @Nullable\n  public static LightweightHint showEditorFragmentHintAt(Editor editor,\n                                                         TextRange range,\n                                                         int x,\n                                                         int y,\n                                                         boolean showUpward,\n                                                         boolean showFolding,\n                                                         boolean hideByAnyKey,\n                                                         Pair<RangeHighlighter, int[]>... highlighters) {\n    if (ApplicationManager.getApplication().isUnitTestMode()) return null;\n    Document document = editor.getDocument();\n\n    int startOffset = range.getStartOffset();\n    int startLine = document.getLineNumber(startOffset);\n    CharSequence text = document.getCharsSequence();\n    // There is a possible case that we have a situation like below:\n    //    line 1\n    //    line 2 <fragment start>\n    //    line 3<fragment end>\n    // We don't want to include 'line 2' to the target fragment then.\n    boolean incrementLine = false;\n    for (int offset = startOffset, max = Math.min(range.getEndOffset(), text.length()); offset < max; offset++) {\n      char c = text.charAt(offset);\n      incrementLine = StringUtil.isWhiteSpace(c);\n      if (!incrementLine || c == '\\n') {\n        break;\n      } \n    }\n    if (incrementLine) {\n      startLine++;\n    } \n    \n    int endLine = Math.min(document.getLineNumber(range.getEndOffset()) + 1, document.getLineCount() - 1);\n\n    //if (editor.logicalPositionToXY(new LogicalPosition(startLine, 0)).y >= editor.logicalPositionToXY(new LogicalPosition(endLine, 0)).y) return null;\n    if (startLine >= endLine) return null;\n\n    EditorFragmentComponent fragmentComponent = createEditorFragmentComponent(editor, startLine, endLine, showFolding, true, highlighters);\n\n\n    if (showUpward) {\n      y -= fragmentComponent.getPreferredSize().height + 10;\n      y  = Math.max(0,y);\n    }\n\n    final JComponent c = editor.getComponent();\n    x = SwingUtilities.convertPoint(c, new Point(-3,0), UIUtil.getRootPane(c)).x; //IDEA-68016\n\n    Point p = new Point(x, y);\n    LightweightHint hint = new MyComponentHint(fragmentComponent);\n    HintManagerImpl.getInstanceImpl().showEditorHint(hint, editor, p, (hideByAnyKey ? HintManager.HIDE_BY_ANY_KEY : 0) |\n                                                                      HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_MOUSEOVER,\n                                                     0, false, new HintHint(editor, p));\n    return hint;\n  }","id":39769,"modified_method":"/**\n   * @param hideByAnyKey\n   * @param x <code>x<\/code> coordinate in layered pane coordinate system.\n   * @param y <code>y<\/code> coordinate in layered pane coordinate system.\n   */\n  @Nullable\n  public static LightweightHint showEditorFragmentHintAt(Editor editor,\n                                                         TextRange range,\n                                                         int x,\n                                                         int y,\n                                                         boolean showUpward,\n                                                         boolean showFolding,\n                                                         boolean hideByAnyKey) {\n    if (ApplicationManager.getApplication().isUnitTestMode()) return null;\n    Document document = editor.getDocument();\n\n    int startOffset = range.getStartOffset();\n    int startLine = document.getLineNumber(startOffset);\n    CharSequence text = document.getCharsSequence();\n    // There is a possible case that we have a situation like below:\n    //    line 1\n    //    line 2 <fragment start>\n    //    line 3<fragment end>\n    // We don't want to include 'line 2' to the target fragment then.\n    boolean incrementLine = false;\n    for (int offset = startOffset, max = Math.min(range.getEndOffset(), text.length()); offset < max; offset++) {\n      char c = text.charAt(offset);\n      incrementLine = StringUtil.isWhiteSpace(c);\n      if (!incrementLine || c == '\\n') {\n        break;\n      } \n    }\n    if (incrementLine) {\n      startLine++;\n    } \n    \n    int endLine = Math.min(document.getLineNumber(range.getEndOffset()) + 1, document.getLineCount() - 1);\n\n    //if (editor.logicalPositionToXY(new LogicalPosition(startLine, 0)).y >= editor.logicalPositionToXY(new LogicalPosition(endLine, 0)).y) return null;\n    if (startLine >= endLine) return null;\n\n    EditorFragmentComponent fragmentComponent = createEditorFragmentComponent(editor, startLine, endLine, showFolding, true);\n\n\n    if (showUpward) {\n      y -= fragmentComponent.getPreferredSize().height + 10;\n      y  = Math.max(0,y);\n    }\n\n    final JComponent c = editor.getComponent();\n    x = SwingUtilities.convertPoint(c, new Point(-3,0), UIUtil.getRootPane(c)).x; //IDEA-68016\n\n    Point p = new Point(x, y);\n    LightweightHint hint = new MyComponentHint(fragmentComponent);\n    HintManagerImpl.getInstanceImpl().showEditorHint(hint, editor, p, (hideByAnyKey ? HintManager.HIDE_BY_ANY_KEY : 0) |\n                                                                      HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_MOUSEOVER,\n                                                     0, false, new HintHint(editor, p));\n    return hint;\n  }","commit_id":"c1545b51b2981b32481ecf4e02b5bd07f8b09d82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private EditorFragmentComponent(EditorEx editor, int startLine, int endLine, boolean showFolding, boolean showGutter, Pair<RangeHighlighter, int[]>... highlighters) {\n    editor.setPurePaintingMode(true);\n    try {\n      doInit(editor, startLine, endLine, showFolding, showGutter, highlighters);\n    }\n    finally {\n      editor.setPurePaintingMode(false);\n    }\n  }","id":39770,"modified_method":"private EditorFragmentComponent(EditorEx editor, int startLine, int endLine, boolean showFolding, boolean showGutter) {\n    editor.setPurePaintingMode(true);\n    try {\n      doInit(editor, startLine, endLine, showFolding, showGutter);\n    }\n    finally {\n      editor.setPurePaintingMode(false);\n    }\n  }","commit_id":"c1545b51b2981b32481ecf4e02b5bd07f8b09d82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doInit(final EditorEx editor, final int startLine, final int endLine, boolean showFolding, boolean showGutter, final Pair<RangeHighlighter, int[]>... highlighters) {\n    final Document doc = editor.getDocument();\n    final int endOffset = endLine < doc.getLineCount() ? doc.getLineEndOffset(endLine) : doc.getTextLength();\n    final int textImageWidth = Math.min(editor.getMaxWidthInRange(doc.getLineStartOffset(startLine), endOffset), ScreenUtil\n      .getScreenRectangle(1, 1).width);\n    LOG.assertTrue(textImageWidth > 0, \"TextWidth: \"+textImageWidth+\"; startLine:\" + startLine + \"; endLine:\" + endLine + \";\");\n\n    FoldingModelEx foldingModel = editor.getFoldingModel();\n    boolean isFoldingEnabled = foldingModel.isFoldingEnabled();\n    if (!showFolding) {\n      foldingModel.setFoldingEnabled(false);\n    }\n\n    Point p1 = editor.logicalPositionToXY(new LogicalPosition(startLine, 0));\n    Point p2 = editor.logicalPositionToXY(new LogicalPosition(Math.max(endLine, startLine + 1), 0));\n    final int y1 = p1.y;\n    int y2 = p2.y;\n    final int textImageHeight = y2 - y1 == 0 ? editor.getLineHeight() : y2 - y1;\n    LOG.assertTrue(textImageHeight > 0, \"Height: \" + textImageHeight + \"; startLine:\" + startLine + \"; endLine:\" + endLine + \"; p1:\" + p1 + \"; p2:\" + p2);\n\n    int savedScrollOffset = editor.getScrollingModel().getHorizontalScrollOffset();\n    if (savedScrollOffset > 0) {\n      editor.stopOptimizedScrolling();\n      editor.getScrollingModel().scrollHorizontally(0);\n    }\n\n    final BufferedImage textImage = UIUtil.createImage(textImageWidth, textImageHeight, BufferedImage.TYPE_INT_RGB);\n    Graphics textGraphics = textImage.getGraphics();\n    UISettings.setupAntialiasing(textGraphics);\n\n    final JComponent rowHeader;\n    final BufferedImage markersImage;\n    final int markersImageWidth;\n\n    if (showGutter) {\n      rowHeader = editor.getGutterComponentEx();\n      markersImageWidth = Math.max(1, rowHeader.getWidth());\n\n      markersImage = UIUtil.createImage(markersImageWidth, textImageHeight, BufferedImage.TYPE_INT_RGB);\n      Graphics markerGraphics = markersImage.getGraphics();\n      UISettings.setupAntialiasing(markerGraphics);\n\n      markerGraphics.translate(0, -y1);\n      markerGraphics.setClip(0, y1, rowHeader.getWidth(), textImageHeight);\n      markerGraphics.setColor(getBackgroundColor(editor));\n      markerGraphics.fillRect(0, y1, rowHeader.getWidth(), textImageHeight);\n      rowHeader.paint(markerGraphics);\n    }\n    else {\n      markersImageWidth = 0;\n      rowHeader = null;\n      markersImage = null;\n    }\n\n    textGraphics.translate(0, -y1);\n    textGraphics.setClip(0, y1, textImageWidth, textImageHeight);\n    final boolean wasVisible = editor.setCaretVisible(false);\n    editor.getContentComponent().paint(textGraphics);\n    if (wasVisible) {\n      editor.setCaretVisible(true);\n    }\n\n    if (!showFolding) {\n      foldingModel.setFoldingEnabled(isFoldingEnabled);\n    }\n\n    if (savedScrollOffset > 0) {\n      editor.stopOptimizedScrolling();\n      editor.getScrollingModel().scrollHorizontally(savedScrollOffset);\n    }\n\n    final JComponent component = new JComponent() {\n      private static final int R = 6;\n      @Override\n      public Dimension getPreferredSize() {\n        return new Dimension(textImageWidth + markersImageWidth, textImageHeight);\n      }\n\n      @Override\n      protected void paintComponent(Graphics g) {\n        Graphics2D graphics = (Graphics2D)g;\n        if (markersImage != null) {\n          UIUtil.drawImage(graphics, markersImage, 0, 0, null);\n          UIUtil.drawImage(graphics, textImage, rowHeader.getWidth(), 0, null);\n        }\n        else {\n          UIUtil.drawImage(graphics, textImage, 0, 0, null);\n        }\n\n        if (highlighters.length == 0 || !ApplicationManager.getApplication().isInternal()) return;\n\n        List<Pair<RangeHighlighter, int[]>> list = Arrays.asList(highlighters);\n        Collections.sort(list, new Comparator<Pair<RangeHighlighter, int[]>>() {\n          public int compare(Pair<RangeHighlighter, int[]> p1, Pair<RangeHighlighter, int[]> p2) {\n            LogicalPosition startPos1 = editor.offsetToLogicalPosition(p1.getSecond()[0]);\n            LogicalPosition startPos2 = editor.offsetToLogicalPosition(p2.getSecond()[0]);\n            if (startPos1.line != startPos2.line) return 0;\n            return startPos1.column - startPos2.column;\n          }\n        });\n        Map<Integer, Integer> rightEdges = new HashMap<Integer, Integer>();\n        for (Pair<RangeHighlighter, int[]> highlightInfo : list) {\n          RangeHighlighter highlighter = highlightInfo.getFirst();\n          int hStartOffset = highlightInfo.getSecond()[0];\n          int hEndOffset = highlightInfo.getSecond()[1];\n          Object tooltip = highlighter.getErrorStripeTooltip();\n          if (tooltip == null) continue;\n          String s = String.valueOf(tooltip);\n          if (s.isEmpty()) continue;\n          final int endOffset2 = endLine - 1 < doc.getLineCount() ? doc.getLineEndOffset(endLine - 1) : doc.getTextLength();\n          if (hEndOffset < doc.getLineStartOffset(startLine)) continue;\n          if (hStartOffset > endOffset2 || doc.getLineNumber(hStartOffset) > endLine) continue;\n\n          LogicalPosition logicalPosition = editor.offsetToLogicalPosition(hStartOffset);\n          Point placeToShow = editor.logicalPositionToXY(logicalPosition);\n          placeToShow.y -= (y1 - editor.getLineHeight() * 3 / 2);\n          if (markersImage != null) {\n            placeToShow.x += rowHeader.getWidth();\n          }\n\n          int w = graphics.getFontMetrics().stringWidth(s);\n          int a = graphics.getFontMetrics().getAscent();\n          int h = editor.getLineHeight();\n\n          Integer rightEdge = rightEdges.get(logicalPosition.line);\n          if (rightEdge == null) rightEdge = 0;\n          placeToShow.x = Math.max(placeToShow.x, rightEdge);\n          rightEdge  = Math.max(rightEdge, placeToShow.x + w + 3 * R);\n          rightEdges.put(logicalPosition.line, rightEdge);\n\n          GraphicsUtil.setupAAPainting(graphics);\n          graphics.setColor(MessageType.WARNING.getPopupBackground());\n          graphics.fillRoundRect(placeToShow.x - R, placeToShow.y - a, w + 2 * R, h, R, R);\n          graphics.setColor(new JBColor(JBColor.GRAY, Gray._200));\n          graphics.drawRoundRect(placeToShow.x - R, placeToShow.y - a, w + 2 * R, h, R, R);\n          graphics.setColor(JBColor.foreground());\n          graphics.drawString(s, placeToShow.x, placeToShow.y + 2);\n        }\n      }\n    };\n\n    setLayout(new GridLayout(1, 1));\n    add(component);\n\n    final Color borderColor = editor.getColorsScheme().getColor(EditorColors.SELECTED_TEARLINE_COLOR);\n\n    Border outsideBorder = BorderFactory.createLineBorder(borderColor, 1);\n    Border insideBorder = BorderFactory.createEmptyBorder(2, 2, 2, 2);\n    setBorder(BorderFactory.createCompoundBorder(outsideBorder, insideBorder));\n  }","id":39771,"modified_method":"private void doInit(EditorEx editor, int startLine, int endLine, boolean showFolding, boolean showGutter) {\n    Document doc = editor.getDocument();\n    final int endOffset = endLine < doc.getLineCount() ? doc.getLineEndOffset(endLine) : doc.getTextLength();\n    final int textImageWidth = Math.min(editor.getMaxWidthInRange(doc.getLineStartOffset(startLine), endOffset), ScreenUtil\n      .getScreenRectangle(1, 1).width);\n    LOG.assertTrue(textImageWidth > 0, \"TextWidth: \"+textImageWidth+\"; startLine:\" + startLine + \"; endLine:\" + endLine + \";\");\n\n    FoldingModelEx foldingModel = editor.getFoldingModel();\n    boolean isFoldingEnabled = foldingModel.isFoldingEnabled();\n    if (!showFolding) {\n      foldingModel.setFoldingEnabled(false);\n    }\n\n    Point p1 = editor.logicalPositionToXY(new LogicalPosition(startLine, 0));\n    Point p2 = editor.logicalPositionToXY(new LogicalPosition(Math.max(endLine, startLine + 1), 0));\n    int y1 = p1.y;\n    int y2 = p2.y;\n    final int textImageHeight = y2 - y1 == 0 ? editor.getLineHeight() : y2 - y1;\n    LOG.assertTrue(textImageHeight > 0, \"Height: \" + textImageHeight + \"; startLine:\" + startLine + \"; endLine:\" + endLine + \"; p1:\" + p1 + \"; p2:\" + p2);\n\n    int savedScrollOffset = editor.getScrollingModel().getHorizontalScrollOffset();\n    if (savedScrollOffset > 0) {\n      editor.stopOptimizedScrolling();\n      editor.getScrollingModel().scrollHorizontally(0);\n    }\n\n    final BufferedImage textImage = UIUtil.createImage(textImageWidth, textImageHeight, BufferedImage.TYPE_INT_RGB);\n    Graphics textGraphics = textImage.getGraphics();\n    UISettings.setupAntialiasing(textGraphics);\n\n    final JComponent rowHeader;\n    final BufferedImage markersImage;\n    final int markersImageWidth;\n\n    if (showGutter) {\n      rowHeader = editor.getGutterComponentEx();\n      markersImageWidth = Math.max(1, rowHeader.getWidth());\n\n      markersImage = UIUtil.createImage(markersImageWidth, textImageHeight, BufferedImage.TYPE_INT_RGB);\n      Graphics markerGraphics = markersImage.getGraphics();\n      UISettings.setupAntialiasing(markerGraphics);\n\n      markerGraphics.translate(0, -y1);\n      markerGraphics.setClip(0, y1, rowHeader.getWidth(), textImageHeight);\n      markerGraphics.setColor(getBackgroundColor(editor));\n      markerGraphics.fillRect(0, y1, rowHeader.getWidth(), textImageHeight);\n      rowHeader.paint(markerGraphics);\n    }\n    else {\n      markersImageWidth = 0;\n      rowHeader = null;\n      markersImage = null;\n    }\n\n    textGraphics.translate(0, -y1);\n    textGraphics.setClip(0, y1, textImageWidth, textImageHeight);\n    final boolean wasVisible = editor.setCaretVisible(false);\n    editor.getContentComponent().paint(textGraphics);\n    if (wasVisible) {\n      editor.setCaretVisible(true);\n    }\n\n    if (!showFolding) {\n      foldingModel.setFoldingEnabled(isFoldingEnabled);\n    }\n\n    if (savedScrollOffset > 0) {\n      editor.stopOptimizedScrolling();\n      editor.getScrollingModel().scrollHorizontally(savedScrollOffset);\n    }\n\n    JComponent component = new JComponent() {\n      @Override\n      public Dimension getPreferredSize() {\n        return new Dimension(textImageWidth + markersImageWidth, textImageHeight);\n      }\n\n      @Override\n      protected void paintComponent(Graphics graphics) {\n        if (markersImage != null) {\n          UIUtil.drawImage(graphics, markersImage, 0, 0, null);\n          UIUtil.drawImage(graphics, textImage, rowHeader.getWidth(), 0, null);\n        }\n        else {\n          UIUtil.drawImage(graphics, textImage, 0, 0, null);\n        }\n      }\n    };\n\n    setLayout(new BorderLayout());\n    add(component);\n\n    final Color borderColor = editor.getColorsScheme().getColor(EditorColors.SELECTED_TEARLINE_COLOR);\n\n    Border outsideBorder = BorderFactory.createLineBorder(borderColor, 1);\n    Border insideBorder = BorderFactory.createEmptyBorder(2, 2, 2, 2);\n    setBorder(BorderFactory.createCompoundBorder(outsideBorder, insideBorder));\n  }","commit_id":"c1545b51b2981b32481ecf4e02b5bd07f8b09d82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void mouseMoved(MouseEvent e) {\n      EditorImpl.MyScrollBar scrollBar = myEditor.getVerticalScrollBar();\n      int buttonHeight = scrollBar.getDecScrollButtonHeight();\n      int lineCount = getDocument().getLineCount() + myEditor.getSettings().getAdditionalLinesCount();\n      if (lineCount == 0) {\n        return;\n      }\n\n      if (e.getY() < buttonHeight && myErrorStripeRenderer != null) {\n        showTrafficLightTooltip(e);\n        return;\n      }\n\n      if (showToolTipByMouseMove(e, getWidth())) {\n        scrollbar.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n        return;\n      }\n\n      cancelMyToolTips(e, false);\n\n      if (scrollbar.getCursor().equals(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR))) {\n        scrollbar.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n      }\n    }","id":39772,"modified_method":"@Override\n    public void mouseMoved(MouseEvent e) {\n      EditorImpl.MyScrollBar scrollBar = myEditor.getVerticalScrollBar();\n      int buttonHeight = scrollBar.getDecScrollButtonHeight();\n      int lineCount = getDocument().getLineCount() + myEditor.getSettings().getAdditionalLinesCount();\n      if (lineCount == 0) {\n        return;\n      }\n\n      if (e.getY() < buttonHeight && myErrorStripeRenderer != null) {\n        showTrafficLightTooltip(e);\n        return;\n      }\n\n      if (e.getX() > 0 && e.getX() <= getWidth() && showToolTipByMouseMove(e)) {\n        scrollbar.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n        return;\n      }\n\n      cancelMyToolTips(e, false);\n\n      if (scrollbar.getCursor().equals(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR))) {\n        scrollbar.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n      }\n    }","commit_id":"c1545b51b2981b32481ecf4e02b5bd07f8b09d82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void getNearestHighlighters(MarkupModelEx markupModel,\n                                      MouseEvent e,\n                                      final double width,\n                                      final Collection<RangeHighlighter> nearest,\n                                      final boolean isTooltip) {\n    if (0 > e.getX() || e.getX() >= width) return;\n    final int y = e.getY();\n    int startOffset = yPositionToOffset(y - getMinHeight() * (isTooltip ? 1 : 20), true);\n    int endOffset = yPositionToOffset(y + getMinHeight() * (isTooltip ? 1 : 20), false);\n    markupModel.processRangeHighlightersOverlappingWith(startOffset, endOffset, new Processor<RangeHighlighterEx>() {\n      @Override\n      public boolean process(RangeHighlighterEx highlighter) {\n        if (highlighter.getErrorStripeMarkColor() != null) {\n          ProperTextRange range = offsetsToYPositions(highlighter.getStartOffset(), highlighter.getEndOffset());\n          if (y >= range.getStartOffset() - getMinHeight() * (isTooltip ? 2 : 20) &&\n              y <= range.getEndOffset() + getMinHeight() * (isTooltip ? 2 : 20)) {\n            nearest.add(highlighter);\n          }\n        }\n        return true;\n      }\n    });\n  }","id":39773,"modified_method":"private void collectRangeHighlighters(MarkupModelEx markupModel, final int currentLine, final Collection<RangeHighlighterEx> highlighters) {\n    int startOffset = myEditor.getDocument().getLineStartOffset(Math.max(0, currentLine - myPreviewLines));\n    int endOffset = myEditor.getDocument().getLineEndOffset(Math.min(myEditor.getDocument().getLineCount() -1 , currentLine + myPreviewLines));\n    markupModel.processRangeHighlightersOverlappingWith(startOffset, endOffset, new Processor<RangeHighlighterEx>() {\n      @Override\n      public boolean process(RangeHighlighterEx highlighter) {\n        if (highlighter.getErrorStripeMarkColor() != null) {\n          int startLine = offsetToLine(highlighter.getStartOffset(), myEditor.getDocument());\n          int endLine = offsetToLine(highlighter.getStartOffset(), myEditor.getDocument());\n          if (startLine <= currentLine + myPreviewLines && endLine >= currentLine - myPreviewLines) {\n            highlighters.add(highlighter);\n          }\n        }\n        return true;\n      }\n    });\n  }","commit_id":"c1545b51b2981b32481ecf4e02b5bd07f8b09d82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doClick(final MouseEvent e, final int width) {\n    RangeHighlighter marker = getNearestRangeHighlighter(e, width);\n    if (marker == null) return;\n    int offset = marker.getStartOffset();\n\n    final Document doc = myEditor.getDocument();\n    if (doc.getLineCount() > 0) {\n      // Necessary to expand folded block even if navigating just before one\n      // Very useful when navigating to first unused import statement.\n      int lineEnd = doc.getLineEndOffset(doc.getLineNumber(offset));\n      myEditor.getCaretModel().moveToOffset(lineEnd);\n    }\n\n    myEditor.getCaretModel().moveToOffset(offset);\n    myEditor.getSelectionModel().removeSelection();\n    ScrollingModel scrollingModel = myEditor.getScrollingModel();\n    scrollingModel.disableAnimation();\n    scrollingModel.scrollToCaret(ScrollType.CENTER);\n    scrollingModel.enableAnimation();\n    fireErrorMarkerClicked(marker, e);\n  }","id":39774,"modified_method":"private void doClick(final MouseEvent e) {\n    RangeHighlighter marker = getNearestRangeHighlighter(e);\n    int offset;\n    if (marker == null) {\n      if (myEditorPreviewIsShown) {\n        offset = myEditor.getDocument().getLineStartOffset(getLineByEvent(e));\n      } else {\n        return;\n      }\n    } else {\n      offset = marker.getStartOffset();\n    }\n\n    final Document doc = myEditor.getDocument();\n    if (doc.getLineCount() > 0) {\n      // Necessary to expand folded block even if navigating just before one\n      // Very useful when navigating to first unused import statement.\n      int lineEnd = doc.getLineEndOffset(doc.getLineNumber(offset));\n      myEditor.getCaretModel().moveToOffset(lineEnd);\n    }\n\n    myEditor.getCaretModel().moveToOffset(offset);\n    myEditor.getSelectionModel().removeSelection();\n    ScrollingModel scrollingModel = myEditor.getScrollingModel();\n    scrollingModel.disableAnimation();\n    scrollingModel.scrollToCaret(ScrollType.CENTER);\n    scrollingModel.enableAnimation();\n    fireErrorMarkerClicked(marker, e);\n  }","commit_id":"c1545b51b2981b32481ecf4e02b5bd07f8b09d82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void getNearestHighlighters(MarkupModelEx markupModel,\n                                      MouseEvent e,\n                                      final double width,\n                                      final Collection<RangeHighlighter> nearest) {\n    getNearestHighlighters(markupModel, e, width, nearest, true);\n  }","id":39775,"modified_method":"private void getNearestHighlighters(MarkupModelEx markupModel,\n                                      final int y,\n                                      final Collection<RangeHighlighter> nearest) {\n    int startOffset = yPositionToOffset(y - getMinHeight(), true);\n    int endOffset = yPositionToOffset(y + getMinHeight(), false);\n    markupModel.processRangeHighlightersOverlappingWith(startOffset, endOffset, new Processor<RangeHighlighterEx>() {\n      @Override\n      public boolean process(RangeHighlighterEx highlighter) {\n        if (highlighter.getErrorStripeMarkColor() != null) {\n          ProperTextRange range = offsetsToYPositions(highlighter.getStartOffset(), highlighter.getEndOffset());\n          if (y >= range.getStartOffset() - getMinHeight() * 2 &&\n              y <= range.getEndOffset() + getMinHeight() * 2) {\n            nearest.add(highlighter);\n          }\n        }\n        return true;\n      }\n    });\n  }","commit_id":"c1545b51b2981b32481ecf4e02b5bd07f8b09d82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private RangeHighlighter getNearestRangeHighlighter(final MouseEvent e, final int width) {\n    List<RangeHighlighter> highlighters = new ArrayList<RangeHighlighter>();\n    getNearestHighlighters(this, e, width, highlighters);\n    getNearestHighlighters((MarkupModelEx)DocumentMarkupModel.forDocument(myEditor.getDocument(), myEditor.getProject(), true), e, width,\n                           highlighters);\n    RangeHighlighter nearestMarker = null;\n    int yPos = 0;\n    for (RangeHighlighter highlighter : highlighters) {\n      final int newYPos = offsetsToYPositions(highlighter.getStartOffset(), highlighter.getEndOffset()).getStartOffset();\n\n      if (nearestMarker == null || Math.abs(yPos - e.getY()) > Math.abs(newYPos - e.getY())) {\n        nearestMarker = highlighter;\n        yPos = newYPos;\n      }\n    }\n    return nearestMarker;\n  }","id":39776,"modified_method":"@Nullable\n  private RangeHighlighter getNearestRangeHighlighter(final MouseEvent e) {\n    List<RangeHighlighter> highlighters = new ArrayList<RangeHighlighter>();\n    getNearestHighlighters(this, e.getY(), highlighters);\n    getNearestHighlighters((MarkupModelEx)DocumentMarkupModel.forDocument(myEditor.getDocument(), myEditor.getProject(), true), e.getY(),\n                           highlighters);\n    RangeHighlighter nearestMarker = null;\n    int yPos = 0;\n    for (RangeHighlighter highlighter : highlighters) {\n      final int newYPos = offsetsToYPositions(highlighter.getStartOffset(), highlighter.getEndOffset()).getStartOffset();\n\n      if (nearestMarker == null || Math.abs(yPos - e.getY()) > Math.abs(newYPos - e.getY())) {\n        nearestMarker = highlighter;\n        yPos = newYPos;\n      }\n    }\n    return nearestMarker;\n  }","commit_id":"c1545b51b2981b32481ecf4e02b5bd07f8b09d82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean showToolTipByMouseMove(final MouseEvent e, final double width) {\n    MouseEvent me = e;\n\n    Set<RangeHighlighter> highlighters = new THashSet<RangeHighlighter>();\n\n    getNearestHighlighters(this, me, width, highlighters);\n    getNearestHighlighters((MarkupModelEx)DocumentMarkupModel.forDocument(myEditor.getDocument(), getEditor().getProject(), true), me,\n                           width, highlighters);\n\n    int minDelta = Integer.MAX_VALUE;\n    int y = e.getY();\n\n    for (RangeHighlighter each : highlighters) {\n      ProperTextRange range = offsetsToYPositions(each.getStartOffset(), each.getEndOffset());\n      int eachStartY = range.getStartOffset();\n      int eachEndY = range.getEndOffset();\n      int eachY = eachStartY + (eachEndY - eachStartY) / 2;\n      if (Math.abs(e.getY() - eachY) < minDelta) {\n        y = eachY;\n      }\n    }\n\n    me = new MouseEvent((Component)e.getSource(), e.getID(), e.getWhen(), e.getModifiers(), e.getX(), y + 1, e.getClickCount(),\n                        e.isPopupTrigger());\n\n    boolean bigEditorView = false;\n    TooltipRenderer bigRenderer = null;\n\n    if (ApplicationManager.getApplication().isInternal()){\n      int line = myEditor.offsetToLogicalLine(yPositionToOffset(y, true));\n      int startOffset = myEditor.logicalPositionToOffset(new LogicalPosition(Math.max(0, line - getMinHeight()), 0));\n      LogicalPosition endPosition = new LogicalPosition(Math.max(0, line + getMinHeight()), 0);\n      int endOffset = myEditor.logicalPositionToOffset(endPosition);\n      Rectangle rect = myEditor.getScrollingModel().getVisibleArea();\n      Point point = myEditor.visualPositionToXY(myEditor.offsetToVisualPosition(startOffset));\n      bigEditorView = !rect.contains(point);\n      if (bigEditorView) {\n        getNearestHighlighters(this, me, width, highlighters, false);\n        getNearestHighlighters((MarkupModelEx)DocumentMarkupModel.forDocument(myEditor.getDocument(), getEditor().getProject(), true), me,\n                               width, highlighters, false);\n        bigRenderer = new MyTooltipRenderer(new DocumentFragment(myEditor.getDocument(), startOffset, endOffset), highlighters);\n      }\n    }\n\n    if (!bigEditorView) {\n      if (highlighters.isEmpty()) return false;\n      bigRenderer = myTooltipRendererProvider.calcTooltipRenderer(highlighters);\n    }\n\n    if (bigRenderer != null) {\n      showTooltip(me, bigRenderer, new HintHint(me).setAwtTooltip(true).setPreferredPosition(Balloon.Position.atLeft));\n      return true;\n    }\n    return false;\n  }","id":39777,"modified_method":"private boolean showToolTipByMouseMove(final MouseEvent e) {\n    MouseEvent me = e;\n\n    final int line = getLineByEvent(e);\n    Rectangle area = myEditor.getScrollingModel().getVisibleArea();\n    //int realY = (int)(((float)e.getY() / e.getComponent().getHeight()) * myEditor.getContentComponent().getHeight());\n    int realY = myEditor.getLineHeight() * line;\n    boolean isVisible = area.contains(area.x, realY);//area.y < realY && area.y + area.height > realY;\n\n    TooltipRenderer bigRenderer;\n    if (!ApplicationManager.getApplication().isInternal() || isVisible) {\n      final Set<RangeHighlighter> highlighters = new THashSet<RangeHighlighter>();\n      getNearestHighlighters(this, me.getY(), highlighters);\n      getNearestHighlighters((MarkupModelEx)DocumentMarkupModel.forDocument(myEditor.getDocument(), getEditor().getProject(), true), me.getY(), highlighters);\n\n      int minDelta = Integer.MAX_VALUE;\n      int y = e.getY();\n\n      for (RangeHighlighter each : highlighters) {\n        ProperTextRange range = offsetsToYPositions(each.getStartOffset(), each.getEndOffset());\n        int eachStartY = range.getStartOffset();\n        int eachEndY = range.getEndOffset();\n        int eachY = eachStartY + (eachEndY - eachStartY) / 2;\n        if (Math.abs(e.getY() - eachY) < minDelta) {\n          y = eachY;\n        }\n      }\n\n\n      me = new MouseEvent(e.getComponent(), e.getID(), e.getWhen(), e.getModifiers(), e.getX(), y + 1, e.getClickCount(),\n                          e.isPopupTrigger());\n\n      if (highlighters.isEmpty()) return false;\n      bigRenderer = myTooltipRendererProvider.calcTooltipRenderer(highlighters);\n    } else {\n      final List<RangeHighlighterEx> highlighters = new ArrayList<RangeHighlighterEx>();\n      collectRangeHighlighters(this, line, highlighters);\n      collectRangeHighlighters((MarkupModelEx)DocumentMarkupModel.forDocument(myEditor.getDocument(), getEditor().getProject(), true), line,\n                               highlighters);\n      bigRenderer = new EditorFragmentRenderer(line, highlighters, e.getX());\n    }\n\n    if (bigRenderer != null) {\n      showTooltip(me, bigRenderer, new HintHint(me).setAwtTooltip(true).setPreferredPosition(Balloon.Position.atLeft));\n      return true;\n    }\n    return false;\n  }","commit_id":"c1545b51b2981b32481ecf4e02b5bd07f8b09d82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doMouseClicked(MouseEvent e) {\n      myEditor.getContentComponent().requestFocus();\n      int lineCount = getDocument().getLineCount() + myEditor.getSettings().getAdditionalLinesCount();\n      if (lineCount == 0) {\n        return;\n      }\n      doClick(e, getWidth());\n    }","id":39778,"modified_method":"private void doMouseClicked(MouseEvent e) {\n      myEditor.getContentComponent().requestFocus();\n      int lineCount = getDocument().getLineCount() + myEditor.getSettings().getAdditionalLinesCount();\n      if (lineCount == 0) {\n        return;\n      }\n      if (e.getX() > 0 && e.getX() <= getWidth()) {\n        doClick(e);\n      }\n    }","commit_id":"c1545b51b2981b32481ecf4e02b5bd07f8b09d82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected PsiFile createFileCopy(PsiFile file) {\n    final VirtualFile virtualFile = file.getVirtualFile();\n    if (file.isPhysical() && virtualFile != null && virtualFile.getFileSystem() == LocalFileSystem.getInstance()\n        // must not cache injected file copy, since it does not reflect changes in host document\n        && !InjectedLanguageManager.getInstance(file.getProject()).isInjectedFragment(file)) {\n      final SoftReference<PsiFile> reference = file.getUserData(FILE_COPY_KEY);\n      if (reference != null) {\n        final PsiFile copy = reference.get();\n        if (copy != null && copy.isValid() && copy.getClass().equals(file.getClass())) {\n          final Document document = copy.getViewProvider().getDocument();\n          assert document != null;\n          final String oldDocumentText = document.getText();\n          final String oldCopyText = copy.getText();\n          final String newText = file.getText();\n          document.setText(newText);\n          try {\n            PsiDocumentManager.getInstance(copy.getProject()).commitDocument(document);\n            return copy;\n          }\n          catch (Throwable e) {\n            document.setText(\"\");\n            if (((ApplicationEx)ApplicationManager.getApplication()).isInternal()) {\n              LOG.error(\"old text: \" + oldCopyText + \"; new text: \" + newText + \"; old document text: \" + oldDocumentText, e);\n            }\n          }\n        }\n      }\n    }\n\n    final PsiFile copy = (PsiFile)file.copy();\n    file.putUserData(FILE_COPY_KEY, new SoftReference<PsiFile>(copy));\n    return copy;\n  }","id":39779,"modified_method":"protected PsiFile createFileCopy(PsiFile file) {\n    final VirtualFile virtualFile = file.getVirtualFile();\n    if (file.isPhysical() && virtualFile != null && virtualFile.getFileSystem() == LocalFileSystem.getInstance()\n        // must not cache injected file copy, since it does not reflect changes in host document\n        && !InjectedLanguageManager.getInstance(file.getProject()).isInjectedFragment(file)) {\n      final SoftReference<PsiFile> reference = file.getUserData(FILE_COPY_KEY);\n      if (reference != null) {\n        final PsiFile copy = reference.get();\n        if (copy != null && copy.isValid() && copy.getClass().equals(file.getClass())) {\n          final Document document = copy.getViewProvider().getDocument();\n          assert document != null;\n          final String oldDocumentText = document.getText();\n          final String oldCopyText = copy.getText();\n          final String newText = file.getText();\n          document.setText(newText);\n          try {\n            PsiDocumentManager.getInstance(copy.getProject()).commitDocument(document);\n            return copy;\n          }\n          catch (Throwable e) {\n            document.setText(\"\");\n            if (((ApplicationEx)ApplicationManager.getApplication()).isInternal()) {\n              final StringBuilder sb = new StringBuilder();\n              boolean oldsAreSame = Comparing.equal(oldCopyText, oldDocumentText);\n              if (oldsAreSame) {\n                sb.append(\"oldCopyText == oldDocumentText\");\n              }\n              else {\n                sb.append(\"oldCopyText != oldDocumentText\");\n                sb.append(\"\\n--- oldCopyText ------------------------------------------------\\n\").append(oldCopyText);\n                sb.append(\"\\n--- oldDocumentText ------------------------------------------------\\n\").append(oldDocumentText);\n              }\n              if (Comparing.equal(oldCopyText, newText)) {\n                sb.insert(0, \"newText == oldCopyText; \");\n              }\n              else if (!oldsAreSame && Comparing.equal(oldDocumentText, newText)) {\n                sb.insert(0, \"newText == oldDocumentText; \");\n              }\n              else {\n                sb.insert(0, \"newText != oldCopyText, oldDocumentText; \");\n                if (oldsAreSame) {\n                  sb.append(\"\\n--- oldCopyText ------------------------------------------------\\n\").append(oldCopyText);\n                }\n                sb.append(\"\\n--- newText ------------------------------------------------\\n\").append(newText);\n              }\n              LOG.error(sb.toString(), e);\n            }\n          }\n        }\n      }\n    }\n\n    final PsiFile copy = (PsiFile)file.copy();\n    file.putUserData(FILE_COPY_KEY, new SoftReference<PsiFile>(copy));\n    return copy;\n  }","commit_id":"0414b3537896e3a3456358bf79d809a00d93e0f9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean equals(final Object o) {\n    if (this == o) return true;\n    if (!(o instanceof PhysicalDomParentStrategy)) return false;\n\n    final XmlElement thatElement = ((PhysicalDomParentStrategy)o).myElement;\n    if (xmlElementsEqual(myElement, thatElement)) {\n      if (myElement != thatElement) {\n        //todo remove this assertion before X release\n        final PsiElement nav1 = myElement.getNavigationElement();\n        final PsiElement nav2 = thatElement.getNavigationElement();\n        if (ApplicationManagerEx.getApplicationEx().isInternal() && nav1 != nav2) {\n          PsiElement cur = findIncluder(myElement);\n          PsiElement nav = findIncluder(nav1);\n          throw new AssertionError(myElement.getText() + \"; including=\" + (cur == null ? null : cur.getText()) + \"; nav=\" + (nav == null ? null : nav.getText()));\n        }\n\n        assert nav1 == nav2 : nav1.getContainingFile() +\n                              \":\" +\n                              nav1.getTextRange().getStartOffset() +\n                              \"!=\" +\n                              nav2.getContainingFile() +\n                              \":\" +\n                              nav2.getTextRange().getStartOffset() +\n                              \"; \" +\n                              (nav1 == myElement) +\n                              \";\" +\n                              (nav2 == thatElement);\n      }\n      return true;\n    }\n    return false;\n  }","id":39780,"modified_method":"public boolean equals(final Object o) {\n    if (this == o) return true;\n    if (!(o instanceof PhysicalDomParentStrategy)) return false;\n\n    final XmlElement thatElement = ((PhysicalDomParentStrategy)o).myElement;\n    if (xmlElementsEqual(myElement, thatElement)) {\n      if (myElement != thatElement) {\n        //todo remove this assertion before X release\n        final PsiElement nav1 = myElement.getNavigationElement();\n        final PsiElement nav2 = thatElement.getNavigationElement();\n        if (nav1 != nav2) {\n          if (ApplicationManagerEx.getApplicationEx().isInternal()) {\n            PsiElement cur = findIncluder(myElement);\n            PsiElement nav = findIncluder(nav1);\n            final PsiElement _nav1 = myElement.getNavigationElement();\n            final PsiElement _nav2 = thatElement.getNavigationElement();\n            throw new AssertionError(myElement.getText() + \"; including=\" + (cur == null ? null : cur.getText()) + \"; nav=\" + (nav == null ? null : nav.getText()));\n          }\n\n          throw new AssertionError(nav1.getContainingFile() +\n                                \":\" +\n                                nav1.getTextRange().getStartOffset() +\n                                \"!=\" +\n                                nav2.getContainingFile() +\n                                \":\" +\n                                nav2.getTextRange().getStartOffset() +\n                                \"; \" +\n                                (nav1 == myElement) +\n                                \";\" +\n                                (nav2 == thatElement));\n        }\n      }\n      return true;\n    }\n    return false;\n  }","commit_id":"36bf6e8f1b91dc3ba95c8a925bde9b6a9542d665","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected  final double [] getSearchDirection(final double [] gradient) {\n      double [] alpha = MemoryManager.malloc8d(_m);\n      double [] q = gradient.clone();\n      for (int i = 1; i <= Math.min(_k,_m); ++i) {\n        alpha[i-1] = rho(-i) * ArrayUtils.innerProduct(getS(-i), q);\n        MathUtils.wadd(q, getY( - i), -alpha[i - 1]);\n      }\n      if(_k > 0) {\n        final double [] s = getS(-1);\n        final double [] y = getY(-1);\n        double Hk0 = ArrayUtils.innerProduct(s,y) / ArrayUtils.innerProduct(y, y);\n        ArrayUtils.mult(q, Hk0);\n      }\n      for (int i = Math.min(_k,_m); i > 0; --i) {\n        double beta = rho(-i)*ArrayUtils.innerProduct(getY(-i),q);\n        MathUtils.wadd(q,getS(-i),alpha[i-1]-beta);\n      }\n      return ArrayUtils.mult(q,-1);\n    }","id":39781,"modified_method":"protected  final double [] getSearchDirection(final double [] gradient, double [] q) {\n      System.arraycopy(gradient,0,q,0,q.length);\n      if(_k != 0) {\n        int k = Math.min(_k,_m);\n        for (int i = 1; i <= k; ++i) {\n          int id = getId(-i);\n          _alpha[id] = _rho[id] * ArrayUtils.innerProduct(_s[id], q);\n          MathUtils.wadd(q, _y[id], -_alpha[id]);\n        }\n        int lastId = getId(-1);\n        final double[] y = _y[lastId];\n        double Hk0 = -1.0 / (ArrayUtils.innerProduct(y, y) * _rho[lastId]);\n        ArrayUtils.mult(q, Hk0);\n        for (int i = k; i > 0; --i) {\n          int id = getId(-i);\n          double beta = _rho[id] * ArrayUtils.innerProduct(_y[id], q);\n          MathUtils.wadd(q, _s[id], -_alpha[id] - beta);\n        }\n      } else ArrayUtils.mult(q,-1);\n      return q;\n    }","commit_id":"69e541ff44b2042e258360cd7a14f72c0a1f409e","url":"https://github.com/h2oai/h2o-3"},{"original_method":"private final void update(double [] pk, double [] gNew, double [] gOld){\n      int id = _k % _m;\n      final double[] gradDiff = _y[id];\n      for (int i = 0; i < gNew.length; ++i)\n        gradDiff[i] = gNew[i] - gOld[i];\n      System.arraycopy(pk,0,_s[id],0,pk.length);\n      _rho[id] = 1.0/ArrayUtils.innerProduct(_s[id],_y[id]);\n      ++_k;\n    }","id":39782,"modified_method":"private final void update(double [] pk, double [] gNew, double [] gOld){\n      int id = getId(0);\n      double[] y = _y[id];\n      double[] s = _s[id];\n      for (int i = 0; i < gNew.length; ++i)\n        y[i] = gNew[i] - gOld[i];\n      System.arraycopy(pk,0,s,0,pk.length);\n      _rho[id] = 1.0/ArrayUtils.innerProduct(s,y);\n      ++_k;\n    }","commit_id":"69e541ff44b2042e258360cd7a14f72c0a1f409e","url":"https://github.com/h2oai/h2o-3"},{"original_method":"double [] getS(int k){ return _s[(_k + k) % _m];}","id":39783,"modified_method":"int getId(int k) {return (_k + k) % _m;}","commit_id":"69e541ff44b2042e258360cd7a14f72c0a1f409e","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/**\n   * Solve the optimization problem defined by the user-supplied gradient function using L-BFGS algorithm.\n   *\n   * Will result into multiple (10s to 100s or even 1000s) calls of the user-provided gradient function.\n   * Outside of that it does only limited single threaded computation (order of number of coefficients).\n   * The gradient is likely to be the most expensive part and key for good perfomance.\n   *\n   * @param gslvr - user gradient function\n   * @param beta - starting solution\n   * @return Optimal solution (coefficients) + gradient info returned by the user gradient\n   * function evaluated at the found optmimum.\n   */\n  public final Result solve(GradientSolver gslvr, double [] beta, GradientInfo ginfo, ProgressMonitor pm) {\n    if(_hist == null)\n      _hist = new History(_historySz, beta.length);\n    beta = beta.clone();\n    // just loop until good enough or line search can not progress\n    int iter = 0;\n    boolean doLineSearch = true;\n    int ls_switch = 0;\n    double rel_improvement = 1;\n    boolean converged = false;\n    while(pm.progress(beta, ginfo) &&  (iter < _minIter || ArrayUtils.linfnorm(ginfo._gradient,false) > _gradEps  && rel_improvement > _objEps) && iter != _maxIter) {\n      double [] pk = _hist.getSearchDirection(ginfo._gradient);\n      if(ArrayUtils.hasNaNsOrInfs(pk)) {\n        Log.warn(\"LBFGS: Got NaNs in search direction.\");\n        break; //\n      }\n      LineSearchSol ls = null;\n\n      if(doLineSearch) {\n        ls = gslvr.doLineSearch(ginfo, beta, pk, 24, .5);\n        if(ls.step == 1) {\n          if (++ls_switch == 2) {\n            ls_switch = 0;\n            doLineSearch = false;\n          }\n        } else {\n          ls_switch = 0;\n        }\n        if (ls.madeProgress || _hist._k < 2) {\n          ArrayUtils.wadd(beta, pk, ls.step);\n        } else {\n          break; // ls did not make progress => converged\n        }\n      } else  ArrayUtils.add(beta, pk);\n      GradientInfo newGinfo = gslvr.getGradient(beta); // expensive / distributed\n      if(doLineSearch && !(Double.isNaN(ls.objVal) && Double.isNaN(newGinfo._objVal)) && Math.abs(ls.objVal - newGinfo._objVal) > 1e-10*ls.objVal) {\n        throw new IllegalArgumentException(\"L-BFGS: Got invalid gradient solver, objective values from line-search and gradient tasks differ, \" + ls.objVal + \" != \" + newGinfo._objVal + \", step = \" + ls.step);\n      }\n      if(!doLineSearch) //{\n        if(!admissibleStep(1,ginfo._objVal,newGinfo._objVal,pk,ginfo._gradient)) {\n          if(++ls_switch == 2) {\n            doLineSearch = true;\n            ls_switch = 0;\n          }\n          if(ginfo._objVal < newGinfo._objVal && (newGinfo._objVal - ginfo._objVal > _objEps*ginfo._objVal)) {\n            doLineSearch = true;\n            ArrayUtils.subtract(beta,pk,beta);\n            continue;\n          }\n        } else ls_switch = 0;\n      ++iter;\n      _hist.update(pk, newGinfo._gradient, ginfo._gradient);\n      rel_improvement = (ginfo._objVal - newGinfo._objVal)/ginfo._objVal;\n      ginfo = newGinfo;\n    }\n    return new Result(iter < _maxIter || ArrayUtils.linfnorm(ginfo._gradient,false) < _gradEps || rel_improvement < _objEps,iter,beta, ginfo);\n  }","id":39784,"modified_method":"/**\n   * Solve the optimization problem defined by the user-supplied ginfo function using L-BFGS algorithm.\n   *\n   * Will result into multiple (10s to 100s or even 1000s) calls of the user-provided ginfo function.\n   * Outside of that it does only limited single threaded computation (order of number of coefficients).\n   * The ginfo is likely to be the most expensive part and key for good perfomance.\n   *\n   * @param gslvr - user ginfo function\n   * @param beta - starting solution\n   * @return Optimal solution (coefficients) + ginfo info returned by the user ginfo\n   * function evaluated at the found optmimum.\n   */\n  public final Result solve(GradientSolver gslvr, double [] beta, GradientInfo ginfo, ProgressMonitor pm) {\n    if(_hist == null)\n      _hist = new History(_historySz, beta.length);\n    beta = beta.clone();\n    int iter = 0;\n    double rel_improvement = 1;\n    final double [] pk = new double[beta.length];\n    double minStep = 1e-12;\n    double maxStep = 100;\n    _lineSearch = new MoreThuente();\n    while(!ArrayUtils.hasNaNsOrInfs(beta) && (pm.progress(beta, ginfo) && (ArrayUtils.linfnorm(ginfo._gradient,false) > _gradEps  && rel_improvement > _objEps) && iter != _maxIter)) {\n      ++iter;\n      _hist.getSearchDirection(ginfo._gradient,pk);\n      if(!_lineSearch.evaluate(gslvr,ginfo,beta,pk,minStep,maxStep,20)) {\n        break;\n      }\n      _lineSearch.setInitialStep(Math.max(10 * minStep, _lineSearch.step()));\n      ArrayUtils.add(beta,ArrayUtils.mult(pk,_lineSearch.step()));\n      GradientInfo newGinfo = _lineSearch.ginfo();\n      _hist.update(pk, newGinfo._gradient, ginfo._gradient);\n      rel_improvement = (ginfo._objVal - newGinfo._objVal)/ginfo._objVal;\n      ginfo = newGinfo;\n    }\n    return new Result(ArrayUtils.linfnorm(ginfo._gradient,false) < _gradEps,iter,beta, ginfo);\n  }","commit_id":"69e541ff44b2042e258360cd7a14f72c0a1f409e","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public History(int m, int n) {\n      _m = m;\n      _n = n;\n      _s = new double[m][];\n      _y = new double[m][];\n      _rho = MemoryManager.malloc8d(m);\n      Arrays.fill(_rho,Double.NaN);\n      for (int i = 0; i < m; ++i) {\n        _s[i] = MemoryManager.malloc8d(n);\n        Arrays.fill(_s[i], Double.NaN); // to make sure we don't just run with zeros\n        _y[i] = MemoryManager.malloc8d(n);\n        Arrays.fill(_y[i], Double.NaN);\n      }\n    }","id":39785,"modified_method":"public History(int m, int n) {\n      _m = m;\n      _alpha = new double[_m];\n      _n = n;\n      _s = new double[m][];\n      _y = new double[m][];\n      _rho = MemoryManager.malloc8d(m);\n      Arrays.fill(_rho,Double.NaN);\n      for (int i = 0; i < m; ++i) {\n        _s[i] = MemoryManager.malloc8d(n);\n        Arrays.fill(_s[i], Double.NaN); // to make sure we don't just run with zeros\n        _y[i] = MemoryManager.malloc8d(n);\n        Arrays.fill(_y[i], Double.NaN);\n      }\n    }","commit_id":"69e541ff44b2042e258360cd7a14f72c0a1f409e","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override public void callback(final GLMLineSearchTask lst) {\n        assert getCompleter().getPendingCount() <= 1:\"unexpected pending count, expected 1, got \" + getCompleter().getPendingCount();\n        LineSearchSol ls = L_BFGS.doLineSearch(lst._objVals, _taskInfo._ginfo, lst._direction, 1, LINE_SEARCH_STEP);\n        if(ls != null) {\n          LogInfo(\"line search: found admissible step = \" + ls.step + \",  objval = \" + ls.objVal);\n          _taskInfo._params._higher_accuracy = true;\n          getCompleter().addToPendingCount(1);\n          double [] beta = ArrayUtils.add(lst._beta, ArrayUtils.mult(lst._direction, ls.step));\n          new GLMIterationTask(_jobKey, _activeData, _taskInfo._params, true, true, true, beta, _taskInfo._ymu, 1.0/ _taskInfo._nobs, _taskInfo._thresholds, new Iteration(getCompleter(),false, ls.step)).asyncExec(_activeData._adaptedFrame);\n          return;\n        }\n      // no line step worked converge\n        if(!_taskInfo._params._higher_accuracy){ // start from scratch\n          _taskInfo._params._higher_accuracy = true;\n          int add2iter = (_iter - _taskInfo._iter);\n          LogInfo(\"Line search failed to progress, rerunning current lambda from scratch with high accuracy on, adding \" + add2iter + \" to max iterations\");\n          _taskInfo._max_iter += add2iter;\n          getCompleter().addToPendingCount(1);\n          new GLMIterationTask(_jobKey,_activeData, _taskInfo._params,true,true,true,contractVec(_taskInfo._beta,_activeCols), _taskInfo._ymu,1.0/ _taskInfo._nobs, _taskInfo._thresholds, new Iteration(getCompleter(),false,1)).asyncExec(_activeData._adaptedFrame);\n          return;\n        }\n        LogInfo(\"Line search did not find feasible step, converged.\");\n        checkKKTAndComplete(_lastResult._beta,true);\n      }","id":39786,"modified_method":"@Override public void callback(final GLMLineSearchTask lst) {\n        assert getCompleter().getPendingCount() <= 1:\"unexpected pending count, expected 1, got \" + getCompleter().getPendingCount();\n        double t = 1;\n        for(int i = 0; i < lst._objVals.length; ++i, t *= LINE_SEARCH_STEP) {\n          if(L_BFGS.admissibleStep(t, _taskInfo._ginfo._objVal, lst._objVals[i], lst._direction, _taskInfo._ginfo._gradient)){\n            LogInfo(\"line search: found admissible step = \" + t + \",  objval = \" + lst._objVals[i]);\n            _taskInfo._params._higher_accuracy = true;\n            getCompleter().addToPendingCount(1);\n            double [] beta = ArrayUtils.wadd(lst._beta, lst._direction, t);\n            new GLMIterationTask(_jobKey, _activeData, _taskInfo._params, true, true, true, beta, _taskInfo._ymu, 1.0/ _taskInfo._nobs, _taskInfo._thresholds, new Iteration(getCompleter(),false, t)).asyncExec(_activeData._adaptedFrame);\n            return;\n          }\n        }\n      // no line step worked => converge\n        if(!_taskInfo._params._higher_accuracy){ // start from scratch\n          _taskInfo._params._higher_accuracy = true;\n          int add2iter = (_iter - _taskInfo._iter);\n          LogInfo(\"Line search failed to progress, rerunning current lambda from scratch with high accuracy on, adding \" + add2iter + \" to max iterations\");\n          _taskInfo._max_iter += add2iter;\n          getCompleter().addToPendingCount(1);\n          new GLMIterationTask(_jobKey,_activeData, _taskInfo._params,true,true,true,contractVec(_taskInfo._beta,_activeCols), _taskInfo._ymu,1.0/ _taskInfo._nobs, _taskInfo._thresholds, new Iteration(getCompleter(),false,1)).asyncExec(_activeData._adaptedFrame);\n          return;\n        }\n        LogInfo(\"Line search did not find feasible step, converged.\");\n        checkKKTAndComplete(_lastResult._beta,true);\n      }","commit_id":"60c7affccb8a937ef1932aeb398212306666ef6d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public GLMGradientSolver(GLMParameters glmp, DataInfo dinfo, double lambda, double ymu, long nobs){\n      _glmp = glmp;\n      _dinfo = dinfo;\n      _ymu = ymu;\n      _nobs = nobs;\n      _lambda = lambda;\n      _step = .75;\n    }","id":39787,"modified_method":"public GLMGradientSolver(GLMParameters glmp, DataInfo dinfo, double lambda, double ymu, long nobs){\n      _glmp = glmp;\n      _dinfo = dinfo;\n      _ymu = ymu;\n      _nobs = nobs;\n      _lambda = lambda;\n    }","commit_id":"60c7affccb8a937ef1932aeb398212306666ef6d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override public void callback(final GLMIterationTask glmt){\n        if(_jobKey != null && !isRunning(_jobKey) )  throw new JobCancelledException();\n        assert _activeCols == null || glmt._beta == null || glmt._beta.length == (_activeCols.length+1):LogInfo(\"betalen = \" + glmt._beta.length + \", activecols = \" + _activeCols.length);\n        assert _activeCols == null || _activeCols.length == _activeData.fullN();\n        if (_countIteration) ++_iter;\n        long callbackStart = System.currentTimeMillis();\n        if(glmt.hasNaNsOrInf() || (glmt._computeGradient && L_BFGS.needLineSearch(_lineSearchStep, _lastResult._objval, glmt._ginfo._objVal, _lastResult._beta, glmt._beta, _lastResult._grad))){\n          getCompleter().addToPendingCount(1);\n          LogInfo(\"invoking line search\");\n          new GLMTask.GLMLineSearchTask(_activeData, _taskInfo._params, 1.0/_taskInfo._nobs, _lastResult._beta, ArrayUtils.subtract(glmt._beta, _lastResult._beta), LINE_SEARCH_STEP, NUM_LINE_SEARCH_STEPS, new LineSearchIteration(getCompleter())).asyncExec(_activeData._adaptedFrame);\n          return;\n        }\n        if(glmt._newThresholds != null) {\n          _taskInfo._thresholds = ArrayUtils.join(glmt._newThresholds[0], glmt._newThresholds[1]);\n          Arrays.sort(_taskInfo._thresholds);\n        }\n        double gerr = Double.NaN;\n        if (glmt._val != null && glmt._computeGradient) { // check gradient\n          _lastResult = new IterationInfo(_iter, glmt._beta, glmt._ginfo._gradient, glmt._ginfo._objVal);\n          double [] grad = _lastResult._grad.clone();\n          ADMMSolver.subgrad(_taskInfo._params._alpha[0], _currentLambda, glmt._beta, grad);\n          gerr = 0;\n          for (double d : grad)\n            if (d > gerr) gerr = d;\n            else if (d < -gerr) gerr = -d;\n          if(gerr <= GLM_GRAD_EPS){\n            LogInfo(\"converged by reaching small enough gradient, with max |subgradient| = \" + gerr  /* + \", coefs = \" + Arrays.toString(glmt._beta) */);\n            checkKKTAndComplete(glmt._beta,false);\n            return;\n          }\n        }\n        final double [] newBeta = MemoryManager.malloc8d(glmt._xy.length);\n        long t1 = System.currentTimeMillis();\n        ADMMSolver slvr = new ADMMSolver(_currentLambda, _taskInfo._params._alpha[0], GLM_GRAD_EPS, _addedL2);\n        slvr.solve(glmt._gram,glmt._xy,glmt._yy,newBeta, _currentLambda * _taskInfo._params._alpha[0]);\n        if(_lineSearchStep < 1){\n          if(glmt._beta != null)\n            for(int i = 0; i < newBeta.length; ++i)\n              newBeta[i] = glmt._beta[i]*(1-_lineSearchStep) + _lineSearchStep*newBeta[i];\n          else\n            for(int i = 0; i < newBeta.length; ++i)\n              newBeta[i] *= _lineSearchStep;\n        }\n        // print all info about iteration\n        LogInfo(\"Gram computed in \" + (callbackStart - _iterationStartTime) + \"ms, \" + (Double.isNaN(gerr)?\"\":\"gradient = \" + gerr + \",\") + \", step = \" + _lineSearchStep + \", ADMM: \" + slvr.iterations + \" iterations, \" + (System.currentTimeMillis() - t1) + \"ms (\" + slvr.decompTime + \"), subgrad_err=\" + slvr.gerr);\n        if (slvr._addedL2 > _addedL2) LogInfo(\"added \" + (slvr._addedL2 - _addedL2) + \"L2 penalty\");\n        new Job.ProgressUpdate(1).fork(_progressKey); // update progress\n        _addedL2 = slvr._addedL2;\n        if (ArrayUtils.hasNaNsOrInfs(newBeta)) {\n          throw new RuntimeException(LogInfo(\"got NaNs and/or Infs in beta\"));\n        } else {\n          final double bdiff = beta_diff(glmt._beta, newBeta);\n          if (_taskInfo._params._family == Family.gaussian || bdiff < beta_epsilon || _iter >= _taskInfo._max_iter) { // Gaussian is non-iterative and gradient is ADMMSolver's gradient => just validate and move on to the next lambda_value\n            int diff = (int) Math.log10(bdiff);\n            int nzs = 0;\n            for (int i = 0; i < newBeta.length; ++i)\n              if (newBeta[i] != 0) ++nzs;\n            LogInfo(\"converged (reached a fixed point with ~ 1e\" + diff + \" precision), got \" + nzs + \" nzs\");\n            checkKKTAndComplete(newBeta, false);\n            return;\n          } else { // not done yet, launch next iteration\n            if (glmt._beta != null)\n              setSubmodel(glmt._beta, glmt._val, (H2O.H2OCountedCompleter) getCompleter().getCompleter()); // update current intermediate result\n            final boolean validate = _taskInfo._params._higher_accuracy || (_iter % 5) == 0;\n            getCompleter().addToPendingCount(1);\n            new GLMIterationTask(_jobKey,_activeData,glmt._glm, true, validate, validate, newBeta, _taskInfo._ymu,1.0/ _taskInfo._nobs, _taskInfo._thresholds, new Iteration(getCompleter(),true,Math.min(1,2*_lineSearchStep))).asyncExec(_activeData._adaptedFrame);\n          }\n        }\n      }","id":39788,"modified_method":"@Override public void callback(final GLMIterationTask glmt){\n        if(_jobKey != null && !isRunning(_jobKey) )  throw new JobCancelledException();\n        assert _activeCols == null || glmt._beta == null || glmt._beta.length == (_activeCols.length+1):LogInfo(\"betalen = \" + glmt._beta.length + \", activecols = \" + _activeCols.length);\n        assert _activeCols == null || _activeCols.length == _activeData.fullN();\n        if (_countIteration) ++_iter;\n        long callbackStart = System.currentTimeMillis();\n        if(glmt.hasNaNsOrInf() || (glmt._computeGradient && !L_BFGS.admissibleStep(_lineSearchStep, _lastResult._objval, glmt._ginfo._objVal, _lastResult._beta, glmt._beta, _lastResult._grad))){\n          getCompleter().addToPendingCount(1);\n          LogInfo(\"invoking line search\");\n          new GLMTask.GLMLineSearchTask(_activeData, _taskInfo._params, 1.0/_taskInfo._nobs, _lastResult._beta, ArrayUtils.subtract(glmt._beta, _lastResult._beta), LINE_SEARCH_STEP, NUM_LINE_SEARCH_STEPS, new LineSearchIteration(getCompleter())).asyncExec(_activeData._adaptedFrame);\n          return;\n        }\n        if(glmt._newThresholds != null) {\n          _taskInfo._thresholds = ArrayUtils.join(glmt._newThresholds[0], glmt._newThresholds[1]);\n          Arrays.sort(_taskInfo._thresholds);\n        }\n        double gerr = Double.NaN;\n        if (glmt._val != null && glmt._computeGradient) { // check gradient\n          _lastResult = new IterationInfo(_iter, glmt._beta, glmt._ginfo._gradient, glmt._ginfo._objVal);\n          double [] grad = _lastResult._grad.clone();\n          ADMMSolver.subgrad(_taskInfo._params._alpha[0], _currentLambda, glmt._beta, grad);\n          gerr = 0;\n          for (double d : grad)\n            if (d > gerr) gerr = d;\n            else if (d < -gerr) gerr = -d;\n          if(gerr <= GLM_GRAD_EPS){\n            LogInfo(\"converged by reaching small enough gradient, with max |subgradient| = \" + gerr  /* + \", coefs = \" + Arrays.toString(glmt._beta) */);\n            checkKKTAndComplete(glmt._beta,false);\n            return;\n          }\n        }\n        final double [] newBeta = MemoryManager.malloc8d(glmt._xy.length);\n        long t1 = System.currentTimeMillis();\n        ADMMSolver slvr = new ADMMSolver(_currentLambda, _taskInfo._params._alpha[0], GLM_GRAD_EPS, _addedL2);\n        slvr.solve(glmt._gram,glmt._xy,glmt._yy,newBeta, _currentLambda * _taskInfo._params._alpha[0]);\n        if(_lineSearchStep < 1){\n          if(glmt._beta != null)\n            for(int i = 0; i < newBeta.length; ++i)\n              newBeta[i] = glmt._beta[i]*(1-_lineSearchStep) + _lineSearchStep*newBeta[i];\n          else\n            for(int i = 0; i < newBeta.length; ++i)\n              newBeta[i] *= _lineSearchStep;\n        }\n        // print all info about iteration\n        LogInfo(\"Gram computed in \" + (callbackStart - _iterationStartTime) + \"ms, \" + (Double.isNaN(gerr)?\"\":\"gradient = \" + gerr + \",\") + \", step = \" + _lineSearchStep + \", ADMM: \" + slvr.iterations + \" iterations, \" + (System.currentTimeMillis() - t1) + \"ms (\" + slvr.decompTime + \"), subgrad_err=\" + slvr.gerr);\n        if (slvr._addedL2 > _addedL2) LogInfo(\"added \" + (slvr._addedL2 - _addedL2) + \"L2 penalty\");\n        new Job.ProgressUpdate(1).fork(_progressKey); // update progress\n        _addedL2 = slvr._addedL2;\n        if (ArrayUtils.hasNaNsOrInfs(newBeta)) {\n          throw new RuntimeException(LogInfo(\"got NaNs and/or Infs in beta\"));\n        } else {\n          final double bdiff = beta_diff(glmt._beta, newBeta);\n          if (_taskInfo._params._family == Family.gaussian || bdiff < beta_epsilon || _iter >= _taskInfo._max_iter) { // Gaussian is non-iterative and gradient is ADMMSolver's gradient => just validate and move on to the next lambda_value\n            int diff = (int) Math.log10(bdiff);\n            int nzs = 0;\n            for (int i = 0; i < newBeta.length; ++i)\n              if (newBeta[i] != 0) ++nzs;\n            LogInfo(\"converged (reached a fixed point with ~ 1e\" + diff + \" precision), got \" + nzs + \" nzs\");\n            checkKKTAndComplete(newBeta, false);\n            return;\n          } else { // not done yet, launch next iteration\n            if (glmt._beta != null)\n              setSubmodel(glmt._beta, glmt._val, (H2O.H2OCountedCompleter) getCompleter().getCompleter()); // update current intermediate result\n            final boolean validate = _taskInfo._params._higher_accuracy || (_iter % 5) == 0;\n            getCompleter().addToPendingCount(1);\n            new GLMIterationTask(_jobKey,_activeData,glmt._glm, true, validate, validate, newBeta, _taskInfo._ymu,1.0/ _taskInfo._nobs, _taskInfo._thresholds, new Iteration(getCompleter(),true,Math.min(1,2*_lineSearchStep))).asyncExec(_activeData._adaptedFrame);\n          }\n        }\n      }","commit_id":"60c7affccb8a937ef1932aeb398212306666ef6d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override\n    protected void compute2() {\n      _start_time = System.currentTimeMillis();\n      assert _currentLambda < _taskInfo._lambdaMax;\n      _iter = _taskInfo._iter;\n      LogInfo(\"starting computation of lambda = \" + _currentLambda + \", previous lambda = \" +_lastLambda);\n      int [] activeCols = activeCols(_currentLambda, _lastLambda, _taskInfo._ginfo._gradient);\n      int n = activeCols == null?_taskInfo._dinfo.fullN():activeCols.length;\n      if(n > _taskInfo._params._max_active_predictors)\n        throw new TooManyPredictorsException();\n      double [] beta = contractVec(_taskInfo._beta, _activeCols);\n      boolean LBFGS = _forceLBFGS;\n      if(beta == null) {\n        beta = MemoryManager.malloc8d(_activeData.fullN() + (_activeData._intercept?1:0));\n        if(_activeData._intercept)\n          beta[beta.length-1] = _taskInfo._params.link(_taskInfo._ymu);\n      }\n      _lastResult = new IterationInfo(_taskInfo._iter,beta,contractVec(_taskInfo._ginfo._gradient,_activeCols), _taskInfo._ginfo._objVal);\n      if(LBFGS) { // TODO add L1 pen handling!\n        if(_taskInfo._params._alpha[0] > 0 || _activeCols != null)\n          throw H2O.unimpl();\n        Log.info(\"current lambda = \" + _currentLambda);\n        GradientSolver solver = (_activeData._adaptedFrame.numCols() >= 100 || isSparse(_activeData._adaptedFrame))\n          ?new GLMGradientSolver(_taskInfo._params,_activeData, _currentLambda,_taskInfo._ymu,_taskInfo._nobs)\n          :new GLMGradientSolver(_taskInfo._params, _activeData, _currentLambda,_taskInfo._ymu, _taskInfo._nobs);\n\n        long t1 = System.currentTimeMillis();\n        if(_taskInfo._lbfgs == null)\n          _taskInfo._lbfgs = new L_BFGS();\n        GradientInfo gOld = _taskInfo._gOld == null\n          ?solver.getGradient(beta)\n          :_taskInfo._ginfo;\n        final int workInc = WORK_TOTAL/_taskInfo._params._lambda.length/_taskInfo._lbfgs.maxIter();\n        L_BFGS.Result r = _taskInfo._lbfgs.solve(solver, beta, gOld, new ProgressMonitor() {\n          @Override\n          public boolean progress(GradientInfo ginfo) {\n            update(workInc, _jobKey);\n            // todo update the model here wo we can show intermediate results\n            return Job.isRunning(_jobKey);\n          }\n        });\n        long t2 = System.currentTimeMillis();\n        Log.info(\"L_BFGS (k = \" + _taskInfo._lbfgs.k() + \") done after \" + r.iter + \" iterations and \" + ((t2-t1)/1000) + \" seconds, objval = \" + r.ginfo._objVal + \", penalty = \" + (_currentLambda * .5 * ArrayUtils.l2norm2(beta,true)) + \",  gradient norm2 = \" + (MathUtils.l2norm2(r.ginfo._gradient)));\n\n        _taskInfo._gOld = r.ginfo;\n        double [] newBeta = r.coefs;\n        // update the state\n        _taskInfo._beta = newBeta;\n        _taskInfo._iter = (_iter += r.iter);\n        setSubmodel(newBeta,null,this);\n        tryComplete();\n      } else // fork off ADMM iteration\n        new GLMIterationTask(_jobKey, _activeData, _taskInfo._params, true, false, false, beta, _taskInfo._ymu, 1.0 / _taskInfo._nobs, _taskInfo._thresholds, new Iteration(this)).asyncExec(_activeData._adaptedFrame);\n    }","id":39789,"modified_method":"@Override\n    protected void compute2() {\n      _start_time = System.currentTimeMillis();\n      assert _currentLambda < _taskInfo._lambdaMax;\n      _iter = _taskInfo._iter;\n      LogInfo(\"starting computation of lambda = \" + _currentLambda + \", previous lambda = \" +_lastLambda);\n      int [] activeCols = activeCols(_currentLambda, _lastLambda, _taskInfo._ginfo._gradient);\n      int n = activeCols == null?_taskInfo._dinfo.fullN():activeCols.length;\n      if(n > _taskInfo._params._max_active_predictors)\n        throw new TooManyPredictorsException();\n      double [] beta = contractVec(_taskInfo._beta, _activeCols);\n      boolean LBFGS = _forceLBFGS;\n      if(beta == null) {\n        beta = MemoryManager.malloc8d(_activeData.fullN() + (_activeData._intercept?1:0));\n        if(_activeData._intercept)\n          beta[beta.length-1] = _taskInfo._params.link(_taskInfo._ymu);\n      }\n      _lastResult = new IterationInfo(_taskInfo._iter,beta,contractVec(_taskInfo._ginfo._gradient,_activeCols), _taskInfo._ginfo._objVal);\n      if(LBFGS) { // TODO add L1 pen handling!\n        if(_taskInfo._params._alpha[0] > 0 || _activeCols != null)\n          throw H2O.unimpl();\n        Log.info(\"current lambda = \" + _currentLambda);\n        GradientSolver solver = (_activeData._adaptedFrame.numCols() >= 100 || isSparse(_activeData._adaptedFrame))\n          ?new GLMGradientSolver(_taskInfo._params,_activeData, _currentLambda,_taskInfo._ymu,_taskInfo._nobs)\n          :new GLMGradientSolver(_taskInfo._params, _activeData, _currentLambda,_taskInfo._ymu, _taskInfo._nobs);\n\n        long t1 = System.currentTimeMillis();\n        if(_taskInfo._lbfgs == null)\n          _taskInfo._lbfgs = new L_BFGS();\n        GradientInfo gOld = _taskInfo._gOld == null\n          ?solver.getGradient(beta)\n          :_taskInfo._ginfo;\n        final int workInc = WORK_TOTAL/_taskInfo._params._lambda.length/_taskInfo._lbfgs.maxIter();\n        L_BFGS.Result r = _taskInfo._lbfgs.solve(solver, beta, gOld, new ProgressMonitor() {\n          @Override\n          public boolean progress(double [] beta, GradientInfo ginfo) {\n            update(workInc, _jobKey);\n            // todo update the model here wo we can show intermediate results\n            return Job.isRunning(_jobKey);\n          }\n        });\n        long t2 = System.currentTimeMillis();\n        Log.info(\"L_BFGS (k = \" + _taskInfo._lbfgs.k() + \") done after \" + r.iter + \" iterations and \" + ((t2-t1)/1000) + \" seconds, objval = \" + r.ginfo._objVal + \", penalty = \" + (_currentLambda * .5 * ArrayUtils.l2norm2(beta,true)) + \",  gradient norm2 = \" + (MathUtils.l2norm2(r.ginfo._gradient)));\n\n        _taskInfo._gOld = r.ginfo;\n        double [] newBeta = r.coefs;\n        // update the state\n        _taskInfo._beta = newBeta;\n        _taskInfo._iter = (_iter += r.iter);\n        setSubmodel(newBeta,null,this);\n        tryComplete();\n      } else // fork off ADMM iteration\n        new GLMIterationTask(_jobKey, _activeData, _taskInfo._params, true, false, false, beta, _taskInfo._ymu, 1.0 / _taskInfo._nobs, _taskInfo._thresholds, new Iteration(this)).asyncExec(_activeData._adaptedFrame);\n    }","commit_id":"60c7affccb8a937ef1932aeb398212306666ef6d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"private  final double [] getSearchDirection(final double [] gradient) {\n      double [] alpha = MemoryManager.malloc8d(_m);\n      double [] q = gradient.clone();\n      for (int i = 1; i <= Math.min(_k,_m); ++i) {\n        alpha[i-1] = rho(-i) * ArrayUtils.innerProduct(getS(-i), q);\n        MathUtils.wadd(q, getY( - i), -alpha[i - 1]);\n      }\n      if(_k > 0) {\n        final double [] s = getS(-1);\n        final double [] y = getY(-1);\n        double Hk0 = ArrayUtils.innerProduct(s,y) / ArrayUtils.innerProduct(y, y);\n        ArrayUtils.mult(q, Hk0);\n      }\n      for (int i = Math.min(_k,_m); i > 0; --i) {\n        double beta = rho(-i)*ArrayUtils.innerProduct(getY(-i),q);\n        MathUtils.wadd(q,getS(-i),alpha[i-1]-beta);\n      }\n      return ArrayUtils.mult(q,-1);\n    }","id":39790,"modified_method":"protected  final double [] getSearchDirection(final double [] gradient) {\n      double [] alpha = MemoryManager.malloc8d(_m);\n      double [] q = gradient.clone();\n      for (int i = 1; i <= Math.min(_k,_m); ++i) {\n        alpha[i-1] = rho(-i) * ArrayUtils.innerProduct(getS(-i), q);\n        MathUtils.wadd(q, getY( - i), -alpha[i - 1]);\n      }\n      if(_k > 0) {\n        final double [] s = getS(-1);\n        final double [] y = getY(-1);\n        double Hk0 = ArrayUtils.innerProduct(s,y) / ArrayUtils.innerProduct(y, y);\n        ArrayUtils.mult(q, Hk0);\n      }\n      for (int i = Math.min(_k,_m); i > 0; --i) {\n        double beta = rho(-i)*ArrayUtils.innerProduct(getY(-i),q);\n        MathUtils.wadd(q,getS(-i),alpha[i-1]-beta);\n      }\n      return ArrayUtils.mult(q,-1);\n    }","commit_id":"60c7affccb8a937ef1932aeb398212306666ef6d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public abstract double [] lineSearch(double [] beta, double [] pk);","id":39791,"modified_method":"/**\n     * Perform line search at given solution and search direction.\n     *\n     * @param ginfo     - gradient and objective value at current solution\n     * @param beta      - current solution\n     * @param direction - search direction\n     * @return\n     */\n    public LineSearchSol doLineSearch(GradientInfo ginfo, double [] beta, double [] direction) {\n      double [] objVals = getObjVals(beta, direction);\n      double t = _startStep, tdec = _stepDec;\n      for (int i = 0; i < objVals.length; ++i) {\n        if (admissibleStep(t, ginfo._objVal, objVals[i], direction, ginfo._gradient))\n          return new LineSearchSol(true, objVals[i], t);\n        t *= tdec;\n      }\n      return new LineSearchSol(false, objVals[objVals.length-1], t);\n    }","commit_id":"60c7affccb8a937ef1932aeb398212306666ef6d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/**\n   * Solve the optimization problem defined by the user-supplied gradient function using L-BFGS algorithm.\n   *\n   * Will result into multiple (10s to 100s or even 1000s) calls of the user-provided gradient function.\n   * Outside of that it does only limited single threaded computation (order of number of coefficients).\n   * The gradient is likely to be the most expensive part and key for good perfomance.\n   *\n   * @param gslvr - user gradient function\n   * @param beta - starting solution\n   * @return Optimal solution (coefficients) + gradient info returned by the user gradient\n   * function evaluated at the found optmimum.\n   */\n  public final Result solve(GradientSolver gslvr, double [] beta, GradientInfo ginfo, ProgressMonitor pm) {\n    if(_hist == null)\n      _hist = new History(_historySz, beta.length);\n    beta = beta.clone();\n    // just loop until good enough or line search can not progress\n    int iter = 0;\n_MAIN:\n    while(pm.progress(ginfo) && MathUtils.l2norm2(ginfo._gradient) > _gradEps && (iter != _maxIter)) {\n      double [] pk = _hist.getSearchDirection(ginfo._gradient);\n      double [] objs = gslvr.lineSearch(beta,pk); // expensive / distributed\n      double step = gslvr.step();\n      // check the line search, we do all the steps (up to min step) at once each time to limit number of passes over all data\n      LineSearchSol ls =  doLineSearch(objs, ginfo, pk, 1, step);\n      if (ls != null) {\n        ++iter;\n        // we got admissible solution\n        ArrayUtils.mult(pk,ls.step);\n        ArrayUtils.add(beta, pk);\n        GradientInfo newGinfo = gslvr.getGradient(beta); // expensive / distributed\n        _hist.update(pk, newGinfo._gradient, ginfo._gradient);\n        ginfo = newGinfo;\n        continue _MAIN;\n      }\n      // line search did not progress -> converged\n      break;\n    }\n    Log.info(\"L_BFGS done after \" + iter + \" iterations, objval = \" + ginfo._objVal + \", gradient norm2 = \" + MathUtils.l2norm2(ginfo._gradient) );\n    return new Result(iter,beta, ginfo);\n  }","id":39792,"modified_method":"/**\n   * Solve the optimization problem defined by the user-supplied gradient function using L-BFGS algorithm.\n   *\n   * Will result into multiple (10s to 100s or even 1000s) calls of the user-provided gradient function.\n   * Outside of that it does only limited single threaded computation (order of number of coefficients).\n   * The gradient is likely to be the most expensive part and key for good perfomance.\n   *\n   * @param gslvr - user gradient function\n   * @param beta - starting solution\n   * @return Optimal solution (coefficients) + gradient info returned by the user gradient\n   * function evaluated at the found optmimum.\n   */\n  public final Result solve(GradientSolver gslvr, double [] beta, GradientInfo ginfo, ProgressMonitor pm) {\n    if(_hist == null)\n      _hist = new History(_historySz, beta.length);\n    beta = beta.clone();\n    // just loop until good enough or line search can not progress\n    int iter = 0;\n    while(pm.progress(beta, ginfo) && MathUtils.l2norm2(ginfo._gradient) <= _gradEps && iter != _maxIter) {\n      double [] pk = _hist.getSearchDirection(ginfo._gradient);\n      LineSearchSol ls = gslvr.doLineSearch(ginfo, beta, pk);\n      if(ls.madeProgress) {\n        ArrayUtils.mult(pk,ls.step);\n        ++iter; // only count successful iterations\n        ArrayUtils.add(beta, pk);\n        GradientInfo newGinfo = gslvr.getGradient(beta); // expensive / distributed\n        _hist.update(pk, newGinfo._gradient, ginfo._gradient);\n        ginfo = newGinfo;\n      } else\n        break; // line search did not make any progress\n    }\n    Log.info(\"L_BFGS done after \" + iter + \" iterations, objval = \" + ginfo._objVal + \", gradient norm2 = \" + MathUtils.l2norm2(ginfo._gradient) );\n    return new Result(iter,beta, ginfo);\n  }","commit_id":"60c7affccb8a937ef1932aeb398212306666ef6d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public boolean progress(GradientInfo ginfo){return true;}","id":39793,"modified_method":"public boolean progress(double [] beta, GradientInfo ginfo){return true;}","commit_id":"60c7affccb8a937ef1932aeb398212306666ef6d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public abstract GradientInfo  getGradient(double [] beta);","id":39794,"modified_method":"/**\n     * Evaluate gradient at solution beta.\n     * @param beta\n     * @return\n     */\n    public abstract GradientInfo  getGradient(double [] beta);","commit_id":"60c7affccb8a937ef1932aeb398212306666ef6d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public LineSearchSol(double obj, double step, int sid) {\n      objVal = obj;\n      this.step = step;\n      stepIdx = sid;\n    }","id":39795,"modified_method":"public LineSearchSol(boolean progress, double obj, double step) {\n      objVal = obj;\n      this.step = step;\n      madeProgress = progress;\n    }","commit_id":"60c7affccb8a937ef1932aeb398212306666ef6d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Test\n  public void rosenbrock() {\n    final double a = 1, b = 100;\n    GradientSolver gs = new GradientSolver() {\n      @Override\n      public GradientInfo getGradient(double[] beta) {\n        final double[] g = new double[2];\n        final double x = beta[0];\n        final double y = beta[1];\n        final double xx = x * x;\n        g[0] = -2 * a + 2 * x - 4 * b * (y * x - x * xx);\n        g[1] = 2 * b * (y - xx);\n        double objVal = (a - x) * (a - x) + b * (y - xx) * (y - xx);\n        return new GradientInfo(objVal, g);\n      }\n\n      @Override\n      public double[] lineSearch(double[] beta, double[] pk) {\n        double [] res = new double[128];\n        double step = 1;\n        for(int i = 0; i < res.length; ++i) {\n          double x = beta[0] + pk[0]*step;\n          double y = beta[1] + pk[1]*step;\n          double xx = x * x;\n          res[i] = (a - x) * (a - x) + b * (y - xx) * (y - xx);\n          step *= _step;\n        }\n        return res;\n      }\n    };\n    int fails = 0;\n    L_BFGS lbfgs = new L_BFGS().setGradEps(1e-12);\n    L_BFGS.Result r = lbfgs.solve(gs, L_BFGS.startCoefs(2, 987654321));\n    assertTrue(\"LBFGS failed to solve Rosenbrock function optimization\",r.ginfo._objVal <  1e-4);\n  }","id":39796,"modified_method":"@Test\n  public void rosenbrock() {\n    final double a = 1, b = 100;\n    GradientSolver gs = new GradientSolver() {\n      @Override\n      public GradientInfo getGradient(double[] beta) {\n        final double[] g = new double[2];\n        final double x = beta[0];\n        final double y = beta[1];\n        final double xx = x * x;\n        g[0] = -2 * a + 2 * x - 4 * b * (y * x - x * xx);\n        g[1] = 2 * b * (y - xx);\n        double objVal = (a - x) * (a - x) + b * (y - xx) * (y - xx);\n        return new GradientInfo(objVal, g);\n      }\n\n      @Override\n      public double[] getObjVals(double[] beta, double[] pk) {\n        double [] res = new double[128];\n        double step = 1;\n        for(int i = 0; i < res.length; ++i) {\n          double x = beta[0] + pk[0]*step;\n          double y = beta[1] + pk[1]*step;\n          double xx = x * x;\n          res[i] = (a - x) * (a - x) + b * (y - xx) * (y - xx);\n          step *= _step;\n        }\n        return res;\n      }\n    };\n    int fails = 0;\n    L_BFGS lbfgs = new L_BFGS().setGradEps(1e-12);\n    L_BFGS.Result r = lbfgs.solve(gs, L_BFGS.startCoefs(2, 987654321));\n    assertTrue(\"LBFGS failed to solve Rosenbrock function optimization\",r.ginfo._objVal <  1e-4);\n  }","commit_id":"60c7affccb8a937ef1932aeb398212306666ef6d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override public void callback(final GLMIterationTask glmt){\n        if(_jobKey != null && !isRunning(_jobKey) )  throw new JobCancelledException();\n        assert _activeCols == null || glmt._beta == null || glmt._beta.length == (_activeCols.length+1):LogInfo(\"betalen = \" + glmt._beta.length + \", activecols = \" + _activeCols.length);\n        assert _activeCols == null || _activeCols.length == _activeData.fullN();\n        if (_countIteration) ++_iter;\n        long callbackStart = System.currentTimeMillis();\n        if(glmt.hasNaNsOrInf() || (glmt._computeGradient && L_BFGS.needLineSearch(_lineSearchStep, _lastResult._objval, glmt._ginfo._objVal, _lastResult._beta, glmt._beta, _lastResult._grad))){\n          getCompleter().addToPendingCount(1);\n          LogInfo(\"invoking line search\");\n          new GLMTask.GLMLineSearchTask(_activeData, _taskInfo._params, 1.0/_taskInfo._nobs, _lastResult._beta, ArrayUtils.subtract(glmt._beta, _lastResult._beta), LINE_SEARCH_STEP, NUM_LINE_SEARCH_STEPS, new LineSearchIteration(getCompleter())).asyncExec(_activeData._adaptedFrame);\n          return;\n        }\n        if(glmt._newThresholds != null) {\n          _taskInfo._thresholds = ArrayUtils.join(glmt._newThresholds[0], glmt._newThresholds[1]);\n          Arrays.sort(_taskInfo._thresholds);\n        }\n        double gerr = Double.NaN;\n        if (glmt._val != null && glmt._computeGradient) { // check gradient\n          _lastResult = new IterationInfo(_iter, glmt._beta, glmt._ginfo._gradient, glmt._ginfo._objVal);\n          double [] grad = _lastResult._grad.clone();\n          ADMMSolver.subgrad(_taskInfo._params._alpha[0], _currentLambda, glmt._beta, grad);\n          gerr = 0;\n          for (double d : grad)\n            if (d > gerr) gerr = d;\n            else if (d < -gerr) gerr = -d;\n          if(gerr <= GLM_GRAD_EPS){\n            LogInfo(\"converged by reaching small enough gradient, with max |subgradient| = \" + gerr  /* + \", coefs = \" + Arrays.toString(glmt._beta) */);\n            checkKKTAndComplete(glmt._beta,false);\n            return;\n          }\n        }\n        final double [] newBeta = MemoryManager.malloc8d(glmt._xy.length);\n        long t1 = System.currentTimeMillis();\n        ADMMSolver slvr = new ADMMSolver(_currentLambda, _taskInfo._params._alpha[0], GLM_GRAD_EPS, _addedL2);\n        slvr.solve(glmt._gram,glmt._xy,glmt._yy,newBeta, _currentLambda * _taskInfo._params._alpha[0]);\n        if(_lineSearchStep < 1){\n          if(glmt._beta != null)\n            for(int i = 0; i < newBeta.length; ++i)\n              newBeta[i] = glmt._beta[i]*(1-_lineSearchStep) + _lineSearchStep*newBeta[i];\n          else\n            for(int i = 0; i < newBeta.length; ++i)\n              newBeta[i] *= _lineSearchStep;\n        }\n        // print all info about iteration\n        LogInfo(\"Gram computed in \" + (callbackStart - _iterationStartTime) + \"ms, \" + (Double.isNaN(gerr)?\"\":\"gradient = \" + gerr + \",\") + \", step = \" + _lineSearchStep + \", ADMM: \" + slvr.iterations + \" iterations, \" + (System.currentTimeMillis() - t1) + \"ms (\" + slvr.decompTime + \"), subgrad_err=\" + slvr.gerr);\n        if (slvr._addedL2 > _addedL2) LogInfo(\"added \" + (slvr._addedL2 - _addedL2) + \"L2 penalty\");\n        new Job.ProgressUpdate(1).fork(_progressKey); // update progress\n        _addedL2 = slvr._addedL2;\n        if (ArrayUtils.hasNaNsOrInfs(newBeta)) {\n          throw new RuntimeException(LogInfo(\"got NaNs and/or Infs in beta\"));\n        } else {\n          final double bdiff = beta_diff(glmt._beta, newBeta);\n          if (_taskInfo._params._family == Family.gaussian || bdiff < beta_epsilon || _iter >= _taskInfo._max_iter) { // Gaussian is non-iterative and gradient is ADMMSolver's gradient => just validate and move on to the next lambda_value\n            int diff = (int) Math.log10(bdiff);\n            int nzs = 0;\n            for (int i = 0; i < newBeta.length; ++i)\n              if (newBeta[i] != 0) ++nzs;\n            LogInfo(\"converged (reached a fixed point with ~ 1e\" + diff + \" precision), got \" + nzs + \" nzs\");\n            checkKKTAndComplete(newBeta, false);\n            return;\n          } else { // not done yet, launch next iteration\n            if (glmt._beta != null)\n              setSubmodel(glmt._beta, glmt._val, (H2O.H2OCountedCompleter) getCompleter().getCompleter()); // update current intermediate result\n            final boolean validate = _taskInfo._params._higher_accuracy || (_iter % 5) == 0;\n            getCompleter().addToPendingCount(1);\n            new GLMIterationTask(_jobKey,_activeData,glmt._glm, true, validate, validate, newBeta, _taskInfo._ymu,1.0/ _taskInfo._nobs, _taskInfo._thresholds, new Iteration(getCompleter(),true,Math.min(1,2*_lineSearchStep))).asyncExec(_activeData._adaptedFrame);\n          }\n        }\n      }","id":39797,"modified_method":"@Override public void callback(final GLMIterationTask glmt){\n        if(_jobKey != null && !isRunning(_jobKey) )  throw new JobCancelledException();\n        assert _activeCols == null || glmt._beta == null || glmt._beta.length == (_activeCols.length+1):LogInfo(\"betalen = \" + glmt._beta.length + \", activecols = \" + _activeCols.length);\n        assert _activeCols == null || _activeCols.length == _activeData.fullN();\n        if (_countIteration) ++_iter;\n        long callbackStart = System.currentTimeMillis();\n        if(glmt.hasNaNsOrInf() || (glmt._computeGradient && !L_BFGS.admissibleStep(_lineSearchStep, _lastResult._objval, glmt._ginfo._objVal, _lastResult._beta, glmt._beta, _lastResult._grad))){\n          getCompleter().addToPendingCount(1);\n          LogInfo(\"invoking line search\");\n          new GLMTask.GLMLineSearchTask(_activeData, _taskInfo._params, 1.0/_taskInfo._nobs, _lastResult._beta, ArrayUtils.subtract(glmt._beta, _lastResult._beta), LINE_SEARCH_STEP, NUM_LINE_SEARCH_STEPS, new LineSearchIteration(getCompleter())).asyncExec(_activeData._adaptedFrame);\n          return;\n        }\n        if(glmt._newThresholds != null) {\n          _taskInfo._thresholds = ArrayUtils.join(glmt._newThresholds[0], glmt._newThresholds[1]);\n          Arrays.sort(_taskInfo._thresholds);\n        }\n        double gerr = Double.NaN;\n        if (glmt._val != null && glmt._computeGradient) { // check gradient\n          _lastResult = new IterationInfo(_iter, glmt._beta, glmt._ginfo._gradient, glmt._ginfo._objVal);\n          double [] grad = _lastResult._grad.clone();\n          ADMMSolver.subgrad(_taskInfo._params._alpha[0], _currentLambda, glmt._beta, grad);\n          gerr = 0;\n          for (double d : grad)\n            if (d > gerr) gerr = d;\n            else if (d < -gerr) gerr = -d;\n          if(gerr <= GLM_GRAD_EPS){\n            LogInfo(\"converged by reaching small enough gradient, with max |subgradient| = \" + gerr  /* + \", coefs = \" + Arrays.toString(glmt._beta) */);\n            checkKKTAndComplete(glmt._beta,false);\n            return;\n          }\n        }\n        final double [] newBeta = MemoryManager.malloc8d(glmt._xy.length);\n        long t1 = System.currentTimeMillis();\n        ADMMSolver slvr = new ADMMSolver(_currentLambda, _taskInfo._params._alpha[0], GLM_GRAD_EPS, _addedL2);\n        slvr.solve(glmt._gram,glmt._xy,glmt._yy,newBeta, _currentLambda * _taskInfo._params._alpha[0]);\n        if(_lineSearchStep < 1){\n          if(glmt._beta != null)\n            for(int i = 0; i < newBeta.length; ++i)\n              newBeta[i] = glmt._beta[i]*(1-_lineSearchStep) + _lineSearchStep*newBeta[i];\n          else\n            for(int i = 0; i < newBeta.length; ++i)\n              newBeta[i] *= _lineSearchStep;\n        }\n        // print all info about iteration\n        LogInfo(\"Gram computed in \" + (callbackStart - _iterationStartTime) + \"ms, \" + (Double.isNaN(gerr)?\"\":\"gradient = \" + gerr + \",\") + \", step = \" + _lineSearchStep + \", ADMM: \" + slvr.iterations + \" iterations, \" + (System.currentTimeMillis() - t1) + \"ms (\" + slvr.decompTime + \"), subgrad_err=\" + slvr.gerr);\n        if (slvr._addedL2 > _addedL2) LogInfo(\"added \" + (slvr._addedL2 - _addedL2) + \"L2 penalty\");\n        new Job.ProgressUpdate(1).fork(_progressKey); // update progress\n        _addedL2 = slvr._addedL2;\n        if (ArrayUtils.hasNaNsOrInfs(newBeta)) {\n          throw new RuntimeException(LogInfo(\"got NaNs and/or Infs in beta\"));\n        } else {\n          final double bdiff = beta_diff(glmt._beta, newBeta);\n          if (_taskInfo._params._family == Family.gaussian || bdiff < beta_epsilon || _iter >= _taskInfo._max_iter) { // Gaussian is non-iterative and gradient is ADMMSolver's gradient => just validate and move on to the next lambda_value\n            int diff = (int) Math.log10(bdiff);\n            int nzs = 0;\n            for (int i = 0; i < newBeta.length; ++i)\n              if (newBeta[i] != 0) ++nzs;\n            LogInfo(\"converged (reached a fixed point with ~ 1e\" + diff + \" precision), got \" + nzs + \" nzs\");\n            checkKKTAndComplete(newBeta, false);\n            return;\n          } else { // not done yet, launch next iteration\n            if (glmt._beta != null)\n              setSubmodel(glmt._beta, glmt._val, (H2O.H2OCountedCompleter) getCompleter().getCompleter()); // update current intermediate result\n            final boolean validate = _taskInfo._params._higher_accuracy || (_iter % 5) == 0;\n            getCompleter().addToPendingCount(1);\n            new GLMIterationTask(_jobKey,_activeData,glmt._glm, true, validate, validate, newBeta, _taskInfo._ymu,1.0/ _taskInfo._nobs, _taskInfo._thresholds, new Iteration(getCompleter(),true,Math.min(1,2*_lineSearchStep))).asyncExec(_activeData._adaptedFrame);\n          }\n        }\n      }","commit_id":"289b0f88af9c96f9f828cca6c2b182f601357c14","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public GLMGradientSolver(GLMParameters glmp, DataInfo dinfo, double lambda, double ymu, long nobs){\n      _glmp = glmp;\n      _dinfo = dinfo;\n      _ymu = ymu;\n      _nobs = nobs;\n      _lambda = lambda;\n      _step = .75;\n    }","id":39798,"modified_method":"public GLMGradientSolver(GLMParameters glmp, DataInfo dinfo, double lambda, double ymu, long nobs){\n      _glmp = glmp;\n      _dinfo = dinfo;\n      _ymu = ymu;\n      _nobs = nobs;\n      _lambda = lambda;\n    }","commit_id":"289b0f88af9c96f9f828cca6c2b182f601357c14","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override public void callback(final GLMLineSearchTask lst) {\n        assert getCompleter().getPendingCount() <= 1:\"unexpected pending count, expected 1, got \" + getCompleter().getPendingCount();\n        LineSearchSol ls = L_BFGS.doLineSearch(lst._objVals, _taskInfo._ginfo, lst._direction, 1, LINE_SEARCH_STEP);\n        if(ls != null) {\n          LogInfo(\"line search: found admissible step = \" + ls.step + \",  objval = \" + ls.objVal);\n          _taskInfo._params._higher_accuracy = true;\n          getCompleter().addToPendingCount(1);\n          double [] beta = ArrayUtils.add(lst._beta, ArrayUtils.mult(lst._direction, ls.step));\n          new GLMIterationTask(_jobKey, _activeData, _taskInfo._params, true, true, true, beta, _taskInfo._ymu, 1.0/ _taskInfo._nobs, _taskInfo._thresholds, new Iteration(getCompleter(),false, ls.step)).asyncExec(_activeData._adaptedFrame);\n          return;\n        }\n      // no line step worked converge\n        if(!_taskInfo._params._higher_accuracy){ // start from scratch\n          _taskInfo._params._higher_accuracy = true;\n          int add2iter = (_iter - _taskInfo._iter);\n          LogInfo(\"Line search failed to progress, rerunning current lambda from scratch with high accuracy on, adding \" + add2iter + \" to max iterations\");\n          _taskInfo._max_iter += add2iter;\n          getCompleter().addToPendingCount(1);\n          new GLMIterationTask(_jobKey,_activeData, _taskInfo._params,true,true,true,contractVec(_taskInfo._beta,_activeCols), _taskInfo._ymu,1.0/ _taskInfo._nobs, _taskInfo._thresholds, new Iteration(getCompleter(),false,1)).asyncExec(_activeData._adaptedFrame);\n          return;\n        }\n        LogInfo(\"Line search did not find feasible step, converged.\");\n        checkKKTAndComplete(_lastResult._beta,true);\n      }","id":39799,"modified_method":"@Override public void callback(final GLMLineSearchTask lst) {\n        assert getCompleter().getPendingCount() <= 1:\"unexpected pending count, expected 1, got \" + getCompleter().getPendingCount();\n        double t = 1;\n        for(int i = 0; i < lst._objVals.length; ++i, t *= LINE_SEARCH_STEP) {\n          if(L_BFGS.admissibleStep(t, _taskInfo._ginfo._objVal, lst._objVals[i], lst._direction, _taskInfo._ginfo._gradient)){\n            LogInfo(\"line search: found admissible step = \" + t + \",  objval = \" + lst._objVals[i]);\n            _taskInfo._params._higher_accuracy = true;\n            getCompleter().addToPendingCount(1);\n            double [] beta = ArrayUtils.wadd(lst._beta, lst._direction, t);\n            new GLMIterationTask(_jobKey, _activeData, _taskInfo._params, true, true, true, beta, _taskInfo._ymu, 1.0/ _taskInfo._nobs, _taskInfo._thresholds, new Iteration(getCompleter(),false, t)).asyncExec(_activeData._adaptedFrame);\n            return;\n          }\n        }\n      // no line step worked => converge\n        if(!_taskInfo._params._higher_accuracy){ // start from scratch\n          _taskInfo._params._higher_accuracy = true;\n          int add2iter = (_iter - _taskInfo._iter);\n          LogInfo(\"Line search failed to progress, rerunning current lambda from scratch with high accuracy on, adding \" + add2iter + \" to max iterations\");\n          _taskInfo._max_iter += add2iter;\n          getCompleter().addToPendingCount(1);\n          new GLMIterationTask(_jobKey,_activeData, _taskInfo._params,true,true,true,contractVec(_taskInfo._beta,_activeCols), _taskInfo._ymu,1.0/ _taskInfo._nobs, _taskInfo._thresholds, new Iteration(getCompleter(),false,1)).asyncExec(_activeData._adaptedFrame);\n          return;\n        }\n        LogInfo(\"Line search did not find feasible step, converged.\");\n        checkKKTAndComplete(_lastResult._beta,true);\n      }","commit_id":"289b0f88af9c96f9f828cca6c2b182f601357c14","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override\n    protected void compute2() {\n      _start_time = System.currentTimeMillis();\n      assert _currentLambda < _taskInfo._lambdaMax;\n      _iter = _taskInfo._iter;\n      LogInfo(\"starting computation of lambda = \" + _currentLambda + \", previous lambda = \" +_lastLambda);\n      int [] activeCols = activeCols(_currentLambda, _lastLambda, _taskInfo._ginfo._gradient);\n      int n = activeCols == null?_taskInfo._dinfo.fullN():activeCols.length;\n      if(n > _taskInfo._params._max_active_predictors)\n        throw new TooManyPredictorsException();\n      double [] beta = contractVec(_taskInfo._beta, _activeCols);\n      boolean LBFGS = _forceLBFGS;\n      if(beta == null) {\n        beta = MemoryManager.malloc8d(_activeData.fullN() + (_activeData._intercept?1:0));\n        if(_activeData._intercept)\n          beta[beta.length-1] = _taskInfo._params.link(_taskInfo._ymu);\n      }\n      _lastResult = new IterationInfo(_taskInfo._iter,beta,contractVec(_taskInfo._ginfo._gradient,_activeCols), _taskInfo._ginfo._objVal);\n      if(LBFGS) { // TODO add L1 pen handling!\n        if(_taskInfo._params._alpha[0] > 0 || _activeCols != null)\n          throw H2O.unimpl();\n        Log.info(\"current lambda = \" + _currentLambda);\n        GradientSolver solver = (_activeData._adaptedFrame.numCols() >= 100 || isSparse(_activeData._adaptedFrame))\n          ?new GLMGradientSolver(_taskInfo._params,_activeData, _currentLambda,_taskInfo._ymu,_taskInfo._nobs)\n          :new GLMGradientSolver(_taskInfo._params, _activeData, _currentLambda,_taskInfo._ymu, _taskInfo._nobs);\n\n        long t1 = System.currentTimeMillis();\n        if(_taskInfo._lbfgs == null)\n          _taskInfo._lbfgs = new L_BFGS();\n        GradientInfo gOld = _taskInfo._gOld == null\n          ?solver.getGradient(beta)\n          :_taskInfo._ginfo;\n        final int workInc = WORK_TOTAL/_taskInfo._params._lambda.length/_taskInfo._lbfgs.maxIter();\n        L_BFGS.Result r = _taskInfo._lbfgs.solve(solver, beta, gOld, new ProgressMonitor() {\n          @Override\n          public boolean progress(GradientInfo ginfo) {\n            update(workInc, _jobKey);\n            // todo update the model here wo we can show intermediate results\n            return Job.isRunning(_jobKey);\n          }\n        });\n        long t2 = System.currentTimeMillis();\n        Log.info(\"L_BFGS (k = \" + _taskInfo._lbfgs.k() + \") done after \" + r.iter + \" iterations and \" + ((t2-t1)/1000) + \" seconds, objval = \" + r.ginfo._objVal + \", penalty = \" + (_currentLambda * .5 * ArrayUtils.l2norm2(beta,true)) + \",  gradient norm2 = \" + (MathUtils.l2norm2(r.ginfo._gradient)));\n\n        _taskInfo._gOld = r.ginfo;\n        double [] newBeta = r.coefs;\n        // update the state\n        _taskInfo._beta = newBeta;\n        _taskInfo._iter = (_iter += r.iter);\n        setSubmodel(newBeta,null,this);\n        tryComplete();\n      } else // fork off ADMM iteration\n        new GLMIterationTask(_jobKey, _activeData, _taskInfo._params, true, false, false, beta, _taskInfo._ymu, 1.0 / _taskInfo._nobs, _taskInfo._thresholds, new Iteration(this)).asyncExec(_activeData._adaptedFrame);\n    }","id":39800,"modified_method":"@Override\n    protected void compute2() {\n      _start_time = System.currentTimeMillis();\n      assert _currentLambda < _taskInfo._lambdaMax;\n      _iter = _taskInfo._iter;\n      LogInfo(\"starting computation of lambda = \" + _currentLambda + \", previous lambda = \" +_lastLambda);\n      int [] activeCols = activeCols(_currentLambda, _lastLambda, _taskInfo._ginfo._gradient);\n      int n = activeCols == null?_taskInfo._dinfo.fullN():activeCols.length;\n      if(n > _taskInfo._params._max_active_predictors)\n        throw new TooManyPredictorsException();\n      double [] beta = contractVec(_taskInfo._beta, _activeCols);\n      boolean LBFGS = _forceLBFGS;\n      if(beta == null) {\n        beta = MemoryManager.malloc8d(_activeData.fullN() + (_activeData._intercept?1:0));\n        if(_activeData._intercept)\n          beta[beta.length-1] = _taskInfo._params.link(_taskInfo._ymu);\n      }\n      _lastResult = new IterationInfo(_taskInfo._iter,beta,contractVec(_taskInfo._ginfo._gradient,_activeCols), _taskInfo._ginfo._objVal);\n      if(LBFGS) { // TODO add L1 pen handling!\n        if(_taskInfo._params._alpha[0] > 0 || _activeCols != null)\n          throw H2O.unimpl();\n        Log.info(\"current lambda = \" + _currentLambda);\n        GradientSolver solver = (_activeData._adaptedFrame.numCols() >= 100 || isSparse(_activeData._adaptedFrame))\n          ?new GLMGradientSolver(_taskInfo._params,_activeData, _currentLambda,_taskInfo._ymu,_taskInfo._nobs)\n          :new GLMGradientSolver(_taskInfo._params, _activeData, _currentLambda,_taskInfo._ymu, _taskInfo._nobs);\n\n        long t1 = System.currentTimeMillis();\n        if(_taskInfo._lbfgs == null)\n          _taskInfo._lbfgs = new L_BFGS();\n        GradientInfo gOld = _taskInfo._gOld == null\n          ?solver.getGradient(beta)\n          :_taskInfo._ginfo;\n        final int workInc = WORK_TOTAL/_taskInfo._params._lambda.length/_taskInfo._lbfgs.maxIter();\n        L_BFGS.Result r = _taskInfo._lbfgs.solve(solver, beta, gOld, new ProgressMonitor() {\n          @Override\n          public boolean progress(double [] beta, GradientInfo ginfo) {\n            update(workInc, _jobKey);\n            // todo update the model here wo we can show intermediate results\n            return Job.isRunning(_jobKey);\n          }\n        });\n        long t2 = System.currentTimeMillis();\n        Log.info(\"L_BFGS (k = \" + _taskInfo._lbfgs.k() + \") done after \" + r.iter + \" iterations and \" + ((t2-t1)/1000) + \" seconds, objval = \" + r.ginfo._objVal + \", penalty = \" + (_currentLambda * .5 * ArrayUtils.l2norm2(beta,true)) + \",  gradient norm2 = \" + (MathUtils.l2norm2(r.ginfo._gradient)));\n\n        _taskInfo._gOld = r.ginfo;\n        double [] newBeta = r.coefs;\n        // update the state\n        _taskInfo._beta = newBeta;\n        _taskInfo._iter = (_iter += r.iter);\n        setSubmodel(newBeta,null,this);\n        tryComplete();\n      } else // fork off ADMM iteration\n        new GLMIterationTask(_jobKey, _activeData, _taskInfo._params, true, false, false, beta, _taskInfo._ymu, 1.0 / _taskInfo._nobs, _taskInfo._thresholds, new Iteration(this)).asyncExec(_activeData._adaptedFrame);\n    }","commit_id":"289b0f88af9c96f9f828cca6c2b182f601357c14","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public abstract GradientInfo  getGradient(double [] beta);","id":39801,"modified_method":"/**\n     * Evaluate gradient at solution beta.\n     * @param beta\n     * @return\n     */\n    public abstract GradientInfo  getGradient(double [] beta);","commit_id":"289b0f88af9c96f9f828cca6c2b182f601357c14","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/**\n   * Solve the optimization problem defined by the user-supplied gradient function using L-BFGS algorithm.\n   *\n   * Will result into multiple (10s to 100s or even 1000s) calls of the user-provided gradient function.\n   * Outside of that it does only limited single threaded computation (order of number of coefficients).\n   * The gradient is likely to be the most expensive part and key for good perfomance.\n   *\n   * @param gslvr - user gradient function\n   * @param beta - starting solution\n   * @return Optimal solution (coefficients) + gradient info returned by the user gradient\n   * function evaluated at the found optmimum.\n   */\n  public final Result solve(GradientSolver gslvr, double [] beta, GradientInfo ginfo, ProgressMonitor pm) {\n    if(_hist == null)\n      _hist = new History(_historySz, beta.length);\n    beta = beta.clone();\n    // just loop until good enough or line search can not progress\n    int iter = 0;\n_MAIN:\n    while(pm.progress(ginfo) && MathUtils.l2norm2(ginfo._gradient) > _gradEps && (iter != _maxIter)) {\n      double [] pk = _hist.getSearchDirection(ginfo._gradient);\n      double [] objs = gslvr.lineSearch(beta,pk); // expensive / distributed\n      double step = gslvr.step();\n      // check the line search, we do all the steps (up to min step) at once each time to limit number of passes over all data\n      LineSearchSol ls =  doLineSearch(objs, ginfo, pk, 1, step);\n      if (ls != null) {\n        ++iter;\n        // we got admissible solution\n        ArrayUtils.mult(pk,ls.step);\n        ArrayUtils.add(beta, pk);\n        GradientInfo newGinfo = gslvr.getGradient(beta); // expensive / distributed\n        _hist.update(pk, newGinfo._gradient, ginfo._gradient);\n        ginfo = newGinfo;\n        continue _MAIN;\n      }\n      // line search did not progress -> converged\n      break;\n    }\n    Log.info(\"L_BFGS done after \" + iter + \" iterations, objval = \" + ginfo._objVal + \", gradient norm2 = \" + MathUtils.l2norm2(ginfo._gradient) );\n    return new Result(iter,beta, ginfo);\n  }","id":39802,"modified_method":"/**\n   * Solve the optimization problem defined by the user-supplied gradient function using L-BFGS algorithm.\n   *\n   * Will result into multiple (10s to 100s or even 1000s) calls of the user-provided gradient function.\n   * Outside of that it does only limited single threaded computation (order of number of coefficients).\n   * The gradient is likely to be the most expensive part and key for good perfomance.\n   *\n   * @param gslvr - user gradient function\n   * @param beta - starting solution\n   * @return Optimal solution (coefficients) + gradient info returned by the user gradient\n   * function evaluated at the found optmimum.\n   */\n  public final Result solve(GradientSolver gslvr, double [] beta, GradientInfo ginfo, ProgressMonitor pm) {\n    if(_hist == null)\n      _hist = new History(_historySz, beta.length);\n    beta = beta.clone();\n    // just loop until good enough or line search can not progress\n    int iter = 0;\n    while(pm.progress(beta, ginfo) && MathUtils.l2norm2(ginfo._gradient) <= _gradEps && iter != _maxIter) {\n      double [] pk = _hist.getSearchDirection(ginfo._gradient);\n      LineSearchSol ls = gslvr.doLineSearch(ginfo, beta, pk);\n      if(ls.madeProgress) {\n        ArrayUtils.mult(pk,ls.step);\n        ++iter; // only count successful iterations\n        ArrayUtils.add(beta, pk);\n        GradientInfo newGinfo = gslvr.getGradient(beta); // expensive / distributed\n        _hist.update(pk, newGinfo._gradient, ginfo._gradient);\n        ginfo = newGinfo;\n      } else\n        break; // line search did not make any progress\n    }\n    Log.info(\"L_BFGS done after \" + iter + \" iterations, objval = \" + ginfo._objVal + \", gradient norm2 = \" + MathUtils.l2norm2(ginfo._gradient) );\n    return new Result(iter,beta, ginfo);\n  }","commit_id":"289b0f88af9c96f9f828cca6c2b182f601357c14","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public boolean progress(GradientInfo ginfo){return true;}","id":39803,"modified_method":"public boolean progress(double [] beta, GradientInfo ginfo){return true;}","commit_id":"289b0f88af9c96f9f828cca6c2b182f601357c14","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public LineSearchSol(double obj, double step, int sid) {\n      objVal = obj;\n      this.step = step;\n      stepIdx = sid;\n    }","id":39804,"modified_method":"public LineSearchSol(boolean progress, double obj, double step) {\n      objVal = obj;\n      this.step = step;\n      madeProgress = progress;\n    }","commit_id":"289b0f88af9c96f9f828cca6c2b182f601357c14","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public abstract double [] lineSearch(double [] beta, double [] pk);","id":39805,"modified_method":"/**\n     * Perform line search at given solution and search direction.\n     *\n     * @param ginfo     - gradient and objective value at current solution\n     * @param beta      - current solution\n     * @param direction - search direction\n     * @return\n     */\n    public LineSearchSol doLineSearch(GradientInfo ginfo, double [] beta, double [] direction) {\n      double [] objVals = getObjVals(beta, direction);\n      double t = _startStep, tdec = _stepDec;\n      for (int i = 0; i < objVals.length; ++i) {\n        if (admissibleStep(t, ginfo._objVal, objVals[i], direction, ginfo._gradient))\n          return new LineSearchSol(true, objVals[i], t);\n        t *= tdec;\n      }\n      return new LineSearchSol(false, objVals[objVals.length-1], t);\n    }","commit_id":"289b0f88af9c96f9f828cca6c2b182f601357c14","url":"https://github.com/h2oai/h2o-3"},{"original_method":"private  final double [] getSearchDirection(final double [] gradient) {\n      double [] alpha = MemoryManager.malloc8d(_m);\n      double [] q = gradient.clone();\n      for (int i = 1; i <= Math.min(_k,_m); ++i) {\n        alpha[i-1] = rho(-i) * ArrayUtils.innerProduct(getS(-i), q);\n        MathUtils.wadd(q, getY( - i), -alpha[i - 1]);\n      }\n      if(_k > 0) {\n        final double [] s = getS(-1);\n        final double [] y = getY(-1);\n        double Hk0 = ArrayUtils.innerProduct(s,y) / ArrayUtils.innerProduct(y, y);\n        ArrayUtils.mult(q, Hk0);\n      }\n      for (int i = Math.min(_k,_m); i > 0; --i) {\n        double beta = rho(-i)*ArrayUtils.innerProduct(getY(-i),q);\n        MathUtils.wadd(q,getS(-i),alpha[i-1]-beta);\n      }\n      return ArrayUtils.mult(q,-1);\n    }","id":39806,"modified_method":"protected  final double [] getSearchDirection(final double [] gradient) {\n      double [] alpha = MemoryManager.malloc8d(_m);\n      double [] q = gradient.clone();\n      for (int i = 1; i <= Math.min(_k,_m); ++i) {\n        alpha[i-1] = rho(-i) * ArrayUtils.innerProduct(getS(-i), q);\n        MathUtils.wadd(q, getY( - i), -alpha[i - 1]);\n      }\n      if(_k > 0) {\n        final double [] s = getS(-1);\n        final double [] y = getY(-1);\n        double Hk0 = ArrayUtils.innerProduct(s,y) / ArrayUtils.innerProduct(y, y);\n        ArrayUtils.mult(q, Hk0);\n      }\n      for (int i = Math.min(_k,_m); i > 0; --i) {\n        double beta = rho(-i)*ArrayUtils.innerProduct(getY(-i),q);\n        MathUtils.wadd(q,getS(-i),alpha[i-1]-beta);\n      }\n      return ArrayUtils.mult(q,-1);\n    }","commit_id":"289b0f88af9c96f9f828cca6c2b182f601357c14","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Test\n  public void rosenbrock() {\n    final double a = 1, b = 100;\n    GradientSolver gs = new GradientSolver() {\n      @Override\n      public GradientInfo getGradient(double[] beta) {\n        final double[] g = new double[2];\n        final double x = beta[0];\n        final double y = beta[1];\n        final double xx = x * x;\n        g[0] = -2 * a + 2 * x - 4 * b * (y * x - x * xx);\n        g[1] = 2 * b * (y - xx);\n        double objVal = (a - x) * (a - x) + b * (y - xx) * (y - xx);\n        return new GradientInfo(objVal, g);\n      }\n\n      @Override\n      public double[] lineSearch(double[] beta, double[] pk) {\n        double [] res = new double[128];\n        double step = 1;\n        for(int i = 0; i < res.length; ++i) {\n          double x = beta[0] + pk[0]*step;\n          double y = beta[1] + pk[1]*step;\n          double xx = x * x;\n          res[i] = (a - x) * (a - x) + b * (y - xx) * (y - xx);\n          step *= _step;\n        }\n        return res;\n      }\n    };\n    int fails = 0;\n    L_BFGS lbfgs = new L_BFGS().setGradEps(1e-12);\n    L_BFGS.Result r = lbfgs.solve(gs, L_BFGS.startCoefs(2, 987654321));\n    assertTrue(\"LBFGS failed to solve Rosenbrock function optimization\",r.ginfo._objVal <  1e-4);\n  }","id":39807,"modified_method":"@Test\n  public void rosenbrock() {\n    final double a = 1, b = 100;\n    GradientSolver gs = new GradientSolver() {\n      @Override\n      public GradientInfo getGradient(double[] beta) {\n        final double[] g = new double[2];\n        final double x = beta[0];\n        final double y = beta[1];\n        final double xx = x * x;\n        g[0] = -2 * a + 2 * x - 4 * b * (y * x - x * xx);\n        g[1] = 2 * b * (y - xx);\n        double objVal = (a - x) * (a - x) + b * (y - xx) * (y - xx);\n        return new GradientInfo(objVal, g);\n      }\n\n      @Override\n      public double[] getObjVals(double[] beta, double[] pk) {\n        double [] res = new double[128];\n        double step = 1;\n        for(int i = 0; i < res.length; ++i) {\n          double x = beta[0] + pk[0]*step;\n          double y = beta[1] + pk[1]*step;\n          double xx = x * x;\n          res[i] = (a - x) * (a - x) + b * (y - xx) * (y - xx);\n          step *= _step;\n        }\n        return res;\n      }\n    };\n    int fails = 0;\n    L_BFGS lbfgs = new L_BFGS().setGradEps(1e-12);\n    L_BFGS.Result r = lbfgs.solve(gs, L_BFGS.startCoefs(2, 987654321));\n    assertTrue(\"LBFGS failed to solve Rosenbrock function optimization\",r.ginfo._objVal <  1e-4);\n  }","commit_id":"289b0f88af9c96f9f828cca6c2b182f601357c14","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/**\n     * Describe {@code deliverUpdateEvent} method here.\n     *\n     * @param ref Reference to the document that should be\n     * invalidated.\n     */\n    private void deliverUpdateEvent(DocumentReference ref)\n    {\n        if (ref.getName().equals(XWikiConstants.WIKI_DOC)\n            && ref.getLastSpaceReference().getName().equals(XWikiConstants.WIKI_SPACE)) {\n            securityCache.remove(securityReferenceFactory.newEntityReference(ref.getWikiReference()));\n        } else if (ref.getName().equals(XWikiConstants.SPACE_DOC)) {\n            securityCache.remove(securityReferenceFactory.newEntityReference(ref.getParent()));\n        } else {\n            securityCache.remove(securityReferenceFactory.newEntityReference(ref));\n        }\n    }","id":39808,"modified_method":"/**\n     * Describe {@code deliverUpdateEvent} method here.\n     *\n     * @param ref Reference to the document that should be\n     * invalidated.\n     */\n    private void deliverUpdateEvent(DocumentReference ref)\n    {\n        if (ref.getName().equals(XWikiConstants.WIKI_DOC)\n            && ref.getLastSpaceReference().getName().equals(XWikiConstants.XWIKI_SPACE)) {\n            securityCache.remove(securityReferenceFactory.newEntityReference(ref.getWikiReference()));\n        } else if (ref.getName().equals(XWikiConstants.SPACE_DOC)) {\n            securityCache.remove(securityReferenceFactory.newEntityReference(ref.getParent()));\n        } else {\n            securityCache.remove(securityReferenceFactory.newEntityReference(ref));\n        }\n    }","commit_id":"5ae6cc23c8315f281c71d03d63bb302d7916e0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Load the rules from wiki documents.\n     *\n     * @param entity Any entity reference that is either a WIKI or a SPACE, or an entity containing a DOCUMENT entity.\n     * @return the access rules that could be loaded into the cache.\n     * @throws org.xwiki.security.authorization.AuthorizationException if an issue arise while reading these rules\n     *         from the wiki.\n     */\n    public SecurityRuleEntry read(SecurityReference entity) throws AuthorizationException\n    {\n        DocumentReference documentReference;\n        DocumentReference classReference;\n        WikiReference wikiReference;\n\n        switch (entity.getType()) {\n            case WIKI:\n                wikiReference = new WikiReference(entity);\n                SpaceReference wikiSpace = new SpaceReference(XWikiConstants.WIKI_SPACE, wikiReference);\n                documentReference = new DocumentReference(XWikiConstants.WIKI_DOC, wikiSpace);\n                classReference = new DocumentReference(XWikiConstants.GLOBAL_CLASSNAME, wikiSpace);\n                break;\n            case SPACE:\n                wikiReference = new WikiReference(entity.extractReference(EntityType.WIKI));\n                documentReference = new DocumentReference(XWikiConstants.SPACE_DOC, new SpaceReference(entity));\n                classReference = new DocumentReference(XWikiConstants.GLOBAL_CLASSNAME,\n                    new SpaceReference(XWikiConstants.WIKI_SPACE, wikiReference));\n                break;\n            default:\n                EntityReference relatedDocument = entity.extractReference(EntityType.DOCUMENT);\n                if (relatedDocument != null) {\n                    wikiReference = new WikiReference(relatedDocument.extractReference(EntityType.WIKI));\n                    documentReference = new DocumentReference(relatedDocument);\n                    classReference = new DocumentReference(XWikiConstants.LOCAL_CLASSNAME,\n                        new SpaceReference(XWikiConstants.WIKI_SPACE, wikiReference));\n                } else {\n                    this.logger.debug(\"Rights on entities of type {} is not supported by this reader!\",\n                                      entity.getType());\n                    throw new EntityTypeNotSupportedException(entity.getType(), this);\n                }\n        }\n\n        XWikiContext context = getXWikiContext();\n        List<BaseObject> baseObjects;\n        List<SecurityRule> securityRules = new ArrayList<SecurityRule>();\n\n        try {\n            XWikiDocument doc = context.getWiki().getDocument(documentReference, context);\n            if (doc == null) {\n                return new InternalSecurityRuleEntry(entity, Collections.<SecurityRule>emptyList());\n            }\n            baseObjects = doc.getXObjects(classReference);\n        } catch (XWikiException e) {\n            throw new AuthorizationException(documentReference, \"Couldn't read right objects\", e);\n        }\n\n        if (baseObjects != null) {\n            for (BaseObject obj : baseObjects) {\n                if (obj != null) {\n                    // The users and groups listed by the rights object, inherit\n                    // the wiki from the document, unless explicitly given.\n                    securityRules.add(new XWikiSecurityRule(obj, resolver, wikiReference));\n                }\n            }\n        }\n\n        return new InternalSecurityRuleEntry(entity, securityRules);\n    }","id":39809,"modified_method":"/**\n     * Load the rules from wiki documents.\n     *\n     * @param entity Any entity reference that is either a WIKI or a SPACE, or an entity containing a DOCUMENT entity.\n     * @return the access rules that could be loaded into the cache.\n     * @throws org.xwiki.security.authorization.AuthorizationException if an issue arise while reading these rules\n     *         from the wiki.\n     */\n    public SecurityRuleEntry read(SecurityReference entity) throws AuthorizationException\n    {\n        DocumentReference documentReference;\n        DocumentReference classReference;\n        WikiReference wikiReference;\n\n        switch (entity.getType()) {\n            case WIKI:\n                wikiReference = new WikiReference(entity);\n                SpaceReference wikiSpace = new SpaceReference(XWikiConstants.XWIKI_SPACE, wikiReference);\n                documentReference = new DocumentReference(XWikiConstants.WIKI_DOC, wikiSpace);\n                classReference = new DocumentReference(XWikiConstants.GLOBAL_CLASSNAME, wikiSpace);\n                break;\n            case SPACE:\n                wikiReference = new WikiReference(entity.extractReference(EntityType.WIKI));\n                documentReference = new DocumentReference(XWikiConstants.SPACE_DOC, new SpaceReference(entity));\n                classReference = new DocumentReference(XWikiConstants.GLOBAL_CLASSNAME,\n                    new SpaceReference(XWikiConstants.XWIKI_SPACE, wikiReference));\n                break;\n            default:\n                EntityReference relatedDocument = entity.extractReference(EntityType.DOCUMENT);\n                if (relatedDocument != null) {\n                    wikiReference = new WikiReference(relatedDocument.extractReference(EntityType.WIKI));\n                    documentReference = new DocumentReference(relatedDocument);\n                    classReference = new DocumentReference(XWikiConstants.LOCAL_CLASSNAME,\n                        new SpaceReference(XWikiConstants.XWIKI_SPACE, wikiReference));\n                } else {\n                    this.logger.debug(\"Rights on entities of type {} is not supported by this reader!\",\n                                      entity.getType());\n                    throw new EntityTypeNotSupportedException(entity.getType(), this);\n                }\n        }\n\n        XWikiContext context = getXWikiContext();\n        List<BaseObject> baseObjects;\n        List<SecurityRule> securityRules = new ArrayList<SecurityRule>();\n\n        try {\n            XWikiDocument doc = context.getWiki().getDocument(documentReference, context);\n            if (doc == null) {\n                return new InternalSecurityRuleEntry(entity, Collections.<SecurityRule>emptyList());\n            }\n            baseObjects = doc.getXObjects(classReference);\n        } catch (XWikiException e) {\n            throw new AuthorizationException(documentReference, \"Couldn't read right objects\", e);\n        }\n\n        if (baseObjects != null) {\n            for (BaseObject obj : baseObjects) {\n                if (obj != null) {\n                    // The users and groups listed by the rights object, inherit\n                    // the wiki from the document, unless explicitly given.\n                    securityRules.add(new XWikiSecurityRule(obj, resolver, wikiReference));\n                }\n            }\n        }\n\n        return new InternalSecurityRuleEntry(entity, securityRules);\n    }","commit_id":"5ae6cc23c8315f281c71d03d63bb302d7916e0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public DocumentReference resolve(String documentReferenceRepresentation, Object... parameters)\n    {\n        if (parameters.length > 0 && !(parameters[0] instanceof EntityReference)) {\n            throw new IllegalArgumentException(\"The settler parameter is not a WikiReference.\");\n        }\n        EntityReference defaultSpace;\n        if (parameters.length > 0) {\n            EntityReference defaultWiki = ((EntityReference) parameters[0]).extractReference(EntityType.WIKI);\n            defaultSpace = new EntityReference(XWikiConstants.WIKI_SPACE, EntityType.SPACE, defaultWiki);\n        } else {\n            defaultSpace = resolver.resolve(XWikiConstants.WIKI_SPACE, EntityType.SPACE);\n        }\n        return new DocumentReference(resolver.resolve(documentReferenceRepresentation,\n                                                      EntityType.DOCUMENT,\n                                                      defaultSpace));\n    }","id":39810,"modified_method":"@Override\n    public DocumentReference resolve(String documentReferenceRepresentation, Object... parameters)\n    {\n        if (parameters.length > 0 && !(parameters[0] instanceof EntityReference)) {\n            throw new IllegalArgumentException(\"The settler parameter is not a WikiReference.\");\n        }\n        EntityReference defaultSpace;\n        if (parameters.length > 0) {\n            EntityReference defaultWiki = ((EntityReference) parameters[0]).extractReference(EntityType.WIKI);\n            defaultSpace = new EntityReference(XWikiConstants.XWIKI_SPACE, EntityType.SPACE, defaultWiki);\n        } else {\n            defaultSpace = resolver.resolve(XWikiConstants.XWIKI_SPACE, EntityType.SPACE);\n        }\n        return new DocumentReference(resolver.resolve(documentReferenceRepresentation,\n                                                      EntityType.DOCUMENT,\n                                                      defaultSpace));\n    }","commit_id":"5ae6cc23c8315f281c71d03d63bb302d7916e0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Test that programming rights are checked on the context user when no context document is set.\n     * \n     * @throws com.xpn.xwiki.XWikiException on error\n     */\n    @Test\n    public void testProgrammingRightsWhenNoContextDocumentIsSet() throws Exception\n    {\n        LegacyTestWiki testWiki = newTestWiki(\"programmingRights.xml\");\n\n        XWikiContext ctx = testWiki.getXWikiContext();\n\n        ctx.setDatabase(\"wiki\");\n\n        setContext(ctx);\n\n        testWiki.setSdoc(null);\n\n        // XWiki.Programmer should have PR, as per the global rights.\n        testWiki.setUser(\"XWiki.programmer\");\n        Assert.assertTrue(getLegacyImpl().hasProgrammingRights(ctx));\n        Assert.assertTrue(getCachingImpl().hasProgrammingRights(ctx));\n\n        // Guests should not have PR\n        testWiki.setUser(XWikiConstants.GUEST_USER_FULLNAME);\n        Assert.assertFalse(getLegacyImpl().hasProgrammingRights(ctx));\n        Assert.assertFalse(getCachingImpl().hasProgrammingRights(ctx));\n\n        // superadmin should always have PR\n        testWiki.setUser(XWikiConstants.WIKI_SPACE + '.' + AuthorizationManager.SUPERADMIN_USER);\n        Assert.assertTrue(getLegacyImpl().hasProgrammingRights(ctx));\n        Assert.assertTrue(getCachingImpl().hasProgrammingRights(ctx));\n\n    }","id":39811,"modified_method":"/**\n     * Test that programming rights are checked on the context user when no context document is set.\n     * \n     * @throws com.xpn.xwiki.XWikiException on error\n     */\n    @Test\n    public void testProgrammingRightsWhenNoContextDocumentIsSet() throws Exception\n    {\n        LegacyTestWiki testWiki = newTestWiki(\"programmingRights.xml\");\n\n        XWikiContext ctx = testWiki.getXWikiContext();\n\n        ctx.setDatabase(\"wiki\");\n\n        setContext(ctx);\n\n        testWiki.setSdoc(null);\n\n        // XWiki.Programmer should have PR, as per the global rights.\n        testWiki.setUser(\"XWiki.programmer\");\n        Assert.assertTrue(getLegacyImpl().hasProgrammingRights(ctx));\n        Assert.assertTrue(getCachingImpl().hasProgrammingRights(ctx));\n\n        // Guests should not have PR\n        testWiki.setUser(XWikiConstants.GUEST_USER_FULLNAME);\n        Assert.assertFalse(getLegacyImpl().hasProgrammingRights(ctx));\n        Assert.assertFalse(getCachingImpl().hasProgrammingRights(ctx));\n\n        // superadmin should always have PR\n        testWiki.setUser(XWikiConstants.XWIKI_SPACE + '.' + AuthorizationManager.SUPERADMIN_USER);\n        Assert.assertTrue(getLegacyImpl().hasProgrammingRights(ctx));\n        Assert.assertTrue(getCachingImpl().hasProgrammingRights(ctx));\n\n    }","commit_id":"5ae6cc23c8315f281c71d03d63bb302d7916e0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Construct a more manageable java object from the corresponding\n     * xwiki object.\n     * @param obj An xwiki rights object.\n     * @param resolver A document reference resolver for user and group pages.\n     * @param wikiReference The name of the current wiki.\n     */\n    protected XWikiSecurityRule(BaseObject obj, DocumentReferenceResolver<String> resolver,\n        WikiReference wikiReference)\n    {\n        state = (obj.getIntValue(XWikiConstants.ALLOW_FIELD_NAME) == 1) ? RuleState.ALLOW : RuleState.DENY;\n        users = new HashSet<DocumentReference>();\n        groups = new HashSet<DocumentReference>();\n        rights = new RightSet();\n\n        String levels = obj.getStringValue(\"levels\");\n        String[] levelsarray = StringUtils.split(levels, \" ,|\");\n        for (String s : levelsarray) {\n            Right right = Right.toRight(s);\n            if (right != Right.ILLEGAL) {\n                rights.add(right);\n            }\n        }\n\n        for (String user : UsersClass.getListFromString(obj.getStringValue(XWikiConstants.USERS_FIELD_NAME))) {\n            DocumentReference ref = resolver.resolve(user, wikiReference);\n            this.users.add(ref);\n        }\n\n        for (String group : GroupsClass.getListFromString(obj.getStringValue(XWikiConstants.GROUPS_FIELD_NAME))) {\n            DocumentReference ref = resolver.resolve(group, wikiReference);\n            this.groups.add(ref);\n        }\n    }","id":39812,"modified_method":"/**\n     * Construct a more manageable java object from the corresponding\n     * xwiki object.\n     * @param obj An xwiki rights object.\n     * @param resolver A document reference resolver for user and group pages.\n     * @param wikiReference The name of the current wiki.\n     */\n    @SuppressWarnings(\"unchecked\")\n    protected XWikiSecurityRule(BaseObject obj, DocumentReferenceResolver<String> resolver,\n        WikiReference wikiReference)\n    {\n        state = (obj.getIntValue(XWikiConstants.ALLOW_FIELD_NAME) == 1) ? RuleState.ALLOW : RuleState.DENY;\n        users = new HashSet<DocumentReference>();\n        groups = new HashSet<DocumentReference>();\n        rights = new RightSet();\n\n        for (String s : (List<String>) ((BaseProperty) obj.safeget(XWikiConstants.LEVEL_FIELD_NAME)).getValue()) {\n            Right right = Right.toRight(s);\n            if (right != Right.ILLEGAL) {\n                rights.add(right);\n            }\n        }\n\n        for (String user : (List<String>) ((BaseProperty) obj.safeget(XWikiConstants.USERS_FIELD_NAME)).getValue()) {\n            DocumentReference ref = resolver.resolve(user, wikiReference);\n            this.users.add(ref);\n        }\n\n        for (String group : (List<String>) ((BaseProperty) obj.safeget(XWikiConstants.GROUPS_FIELD_NAME)).getValue()) {\n            DocumentReference ref = resolver.resolve(group, wikiReference);\n            this.groups.add(ref);\n        }\n    }","commit_id":"5ae6cc23c8315f281c71d03d63bb302d7916e0fc","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private InputSource getTemplateStreamFromDocumentSkin(String skin, String template)\n    {\n        XWikiDocument skinDocument = getSkinDocument(skin);\n\n        if (skinDocument != null) {\n            // Try parsing the object property\n            BaseObject skinObject = skinDocument.getXObject(SKINCLASS_REFERENCE);\n            if (skinObject != null) {\n                String escapedTemplateName = template.replaceAll(\"/\", \".\");\n                String content = skinObject.getStringValue(escapedTemplateName);\n\n                return new StringInputSource(content);\n            }\n\n            // Try parsing a document attachment\n            XWikiAttachment attachment = skinDocument.getAttachment(template);\n            if (attachment != null) {\n                // It's impossible to know the real attachment encoding, but let's assume that they respect the\n                // standard and use UTF-8 (which is required for the files located on the filesystem)\n                try {\n                    return new DefaultInputStreamInputSource(attachment.getContentInputStream(this.xcontextProvider\n                        .get()), true);\n                } catch (XWikiException e) {\n                    this.logger.error(\"Faied to get attachment content [{}]\", skinDocument.getDocumentReference(), e);\n                }\n            }\n        }\n\n        return null;\n    }","id":39813,"modified_method":"private InputSource getTemplateStreamFromDocumentSkin(String skin, String template)\n    {\n        XWikiDocument skinDocument = getSkinDocument(skin);\n\n        if (skinDocument != null) {\n            // Try parsing the object property\n            BaseObject skinObject = skinDocument.getXObject(SKINCLASS_REFERENCE);\n            if (skinObject != null) {\n                String escapedTemplateName = template.replaceAll(\"/\", \".\");\n                BaseProperty templateProperty = (BaseProperty) skinObject.safeget(escapedTemplateName);\n                if (templateProperty != null) {\n                    Object value = templateProperty.getValue();\n                    if (value instanceof String && StringUtils.isNotEmpty((String) value)) {\n                        return new StringInputSource((String) value);\n                    }\n                }\n            }\n\n            // Try parsing a document attachment\n            XWikiAttachment attachment = skinDocument.getAttachment(template);\n            if (attachment != null) {\n                // It's impossible to know the real attachment encoding, but let's assume that they respect the\n                // standard and use UTF-8 (which is required for the files located on the filesystem)\n                try {\n                    return new DefaultInputStreamInputSource(attachment.getContentInputStream(this.xcontextProvider\n                        .get()), true);\n                } catch (XWikiException e) {\n                    this.logger.error(\"Faied to get attachment content [{}]\", skinDocument.getDocumentReference(), e);\n                }\n            }\n        }\n\n        return null;\n    }","commit_id":"184c01cf5af753cadd03bed5715a79ae1026b425","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Initializes a command object.\n     *\n     * If type is a domain class and the request body or parameters include an id, the id is used to retrieve\n     * the command object instance from the database, otherwise the no-arg constructor on type is invoke.  If\n     * an attempt is made to retrieve the command object instance from the database and no corresponding\n     * record is found, null is returned.\n     *\n     * The command object is then subjected to data binding and dependency injection before being returned.\n     *\n     *\n     * @param controllerInstance The controller instance\n     * @param type The type of the command object\n     * @return the initialized command object or null if the command object is a domain class, the body or\n     * parameters included an id and no corresponding record was found in the database.\n     */\n    public Object initializeCommandObject(final Object controllerInstance, final Class type, final String commandObjectParameterName) throws Exception {\n        final HttpServletRequest request = getRequest(controllerInstance);\n        final DataBindingSource dataBindingSource = DataBindingUtils.createDataBindingSource(getGrailsApplication(controllerInstance), type, request);\n        final DataBindingSource commandObjectBindingSource = WebMetaUtils.getCommandObjectBindingSourceForPrefix(commandObjectParameterName, dataBindingSource);\n        Object commandObjectInstance = null;\n        Object entityIdentifierValue = null;\n        final boolean isDomainClass = DomainClassArtefactHandler.isDomainClass(type);\n        if(isDomainClass) {\n            entityIdentifierValue = commandObjectBindingSource.getIdentifierValue();\n            if(entityIdentifierValue == null) {\n                final GrailsWebRequest webRequest = GrailsWebRequest.lookup(request);\n                entityIdentifierValue = webRequest != null ? webRequest.getParams().getIdentifier() : null;\n            }\n        }\n        if(entityIdentifierValue instanceof String) {\n            entityIdentifierValue = ((String)entityIdentifierValue).trim();\n            if(\"\".equals(entityIdentifierValue) || \"null\".equals(entityIdentifierValue)) {\n                entityIdentifierValue = null;\n            }\n        }\n        \n        final HttpMethod requestMethod = HttpMethod.valueOf(request.getMethod());\n        \n        if(entityIdentifierValue != null) {\n            try {\n                commandObjectInstance = InvokerHelper.invokeStaticMethod(type, \"get\", entityIdentifierValue);\n            } catch (Exception e) {\n                final Errors errors = getErrors(controllerInstance);\n                if(errors != null) {\n                    errors.reject(controllerInstance.getClass().getName() + \".commandObject.\" + commandObjectParameterName + \".error\", e.getMessage());\n                }\n            }\n        } else if(requestMethod == HttpMethod.POST || !isDomainClass){ \n            commandObjectInstance = type.newInstance();\n        }\n\n        if(commandObjectInstance != null) {\n            final boolean shouldDoDataBinding;\n\n            if(entityIdentifierValue != null) {\n                switch(requestMethod) {\n                    case PATCH:\n                    case POST:\n                    case PUT:\n                        shouldDoDataBinding = true;\n                        break;\n                    default:\n                        shouldDoDataBinding = false;\n                }\n            } else {\n                shouldDoDataBinding = true;\n            }\n\n            if(shouldDoDataBinding) {\n                bindData(controllerInstance, commandObjectInstance, commandObjectBindingSource, Collections.EMPTY_MAP, null);\n            }\n\n            final ApplicationContext applicationContext = getApplicationContext(controllerInstance);\n            final AutowireCapableBeanFactory autowireCapableBeanFactory = applicationContext.getAutowireCapableBeanFactory();\n            autowireCapableBeanFactory.autowireBeanProperties(commandObjectInstance, AutowireCapableBeanFactory.AUTOWIRE_BY_NAME, false);\n        }\n        return commandObjectInstance;\n    }","id":39814,"modified_method":"/**\n     * Initializes a command object.\n     *\n     * If type is a domain class and the request body or parameters include an id, the id is used to retrieve\n     * the command object instance from the database, otherwise the no-arg constructor on type is invoke.  If\n     * an attempt is made to retrieve the command object instance from the database and no corresponding\n     * record is found, null is returned.\n     *\n     * The command object is then subjected to data binding and dependency injection before being returned.\n     *\n     *\n     * @param controllerInstance The controller instance\n     * @param type The type of the command object\n     * @return the initialized command object or null if the command object is a domain class, the body or\n     * parameters included an id and no corresponding record was found in the database.\n     */\n    public Object initializeCommandObject(final Object controllerInstance, final Class type, final String commandObjectParameterName) throws Exception {\n        final HttpServletRequest request = getRequest(controllerInstance);\n        Object commandObjectInstance = null;\n        \n        try {\n            final DataBindingSource dataBindingSource = DataBindingUtils\n                    .createDataBindingSource(\n                            getGrailsApplication(controllerInstance), type,\n                            request);\n            final DataBindingSource commandObjectBindingSource = WebMetaUtils\n                    .getCommandObjectBindingSourceForPrefix(\n                            commandObjectParameterName, dataBindingSource);\n            Object entityIdentifierValue = null;\n            final boolean isDomainClass = DomainClassArtefactHandler\n                    .isDomainClass(type);\n            if (isDomainClass) {\n                entityIdentifierValue = commandObjectBindingSource\n                        .getIdentifierValue();\n                if (entityIdentifierValue == null) {\n                    final GrailsWebRequest webRequest = GrailsWebRequest\n                            .lookup(request);\n                    entityIdentifierValue = webRequest != null ? webRequest\n                            .getParams().getIdentifier() : null;\n                }\n            }\n            if (entityIdentifierValue instanceof String) {\n                entityIdentifierValue = ((String) entityIdentifierValue).trim();\n                if (\"\".equals(entityIdentifierValue)\n                        || \"null\".equals(entityIdentifierValue)) {\n                    entityIdentifierValue = null;\n                }\n            }\n\n            final HttpMethod requestMethod = HttpMethod.valueOf(request.getMethod());\n\n            if (entityIdentifierValue != null) {\n                try {\n                    commandObjectInstance = InvokerHelper.invokeStaticMethod(type, \"get\", entityIdentifierValue);\n                } catch (Exception e) {\n                    final Errors errors = getErrors(controllerInstance);\n                    if (errors != null) {\n                        errors.reject(controllerInstance.getClass().getName()\n                                + \".commandObject.\"\n                                + commandObjectParameterName + \".error\",\n                                e.getMessage());\n                    }\n                }\n            } else if (requestMethod == HttpMethod.POST || !isDomainClass) {\n                commandObjectInstance = type.newInstance();\n            }\n\n            if (commandObjectInstance != null\n                    && commandObjectBindingSource != null) {\n                final boolean shouldDoDataBinding;\n\n                if (entityIdentifierValue != null) {\n                    switch (requestMethod) {\n                    case PATCH:\n                    case POST:\n                    case PUT:\n                        shouldDoDataBinding = true;\n                        break;\n                    default:\n                        shouldDoDataBinding = false;\n                    }\n                } else {\n                    shouldDoDataBinding = true;\n                }\n\n                if (shouldDoDataBinding) {\n                    bindData(controllerInstance, commandObjectInstance, commandObjectBindingSource, Collections.EMPTY_MAP, null);\n                }\n            }\n        } catch (InvalidRequestBodyException e) {\n            commandObjectInstance = type.newInstance();\n            final Object o = GrailsMetaClassUtils.invokeMethodIfExists(commandObjectInstance, \"getErrors\");\n            if(o instanceof BindingResult) {\n                final BindingResult errors = (BindingResult)o;\n                String msg = \"Error occurred initializing command object [\" + commandObjectParameterName + \"]. \" + e.getMessage();\n                ObjectError error = new ObjectError(commandObjectParameterName, msg);\n                errors.addError(error);\n            }\n        }\n\n        if(commandObjectInstance != null) {\n            final ApplicationContext applicationContext = getApplicationContext(controllerInstance);\n            final AutowireCapableBeanFactory autowireCapableBeanFactory = applicationContext.getAutowireCapableBeanFactory();\n            autowireCapableBeanFactory.autowireBeanProperties(commandObjectInstance, AutowireCapableBeanFactory.AUTOWIRE_BY_NAME, false);\n        }\n\n        return commandObjectInstance;\n    }","commit_id":"801d507cf3fec5866baa14f6d6b0acd05aa5fb56","url":"https://github.com/grails/grails-core"},{"original_method":"@Override\n    public void autowireBeanProperties(Object existingBean, int autowireMode, boolean dependencyCheck) throws BeansException {\n        if (Environment.isInitializing()) {\n            return;\n        }\n        if (autowireMode == AUTOWIRE_BY_NAME) {\n            if (DISABLE_AUTOWIRE_BY_NAME_OPTIMIZATIONS || dependencyCheck || existingBean instanceof Aware) {\n                super.autowireBeanProperties(existingBean, autowireMode, dependencyCheck);\n            } else {\n                populateBeanInAutowireByName(existingBean);\n            }\n        } else {\n            super.autowireBeanProperties(existingBean, autowireMode, dependencyCheck);\n        }\n    }","id":39815,"modified_method":"@Override\n    public void autowireBeanProperties(Object existingBean, int autowireMode, boolean dependencyCheck) throws BeansException {\n        if (Environment.isInitializing()) {\n            return;\n        }\n        if (autowireMode == AUTOWIRE_BY_NAME) {\n            if (DISABLE_AUTOWIRE_BY_NAME_OPTIMIZATIONS || dependencyCheck || existingBean instanceof Aware) {\n                super.autowireBeanProperties(existingBean, autowireMode, dependencyCheck);\n            } else {\n                try {\n                    populateBeanInAutowireByName(existingBean);\n                } catch (Exception e) {\n                    logger.error(\"Bean couldn't be autowired using grails optimization: \" + e.getMessage());\n                    logger.error(\"Retrying using spring autowire\");\n\n                    // Remove the cache value in order to asure there is no problem with a previous value\n                    Class<?> beanClass = ClassUtils.getUserClass(existingBean.getClass());\n                    autowireableBeanPropsCacheForClass.remove(beanClass);\n\n                    // Calls the spring method\n                    super.autowireBeanProperties(existingBean, autowireMode, dependencyCheck);\n                }\n            }\n        } else {\n            super.autowireBeanProperties(existingBean, autowireMode, dependencyCheck);\n        }\n    }","commit_id":"bebac8eb397bb535137a34f66337c7ebb7c59209","url":"https://github.com/grails/grails-core"},{"original_method":"@Override\n\tpublic void autowireBeanProperties(Object existingBean, int autowireMode,\n\t\t\tboolean dependencyCheck) throws BeansException {\n\t\tif (!reloadEnabled && autowireMode == AUTOWIRE_BY_NAME) {\n\t\t\tSet<String> beanProps = autowiringByNameCacheForClass\n\t\t\t\t\t.get(ClassUtils.getUserClass(existingBean.getClass()));\n\t\t\tif (beanProps != null && beanProps.isEmpty()) {\n\t\t\t\t// nothing to autowire\n\t\t\t\t// doesn't take instance based beanpostprocessors in to account\t\t\t\t\n\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\tlogger.debug(\"Nothing to autowire for bean of class \"\n\t\t\t\t\t\t\t+ existingBean.getClass().getName());\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tsuper.autowireBeanProperties(existingBean, autowireMode,\n\t\t\t\tdependencyCheck);\n\t}","id":39816,"modified_method":"@Override\n\tpublic void autowireBeanProperties(Object existingBean, int autowireMode,\n\t\t\tboolean dependencyCheck) throws BeansException {\n\t\tif (!reloadEnabled && autowireMode == AUTOWIRE_BY_NAME) {\n\t\t\tSet<String> beanProps = autowiringByNameCacheForClass\n\t\t\t\t\t.get(ClassUtils.getUserClass(existingBean.getClass()));\n\t\t\tif (beanProps != null && beanProps.isEmpty()) {\n\t\t\t\t// nothing to autowire\n\t\t\t\t// doesn't take instance based beanpostprocessors in to account\t\t\t\t\n\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\tlogger.debug(\"Nothing to autowire for bean of class \"\n\t\t\t\t\t\t\t+ existingBean.getClass().getName());\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(autowireMode == AUTOWIRE_BY_NAME) {\n\t\t\tRootBeanDefinition bd =\n\t\t\t\t\tnew RootBeanDefinition(ClassUtils.getUserClass(existingBean), autowireMode, dependencyCheck);\n\t\t\tbd.setScope(BeanDefinition.SCOPE_PROTOTYPE);\n\t\t\tbd.setSynthetic(true);\n\t\t\t// use optimized method for autowiring by name, don't register any editors for BeanWrapperImpl\n\t\t\tBeanWrapperImpl bw = new BeanWrapperImpl(false);\n\t\t\tbw.setWrappedInstance(existingBean);\n\t\t\tbw.setConversionService(getConversionService());\n\t\t\tpopulateBean(bd.getBeanClass().getName(), bd, bw);\t\t\t\n\t\t} else {\n\t\t\tsuper.autowireBeanProperties(existingBean, autowireMode,\n\t\t\t\t\tdependencyCheck);\n\t\t}\n\t}","commit_id":"7b7cf01fa3c9513a0f75fe15c04ec805b9c94c4f","url":"https://github.com/grails/grails-core"},{"original_method":"MockGrailsApplication() {\n        mockCodecArtefacts.put(HTMLCodec.class.getName(), new DefaultGrailsCodecClass(HTMLCodec.class));\n        mockCodecArtefacts.put(CodecWithClosureProperties.class.getName(), new DefaultGrailsCodecClass(CodecWithClosureProperties.class));\n    }","id":39817,"modified_method":"MockGrailsApplication() {\n        DefaultGrailsCodecClass htmlCodec = new DefaultGrailsCodecClass(HTMLCodec.class);\n        htmlCodec.afterPropertiesSet();\n        mockCodecArtefacts.put(HTMLCodec.class.getName(), htmlCodec);\n        DefaultGrailsCodecClass codecWithClosureProperties = new DefaultGrailsCodecClass(CodecWithClosureProperties.class);\n        codecWithClosureProperties.afterPropertiesSet();\n        mockCodecArtefacts.put(CodecWithClosureProperties.class.getName(), codecWithClosureProperties);\n    }","commit_id":"b831fd55c520be2170f91d22af3f46b0fe3c2a9c","url":"https://github.com/grails/grails-core"},{"original_method":"private void initializeCodec() {\n        Integer orderSetting = getPropertyOrStaticPropertyOrFieldValue(\"order\", Integer.class);\n        if (orderSetting != null) {\n            order = orderSetting;\n        }\n        if (Encoder.class.isAssignableFrom(getClazz())) {\n            encoder = (Encoder)getReferenceInstance();\n            autowireCodecBean(encoder);\n            if (encoder instanceof Ordered) {\n                order = ((Ordered)encoder).getOrder();\n            }\n        }\n        if (Decoder.class.isAssignableFrom(getClazz())) {\n            decoder = (Decoder)getReferenceInstance();\n            autowireCodecBean(decoder);\n            if (decoder instanceof Ordered) {\n                order = ((Ordered)decoder).getOrder();\n            }\n        }\n        if (encoder==null && decoder==null) {\n            CodecFactory codecFactory=null;\n            if (CodecFactory.class.isAssignableFrom(getClazz())) {\n                codecFactory=(CodecFactory)getReferenceInstance();\n                autowireCodecBean(codecFactory);\n            }\n            if (codecFactory==null) {\n                codecFactory=getPropertyOrStaticPropertyOrFieldValue(\"codecFactory\", CodecFactory.class);\n                autowireCodecBean(codecFactory);\n            }\n            if (codecFactory==null) {\n                codecFactory=new ClosureCodecFactory();\n            }\n            encoder=codecFactory.getEncoder();\n            decoder=codecFactory.getDecoder();\n            if (codecFactory instanceof Ordered) {\n                order = ((Ordered)codecFactory).getOrder();\n            }\n        }\n        if (encoder != null) {\n            if (encoder instanceof StreamingEncoder) {\n                encoder=new StreamingStateAwareEncoderWrapper((StreamingEncoder)encoder);\n            } else {\n                encoder=new StateAwareEncoderWrapper(encoder);\n            }\n        }\n    }","id":39818,"modified_method":"private void initializeCodec() {\n        if (initialized) return;\n        initialized = true;\n        Integer orderSetting = getPropertyOrStaticPropertyOrFieldValue(\"order\", Integer.class);\n        if (orderSetting != null) {\n            order = orderSetting;\n        }\n        if (Encoder.class.isAssignableFrom(getClazz())) {\n            encoder = (Encoder)getReferenceInstance();\n            encoder = (Encoder)autowireCodecBean(encoder);\n            if (encoder instanceof Ordered) {\n                order = ((Ordered)encoder).getOrder();\n            }\n        }\n        if (Decoder.class.isAssignableFrom(getClazz())) {\n            decoder = (Decoder)getReferenceInstance();\n            decoder = (Decoder)autowireCodecBean(decoder);\n            if (decoder instanceof Ordered) {\n                order = ((Ordered)decoder).getOrder();\n            }\n        }\n        if (encoder==null && decoder==null) {\n            CodecFactory codecFactory=null;\n            if (CodecFactory.class.isAssignableFrom(getClazz())) {\n                codecFactory=(CodecFactory)getReferenceInstance();\n                codecFactory=(CodecFactory)autowireCodecBean(codecFactory);\n            }\n            if (codecFactory==null) {\n                codecFactory=getPropertyOrStaticPropertyOrFieldValue(\"codecFactory\", CodecFactory.class);\n                codecFactory=(CodecFactory)autowireCodecBean(codecFactory);\n            }\n            if (codecFactory==null) {\n                codecFactory=new ClosureCodecFactory();\n            }\n            encoder=codecFactory.getEncoder();\n            decoder=codecFactory.getDecoder();\n            if (codecFactory instanceof Ordered) {\n                order = ((Ordered)codecFactory).getOrder();\n            }\n        }\n        if (encoder != null) {\n            if (encoder instanceof StreamingEncoder) {\n                encoder=new StreamingStateAwareEncoderWrapper((StreamingEncoder)encoder);\n            } else {\n                encoder=new StateAwareEncoderWrapper(encoder);\n            }\n        }\n    }","commit_id":"b831fd55c520be2170f91d22af3f46b0fe3c2a9c","url":"https://github.com/grails/grails-core"},{"original_method":"protected void autowireCodecBean(Object existingBean) {\n        if (existingBean != null && grailsApplication != null && grailsApplication.getMainContext() != null) {\n            grailsApplication.getMainContext().getAutowireCapableBeanFactory().autowireBeanProperties(\n                    existingBean, AutowireCapableBeanFactory.AUTOWIRE_BY_NAME, false);\n        }\n    }","id":39819,"modified_method":"protected Object autowireCodecBean(Object existingBean) {\n        if (existingBean != null && grailsApplication != null && grailsApplication.getMainContext() != null) {\n            AutowireCapableBeanFactory beanFactory = grailsApplication.getMainContext().getAutowireCapableBeanFactory();\n            beanFactory.autowireBeanProperties(\n                    existingBean, AutowireCapableBeanFactory.AUTOWIRE_BY_NAME, false);\n            existingBean = beanFactory.initializeBean(existingBean, \"codec\");\n        }\n        return existingBean;\n    }","commit_id":"b831fd55c520be2170f91d22af3f46b0fe3c2a9c","url":"https://github.com/grails/grails-core"},{"original_method":"public DefaultGrailsCodecClass(Class<?> clazz) {\n        super(clazz, CODEC);\n        initializeCodec();\n    }","id":39820,"modified_method":"public DefaultGrailsCodecClass(Class<?> clazz) {\n        super(clazz, CODEC);\n    }","commit_id":"b831fd55c520be2170f91d22af3f46b0fe3c2a9c","url":"https://github.com/grails/grails-core"},{"original_method":"public void configureCodecMethods() {\n        new CodecMetaClassSupport().configureCodecMethods(this);\n    }","id":39821,"modified_method":"public void configureCodecMethods() {\n        // for compatibility. Not everything (especially unit tests written by existing Grails applications) call afterPropertiesSet(), but everything calls\n        // configureCodecMethods() at least once\n        initializeCodec();\n\n        new CodecMetaClassSupport().configureCodecMethods(this);\n    }","commit_id":"b831fd55c520be2170f91d22af3f46b0fe3c2a9c","url":"https://github.com/grails/grails-core"},{"original_method":"public void setGrailsApplication(GrailsApplication grailsApplication) {\n        if (grailsApplication == null || grailsApplication.getFlatConfig() == null) {\n            return;\n        }\n\n        Object htmlCodecSetting = grailsApplication.getFlatConfig().get(CONFIG_PROPERTY_GSP_HTMLCODEC);\n        if (htmlCodecSetting == null) {\n            return;\n        }\n\n        String htmlCodecSettingStr = htmlCodecSetting.toString().toLowerCase();\n        if (htmlCodecSettingStr.startsWith(\"xml\") || \"xhtml\".equalsIgnoreCase(htmlCodecSettingStr)) {\n            setUseLegacyEncoder(false);\n        }\n    }","id":39822,"modified_method":"public void setGrailsApplication(GrailsApplication grailsApplication) {\n        this.grailsApplication = grailsApplication;\n    }","commit_id":"b831fd55c520be2170f91d22af3f46b0fe3c2a9c","url":"https://github.com/grails/grails-core"},{"original_method":"@Override\n\tpublic Enumeration getParameterNames()\n\t{\n\t\treturn new Vector(getParameterMap().keySet()).elements();\n\t}","id":39823,"modified_method":"@Override\n\tpublic Enumeration getParameterNames()\n\t{\n\t\tfinal Iterator i = getParameterMap().keySet().iterator();\n\t\treturn new Enumeration() {\n\n\t\t\tpublic boolean hasMoreElements()\n\t\t\t{\n\t\t\t\treturn i.hasNext();\n\t\t\t}\n\n\t\t\tpublic Object nextElement()\n\t\t\t{\n\t\t\t\treturn i.next();\n\t\t\t}\n\t\t\n\t\t};\n\t}","commit_id":"422f7db67944fa5d6c31f94e569a6b768731089d","url":"https://github.com/sakaiproject/sakai"},{"original_method":"@Override\n\tpublic Enumeration getParameterNames()\n\t{\n\t\treturn new Vector(state.getParameters().keySet()).elements();\n\t}","id":39824,"modified_method":"@Override\n\tpublic Enumeration getParameterNames()\n\t{\n\t\tfinal Iterator i = state.getParameters().keySet().iterator();\n\t\treturn new Enumeration() {\n\n\t\t\tpublic boolean hasMoreElements()\n\t\t\t{\n\t\t\t\treturn i.hasNext();\n\t\t\t}\n\n\t\t\tpublic Object nextElement()\n\t\t\t{\n\t\t\t\treturn i.next();\n\t\t\t}\n\t\t\n\t\t};\n\t}","commit_id":"422f7db67944fa5d6c31f94e569a6b768731089d","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public Enumeration getHeaderNames()\n\t{\n\t\treturn headers.keys();\n\t}","id":39825,"modified_method":"public Enumeration getHeaderNames()\n\t{\n\t\tfinal Iterator<String> i = headers.keySet().iterator();\n\t\treturn new Enumeration() {\n\n\t\t\tpublic boolean hasMoreElements()\n\t\t\t{\n\t\t\t\treturn i.hasNext();\n\t\t\t}\n\n\t\t\tpublic Object nextElement()\n\t\t\t{\n\t\t\t\treturn i.next();\n\t\t\t}\n\t\t\t\n\t\t}; \n\t}","commit_id":"422f7db67944fa5d6c31f94e569a6b768731089d","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public Enumeration getHeaders(String arg0)\n\t{\n\t\ttry\n\t\t{\n\t\t\treturn ((Vector) headers.get(arg0)).elements();\n\t\t}\n\t\tcatch (Throwable t)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}","id":39826,"modified_method":"public Enumeration getHeaders(String arg0)\n\t{\n\t\ttry\n\t\t{\n\t\t\tfinal Iterator i = headers.get(arg0).iterator();\n\t\t\treturn new Enumeration() {\n\t\t\t\tpublic boolean hasMoreElements()\n\t\t\t\t{\n\t\t\t\t\treturn i.hasNext();\n\t\t\t\t}\n\n\t\t\t\tpublic Object nextElement()\n\t\t\t\t{\n\t\t\t\t\treturn i.next();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t};\n\t\t}\n\t\tcatch (Throwable t)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"422f7db67944fa5d6c31f94e569a6b768731089d","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public SessionRequestHolder(HttpServletRequest request, String marker,\n\t\t\tString replacement)\n\t{\n\t\theaders = new Hashtable();\n\t\tEnumeration e = request.getHeaderNames();\n\t\twhile (e.hasMoreElements())\n\t\t{\n\t\t\tString s = (String) e.nextElement();\n\t\t\tVector v = new Vector();\n\t\t\tEnumeration e1 = request.getHeaders(s);\n\t\t\twhile (e1.hasMoreElements())\n\t\t\t{\n\t\t\t\tv.add(e1.nextElement());\n\t\t\t}\n\t\t\theaders.put(s, request.getHeaders(s));\n\t\t}\n\t\tMap m = request.getParameterMap();\n\t\tparameterMap = new HashMap();\n\t\tfor (Iterator i = m.keySet().iterator(); i.hasNext();)\n\t\t{\n\t\t\tObject o = i.next();\n\t\t\tparameterMap.put(o, m.get(o));\n\t\t}\n\t\tcontextPath = PortalStringUtil.replaceFirst(request.getContextPath(), marker,\n\t\t\t\treplacement);\n\t\tmethod = request.getMethod();\n\t\tqueryString = request.getQueryString();\n\t}","id":39827,"modified_method":"public SessionRequestHolder(HttpServletRequest request, String marker,\n\t\t\tString replacement)\n\t{\n\t\theaders = new HashMap<String,List>();\n\t\tEnumeration e = request.getHeaderNames();\n\t\twhile (e.hasMoreElements())\n\t\t{\n\t\t\tString s = (String) e.nextElement();\n\t\t\tList v = new ArrayList();\n\t\t\tEnumeration e1 = request.getHeaders(s);\n\t\t\twhile (e1.hasMoreElements())\n\t\t\t{\n\t\t\t\tv.add(e1.nextElement());\n\t\t\t}\n\t\t\theaders.put(s, v);\n\t\t}\n\t\tMap m = request.getParameterMap();\n\t\tparameterMap = new HashMap();\n\t\tfor (Iterator i = m.keySet().iterator(); i.hasNext();)\n\t\t{\n\t\t\tObject o = i.next();\n\t\t\tparameterMap.put(o, m.get(o));\n\t\t}\n\t\tcontextPath = PortalStringUtil.replaceFirst(request.getContextPath(), marker,\n\t\t\t\treplacement);\n\t\tmethod = request.getMethod();\n\t\tqueryString = request.getQueryString();\n\t}","commit_id":"422f7db67944fa5d6c31f94e569a6b768731089d","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public String getHeader(String arg0)\n\t{\n\t\ttry\n\t\t{\n\t\t\tVector v = (Vector) headers.get(arg0);\n\t\t\treturn (String) v.get(0);\n\t\t}\n\t\tcatch (Throwable t)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}","id":39828,"modified_method":"public String getHeader(String arg0)\n\t{\n\t\ttry\n\t\t{\n\t\t\tList v = (List) headers.get(arg0);\n\t\t\treturn (String) v.get(0);\n\t\t}\n\t\tcatch (Throwable t)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"422f7db67944fa5d6c31f94e569a6b768731089d","url":"https://github.com/sakaiproject/sakai"},{"original_method":"private byte[] convertToApi(ClassReader cr) {\n        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS);\n        cr.accept(new PublicAPIAdapter(cw), ClassReader.SKIP_DEBUG | ClassReader.SKIP_FRAMES);\n        return cw.toByteArray();\n    }","id":39829,"modified_method":"private byte[] convertToApi(ClassReader cr) {\n        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS);\n        cr.accept(new PublicAPIExtractor(new StubClassWriter(cw)), ClassReader.SKIP_DEBUG | ClassReader.SKIP_FRAMES);\n        return cw.toByteArray();\n    }","commit_id":"8a8ddcdc60fda704ca0127dc104623dc7b0903e3","url":"https://github.com/gradle/gradle"},{"original_method":"private void visitAnnotationValue(AnnotationVisitor annotationVisitor, AnnotationValue value) {\n            if (value instanceof EnumAnnotationValue) {\n                annotationVisitor.visitEnum(value.getName(), ((EnumAnnotationValue) value).getDesc(), (String) ((EnumAnnotationValue) value).getValue());\n            } else if (value instanceof SimpleAnnotationValue) {\n                annotationVisitor.visit(value.getName(), ((SimpleAnnotationValue) value).getValue());\n            } else if (value instanceof ArrayAnnotationValue) {\n                AnnotationVisitor arrayVisitor = annotationVisitor.visitArray(value.getName());\n                AnnotationValue[] values = ((ArrayAnnotationValue) value).getValue();\n                for (AnnotationValue annotationValue : values) {\n                    visitAnnotationValue(arrayVisitor, annotationValue);\n                }\n                arrayVisitor.visitEnd();\n            } else if (value instanceof AnnotationAnnotationValue) {\n                AnnotationSig annotation = ((AnnotationAnnotationValue) value).getAnnotation();\n                AnnotationVisitor annVisitor = annotationVisitor.visitAnnotation(value.getName(), annotation.getName());\n                visitAnnotationValues(annotation, annVisitor);\n            }\n        }","id":39830,"modified_method":"private void visitAnnotationValue(AnnotationVisitor annotationVisitor, AnnotationValue value) {\n            String name = value.getName();\n            if (value instanceof EnumAnnotationValue) {\n                annotationVisitor.visitEnum(name, ((EnumAnnotationValue) value).getDesc(), (String) ((EnumAnnotationValue) value).getValue());\n            } else if (value instanceof SimpleAnnotationValue) {\n                annotationVisitor.visit(name, ((SimpleAnnotationValue) value).getValue());\n            } else if (value instanceof ArrayAnnotationValue) {\n                AnnotationVisitor arrayVisitor = annotationVisitor.visitArray(name);\n                AnnotationValue[] values = ((ArrayAnnotationValue) value).getValue();\n                for (AnnotationValue annotationValue : values) {\n                    visitAnnotationValue(arrayVisitor, annotationValue);\n                }\n                arrayVisitor.visitEnd();\n            } else if (value instanceof AnnotationAnnotationValue) {\n                AnnotationSig annotation = ((AnnotationAnnotationValue) value).getAnnotation();\n                AnnotationVisitor annVisitor = annotationVisitor.visitAnnotation(name, annotation.getName());\n                visitAnnotationValues(annotation, annVisitor);\n            }\n        }","commit_id":"be3717cbc36260119576225defae55042b7697d9","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n            public void visitEnum(String name, String desc, String value) {\n                values.add(new EnumAnnotationValue(name == null ? \"\" : name, desc, value));\n                super.visitEnum(name, desc, value);\n            }","id":39831,"modified_method":"@Override\n            public void visitEnum(String name, String desc, String value) {\n                values.add(new EnumAnnotationValue(name == null ? \"value\" : name, desc, value));\n                super.visitEnum(name, desc, value);\n            }","commit_id":"be3717cbc36260119576225defae55042b7697d9","url":"https://github.com/gradle/gradle"},{"original_method":"public void visitAnnotation(PsiAnnotation annotation) {\n    super.visitAnnotation(annotation);\n    myHolder.add(AnnotationsHighlightUtil.checkApplicability(annotation));\n    if (!myHolder.hasErrorResults()) myHolder.add(AnnotationsHighlightUtil.checkAnnotationType(annotation));\n    if (!myHolder.hasErrorResults()) myHolder.add(AnnotationsHighlightUtil.checkMissingAttributes(annotation));\n    if (!myHolder.hasErrorResults()) myHolder.add(AnnotationsHighlightUtil.checkTargetAnnotationDuplicates(annotation));\n  }","id":39832,"modified_method":"public void visitAnnotation(PsiAnnotation annotation) {\n    super.visitAnnotation(annotation);\n    if (PsiUtil.getLanguageLevel(annotation).compareTo(LanguageLevel.JDK_1_5) >= 0) {\n      myHolder.add(AnnotationsHighlightUtil.checkApplicability(annotation));\n      if (!myHolder.hasErrorResults()) myHolder.add(AnnotationsHighlightUtil.checkAnnotationType(annotation));\n      if (!myHolder.hasErrorResults()) myHolder.add(AnnotationsHighlightUtil.checkMissingAttributes(annotation));\n      if (!myHolder.hasErrorResults()) myHolder.add(AnnotationsHighlightUtil.checkTargetAnnotationDuplicates(annotation));\n    }\n    else {\n      myHolder.add(HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR, annotation.getFirstChild(),\n                                                     JavaErrorMessages.message(\"annotations.prior.15\")));\n    }\n  }","commit_id":"a162b8d75cd055089df53f1ac1fe0d7f5e833984","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void visitClass(PsiClass aClass) {\n    super.visitClass(aClass);\n    if (aClass instanceof JspClass) return;\n    if (!myHolder.hasErrorResults()) myHolder.add(GenericsHighlightUtil.checkInterfaceMultipleInheritance(aClass));\n    if (!myHolder.hasErrorResults()) myHolder.add(HighlightClassUtil.checkDuplicateTopLevelClass(aClass));\n    if (!myHolder.hasErrorResults()) myHolder.add(GenericsHighlightUtil.checkEnumMustNotBeLocal(aClass));\n    if (!myHolder.hasErrorResults()) myHolder.add(HighlightUtil.checkImplicitThisReferenceBeforeSuper(aClass));\n  }","id":39833,"modified_method":"public void visitClass(PsiClass aClass) {\n    super.visitClass(aClass);\n    if (aClass instanceof JspClass) return;\n    if (aClass.isAnnotationType()) {\n      if (PsiUtil.getLanguageLevel(aClass).compareTo(LanguageLevel.JDK_1_5) < 0) {\n        myHolder.add(HighlightInfo.createHighlightInfo(HighlightInfoType.ERROR, aClass.getNameIdentifier(),\n                                                       JavaErrorMessages.message(\"annotations.prior.15\")));\n\n      }\n    }\n    if (!myHolder.hasErrorResults()) myHolder.add(GenericsHighlightUtil.checkInterfaceMultipleInheritance(aClass));\n    if (!myHolder.hasErrorResults()) myHolder.add(HighlightClassUtil.checkDuplicateTopLevelClass(aClass));\n    if (!myHolder.hasErrorResults()) myHolder.add(GenericsHighlightUtil.checkEnumMustNotBeLocal(aClass));\n    if (!myHolder.hasErrorResults()) myHolder.add(HighlightUtil.checkImplicitThisReferenceBeforeSuper(aClass));\n  }","commit_id":"a162b8d75cd055089df53f1ac1fe0d7f5e833984","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Publishes the given collection of {@link MetricValue}. When this method returns, the\n   * given {@link Iterator} will no longer be valid. This method should process the input\n   * iterator and returns quickly. Any long operations should be run in a separated thread.\n   * This method is guaranteed not to get concurrent calls.\n   *\n   * @param metrics collection of {@link co.cask.cdap.api.metrics.MetricValue} to publish.\n   * @throws Exception if there is error raised during publish.\n   */\n  protected abstract void publish(MetricsIterator metrics) throws Exception;","id":39834,"modified_method":"/**\n   * Publishes the given collection of {@link MetricValue}. When this method returns, the\n   * given {@link Iterator} will no longer be valid. This method should process the input\n   * iterator and returns quickly. Any long operations should be run in a separated thread.\n   * This method is guaranteed not to get concurrent calls.\n   *\n   * @param metrics collection of {@link co.cask.cdap.api.metrics.MetricValue} to publish.\n   * @throws Exception if there is error raised during publish.\n   */\n  protected abstract void publish(Iterator<MetricValue> metrics) throws Exception;","commit_id":"4cfa80665b4346ce6774753dd8846e24ea098a80","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected final void runOneIteration() throws Exception {\n    final long timestamp = TimeUnit.SECONDS.convert(System.currentTimeMillis(), TimeUnit.MILLISECONDS);\n    LOG.trace(\"Start log collection for timestamp {}\", timestamp);\n\n    final Iterator<MetricValue> metricsItor = getMetrics(timestamp);\n    try {\n      publish(new MetricsIterator(metricsItor));\n    } catch (Throwable t) {\n      LOG.error(\"Failed in publishing metrics for timestamp {}.\", timestamp, t);\n    }\n\n    // Consume the whole iterator if it is not yet consumed inside publish. This is to make sure metrics are reset.\n    while (metricsItor.hasNext()) {\n      metricsItor.next();\n    }\n    LOG.trace(\"Completed log collection for timestamp {}\", timestamp);\n  }","id":39835,"modified_method":"@Override\n  protected final void runOneIteration() throws Exception {\n    final long timestamp = TimeUnit.SECONDS.convert(System.currentTimeMillis(), TimeUnit.MILLISECONDS);\n    LOG.trace(\"Start log collection for timestamp {}\", timestamp);\n\n    final MetricsIterator metricsItor = new MetricsIterator(getMetrics(timestamp));\n\n    try {\n      publish(metricsItor);\n    } catch (Throwable t) {\n      LOG.error(\"Failed in publishing metrics for timestamp {}.\", timestamp, t);\n    }\n\n    if (isPublishMetaMetrics()) {\n      try {\n        publish(metricsItor.getMetaMetrics(System.currentTimeMillis()));\n      } catch (Throwable t) {\n        LOG.error(\"Failed in publishing meta metrics for timestamp {}.\", timestamp, t);\n      }\n    }\n\n    // Consume the whole iterator if it is not yet consumed inside publish. This is to make sure metrics are reset.\n    while (metricsItor.hasNext()) {\n      metricsItor.next();\n    }\n    LOG.trace(\"Completed log collection for timestamp {}\", timestamp);\n  }","commit_id":"4cfa80665b4346ce6774753dd8846e24ea098a80","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * @return true if we want to publish metrics about\n   *              the received metrics in {@link #publish(co.cask.cdap.metrics.iterator.MetricsIterator)}.\n   */\n  protected boolean isPublishMetaMetrics() {\n    return true;\n  }","id":39836,"modified_method":"/**\n   * @return true if we want to publish metrics about\n   *              the received metrics in {@link #publish(java.util.Iterator)}.\n   */\n  protected boolean isPublishMetaMetrics() {\n    return true;\n  }","commit_id":"4cfa80665b4346ce6774753dd8846e24ea098a80","url":"https://github.com/caskdata/cdap"},{"original_method":"@Category(SlowTests.class)\n  @Test\n  public void testPublish() throws InterruptedException {\n    final BlockingQueue<MetricValue> published = new LinkedBlockingQueue<MetricValue>();\n\n    AggregatedMetricsCollectionService service = new AggregatedMetricsCollectionService() {\n      @Override\n      protected void publish(MetricsIterator metrics) throws Exception {\n        Iterators.addAll(published, metrics);\n      }\n\n      @Override\n      protected Scheduler scheduler() {\n        return Scheduler.newFixedRateSchedule(5, 1, TimeUnit.SECONDS);\n      }\n\n      @Override\n      protected boolean isPublishMetaMetrics() {\n        return false;\n      }\n    };\n\n    service.startAndWait();\n\n    // non-empty tags.\n    final Map baseTags = ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, NAMESPACE,\n                                         Constants.Metrics.Tag.APP, APP,\n                                         Constants.Metrics.Tag.FLOW, FLOW,\n                                         Constants.Metrics.Tag.RUN_ID, RUNID);\n\n    try {\n      // The first section tests with empty tags.\n      // Publish couple metrics with empty tags, they should be aggregated.\n      service.getCollector(EMPTY_TAGS).increment(METRIC, Integer.MAX_VALUE);\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 2);\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 3);\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 4);\n\n      MetricValue record = published.poll(10, TimeUnit.SECONDS);\n      Assert.assertNotNull(record);\n      Assert.assertEquals(((long) Integer.MAX_VALUE) + 9L, record.getValue());\n\n      // No publishing for 0 value metrics\n      Assert.assertNull(published.poll(3, TimeUnit.SECONDS));\n\n      // Publish a metric and wait for it so that we know there is around 1 second to publish more metrics to test.\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 1);\n      Assert.assertNotNull(published.poll(3, TimeUnit.SECONDS));\n\n      //update the metrics multiple times with gauge.\n      service.getCollector(EMPTY_TAGS).gauge(METRIC, 1);\n      service.getCollector(EMPTY_TAGS).gauge(METRIC, 2);\n      service.getCollector(EMPTY_TAGS).gauge(METRIC, 3);\n\n      // gauge just updates the value, so polling should return the most recent value written\n      record = published.poll(3, TimeUnit.SECONDS);\n      Assert.assertNotNull(record);\n      Assert.assertEquals(3, record.getValue());\n\n      // define collectors for non-empty tags\n      MetricsCollector baseCollector = service.getCollector(baseTags);\n      MetricsCollector flowletInstanceCollector = baseCollector.childCollector(Constants.Metrics.Tag.FLOWLET, FLOWLET)\n        .childCollector(Constants.Metrics.Tag.INSTANCE_ID, INSTANCE);\n\n      // increment metrics for various collectors\n      baseCollector.increment(METRIC, Integer.MAX_VALUE);\n      flowletInstanceCollector.increment(METRIC, 5);\n      baseCollector.increment(METRIC, 10);\n      baseCollector.increment(METRIC, 3);\n      flowletInstanceCollector.increment(METRIC, 2);\n      flowletInstanceCollector.increment(METRIC, 4);\n      flowletInstanceCollector.increment(METRIC, 3);\n      flowletInstanceCollector.increment(METRIC, 1);\n\n      // there are two collectors, verify their metrics values\n      verifyCounterMetricsValue(published.poll(10, TimeUnit.SECONDS));\n      verifyCounterMetricsValue(published.poll(10, TimeUnit.SECONDS));\n\n      // No publishing for 0 value metrics\n      Assert.assertNull(published.poll(3, TimeUnit.SECONDS));\n\n      // gauge metrics for various collectors\n      baseCollector.gauge(METRIC, Integer.MAX_VALUE);\n      baseCollector.gauge(METRIC, 3);\n      flowletInstanceCollector.gauge(METRIC, 6);\n      flowletInstanceCollector.gauge(METRIC, 2);\n      baseCollector.gauge(METRIC, 1);\n      flowletInstanceCollector.gauge(METRIC, Integer.MAX_VALUE);\n\n      // gauge just updates the value, so polling should return the most recent value written\n      verifyGaugeMetricsValue(published.poll(10, TimeUnit.SECONDS));\n      verifyGaugeMetricsValue(published.poll(10, TimeUnit.SECONDS));\n    } finally {\n      service.stopAndWait();\n    }\n  }","id":39837,"modified_method":"@Category(SlowTests.class)\n  @Test\n  public void testPublish() throws InterruptedException {\n    final BlockingQueue<MetricValue> published = new LinkedBlockingQueue<MetricValue>();\n\n    AggregatedMetricsCollectionService service = new AggregatedMetricsCollectionService() {\n      @Override\n      protected void publish(Iterator<MetricValue> metrics) throws Exception {\n        Iterators.addAll(published, metrics);\n      }\n\n      @Override\n      protected Scheduler scheduler() {\n        return Scheduler.newFixedRateSchedule(5, 1, TimeUnit.SECONDS);\n      }\n\n      @Override\n      protected boolean isPublishMetaMetrics() {\n        return false;\n      }\n    };\n\n    service.startAndWait();\n\n    // non-empty tags.\n    final Map baseTags = ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, NAMESPACE,\n                                         Constants.Metrics.Tag.APP, APP,\n                                         Constants.Metrics.Tag.FLOW, FLOW,\n                                         Constants.Metrics.Tag.RUN_ID, RUNID);\n\n    try {\n      // The first section tests with empty tags.\n      // Publish couple metrics with empty tags, they should be aggregated.\n      service.getCollector(EMPTY_TAGS).increment(METRIC, Integer.MAX_VALUE);\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 2);\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 3);\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 4);\n\n      MetricValue record = published.poll(10, TimeUnit.SECONDS);\n      Assert.assertNotNull(record);\n      Assert.assertEquals(((long) Integer.MAX_VALUE) + 9L, record.getValue());\n\n      // No publishing for 0 value metrics\n      Assert.assertNull(published.poll(3, TimeUnit.SECONDS));\n\n      // Publish a metric and wait for it so that we know there is around 1 second to publish more metrics to test.\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 1);\n      Assert.assertNotNull(published.poll(3, TimeUnit.SECONDS));\n\n      //update the metrics multiple times with gauge.\n      service.getCollector(EMPTY_TAGS).gauge(METRIC, 1);\n      service.getCollector(EMPTY_TAGS).gauge(METRIC, 2);\n      service.getCollector(EMPTY_TAGS).gauge(METRIC, 3);\n\n      // gauge just updates the value, so polling should return the most recent value written\n      record = published.poll(3, TimeUnit.SECONDS);\n      Assert.assertNotNull(record);\n      Assert.assertEquals(3, record.getValue());\n\n      // define collectors for non-empty tags\n      MetricsCollector baseCollector = service.getCollector(baseTags);\n      MetricsCollector flowletInstanceCollector = baseCollector.childCollector(Constants.Metrics.Tag.FLOWLET, FLOWLET)\n        .childCollector(Constants.Metrics.Tag.INSTANCE_ID, INSTANCE);\n\n      // increment metrics for various collectors\n      baseCollector.increment(METRIC, Integer.MAX_VALUE);\n      flowletInstanceCollector.increment(METRIC, 5);\n      baseCollector.increment(METRIC, 10);\n      baseCollector.increment(METRIC, 3);\n      flowletInstanceCollector.increment(METRIC, 2);\n      flowletInstanceCollector.increment(METRIC, 4);\n      flowletInstanceCollector.increment(METRIC, 3);\n      flowletInstanceCollector.increment(METRIC, 1);\n\n      // there are two collectors, verify their metrics values\n      verifyCounterMetricsValue(published.poll(10, TimeUnit.SECONDS));\n      verifyCounterMetricsValue(published.poll(10, TimeUnit.SECONDS));\n\n      // No publishing for 0 value metrics\n      Assert.assertNull(published.poll(3, TimeUnit.SECONDS));\n\n      // gauge metrics for various collectors\n      baseCollector.gauge(METRIC, Integer.MAX_VALUE);\n      baseCollector.gauge(METRIC, 3);\n      flowletInstanceCollector.gauge(METRIC, 6);\n      flowletInstanceCollector.gauge(METRIC, 2);\n      baseCollector.gauge(METRIC, 1);\n      flowletInstanceCollector.gauge(METRIC, Integer.MAX_VALUE);\n\n      // gauge just updates the value, so polling should return the most recent value written\n      verifyGaugeMetricsValue(published.poll(10, TimeUnit.SECONDS));\n      verifyGaugeMetricsValue(published.poll(10, TimeUnit.SECONDS));\n    } finally {\n      service.stopAndWait();\n    }\n  }","commit_id":"4cfa80665b4346ce6774753dd8846e24ea098a80","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected void publish(MetricsIterator metrics) throws Exception {\n    KafkaPublisher publisher = getPublisher();\n    if (publisher == null) {\n      LOG.warn(\"Unable to get kafka publisher, will not be able to publish metrics.\");\n      return;\n    }\n    encoderOutputStream.reset();\n\n    KafkaPublisher.Preparer preparer = publisher.prepare(topicPrefix);\n    while (metrics.hasNext()) {\n      // Encode each MetricRecord into bytes and make it an individual kafka message in a message set.\n      MetricValue value = metrics.next();\n      publishMetric(preparer, value);\n    }\n\n    preparer.send();\n\n    if (isPublishMetaMetrics()) {\n      // send meta metrics batch now\n      preparer = publisher.prepare(topicPrefix);\n      long timeSentBatch = System.currentTimeMillis();\n      for (MetricValue metaMetric : metrics.getMetaMetrics(timeSentBatch)) {\n        publishMetric(preparer, metaMetric);\n      }\n      preparer.send();\n    }\n  }","id":39838,"modified_method":"@Override\n  protected void publish(Iterator<MetricValue> metrics) throws Exception {\n    KafkaPublisher publisher = getPublisher();\n    if (publisher == null) {\n      LOG.warn(\"Unable to get kafka publisher, will not be able to publish metrics.\");\n      return;\n    }\n    encoderOutputStream.reset();\n\n    KafkaPublisher.Preparer preparer = publisher.prepare(topicPrefix);\n    while (metrics.hasNext()) {\n      // Encode each MetricRecord into bytes and make it an individual kafka message in a message set.\n      MetricValue value = metrics.next();\n      publishMetric(preparer, value);\n    }\n\n    preparer.send();\n  }","commit_id":"4cfa80665b4346ce6774753dd8846e24ea098a80","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected void publish(MetricsIterator metrics) throws Exception {\n    while (metrics.hasNext()) {\n      MetricValue metric = metrics.next();\n      metricStore.add(metric);\n    }\n\n    if (isPublishMetaMetrics()) {\n      // send meta metrics batch now\n      long timeSentBatch = System.currentTimeMillis();\n      for (MetricValue metaMetric : metrics.getMetaMetrics(timeSentBatch)) {\n        metricStore.add(metaMetric);\n      }\n    }\n  }","id":39839,"modified_method":"@Override\n  protected void publish(Iterator<MetricValue> metrics) throws Exception {\n    while (metrics.hasNext()) {\n      MetricValue metric = metrics.next();\n      metricStore.add(metric);\n    }\n  }","commit_id":"4cfa80665b4346ce6774753dd8846e24ea098a80","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected void publish(MetricsIterator metrics) throws Exception {\n    while (metrics.hasNext()) {\n      MetricValue record = metrics.next();\n      publishMetric(record);\n    }\n\n    if (isPublishMetaMetrics()) {\n      // send meta metrics batch now\n      long timeSentBatch = System.currentTimeMillis();\n      for (MetricValue metaMetric : metrics.getMetaMetrics(timeSentBatch)) {\n        publishMetric(metaMetric);\n      }\n    }\n  }","id":39840,"modified_method":"@Override\n  protected void publish(Iterator<MetricValue> metrics) throws Exception {\n    while (metrics.hasNext()) {\n      MetricValue record = metrics.next();\n      publishMetric(record);\n    }\n  }","commit_id":"4cfa80665b4346ce6774753dd8846e24ea098a80","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Returns a module that bind MetricsCollectionService to a noop one.\n   */\n  public Module getNoopModules() {\n    return new AbstractModule() {\n      @Override\n      protected void configure() {\n        bind(MetricsCollectionService.class).toInstance(new AggregatedMetricsCollectionService() {\n          @Override\n          protected void publish(MetricsIterator metrics) throws Exception {\n          }\n        });\n      }\n    };\n  }","id":39841,"modified_method":"/**\n   * Returns a module that bind MetricsCollectionService to a noop one.\n   */\n  public Module getNoopModules() {\n    return new AbstractModule() {\n      @Override\n      protected void configure() {\n        bind(MetricsCollectionService.class).toInstance(new AggregatedMetricsCollectionService() {\n          @Override\n          protected void publish(Iterator<MetricValue> metrics) throws Exception {\n          }\n        });\n      }\n    };\n  }","commit_id":"4cfa80665b4346ce6774753dd8846e24ea098a80","url":"https://github.com/caskdata/cdap"},{"original_method":"public List<MetricValue> getMetaMetrics(long timestampMs) {\n    long timestamp = TimeUnit.MILLISECONDS.toSeconds(timestampMs);\n\n    MetricValue delayAvg = new MetricValue(\n      ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, \"system\"),\n      \"metrics.global.processed.delay.avg\", timestamp, (long) stats.getAverage(), MetricType.GAUGE);\n\n    MetricValue delayMin = new MetricValue(\n      ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, \"system\"),\n      \"metrics.global.processed.delay.min\", timestamp, stats.getMin(), MetricType.GAUGE);\n\n    MetricValue delayMax = new MetricValue(\n      ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, \"system\"),\n      \"metrics.global.processed.delay.max\", timestamp, stats.getMax(), MetricType.GAUGE);\n\n    MetricValue count = new MetricValue(\n      ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, \"system\"),\n      \"metrics.global.processed.count\", timestamp, stats.getCount(), MetricType.COUNTER);\n    return ImmutableList.of(delayAvg, delayMin, delayMax, count);\n  }","id":39842,"modified_method":"public Iterator<MetricValue> getMetaMetrics(long timestampMs) {\n    long timestamp = TimeUnit.MILLISECONDS.toSeconds(timestampMs);\n\n    MetricValue delayAvg = new MetricValue(\n      ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, \"system\"),\n      \"metrics.global.processed.delay.avg\", timestamp, (long) stats.getAverage(), MetricType.GAUGE);\n\n    MetricValue delayMin = new MetricValue(\n      ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, \"system\"),\n      \"metrics.global.processed.delay.min\", timestamp, stats.getMin(), MetricType.GAUGE);\n\n    MetricValue delayMax = new MetricValue(\n      ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, \"system\"),\n      \"metrics.global.processed.delay.max\", timestamp, stats.getMax(), MetricType.GAUGE);\n\n    MetricValue count = new MetricValue(\n      ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, \"system\"),\n      \"metrics.global.processed.count\", timestamp, stats.getCount(), MetricType.COUNTER);\n\n    return ImmutableList.of(delayAvg, delayMin, delayMax, count).iterator();\n  }","commit_id":"4cfa80665b4346ce6774753dd8846e24ea098a80","url":"https://github.com/caskdata/cdap"},{"original_method":"private void publishMetrics(long timestamp, MetricsCollectorIterator metricsItor) {\n    try {\n      publish(metricsItor);\n    } catch (Throwable t) {\n      LOG.error(\"Failed in publishing metrics for timestamp {}.\", timestamp, t);\n    }\n\n    if (isPublishMetaMetrics()) {\n      try {\n        publish(metricsItor.getMetaMetrics());\n      } catch (Throwable t) {\n        LOG.error(\"Failed in publishing meta metrics for timestamp {}.\", timestamp, t);\n      }\n    }\n\n    // Consume the whole iterator if it is not yet consumed inside publish. This is to make sure metrics are reset.\n    while (metricsItor.hasNext()) {\n      metricsItor.next();\n    }\n    LOG.trace(\"Completed log collection for timestamp {}\", timestamp);\n  }","id":39843,"modified_method":"private void publishMetrics(long timestamp, Iterator<MetricValues> metrics) {\n    try {\n      publish(metrics);\n    } catch (Throwable t) {\n      LOG.error(\"Failed in publishing metrics for timestamp {}.\", timestamp, t);\n    }\n\n    // Consume the whole iterator if it is not yet consumed inside publish. This is to make sure metrics are reset.\n    while (metrics.hasNext()) {\n      metrics.next();\n    }\n    LOG.trace(\"Completed log collection for timestamp {}\", timestamp);\n  }","commit_id":"ca6da0b0e397f22a1d730bffc0cc252a7513daaf","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected final void runOneIteration() throws Exception {\n    final long timestamp = TimeUnit.SECONDS.convert(System.currentTimeMillis(), TimeUnit.MILLISECONDS);\n    LOG.trace(\"Start log collection for timestamp {}\", timestamp);\n\n    final MetricsCollectorIterator metricsItor = new MetricsCollectorIterator(getMetrics(timestamp));\n    publishMetrics(timestamp, metricsItor);\n  }","id":39844,"modified_method":"@Override\n  protected final void runOneIteration() throws Exception {\n    final long timestamp = TimeUnit.SECONDS.convert(System.currentTimeMillis(), TimeUnit.MILLISECONDS);\n    LOG.trace(\"Start log collection for timestamp {}\", timestamp);\n\n    publishMetrics(timestamp, getMetrics(timestamp));\n  }","commit_id":"ca6da0b0e397f22a1d730bffc0cc252a7513daaf","url":"https://github.com/caskdata/cdap"},{"original_method":"@Category(SlowTests.class)\n  @Test\n  public void testPublish() throws InterruptedException {\n    final BlockingQueue<MetricValues> published = new LinkedBlockingQueue<>();\n\n    AggregatedMetricsCollectionService service = new AggregatedMetricsCollectionService() {\n      @Override\n      protected void publish(Iterator<MetricValues> metrics) {\n        Iterators.addAll(published, metrics);\n      }\n\n      @Override\n      protected Scheduler scheduler() {\n        return Scheduler.newFixedRateSchedule(5, 1, TimeUnit.SECONDS);\n      }\n\n      @Override\n      protected boolean isPublishMetaMetrics() {\n        return false;\n      }\n    };\n\n    service.startAndWait();\n\n    // non-empty tags.\n    final Map baseTags = ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, NAMESPACE,\n                                         Constants.Metrics.Tag.APP, APP,\n                                         Constants.Metrics.Tag.FLOW, FLOW,\n                                         Constants.Metrics.Tag.RUN_ID, RUNID);\n\n    try {\n      // The first section tests with empty tags.\n      // Publish couple metrics with empty tags, they should be aggregated.\n      service.getCollector(EMPTY_TAGS).increment(METRIC, Integer.MAX_VALUE);\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 2);\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 3);\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 4);\n\n      MetricValues record = published.poll(10, TimeUnit.SECONDS);\n      Assert.assertNotNull(record);\n\n      Assert.assertEquals(((long) Integer.MAX_VALUE) + 9L, getMetricValue(record.getMetrics(), METRIC));\n\n      // No publishing for 0 value metrics\n      Assert.assertNull(published.poll(3, TimeUnit.SECONDS));\n\n      // Publish a metric and wait for it so that we know there is around 1 second to publish more metrics to test.\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 1);\n      Assert.assertNotNull(published.poll(3, TimeUnit.SECONDS));\n\n      //update the metrics multiple times with gauge.\n      service.getCollector(EMPTY_TAGS).gauge(METRIC, 1);\n      service.getCollector(EMPTY_TAGS).gauge(METRIC, 2);\n      service.getCollector(EMPTY_TAGS).gauge(METRIC, 3);\n\n      // gauge just updates the value, so polling should return the most recent value written\n      record = published.poll(3, TimeUnit.SECONDS);\n      Assert.assertNotNull(record);\n      Assert.assertEquals(3, getMetricValue(record.getMetrics(), METRIC));\n\n      // define collectors for non-empty tags\n      MetricsCollector baseCollector = service.getCollector(baseTags);\n      MetricsCollector flowletInstanceCollector = baseCollector.childCollector(Constants.Metrics.Tag.FLOWLET, FLOWLET)\n        .childCollector(Constants.Metrics.Tag.INSTANCE_ID, INSTANCE);\n\n      // increment metrics for various collectors\n      baseCollector.increment(METRIC, Integer.MAX_VALUE);\n      flowletInstanceCollector.increment(METRIC, 5);\n      baseCollector.increment(METRIC, 10);\n      baseCollector.increment(METRIC, 3);\n      flowletInstanceCollector.increment(METRIC, 2);\n      flowletInstanceCollector.increment(METRIC, 4);\n      flowletInstanceCollector.increment(METRIC, 3);\n      flowletInstanceCollector.increment(METRIC, 1);\n\n      // there are two collectors, verify their metrics values\n      verifyCounterMetricsValue(published.poll(10, TimeUnit.SECONDS));\n      verifyCounterMetricsValue(published.poll(10, TimeUnit.SECONDS));\n\n      // No publishing for 0 value metrics\n      Assert.assertNull(published.poll(3, TimeUnit.SECONDS));\n\n      // gauge metrics for various collectors\n      baseCollector.gauge(METRIC, Integer.MAX_VALUE);\n      baseCollector.gauge(METRIC, 3);\n      flowletInstanceCollector.gauge(METRIC, 6);\n      flowletInstanceCollector.gauge(METRIC, 2);\n      baseCollector.gauge(METRIC, 1);\n      flowletInstanceCollector.gauge(METRIC, Integer.MAX_VALUE);\n\n      // gauge just updates the value, so polling should return the most recent value written\n      verifyGaugeMetricsValue(published.poll(10, TimeUnit.SECONDS));\n      verifyGaugeMetricsValue(published.poll(10, TimeUnit.SECONDS));\n\n      flowletInstanceCollector.gauge(METRIC, 0);\n      verifyMetricsValue(published.poll(10, TimeUnit.SECONDS), 0L);\n    } finally {\n      service.stopAndWait();\n    }\n  }","id":39845,"modified_method":"@Category(SlowTests.class)\n  @Test\n  public void testPublish() throws InterruptedException {\n    final BlockingQueue<MetricValues> published = new LinkedBlockingQueue<>();\n\n    AggregatedMetricsCollectionService service = new AggregatedMetricsCollectionService() {\n      @Override\n      protected void publish(Iterator<MetricValues> metrics) {\n        Iterators.addAll(published, metrics);\n      }\n\n      @Override\n      protected Scheduler scheduler() {\n        return Scheduler.newFixedRateSchedule(5, 1, TimeUnit.SECONDS);\n      }\n    };\n\n    service.startAndWait();\n\n    // non-empty tags.\n    final Map baseTags = ImmutableMap.of(Constants.Metrics.Tag.NAMESPACE, NAMESPACE,\n                                         Constants.Metrics.Tag.APP, APP,\n                                         Constants.Metrics.Tag.FLOW, FLOW,\n                                         Constants.Metrics.Tag.RUN_ID, RUNID);\n\n    try {\n      // The first section tests with empty tags.\n      // Publish couple metrics with empty tags, they should be aggregated.\n      service.getCollector(EMPTY_TAGS).increment(METRIC, Integer.MAX_VALUE);\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 2);\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 3);\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 4);\n\n      MetricValues record = published.poll(10, TimeUnit.SECONDS);\n      Assert.assertNotNull(record);\n\n      Assert.assertEquals(((long) Integer.MAX_VALUE) + 9L, getMetricValue(record.getMetrics(), METRIC));\n\n      // No publishing for 0 value metrics\n      Assert.assertNull(published.poll(3, TimeUnit.SECONDS));\n\n      // Publish a metric and wait for it so that we know there is around 1 second to publish more metrics to test.\n      service.getCollector(EMPTY_TAGS).increment(METRIC, 1);\n      Assert.assertNotNull(published.poll(3, TimeUnit.SECONDS));\n\n      //update the metrics multiple times with gauge.\n      service.getCollector(EMPTY_TAGS).gauge(METRIC, 1);\n      service.getCollector(EMPTY_TAGS).gauge(METRIC, 2);\n      service.getCollector(EMPTY_TAGS).gauge(METRIC, 3);\n\n      // gauge just updates the value, so polling should return the most recent value written\n      record = published.poll(3, TimeUnit.SECONDS);\n      Assert.assertNotNull(record);\n      Assert.assertEquals(3, getMetricValue(record.getMetrics(), METRIC));\n\n      // define collectors for non-empty tags\n      MetricsCollector baseCollector = service.getCollector(baseTags);\n      MetricsCollector flowletInstanceCollector = baseCollector.childCollector(Constants.Metrics.Tag.FLOWLET, FLOWLET)\n        .childCollector(Constants.Metrics.Tag.INSTANCE_ID, INSTANCE);\n\n      // increment metrics for various collectors\n      baseCollector.increment(METRIC, Integer.MAX_VALUE);\n      flowletInstanceCollector.increment(METRIC, 5);\n      baseCollector.increment(METRIC, 10);\n      baseCollector.increment(METRIC, 3);\n      flowletInstanceCollector.increment(METRIC, 2);\n      flowletInstanceCollector.increment(METRIC, 4);\n      flowletInstanceCollector.increment(METRIC, 3);\n      flowletInstanceCollector.increment(METRIC, 1);\n\n      // there are two collectors, verify their metrics values\n      verifyCounterMetricsValue(published.poll(10, TimeUnit.SECONDS));\n      verifyCounterMetricsValue(published.poll(10, TimeUnit.SECONDS));\n\n      // No publishing for 0 value metrics\n      Assert.assertNull(published.poll(3, TimeUnit.SECONDS));\n\n      // gauge metrics for various collectors\n      baseCollector.gauge(METRIC, Integer.MAX_VALUE);\n      baseCollector.gauge(METRIC, 3);\n      flowletInstanceCollector.gauge(METRIC, 6);\n      flowletInstanceCollector.gauge(METRIC, 2);\n      baseCollector.gauge(METRIC, 1);\n      flowletInstanceCollector.gauge(METRIC, Integer.MAX_VALUE);\n\n      // gauge just updates the value, so polling should return the most recent value written\n      verifyGaugeMetricsValue(published.poll(10, TimeUnit.SECONDS));\n      verifyGaugeMetricsValue(published.poll(10, TimeUnit.SECONDS));\n\n      flowletInstanceCollector.gauge(METRIC, 0);\n      verifyMetricsValue(published.poll(10, TimeUnit.SECONDS), 0L);\n    } finally {\n      service.stopAndWait();\n    }\n  }","commit_id":"ca6da0b0e397f22a1d730bffc0cc252a7513daaf","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testKafkaPublish() throws UnsupportedTypeException, InterruptedException, IOException {\n\n    Properties kafkaConfig = generateKafkaConfig(tmpFolder1);\n    kafkaServer = new EmbeddedKafkaServer(kafkaConfig);\n    kafkaServer.startAndWait();\n\n    ZKClientService zkClient = ZKClientService.Builder.of(zkServer.getConnectionStr()).build();\n    zkClient.startAndWait();\n\n    KafkaClientService kafkaClient = new ZKKafkaClientService(zkClient);\n    kafkaClient.startAndWait();\n\n    final TypeToken<MetricValues> metricValueType = TypeToken.of(MetricValues.class);\n    final Schema schema = new ReflectionSchemaGenerator().generate(metricValueType.getType());\n    DatumWriter<MetricValues> metricRecordDatumWriter = new ASMDatumWriterFactory(new ASMFieldAccessorFactory())\n      .create(metricValueType, schema);\n\n    MetricsCollectionService collectionService = new KafkaMetricsCollectionService(kafkaClient, \"metrics\",\n                                                                                   KafkaPublisher.Ack.FIRE_AND_FORGET,\n                                                                                   metricRecordDatumWriter) {\n      @Override\n      protected boolean isPublishMetaMetrics() {\n        return false;\n      }\n    };\n    collectionService.startAndWait();\n\n    // publish metrics for different context\n    for (int i = 1; i <= 3; i++) {\n      collectionService.getCollector(ImmutableMap.of(\"tag\", \"\" + i)).increment(\"processed\", i);\n    }\n\n    // Sleep to make sure metrics get published\n    TimeUnit.SECONDS.sleep(2);\n\n    collectionService.stopAndWait();\n\n    // <Context, metricName, value>\n    Table<String, String, Long> expected = HashBasedTable.create();\n    expected.put(\"tag.1\", \"processed\", 1L);\n    expected.put(\"tag.2\", \"processed\", 2L);\n    expected.put(\"tag.3\", \"processed\", 3L);\n\n    assertMetricsFromKafka(kafkaClient, schema, metricValueType, expected);\n  }","id":39846,"modified_method":"@Test\n  public void testKafkaPublish() throws UnsupportedTypeException, InterruptedException, IOException {\n\n    Properties kafkaConfig = generateKafkaConfig(tmpFolder1);\n    kafkaServer = new EmbeddedKafkaServer(kafkaConfig);\n    kafkaServer.startAndWait();\n\n    ZKClientService zkClient = ZKClientService.Builder.of(zkServer.getConnectionStr()).build();\n    zkClient.startAndWait();\n\n    KafkaClientService kafkaClient = new ZKKafkaClientService(zkClient);\n    kafkaClient.startAndWait();\n\n    final TypeToken<MetricValues> metricValueType = TypeToken.of(MetricValues.class);\n    final Schema schema = new ReflectionSchemaGenerator().generate(metricValueType.getType());\n    DatumWriter<MetricValues> metricRecordDatumWriter = new ASMDatumWriterFactory(new ASMFieldAccessorFactory())\n      .create(metricValueType, schema);\n\n    MetricsCollectionService collectionService = new KafkaMetricsCollectionService(kafkaClient, \"metrics\",\n                                                                                   KafkaPublisher.Ack.FIRE_AND_FORGET,\n                                                                                   metricRecordDatumWriter);\n    collectionService.startAndWait();\n\n    // publish metrics for different context\n    for (int i = 1; i <= 3; i++) {\n      collectionService.getCollector(ImmutableMap.of(\"tag\", \"\" + i)).increment(\"processed\", i);\n    }\n\n    // Sleep to make sure metrics get published\n    TimeUnit.SECONDS.sleep(2);\n\n    collectionService.stopAndWait();\n\n    // <Context, metricName, value>\n    Table<String, String, Long> expected = HashBasedTable.create();\n    expected.put(\"tag.1\", \"processed\", 1L);\n    expected.put(\"tag.2\", \"processed\", 2L);\n    expected.put(\"tag.3\", \"processed\", 3L);\n\n    assertMetricsFromKafka(kafkaClient, schema, metricValueType, expected);\n  }","commit_id":"ca6da0b0e397f22a1d730bffc0cc252a7513daaf","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testRecoverFromStoppedKafkaServerAtStartUp() throws InterruptedException, UnsupportedTypeException,\n    IOException {\n    // start the metrics collection service\n    ZKClientService zkClient = ZKClientService.Builder.of(zkServer.getConnectionStr()).build();\n    zkClient.startAndWait();\n\n    KafkaClientService kafkaClient = new ZKKafkaClientService(zkClient);\n    kafkaClient.startAndWait();\n\n    final TypeToken<MetricValues> metricRecordType = TypeToken.of(MetricValues.class);\n    final Schema schema = new ReflectionSchemaGenerator().generate(metricRecordType.getType());\n    DatumWriter<MetricValues> metricRecordDatumWriter = new ASMDatumWriterFactory(new ASMFieldAccessorFactory())\n      .create(metricRecordType, schema);\n\n    MetricsCollectionService collectionService = new KafkaMetricsCollectionService(kafkaClient, \"metrics\",\n                                                                                   KafkaPublisher.Ack.FIRE_AND_FORGET,\n                                                                                   metricRecordDatumWriter) {\n      @Override\n      protected boolean isPublishMetaMetrics() {\n        return false;\n      }\n    };\n    collectionService.startAndWait();\n\n    // start the kafka server\n    Properties kafkaConfig = generateKafkaConfig(tmpFolder2);\n    kafkaServer = new EmbeddedKafkaServer(kafkaConfig);\n    kafkaServer.startAndWait();\n\n    // Sleep to make sure brokers get populated\n    TimeUnit.SECONDS.sleep(5);\n\n    // public a metric\n    collectionService.getCollector(ImmutableMap.of(\"tag\", \"test\")).increment(\"metric\", 5);\n\n    // Sleep to make sure metrics get published\n    TimeUnit.SECONDS.sleep(2);\n\n    collectionService.stopAndWait();\n\n    // <Context, metricName, value>\n    Table<String, String, Long> expected = HashBasedTable.create();\n    expected.put(\"tag.test\", \"metric\", 5L);\n    assertMetricsFromKafka(kafkaClient, schema, metricRecordType, expected);\n  }","id":39847,"modified_method":"@Test\n  public void testRecoverFromStoppedKafkaServerAtStartUp() throws InterruptedException, UnsupportedTypeException,\n    IOException {\n    // start the metrics collection service\n    ZKClientService zkClient = ZKClientService.Builder.of(zkServer.getConnectionStr()).build();\n    zkClient.startAndWait();\n\n    KafkaClientService kafkaClient = new ZKKafkaClientService(zkClient);\n    kafkaClient.startAndWait();\n\n    final TypeToken<MetricValues> metricRecordType = TypeToken.of(MetricValues.class);\n    final Schema schema = new ReflectionSchemaGenerator().generate(metricRecordType.getType());\n    DatumWriter<MetricValues> metricRecordDatumWriter = new ASMDatumWriterFactory(new ASMFieldAccessorFactory())\n      .create(metricRecordType, schema);\n\n    MetricsCollectionService collectionService = new KafkaMetricsCollectionService(kafkaClient, \"metrics\",\n                                                                                   KafkaPublisher.Ack.FIRE_AND_FORGET,\n                                                                                   metricRecordDatumWriter);\n    collectionService.startAndWait();\n\n    // start the kafka server\n    Properties kafkaConfig = generateKafkaConfig(tmpFolder2);\n    kafkaServer = new EmbeddedKafkaServer(kafkaConfig);\n    kafkaServer.startAndWait();\n\n    // Sleep to make sure brokers get populated\n    TimeUnit.SECONDS.sleep(5);\n\n    // public a metric\n    collectionService.getCollector(ImmutableMap.of(\"tag\", \"test\")).increment(\"metric\", 5);\n\n    // Sleep to make sure metrics get published\n    TimeUnit.SECONDS.sleep(2);\n\n    collectionService.stopAndWait();\n\n    // <Context, metricName, value>\n    Table<String, String, Long> expected = HashBasedTable.create();\n    expected.put(\"tag.test\", \"metric\", 5L);\n    assertMetricsFromKafka(kafkaClient, schema, metricRecordType, expected);\n  }","commit_id":"ca6da0b0e397f22a1d730bffc0cc252a7513daaf","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testSearchWithTags() throws Exception {\n    // empty context\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag\", getSearchResultExpected(\"namespace\", \"myspace\",\n                                                                                        \"namespace\", \"yourspace\",\n                                                                                        \"namespace\", \"system\"));\n\n    // WordCount is in myspace, WCount in yourspace\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:myspace\",\n                       getSearchResultExpected(\"app\", \"WordCount1\"));\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace\",\n                       getSearchResultExpected(\"adapter\", \"adapter1\", \"adapter\", \"adapter2\", \"app\", \"WCount1\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace\",\n                               getSearchResultExpected(\"adapter\", \"adapter1\", \"adapter\", \"adapter2\", \"app\", \"WCount1\"));\n\n    // WordCount should be found in myspace, not in yourspace\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:myspace&tag=app:WordCount1\",\n                       getSearchResultExpected(\"flow\", \"WordCounter\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WordCount1\",\n                               getSearchResultExpected());\n\n    // WCount should be found in yourspace, not in myspace\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\",\n                       getSearchResultExpected(\"flow\", \"WCounter\",\n                                               \"flow\", \"WordCounter\",\n                                               \"mapreduce\", \"ClassicWordCount\",\n                                               \"worker\", \"WorkerWordCount\"\n                       ));\n\n    // Only run ids when you specify namespace and adapter\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=adapter:adapter1\",\n                               getSearchResultExpected(\"run\", \"run1\",\n                                                       \"run\", \"run2\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:myspace&tag=app:WCount1\",\n                               getSearchResultExpected());\n\n    // verify other metrics for WCount app\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\" +\n                                 \"&tag=mapreduce:ClassicWordCount\",\n                               getSearchResultExpected(\"run\", \"run1\",\n                                                       \"run\", \"run2\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\" +\n                                 \"&tag=mapreduce:ClassicWordCount&tag=run:run1\",\n                               getSearchResultExpected(\"tasktype\", \"m\", \"tasktype\", \"r\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\" +\n                                 \"&tag=mapreduce:ClassicWordCount&tag=run:run1&tag=tasktype:m\",\n                               getSearchResultExpected(\"instance\", \"task1\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\" +\n                                 \"&tag=mapreduce:ClassicWordCount&tag=run:run1&tag=tasktype:m&tag=instance:task1\",\n                               getSearchResultExpected());\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\" +\n                                 \"&tag=worker:WorkerWordCount\",\n                               getSearchResultExpected(\"run\", \"run1\",\n                                                       \"run\", \"run2\"));\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\" +\n                                 \"&tag=worker:WorkerWordCount&tag=run:run1\",\n                               getSearchResultExpected(\"instance\", \"task1\"));\n\n    // verify \"*\"\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:*\",\n                               getSearchResultExpected(\"adapter\", \"adapter1\",\n                                                       \"adapter\", \"adapter2\",\n                                                       \"app\", \"WordCount1\",\n                                                       \"app\", \"WCount1\",\n                                                       \"component\", \"metrics.processor\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:*&tag=app:*\",\n                               getSearchResultExpected(\"flow\", \"WCounter\",\n                                                       \"flow\", \"WordCounter\",\n                                                       \"mapreduce\", \"ClassicWordCount\",\n                                                       \"worker\", \"WorkerWordCount\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:*&tag=app:*&tag=flow:*\",\n                               getSearchResultExpected(\"run\", \"run1\"));\n  }","id":39848,"modified_method":"@Test\n  public void testSearchWithTags() throws Exception {\n    // empty context\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag\", getSearchResultExpected(\"namespace\", \"myspace\",\n                                                                                        \"namespace\", \"yourspace\"));\n\n    // WordCount is in myspace, WCount in yourspace\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:myspace\",\n                       getSearchResultExpected(\"app\", \"WordCount1\"));\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace\",\n                       getSearchResultExpected(\"adapter\", \"adapter1\", \"adapter\", \"adapter2\", \"app\", \"WCount1\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace\",\n                               getSearchResultExpected(\"adapter\", \"adapter1\", \"adapter\", \"adapter2\", \"app\", \"WCount1\"));\n\n    // WordCount should be found in myspace, not in yourspace\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:myspace&tag=app:WordCount1\",\n                       getSearchResultExpected(\"flow\", \"WordCounter\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WordCount1\",\n                               getSearchResultExpected());\n\n    // WCount should be found in yourspace, not in myspace\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\",\n                       getSearchResultExpected(\"flow\", \"WCounter\",\n                                               \"flow\", \"WordCounter\",\n                                               \"mapreduce\", \"ClassicWordCount\",\n                                               \"worker\", \"WorkerWordCount\"\n                       ));\n\n    // Only run ids when you specify namespace and adapter\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=adapter:adapter1\",\n                               getSearchResultExpected(\"run\", \"run1\",\n                                                       \"run\", \"run2\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:myspace&tag=app:WCount1\",\n                               getSearchResultExpected());\n\n    // verify other metrics for WCount app\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\" +\n                                 \"&tag=mapreduce:ClassicWordCount\",\n                               getSearchResultExpected(\"run\", \"run1\",\n                                                       \"run\", \"run2\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\" +\n                                 \"&tag=mapreduce:ClassicWordCount&tag=run:run1\",\n                               getSearchResultExpected(\"tasktype\", \"m\", \"tasktype\", \"r\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\" +\n                                 \"&tag=mapreduce:ClassicWordCount&tag=run:run1&tag=tasktype:m\",\n                               getSearchResultExpected(\"instance\", \"task1\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\" +\n                                 \"&tag=mapreduce:ClassicWordCount&tag=run:run1&tag=tasktype:m&tag=instance:task1\",\n                               getSearchResultExpected());\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\" +\n                                 \"&tag=worker:WorkerWordCount\",\n                               getSearchResultExpected(\"run\", \"run1\",\n                                                       \"run\", \"run2\"));\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:yourspace&tag=app:WCount1\" +\n                                 \"&tag=worker:WorkerWordCount&tag=run:run1\",\n                               getSearchResultExpected(\"instance\", \"task1\"));\n\n    // verify \"*\"\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:*\",\n                               getSearchResultExpected(\"adapter\", \"adapter1\",\n                                                       \"adapter\", \"adapter2\",\n                                                       \"app\", \"WordCount1\",\n                                                       \"app\", \"WCount1\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:*&tag=app:*\",\n                               getSearchResultExpected(\"flow\", \"WCounter\",\n                                                       \"flow\", \"WordCounter\",\n                                                       \"mapreduce\", \"ClassicWordCount\",\n                                                       \"worker\", \"WorkerWordCount\"));\n\n    verifySearchResultWithTags(\"/v3/metrics/search?target=tag&tag=namespace:*&tag=app:*&tag=flow:*\",\n                               getSearchResultExpected(\"run\", \"run1\"));\n  }","commit_id":"ca6da0b0e397f22a1d730bffc0cc252a7513daaf","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void onReceived(Iterator<FetchedMessage> messages) {\n    // Decode the metrics records.\n    final ByteBufferInputStream is = new ByteBufferInputStream(null);\n    List<MetricValues> records = ImmutableList.copyOf(\n      Iterators.filter(Iterators.transform(messages, new Function<FetchedMessage, MetricValues>() {\n      @Override\n      public MetricValues apply(FetchedMessage input) {\n        try {\n          return recordReader.read(new BinaryDecoder(is.reset(input.getPayload())), recordSchema);\n        } catch (IOException e) {\n          LOG.info(\"Failed to decode message to MetricValue. Skipped. {}\", e.getMessage());\n          return null;\n        }\n      }\n    }), Predicates.notNull()));\n\n    if (records.isEmpty()) {\n      LOG.info(\"No records to process.\");\n      return;\n    }\n\n    try {\n      metricStore.add(records);\n    } catch (Exception e) {\n      String msg = \"Failed to add metrics data to a store\";\n      LOG.error(msg);\n      // todo: will it shut down the whole the metrics processor service??\n      throw new RuntimeException(msg, e);\n    }\n\n    recordProcessed += records.size();\n    if (recordProcessed % 1000 == 0) {\n      LOG.info(\"{} metrics records processed\", recordProcessed);\n      LOG.info(\"Last record time: {}\", records.get(records.size() - 1).getTimestamp());\n    }\n  }","id":39849,"modified_method":"@Override\n  public void onReceived(Iterator<FetchedMessage> messages) {\n    // Decode the metrics records.\n    final ByteBufferInputStream is = new ByteBufferInputStream(null);\n    List<MetricValues> records = Lists.newArrayList();\n\n    while (messages.hasNext()) {\n      FetchedMessage input = messages.next();\n      try {\n        MetricValues metricValues = recordReader.read(new BinaryDecoder(is.reset(input.getPayload())), recordSchema);\n        records.add(metricValues);\n      } catch (IOException e) {\n        LOG.info(\"Failed to decode message to MetricValue. Skipped. {}\", e.getMessage());\n      }\n    }\n\n    if (records.isEmpty()) {\n      LOG.info(\"No records to process.\");\n      return;\n    }\n\n    try {\n      addProcessingStats(records);\n      metricStore.add(records);\n    } catch (Exception e) {\n      String msg = \"Failed to add metrics data to a store\";\n      LOG.error(msg);\n      // todo: will it shut down the whole the metrics processor service??\n      throw new RuntimeException(msg, e);\n    }\n\n    recordProcessed += records.size();\n    if (recordProcessed % 1000 == 0) {\n      LOG.info(\"{} metrics records processed\", recordProcessed);\n      LOG.info(\"Last record time: {}\", records.get(records.size() - 1).getTimestamp());\n    }\n  }","commit_id":"ca6da0b0e397f22a1d730bffc0cc252a7513daaf","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public SparkCollection<T> window(Windower windower) {\n    return wrap(stream.window(Durations.seconds(windower.getWidth()), Durations.seconds(windower.getSlideInterval())));\n  }","id":39850,"modified_method":"@Override\n  public SparkCollection<T> window(final String stageName, Windower windower) {\n    return wrap(stream\n                  .transform(new Function<JavaRDD<T>, JavaRDD<T>>() {\n                    @Override\n                    public JavaRDD<T> call(JavaRDD<T> in) throws Exception {\n                      return in.map(new CountingFunction<T>(stageName, sec.getMetrics(), \"records.in\"));\n                    }\n                  })\n                  .window(Durations.seconds(windower.getWidth()), Durations.seconds(windower.getSlideInterval()))\n                  .transform(new Function<JavaRDD<T>, JavaRDD<T>>() {\n                    @Override\n                    public JavaRDD<T> call(JavaRDD<T> in) throws Exception {\n                      return in.map(new CountingFunction<T>(stageName, sec.getMetrics(), \"records.out\"));\n                    }\n                  }));\n  }","commit_id":"3bb435add52bed85baf1f9f320c0d3d2ba3c6835","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public <U> SparkCollection<U> compute(final String stageName, final SparkCompute<T, U> compute) throws Exception {\n    return wrap(stream.transform(new Function2<JavaRDD<T>, Time, JavaRDD<U>>() {\n                  @Override\n                  public JavaRDD<U> call(JavaRDD<T> data, Time batchTime) throws Exception {\n                    SparkExecutionPluginContext sparkPluginContext =\n                      new SparkStreamingExecutionContext(sec, sparkContext, stageName, batchTime.milliseconds());\n                    return compute.transform(sparkPluginContext, data);\n                  }\n                }));\n  }","id":39851,"modified_method":"@Override\n  public <U> SparkCollection<U> compute(final String stageName, final SparkCompute<T, U> compute) throws Exception {\n    return wrap(stream.transform(new Function2<JavaRDD<T>, Time, JavaRDD<U>>() {\n                  @Override\n                  public JavaRDD<U> call(JavaRDD<T> data, Time batchTime) throws Exception {\n                    SparkExecutionPluginContext sparkPluginContext =\n                      new SparkStreamingExecutionContext(sec, sparkContext, stageName, batchTime.milliseconds());\n\n                    data = data.map(new CountingFunction<T>(stageName, sec.getMetrics(), \"records.in\"));\n                    return compute.transform(sparkPluginContext, data)\n                      .map(new CountingFunction<U>(stageName, sec.getMetrics(), \"records.out\"));\n                  }\n                }));\n  }","commit_id":"3bb435add52bed85baf1f9f320c0d3d2ba3c6835","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void store(final String stageName, final PairFlatMapFunction<T, Object, Object> sinkFunction) {\n    // note: not using foreachRDD(VoidFunction2) method, because spark 1.3 doesn't have VoidFunction2\n    stream.foreachRDD(new Function2<JavaRDD<T>, Time, Void>() {\n      @Override\n      public Void call(JavaRDD<T> data, Time batchTime) throws Exception {\n        final long logicalStartTime = batchTime.milliseconds();\n        MacroEvaluator evaluator = new DefaultMacroEvaluator(sec.getWorkflowToken(),\n                                                             sec.getRuntimeArguments(),\n                                                             logicalStartTime,\n                                                             sec.getSecureStore(),\n                                                             sec.getNamespace());\n        final SparkBatchSinkFactory sinkFactory = new SparkBatchSinkFactory();\n        final BatchSink<Object, Object, Object> batchSink =\n          sec.getPluginContext().newPluginInstance(stageName, evaluator);\n        boolean isPrepared = false;\n        boolean isDone = false;\n\n        try {\n          sec.execute(new TxRunnable() {\n            @Override\n            public void run(DatasetContext datasetContext) throws Exception {\n              SparkBatchSinkContext sinkContext =\n                new SparkBatchSinkContext(sinkFactory, sec, datasetContext, stageName, logicalStartTime);\n              batchSink.prepareRun(sinkContext);\n            }\n          });\n          isPrepared = true;\n\n          sinkFactory.writeFromRDD(data.flatMapToPair(sinkFunction), sec, stageName, Object.class, Object.class);\n          isDone = true;\n          sec.execute(new TxRunnable() {\n            @Override\n            public void run(DatasetContext datasetContext) throws Exception {\n              SparkBatchSinkContext sinkContext =\n                new SparkBatchSinkContext(sinkFactory, sec, datasetContext, stageName, logicalStartTime);\n              batchSink.onRunFinish(true, sinkContext);\n            }\n          });\n        } catch (Exception e) {\n          LOG.error(\"Error writing to sink {} for the batch for time {}.\", stageName, logicalStartTime, e);\n        } finally {\n          if (isPrepared && !isDone) {\n            sec.execute(new TxRunnable() {\n              @Override\n              public void run(DatasetContext datasetContext) throws Exception {\n                SparkBatchSinkContext sinkContext =\n                  new SparkBatchSinkContext(sinkFactory, sec, datasetContext, stageName, logicalStartTime);\n                batchSink.onRunFinish(false, sinkContext);\n              }\n            });\n          }\n        }\n        return null;\n      }\n    });\n  }","id":39852,"modified_method":"@Override\n  public void store(final String stageName, final PairFlatMapFunction<T, Object, Object> sinkFunction) {\n    // note: not using foreachRDD(VoidFunction2) method, because spark 1.3 doesn't have VoidFunction2\n    stream.foreachRDD(new Function2<JavaRDD<T>, Time, Void>() {\n      @Override\n      public Void call(JavaRDD<T> data, Time batchTime) throws Exception {\n        final long logicalStartTime = batchTime.milliseconds();\n        MacroEvaluator evaluator = new DefaultMacroEvaluator(sec.getWorkflowToken(),\n                                                             sec.getRuntimeArguments(),\n                                                             logicalStartTime,\n                                                             sec.getSecureStore(),\n                                                             sec.getNamespace());\n        final SparkBatchSinkFactory sinkFactory = new SparkBatchSinkFactory();\n        final BatchSink<Object, Object, Object> batchSink =\n          sec.getPluginContext().newPluginInstance(stageName, evaluator);\n        boolean isPrepared = false;\n        boolean isDone = false;\n\n        try {\n          sec.execute(new TxRunnable() {\n            @Override\n            public void run(DatasetContext datasetContext) throws Exception {\n              SparkBatchSinkContext sinkContext =\n                new SparkBatchSinkContext(sinkFactory, sec, datasetContext, stageName, logicalStartTime);\n              batchSink.prepareRun(sinkContext);\n            }\n          });\n          isPrepared = true;\n\n          data = data.map(new CountingFunction<T>(stageName, sec.getMetrics(), \"records.in\"));\n          sinkFactory.writeFromRDD(data.flatMapToPair(sinkFunction), sec, stageName, Object.class, Object.class);\n          isDone = true;\n          sec.execute(new TxRunnable() {\n            @Override\n            public void run(DatasetContext datasetContext) throws Exception {\n              SparkBatchSinkContext sinkContext =\n                new SparkBatchSinkContext(sinkFactory, sec, datasetContext, stageName, logicalStartTime);\n              batchSink.onRunFinish(true, sinkContext);\n            }\n          });\n        } catch (Exception e) {\n          LOG.error(\"Error writing to sink {} for the batch for time {}.\", stageName, logicalStartTime, e);\n        } finally {\n          if (isPrepared && !isDone) {\n            sec.execute(new TxRunnable() {\n              @Override\n              public void run(DatasetContext datasetContext) throws Exception {\n                SparkBatchSinkContext sinkContext =\n                  new SparkBatchSinkContext(sinkFactory, sec, datasetContext, stageName, logicalStartTime);\n                batchSink.onRunFinish(false, sinkContext);\n              }\n            });\n          }\n        }\n        return null;\n      }\n    });\n  }","commit_id":"3bb435add52bed85baf1f9f320c0d3d2ba3c6835","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void beforeSubmit(SparkClientContext context) throws Exception {\n    SparkConf sparkConf = new SparkConf();\n    // spark... makes you set this to at least the number of receivers (streaming sources)\n    // because it holds one thread per receiver, or one core in distributed mode.\n    // so... we have to set this hacky master variable based on the isUnitTest setting in the config\n    Map<String, String> programProperties = context.getSpecification().getProperties();\n    String extraOpts = programProperties.get(\"cask.hydrator.extra.opts\");\n    if (extraOpts != null && !extraOpts.isEmpty()) {\n      sparkConf.set(\"spark.driver.extraJavaOptions\", extraOpts);\n      sparkConf.set(\"spark.executor.extraJavaOptions\", extraOpts);\n    }\n    Boolean isUnitTest = Boolean.valueOf(programProperties.get(\"cask.hydrator.is.unit.test\"));\n    if (isUnitTest) {\n      Integer numSources = Integer.valueOf(programProperties.get(\"cask.hydrator.num.sources\"));\n      sparkConf.setMaster(String.format(\"local[%d]\", numSources + 1));\n      // without this, stopping will hang on machines with few cores.\n      sparkConf.set(\"spark.rpc.netty.dispatcher.numThreads\", String.valueOf(numSources + 2));\n    }\n    context.setSparkConf(sparkConf);\n  }","id":39853,"modified_method":"@Override\n  public void beforeSubmit(SparkClientContext context) throws Exception {\n    SparkConf sparkConf = new SparkConf();\n    // spark... makes you set this to at least the number of receivers (streaming sources)\n    // because it holds one thread per receiver, or one core in distributed mode.\n    // so... we have to set this hacky master variable based on the isUnitTest setting in the config\n    Map<String, String> programProperties = context.getSpecification().getProperties();\n    String extraOpts = programProperties.get(\"cask.hydrator.extra.opts\");\n    if (extraOpts != null && !extraOpts.isEmpty()) {\n      sparkConf.set(\"spark.driver.extraJavaOptions\", extraOpts);\n      sparkConf.set(\"spark.executor.extraJavaOptions\", extraOpts);\n    }\n    Integer numSources = Integer.valueOf(programProperties.get(\"cask.hydrator.num.sources\"));\n    // without this, stopping will hang on machines with few cores.\n    sparkConf.set(\"spark.rpc.netty.dispatcher.numThreads\", String.valueOf(numSources + 2));\n    Boolean isUnitTest = Boolean.valueOf(programProperties.get(\"cask.hydrator.is.unit.test\"));\n    if (isUnitTest) {\n      sparkConf.setMaster(String.format(\"local[%d]\", numSources + 1));\n    }\n    context.setSparkConf(sparkConf);\n  }","commit_id":"3bb435add52bed85baf1f9f320c0d3d2ba3c6835","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testJoin() throws Exception {\n    /*\n     * source1 ----> t1 ------\n     *                        | --> innerjoin ----> t4 ------\n     * source2 ----> t2 ------                                 |\n     *                                                         | ---> outerjoin --> sink1\n     *                                                         |\n     * source3 -------------------- t3 ------------------------\n     */\n\n    Schema inputSchema1 = Schema.recordOf(\n      \"customerRecord\",\n      Schema.Field.of(\"customer_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"customer_name\", Schema.of(Schema.Type.STRING))\n    );\n\n    Schema inputSchema2 = Schema.recordOf(\n      \"itemRecord\",\n      Schema.Field.of(\"item_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"item_price\", Schema.of(Schema.Type.LONG)),\n      Schema.Field.of(\"cust_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"cust_name\", Schema.of(Schema.Type.STRING))\n    );\n\n    Schema inputSchema3 = Schema.recordOf(\n      \"transactionRecord\",\n      Schema.Field.of(\"t_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"c_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"i_id\", Schema.of(Schema.Type.STRING))\n    );\n\n    Schema outSchema1 = Schema.recordOf(\n      \"join.output\",\n      Schema.Field.of(\"customer_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"customer_name\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"item_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"item_price\", Schema.of(Schema.Type.LONG)),\n      Schema.Field.of(\"cust_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"cust_name\", Schema.of(Schema.Type.STRING))\n    );\n\n    Schema outSchema2 = Schema.recordOf(\n      \"join.output\",\n      Schema.Field.of(\"t_id\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"c_id\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"i_id\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"customer_id\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"customer_name\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"item_id\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"item_price\", Schema.nullableOf(Schema.of(Schema.Type.LONG))),\n      Schema.Field.of(\"cust_id\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"cust_name\", Schema.nullableOf(Schema.of(Schema.Type.STRING)))\n    );\n\n    StructuredRecord recordSamuel = StructuredRecord.builder(inputSchema1).set(\"customer_id\", \"1\")\n      .set(\"customer_name\", \"samuel\").build();\n    StructuredRecord recordBob = StructuredRecord.builder(inputSchema1).set(\"customer_id\", \"2\")\n      .set(\"customer_name\", \"bob\").build();\n    StructuredRecord recordJane = StructuredRecord.builder(inputSchema1).set(\"customer_id\", \"3\")\n      .set(\"customer_name\", \"jane\").build();\n\n    StructuredRecord recordCar = StructuredRecord.builder(inputSchema2).set(\"item_id\", \"11\").set(\"item_price\", 10000L)\n      .set(\"cust_id\", \"1\").set(\"cust_name\", \"samuel\").build();\n    StructuredRecord recordBike = StructuredRecord.builder(inputSchema2).set(\"item_id\", \"22\").set(\"item_price\", 100L)\n      .set(\"cust_id\", \"3\").set(\"cust_name\", \"jane\").build();\n\n    StructuredRecord recordTrasCar = StructuredRecord.builder(inputSchema3).set(\"t_id\", \"1\").set(\"c_id\", \"1\")\n      .set(\"i_id\", \"11\").build();\n    StructuredRecord recordTrasBike = StructuredRecord.builder(inputSchema3).set(\"t_id\", \"2\").set(\"c_id\", \"3\")\n      .set(\"i_id\", \"22\").build();\n    StructuredRecord recordTrasPlane = StructuredRecord.builder(inputSchema3).set(\"t_id\", \"3\").set(\"c_id\", \"4\")\n      .set(\"i_id\", \"33\").build();\n\n    List<StructuredRecord> input1 = ImmutableList.of(recordSamuel, recordBob, recordJane);\n    List<StructuredRecord> input2 = ImmutableList.of(recordCar, recordBike);\n    List<StructuredRecord> input3 = ImmutableList.of(recordTrasCar, recordTrasBike, recordTrasPlane);\n\n    String outputName = \"multiJoinOutputSink\";\n    DataStreamsConfig etlConfig = DataStreamsConfig.builder()\n      .addStage(new ETLStage(\"source1\", MockSource.getPlugin(inputSchema1, input1)))\n      .addStage(new ETLStage(\"source2\", MockSource.getPlugin(inputSchema2, input2)))\n      .addStage(new ETLStage(\"source3\", MockSource.getPlugin(inputSchema3, input3)))\n      .addStage(new ETLStage(\"t1\", FieldsPrefixTransform.getPlugin(\"\", inputSchema1.toString())))\n      .addStage(new ETLStage(\"t2\", FieldsPrefixTransform.getPlugin(\"\", inputSchema2.toString())))\n      .addStage(new ETLStage(\"t3\", FieldsPrefixTransform.getPlugin(\"\", inputSchema3.toString())))\n      .addStage(new ETLStage(\"t4\", FieldsPrefixTransform.getPlugin(\"\", outSchema1.toString())))\n      .addStage(new ETLStage(\"innerjoin\", MockJoiner.getPlugin(\"t1.customer_id=t2.cust_id\",\n                                                               \"t1,t2\", \"\")))\n      .addStage(new ETLStage(\"outerjoin\", MockJoiner.getPlugin(\"t4.item_id=t3.i_id\",\n                                                                 \"\", \"\")))\n      .addStage(new ETLStage(\"multijoinSink\", MockSink.getPlugin(outputName)))\n      .addConnection(\"source1\", \"t1\")\n      .addConnection(\"source2\", \"t2\")\n      .addConnection(\"source3\", \"t3\")\n      .addConnection(\"t1\", \"innerjoin\")\n      .addConnection(\"t2\", \"innerjoin\")\n      .addConnection(\"innerjoin\", \"t4\")\n      .addConnection(\"t3\", \"outerjoin\")\n      .addConnection(\"t4\", \"outerjoin\")\n      .addConnection(\"outerjoin\", \"multijoinSink\")\n      .setBatchInterval(\"5s\")\n      .build();\n\n    AppRequest<DataStreamsConfig> appRequest = new AppRequest<>(APP_ARTIFACT, etlConfig);\n    Id.Application appId = Id.Application.from(Id.Namespace.DEFAULT, \"JoinerApp\");\n    ApplicationManager appManager = deployApplication(appId, appRequest);\n\n    SparkManager sparkManager = appManager.getSparkManager(DataStreamsSparkLauncher.NAME);\n    sparkManager.start();\n    sparkManager.waitForStatus(true, 10, 1);\n\n    StructuredRecord joinRecordSamuel = StructuredRecord.builder(outSchema2)\n      .set(\"customer_id\", \"1\").set(\"customer_name\", \"samuel\")\n      .set(\"item_id\", \"11\").set(\"item_price\", 10000L).set(\"cust_id\", \"1\").set(\"cust_name\", \"samuel\")\n      .set(\"t_id\", \"1\").set(\"c_id\", \"1\").set(\"i_id\", \"11\").build();\n\n    StructuredRecord joinRecordJane = StructuredRecord.builder(outSchema2)\n      .set(\"customer_id\", \"3\").set(\"customer_name\", \"jane\")\n      .set(\"item_id\", \"22\").set(\"item_price\", 100L).set(\"cust_id\", \"3\").set(\"cust_name\", \"jane\")\n      .set(\"t_id\", \"2\").set(\"c_id\", \"3\").set(\"i_id\", \"22\").build();\n\n    StructuredRecord joinRecordPlane = StructuredRecord.builder(outSchema2)\n      .set(\"t_id\", \"3\").set(\"c_id\", \"4\").set(\"i_id\", \"33\").build();\n    final Set<StructuredRecord> expected = ImmutableSet.of(joinRecordSamuel, joinRecordJane, joinRecordPlane);\n\n    final DataSetManager<Table> outputManager = getDataset(outputName);\n    Tasks.waitFor(\n      true,\n      new Callable<Boolean>() {\n        @Override\n        public Boolean call() throws Exception {\n          outputManager.flush();\n          Set<StructuredRecord> outputRecords = new HashSet<>();\n          outputRecords.addAll(MockSink.readOutput(outputManager));\n          return expected.equals(outputRecords);\n        }\n      },\n      4,\n      TimeUnit.MINUTES);\n\n    sparkManager.stop();\n    sparkManager.waitForStatus(false, 10, 1);\n  }","id":39854,"modified_method":"@Test\n  public void testJoin() throws Exception {\n    /*\n     * source1 ----> t1 ------\n     *                        | --> innerjoin ----> t4 ------\n     * source2 ----> t2 ------                                 |\n     *                                                         | ---> outerjoin --> sink1\n     *                                                         |\n     * source3 -------------------- t3 ------------------------\n     */\n\n    Schema inputSchema1 = Schema.recordOf(\n      \"customerRecord\",\n      Schema.Field.of(\"customer_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"customer_name\", Schema.of(Schema.Type.STRING))\n    );\n\n    Schema inputSchema2 = Schema.recordOf(\n      \"itemRecord\",\n      Schema.Field.of(\"item_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"item_price\", Schema.of(Schema.Type.LONG)),\n      Schema.Field.of(\"cust_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"cust_name\", Schema.of(Schema.Type.STRING))\n    );\n\n    Schema inputSchema3 = Schema.recordOf(\n      \"transactionRecord\",\n      Schema.Field.of(\"t_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"c_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"i_id\", Schema.of(Schema.Type.STRING))\n    );\n\n    Schema outSchema1 = Schema.recordOf(\n      \"join.output\",\n      Schema.Field.of(\"customer_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"customer_name\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"item_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"item_price\", Schema.of(Schema.Type.LONG)),\n      Schema.Field.of(\"cust_id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"cust_name\", Schema.of(Schema.Type.STRING))\n    );\n\n    Schema outSchema2 = Schema.recordOf(\n      \"join.output\",\n      Schema.Field.of(\"t_id\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"c_id\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"i_id\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"customer_id\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"customer_name\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"item_id\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"item_price\", Schema.nullableOf(Schema.of(Schema.Type.LONG))),\n      Schema.Field.of(\"cust_id\", Schema.nullableOf(Schema.of(Schema.Type.STRING))),\n      Schema.Field.of(\"cust_name\", Schema.nullableOf(Schema.of(Schema.Type.STRING)))\n    );\n\n    StructuredRecord recordSamuel = StructuredRecord.builder(inputSchema1).set(\"customer_id\", \"1\")\n      .set(\"customer_name\", \"samuel\").build();\n    StructuredRecord recordBob = StructuredRecord.builder(inputSchema1).set(\"customer_id\", \"2\")\n      .set(\"customer_name\", \"bob\").build();\n    StructuredRecord recordJane = StructuredRecord.builder(inputSchema1).set(\"customer_id\", \"3\")\n      .set(\"customer_name\", \"jane\").build();\n\n    StructuredRecord recordCar = StructuredRecord.builder(inputSchema2).set(\"item_id\", \"11\").set(\"item_price\", 10000L)\n      .set(\"cust_id\", \"1\").set(\"cust_name\", \"samuel\").build();\n    StructuredRecord recordBike = StructuredRecord.builder(inputSchema2).set(\"item_id\", \"22\").set(\"item_price\", 100L)\n      .set(\"cust_id\", \"3\").set(\"cust_name\", \"jane\").build();\n\n    StructuredRecord recordTrasCar = StructuredRecord.builder(inputSchema3).set(\"t_id\", \"1\").set(\"c_id\", \"1\")\n      .set(\"i_id\", \"11\").build();\n    StructuredRecord recordTrasBike = StructuredRecord.builder(inputSchema3).set(\"t_id\", \"2\").set(\"c_id\", \"3\")\n      .set(\"i_id\", \"22\").build();\n    StructuredRecord recordTrasPlane = StructuredRecord.builder(inputSchema3).set(\"t_id\", \"3\").set(\"c_id\", \"4\")\n      .set(\"i_id\", \"33\").build();\n\n    List<StructuredRecord> input1 = ImmutableList.of(recordSamuel, recordBob, recordJane);\n    List<StructuredRecord> input2 = ImmutableList.of(recordCar, recordBike);\n    List<StructuredRecord> input3 = ImmutableList.of(recordTrasCar, recordTrasBike, recordTrasPlane);\n\n    String outputName = \"multiJoinOutputSink\";\n    DataStreamsConfig etlConfig = DataStreamsConfig.builder()\n      .addStage(new ETLStage(\"source1\", MockSource.getPlugin(inputSchema1, input1)))\n      .addStage(new ETLStage(\"source2\", MockSource.getPlugin(inputSchema2, input2)))\n      .addStage(new ETLStage(\"source3\", MockSource.getPlugin(inputSchema3, input3)))\n      .addStage(new ETLStage(\"t1\", FieldsPrefixTransform.getPlugin(\"\", inputSchema1.toString())))\n      .addStage(new ETLStage(\"t2\", FieldsPrefixTransform.getPlugin(\"\", inputSchema2.toString())))\n      .addStage(new ETLStage(\"t3\", FieldsPrefixTransform.getPlugin(\"\", inputSchema3.toString())))\n      .addStage(new ETLStage(\"t4\", FieldsPrefixTransform.getPlugin(\"\", outSchema1.toString())))\n      .addStage(new ETLStage(\"innerjoin\", MockJoiner.getPlugin(\"t1.customer_id=t2.cust_id\",\n                                                               \"t1,t2\", \"\")))\n      .addStage(new ETLStage(\"outerjoin\", MockJoiner.getPlugin(\"t4.item_id=t3.i_id\",\n                                                                 \"\", \"\")))\n      .addStage(new ETLStage(\"multijoinSink\", MockSink.getPlugin(outputName)))\n      .addConnection(\"source1\", \"t1\")\n      .addConnection(\"source2\", \"t2\")\n      .addConnection(\"source3\", \"t3\")\n      .addConnection(\"t1\", \"innerjoin\")\n      .addConnection(\"t2\", \"innerjoin\")\n      .addConnection(\"innerjoin\", \"t4\")\n      .addConnection(\"t3\", \"outerjoin\")\n      .addConnection(\"t4\", \"outerjoin\")\n      .addConnection(\"outerjoin\", \"multijoinSink\")\n      .setBatchInterval(\"5s\")\n      .build();\n\n    AppRequest<DataStreamsConfig> appRequest = new AppRequest<>(APP_ARTIFACT, etlConfig);\n    Id.Application appId = Id.Application.from(Id.Namespace.DEFAULT, \"JoinerApp\");\n    ApplicationManager appManager = deployApplication(appId, appRequest);\n\n    SparkManager sparkManager = appManager.getSparkManager(DataStreamsSparkLauncher.NAME);\n    sparkManager.start();\n    sparkManager.waitForStatus(true, 10, 1);\n\n    StructuredRecord joinRecordSamuel = StructuredRecord.builder(outSchema2)\n      .set(\"customer_id\", \"1\").set(\"customer_name\", \"samuel\")\n      .set(\"item_id\", \"11\").set(\"item_price\", 10000L).set(\"cust_id\", \"1\").set(\"cust_name\", \"samuel\")\n      .set(\"t_id\", \"1\").set(\"c_id\", \"1\").set(\"i_id\", \"11\").build();\n\n    StructuredRecord joinRecordJane = StructuredRecord.builder(outSchema2)\n      .set(\"customer_id\", \"3\").set(\"customer_name\", \"jane\")\n      .set(\"item_id\", \"22\").set(\"item_price\", 100L).set(\"cust_id\", \"3\").set(\"cust_name\", \"jane\")\n      .set(\"t_id\", \"2\").set(\"c_id\", \"3\").set(\"i_id\", \"22\").build();\n\n    StructuredRecord joinRecordPlane = StructuredRecord.builder(outSchema2)\n      .set(\"t_id\", \"3\").set(\"c_id\", \"4\").set(\"i_id\", \"33\").build();\n    final Set<StructuredRecord> expected = ImmutableSet.of(joinRecordSamuel, joinRecordJane, joinRecordPlane);\n\n    final DataSetManager<Table> outputManager = getDataset(outputName);\n    Tasks.waitFor(\n      true,\n      new Callable<Boolean>() {\n        @Override\n        public Boolean call() throws Exception {\n          outputManager.flush();\n          Set<StructuredRecord> outputRecords = new HashSet<>();\n          outputRecords.addAll(MockSink.readOutput(outputManager));\n          return expected.equals(outputRecords);\n        }\n      },\n      4,\n      TimeUnit.MINUTES);\n\n    sparkManager.stop();\n    sparkManager.waitForStatus(false, 10, 1);\n\n    validateMetric(appId, \"source1.records.out\", 3);\n    validateMetric(appId, \"source2.records.out\", 2);\n    validateMetric(appId, \"source3.records.out\", 3);\n    validateMetric(appId, \"t1.records.in\", 3);\n    validateMetric(appId, \"t1.records.out\", 3);\n    validateMetric(appId, \"t2.records.in\", 2);\n    validateMetric(appId, \"t2.records.out\", 2);\n    validateMetric(appId, \"t3.records.in\", 3);\n    validateMetric(appId, \"t3.records.out\", 3);\n    validateMetric(appId, \"t4.records.in\", 2);\n    validateMetric(appId, \"t4.records.out\", 2);\n    validateMetric(appId, \"innerjoin.records.in\", 5);\n    validateMetric(appId, \"innerjoin.records.out\", 2);\n    validateMetric(appId, \"outerjoin.records.in\", 5);\n    validateMetric(appId, \"outerjoin.records.out\", 3);\n    validateMetric(appId, \"multijoinSink.records.in\", 3);\n  }","commit_id":"3bb435add52bed85baf1f9f320c0d3d2ba3c6835","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testParallelAggregators() throws Exception {\n    String sink1Name = \"pAggOutput1\";\n    String sink2Name = \"pAggOutput2\";\n\n    Schema inputSchema = Schema.recordOf(\n      \"testRecord\",\n      Schema.Field.of(\"user\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"item\", Schema.of(Schema.Type.LONG))\n    );\n\n    List<StructuredRecord> input1 = ImmutableList.of(\n      StructuredRecord.builder(inputSchema).set(\"user\", \"samuel\").set(\"item\", 1L).build(),\n      StructuredRecord.builder(inputSchema).set(\"user\", \"samuel\").set(\"item\", 2L).build());\n\n    List<StructuredRecord> input2 = ImmutableList.of(\n      StructuredRecord.builder(inputSchema).set(\"user\", \"samuel\").set(\"item\", 3L).build(),\n      StructuredRecord.builder(inputSchema).set(\"user\", \"john\").set(\"item\", 4L).build(),\n      StructuredRecord.builder(inputSchema).set(\"user\", \"john\").set(\"item\", 3L).build());\n\n    /*\n       source1 --|--> agg1 --> sink1\n                 |\n       source2 --|--> agg2 --> sink2\n     */\n    DataStreamsConfig pipelineConfig = DataStreamsConfig.builder()\n      .setBatchInterval(\"5s\")\n      .addStage(new ETLStage(\"source1\", MockSource.getPlugin(inputSchema, input1)))\n      .addStage(new ETLStage(\"source2\", MockSource.getPlugin(inputSchema, input2)))\n      .addStage(new ETLStage(\"sink1\", MockSink.getPlugin(sink1Name)))\n      .addStage(new ETLStage(\"sink2\", MockSink.getPlugin(sink2Name)))\n      .addStage(new ETLStage(\"agg1\", FieldCountAggregator.getPlugin(\"user\", \"string\")))\n      .addStage(new ETLStage(\"agg2\", FieldCountAggregator.getPlugin(\"item\", \"long\")))\n      .addConnection(\"source1\", \"agg1\")\n      .addConnection(\"source1\", \"agg2\")\n      .addConnection(\"source2\", \"agg1\")\n      .addConnection(\"source2\", \"agg2\")\n      .addConnection(\"agg1\", \"sink1\")\n      .addConnection(\"agg2\", \"sink2\")\n      .build();\n\n    AppRequest<DataStreamsConfig> appRequest = new AppRequest<>(APP_ARTIFACT, pipelineConfig);\n    Id.Application appId = Id.Application.from(Id.Namespace.DEFAULT, \"ParallelAggApp\");\n    ApplicationManager appManager = deployApplication(appId, appRequest);\n\n    SparkManager sparkManager = appManager.getSparkManager(DataStreamsSparkLauncher.NAME);\n    sparkManager.start();\n    sparkManager.waitForStatus(true, 10, 1);\n\n    Schema outputSchema1 = Schema.recordOf(\n      \"user.count\",\n      Schema.Field.of(\"user\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"ct\", Schema.of(Schema.Type.LONG))\n    );\n    Schema outputSchema2 = Schema.recordOf(\n      \"item.count\",\n      Schema.Field.of(\"item\", Schema.of(Schema.Type.LONG)),\n      Schema.Field.of(\"ct\", Schema.of(Schema.Type.LONG))\n    );\n\n    // check output\n    final DataSetManager<Table> sinkManager1 = getDataset(sink1Name);\n    final Set<StructuredRecord> expected1 = ImmutableSet.of(\n      StructuredRecord.builder(outputSchema1).set(\"user\", \"all\").set(\"ct\", 5L).build(),\n      StructuredRecord.builder(outputSchema1).set(\"user\", \"samuel\").set(\"ct\", 3L).build(),\n      StructuredRecord.builder(outputSchema1).set(\"user\", \"john\").set(\"ct\", 2L).build());\n\n    Tasks.waitFor(\n      true,\n      new Callable<Boolean>() {\n        @Override\n        public Boolean call() throws Exception {\n          sinkManager1.flush();\n          Set<StructuredRecord> outputRecords = new HashSet<>();\n          outputRecords.addAll(MockSink.readOutput(sinkManager1));\n          return expected1.equals(outputRecords);\n        }\n      },\n      1,\n      TimeUnit.MINUTES);\n\n    final DataSetManager<Table> sinkManager2 = getDataset(sink2Name);\n    final Set<StructuredRecord> expected2 = ImmutableSet.of(\n      StructuredRecord.builder(outputSchema2).set(\"item\", 0L).set(\"ct\", 5L).build(),\n      StructuredRecord.builder(outputSchema2).set(\"item\", 1L).set(\"ct\", 1L).build(),\n      StructuredRecord.builder(outputSchema2).set(\"item\", 2L).set(\"ct\", 1L).build(),\n      StructuredRecord.builder(outputSchema2).set(\"item\", 3L).set(\"ct\", 2L).build(),\n      StructuredRecord.builder(outputSchema2).set(\"item\", 4L).set(\"ct\", 1L).build());\n\n    Tasks.waitFor(\n      true,\n      new Callable<Boolean>() {\n        @Override\n        public Boolean call() throws Exception {\n          sinkManager2.flush();\n          Set<StructuredRecord> outputRecords = new HashSet<>();\n          outputRecords.addAll(MockSink.readOutput(sinkManager2));\n          return expected2.equals(outputRecords);\n        }\n      },\n      1,\n      TimeUnit.MINUTES);\n\n    sparkManager.stop();\n    sparkManager.waitForStatus(false, 10, 1);\n  }","id":39855,"modified_method":"@Test\n  public void testParallelAggregators() throws Exception {\n    String sink1Name = \"pAggOutput1\";\n    String sink2Name = \"pAggOutput2\";\n\n    Schema inputSchema = Schema.recordOf(\n      \"testRecord\",\n      Schema.Field.of(\"user\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"item\", Schema.of(Schema.Type.LONG))\n    );\n\n    List<StructuredRecord> input1 = ImmutableList.of(\n      StructuredRecord.builder(inputSchema).set(\"user\", \"samuel\").set(\"item\", 1L).build(),\n      StructuredRecord.builder(inputSchema).set(\"user\", \"samuel\").set(\"item\", 2L).build());\n\n    List<StructuredRecord> input2 = ImmutableList.of(\n      StructuredRecord.builder(inputSchema).set(\"user\", \"samuel\").set(\"item\", 3L).build(),\n      StructuredRecord.builder(inputSchema).set(\"user\", \"john\").set(\"item\", 4L).build(),\n      StructuredRecord.builder(inputSchema).set(\"user\", \"john\").set(\"item\", 3L).build());\n\n    /*\n       source1 --|--> agg1 --> sink1\n                 |\n       source2 --|--> agg2 --> sink2\n     */\n    DataStreamsConfig pipelineConfig = DataStreamsConfig.builder()\n      .setBatchInterval(\"5s\")\n      .addStage(new ETLStage(\"source1\", MockSource.getPlugin(inputSchema, input1)))\n      .addStage(new ETLStage(\"source2\", MockSource.getPlugin(inputSchema, input2)))\n      .addStage(new ETLStage(\"sink1\", MockSink.getPlugin(sink1Name)))\n      .addStage(new ETLStage(\"sink2\", MockSink.getPlugin(sink2Name)))\n      .addStage(new ETLStage(\"agg1\", FieldCountAggregator.getPlugin(\"user\", \"string\")))\n      .addStage(new ETLStage(\"agg2\", FieldCountAggregator.getPlugin(\"item\", \"long\")))\n      .addConnection(\"source1\", \"agg1\")\n      .addConnection(\"source1\", \"agg2\")\n      .addConnection(\"source2\", \"agg1\")\n      .addConnection(\"source2\", \"agg2\")\n      .addConnection(\"agg1\", \"sink1\")\n      .addConnection(\"agg2\", \"sink2\")\n      .build();\n\n    AppRequest<DataStreamsConfig> appRequest = new AppRequest<>(APP_ARTIFACT, pipelineConfig);\n    Id.Application appId = Id.Application.from(Id.Namespace.DEFAULT, \"ParallelAggApp\");\n    ApplicationManager appManager = deployApplication(appId, appRequest);\n\n    SparkManager sparkManager = appManager.getSparkManager(DataStreamsSparkLauncher.NAME);\n    sparkManager.start();\n    sparkManager.waitForStatus(true, 10, 1);\n\n    Schema outputSchema1 = Schema.recordOf(\n      \"user.count\",\n      Schema.Field.of(\"user\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"ct\", Schema.of(Schema.Type.LONG))\n    );\n    Schema outputSchema2 = Schema.recordOf(\n      \"item.count\",\n      Schema.Field.of(\"item\", Schema.of(Schema.Type.LONG)),\n      Schema.Field.of(\"ct\", Schema.of(Schema.Type.LONG))\n    );\n\n    // check output\n    final DataSetManager<Table> sinkManager1 = getDataset(sink1Name);\n    final Set<StructuredRecord> expected1 = ImmutableSet.of(\n      StructuredRecord.builder(outputSchema1).set(\"user\", \"all\").set(\"ct\", 5L).build(),\n      StructuredRecord.builder(outputSchema1).set(\"user\", \"samuel\").set(\"ct\", 3L).build(),\n      StructuredRecord.builder(outputSchema1).set(\"user\", \"john\").set(\"ct\", 2L).build());\n\n    Tasks.waitFor(\n      true,\n      new Callable<Boolean>() {\n        @Override\n        public Boolean call() throws Exception {\n          sinkManager1.flush();\n          Set<StructuredRecord> outputRecords = new HashSet<>();\n          outputRecords.addAll(MockSink.readOutput(sinkManager1));\n          return expected1.equals(outputRecords);\n        }\n      },\n      1,\n      TimeUnit.MINUTES);\n\n    final DataSetManager<Table> sinkManager2 = getDataset(sink2Name);\n    final Set<StructuredRecord> expected2 = ImmutableSet.of(\n      StructuredRecord.builder(outputSchema2).set(\"item\", 0L).set(\"ct\", 5L).build(),\n      StructuredRecord.builder(outputSchema2).set(\"item\", 1L).set(\"ct\", 1L).build(),\n      StructuredRecord.builder(outputSchema2).set(\"item\", 2L).set(\"ct\", 1L).build(),\n      StructuredRecord.builder(outputSchema2).set(\"item\", 3L).set(\"ct\", 2L).build(),\n      StructuredRecord.builder(outputSchema2).set(\"item\", 4L).set(\"ct\", 1L).build());\n\n    Tasks.waitFor(\n      true,\n      new Callable<Boolean>() {\n        @Override\n        public Boolean call() throws Exception {\n          sinkManager2.flush();\n          Set<StructuredRecord> outputRecords = new HashSet<>();\n          outputRecords.addAll(MockSink.readOutput(sinkManager2));\n          return expected2.equals(outputRecords);\n        }\n      },\n      1,\n      TimeUnit.MINUTES);\n\n    sparkManager.stop();\n    sparkManager.waitForStatus(false, 10, 1);\n\n    validateMetric(appId, \"source1.records.out\", 2);\n    validateMetric(appId, \"source2.records.out\", 3);\n    validateMetric(appId, \"agg1.records.in\", 5);\n    validateMetric(appId, \"agg1.records.out\", 3);\n    validateMetric(appId, \"agg2.records.in\", 5);\n    validateMetric(appId, \"agg2.records.out\", 5);\n    validateMetric(appId, \"sink1.records.in\", 3);\n    validateMetric(appId, \"sink2.records.in\", 5);\n  }","commit_id":"3bb435add52bed85baf1f9f320c0d3d2ba3c6835","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testTransformCompute() throws Exception {\n    Schema schema = Schema.recordOf(\n      \"test\",\n      Schema.Field.of(\"id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"name\", Schema.of(Schema.Type.STRING))\n    );\n    List<StructuredRecord> input = new ArrayList<>();\n    StructuredRecord samuelRecord = StructuredRecord.builder(schema).set(\"id\", \"123\").set(\"name\", \"samuel\").build();\n    StructuredRecord jacksonRecord = StructuredRecord.builder(schema).set(\"id\", \"456\").set(\"name\", \"jackson\").build();\n    StructuredRecord dwayneRecord = StructuredRecord.builder(schema).set(\"id\", \"789\").set(\"name\", \"dwayne\").build();\n    StructuredRecord johnsonRecord = StructuredRecord.builder(schema).set(\"id\", \"0\").set(\"name\", \"johnson\").build();\n    input.add(samuelRecord);\n    input.add(jacksonRecord);\n    input.add(dwayneRecord);\n    input.add(johnsonRecord);\n\n    DataStreamsConfig etlConfig = DataStreamsConfig.builder()\n      .addStage(new ETLStage(\"source\", MockSource.getPlugin(schema, input)))\n      .addStage(new ETLStage(\"sink\", MockSink.getPlugin(\"output\")))\n      .addStage(new ETLStage(\"jacksonFilter\", StringValueFilterTransform.getPlugin(\"name\", \"jackson\")))\n      .addStage(new ETLStage(\"dwayneFilter\", StringValueFilterCompute.getPlugin(\"name\", \"dwayne\")))\n      .addConnection(\"source\", \"jacksonFilter\")\n      .addConnection(\"jacksonFilter\", \"dwayneFilter\")\n      .addConnection(\"dwayneFilter\", \"sink\")\n      .setBatchInterval(\"1s\")\n      .build();\n\n    Id.Application appId = Id.Application.from(Id.Namespace.DEFAULT, \"simpleApp\");\n    AppRequest<DataStreamsConfig> appRequest = new AppRequest<>(APP_ARTIFACT, etlConfig);\n    ApplicationManager appManager = deployApplication(appId, appRequest);\n\n    SparkManager sparkManager = appManager.getSparkManager(DataStreamsSparkLauncher.NAME);\n    sparkManager.start();\n    sparkManager.waitForStatus(true, 10, 1);\n\n    final DataSetManager<Table> outputManager = getDataset(\"output\");\n    final Set<StructuredRecord> expected = new HashSet<>();\n    expected.add(samuelRecord);\n    expected.add(johnsonRecord);\n    Tasks.waitFor(\n      true,\n      new Callable<Boolean>() {\n        @Override\n        public Boolean call() throws Exception {\n          outputManager.flush();\n          Set<StructuredRecord> outputRecords = new HashSet<>();\n          outputRecords.addAll(MockSink.readOutput(outputManager));\n          return expected.equals(outputRecords);\n        }\n      },\n      1,\n      TimeUnit.MINUTES);\n\n    sparkManager.stop();\n    sparkManager.waitForStatus(false, 10, 1);\n  }","id":39856,"modified_method":"@Test\n  public void testTransformCompute() throws Exception {\n    Schema schema = Schema.recordOf(\n      \"test\",\n      Schema.Field.of(\"id\", Schema.of(Schema.Type.STRING)),\n      Schema.Field.of(\"name\", Schema.of(Schema.Type.STRING))\n    );\n    List<StructuredRecord> input = new ArrayList<>();\n    StructuredRecord samuelRecord = StructuredRecord.builder(schema).set(\"id\", \"123\").set(\"name\", \"samuel\").build();\n    StructuredRecord jacksonRecord = StructuredRecord.builder(schema).set(\"id\", \"456\").set(\"name\", \"jackson\").build();\n    StructuredRecord dwayneRecord = StructuredRecord.builder(schema).set(\"id\", \"789\").set(\"name\", \"dwayne\").build();\n    StructuredRecord johnsonRecord = StructuredRecord.builder(schema).set(\"id\", \"0\").set(\"name\", \"johnson\").build();\n    input.add(samuelRecord);\n    input.add(jacksonRecord);\n    input.add(dwayneRecord);\n    input.add(johnsonRecord);\n\n    DataStreamsConfig etlConfig = DataStreamsConfig.builder()\n      .addStage(new ETLStage(\"source\", MockSource.getPlugin(schema, input)))\n      .addStage(new ETLStage(\"sink\", MockSink.getPlugin(\"output\")))\n      .addStage(new ETLStage(\"jacksonFilter\", StringValueFilterTransform.getPlugin(\"name\", \"jackson\")))\n      .addStage(new ETLStage(\"dwayneFilter\", StringValueFilterCompute.getPlugin(\"name\", \"dwayne\")))\n      .addConnection(\"source\", \"jacksonFilter\")\n      .addConnection(\"jacksonFilter\", \"dwayneFilter\")\n      .addConnection(\"dwayneFilter\", \"sink\")\n      .setBatchInterval(\"1s\")\n      .build();\n\n    Id.Application appId = Id.Application.from(Id.Namespace.DEFAULT, \"simpleApp\");\n    AppRequest<DataStreamsConfig> appRequest = new AppRequest<>(APP_ARTIFACT, etlConfig);\n    ApplicationManager appManager = deployApplication(appId, appRequest);\n\n    SparkManager sparkManager = appManager.getSparkManager(DataStreamsSparkLauncher.NAME);\n    sparkManager.start();\n    sparkManager.waitForStatus(true, 10, 1);\n\n    final DataSetManager<Table> outputManager = getDataset(\"output\");\n    final Set<StructuredRecord> expected = new HashSet<>();\n    expected.add(samuelRecord);\n    expected.add(johnsonRecord);\n    Tasks.waitFor(\n      true,\n      new Callable<Boolean>() {\n        @Override\n        public Boolean call() throws Exception {\n          outputManager.flush();\n          Set<StructuredRecord> outputRecords = new HashSet<>();\n          outputRecords.addAll(MockSink.readOutput(outputManager));\n          return expected.equals(outputRecords);\n        }\n      },\n      1,\n      TimeUnit.MINUTES);\n\n    sparkManager.stop();\n    sparkManager.waitForStatus(false, 10, 1);\n\n    validateMetric(appId, \"source.records.out\", 4);\n    validateMetric(appId, \"jacksonFilter.records.in\", 4);\n    validateMetric(appId, \"jacksonFilter.records.out\", 3);\n    validateMetric(appId, \"dwayneFilter.records.in\", 3);\n    validateMetric(appId, \"dwayneFilter.records.out\", 2);\n    validateMetric(appId, \"sink.records.in\", 2);\n  }","commit_id":"3bb435add52bed85baf1f9f320c0d3d2ba3c6835","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void store(String stageName, SparkSink<T> sink) throws Exception {\n    SparkExecutionPluginContext sparkPluginContext =\n      new BasicSparkExecutionPluginContext(sec, jsc, datasetContext, stageName);\n\n    // TODO:(Hydra-364) figure out how to do this in a better way...\n    long recordsIn = rdd.cache().count();\n    StageMetrics stageMetrics = new DefaultStageMetrics(sec.getMetrics(), stageName);\n    stageMetrics.gauge(\"records.in\", recordsIn);\n\n    sink.run(sparkPluginContext, rdd);\n  }","id":39857,"modified_method":"@Override\n  public void store(String stageName, SparkSink<T> sink) throws Exception {\n    SparkExecutionPluginContext sparkPluginContext =\n      new BasicSparkExecutionPluginContext(sec, jsc, datasetContext, stageName);\n\n    JavaRDD<T> countedRDD = rdd.map(new CountingFunction<T>(stageName, sec.getMetrics(), \"records.in\")).cache();\n    sink.run(sparkPluginContext, countedRDD);\n  }","commit_id":"3bb435add52bed85baf1f9f320c0d3d2ba3c6835","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public <U> SparkCollection<U> compute(String stageName, SparkCompute<T, U> compute) throws Exception {\n    SparkExecutionPluginContext sparkPluginContext =\n      new BasicSparkExecutionPluginContext(sec, jsc, datasetContext, stageName);\n\n    // TODO:(Hydra-364) figure out how to do this in a better way...\n    long recordsIn = rdd.cache().count();\n    StageMetrics stageMetrics = new DefaultStageMetrics(sec.getMetrics(), stageName);\n    stageMetrics.gauge(\"records.in\", recordsIn);\n\n    JavaRDD<U> computedRDD = compute.transform(sparkPluginContext, rdd).cache();\n    long recordsOut = computedRDD.count();\n    stageMetrics.gauge(\"records.out\", recordsOut);\n    return wrap(computedRDD);\n  }","id":39858,"modified_method":"@Override\n  public <U> SparkCollection<U> compute(String stageName, SparkCompute<T, U> compute) throws Exception {\n    SparkExecutionPluginContext sparkPluginContext =\n      new BasicSparkExecutionPluginContext(sec, jsc, datasetContext, stageName);\n\n    JavaRDD<T> countedInput = rdd.map(new CountingFunction<T>(stageName, sec.getMetrics(), \"records.in\")).cache();\n\n    return wrap(compute.transform(sparkPluginContext, countedInput)\n                  .map(new CountingFunction<U>(stageName, sec.getMetrics(), \"records.out\")));\n  }","commit_id":"3bb435add52bed85baf1f9f320c0d3d2ba3c6835","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public SparkCollection<T> window(Windower windower) {\n    throw new UnsupportedOperationException(\"Windowing is not supported on RDDs.\");\n  }","id":39859,"modified_method":"@Override\n  public SparkCollection<T> window(String stageName, Windower windower) {\n    throw new UnsupportedOperationException(\"Windowing is not supported on RDDs.\");\n  }","commit_id":"3bb435add52bed85baf1f9f320c0d3d2ba3c6835","url":"https://github.com/caskdata/cdap"},{"original_method":"public void runPipeline(PipelinePhase pipelinePhase, String sourcePluginType,\n                          JavaSparkExecutionContext sec,\n                          Map<String, Integer> stagePartitions) throws Exception {\n\n    MacroEvaluator macroEvaluator =\n      new DefaultMacroEvaluator(sec.getWorkflowToken(), sec.getRuntimeArguments(), sec.getLogicalStartTime(), sec,\n                                sec.getNamespace());\n    Map<String, SparkCollection<Object>> stageDataCollections = new HashMap<>();\n\n    // should never happen, but removes warning\n    if (pipelinePhase.getDag() == null) {\n      throw new IllegalStateException(\"Pipeline phase has no connections.\");\n    }\n\n    for (String stageName : pipelinePhase.getDag().getTopologicalOrder()) {\n      StageInfo stageInfo = pipelinePhase.getStage(stageName);\n      String pluginType = stageInfo.getPluginType();\n\n      SparkCollection<Object> stageData = null;\n\n      Map<String, SparkCollection<Object>> inputDataCollections = new HashMap<>();\n      for (String inputStageName : stageInfo.getInputs()) {\n        inputDataCollections.put(inputStageName, stageDataCollections.get(inputStageName));\n      }\n\n      // if this stage has multiple inputs, and is not a joiner plugin,\n      // initialize the stageRDD as the union of all input RDDs.\n      if (!inputDataCollections.isEmpty()) {\n        Iterator<SparkCollection<Object>> inputCollectionIter = inputDataCollections.values().iterator();\n        stageData = inputCollectionIter.next();\n        // don't union if we're joining\n        while (!BatchJoiner.PLUGIN_TYPE.equals(pluginType) && inputCollectionIter.hasNext()) {\n          stageData = stageData.union(inputCollectionIter.next());\n        }\n      }\n\n      PluginFunctionContext pluginFunctionContext = new PluginFunctionContext(stageName, sec, pipelinePhase);\n      if (stageData == null) {\n\n        // this if-else is nested inside the stageRDD null check to avoid warnings about stageRDD possibly being\n        // null in the other else-if conditions\n        if (sourcePluginType.equals(pluginType)) {\n          stageData = getSource(stageName, pluginFunctionContext);\n        } else {\n          throw new IllegalStateException(String.format(\"Stage '%s' has no input and is not a source.\", stageName));\n        }\n\n      } else if (BatchSink.PLUGIN_TYPE.equals(pluginType)) {\n\n        stageData.store(stageName, new BatchSinkFunction(pluginFunctionContext));\n\n      } else if (Transform.PLUGIN_TYPE.equals(pluginType)) {\n\n        stageData = stageData.flatMap(new TransformFunction(pluginFunctionContext));\n\n      } else if (SparkCompute.PLUGIN_TYPE.equals(pluginType)) {\n\n        SparkCompute<Object, Object> sparkCompute =\n          sec.getPluginContext().newPluginInstance(stageName, macroEvaluator);\n        stageData = stageData.compute(stageName, sparkCompute);\n\n      } else if (SparkSink.PLUGIN_TYPE.equals(pluginType)) {\n\n        SparkSink<Object> sparkSink = sec.getPluginContext().newPluginInstance(stageName, macroEvaluator);\n        stageData.store(stageName, sparkSink);\n\n      } else if (BatchAggregator.PLUGIN_TYPE.equals(pluginType)) {\n\n        PairFlatMapFunction<Object, Object, Object> groupByFunction =\n          new AggregatorGroupByFunction(pluginFunctionContext);\n        FlatMapFunction<Tuple2<Object, Iterable<Object>>, Object> aggregateFunction =\n          new AggregatorAggregateFunction(pluginFunctionContext);\n\n        Integer partitions = stagePartitions.get(stageName);\n        SparkPairCollection<Object, Object> keyedCollection = stageData.flatMapToPair(groupByFunction);\n\n        SparkPairCollection<Object, Iterable<Object>> groupedCollection = partitions == null ?\n          keyedCollection.groupByKey() : keyedCollection.groupByKey(partitions);\n        stageData = groupedCollection.flatMap(aggregateFunction);\n\n      } else if (BatchJoiner.PLUGIN_TYPE.equals(pluginType)) {\n\n        BatchJoiner<Object, Object, Object> joiner =\n          sec.getPluginContext().newPluginInstance(stageName, macroEvaluator);\n        BatchJoinerRuntimeContext joinerRuntimeContext = pluginFunctionContext.createJoinerRuntimeContext();\n        joiner.initialize(joinerRuntimeContext);\n\n        Map<String, SparkPairCollection<Object, Object>> preJoinStreams = new HashMap<>();\n        for (Map.Entry<String, SparkCollection<Object>> inputStreamEntry : inputDataCollections.entrySet()) {\n          String inputStage = inputStreamEntry.getKey();\n          SparkCollection<Object> inputStream = inputStreamEntry.getValue();\n          preJoinStreams.put(inputStage,\n                             inputStream.flatMapToPair(new JoinOnFunction(pluginFunctionContext, inputStage)));\n        }\n\n        Set<String> remainingInputs = new HashSet<>();\n        remainingInputs.addAll(inputDataCollections.keySet());\n\n        Integer numPartitions = stagePartitions.get(stageName);\n\n        SparkPairCollection<Object, List<JoinElement<Object>>> joinedInputs = null;\n        // inner join on required inputs\n        for (final String inputStageName : joiner.getJoinConfig().getRequiredInputs()) {\n          SparkPairCollection<Object, Object> preJoinCollection = preJoinStreams.get(inputStageName);\n\n          if (joinedInputs == null) {\n            joinedInputs = preJoinCollection.mapValues(new InitialJoinFunction(inputStageName));\n          } else {\n            JoinFlattenFunction joinFlattenFunction = new JoinFlattenFunction(inputStageName);\n            joinedInputs = numPartitions == null ?\n              joinedInputs.join(preJoinCollection).mapValues(joinFlattenFunction) :\n              joinedInputs.join(preJoinCollection, numPartitions).mapValues(joinFlattenFunction);\n          }\n          remainingInputs.remove(inputStageName);\n        }\n\n        // outer join on non-required inputs\n        boolean isFullOuter = joinedInputs == null;\n        for (final String inputStageName : remainingInputs) {\n          SparkPairCollection<Object, Object> preJoinStream = preJoinStreams.get(inputStageName);\n\n          if (joinedInputs == null) {\n            joinedInputs = preJoinStream.mapValues(new InitialJoinFunction(inputStageName));\n          } else {\n            if (isFullOuter) {\n              OuterJoinFlattenFunction outerJoinFlattenFunction = new OuterJoinFlattenFunction(inputStageName);\n\n              joinedInputs = numPartitions == null ?\n                joinedInputs.fullOuterJoin(preJoinStream).mapValues(outerJoinFlattenFunction) :\n                joinedInputs.fullOuterJoin(preJoinStream, numPartitions).mapValues(outerJoinFlattenFunction);\n            } else {\n              LeftJoinFlattenFunction joinFlattenFunction = new LeftJoinFlattenFunction(inputStageName);\n\n              joinedInputs = numPartitions == null ?\n                joinedInputs.leftOuterJoin(preJoinStream).mapValues(joinFlattenFunction) :\n                joinedInputs.leftOuterJoin(preJoinStream, numPartitions).mapValues(joinFlattenFunction);\n            }\n          }\n        }\n\n        // should never happen, but removes warnings\n        if (joinedInputs == null) {\n          throw new IllegalStateException(\"There are no inputs into join stage \" + stageName);\n        }\n\n        stageData = joinedInputs.flatMap(new JoinMergeFunction(pluginFunctionContext)).cache();\n\n      } else if (Windower.PLUGIN_TYPE.equals(pluginType)) {\n\n        Windower windower = sec.getPluginContext().newPluginInstance(stageName, macroEvaluator);\n        stageData = stageData.window(windower);\n\n      } else {\n        throw new IllegalStateException(String.format(\"Stage %s is of unsupported plugin type %s.\",\n                                                      stageName, pluginType));\n      }\n\n      if (shouldCache(pipelinePhase, stageInfo)) {\n        stageData = stageData.cache();\n      }\n      stageDataCollections.put(stageName, stageData);\n    }\n  }","id":39860,"modified_method":"public void runPipeline(PipelinePhase pipelinePhase, String sourcePluginType,\n                          JavaSparkExecutionContext sec,\n                          Map<String, Integer> stagePartitions) throws Exception {\n\n    MacroEvaluator macroEvaluator =\n      new DefaultMacroEvaluator(sec.getWorkflowToken(), sec.getRuntimeArguments(), sec.getLogicalStartTime(), sec,\n                                sec.getNamespace());\n    Map<String, SparkCollection<Object>> stageDataCollections = new HashMap<>();\n\n    // should never happen, but removes warning\n    if (pipelinePhase.getDag() == null) {\n      throw new IllegalStateException(\"Pipeline phase has no connections.\");\n    }\n\n    for (String stageName : pipelinePhase.getDag().getTopologicalOrder()) {\n      StageInfo stageInfo = pipelinePhase.getStage(stageName);\n      String pluginType = stageInfo.getPluginType();\n\n      SparkCollection<Object> stageData = null;\n\n      Map<String, SparkCollection<Object>> inputDataCollections = new HashMap<>();\n      for (String inputStageName : stageInfo.getInputs()) {\n        inputDataCollections.put(inputStageName, stageDataCollections.get(inputStageName));\n      }\n\n      // if this stage has multiple inputs, and is not a joiner plugin,\n      // initialize the stageRDD as the union of all input RDDs.\n      if (!inputDataCollections.isEmpty()) {\n        Iterator<SparkCollection<Object>> inputCollectionIter = inputDataCollections.values().iterator();\n        stageData = inputCollectionIter.next();\n        // don't union if we're joining\n        while (!BatchJoiner.PLUGIN_TYPE.equals(pluginType) && inputCollectionIter.hasNext()) {\n          stageData = stageData.union(inputCollectionIter.next());\n        }\n      }\n\n      PluginFunctionContext pluginFunctionContext = new PluginFunctionContext(stageName, sec, pipelinePhase);\n      if (stageData == null) {\n\n        // this if-else is nested inside the stageRDD null check to avoid warnings about stageRDD possibly being\n        // null in the other else-if conditions\n        if (sourcePluginType.equals(pluginType)) {\n          stageData = getSource(stageName, pluginFunctionContext);\n        } else {\n          throw new IllegalStateException(String.format(\"Stage '%s' has no input and is not a source.\", stageName));\n        }\n\n      } else if (BatchSink.PLUGIN_TYPE.equals(pluginType)) {\n\n        stageData.store(stageName, new BatchSinkFunction(pluginFunctionContext));\n\n      } else if (Transform.PLUGIN_TYPE.equals(pluginType)) {\n\n        stageData = stageData.flatMap(new TransformFunction(pluginFunctionContext));\n\n      } else if (SparkCompute.PLUGIN_TYPE.equals(pluginType)) {\n\n        SparkCompute<Object, Object> sparkCompute =\n          sec.getPluginContext().newPluginInstance(stageName, macroEvaluator);\n        stageData = stageData.compute(stageName, sparkCompute);\n\n      } else if (SparkSink.PLUGIN_TYPE.equals(pluginType)) {\n\n        SparkSink<Object> sparkSink = sec.getPluginContext().newPluginInstance(stageName, macroEvaluator);\n        stageData.store(stageName, sparkSink);\n\n      } else if (BatchAggregator.PLUGIN_TYPE.equals(pluginType)) {\n\n        PairFlatMapFunction<Object, Object, Object> groupByFunction =\n          new AggregatorGroupByFunction(pluginFunctionContext);\n        FlatMapFunction<Tuple2<Object, Iterable<Object>>, Object> aggregateFunction =\n          new AggregatorAggregateFunction(pluginFunctionContext);\n\n        Integer partitions = stagePartitions.get(stageName);\n        SparkPairCollection<Object, Object> keyedCollection = stageData.flatMapToPair(groupByFunction);\n\n        SparkPairCollection<Object, Iterable<Object>> groupedCollection = partitions == null ?\n          keyedCollection.groupByKey() : keyedCollection.groupByKey(partitions);\n        stageData = groupedCollection.flatMap(aggregateFunction);\n\n      } else if (BatchJoiner.PLUGIN_TYPE.equals(pluginType)) {\n\n        BatchJoiner<Object, Object, Object> joiner =\n          sec.getPluginContext().newPluginInstance(stageName, macroEvaluator);\n        BatchJoinerRuntimeContext joinerRuntimeContext = pluginFunctionContext.createJoinerRuntimeContext();\n        joiner.initialize(joinerRuntimeContext);\n\n        Map<String, SparkPairCollection<Object, Object>> preJoinStreams = new HashMap<>();\n        for (Map.Entry<String, SparkCollection<Object>> inputStreamEntry : inputDataCollections.entrySet()) {\n          String inputStage = inputStreamEntry.getKey();\n          SparkCollection<Object> inputStream = inputStreamEntry.getValue();\n          preJoinStreams.put(inputStage,\n                             inputStream.flatMapToPair(new JoinOnFunction(pluginFunctionContext, inputStage)));\n        }\n\n        Set<String> remainingInputs = new HashSet<>();\n        remainingInputs.addAll(inputDataCollections.keySet());\n\n        Integer numPartitions = stagePartitions.get(stageName);\n\n        SparkPairCollection<Object, List<JoinElement<Object>>> joinedInputs = null;\n        // inner join on required inputs\n        for (final String inputStageName : joiner.getJoinConfig().getRequiredInputs()) {\n          SparkPairCollection<Object, Object> preJoinCollection = preJoinStreams.get(inputStageName);\n\n          if (joinedInputs == null) {\n            joinedInputs = preJoinCollection.mapValues(new InitialJoinFunction(inputStageName));\n          } else {\n            JoinFlattenFunction joinFlattenFunction = new JoinFlattenFunction(inputStageName);\n            joinedInputs = numPartitions == null ?\n              joinedInputs.join(preJoinCollection).mapValues(joinFlattenFunction) :\n              joinedInputs.join(preJoinCollection, numPartitions).mapValues(joinFlattenFunction);\n          }\n          remainingInputs.remove(inputStageName);\n        }\n\n        // outer join on non-required inputs\n        boolean isFullOuter = joinedInputs == null;\n        for (final String inputStageName : remainingInputs) {\n          SparkPairCollection<Object, Object> preJoinStream = preJoinStreams.get(inputStageName);\n\n          if (joinedInputs == null) {\n            joinedInputs = preJoinStream.mapValues(new InitialJoinFunction(inputStageName));\n          } else {\n            if (isFullOuter) {\n              OuterJoinFlattenFunction outerJoinFlattenFunction = new OuterJoinFlattenFunction(inputStageName);\n\n              joinedInputs = numPartitions == null ?\n                joinedInputs.fullOuterJoin(preJoinStream).mapValues(outerJoinFlattenFunction) :\n                joinedInputs.fullOuterJoin(preJoinStream, numPartitions).mapValues(outerJoinFlattenFunction);\n            } else {\n              LeftJoinFlattenFunction joinFlattenFunction = new LeftJoinFlattenFunction(inputStageName);\n\n              joinedInputs = numPartitions == null ?\n                joinedInputs.leftOuterJoin(preJoinStream).mapValues(joinFlattenFunction) :\n                joinedInputs.leftOuterJoin(preJoinStream, numPartitions).mapValues(joinFlattenFunction);\n            }\n          }\n        }\n\n        // should never happen, but removes warnings\n        if (joinedInputs == null) {\n          throw new IllegalStateException(\"There are no inputs into join stage \" + stageName);\n        }\n\n        stageData = joinedInputs.flatMap(new JoinMergeFunction(pluginFunctionContext)).cache();\n\n      } else if (Windower.PLUGIN_TYPE.equals(pluginType)) {\n\n        Windower windower = sec.getPluginContext().newPluginInstance(stageName, macroEvaluator);\n        stageData = stageData.window(stageName, windower);\n\n      } else {\n        throw new IllegalStateException(String.format(\"Stage %s is of unsupported plugin type %s.\",\n                                                      stageName, pluginType));\n      }\n\n      if (shouldCache(pipelinePhase, stageInfo)) {\n        stageData = stageData.cache();\n      }\n      stageDataCollections.put(stageName, stageData);\n    }\n  }","commit_id":"3bb435add52bed85baf1f9f320c0d3d2ba3c6835","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  protected SparkCollection<Object> getSource(String stageName,\n                                              PluginFunctionContext pluginFunctionContext) throws Exception {\n    StreamingSource<Object> source = sec.getPluginContext().newPluginInstance(stageName);\n    StreamingContext context = new DefaultStreamingContext(stageName, sec, streamingContext);\n    return new DStreamCollection<>(sec, sparkContext, source.getStream(context));\n  }","id":39861,"modified_method":"@Override\n  protected SparkCollection<Object> getSource(final String stageName,\n                                              PluginFunctionContext pluginFunctionContext) throws Exception {\n    StreamingSource<Object> source = sec.getPluginContext().newPluginInstance(stageName);\n    StreamingContext context = new DefaultStreamingContext(stageName, sec, streamingContext);\n    return new DStreamCollection<>(sec, sparkContext, source.getStream(context)\n      .transform(new Function<JavaRDD<Object>, JavaRDD<Object>>() {\n        @Override\n        public JavaRDD<Object> call(JavaRDD<Object> input) throws Exception {\n          return input.map(new CountingFunction<>(stageName, sec.getMetrics(), \"records.out\"));\n        }\n      }));\n  }","commit_id":"3bb435add52bed85baf1f9f320c0d3d2ba3c6835","url":"https://github.com/caskdata/cdap"},{"original_method":"public Result execute(Result result, int nr, Repository rep, Job parentJob)\n\t{\n\t\tLogWriter log = LogWriter.getInstance();\n\n\t\tFile masterZipfile=null;\n\t\t\n\t\t// Send an e-mail...\n\t\t// create some properties and get the default Session\n\t\tProperties props = new Properties();\n\t\tprops.put(\"mail.smtp.host\", StringUtil.environmentSubstitute(server));\n\t\tboolean debug = log.getLogLevel()>=LogWriter.LOG_LEVEL_DEBUG;\n\t\t\n\t\tif (debug) props.put(\"mail.debug\", \"true\");\n        \n        Authenticator authenticator = null;\n        \n        if (usingAuthentication)\n        {\n            authenticator = new Authenticator()\n            {\n                protected PasswordAuthentication getPasswordAuthentication()\n                {\n                    return new PasswordAuthentication(\n                                StringUtil.environmentSubstitute(Const.NVL(authenticationUser, \"\")), \n                                StringUtil.environmentSubstitute(Const.NVL(authenticationPassword, \"\"))\n                            );\n                }\n            };\n        }\n\n\t\tSession session = Session.getInstance(props, authenticator);\n\t\tsession.setDebug(debug);\n\t\t\n\t\ttry \n\t\t{\n\t\t\t// create a message\n\t\t    Message msg = new MimeMessage(session);\n\t\t    msg.setFrom(new InternetAddress(StringUtil.environmentSubstitute(replyAddress)));\n            \n            // Split the mail-address: space separated\n            String destinations[] = StringUtil.environmentSubstitute(destination).split(\" \");\n\t\t    InternetAddress[] address = new InternetAddress[destinations.length];\n            for (int i=0;i<destinations.length;i++) address[i] = new InternetAddress(destinations[i]);\n            \n\t\t    msg.setRecipients(Message.RecipientType.TO, address);\n\t\t    msg.setSubject(StringUtil.environmentSubstitute(subject));\n\t\t    msg.setSentDate(new Date());\n\t\t    StringBuffer messageText = new StringBuffer();\n\n\t\t    if (comment!=null)\n\t\t    {\n\t\t        messageText.append(StringUtil.environmentSubstitute(comment)).append(Const.CR).append(Const.CR);\n\t\t    }\n\n\t        messageText.append(\"Job:\").append(Const.CR);\n\t        messageText.append(\"-----\").append(Const.CR);\n\t        messageText.append(\"Name       : \").append(parentJob.getJobMeta().getName()).append(Const.CR);\n\t        messageText.append(\"Directory  : \").append(parentJob.getJobMeta().getDirectory()).append(Const.CR);\n\t        messageText.append(\"JobEntry   : \").append(getName()).append(Const.CR);\n\t        messageText.append(Const.CR);\n\n\t\t    if (includeDate) \n\t\t    {\n\t\t        Value date = new Value(\"date\", new Date());\n\t\t        messageText.append(\"Message date: \").append(date.toString()).append(Const.CR).append(Const.CR);\n\t\t    }\n\t\t    if (result!=null)\n\t\t    {\n\t\t        messageText.append(\"Previous result:\").append(Const.CR);\n\t\t        messageText.append(\"-----------------\").append(Const.CR);\n\t\t        messageText.append(\"Job entry nr         : \").append(result.getEntryNr()).append(Const.CR);\n\t\t\t    messageText.append(\"Errors               : \").append(result.getNrErrors()).append(Const.CR);\n\t\t\t    messageText.append(\"Lines read           : \").append(result.getNrLinesRead()).append(Const.CR);\n\t\t\t    messageText.append(\"Lines written        : \").append(result.getNrLinesWritten()).append(Const.CR);\n\t\t\t    messageText.append(\"Lines input          : \").append(result.getNrLinesInput()).append(Const.CR);\n\t\t\t    messageText.append(\"Lines output         : \").append(result.getNrLinesOutput()).append(Const.CR);\n\t\t\t    messageText.append(\"Lines updated        : \").append(result.getNrLinesUpdated()).append(Const.CR);\n\t\t\t    messageText.append(\"Script exit status   : \").append(result.getExitStatus()).append(Const.CR);\n\t\t\t    messageText.append(\"Result               : \").append(result.getResult()).append(Const.CR);\n\t\t\t    messageText.append(Const.CR);\n\t\t    }\n\n\t\t    if (!Const.isEmpty(StringUtil.environmentSubstitute(contactPerson)) || !Const.isEmpty(StringUtil.environmentSubstitute(contactPhone)) )\n\t\t    {\n\t\t        messageText.append(\"Contact information :\").append(Const.CR);\n\t\t        messageText.append(\"---------------------\").append(Const.CR);\n\t\t        messageText.append(\"Person to contact : \").append(StringUtil.environmentSubstitute(contactPerson)).append(Const.CR);\n\t\t        messageText.append(\"Telephone number  : \").append(StringUtil.environmentSubstitute(contactPhone)).append(Const.CR);\n\t\t\t    messageText.append(Const.CR);\n\t\t    }\n\t\t    \n\t\t    // Include the path to this job entry...\n\t\t    JobTracker jobTracker = parentJob.getJobTracker();\n\t\t    if (jobTracker!=null)\n\t\t    {\n\t\t        messageText.append(\"Path to this job entry:\").append(Const.CR);\n\t\t        messageText.append(\"------------------------\").append(Const.CR);\n                \n                addBacktracking(jobTracker, messageText);\n\t\t    }\n\t\t    \t\t    \n\t\t    Multipart parts = new MimeMultipart();\n\t\t\tMimeBodyPart part1 = new MimeBodyPart(); // put the text in the\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// 1st part\n\t\t\tpart1.setText(messageText.toString());\n\t\t\tparts.addBodyPart(part1);\n\t\t\tif (includingFiles && result != null)\n\t\t    {\n\t\t\t\tList resultFiles = result.getResultFiles();\n\t\t\t\tif (resultFiles!=null && resultFiles.size() > 0) \n\t\t\t\t{\n\t\t\t\t\tif (!zipFiles)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Add all files to the message...\n\t\t\t\t\t\t//\n\t\t\t\t\t\tfor (Iterator iter = resultFiles.iterator(); iter.hasNext();) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tResultFile resultFile = (ResultFile) iter.next();\n\t\t\t\t\t\t\tFile file = resultFile.getFile();\n\t\t\t\t\t\t\tif (file != null && file.exists()) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// create a data source\n\t\t\t\t\t\t\t\tMimeBodyPart files = new MimeBodyPart();\n\t\t\t\t\t\t\t\tFileDataSource fds = new FileDataSource(file);\n\t\t\t\t\t\t\t\t// get a data Handler to manipulate this file type;\n\t\t\t\t\t\t\t\tfiles.setDataHandler(new DataHandler(fds));\n\t\t\t\t\t\t\t\t// include the file in th e data source\n\t\t\t\t\t\t\t\tfiles.setFileName(fds.getName());\n\t\t\t\t\t\t\t\t// add the part with the file in the BodyPart();\n\t\t\t\t\t\t\t\tparts.addBodyPart(files);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// create a single ZIP archive of all files\n\t\t\t\t\t\tmasterZipfile = new File(System.getProperty(\"java.io.tmpdir\")+Const.FILE_SEPARATOR+StringUtil.environmentSubstitute(zipFilename));\n\t\t\t\t\t\tZipOutputStream zipOutputStream = null;\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tzipOutputStream = new ZipOutputStream(new FileOutputStream(masterZipfile));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (Iterator iter = resultFiles.iterator(); iter.hasNext();) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tResultFile resultFile = (ResultFile) iter.next();\n\t\t\t\t\t\t\t\tFile file = resultFile.getFile();\n\t\t\t\t\t\t\t\tZipEntry zipEntry = new ZipEntry(file.getPath());\n\t\t\t\t\t\t\t\tzipOutputStream.putNextEntry(zipEntry);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Now put the content of this file into this archive...\n\t\t\t\t\t\t\t\tBufferedInputStream inputStream = new BufferedInputStream(new FileInputStream(file));\n\t\t\t\t\t\t\t\tint c;\n\t\t\t\t\t\t\t\twhile ( (c=inputStream.read())>=0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tzipOutputStream.write(c);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tinputStream.close();\n\t\t\t\t\t\t\t\tzipOutputStream.closeEntry();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(Exception e)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlog.logError(toString(), \"Error zipping attachement files into file [\"+masterZipfile.getPath()+\"] : \"+e.toString());\n\t\t\t\t\t\t\tlog.logError(toString(), Const.getStackTracker(e));\n\t\t\t\t\t\t\tresult.setNrErrors(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfinally\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (zipOutputStream!=null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tzipOutputStream.finish();\n\t\t\t\t\t\t\t\t\tzipOutputStream.close();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcatch(IOException e)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlog.logError(toString(), \"Unable to close attachement zip file archive : \"+e.toString());\n\t\t\t\t\t\t\t\t\tlog.logError(toString(), Const.getStackTracker(e));\n\t\t\t\t\t\t\t\t\tresult.setNrErrors(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Now attach the master zip file to the message.\n\t\t\t\t\t\tif (result.getNrErrors()==0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// create a data source\n\t\t\t\t\t\t\tMimeBodyPart files = new MimeBodyPart();\n\t\t\t\t\t\t\tFileDataSource fds = new FileDataSource(masterZipfile);\n\t\t\t\t\t\t\t// get a data Handler to manipulate this file type;\n\t\t\t\t\t\t\tfiles.setDataHandler(new DataHandler(fds));\n\t\t\t\t\t\t\t// include the file in th e data source\n\t\t\t\t\t\t\tfiles.setFileName(fds.getName());\n\t\t\t\t\t\t\t// add the part with the file in the BodyPart();\n\t\t\t\t\t\t\tparts.addBodyPart(files);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t    }\n\t\t\t}\n\t\t    msg.setContent(parts);\n\n\t\t    Transport.send(msg);\n\t\t} \n\t\tcatch (MessagingException mex) \n\t\t{\n\t\t    log.logError(toString(), \"Problem while sending message: \"+mex.toString());\n\t\t\tresult.setNrErrors(1);\n\n\t\t    Exception ex = mex;\n\t\t    do \n\t\t    {\n\t\t\t\tif (ex instanceof SendFailedException) \n\t\t\t\t{\n\t\t\t\t    SendFailedException sfex = (SendFailedException)ex;\n\t\t\t\t    \n\t\t\t\t    Address[] invalid = sfex.getInvalidAddresses();\n\t\t\t\t    if (invalid != null) \n\t\t\t\t    {\n\t\t\t\t    \tlog.logError(toString(), \"    ** Invalid Addresses\");\n     \t\t    \t\tfor (int i = 0; i < invalid.length; i++)\n\t\t\t    \t\t{\n\t\t\t    \t\t\tlog.logError(toString(), \"         \" + invalid[i]);\n\t\t\t    \t\t\tresult.setNrErrors(1);\n\t\t\t    \t\t}\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t    Address[] validUnsent = sfex.getValidUnsentAddresses();\n\t\t\t\t    if (validUnsent != null) \n\t\t\t\t    {\n\t\t\t\t    \tlog.logError(toString(), \"    ** ValidUnsent Addresses\");\n\t\t\t    \t\tfor (int i = 0; i < validUnsent.length; i++)\n\t\t\t    \t\t{\n\t\t\t    \t\t\tlog.logError(toString(), \"         \"+validUnsent[i]);\n\t\t\t    \t\t\tresult.setNrErrors(1);\n\t\t\t    \t\t}\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t    Address[] validSent = sfex.getValidSentAddresses();\n\t\t\t\t    if (validSent != null) \n\t\t\t\t    {\n\t\t\t\t    \t//System.out.println(\"    ** ValidSent Addresses\");\n\t\t\t    \t\tfor (int i = 0; i < validSent.length; i++)\n\t\t\t    \t\t{\n\t\t\t    \t\t\tlog.logError(toString(), \"         \"+validSent[i]);\n\t\t\t    \t\t\tresult.setNrErrors(1);\n\t\t\t    \t\t}\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\tif (ex instanceof MessagingException)\n\t\t\t\t{\n\t\t\t\t    ex = ((MessagingException)ex).getNextException();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t    ex = null;\n\t\t\t\t}\n\t\t    } while (ex != null);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tif (masterZipfile!=null && masterZipfile.exists())\n\t\t\t{\n\t\t\t\tmasterZipfile.delete();\n\t\t\t}\n\t\t}\n\n\t\tif (result.getNrErrors() > 0)\n\t\t{\n\t\t\tresult.setResult( false );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.setResult( true );\n\t\t}\n\n\t\treturn result;\n\t}","id":39862,"modified_method":"public Result execute(Result result, int nr, Repository rep, Job parentJob)\n\t{\n\t\tLogWriter log = LogWriter.getInstance();\n\n\t\tFile masterZipfile=null;\n\t\t\n\t\t// Send an e-mail...\n\t\t// create some properties and get the default Session\n\t\tProperties props = new Properties();\n\t\tprops.put(\"mail.smtp.host\", StringUtil.environmentSubstitute(server));\n\t\tboolean debug = log.getLogLevel()>=LogWriter.LOG_LEVEL_DEBUG;\n\t\t\n\t\tif (debug) props.put(\"mail.debug\", \"true\");\n        \n        Authenticator authenticator = null;\n        \n        if (usingAuthentication)\n        {\n            authenticator = new Authenticator()\n            {\n                protected PasswordAuthentication getPasswordAuthentication()\n                {\n                    return new PasswordAuthentication(\n                                StringUtil.environmentSubstitute(Const.NVL(authenticationUser, \"\")), \n                                StringUtil.environmentSubstitute(Const.NVL(authenticationPassword, \"\"))\n                            );\n                }\n            };\n        }\n\n\t\tSession session = Session.getInstance(props, authenticator);\n\t\tsession.setDebug(debug);\n\t\t\n\t\ttry \n\t\t{\n\t\t\t// create a message\n\t\t    Message msg = new MimeMessage(session);\n\t\t    msg.setFrom(new InternetAddress(StringUtil.environmentSubstitute(replyAddress)));\n            \n            // Split the mail-address: space separated\n            String destinations[] = StringUtil.environmentSubstitute(destination).split(\" \");\n\t\t    InternetAddress[] address = new InternetAddress[destinations.length];\n            for (int i=0;i<destinations.length;i++) address[i] = new InternetAddress(destinations[i]);\n            \n\t\t    msg.setRecipients(Message.RecipientType.TO, address);\n\t\t    msg.setSubject(StringUtil.environmentSubstitute(subject));\n\t\t    msg.setSentDate(new Date());\n\t\t    StringBuffer messageText = new StringBuffer();\n\n\t\t    if (comment!=null)\n\t\t    {\n\t\t        messageText.append(StringUtil.environmentSubstitute(comment)).append(Const.CR).append(Const.CR);\n\t\t    }\n\n            if (!onlySendComment)\n            {\n    \t        messageText.append(\"Job:\").append(Const.CR);\n    \t        messageText.append(\"-----\").append(Const.CR);\n    \t        messageText.append(\"Name       : \").append(parentJob.getJobMeta().getName()).append(Const.CR);\n    \t        messageText.append(\"Directory  : \").append(parentJob.getJobMeta().getDirectory()).append(Const.CR);\n    \t        messageText.append(\"JobEntry   : \").append(getName()).append(Const.CR);\n    \t        messageText.append(Const.CR);\n            }\n\n\t\t    if (includeDate) \n\t\t    {\n\t\t        Value date = new Value(\"date\", new Date());\n\t\t        messageText.append(\"Message date: \").append(date.toString()).append(Const.CR).append(Const.CR);\n\t\t    }\n\t\t    if (!onlySendComment && result!=null)\n\t\t    {\n\t\t        messageText.append(\"Previous result:\").append(Const.CR);\n\t\t        messageText.append(\"-----------------\").append(Const.CR);\n\t\t        messageText.append(\"Job entry nr         : \").append(result.getEntryNr()).append(Const.CR);\n\t\t\t    messageText.append(\"Errors               : \").append(result.getNrErrors()).append(Const.CR);\n\t\t\t    messageText.append(\"Lines read           : \").append(result.getNrLinesRead()).append(Const.CR);\n\t\t\t    messageText.append(\"Lines written        : \").append(result.getNrLinesWritten()).append(Const.CR);\n\t\t\t    messageText.append(\"Lines input          : \").append(result.getNrLinesInput()).append(Const.CR);\n\t\t\t    messageText.append(\"Lines output         : \").append(result.getNrLinesOutput()).append(Const.CR);\n\t\t\t    messageText.append(\"Lines updated        : \").append(result.getNrLinesUpdated()).append(Const.CR);\n\t\t\t    messageText.append(\"Script exit status   : \").append(result.getExitStatus()).append(Const.CR);\n\t\t\t    messageText.append(\"Result               : \").append(result.getResult()).append(Const.CR);\n\t\t\t    messageText.append(Const.CR);\n\t\t    }\n\n\t\t    if (!onlySendComment && ( !Const.isEmpty(StringUtil.environmentSubstitute(contactPerson)) || !Const.isEmpty(StringUtil.environmentSubstitute(contactPhone)) ))\n\t\t    {\n\t\t        messageText.append(\"Contact information :\").append(Const.CR);\n\t\t        messageText.append(\"---------------------\").append(Const.CR);\n\t\t        messageText.append(\"Person to contact : \").append(StringUtil.environmentSubstitute(contactPerson)).append(Const.CR);\n\t\t        messageText.append(\"Telephone number  : \").append(StringUtil.environmentSubstitute(contactPhone)).append(Const.CR);\n\t\t\t    messageText.append(Const.CR);\n\t\t    }\n\t\t    \n\t\t    // Include the path to this job entry...\n            if (!onlySendComment)\n            {\n    \t\t    JobTracker jobTracker = parentJob.getJobTracker();\n    \t\t    if (jobTracker!=null)\n    \t\t    {\n    \t\t        messageText.append(\"Path to this job entry:\").append(Const.CR);\n    \t\t        messageText.append(\"------------------------\").append(Const.CR);\n                    \n                    addBacktracking(jobTracker, messageText);\n    \t\t    }\n            }\n\t\t    \t\t    \n\t\t    Multipart parts = new MimeMultipart();\n\t\t\tMimeBodyPart part1 = new MimeBodyPart(); // put the text in the\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// 1st part\n\t\t\tpart1.setText(messageText.toString());\n\t\t\tparts.addBodyPart(part1);\n\t\t\tif (includingFiles && result != null)\n\t\t    {\n\t\t\t\tList resultFiles = result.getResultFiles();\n\t\t\t\tif (resultFiles!=null && resultFiles.size() > 0) \n\t\t\t\t{\n\t\t\t\t\tif (!zipFiles)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Add all files to the message...\n\t\t\t\t\t\t//\n\t\t\t\t\t\tfor (Iterator iter = resultFiles.iterator(); iter.hasNext();) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tResultFile resultFile = (ResultFile) iter.next();\n\t\t\t\t\t\t\tFile file = resultFile.getFile();\n\t\t\t\t\t\t\tif (file != null && file.exists()) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// create a data source\n\t\t\t\t\t\t\t\tMimeBodyPart files = new MimeBodyPart();\n\t\t\t\t\t\t\t\tFileDataSource fds = new FileDataSource(file);\n\t\t\t\t\t\t\t\t// get a data Handler to manipulate this file type;\n\t\t\t\t\t\t\t\tfiles.setDataHandler(new DataHandler(fds));\n\t\t\t\t\t\t\t\t// include the file in th e data source\n\t\t\t\t\t\t\t\tfiles.setFileName(fds.getName());\n\t\t\t\t\t\t\t\t// add the part with the file in the BodyPart();\n\t\t\t\t\t\t\t\tparts.addBodyPart(files);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// create a single ZIP archive of all files\n\t\t\t\t\t\tmasterZipfile = new File(System.getProperty(\"java.io.tmpdir\")+Const.FILE_SEPARATOR+StringUtil.environmentSubstitute(zipFilename));\n\t\t\t\t\t\tZipOutputStream zipOutputStream = null;\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tzipOutputStream = new ZipOutputStream(new FileOutputStream(masterZipfile));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (Iterator iter = resultFiles.iterator(); iter.hasNext();) \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tResultFile resultFile = (ResultFile) iter.next();\n\t\t\t\t\t\t\t\tFile file = resultFile.getFile();\n\t\t\t\t\t\t\t\tZipEntry zipEntry = new ZipEntry(file.getPath());\n\t\t\t\t\t\t\t\tzipOutputStream.putNextEntry(zipEntry);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Now put the content of this file into this archive...\n\t\t\t\t\t\t\t\tBufferedInputStream inputStream = new BufferedInputStream(new FileInputStream(file));\n\t\t\t\t\t\t\t\tint c;\n\t\t\t\t\t\t\t\twhile ( (c=inputStream.read())>=0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tzipOutputStream.write(c);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tinputStream.close();\n\t\t\t\t\t\t\t\tzipOutputStream.closeEntry();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(Exception e)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlog.logError(toString(), \"Error zipping attachement files into file [\"+masterZipfile.getPath()+\"] : \"+e.toString());\n\t\t\t\t\t\t\tlog.logError(toString(), Const.getStackTracker(e));\n\t\t\t\t\t\t\tresult.setNrErrors(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfinally\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (zipOutputStream!=null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tzipOutputStream.finish();\n\t\t\t\t\t\t\t\t\tzipOutputStream.close();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcatch(IOException e)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlog.logError(toString(), \"Unable to close attachement zip file archive : \"+e.toString());\n\t\t\t\t\t\t\t\t\tlog.logError(toString(), Const.getStackTracker(e));\n\t\t\t\t\t\t\t\t\tresult.setNrErrors(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Now attach the master zip file to the message.\n\t\t\t\t\t\tif (result.getNrErrors()==0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// create a data source\n\t\t\t\t\t\t\tMimeBodyPart files = new MimeBodyPart();\n\t\t\t\t\t\t\tFileDataSource fds = new FileDataSource(masterZipfile);\n\t\t\t\t\t\t\t// get a data Handler to manipulate this file type;\n\t\t\t\t\t\t\tfiles.setDataHandler(new DataHandler(fds));\n\t\t\t\t\t\t\t// include the file in th e data source\n\t\t\t\t\t\t\tfiles.setFileName(fds.getName());\n\t\t\t\t\t\t\t// add the part with the file in the BodyPart();\n\t\t\t\t\t\t\tparts.addBodyPart(files);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t    }\n\t\t\t}\n\t\t    msg.setContent(parts);\n\n\t\t    Transport.send(msg);\n\t\t} \n\t\tcatch (MessagingException mex) \n\t\t{\n\t\t    log.logError(toString(), \"Problem while sending message: \"+mex.toString());\n\t\t\tresult.setNrErrors(1);\n\n\t\t    Exception ex = mex;\n\t\t    do \n\t\t    {\n\t\t\t\tif (ex instanceof SendFailedException) \n\t\t\t\t{\n\t\t\t\t    SendFailedException sfex = (SendFailedException)ex;\n\t\t\t\t    \n\t\t\t\t    Address[] invalid = sfex.getInvalidAddresses();\n\t\t\t\t    if (invalid != null) \n\t\t\t\t    {\n\t\t\t\t    \tlog.logError(toString(), \"    ** Invalid Addresses\");\n     \t\t    \t\tfor (int i = 0; i < invalid.length; i++)\n\t\t\t    \t\t{\n\t\t\t    \t\t\tlog.logError(toString(), \"         \" + invalid[i]);\n\t\t\t    \t\t\tresult.setNrErrors(1);\n\t\t\t    \t\t}\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t    Address[] validUnsent = sfex.getValidUnsentAddresses();\n\t\t\t\t    if (validUnsent != null) \n\t\t\t\t    {\n\t\t\t\t    \tlog.logError(toString(), \"    ** ValidUnsent Addresses\");\n\t\t\t    \t\tfor (int i = 0; i < validUnsent.length; i++)\n\t\t\t    \t\t{\n\t\t\t    \t\t\tlog.logError(toString(), \"         \"+validUnsent[i]);\n\t\t\t    \t\t\tresult.setNrErrors(1);\n\t\t\t    \t\t}\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t    Address[] validSent = sfex.getValidSentAddresses();\n\t\t\t\t    if (validSent != null) \n\t\t\t\t    {\n\t\t\t\t    \t//System.out.println(\"    ** ValidSent Addresses\");\n\t\t\t    \t\tfor (int i = 0; i < validSent.length; i++)\n\t\t\t    \t\t{\n\t\t\t    \t\t\tlog.logError(toString(), \"         \"+validSent[i]);\n\t\t\t    \t\t\tresult.setNrErrors(1);\n\t\t\t    \t\t}\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\tif (ex instanceof MessagingException)\n\t\t\t\t{\n\t\t\t\t    ex = ((MessagingException)ex).getNextException();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t    ex = null;\n\t\t\t\t}\n\t\t    } while (ex != null);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tif (masterZipfile!=null && masterZipfile.exists())\n\t\t\t{\n\t\t\t\tmasterZipfile.delete();\n\t\t\t}\n\t\t}\n\n\t\tif (result.getNrErrors() > 0)\n\t\t{\n\t\t\tresult.setResult( false );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.setResult( true );\n\t\t}\n\n\t\treturn result;\n\t}","commit_id":"d752c17acec397613ea6010deb86f0e762ef3adb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void loadXML(Node entrynode, ArrayList databases, Repository rep) throws KettleXMLException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.loadXML(entrynode, databases);\n\t\t\tsetServer       ( XMLHandler.getTagValue(entrynode, \"server\") );\n\t\t\tsetDestination  ( XMLHandler.getTagValue(entrynode, \"destination\") );\n\t\t\tsetReplyAddress ( XMLHandler.getTagValue(entrynode, \"replyto\") );\n\t\t\tsetSubject      ( XMLHandler.getTagValue(entrynode, \"subject\") );\n\t\t\tsetIncludeDate  ( \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"include_date\")) );\n\t\t\tsetContactPerson( XMLHandler.getTagValue(entrynode, \"concact_person\") );\n\t\t\tsetContactPhone ( XMLHandler.getTagValue(entrynode, \"concact_phone\") );\n\t\t\tsetComment      ( XMLHandler.getTagValue(entrynode, \"comment\") );\n\t\t\tsetIncludingFiles ( \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"include_files\")) );\n\n            setUsingAuthentication( \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"use_auth\")) );\n            setAuthenticationUser( XMLHandler.getTagValue(entrynode, \"auth_user\") );\n            setAuthenticationPassword( XMLHandler.getTagValue(entrynode, \"auth_password\") );\n            \n\t\t\tNode ftsnode = XMLHandler.getSubNode(entrynode, \"filetypes\");\n\t\t\tint nrTypes = XMLHandler.countNodes(ftsnode, \"filetype\");\n\t\t\tallocate(nrTypes);\n\t\t\tfor (int i=0;i<nrTypes;i++)\n\t\t\t{\n\t\t\t\tNode ftnode = XMLHandler.getSubNodeByNr(ftsnode, \"filetype\", i); \n\t\t\t\tfileType[i]=ResultFile.getType(XMLHandler.getNodeValue(ftnode));\n\t\t\t}\n\t\t\t\n\t\t\tsetZipFiles( \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"zip_files\")) );\n\t\t\tsetZipFilename( XMLHandler.getTagValue(entrynode, \"zip_name\") );\n\n\t\t}\n\t\tcatch(KettleException xe)\n\t\t{\n\t\t\tthrow new KettleXMLException(\"Unable to load mail job entry from XML node\", xe);\n\t\t}\n\t}","id":39863,"modified_method":"public void loadXML(Node entrynode, ArrayList databases, Repository rep) throws KettleXMLException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.loadXML(entrynode, databases);\n\t\t\tsetServer       ( XMLHandler.getTagValue(entrynode, \"server\") );\n\t\t\tsetDestination  ( XMLHandler.getTagValue(entrynode, \"destination\") );\n\t\t\tsetReplyAddress ( XMLHandler.getTagValue(entrynode, \"replyto\") );\n\t\t\tsetSubject      ( XMLHandler.getTagValue(entrynode, \"subject\") );\n\t\t\tsetIncludeDate  ( \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"include_date\")) );\n\t\t\tsetContactPerson( XMLHandler.getTagValue(entrynode, \"concact_person\") );\n\t\t\tsetContactPhone ( XMLHandler.getTagValue(entrynode, \"concact_phone\") );\n\t\t\tsetComment      ( XMLHandler.getTagValue(entrynode, \"comment\") );\n\t\t\tsetIncludingFiles ( \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"include_files\")) );\n\n            setUsingAuthentication( \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"use_auth\")) );\n            setAuthenticationUser( XMLHandler.getTagValue(entrynode, \"auth_user\") );\n            setAuthenticationPassword( XMLHandler.getTagValue(entrynode, \"auth_password\") );\n\n            setOnlySendComment( \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"only_comment\") ) );\n            \n\t\t\tNode ftsnode = XMLHandler.getSubNode(entrynode, \"filetypes\");\n\t\t\tint nrTypes = XMLHandler.countNodes(ftsnode, \"filetype\");\n\t\t\tallocate(nrTypes);\n\t\t\tfor (int i=0;i<nrTypes;i++)\n\t\t\t{\n\t\t\t\tNode ftnode = XMLHandler.getSubNodeByNr(ftsnode, \"filetype\", i); \n\t\t\t\tfileType[i]=ResultFile.getType(XMLHandler.getNodeValue(ftnode));\n\t\t\t}\n\t\t\t\n\t\t\tsetZipFiles( \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"zip_files\")) );\n\t\t\tsetZipFilename( XMLHandler.getTagValue(entrynode, \"zip_name\") );\n\n\t\t}\n\t\tcatch(KettleException xe)\n\t\t{\n\t\t\tthrow new KettleXMLException(\"Unable to load mail job entry from XML node\", xe);\n\t\t}\n\t}","commit_id":"d752c17acec397613ea6010deb86f0e762ef3adb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void loadRep(Repository rep, long id_jobentry, ArrayList databases)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.loadRep(rep, id_jobentry, databases);\n\n        \t// First load the common parts like name & description, then the attributes...\n\t\t\t//\n\t\t\tserver          = rep.getJobEntryAttributeString (id_jobentry, \"server\");\n\t\t\tdestination     = rep.getJobEntryAttributeString (id_jobentry, \"destination\");\n\t\t\treplyAddress         = rep.getJobEntryAttributeString (id_jobentry, \"replyto\");\n\t\t\tsubject         = rep.getJobEntryAttributeString (id_jobentry, \"subject\");\n\t\t\tincludeDate    = rep.getJobEntryAttributeBoolean(id_jobentry, \"include_date\");\n\t\t\tcontactPerson  = rep.getJobEntryAttributeString (id_jobentry, \"contact_person\");\n\t\t\tcontactPhone   = rep.getJobEntryAttributeString (id_jobentry, \"contact_phone\");\n\t\t\tcomment         = rep.getJobEntryAttributeString (id_jobentry, \"comment\");\n\t\t\tincludingFiles    = rep.getJobEntryAttributeBoolean(id_jobentry, \"include_files\");\n\t\t\t\n            usingAuthentication = rep.getJobEntryAttributeBoolean(id_jobentry, \"use_auth\");\n            authenticationUser = rep.getJobEntryAttributeString(id_jobentry, \"auth_user\");\n            authenticationPassword = rep.getJobEntryAttributeString(id_jobentry, \"auth_password\");\n            \n\t\t\tint nrTypes = rep.countNrJobEntryAttributes(id_jobentry, \"file_type\");\n\t\t\tallocate(nrTypes);\n\t\t\t\n            for (int i=0;i<nrTypes;i++)\n            {\n            \tString typeCode = rep.getJobEntryAttributeString(id_jobentry, i, \"file_type\");\n            \tfileType[i] = ResultFile.getType(typeCode);\n\t        }\n\n\t\t\tzipFiles       = rep.getJobEntryAttributeBoolean(id_jobentry, \"zip_files\");\n\t\t\tzipFilename    = rep.getJobEntryAttributeString(id_jobentry, \"zip_name\");\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to load job entry of type mail from the repository with id_jobentry=\"+id_jobentry, dbe);\n\t\t}\n\n\t}","id":39864,"modified_method":"public void loadRep(Repository rep, long id_jobentry, ArrayList databases)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.loadRep(rep, id_jobentry, databases);\n\n        \t// First load the common parts like name & description, then the attributes...\n\t\t\t//\n\t\t\tserver          = rep.getJobEntryAttributeString (id_jobentry, \"server\");\n\t\t\tdestination     = rep.getJobEntryAttributeString (id_jobentry, \"destination\");\n\t\t\treplyAddress         = rep.getJobEntryAttributeString (id_jobentry, \"replyto\");\n\t\t\tsubject         = rep.getJobEntryAttributeString (id_jobentry, \"subject\");\n\t\t\tincludeDate    = rep.getJobEntryAttributeBoolean(id_jobentry, \"include_date\");\n\t\t\tcontactPerson  = rep.getJobEntryAttributeString (id_jobentry, \"contact_person\");\n\t\t\tcontactPhone   = rep.getJobEntryAttributeString (id_jobentry, \"contact_phone\");\n\t\t\tcomment         = rep.getJobEntryAttributeString (id_jobentry, \"comment\");\n\t\t\tincludingFiles    = rep.getJobEntryAttributeBoolean(id_jobentry, \"include_files\");\n\t\t\t\n            usingAuthentication = rep.getJobEntryAttributeBoolean(id_jobentry, \"use_auth\");\n            authenticationUser = rep.getJobEntryAttributeString(id_jobentry, \"auth_user\");\n            authenticationPassword = rep.getJobEntryAttributeString(id_jobentry, \"auth_password\");\n\n            onlySendComment = rep.getJobEntryAttributeBoolean(id_jobentry, \"only_comment\");\n\n\t\t\tint nrTypes = rep.countNrJobEntryAttributes(id_jobentry, \"file_type\");\n\t\t\tallocate(nrTypes);\n\t\t\t\n            for (int i=0;i<nrTypes;i++)\n            {\n            \tString typeCode = rep.getJobEntryAttributeString(id_jobentry, i, \"file_type\");\n            \tfileType[i] = ResultFile.getType(typeCode);\n\t        }\n\n\t\t\tzipFiles       = rep.getJobEntryAttributeBoolean(id_jobentry, \"zip_files\");\n\t\t\tzipFilename    = rep.getJobEntryAttributeString(id_jobentry, \"zip_name\");\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to load job entry of type mail from the repository with id_jobentry=\"+id_jobentry, dbe);\n\t\t}\n\n\t}","commit_id":"d752c17acec397613ea6010deb86f0e762ef3adb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep(Repository rep, long id_job)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.saveRep(rep, id_job);\n\t\t\t\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"server\", server);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"destination\", destination);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"replyto\", replyAddress);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"subject\", subject);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"include_date\", includeDate);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"contact_person\", contactPerson);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"contact_phone\", contactPhone);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"comment\", comment);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"include_files\", includingFiles);\n            rep.saveJobEntryAttribute(id_job, getID(), \"use_auth\", usingAuthentication);\n            rep.saveJobEntryAttribute(id_job, getID(), \"auth_user\", authenticationUser);\n            rep.saveJobEntryAttribute(id_job, getID(), \"auth_password\", authenticationPassword);\n\t\t\t\n\t\t\tif (fileType!=null)\n\t\t\t{\n\t\t\t\tfor (int i=0;i<fileType.length;i++)\n\t\t\t\t{\n\t\t\t\t\trep.saveJobEntryAttribute(id_job, getID(), i, \"file_type\", ResultFile.getTypeCode(fileType[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"zip_files\", zipFiles);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"zip_name\", zipFilename);\n\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"unable to save jobentry of type mail to the repository for id_job=\"+id_job, dbe);\n\t\t}\n\t\t\t\n\t}","id":39865,"modified_method":"public void saveRep(Repository rep, long id_job)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.saveRep(rep, id_job);\n\t\t\t\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"server\", server);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"destination\", destination);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"replyto\", replyAddress);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"subject\", subject);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"include_date\", includeDate);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"contact_person\", contactPerson);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"contact_phone\", contactPhone);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"comment\", comment);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"include_files\", includingFiles);\n            rep.saveJobEntryAttribute(id_job, getID(), \"use_auth\", usingAuthentication);\n            rep.saveJobEntryAttribute(id_job, getID(), \"auth_user\", authenticationUser);\n            rep.saveJobEntryAttribute(id_job, getID(), \"auth_password\", authenticationPassword);\n            \n            rep.saveJobEntryAttribute(id_job, getID(), \"only_comment\", onlySendComment);\n\t\t\t\n\t\t\tif (fileType!=null)\n\t\t\t{\n\t\t\t\tfor (int i=0;i<fileType.length;i++)\n\t\t\t\t{\n\t\t\t\t\trep.saveJobEntryAttribute(id_job, getID(), i, \"file_type\", ResultFile.getTypeCode(fileType[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"zip_files\", zipFiles);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"zip_name\", zipFilename);\n\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"unable to save jobentry of type mail to the repository for id_job=\"+id_job, dbe);\n\t\t}\n\t\t\t\n\t}","commit_id":"d752c17acec397613ea6010deb86f0e762ef3adb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String getXML()\n\t{\n        StringBuffer retval = new StringBuffer();\n\t\t\n\t\tretval.append(super.getXML());\n\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"server\", server));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"destination\", destination));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"replyto\", replyAddress));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"subject\", subject));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"include_date\", includeDate));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"contact_person\", contactPerson));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"contact_phone\", contactPhone));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"comment\", comment));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"include_files\", includingFiles));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"zip_files\", zipFiles));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"zip_name\", zipFilename));\n\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"use_auth\", usingAuthentication));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"auth_user\", authenticationUser));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"auth_password\", authenticationPassword));\n\n        retval.append(\"      <filetypes>\");\n        if (fileType!=null)\n        for (int i=0;i<fileType.length;i++)\n        {\n        \tretval.append(\"        \").append(XMLHandler.addTagValue(\"filetype\", ResultFile.getTypeCode(fileType[i])));\n        }\n        retval.append(\"      <\/filetypes>\");\n\n\t\treturn retval.toString();\n\t}","id":39866,"modified_method":"public String getXML()\n\t{\n        StringBuffer retval = new StringBuffer();\n\t\t\n\t\tretval.append(super.getXML());\n\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"server\", server));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"destination\", destination));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"replyto\", replyAddress));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"subject\", subject));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"include_date\", includeDate));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"contact_person\", contactPerson));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"contact_phone\", contactPhone));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"comment\", comment));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"include_files\", includingFiles));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"zip_files\", zipFiles));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"zip_name\", zipFilename));\n\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"use_auth\", usingAuthentication));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"auth_user\", authenticationUser));\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"auth_password\", authenticationPassword));\n\n        retval.append(\"      \").append(XMLHandler.addTagValue(\"only_comment\", onlySendComment));\n\n        retval.append(\"      <filetypes>\");\n        if (fileType!=null)\n        for (int i=0;i<fileType.length;i++)\n        {\n        \tretval.append(\"        \").append(XMLHandler.addTagValue(\"filetype\", ResultFile.getTypeCode(fileType[i])));\n        }\n        retval.append(\"      <\/filetypes>\");\n\n\t\treturn retval.toString();\n\t}","commit_id":"d752c17acec397613ea6010deb86f0e762ef3adb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public JobEntryInterface open()\n\t{\n\t\tShell parent = getParent();\n\t\tdisplay = parent.getDisplay();\n\n\t\tshell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE);\n \t\tprops.setLook(shell);\n\n\t\tModifyListener lsMod = new ModifyListener() \n\t\t{\n\t\t\tpublic void modifyText(ModifyEvent e) \n\t\t\t{\n\t\t\t\tjobmail.setChanged();\n\t\t\t}\n\t\t};\n\t\tbackupChanged = jobmail.hasChanged();\n\t\tbackupDate    = jobmail.getIncludeDate();\n\n\t\tFormLayout formLayout = new FormLayout ();\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\n\n\t\tshell.setLayout(formLayout);\n\t\tshell.setText(\"Job mail details\");\n\t\t\n\t\tint middle = props.getMiddlePct();\n\t\tint margin = Const.MARGIN;\n\n\t\t// Name line\n\t\twName=new LabelText(shell, \"Name of mail job entry\", \"Name of mail job entry\");\n \t\twName.addModifyListener(lsMod);\n\t\tfdName=new FormData();\n\t\tfdName.top  = new FormAttachment(0, 0);\n\t\tfdName.left = new FormAttachment(0, 0);\n\t\tfdName.right= new FormAttachment(100, 0);\n\t\twName.setLayoutData(fdName);\n\n\t\t// Destination line\n\t\twDestination=new LabelTextVar(shell, \"Destination address\", \"Destination address\");\n\t\twDestination.addModifyListener(lsMod);\n\t\tfdDestination=new FormData();\n\t\tfdDestination.left = new FormAttachment(0, 0);\n\t\tfdDestination.top  = new FormAttachment(wName, margin);\n\t\tfdDestination.right= new FormAttachment(100, 0);\n\t\twDestination.setLayoutData(fdDestination);\n\n\t\t// Server line\n\t\twServer=new LabelTextVar(shell, \"SMTP Server\", \"SMTP Server\");\n\t\twServer.addModifyListener(lsMod);\n\t\tfdServer=new FormData();\n\t\tfdServer.left = new FormAttachment(0, 0);\n\t\tfdServer.top  = new FormAttachment(wDestination, margin);\n\t\tfdServer.right= new FormAttachment(100, 0);\n\t\twServer.setLayoutData(fdServer);\n\n        \n        // Include Files?\n        wlUseAuth=new Label(shell, SWT.RIGHT);\n        wlUseAuth.setText(\"Use authentication?\");\n        props.setLook(wlUseAuth);\n        fdlUseAuth=new FormData();\n        fdlUseAuth.left = new FormAttachment(0, 0);\n        fdlUseAuth.top  = new FormAttachment(wServer, margin);\n        fdlUseAuth.right= new FormAttachment(middle, -margin);\n        wlUseAuth.setLayoutData(fdlUseAuth);\n        wUseAuth=new Button(shell, SWT.CHECK);\n        props.setLook(wUseAuth);\n        fdUseAuth=new FormData();\n        fdUseAuth.left = new FormAttachment(middle, margin);\n        fdUseAuth.top  = new FormAttachment(wServer, margin);\n        fdUseAuth.right= new FormAttachment(100, 0);\n        wUseAuth.setLayoutData(fdUseAuth);\n        wUseAuth.addSelectionListener(new SelectionAdapter() \n            {\n                public void widgetSelected(SelectionEvent e) \n                {\n                    jobmail.setUsingAuthentication(!jobmail.isUsingAuthentication());\n                    jobmail.setChanged();\n                    setFlags();\n                }\n            }\n        );\n\n        // AuthUser line\n        wAuthUser=new LabelTextVar(shell, \"Authentication user\", \"Authentication user\");\n        wAuthUser.addModifyListener(lsMod);\n        fdAuthUser=new FormData();\n        fdAuthUser.left = new FormAttachment(0, 0);\n        fdAuthUser.top  = new FormAttachment(wUseAuth, margin);\n        fdAuthUser.right= new FormAttachment(100, 0);\n        wAuthUser.setLayoutData(fdAuthUser);\n\n        // AuthPass line\n        wAuthPass=new LabelTextVar(shell, \"Authentication password\", \"Authentication password\");\n        wAuthPass.setEchoChar('*');\n        wAuthPass.addModifyListener(lsMod);\n        fdAuthPass=new FormData();\n        fdAuthPass.left = new FormAttachment(0, 0);\n        fdAuthPass.top  = new FormAttachment(wAuthUser, margin);\n        fdAuthPass.right= new FormAttachment(100, 0);\n        wAuthPass.setLayoutData(fdAuthPass);\n\n\t\t// Reply line\n\t\twReply=new LabelTextVar(shell, \"Reply address\", \"Reply address\");\n\t\twReply.addModifyListener(lsMod);\n\t\tfdReply=new FormData();\n\t\tfdReply.left = new FormAttachment(0, 0);\n\t\tfdReply.top  = new FormAttachment(wAuthPass, margin);\n\t\tfdReply.right= new FormAttachment(100, 0);\n\t\twReply.setLayoutData(fdReply);\n\n\t\t// Subject line\n\t\twSubject=new LabelTextVar(shell, \"Subject\", \"Subject\");\n\t\twSubject.addModifyListener(lsMod);\n\t\tfdSubject=new FormData();\n\t\tfdSubject.left = new FormAttachment(0, 0);\n\t\tfdSubject.top  = new FormAttachment(wReply, margin);\n\t\tfdSubject.right= new FormAttachment(100, 0);\n\t\twSubject.setLayoutData(fdSubject);\n\n\t\t// Add date to logfile name?\n\t\twlAddDate=new Label(shell, SWT.RIGHT);\n\t\twlAddDate.setText(\"Include date in message?\");\n \t\tprops.setLook(wlAddDate);\n\t\tfdlAddDate=new FormData();\n\t\tfdlAddDate.left = new FormAttachment(0, 0);\n\t\tfdlAddDate.top  = new FormAttachment(wSubject, margin);\n\t\tfdlAddDate.right= new FormAttachment(middle, -margin);\n\t\twlAddDate.setLayoutData(fdlAddDate);\n\t\twAddDate=new Button(shell, SWT.CHECK);\n \t\tprops.setLook(wAddDate);\n\t\tfdAddDate=new FormData();\n\t\tfdAddDate.left = new FormAttachment(middle, margin);\n\t\tfdAddDate.top  = new FormAttachment(wSubject, margin);\n\t\tfdAddDate.right= new FormAttachment(100, 0);\n\t\twAddDate.setLayoutData(fdAddDate);\n\t\twAddDate.addSelectionListener(new SelectionAdapter() \n\t\t\t{\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \n\t\t\t\t{\n\t\t\t\t\tjobmail.setIncludeDate(!jobmail.getIncludeDate());\n\t\t\t\t\tjobmail.setChanged();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t\n\t\t// Include Files?\n\t\twlIncludeFiles=new Label(shell, SWT.RIGHT);\n\t\twlIncludeFiles.setText(\"Attach files to message?\");\n \t\tprops.setLook(wlIncludeFiles);\n\t\tfdlIncludeFiles=new FormData();\n\t\tfdlIncludeFiles.left = new FormAttachment(0, 0);\n\t\tfdlIncludeFiles.top  = new FormAttachment(wAddDate, margin);\n\t\tfdlIncludeFiles.right= new FormAttachment(middle, -margin);\n\t\twlIncludeFiles.setLayoutData(fdlIncludeFiles);\n\t\twIncludeFiles=new Button(shell, SWT.CHECK);\n \t\tprops.setLook(wIncludeFiles);\n\t\tfdIncludeFiles=new FormData();\n\t\tfdIncludeFiles.left = new FormAttachment(middle, margin);\n\t\tfdIncludeFiles.top  = new FormAttachment(wAddDate, margin);\n\t\tfdIncludeFiles.right= new FormAttachment(100, 0);\n\t\twIncludeFiles.setLayoutData(fdIncludeFiles);\n\t\twIncludeFiles.addSelectionListener(new SelectionAdapter() \n\t\t\t{\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \n\t\t\t\t{\n\t\t\t\t\tjobmail.setIncludingFiles(!jobmail.isIncludingFiles());\n\t\t\t\t\tjobmail.setChanged();\n\t\t\t\t\tsetFlags();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Include Files?\n\t\twlTypes=new Label(shell, SWT.RIGHT);\n\t\twlTypes.setText(\"Select the result file types to attach\");\n \t\tprops.setLook(wlTypes);\n\t\tfdlTypes=new FormData();\n\t\tfdlTypes.left = new FormAttachment(0, 0);\n\t\tfdlTypes.top  = new FormAttachment(wIncludeFiles, margin);\n\t\tfdlTypes.right= new FormAttachment(middle, -margin);\n\t\twlTypes.setLayoutData(fdlTypes);\n\t\twTypes=new List(shell, SWT.MULTI | SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL);\n \t\tprops.setLook(wTypes);\n\t\tfdTypes=new FormData();\n\t\tfdTypes.left   = new FormAttachment(middle, margin);\n\t\tfdTypes.top    = new FormAttachment(wIncludeFiles, margin);\n\t\tfdTypes.bottom = new FormAttachment(wIncludeFiles, margin+150);\n\t\tfdTypes.right  = new FormAttachment(100, 0);\n\t\twTypes.setLayoutData(fdTypes);\n\t\tfor (int i=0;i<ResultFile.getAllTypeDesc().length;i++)\n\t\t{\n\t\t\twTypes.add(ResultFile.getAllTypeDesc()[i]);\n\t\t}\n\n\t\t// Zip Files?\n\t\twlZipFiles=new Label(shell, SWT.RIGHT);\n\t\twlZipFiles.setText(\"Zip files into a single archive?\");\n \t\tprops.setLook(wlZipFiles);\n\t\tfdlZipFiles=new FormData();\n\t\tfdlZipFiles.left = new FormAttachment(0, 0);\n\t\tfdlZipFiles.top  = new FormAttachment(wTypes, margin);\n\t\tfdlZipFiles.right= new FormAttachment(middle, -margin);\n\t\twlZipFiles.setLayoutData(fdlZipFiles);\n\t\twZipFiles=new Button(shell, SWT.CHECK);\n \t\tprops.setLook(wZipFiles);\n\t\tfdZipFiles=new FormData();\n\t\tfdZipFiles.left = new FormAttachment(middle, margin);\n\t\tfdZipFiles.top  = new FormAttachment(wTypes, margin);\n\t\tfdZipFiles.right= new FormAttachment(100, 0);\n\t\twZipFiles.setLayoutData(fdZipFiles);\n\t\twZipFiles.addSelectionListener(new SelectionAdapter() \n\t\t\t{\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \n\t\t\t\t{\n\t\t\t\t\tjobmail.setZipFiles(!jobmail.isZipFiles());\n\t\t\t\t\tjobmail.setChanged();\n\t\t\t\t\tsetFlags();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t\n\t\t// ZipFilename line\n\t\twZipFilename=new LabelTextVar(shell, \"The zip filename\", \"The zip filename\");\n \t\twZipFilename.addModifyListener(lsMod);\n\t\tfdZipFilename=new FormData();\n\t\tfdZipFilename.left = new FormAttachment(0, 0);\n\t\tfdZipFilename.top  = new FormAttachment(wZipFiles, margin);\n\t\tfdZipFilename.right= new FormAttachment(100, 0);\n\t\twZipFilename.setLayoutData(fdZipFilename);\n\n\t\t// ZipFilename line\n\t\twPerson=new LabelTextVar(shell, \"Contact person\", \"Contact person\");\n\t\twPerson.addModifyListener(lsMod);\n\t\tfdPerson=new FormData();\n\t\tfdPerson.left = new FormAttachment(0, 0);\n\t\tfdPerson.top  = new FormAttachment(wZipFilename, margin);\n\t\tfdPerson.right= new FormAttachment(100, 0);\n\t\twPerson.setLayoutData(fdPerson);\n\n\t\t// Phone line\n\t\twPhone=new LabelTextVar(shell, \"Contact Phone\", \"Contact Phone\");\n\t\twPhone.addModifyListener(lsMod);\n\t\tfdPhone=new FormData();\n\t\tfdPhone.left = new FormAttachment(0, 0);\n\t\tfdPhone.top  = new FormAttachment(wPerson, margin);\n\t\tfdPhone.right= new FormAttachment(100, 0);\n\t\twPhone.setLayoutData(fdPhone);\n\n        // Comment line\n        wlComment=new Label(shell, SWT.RIGHT);\n        wlComment.setText(\"Comment: \");\n        props.setLook(wlComment);\n        fdlComment=new FormData();\n        fdlComment.left = new FormAttachment(0, 0);\n        fdlComment.top  = new FormAttachment(wPhone, margin);\n        fdlComment.right= new FormAttachment(middle, margin);\n        wlComment.setLayoutData(fdlComment);\n\n        wComment=new Text(shell, SWT.MULTI | SWT.LEFT | SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL);\n        props.setLook(wComment);\n        wComment.addModifyListener(lsMod);\n        fdComment=new FormData();\n        fdComment.left   = new FormAttachment(middle, margin);\n        fdComment.top    = new FormAttachment(wPhone, margin);\n        fdComment.right  = new FormAttachment(100, 0);\n        fdComment.bottom = new FormAttachment(100, -50);\n        wComment.setLayoutData(fdComment);\n        SelectionAdapter lsVar = VariableButtonListenerFactory.getSelectionAdapter(shell, wComment);\n        wComment.addKeyListener(TextVar.getControlSpaceKeyListener(wComment, lsVar));\n        \n\t\t// Some buttons\n\t\twOK=new Button(shell, SWT.PUSH);\n\t\twOK.setText(\"  &OK  \");\n\t\twCancel=new Button(shell, SWT.PUSH);\n\t\twCancel.setText(\"  &Cancel  \");\n\n\t\tBaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wComment);\n\n\t\t// Add listeners\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel(); } };\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();     } };\n\t\t\n\t\twOK.addListener    (SWT.Selection, lsOK     );\n\t\twCancel.addListener(SWT.Selection, lsCancel );\n\t\t\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\n\t\twName.addSelectionListener(lsDef);\n\t\twServer.addSelectionListener(lsDef);\n\t\twSubject.addSelectionListener(lsDef);\n\t\twDestination.addSelectionListener(lsDef);\n\t\twReply.addSelectionListener(lsDef);\n\t\twPerson.addSelectionListener(lsDef);\n\t\twPhone.addSelectionListener(lsDef);\n\t\twComment.addSelectionListener(lsDef);\n\t\twZipFilename.addSelectionListener(lsDef);\n\n\t\t// Detect [X] or ALT-F4 or something that kills this window...\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\n\n        BaseStepDialog.setTraverseOrder(new Control[] {wName, wDestination, wServer, wUseAuth, wAuthUser, wAuthPass, wReply, \n                wSubject, wAddDate, wIncludeFiles, wTypes, wZipFiles, wZipFilename, wPerson, wPhone, wComment, wOK, wCancel });\n                \n\t\tgetData();\n\t\t\n\t\tBaseStepDialog.setSize(shell);\n\n\t\tshell.open();\n\t\twhile (!shell.isDisposed())\n\t\t{\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\n\t\t}\n\t\treturn jobmail;\n\t}","id":39867,"modified_method":"public JobEntryInterface open()\n\t{\n\t\tShell parent = getParent();\n\t\tdisplay = parent.getDisplay();\n\n\t\tshell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE);\n \t\tprops.setLook(shell);\n\n\t\tModifyListener lsMod = new ModifyListener() \n\t\t{\n\t\t\tpublic void modifyText(ModifyEvent e) \n\t\t\t{\n\t\t\t\tjobmail.setChanged();\n\t\t\t}\n\t\t};\n\t\tbackupChanged = jobmail.hasChanged();\n\t\tbackupDate    = jobmail.getIncludeDate();\n\n\t\tFormLayout formLayout = new FormLayout ();\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\n\n\t\tshell.setLayout(formLayout);\n\t\tshell.setText(\"Job mail details\");\n\t\t\n\t\tint middle = props.getMiddlePct();\n\t\tint margin = Const.MARGIN;\n\n\t\t// Name line\n\t\twName=new LabelText(shell, \"Name of mail job entry\", \"Name of mail job entry\");\n \t\twName.addModifyListener(lsMod);\n\t\tfdName=new FormData();\n\t\tfdName.top  = new FormAttachment(0, 0);\n\t\tfdName.left = new FormAttachment(0, 0);\n\t\tfdName.right= new FormAttachment(100, 0);\n\t\twName.setLayoutData(fdName);\n\n\t\t// Destination line\n\t\twDestination=new LabelTextVar(shell, \"Destination address\", \"Destination address\");\n\t\twDestination.addModifyListener(lsMod);\n\t\tfdDestination=new FormData();\n\t\tfdDestination.left = new FormAttachment(0, 0);\n\t\tfdDestination.top  = new FormAttachment(wName, margin);\n\t\tfdDestination.right= new FormAttachment(100, 0);\n\t\twDestination.setLayoutData(fdDestination);\n\n\t\t// Server line\n\t\twServer=new LabelTextVar(shell, \"SMTP Server\", \"SMTP Server\");\n\t\twServer.addModifyListener(lsMod);\n\t\tfdServer=new FormData();\n\t\tfdServer.left = new FormAttachment(0, 0);\n\t\tfdServer.top  = new FormAttachment(wDestination, margin);\n\t\tfdServer.right= new FormAttachment(100, 0);\n\t\twServer.setLayoutData(fdServer);\n\n        \n        // Include Files?\n        wlUseAuth=new Label(shell, SWT.RIGHT);\n        wlUseAuth.setText(\"Use authentication?\");\n        props.setLook(wlUseAuth);\n        fdlUseAuth=new FormData();\n        fdlUseAuth.left = new FormAttachment(0, 0);\n        fdlUseAuth.top  = new FormAttachment(wServer, margin);\n        fdlUseAuth.right= new FormAttachment(middle, -margin);\n        wlUseAuth.setLayoutData(fdlUseAuth);\n        wUseAuth=new Button(shell, SWT.CHECK);\n        props.setLook(wUseAuth);\n        fdUseAuth=new FormData();\n        fdUseAuth.left = new FormAttachment(middle, margin);\n        fdUseAuth.top  = new FormAttachment(wServer, margin);\n        fdUseAuth.right= new FormAttachment(100, 0);\n        wUseAuth.setLayoutData(fdUseAuth);\n        wUseAuth.addSelectionListener(new SelectionAdapter() \n            {\n                public void widgetSelected(SelectionEvent e) \n                {\n                    jobmail.setUsingAuthentication(!jobmail.isUsingAuthentication());\n                    jobmail.setChanged();\n                    setFlags();\n                }\n            }\n        );\n\n        // AuthUser line\n        wAuthUser=new LabelTextVar(shell, \"Authentication user\", \"Authentication user\");\n        wAuthUser.addModifyListener(lsMod);\n        fdAuthUser=new FormData();\n        fdAuthUser.left = new FormAttachment(0, 0);\n        fdAuthUser.top  = new FormAttachment(wUseAuth, margin);\n        fdAuthUser.right= new FormAttachment(100, 0);\n        wAuthUser.setLayoutData(fdAuthUser);\n\n        // AuthPass line\n        wAuthPass=new LabelTextVar(shell, \"Authentication password\", \"Authentication password\");\n        wAuthPass.setEchoChar('*');\n        wAuthPass.addModifyListener(lsMod);\n        fdAuthPass=new FormData();\n        fdAuthPass.left = new FormAttachment(0, 0);\n        fdAuthPass.top  = new FormAttachment(wAuthUser, margin);\n        fdAuthPass.right= new FormAttachment(100, 0);\n        wAuthPass.setLayoutData(fdAuthPass);\n\n\t\t// Reply line\n\t\twReply=new LabelTextVar(shell, \"Reply address\", \"Reply address\");\n\t\twReply.addModifyListener(lsMod);\n\t\tfdReply=new FormData();\n\t\tfdReply.left = new FormAttachment(0, 0);\n\t\tfdReply.top  = new FormAttachment(wAuthPass, margin);\n\t\tfdReply.right= new FormAttachment(100, 0);\n\t\twReply.setLayoutData(fdReply);\n\n\t\t// Subject line\n\t\twSubject=new LabelTextVar(shell, \"Subject\", \"Subject\");\n\t\twSubject.addModifyListener(lsMod);\n\t\tfdSubject=new FormData();\n\t\tfdSubject.left = new FormAttachment(0, 0);\n\t\tfdSubject.top  = new FormAttachment(wReply, margin);\n\t\tfdSubject.right= new FormAttachment(100, 0);\n\t\twSubject.setLayoutData(fdSubject);\n\n\t\t// Add date to logfile name?\n\t\twlAddDate=new Label(shell, SWT.RIGHT);\n\t\twlAddDate.setText(\"Include date in message?\");\n \t\tprops.setLook(wlAddDate);\n\t\tfdlAddDate=new FormData();\n\t\tfdlAddDate.left = new FormAttachment(0, 0);\n\t\tfdlAddDate.top  = new FormAttachment(wSubject, margin);\n\t\tfdlAddDate.right= new FormAttachment(middle, -margin);\n\t\twlAddDate.setLayoutData(fdlAddDate);\n\t\twAddDate=new Button(shell, SWT.CHECK);\n \t\tprops.setLook(wAddDate);\n\t\tfdAddDate=new FormData();\n\t\tfdAddDate.left = new FormAttachment(middle, margin);\n\t\tfdAddDate.top  = new FormAttachment(wSubject, margin);\n\t\tfdAddDate.right= new FormAttachment(100, 0);\n\t\twAddDate.setLayoutData(fdAddDate);\n\t\twAddDate.addSelectionListener(new SelectionAdapter() \n\t\t\t{\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \n\t\t\t\t{\n\t\t\t\t\tjobmail.setIncludeDate(!jobmail.getIncludeDate());\n\t\t\t\t\tjobmail.setChanged();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t\n\t\t// Include Files?\n\t\twlIncludeFiles=new Label(shell, SWT.RIGHT);\n\t\twlIncludeFiles.setText(\"Attach files to message?\");\n \t\tprops.setLook(wlIncludeFiles);\n\t\tfdlIncludeFiles=new FormData();\n\t\tfdlIncludeFiles.left = new FormAttachment(0, 0);\n\t\tfdlIncludeFiles.top  = new FormAttachment(wAddDate, margin);\n\t\tfdlIncludeFiles.right= new FormAttachment(middle, -margin);\n\t\twlIncludeFiles.setLayoutData(fdlIncludeFiles);\n\t\twIncludeFiles=new Button(shell, SWT.CHECK);\n \t\tprops.setLook(wIncludeFiles);\n\t\tfdIncludeFiles=new FormData();\n\t\tfdIncludeFiles.left = new FormAttachment(middle, margin);\n\t\tfdIncludeFiles.top  = new FormAttachment(wAddDate, margin);\n\t\tfdIncludeFiles.right= new FormAttachment(100, 0);\n\t\twIncludeFiles.setLayoutData(fdIncludeFiles);\n\t\twIncludeFiles.addSelectionListener(new SelectionAdapter() \n\t\t\t{\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \n\t\t\t\t{\n\t\t\t\t\tjobmail.setIncludingFiles(!jobmail.isIncludingFiles());\n\t\t\t\t\tjobmail.setChanged();\n\t\t\t\t\tsetFlags();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t// Include Files?\n\t\twlTypes=new Label(shell, SWT.RIGHT);\n\t\twlTypes.setText(\"Select the result file types to attach\");\n \t\tprops.setLook(wlTypes);\n\t\tfdlTypes=new FormData();\n\t\tfdlTypes.left = new FormAttachment(0, 0);\n\t\tfdlTypes.top  = new FormAttachment(wIncludeFiles, margin);\n\t\tfdlTypes.right= new FormAttachment(middle, -margin);\n\t\twlTypes.setLayoutData(fdlTypes);\n\t\twTypes=new List(shell, SWT.MULTI | SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL);\n \t\tprops.setLook(wTypes);\n\t\tfdTypes=new FormData();\n\t\tfdTypes.left   = new FormAttachment(middle, margin);\n\t\tfdTypes.top    = new FormAttachment(wIncludeFiles, margin);\n\t\tfdTypes.bottom = new FormAttachment(wIncludeFiles, margin+150);\n\t\tfdTypes.right  = new FormAttachment(100, 0);\n\t\twTypes.setLayoutData(fdTypes);\n\t\tfor (int i=0;i<ResultFile.getAllTypeDesc().length;i++)\n\t\t{\n\t\t\twTypes.add(ResultFile.getAllTypeDesc()[i]);\n\t\t}\n\n\t\t// Zip Files?\n\t\twlZipFiles=new Label(shell, SWT.RIGHT);\n\t\twlZipFiles.setText(\"Zip files into a single archive?\");\n \t\tprops.setLook(wlZipFiles);\n\t\tfdlZipFiles=new FormData();\n\t\tfdlZipFiles.left = new FormAttachment(0, 0);\n\t\tfdlZipFiles.top  = new FormAttachment(wTypes, margin);\n\t\tfdlZipFiles.right= new FormAttachment(middle, -margin);\n\t\twlZipFiles.setLayoutData(fdlZipFiles);\n\t\twZipFiles=new Button(shell, SWT.CHECK);\n \t\tprops.setLook(wZipFiles);\n\t\tfdZipFiles=new FormData();\n\t\tfdZipFiles.left = new FormAttachment(middle, margin);\n\t\tfdZipFiles.top  = new FormAttachment(wTypes, margin);\n\t\tfdZipFiles.right= new FormAttachment(100, 0);\n\t\twZipFiles.setLayoutData(fdZipFiles);\n\t\twZipFiles.addSelectionListener(new SelectionAdapter() \n\t\t\t{\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \n\t\t\t\t{\n\t\t\t\t\tjobmail.setZipFiles(!jobmail.isZipFiles());\n\t\t\t\t\tjobmail.setChanged();\n\t\t\t\t\tsetFlags();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t\n\t\t// ZipFilename line\n\t\twZipFilename=new LabelTextVar(shell, \"The zip filename\", \"The zip filename\");\n \t\twZipFilename.addModifyListener(lsMod);\n\t\tfdZipFilename=new FormData();\n\t\tfdZipFilename.left = new FormAttachment(0, 0);\n\t\tfdZipFilename.top  = new FormAttachment(wZipFiles, margin);\n\t\tfdZipFilename.right= new FormAttachment(100, 0);\n\t\twZipFilename.setLayoutData(fdZipFilename);\n\n\t\t// ZipFilename line\n\t\twPerson=new LabelTextVar(shell, \"Contact person\", \"Contact person\");\n\t\twPerson.addModifyListener(lsMod);\n\t\tfdPerson=new FormData();\n\t\tfdPerson.left = new FormAttachment(0, 0);\n\t\tfdPerson.top  = new FormAttachment(wZipFilename, margin);\n\t\tfdPerson.right= new FormAttachment(100, 0);\n\t\twPerson.setLayoutData(fdPerson);\n\n\t\t// Phone line\n\t\twPhone=new LabelTextVar(shell, \"Contact Phone\", \"Contact Phone\");\n\t\twPhone.addModifyListener(lsMod);\n\t\tfdPhone=new FormData();\n\t\tfdPhone.left = new FormAttachment(0, 0);\n\t\tfdPhone.top  = new FormAttachment(wPerson, margin);\n\t\tfdPhone.right= new FormAttachment(100, 0);\n\t\twPhone.setLayoutData(fdPhone);\n\n        // Some buttons\n        wOK=new Button(shell, SWT.PUSH);\n        wOK.setText(\"  &OK  \");\n        wCancel=new Button(shell, SWT.PUSH);\n        wCancel.setText(\"  &Cancel  \");\n\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, null);\n        \n        // Only send the comment in the mail body\n        wlOnlyComment=new Label(shell, SWT.RIGHT);\n        wlOnlyComment.setText(\"Only send the comment in the mail body?\");\n        props.setLook(wlOnlyComment);\n        fdlOnlyComment=new FormData();\n        fdlOnlyComment.left = new FormAttachment(0, 0);\n        fdlOnlyComment.bottom = new FormAttachment(wOK, -margin*2);\n        fdlOnlyComment.right= new FormAttachment(middle, -margin);\n        wlOnlyComment.setLayoutData(fdlOnlyComment);\n        wOnlyComment=new Button(shell, SWT.CHECK);\n        props.setLook(wOnlyComment);\n        fdOnlyComment=new FormData();\n        fdOnlyComment.left = new FormAttachment(middle, margin);\n        fdOnlyComment.bottom = new FormAttachment(wOK, -margin*2);\n        fdOnlyComment.right= new FormAttachment(100, 0);\n        wOnlyComment.setLayoutData(fdOnlyComment);\n        wOnlyComment.addSelectionListener(new SelectionAdapter() \n            {\n                public void widgetSelected(SelectionEvent e) \n                {\n                    jobmail.setOnlySendComment(!jobmail.isOnlySendComment());\n                    jobmail.setChanged();\n                }\n            }\n        );\n        \n        // Comment line\n        wlComment=new Label(shell, SWT.RIGHT);\n        wlComment.setText(\"Comment: \");\n        props.setLook(wlComment);\n        fdlComment=new FormData();\n        fdlComment.left = new FormAttachment(0, 0);\n        fdlComment.top  = new FormAttachment(wPhone, margin);\n        fdlComment.right= new FormAttachment(middle, margin);\n        wlComment.setLayoutData(fdlComment);\n        \n        wComment=new Text(shell, SWT.MULTI | SWT.LEFT | SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL);\n        props.setLook(wComment);\n        wComment.addModifyListener(lsMod);\n        fdComment=new FormData();\n        fdComment.left   = new FormAttachment(middle, margin);\n        fdComment.top    = new FormAttachment(wPhone, margin);\n        fdComment.right  = new FormAttachment(100, 0);\n        fdComment.bottom = new FormAttachment(wOnlyComment, -margin);\n        wComment.setLayoutData(fdComment);\n        SelectionAdapter lsVar = VariableButtonListenerFactory.getSelectionAdapter(shell, wComment);\n        wComment.addKeyListener(TextVar.getControlSpaceKeyListener(wComment, lsVar));\n        \n\n\n\n\n\t\t// Add listeners\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel(); } };\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();     } };\n\t\t\n\t\twOK.addListener    (SWT.Selection, lsOK     );\n\t\twCancel.addListener(SWT.Selection, lsCancel );\n\t\t\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\n\t\twName.addSelectionListener(lsDef);\n\t\twServer.addSelectionListener(lsDef);\n\t\twSubject.addSelectionListener(lsDef);\n\t\twDestination.addSelectionListener(lsDef);\n\t\twReply.addSelectionListener(lsDef);\n\t\twPerson.addSelectionListener(lsDef);\n\t\twPhone.addSelectionListener(lsDef);\n\t\twComment.addSelectionListener(lsDef);\n\t\twZipFilename.addSelectionListener(lsDef);\n\n\t\t// Detect [X] or ALT-F4 or something that kills this window...\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\n\n        BaseStepDialog.setTraverseOrder(new Control[] {wName, wDestination, wServer, wUseAuth, wAuthUser, wAuthPass, wReply, \n                wSubject, wAddDate, wIncludeFiles, wTypes, wZipFiles, wZipFilename, wPerson, wPhone, wComment, wOK, wCancel });\n                \n\t\tgetData();\n\t\t\n\t\tBaseStepDialog.setSize(shell);\n\n\t\tshell.open();\n\t\twhile (!shell.isDisposed())\n\t\t{\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\n\t\t}\n\t\treturn jobmail;\n\t}","commit_id":"d752c17acec397613ea6010deb86f0e762ef3adb","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep(Repository rep, long id_job)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.saveRep(rep, id_job);\n\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"id_database\", connection!=null?connection.getID():-1L);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"sql\", sql);\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to save job entry of type SQL to the repository for id_job=\"+id_job, dbe);\n\t\t}\n\t}","id":39868,"modified_method":"public void saveRep(Repository rep, long id_job)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.saveRep(rep, id_job);\n\n\t\t\tif (connection!=null) rep.saveJobEntryAttribute(id_job, getID(), \"connection\", connection.getName());\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"sql\", sql);\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to save job entry of type SQL to the repository for id_job=\"+id_job, dbe);\n\t\t}\n\t}","commit_id":"56e02c09c6c478457275bd207efb64d1b36258f2","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void loadRep(Repository rep, long id_jobentry, ArrayList databases)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\t\t\t\n\t\t\tsuper.loadRep(rep, id_jobentry, databases);\n\n\t\t\tsql = rep.getJobEntryAttributeString(id_jobentry, \"sql\");\n\t\t\tlong id_db = rep.getJobEntryAttributeInteger(id_jobentry, \"id_database\");\n\t\t\tif (id_db>0)\n\t\t\t{\n\t\t\t\tconnection = Const.findDatabase(databases, id_db);\n\t\t\t}\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"unable to load job entry of type SQL to the repository with id_jobentry=\"+id_jobentry, dbe);\n\t\t}\n\t}","id":39869,"modified_method":"public void loadRep(Repository rep, long id_jobentry, ArrayList databases)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\t\t\t\n\t\t\tsuper.loadRep(rep, id_jobentry, databases);\n\n\t\t\tsql = rep.getJobEntryAttributeString(id_jobentry, \"sql\");\n\t\t\tlong id_db = rep.getJobEntryAttributeInteger(id_jobentry, \"id_database\");\n\t\t\tif (id_db>0)\n\t\t\t{\n\t\t\t\tconnection = Const.findDatabase(databases, id_db);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// This is were we end up in normally, the previous lines are for backward compatibility.\n\t\t\t\tconnection = Const.findDatabase(databases, rep.getJobEntryAttributeString(id_jobentry, \"connection\"));\n\t\t\t}\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"unable to load job entry of type SQL to the repository with id_jobentry=\"+id_jobentry, dbe);\n\t\t}\n\t}","commit_id":"56e02c09c6c478457275bd207efb64d1b36258f2","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public JobEntryInterface open()\n\t{\n\t\tShell parent = getParent();\n\t\tDisplay display = parent.getDisplay();\n\n\t\tshell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\n \t\tprops.setLook(shell);\n\n\t\tModifyListener lsMod = new ModifyListener() \n\t\t{\n\t\t\tpublic void modifyText(ModifyEvent e) \n\t\t\t{\n\t\t\t\tjobentry.setChanged();\n\t\t\t}\n\t\t};\n\t\tchanged = jobentry.hasChanged();\n\n\t\tFormLayout formLayout = new FormLayout ();\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\n\n\t\tshell.setLayout(formLayout);\n\t\tshell.setText(\"SQL Script\");\n\t\t\n\t\tint middle = props.getMiddlePct();\n\t\tint margin = Const.MARGIN;\n\n\t\t// Filename line\n\t\twlName=new Label(shell, SWT.RIGHT);\n\t\twlName.setText(\"Job Entry name \");\n \t\tprops.setLook(wlName);\n\t\tfdlName=new FormData();\n\t\tfdlName.left = new FormAttachment(0, 0);\n\t\tfdlName.right= new FormAttachment(middle, 0);\n\t\tfdlName.top  = new FormAttachment(0, margin);\n\t\twlName.setLayoutData(fdlName);\n\t\twName=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wName);\n\t\twName.addModifyListener(lsMod);\n\t\tfdName=new FormData();\n\t\tfdName.left = new FormAttachment(middle, margin);\n\t\tfdName.top  = new FormAttachment(0, margin);\n\t\tfdName.right= new FormAttachment(100, 0);\n\t\twName.setLayoutData(fdName);\n\n\t\t// Connection line\n\t\twlConnection=new Label(shell, SWT.RIGHT);\n\t\twlConnection.setText(\"Connection \");\n \t\tprops.setLook(wlConnection);\n\t\tfdlConnection=new FormData();\n\t\tfdlConnection.left = new FormAttachment(0, 0);\n\t\tfdlConnection.right= new FormAttachment(middle, 0);\n\t\tfdlConnection.top  = new FormAttachment(wName, margin);\n\t\twlConnection.setLayoutData(fdlConnection);\n\t\t\n\t\twbConnection=new Button(shell, SWT.PUSH);\n\t\twbConnection.setText(\"&New...\");\n\t\twbConnection.addSelectionListener(new SelectionAdapter() \n\t\t{\n\t\t\tpublic void widgetSelected(SelectionEvent e) \n\t\t\t{\n\t\t\t\tDatabaseMeta ci = new DatabaseMeta();\n\t\t\t\tDatabaseDialog cid = new DatabaseDialog(shell, SWT.NONE, log, ci, props);\n\t\t\t\tif (cid.open()!=null)\n\t\t\t\t{\n\t\t\t\t\twConnection.add(ci.getName());\n\t\t\t\t\twConnection.select(wConnection.getItemCount()-1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tfdbConnection=new FormData();\n\t\tfdbConnection.right = new FormAttachment(100, 0);\n\t\tfdbConnection.top   = new FormAttachment(wName, margin);\n\t\twbConnection.setLayoutData(fdbConnection);\n\n\t\twConnection=new CCombo(shell, SWT.BORDER | SWT.READ_ONLY);\n \t\tprops.setLook(wConnection);\n\t\tfor (int i=0;i<jobinfo.nrDatabases();i++)\n\t\t{\n\t\t\tDatabaseMeta ci = jobinfo.getDatabase(i);\n\t\t\twConnection.add(ci.getName());\n\t\t}\n\t\twConnection.select(0);\n\t\twConnection.addModifyListener(lsMod);\n\t\tfdConnection=new FormData();\n\t\tfdConnection.left = new FormAttachment(middle, margin);\n\t\tfdConnection.top  = new FormAttachment(wName, margin);\n\t\tfdConnection.right= new FormAttachment(wbConnection, -margin);\n\t\twConnection.setLayoutData(fdConnection);\n\n\n\t\t// Script line\n\t\twlSQL=new Label(shell, SWT.NONE);\n\t\twlSQL.setText(\"SQL Script: \");\n \t\tprops.setLook(wlSQL);\n\t\tfdlSQL=new FormData();\n\t\tfdlSQL.left = new FormAttachment(0, 0);\n\t\tfdlSQL.top  = new FormAttachment(wConnection, margin);\n\t\twlSQL.setLayoutData(fdlSQL);\n\t\twSQL=new Text(shell, SWT.MULTI | SWT.LEFT | SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);\n \t\tprops.setLook(wSQL, Props.WIDGET_STYLE_FIXED);\n\t\twSQL.addModifyListener(lsMod);\n\t\tfdSQL=new FormData();\n\t\tfdSQL.left   = new FormAttachment(0, 0);\n\t\tfdSQL.top    = new FormAttachment(wlSQL, margin);\n\t\tfdSQL.right  = new FormAttachment(100, -5);\n\t\tfdSQL.bottom = new FormAttachment(100, -50);\n\t\twSQL.setLayoutData(fdSQL);\n\n\t\twlPosition=new Label(shell, SWT.NONE);\n\t\twlPosition.setText(\"Linenr: 0        \");\n \t\tprops.setLook(wlPosition);\n\t\tfdlPosition=new FormData();\n\t\tfdlPosition.left = new FormAttachment(0, 0);\n\t\tfdlPosition.top  = new FormAttachment(wSQL, margin);\n\t\twlPosition.setLayoutData(fdlPosition);\n\n\t\twOK=new Button(shell, SWT.PUSH);\n\t\twOK.setText(\" &OK \");\n\t\twCancel=new Button(shell, SWT.PUSH);\n\t\twCancel.setText(\" &Cancel \");\n\n\t\tBaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wlPosition);\n\n\t\t// Add listeners\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel(); } };\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();     } };\n\t\t\n\t\twCancel.addListener(SWT.Selection, lsCancel);\n\t\twOK.addListener    (SWT.Selection, lsOK    );\n\t\t\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\n\t\t\n\t\twName.addSelectionListener( lsDef );\n\t\t\t\t\n\t\t// Detect X or ALT-F4 or something that kills this window...\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\n\n\n\t\twSQL.addKeyListener(new KeyAdapter() {\n\t\t\tpublic void keyReleased(KeyEvent e) \n\t\t\t{\n\t\t\t\tint linenr = wSQL.getCaretLineNumber()+1;\n\t\t\t\twlPosition.setText(\"Linenr: \"+linenr+\"   \");\n\t\t\t}\n\t\t})\n\t\t;\n\t\t\t\t\n\t\tgetData();\n\t\t\n\t\tWindowProperty winprop = props.getScreen(shell.getText());\n\t\tif (winprop!=null) winprop.setShell(shell); else shell.pack();\n\n\t\tshell.open();\n\t\twhile (!shell.isDisposed())\n\t\t{\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\n\t\t}\n\t\treturn jobentry;\n\t}","id":39870,"modified_method":"public JobEntryInterface open()\n\t{\n\t\tShell parent = getParent();\n\t\tDisplay display = parent.getDisplay();\n\n\t\tshell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\n \t\tprops.setLook(shell);\n\n\t\tModifyListener lsMod = new ModifyListener() \n\t\t{\n\t\t\tpublic void modifyText(ModifyEvent e) \n\t\t\t{\n\t\t\t\tjobentry.setChanged();\n\t\t\t}\n\t\t};\n\t\tchanged = jobentry.hasChanged();\n\n\t\tFormLayout formLayout = new FormLayout ();\n\t\tformLayout.marginWidth  = Const.FORM_MARGIN;\n\t\tformLayout.marginHeight = Const.FORM_MARGIN;\n\n\t\tshell.setLayout(formLayout);\n\t\tshell.setText(\"SQL Script\");\n\t\t\n\t\tint middle = props.getMiddlePct();\n\t\tint margin = Const.MARGIN;\n\n\t\twOK=new Button(shell, SWT.PUSH);\n\t\twOK.setText(\" &OK \");\n\t\twCancel=new Button(shell, SWT.PUSH);\n\t\twCancel.setText(\" &Cancel \");\n\n\t\tBaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, null);\n\n\t\t// Filename line\n\t\twlName=new Label(shell, SWT.RIGHT);\n\t\twlName.setText(\"Job Entry name \");\n \t\tprops.setLook(wlName);\n\t\tfdlName=new FormData();\n\t\tfdlName.left = new FormAttachment(0, 0);\n\t\tfdlName.right= new FormAttachment(middle, 0);\n\t\tfdlName.top  = new FormAttachment(0, margin);\n\t\twlName.setLayoutData(fdlName);\n\t\twName=new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wName);\n\t\twName.addModifyListener(lsMod);\n\t\tfdName=new FormData();\n\t\tfdName.left = new FormAttachment(middle, margin);\n\t\tfdName.top  = new FormAttachment(0, margin);\n\t\tfdName.right= new FormAttachment(100, 0);\n\t\twName.setLayoutData(fdName);\n\n\t\t// Connection line\n\t\twlConnection=new Label(shell, SWT.RIGHT);\n\t\twlConnection.setText(\"Connection \");\n \t\tprops.setLook(wlConnection);\n\t\tfdlConnection=new FormData();\n\t\tfdlConnection.left = new FormAttachment(0, 0);\n\t\tfdlConnection.right= new FormAttachment(middle, 0);\n\t\tfdlConnection.top  = new FormAttachment(wName, margin);\n\t\twlConnection.setLayoutData(fdlConnection);\n\t\t\n\t\twbConnection=new Button(shell, SWT.PUSH);\n\t\twbConnection.setText(\"&New...\");\n\t\twbConnection.addSelectionListener(new SelectionAdapter() \n\t\t{\n\t\t\tpublic void widgetSelected(SelectionEvent e) \n\t\t\t{\n\t\t\t\tDatabaseMeta ci = new DatabaseMeta();\n\t\t\t\tDatabaseDialog cid = new DatabaseDialog(shell, SWT.NONE, log, ci, props);\n\t\t\t\tif (cid.open()!=null)\n\t\t\t\t{\n\t\t\t\t\twConnection.add(ci.getName());\n\t\t\t\t\twConnection.select(wConnection.getItemCount()-1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tfdbConnection=new FormData();\n\t\tfdbConnection.right = new FormAttachment(100, 0);\n\t\tfdbConnection.top   = new FormAttachment(wName, margin);\n\t\twbConnection.setLayoutData(fdbConnection);\n\n\t\twConnection=new CCombo(shell, SWT.BORDER | SWT.READ_ONLY);\n \t\tprops.setLook(wConnection);\n\t\tfor (int i=0;i<jobinfo.nrDatabases();i++)\n\t\t{\n\t\t\tDatabaseMeta ci = jobinfo.getDatabase(i);\n\t\t\twConnection.add(ci.getName());\n\t\t}\n\t\twConnection.select(0);\n\t\twConnection.addModifyListener(lsMod);\n\t\tfdConnection=new FormData();\n\t\tfdConnection.left = new FormAttachment(middle, margin);\n\t\tfdConnection.top  = new FormAttachment(wName, margin);\n\t\tfdConnection.right= new FormAttachment(wbConnection, -margin);\n\t\twConnection.setLayoutData(fdConnection);\n\n\n\t\twlPosition=new Label(shell, SWT.NONE);\n\t\twlPosition.setText(\"Linenr: 0        \");\n \t\tprops.setLook(wlPosition);\n\t\tfdlPosition=new FormData();\n\t\tfdlPosition.left   = new FormAttachment(0, 0);\n\t\tfdlPosition.bottom = new FormAttachment(wOK, -margin);\n\t\twlPosition.setLayoutData(fdlPosition);\n\n\t\t// Script line\n\t\twlSQL=new Label(shell, SWT.NONE);\n\t\twlSQL.setText(\"SQL Script: \");\n \t\tprops.setLook(wlSQL);\n\t\tfdlSQL=new FormData();\n\t\tfdlSQL.left = new FormAttachment(0, 0);\n\t\tfdlSQL.top  = new FormAttachment(wConnection, margin);\n\t\twlSQL.setLayoutData(fdlSQL);\n\t\twSQL=new Text(shell, SWT.MULTI | SWT.LEFT | SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);\n \t\tprops.setLook(wSQL, Props.WIDGET_STYLE_FIXED);\n\t\twSQL.addModifyListener(lsMod);\n\t\tfdSQL=new FormData();\n\t\tfdSQL.left   = new FormAttachment(0, 0);\n\t\tfdSQL.top    = new FormAttachment(wlSQL, margin);\n\t\tfdSQL.right  = new FormAttachment(100, -5);\n\t\tfdSQL.bottom = new FormAttachment(wlPosition, -margin);\n\t\twSQL.setLayoutData(fdSQL);\n\n\n\n\t\t// Add listeners\n\t\tlsCancel   = new Listener() { public void handleEvent(Event e) { cancel(); } };\n\t\tlsOK       = new Listener() { public void handleEvent(Event e) { ok();     } };\n\t\t\n\t\twCancel.addListener(SWT.Selection, lsCancel);\n\t\twOK.addListener    (SWT.Selection, lsOK    );\n\t\t\n\t\tlsDef=new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\n\t\t\n\t\twName.addSelectionListener( lsDef );\n\t\t\t\t\n\t\t// Detect X or ALT-F4 or something that kills this window...\n\t\tshell.addShellListener(\tnew ShellAdapter() { public void shellClosed(ShellEvent e) { cancel(); } } );\n\n\n\t\twSQL.addKeyListener(new KeyAdapter() {\n\t\t\tpublic void keyReleased(KeyEvent e) \n\t\t\t{\n\t\t\t\tint linenr = wSQL.getCaretLineNumber()+1;\n\t\t\t\twlPosition.setText(\"Linenr: \"+linenr+\"   \");\n\t\t\t}\n\t\t})\n\t\t;\n\t\t\t\t\n\t\tgetData();\n\t\t\n\t\tWindowProperty winprop = props.getScreen(shell.getText());\n\t\tif (winprop!=null) winprop.setShell(shell); else shell.pack();\n\n\t\tshell.open();\n\t\twhile (!shell.isDisposed())\n\t\t{\n\t\t\t\tif (!display.readAndDispatch()) display.sleep();\n\t\t}\n\t\treturn jobentry;\n\t}","commit_id":"56e02c09c6c478457275bd207efb64d1b36258f2","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep(Repository rep, long id_job)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.saveRep(rep, id_job);\n\t\t\t\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"tablename\", tablename);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"id_database\", connection==null?-1L:connection.getID());\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"unable to save jobentry of type 'table exists' to the repository for id_job=\"+id_job, dbe);\n\t\t}\n\t}","id":39871,"modified_method":"public void saveRep(Repository rep, long id_job)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.saveRep(rep, id_job);\n\t\t\t\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"tablename\", tablename);\n\t\t\tif (connection!=null) rep.saveJobEntryAttribute(id_job, getID(), \"connection\", connection.getName());\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"unable to save jobentry of type 'table exists' to the repository for id_job=\"+id_job, dbe);\n\t\t}\n\t}","commit_id":"56e02c09c6c478457275bd207efb64d1b36258f2","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void loadRep(Repository rep, long id_jobentry, ArrayList databases)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.loadRep(rep, id_jobentry, databases);\n\t\t\t\n\t\t\ttablename  = rep.getJobEntryAttributeString(id_jobentry, \"tablename\");\n\t\t\tlong id_db = rep.getJobEntryAttributeInteger(id_jobentry, \"id_database\");\n\t\t\tif (id_db>0)\n\t\t\t{\n\t\t\t\tconnection = Const.findDatabase(databases, id_db);\n\t\t\t}\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to load job entry of type table exists from the repository for id_jobentry=\"+id_jobentry, dbe);\n\t\t}\n\t}","id":39872,"modified_method":"public void loadRep(Repository rep, long id_jobentry, ArrayList databases)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.loadRep(rep, id_jobentry, databases);\n\t\t\t\n\t\t\ttablename  = rep.getJobEntryAttributeString(id_jobentry, \"tablename\");\n\t\t\tlong id_db = rep.getJobEntryAttributeInteger(id_jobentry, \"id_database\");\n\t\t\tif (id_db>0)\n\t\t\t{\n\t\t\t\tconnection = Const.findDatabase(databases, id_db);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// This is were we end up in normally, the previous lines are for backward compatibility.\n\t\t\t\tconnection = Const.findDatabase(databases, rep.getJobEntryAttributeString(id_jobentry, \"connection\"));\n\t\t\t}\n\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to load job entry of type table exists from the repository for id_jobentry=\"+id_jobentry, dbe);\n\t\t}\n\t}","commit_id":"56e02c09c6c478457275bd207efb64d1b36258f2","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean open()\r\n    {\r\n        display = parent.getDisplay();\r\n        shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\r\n        props.setLook(shell);\r\n\t\tshell.setImage(GUIResource.getInstance().getImageJobGraph());\r\n        \r\n        FormLayout formLayout = new FormLayout ();\r\n        formLayout.marginWidth  = Const.FORM_MARGIN;\r\n        formLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n        shell.setLayout(formLayout);\r\n        shell.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Shell.Title\")); //$NON-NLS-1$\r\n\r\n        int margin = Const.MARGIN;\r\n        int tabsize = 5*margin;\r\n                \r\n        gLocal = new Group(shell, SWT.SHADOW_ETCHED_IN);\r\n        gLocal.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.LocalGroup.Label\")); //$NON-NLS-1$;\r\n        // The layout\r\n        FormLayout localLayout = new FormLayout();\r\n        localLayout.marginWidth  = Const.FORM_MARGIN;\r\n        localLayout.marginHeight = Const.FORM_MARGIN;\r\n        gLocal.setLayout(localLayout);\r\n        // \r\n        FormData fdLocal=new FormData();\r\n        fdLocal.top    = new FormAttachment(0, 0);\r\n        fdLocal.left   = new FormAttachment(0, 0);\r\n        fdLocal.right  = new FormAttachment(100, 0);\r\n        gLocal.setBackground(shell.getBackground()); // the default looks ugly\r\n        gLocal.setLayoutData(fdLocal);\r\n\r\n        /////////////////////////////////////////////////////////////////////////////////////////////////\r\n        // Local execution\r\n        //\r\n        wExecLocal=new Button(gLocal, SWT.RADIO);\r\n        wExecLocal.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ExecLocal.Label\")); //$NON-NLS-1$\r\n        wExecLocal.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ExecLocal.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wExecLocal);\r\n        FormData fdExecLocal = new FormData();\r\n        fdExecLocal.left  = new FormAttachment(0, 0);\r\n        fdExecLocal.right = new FormAttachment(33, 0);\r\n        wExecLocal.setLayoutData(fdExecLocal);\r\n        wExecLocal.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { enableFields(); }});\r\n        \r\n        /////////////////////////////////////////////////////////////////////////////////////////////////\r\n        // remote execution\r\n        //\r\n        wExecRemote=new Button(gLocal, SWT.RADIO);\r\n        wExecRemote.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ExecRemote.Label\")); //$NON-NLS-1$\r\n        wExecRemote.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ExecRemote.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wExecRemote);\r\n        FormData fdExecRemote = new FormData();\r\n        fdExecRemote.left  = new FormAttachment(33, margin);\r\n        fdExecRemote.right = new FormAttachment(66, 0);\r\n        wExecRemote.setLayoutData(fdExecRemote);\r\n        wExecRemote.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { enableFields(); }});\r\n\r\n        wlRemoteHost = new Label(gLocal, SWT.LEFT);\r\n        props.setLook(wlRemoteHost);\r\n        wlRemoteHost.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.RemoteHost.Label\")); //$NON-NLS-1$\r\n        wlRemoteHost.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.RemoteHost.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlRemoteHost = new FormData();\r\n        fdlRemoteHost.left  = new FormAttachment(33, tabsize);\r\n        fdlRemoteHost.top   = new FormAttachment(wExecRemote, margin*2);\r\n        wlRemoteHost.setLayoutData(fdlRemoteHost);\r\n\r\n        wRemoteHost = new CCombo(gLocal, SWT.READ_ONLY | SWT.BORDER);\r\n        wRemoteHost.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.RemoteHost.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wRemoteHost);\r\n        FormData fdRemoteHost = new FormData();\r\n        fdRemoteHost.left  = new FormAttachment(wlRemoteHost, margin);\r\n        fdRemoteHost.right = new FormAttachment(66, 0);\r\n        fdRemoteHost.top   = new FormAttachment(wExecRemote, margin*2);\r\n        wRemoteHost.setLayoutData(fdRemoteHost);\r\n        for (int i=0;i<jobMeta.getSlaveServers().size();i++)\r\n        {\r\n            SlaveServer slaveServer = (SlaveServer)jobMeta.getSlaveServers().get(i);\r\n            wRemoteHost.add(slaveServer.toString());\r\n        }\r\n        \r\n        wPassExport = new Button(gLocal, SWT.CHECK);\r\n        wPassExport.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.PassExport.Label\")); //$NON-NLS-1$\r\n        wPassExport.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.PassExport.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wPassExport);\r\n        FormData fdPassExport = new FormData();\r\n        fdPassExport.left  = new FormAttachment(33, margin);\r\n        fdPassExport.top   = new FormAttachment(wRemoteHost, margin);\r\n        wPassExport.setLayoutData(fdPassExport);\r\n        \r\n        /////////////////////////////////////////////////////////////////////////////////////////////////\r\n        // Replay date, arguments & variables\r\n        //\r\n\r\n        gDetails = new Group(shell, SWT.SHADOW_ETCHED_IN);\r\n        gDetails.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.DetailsGroup.Label\")); //$NON-NLS-1$;\r\n        // The layout\r\n        FormLayout detailsLayout = new FormLayout();\r\n        detailsLayout.marginWidth  = Const.FORM_MARGIN;\r\n        detailsLayout.marginHeight = Const.FORM_MARGIN;\r\n        gDetails.setLayout(detailsLayout);\r\n        // \r\n        FormData fdDetails=new FormData();\r\n        fdDetails.left   = new FormAttachment(0, 0);\r\n        fdDetails.top    = new FormAttachment(gLocal, margin*2);\r\n        fdDetails.right  = new FormAttachment(100, 0);\r\n        gDetails.setBackground(shell.getBackground()); // the default looks ugly\r\n        gDetails.setLayoutData(fdDetails);\r\n\r\n        wSafeMode = new Button(gDetails, SWT.CHECK);\r\n        wSafeMode.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.SafeMode.Label\")); //$NON-NLS-1$\r\n        wSafeMode.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.SafeMode.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wSafeMode);\r\n        FormData fdSafeMode = new FormData();\r\n        fdSafeMode.left  = new FormAttachment(50, margin);\r\n        fdSafeMode.right = new FormAttachment(100, 0);\r\n        fdSafeMode.top   = new FormAttachment(0, 0);\r\n        wSafeMode.setLayoutData(fdSafeMode);\r\n        wSafeMode.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { enableFields(); }});\r\n\r\n        wClearLog = new Button(gDetails, SWT.CHECK);\r\n        wClearLog.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ClearLog.Label\")); //$NON-NLS-1$\r\n        wClearLog.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ClearLog.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wClearLog);\r\n        FormData fdClearLog = new FormData();\r\n        fdClearLog.left  = new FormAttachment( 50, margin);\r\n        fdClearLog.right = new FormAttachment(100, 0);\r\n        fdClearLog.top   = new FormAttachment(wSafeMode, margin);\r\n        wClearLog.setLayoutData(fdClearLog);\r\n        wClearLog.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { enableFields(); }});\r\n        \r\n        wlLogLevel = new Label(gDetails, SWT.LEFT);\r\n        props.setLook(wlLogLevel);\r\n        wlLogLevel.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.LogLevel.Label\")); //$NON-NLS-1$\r\n        wlLogLevel.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.LogLevel.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlLogLevel = new FormData();\r\n        fdlLogLevel.left  = new FormAttachment(0, 0);\r\n        fdlLogLevel.right = new FormAttachment(50, 0);\r\n        fdlLogLevel.top   = new FormAttachment(wClearLog, margin);\r\n        wlLogLevel.setLayoutData(fdlLogLevel);\r\n\r\n        wLogLevel = new CCombo(gDetails, SWT.READ_ONLY | SWT.BORDER);\r\n        wLogLevel.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.LogLevel.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wLogLevel);\r\n        FormData fdLogLevel = new FormData();\r\n        fdLogLevel.left  = new FormAttachment(50, margin);\r\n        fdLogLevel.right = new FormAttachment(100, 0);\r\n        fdLogLevel.top   = new FormAttachment(wClearLog, margin);\r\n        wLogLevel.setLayoutData(fdLogLevel);\r\n        wLogLevel.setItems(LogLevel.getLogLevelDescriptions());\r\n        \r\n        // ReplayDate\r\n        wlReplayDate = new Label(gDetails, SWT.LEFT);\r\n        props.setLook(wlReplayDate);\r\n        wlReplayDate.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ReplayDate.Label\")); //$NON-NLS-1$\r\n        wlReplayDate.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ReplayDate.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlReplayDate = new FormData();\r\n        fdlReplayDate.left   = new FormAttachment(0, 0);\r\n        fdlReplayDate.right  = new FormAttachment(50, 0);\r\n        fdlReplayDate.top    = new FormAttachment(wLogLevel, margin);\r\n        wlReplayDate.setLayoutData(fdlReplayDate);\r\n\r\n        wReplayDate = new Text(gDetails, SWT.LEFT | SWT.BORDER | SWT.SINGLE);\r\n        props.setLook(wReplayDate);\r\n        wReplayDate.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ReplayDate.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdReplayDate = new FormData();\r\n        fdReplayDate.left   = new FormAttachment(50, margin);\r\n        fdReplayDate.right  = new FormAttachment(100, 0);\r\n        fdReplayDate.top    = new FormAttachment(wLogLevel, margin);\r\n        wReplayDate.setLayoutData(fdReplayDate);\r\n\r\n        Label wlStartCopy = new Label(gDetails, SWT.LEFT);\r\n        props.setLook(wlStartCopy);\r\n        wlStartCopy.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.StartCopy.Label\")); //$NON-NLS-1$\r\n        wlStartCopy.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.StartCopy.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlStartCopy = new FormData();\r\n        fdlStartCopy.left  = new FormAttachment(0, 0);\r\n        fdlStartCopy.right = new FormAttachment(50, 0);\r\n        fdlStartCopy.top   = new FormAttachment(wReplayDate, margin);\r\n        wlStartCopy.setLayoutData(fdlStartCopy);\r\n\r\n        wStartCopy = new CCombo(gDetails, SWT.READ_ONLY | SWT.BORDER);\r\n        wStartCopy.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.StartCopy.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wStartCopy);\r\n        FormData fdStartCopy = new FormData();\r\n        fdStartCopy.left  = new FormAttachment(50, margin);\r\n        fdStartCopy.right = new FormAttachment(100, 0);\r\n        fdStartCopy.top   = new FormAttachment(wReplayDate, margin);\r\n        wStartCopy.setLayoutData(fdStartCopy);\r\n        \r\n        String[] names = new String[jobMeta.getJobCopies().size()];\r\n        for (int i=0;i<names.length;i++) {\r\n          JobEntryCopy copy = jobMeta.getJobCopies().get(i);\r\n          names[i] = getJobEntryCopyName(copy);\r\n        }\r\n        wStartCopy.setItems(names);\r\n        \r\n        \r\n        // Variables\r\n        wlVariables = new Label(shell, SWT.LEFT);\r\n        props.setLook(wlVariables);\r\n        wlVariables.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Variables.Label\")); //$NON-NLS-1$\r\n        wlVariables.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Variables.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlVariables = new FormData();\r\n        fdlVariables.left   = new FormAttachment(50, margin);\r\n        fdlVariables.right  = new FormAttachment(100, 0);\r\n        fdlVariables.top    = new FormAttachment(gDetails, margin*2);\r\n        wlVariables.setLayoutData(fdlVariables);\r\n\r\n        ColumnInfo[] cVariables = {\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.VariablesColumn.Argument\"), ColumnInfo.COLUMN_TYPE_TEXT, false, false), //Stepname\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.VariablesColumn.Value\"), ColumnInfo.COLUMN_TYPE_TEXT, false, false), //Preview size\r\n          };\r\n                      \r\n        int nrVariables = configuration.getVariables() !=null ? configuration.getVariables().size() : 0; \r\n        wVariables = new TableView(jobMeta, shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI, cVariables, nrVariables, false, null, props);\r\n        FormData fdVariables = new FormData();\r\n        fdVariables.left   = new FormAttachment(50, margin);\r\n        fdVariables.right  = new FormAttachment(100, 0);\r\n        fdVariables.top    = new FormAttachment(wlVariables, margin);\r\n        fdVariables.bottom = new FormAttachment(wlVariables, 300);\r\n        wVariables.setLayoutData(fdVariables);        \r\n\r\n        // Named parameters\r\n        wlParams = new Label(shell, SWT.LEFT);\r\n        props.setLook(wlParams);\r\n        wlParams.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Params.Label\")); //$NON-NLS-1$\r\n        wlParams.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Params.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlParams = new FormData();\r\n        fdlParams.left   = new FormAttachment(0, 0);\r\n        fdlParams.right  = new FormAttachment(50, -margin);\r\n        fdlParams.top    = new FormAttachment(gDetails, margin*2);\r\n        wlParams.setLayoutData(fdlParams);\r\n\r\n        ColumnInfo[] cParams = {\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ParamsColumn.Argument\"), ColumnInfo.COLUMN_TYPE_TEXT, false, true ), // Argument\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ParamsColumn.Value\"), ColumnInfo.COLUMN_TYPE_TEXT, false, false), // Actual value\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ParamsColumn.Default\"), ColumnInfo.COLUMN_TYPE_TEXT, false, true), // Default value\r\n          };\r\n              \r\n        String[] namedParams = jobMeta.listParameters();\r\n        int nrParams = namedParams.length; \r\n        wParams = new TableView(jobMeta, shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI, cParams, nrParams, true, null, props);\r\n        FormData fdParams = new FormData();\r\n        fdParams.left   = new FormAttachment(0, 0);\r\n        fdParams.right  = new FormAttachment(50, -margin);\r\n        fdParams.top    = new FormAttachment(wlParams, margin);        \r\n        fdParams.bottom = new FormAttachment(wlParams, 150);\r\n        wParams.setLayoutData(fdParams);                        \r\n\r\n        // Arguments\r\n        wlArguments = new Label(shell, SWT.LEFT);\r\n        props.setLook(wlArguments);\r\n        wlArguments.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Arguments.Label\")); //$NON-NLS-1$\r\n        wlArguments.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Arguments.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlArguments = new FormData();\r\n        fdlArguments.left   = new FormAttachment(0, 0);\r\n        fdlArguments.right  = new FormAttachment(50, -margin);\r\n        fdlArguments.top    = new FormAttachment(wParams, 2*margin);\r\n        wlArguments.setLayoutData(fdlArguments);\r\n\r\n        ColumnInfo[] cArguments = {\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ArgumentsColumn.Argument\"), ColumnInfo.COLUMN_TYPE_TEXT, false, true ), //Stepname\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ArgumentsColumn.Value\"), ColumnInfo.COLUMN_TYPE_TEXT, false, false), //Preview size\r\n          };\r\n              \r\n        int nrArguments = configuration.getArguments() !=null ? configuration.getArguments().size() : 10; \r\n        wArguments = new TableView(jobMeta, shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI, cArguments, nrArguments, false, null, props);\r\n        FormData fdArguments = new FormData();\r\n        fdArguments.left   = new FormAttachment(0, 0);\r\n        fdArguments.right  = new FormAttachment(50, -margin);\r\n        fdArguments.top    = new FormAttachment(wlArguments, margin);\r\n        fdArguments.bottom = new FormAttachment(wlArguments, 150);\r\n        wArguments.setLayoutData(fdArguments);\r\n        \r\n        wOK = new Button(shell, SWT.PUSH);\r\n        wOK.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Button.Launch\"));\r\n        wOK.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { ok(); }});\r\n        wCancel = new Button(shell, SWT.PUSH);\r\n        wCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\"));\r\n        wCancel.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { cancel(); }});\r\n        \r\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, wArguments);\r\n        \r\n\r\n\r\n        getData();\r\n        \r\n        BaseStepDialog.setSize(shell);\r\n        \r\n        // Set the focus on the OK button\r\n        wOK.setFocus();\r\n        \r\n        shell.open();\r\n        while (!shell.isDisposed())\r\n        {\r\n            if (!display.readAndDispatch()) display.sleep();\r\n        }\r\n        \r\n        return retval;\r\n    }","id":39873,"modified_method":"public boolean open()\r\n    {\r\n        display = parent.getDisplay();\r\n        shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\r\n        props.setLook(shell);\r\n\t\tshell.setImage(GUIResource.getInstance().getImageJobGraph());\r\n        \r\n        FormLayout formLayout = new FormLayout ();\r\n        formLayout.marginWidth  = Const.FORM_MARGIN;\r\n        formLayout.marginHeight = Const.FORM_MARGIN;\r\n\r\n        shell.setLayout(formLayout);\r\n        shell.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Shell.Title\")); //$NON-NLS-1$\r\n\r\n        int margin = Const.MARGIN;\r\n        int tabsize = 5*margin;\r\n              \r\n        wOK = new Button(shell, SWT.PUSH);\r\n        wOK.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Button.Launch\"));\r\n        wOK.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { ok(); }});\r\n        wCancel = new Button(shell, SWT.PUSH);\r\n        wCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\"));\r\n        wCancel.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { cancel(); }});\r\n        \r\n        BaseStepDialog.positionBottomButtons(shell, new Button[] { wOK, wCancel }, margin, null);\r\n        \r\n\r\n        \r\n        gLocal = new Group(shell, SWT.SHADOW_ETCHED_IN);\r\n        gLocal.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.LocalGroup.Label\")); //$NON-NLS-1$;\r\n        // The layout\r\n        FormLayout localLayout = new FormLayout();\r\n        localLayout.marginWidth  = Const.FORM_MARGIN;\r\n        localLayout.marginHeight = Const.FORM_MARGIN;\r\n        gLocal.setLayout(localLayout);\r\n        // \r\n        FormData fdLocal=new FormData();\r\n        fdLocal.top    = new FormAttachment(0, 0);\r\n        fdLocal.left   = new FormAttachment(0, 0);\r\n        fdLocal.right  = new FormAttachment(100, 0);\r\n        gLocal.setBackground(shell.getBackground()); // the default looks ugly\r\n        gLocal.setLayoutData(fdLocal);\r\n\r\n        /////////////////////////////////////////////////////////////////////////////////////////////////\r\n        // Local execution\r\n        //\r\n        wExecLocal=new Button(gLocal, SWT.RADIO);\r\n        wExecLocal.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ExecLocal.Label\")); //$NON-NLS-1$\r\n        wExecLocal.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ExecLocal.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wExecLocal);\r\n        FormData fdExecLocal = new FormData();\r\n        fdExecLocal.left  = new FormAttachment(0, 0);\r\n        fdExecLocal.right = new FormAttachment(33, 0);\r\n        wExecLocal.setLayoutData(fdExecLocal);\r\n        wExecLocal.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { enableFields(); }});\r\n        \r\n        /////////////////////////////////////////////////////////////////////////////////////////////////\r\n        // remote execution\r\n        //\r\n        wExecRemote=new Button(gLocal, SWT.RADIO);\r\n        wExecRemote.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ExecRemote.Label\")); //$NON-NLS-1$\r\n        wExecRemote.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ExecRemote.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wExecRemote);\r\n        FormData fdExecRemote = new FormData();\r\n        fdExecRemote.left  = new FormAttachment(33, margin);\r\n        fdExecRemote.right = new FormAttachment(66, 0);\r\n        wExecRemote.setLayoutData(fdExecRemote);\r\n        wExecRemote.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { enableFields(); }});\r\n\r\n        wlRemoteHost = new Label(gLocal, SWT.LEFT);\r\n        props.setLook(wlRemoteHost);\r\n        wlRemoteHost.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.RemoteHost.Label\")); //$NON-NLS-1$\r\n        wlRemoteHost.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.RemoteHost.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlRemoteHost = new FormData();\r\n        fdlRemoteHost.left  = new FormAttachment(33, tabsize);\r\n        fdlRemoteHost.top   = new FormAttachment(wExecRemote, margin*2);\r\n        wlRemoteHost.setLayoutData(fdlRemoteHost);\r\n\r\n        wRemoteHost = new CCombo(gLocal, SWT.READ_ONLY | SWT.BORDER);\r\n        wRemoteHost.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.RemoteHost.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wRemoteHost);\r\n        FormData fdRemoteHost = new FormData();\r\n        fdRemoteHost.left  = new FormAttachment(wlRemoteHost, margin);\r\n        fdRemoteHost.right = new FormAttachment(66, 0);\r\n        fdRemoteHost.top   = new FormAttachment(wExecRemote, margin*2);\r\n        wRemoteHost.setLayoutData(fdRemoteHost);\r\n        for (int i=0;i<jobMeta.getSlaveServers().size();i++)\r\n        {\r\n            SlaveServer slaveServer = (SlaveServer)jobMeta.getSlaveServers().get(i);\r\n            wRemoteHost.add(slaveServer.toString());\r\n        }\r\n        \r\n        wPassExport = new Button(gLocal, SWT.CHECK);\r\n        wPassExport.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.PassExport.Label\")); //$NON-NLS-1$\r\n        wPassExport.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.PassExport.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wPassExport);\r\n        FormData fdPassExport = new FormData();\r\n        fdPassExport.left  = new FormAttachment(33, margin);\r\n        fdPassExport.top   = new FormAttachment(wRemoteHost, margin);\r\n        wPassExport.setLayoutData(fdPassExport);\r\n        \r\n        /////////////////////////////////////////////////////////////////////////////////////////////////\r\n        // Replay date, arguments & variables\r\n        //\r\n\r\n        gDetails = new Group(shell, SWT.SHADOW_ETCHED_IN);\r\n        gDetails.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.DetailsGroup.Label\")); //$NON-NLS-1$;\r\n        // The layout\r\n        FormLayout detailsLayout = new FormLayout();\r\n        detailsLayout.marginWidth  = Const.FORM_MARGIN;\r\n        detailsLayout.marginHeight = Const.FORM_MARGIN;\r\n        gDetails.setLayout(detailsLayout);\r\n        // \r\n        FormData fdDetails=new FormData();\r\n        fdDetails.left   = new FormAttachment(0, 0);\r\n        fdDetails.top    = new FormAttachment(gLocal, margin*2);\r\n        fdDetails.right  = new FormAttachment(100, 0);\r\n        gDetails.setBackground(shell.getBackground()); // the default looks ugly\r\n        gDetails.setLayoutData(fdDetails);\r\n\r\n        wSafeMode = new Button(gDetails, SWT.CHECK);\r\n        wSafeMode.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.SafeMode.Label\")); //$NON-NLS-1$\r\n        wSafeMode.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.SafeMode.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wSafeMode);\r\n        FormData fdSafeMode = new FormData();\r\n        fdSafeMode.left  = new FormAttachment(50, margin);\r\n        fdSafeMode.right = new FormAttachment(100, 0);\r\n        fdSafeMode.top   = new FormAttachment(0, 0);\r\n        wSafeMode.setLayoutData(fdSafeMode);\r\n        wSafeMode.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { enableFields(); }});\r\n\r\n        wClearLog = new Button(gDetails, SWT.CHECK);\r\n        wClearLog.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ClearLog.Label\")); //$NON-NLS-1$\r\n        wClearLog.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ClearLog.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wClearLog);\r\n        FormData fdClearLog = new FormData();\r\n        fdClearLog.left  = new FormAttachment( 50, margin);\r\n        fdClearLog.right = new FormAttachment(100, 0);\r\n        fdClearLog.top   = new FormAttachment(wSafeMode, margin);\r\n        wClearLog.setLayoutData(fdClearLog);\r\n        wClearLog.addSelectionListener(new SelectionAdapter() { public void widgetSelected(SelectionEvent e) { enableFields(); }});\r\n        \r\n        wlLogLevel = new Label(gDetails, SWT.LEFT);\r\n        props.setLook(wlLogLevel);\r\n        wlLogLevel.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.LogLevel.Label\")); //$NON-NLS-1$\r\n        wlLogLevel.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.LogLevel.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlLogLevel = new FormData();\r\n        fdlLogLevel.left  = new FormAttachment(0, 0);\r\n        fdlLogLevel.right = new FormAttachment(50, 0);\r\n        fdlLogLevel.top   = new FormAttachment(wClearLog, margin);\r\n        wlLogLevel.setLayoutData(fdlLogLevel);\r\n\r\n        wLogLevel = new CCombo(gDetails, SWT.READ_ONLY | SWT.BORDER);\r\n        wLogLevel.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.LogLevel.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wLogLevel);\r\n        FormData fdLogLevel = new FormData();\r\n        fdLogLevel.left  = new FormAttachment(50, margin);\r\n        fdLogLevel.right = new FormAttachment(100, 0);\r\n        fdLogLevel.top   = new FormAttachment(wClearLog, margin);\r\n        wLogLevel.setLayoutData(fdLogLevel);\r\n        wLogLevel.setItems(LogLevel.getLogLevelDescriptions());\r\n        \r\n        // ReplayDate\r\n        wlReplayDate = new Label(gDetails, SWT.LEFT);\r\n        props.setLook(wlReplayDate);\r\n        wlReplayDate.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ReplayDate.Label\")); //$NON-NLS-1$\r\n        wlReplayDate.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ReplayDate.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlReplayDate = new FormData();\r\n        fdlReplayDate.left   = new FormAttachment(0, 0);\r\n        fdlReplayDate.right  = new FormAttachment(50, 0);\r\n        fdlReplayDate.top    = new FormAttachment(wLogLevel, margin);\r\n        wlReplayDate.setLayoutData(fdlReplayDate);\r\n\r\n        wReplayDate = new Text(gDetails, SWT.LEFT | SWT.BORDER | SWT.SINGLE);\r\n        props.setLook(wReplayDate);\r\n        wReplayDate.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ReplayDate.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdReplayDate = new FormData();\r\n        fdReplayDate.left   = new FormAttachment(50, margin);\r\n        fdReplayDate.right  = new FormAttachment(100, 0);\r\n        fdReplayDate.top    = new FormAttachment(wLogLevel, margin);\r\n        wReplayDate.setLayoutData(fdReplayDate);\r\n\r\n        Label wlStartCopy = new Label(gDetails, SWT.LEFT);\r\n        props.setLook(wlStartCopy);\r\n        wlStartCopy.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.StartCopy.Label\")); //$NON-NLS-1$\r\n        wlStartCopy.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.StartCopy.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlStartCopy = new FormData();\r\n        fdlStartCopy.left  = new FormAttachment(0, 0);\r\n        fdlStartCopy.right = new FormAttachment(50, 0);\r\n        fdlStartCopy.top   = new FormAttachment(wReplayDate, margin);\r\n        wlStartCopy.setLayoutData(fdlStartCopy);\r\n\r\n        wStartCopy = new CCombo(gDetails, SWT.READ_ONLY | SWT.BORDER);\r\n        wStartCopy.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.StartCopy.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        props.setLook(wStartCopy);\r\n        FormData fdStartCopy = new FormData();\r\n        fdStartCopy.left  = new FormAttachment(50, margin);\r\n        fdStartCopy.right = new FormAttachment(100, 0);\r\n        fdStartCopy.top   = new FormAttachment(wReplayDate, margin);\r\n        wStartCopy.setLayoutData(fdStartCopy);\r\n        \r\n        String[] names = new String[jobMeta.getJobCopies().size()];\r\n        for (int i=0;i<names.length;i++) {\r\n          JobEntryCopy copy = jobMeta.getJobCopies().get(i);\r\n          names[i] = getJobEntryCopyName(copy);\r\n        }\r\n        wStartCopy.setItems(names);\r\n        \r\n        \r\n        // Variables\r\n        wlVariables = new Label(shell, SWT.LEFT);\r\n        props.setLook(wlVariables);\r\n        wlVariables.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Variables.Label\")); //$NON-NLS-1$\r\n        wlVariables.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Variables.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlVariables = new FormData();\r\n        fdlVariables.left   = new FormAttachment(50, margin);\r\n        fdlVariables.right  = new FormAttachment(100, 0);\r\n        fdlVariables.top    = new FormAttachment(gDetails, margin*2);\r\n        wlVariables.setLayoutData(fdlVariables);\r\n\r\n        ColumnInfo[] cVariables = {\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.VariablesColumn.Argument\"), ColumnInfo.COLUMN_TYPE_TEXT, false, false), //Stepname\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.VariablesColumn.Value\"), ColumnInfo.COLUMN_TYPE_TEXT, false, false), //Preview size\r\n          };\r\n                      \r\n        int nrVariables = configuration.getVariables() !=null ? configuration.getVariables().size() : 0; \r\n        wVariables = new TableView(jobMeta, shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI, cVariables, nrVariables, false, null, props);\r\n        FormData fdVariables = new FormData();\r\n        fdVariables.left   = new FormAttachment(50, margin);\r\n        fdVariables.right  = new FormAttachment(100, 0);\r\n        fdVariables.top    = new FormAttachment(wlVariables, margin);\r\n        fdVariables.bottom = new FormAttachment(wOK, -margin*2);\r\n        wVariables.setLayoutData(fdVariables);        \r\n\r\n        // Named parameters\r\n        wlParams = new Label(shell, SWT.LEFT);\r\n        props.setLook(wlParams);\r\n        wlParams.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Params.Label\")); //$NON-NLS-1$\r\n        wlParams.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Params.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlParams = new FormData();\r\n        fdlParams.left   = new FormAttachment(0, 0);\r\n        fdlParams.right  = new FormAttachment(50, -margin);\r\n        fdlParams.top    = new FormAttachment(gDetails, margin*2);\r\n        wlParams.setLayoutData(fdlParams);\r\n\r\n        ColumnInfo[] cParams = {\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ParamsColumn.Argument\"), ColumnInfo.COLUMN_TYPE_TEXT, false, true ), // Argument\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ParamsColumn.Value\"), ColumnInfo.COLUMN_TYPE_TEXT, false, false), // Actual value\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ParamsColumn.Default\"), ColumnInfo.COLUMN_TYPE_TEXT, false, true), // Default value\r\n          };\r\n              \r\n        String[] namedParams = jobMeta.listParameters();\r\n        int nrParams = namedParams.length; \r\n        wParams = new TableView(jobMeta, shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI, cParams, nrParams, true, null, props);\r\n        FormData fdParams = new FormData();\r\n        fdParams.left   = new FormAttachment(0, 0);\r\n        fdParams.right  = new FormAttachment(50, -margin);\r\n        fdParams.top    = new FormAttachment(wlParams, margin);        \r\n        fdParams.bottom = new FormAttachment(wlParams, 150);\r\n        wParams.setLayoutData(fdParams);                        \r\n\r\n        // Arguments\r\n        wlArguments = new Label(shell, SWT.LEFT);\r\n        props.setLook(wlArguments);\r\n        wlArguments.setText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Arguments.Label\")); //$NON-NLS-1$\r\n        wlArguments.setToolTipText(BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.Arguments.Tooltip\")); //$NON-NLS-1$ //$NON-NLS-2$\r\n        FormData fdlArguments = new FormData();\r\n        fdlArguments.left   = new FormAttachment(0, 0);\r\n        fdlArguments.right  = new FormAttachment(50, -margin);\r\n        fdlArguments.top    = new FormAttachment(wParams, 2*margin);\r\n        wlArguments.setLayoutData(fdlArguments);\r\n\r\n        ColumnInfo[] cArguments = {\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ArgumentsColumn.Argument\"), ColumnInfo.COLUMN_TYPE_TEXT, false, true ), //Stepname\r\n            new ColumnInfo( BaseMessages.getString(PKG, \"JobExecutionConfigurationDialog.ArgumentsColumn.Value\"), ColumnInfo.COLUMN_TYPE_TEXT, false, false), //Preview size\r\n          };\r\n              \r\n        int nrArguments = configuration.getArguments() !=null ? configuration.getArguments().size() : 10; \r\n        wArguments = new TableView(jobMeta, shell, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI, cArguments, nrArguments, false, null, props);\r\n        FormData fdArguments = new FormData();\r\n        fdArguments.left   = new FormAttachment(0, 0);\r\n        fdArguments.right  = new FormAttachment(50, -margin);\r\n        fdArguments.top    = new FormAttachment(wlArguments, margin);\r\n        fdArguments.bottom = new FormAttachment(wOK, -margin*2);\r\n        wArguments.setLayoutData(fdArguments);\r\n        \r\n\r\n\r\n        getData();\r\n        \r\n        BaseStepDialog.setSize(shell);\r\n        \r\n        // Set the focus on the OK button\r\n        wOK.setFocus();\r\n        \r\n        shell.open();\r\n        while (!shell.isDisposed())\r\n        {\r\n            if (!display.readAndDispatch()) display.sleep();\r\n        }\r\n        \r\n        return retval;\r\n    }","commit_id":"e422bf25f2673e8980da1b8b4220144769368f27","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void readExternal(Element parentNode) {\n    List children = parentNode.getChildren(ELEMENT_OPTION);\n    for (final Object aChildren : children) {\n      Element element = (Element)aChildren;\n\n      String name = element.getAttributeValue(ATTRIBUTE_NAME);\n      String value = element.getAttributeValue(ATTRIBUTE_VALUE);\n\n      if (OPTION_BROWSER_PATH.equals(name)) {\n        myBrowserPath = value;\n      }\n      if (OPTION_LAST_TIP.equals(name)) {\n        try {\n          myLastTip = Integer.parseInt(value);\n        }\n        catch (NumberFormatException ex) {\n          myLastTip = 0;\n        }\n      }\n      if (OPTION_SHOW_TIPS_ON_STARTUP.equals(name)) {\n        try {\n          myShowTipsOnStartup = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          myShowTipsOnStartup = true;\n        }\n      }\n      if (OPTION_SHOW_OCCUPIED_MEMORY.equals(name)) {\n        try {\n          myShowOccupiedMemory = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          myShowOccupiedMemory = false;\n        }\n      }\n      if (OPTION_REOPEN_LAST_PROJECT.equals(name)) {\n        try {\n          myReopenLastProject = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          myReopenLastProject = true;\n        }\n      }\n      if (OPTION_AUTO_SYNC_FILES.equals(name)) {\n        try {\n          mySyncOnFrameActivation = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          mySyncOnFrameActivation = true;\n        }\n      }\n      if (OPTION_AUTO_SAVE_FILES.equals(name)) {\n        try {\n          mySaveOnFrameDeactivation = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          mySaveOnFrameDeactivation = true;\n        }\n      }\n      if (OPTION_AUTO_SAVE_IF_INACTIVE.equals(name) && value != null) {\n        myAutoSaveIfInactive = Boolean.valueOf(value).booleanValue();\n      }\n      if (OPTION_INACTIVE_TIMEOUT.equals(name)) {\n        try {\n          int inactiveTimeout = Integer.parseInt(value);\n          if (inactiveTimeout > 0) {\n            myInactiveTimeout = inactiveTimeout;\n          }\n        }\n        catch (Exception ignored) {\n        }\n      }\n      if (OPTION_CHARSET.equals(name)) {\n        //for migration\n        myCharset = CharsetToolkit.forName(value);\n        oldCharsetSettingsHaveBeenRead = true;\n      }\n      if (OPTION_UTFGUESSING.equals(name)) {\n        myUseUTFGuessing = Boolean.valueOf(value).booleanValue();\n        oldCharsetSettingsHaveBeenRead = true;\n      }\n\n      if (OPTION_USE_DEFAULT_BROWSER.equals(name)) {\n        try {\n          myUseDefaultBrowser = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          myUseDefaultBrowser = true;\n        }\n      }\n\n      if (OPTION_CONFIRM_EXTRACT_FILES.equals(name)) {\n        try {\n          myConfirmExtractFiles = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          myConfirmExtractFiles = true;\n        }\n      }\n\n      if (OPTION_SEARCH_IN_BACKGROUND.equals(name)) {\n        try {\n          mySearchInBackground = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          mySearchInBackground = false;\n        }\n      }\n\n      if (OPTION_CONFIRM_EXIT.equals(name)) {\n        try {\n          myConfirmExit = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          myConfirmExit = false;\n        }\n      }\n\n      if (OPTION_CONFIRM_OPEN_NEW_PROJECT.equals(name)) {\n        try {\n          myConfirmOpenNewProject = Integer.valueOf(value).intValue();\n        }\n        catch (Exception ex) {\n          myConfirmOpenNewProject = -1;\n        }\n      }\n\n      if (OPTION_LAST_PROJECT_LOCATION.equals(name)) {\n        try {\n          myLastProjectLocation = value;\n        }\n        catch (Exception ex) {\n          myLastProjectLocation = null;\n        }\n      }\n    }\n  }","id":39874,"modified_method":"public void readExternal(Element parentNode) {\n    List children = parentNode.getChildren(ELEMENT_OPTION);\n    for (final Object aChildren : children) {\n      Element element = (Element)aChildren;\n\n      String name = element.getAttributeValue(ATTRIBUTE_NAME);\n      String value = element.getAttributeValue(ATTRIBUTE_VALUE);\n\n      if (OPTION_BROWSER_PATH.equals(name)) {\n        myBrowserPath = value;\n      }\n      if (OPTION_LAST_TIP.equals(name)) {\n        try {\n          myLastTip = Integer.parseInt(value);\n        }\n        catch (NumberFormatException ex) {\n          myLastTip = 0;\n        }\n      }\n      if (OPTION_SHOW_TIPS_ON_STARTUP.equals(name)) {\n        try {\n          myShowTipsOnStartup = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          myShowTipsOnStartup = true;\n        }\n      }\n      if (OPTION_SHOW_OCCUPIED_MEMORY.equals(name)) {\n        try {\n          myShowOccupiedMemory = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          myShowOccupiedMemory = false;\n        }\n      }\n      if (OPTION_REOPEN_LAST_PROJECT.equals(name)) {\n        try {\n          myReopenLastProject = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          myReopenLastProject = true;\n        }\n      }\n      if (OPTION_AUTO_SYNC_FILES.equals(name)) {\n        try {\n          mySyncOnFrameActivation = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          mySyncOnFrameActivation = true;\n        }\n      }\n      if (OPTION_AUTO_SAVE_FILES.equals(name)) {\n        try {\n          mySaveOnFrameDeactivation = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          mySaveOnFrameDeactivation = true;\n        }\n      }\n      if (OPTION_AUTO_SAVE_IF_INACTIVE.equals(name) && value != null) {\n        myAutoSaveIfInactive = Boolean.valueOf(value).booleanValue();\n      }\n      if (OPTION_INACTIVE_TIMEOUT.equals(name)) {\n        try {\n          int inactiveTimeout = Integer.parseInt(value);\n          if (inactiveTimeout > 0) {\n            myInactiveTimeout = inactiveTimeout;\n          }\n        }\n        catch (Exception ignored) {\n        }\n      }\n      if (OPTION_CHARSET.equals(name)) {\n        //for migration\n        myCharset = CharsetToolkit.forName(value);\n        oldCharsetSettingsHaveBeenRead = true;\n      }\n      if (OPTION_UTFGUESSING.equals(name)) {\n        myUseUTFGuessing = Boolean.valueOf(value).booleanValue();\n        oldCharsetSettingsHaveBeenRead = true;\n      }\n\n      if (OPTION_USE_DEFAULT_BROWSER.equals(name)) {\n        try {\n          myUseDefaultBrowser = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          myUseDefaultBrowser = true;\n        }\n      }\n\n      if (OPTION_CONFIRM_EXTRACT_FILES.equals(name)) {\n        try {\n          myConfirmExtractFiles = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          myConfirmExtractFiles = true;\n        }\n      }\n\n      if (OPTION_SEARCH_IN_BACKGROUND.equals(name)) {\n        try {\n          mySearchInBackground = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          mySearchInBackground = false;\n        }\n      }\n\n      if (OPTION_CONFIRM_EXIT.equals(name)) {\n        try {\n          myConfirmExit = Boolean.valueOf(value).booleanValue();\n        }\n        catch (Exception ex) {\n          myConfirmExit = false;\n        }\n      }\n\n      if (OPTION_CONFIRM_OPEN_NEW_PROJECT.equals(name)) {\n        try {\n          myConfirmOpenNewProject = Integer.valueOf(value).intValue();\n        }\n        catch (Exception ex) {\n          myConfirmOpenNewProject = OPEN_PROJECT_ASK;\n        }\n      }\n\n      if (OPTION_LAST_PROJECT_LOCATION.equals(name)) {\n        try {\n          myLastProjectLocation = value;\n        }\n        catch (Exception ex) {\n          myLastProjectLocation = null;\n        }\n      }\n    }\n  }","commit_id":"5c7f40b17b920829c245ed92c762e7142f129594","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * @return\n   * <ul>\n   * <li>0 if new project should be opened in new window\n   * <li>1 if new project should be opened in same window\n   * <li>-1 if a confirmation dialog should be shown\n   * <\/ul>\n   */\n  public int getConfirmOpenNewProject() {\n    return myConfirmOpenNewProject;\n  }","id":39875,"modified_method":"/**\n   * @return\n   * <ul>\n   * <li>{@link GeneralSettings#OPEN_PROJECT_NEW_WINDOW} if new project should be opened in new window\n   * <li>{@link GeneralSettings#OPEN_PROJECT_SAME_WINDOW} if new project should be opened in same window\n   * <li>{@link GeneralSettings#OPEN_PROJECT_ASK} if a confirmation dialog should be shown\n   * <\/ul>\n   */\n  public int getConfirmOpenNewProject() {\n    return myConfirmOpenNewProject;\n  }","commit_id":"5c7f40b17b920829c245ed92c762e7142f129594","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isModified() {\n    if (super.isModified()) return true;\n    boolean isModified = false;\n    GeneralSettings settings = GeneralSettings.getInstance();\n    isModified |= settings.isReopenLastProject() != myComponent.myChkReopenLastProject.isSelected();\n    isModified |= settings.isSyncOnFrameActivation() != myComponent.myChkSyncOnFrameActivation.isSelected();\n    isModified |= settings.isSaveOnFrameDeactivation() != myComponent.myChkSaveOnFrameDeactivation.isSelected();\n    isModified |= settings.isAutoSaveIfInactive() != myComponent.myChkAutoSaveIfInactive.isSelected();\n    isModified |= settings.isConfirmExit() != myComponent.myConfirmExit.isSelected();\n\n    int openProjectOption = settings.getConfirmOpenNewProject();\n\n    isModified |= (myComponent.myConfirmFrameToOpenCheckBox.isSelected() && openProjectOption >= 0) || (!myComponent.myConfirmFrameToOpenCheckBox.isSelected() == openProjectOption < 0);\n\n    int inactiveTimeout = -1;\n    try {\n      inactiveTimeout = Integer.parseInt(myComponent.myTfInactiveTimeout.getText());\n    }\n    catch (NumberFormatException e) {\n    }\n\n    isModified |= inactiveTimeout > 0 && settings.getInactiveTimeout() != inactiveTimeout;\n\n    return isModified;\n  }","id":39876,"modified_method":"public boolean isModified() {\n    if (super.isModified()) return true;\n    boolean isModified = false;\n    GeneralSettings settings = GeneralSettings.getInstance();\n    isModified |= settings.isReopenLastProject() != myComponent.myChkReopenLastProject.isSelected();\n    isModified |= settings.isSyncOnFrameActivation() != myComponent.myChkSyncOnFrameActivation.isSelected();\n    isModified |= settings.isSaveOnFrameDeactivation() != myComponent.myChkSaveOnFrameDeactivation.isSelected();\n    isModified |= settings.isAutoSaveIfInactive() != myComponent.myChkAutoSaveIfInactive.isSelected();\n    isModified |= settings.isConfirmExit() != myComponent.myConfirmExit.isSelected();\n\n    int openProjectOption = settings.getConfirmOpenNewProject();\n\n    boolean savedOptionIsAsk = openProjectOption == GeneralSettings.OPEN_PROJECT_ASK;\n    isModified |= myComponent.myConfirmFrameToOpenCheckBox.isSelected() != savedOptionIsAsk;\n\n    int inactiveTimeout = -1;\n    try {\n      inactiveTimeout = Integer.parseInt(myComponent.myTfInactiveTimeout.getText());\n    }\n    catch (NumberFormatException ignored) {\n    }\n\n    isModified |= inactiveTimeout > 0 && settings.getInactiveTimeout() != inactiveTimeout;\n\n    return isModified;\n  }","commit_id":"5c7f40b17b920829c245ed92c762e7142f129594","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void reset() {\n    super.reset();\n    GeneralSettings settings = GeneralSettings.getInstance();\n    myComponent.myChkReopenLastProject.setSelected(settings.isReopenLastProject());\n    myComponent.myChkSyncOnFrameActivation.setSelected(settings.isSyncOnFrameActivation());\n    myComponent.myChkSaveOnFrameDeactivation.setSelected(settings.isSaveOnFrameDeactivation());\n\n    myComponent.myChkAutoSaveIfInactive.setSelected(settings.isAutoSaveIfInactive());\n    myComponent.myTfInactiveTimeout.setText(Integer.toString(settings.getInactiveTimeout()));\n    myComponent.myTfInactiveTimeout.setEditable(settings.isAutoSaveIfInactive());\n    myComponent.myConfirmExit.setSelected(settings.isConfirmExit());\n    myComponent.myConfirmFrameToOpenCheckBox.setSelected(settings.getConfirmOpenNewProject() < 0);\n  }","id":39877,"modified_method":"public void reset() {\n    super.reset();\n    GeneralSettings settings = GeneralSettings.getInstance();\n    myComponent.myChkReopenLastProject.setSelected(settings.isReopenLastProject());\n    myComponent.myChkSyncOnFrameActivation.setSelected(settings.isSyncOnFrameActivation());\n    myComponent.myChkSaveOnFrameDeactivation.setSelected(settings.isSaveOnFrameDeactivation());\n\n    myComponent.myChkAutoSaveIfInactive.setSelected(settings.isAutoSaveIfInactive());\n    myComponent.myTfInactiveTimeout.setText(Integer.toString(settings.getInactiveTimeout()));\n    myComponent.myTfInactiveTimeout.setEditable(settings.isAutoSaveIfInactive());\n    myComponent.myConfirmExit.setSelected(settings.isConfirmExit());\n    myComponent.myConfirmFrameToOpenCheckBox.setSelected(settings.getConfirmOpenNewProject() == GeneralSettings.OPEN_PROJECT_ASK);\n  }","commit_id":"5c7f40b17b920829c245ed92c762e7142f129594","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void closePreviousProject(final Project projectToClose) {\n    Project[] openProjects = ProjectManager.getInstance().getOpenProjects();\n    if (openProjects.length > 0) {\n      int exitCode = ProjectUtil.confirmOpenNewProject(true);\n      if (exitCode == 0) { // this window option\n        ProjectUtil.closeAndDispose(projectToClose != null ? projectToClose : openProjects[openProjects.length - 1]);\n      }\n    }\n  }","id":39878,"modified_method":"public static void closePreviousProject(final Project projectToClose) {\n    Project[] openProjects = ProjectManager.getInstance().getOpenProjects();\n    if (openProjects.length > 0) {\n      int exitCode = ProjectUtil.confirmOpenNewProject(true);\n      if (exitCode == GeneralSettings.OPEN_PROJECT_SAME_WINDOW) {\n        ProjectUtil.closeAndDispose(projectToClose != null ? projectToClose : openProjects[openProjects.length - 1]);\n      }\n    }\n  }","commit_id":"5c7f40b17b920829c245ed92c762e7142f129594","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static Project doOpenProject(@NotNull final VirtualFile virtualFile,\n                                      Project projectToClose,\n                                      final boolean forceOpenInNewFrame,\n                                      final int line,\n                                      @Nullable ProjectOpenedCallback callback,\n                                      final boolean isReopen) {\n    VirtualFile baseDir = virtualFile;\n    if (!baseDir.isDirectory()) {\n      baseDir = virtualFile.getParent();\n      while (baseDir != null) {\n        if (new File(baseDir.getPath(), \".idea\").exists()) {\n          break;\n        }\n        baseDir = baseDir.getParent();\n      }\n      if (baseDir == null) {\n        baseDir = virtualFile.getParent();\n      }\n    }\n\n    final File projectDir = new File(baseDir.getPath(), \".idea\");\n\n    Project[] openProjects = ProjectManager.getInstance().getOpenProjects();\n    if (!forceOpenInNewFrame && openProjects.length > 0) {\n      if (projectToClose == null) {\n        projectToClose = openProjects[openProjects.length - 1];\n      }\n\n      if (ProjectAttachProcessor.canAttachToProject()) {\n        final OpenOrAttachDialog dialog = new OpenOrAttachDialog(projectToClose, isReopen, isReopen ? \"Reopen Project\" : \"Open Project\");\n        dialog.show();\n        if (dialog.getExitCode() != DialogWrapper.OK_EXIT_CODE) {\n          return null;\n        }\n        if (dialog.isReplace()) {\n          if (!ProjectUtil.closeAndDispose(projectToClose)) return null;\n        }\n        else if (dialog.isAttach()) {\n          if (attachToProject(projectToClose, projectDir, callback)) return null;\n        }\n      }\n      else {\n        int exitCode = ProjectUtil.confirmOpenNewProject(false);\n        if (exitCode == 0) { // this window option\n          if (!ProjectUtil.closeAndDispose(projectToClose)) return null;\n        }\n        else if (exitCode != 1) { // not in a new window\n          return null;\n        }\n      }\n    }\n\n    boolean runConfigurators = true;\n    final ProjectManagerEx projectManager = ProjectManagerEx.getInstanceEx();\n    Project project = null;\n    if (projectDir.exists()) {\n      try {\n        for (ProjectOpenProcessor processor : ProjectOpenProcessor.EXTENSION_POINT_NAME.getExtensions()) {\n          processor.refreshProjectFiles(projectDir);\n        }\n        \n        Ref<ConversionResult> conversionResultRef = new Ref<ConversionResult>();\n        project = ((ProjectManagerImpl) projectManager).convertAndLoadProject(baseDir.getPath(), conversionResultRef);\n        if (conversionResultRef.get().openingIsCanceled()) {\n          return null;\n        }\n        runConfigurators = false;\n      }\n      catch (Exception e) {\n        // ignore\n      }\n    }\n    else {\n      projectDir.mkdirs();\n    }\n\n    if (project == null) {\n      project = projectManager.newProject(projectDir.getParentFile().getName(), projectDir.getParent(), true, false);\n    }\n\n    if (project == null) return null;\n    ProjectBaseDirectory.getInstance(project).setBaseDir(baseDir);\n    final Module module = runConfigurators ? runDirectoryProjectConfigurators(baseDir, project) : null;\n\n    openFileFromCommandLine(project, virtualFile, line);\n    projectManager.openProject(project);\n    if (callback != null && runConfigurators) {\n      callback.projectOpened(project, module);\n    }\n\n    return project;\n  }","id":39879,"modified_method":"@Nullable\n  public static Project doOpenProject(@NotNull final VirtualFile virtualFile,\n                                      Project projectToClose,\n                                      final boolean forceOpenInNewFrame,\n                                      final int line,\n                                      @Nullable ProjectOpenedCallback callback,\n                                      final boolean isReopen) {\n    VirtualFile baseDir = virtualFile;\n    if (!baseDir.isDirectory()) {\n      baseDir = virtualFile.getParent();\n      while (baseDir != null) {\n        if (new File(baseDir.getPath(), \".idea\").exists()) {\n          break;\n        }\n        baseDir = baseDir.getParent();\n      }\n      if (baseDir == null) {\n        baseDir = virtualFile.getParent();\n      }\n    }\n\n    final File projectDir = new File(baseDir.getPath(), \".idea\");\n\n    Project[] openProjects = ProjectManager.getInstance().getOpenProjects();\n    if (!forceOpenInNewFrame && openProjects.length > 0) {\n      if (projectToClose == null) {\n        projectToClose = openProjects[openProjects.length - 1];\n      }\n\n      if (ProjectAttachProcessor.canAttachToProject()) {\n        final OpenOrAttachDialog dialog = new OpenOrAttachDialog(projectToClose, isReopen, isReopen ? \"Reopen Project\" : \"Open Project\");\n        dialog.show();\n        if (dialog.getExitCode() != DialogWrapper.OK_EXIT_CODE) {\n          return null;\n        }\n        if (dialog.isReplace()) {\n          if (!ProjectUtil.closeAndDispose(projectToClose)) return null;\n        }\n        else if (dialog.isAttach()) {\n          if (attachToProject(projectToClose, projectDir, callback)) return null;\n        }\n      }\n      else {\n        int exitCode = ProjectUtil.confirmOpenNewProject(false);\n        if (exitCode == GeneralSettings.OPEN_PROJECT_SAME_WINDOW) {\n          if (!ProjectUtil.closeAndDispose(projectToClose)) return null;\n        }\n        else if (exitCode != GeneralSettings.OPEN_PROJECT_NEW_WINDOW) { // not in a new window\n          return null;\n        }\n      }\n    }\n\n    boolean runConfigurators = true;\n    final ProjectManagerEx projectManager = ProjectManagerEx.getInstanceEx();\n    Project project = null;\n    if (projectDir.exists()) {\n      try {\n        for (ProjectOpenProcessor processor : ProjectOpenProcessor.EXTENSION_POINT_NAME.getExtensions()) {\n          processor.refreshProjectFiles(projectDir);\n        }\n        \n        Ref<ConversionResult> conversionResultRef = new Ref<ConversionResult>();\n        project = ((ProjectManagerImpl) projectManager).convertAndLoadProject(baseDir.getPath(), conversionResultRef);\n        if (conversionResultRef.get().openingIsCanceled()) {\n          return null;\n        }\n        runConfigurators = false;\n      }\n      catch (Exception e) {\n        // ignore\n      }\n    }\n    else {\n      projectDir.mkdirs();\n    }\n\n    if (project == null) {\n      project = projectManager.newProject(projectDir.getParentFile().getName(), projectDir.getParent(), true, false);\n    }\n\n    if (project == null) return null;\n    ProjectBaseDirectory.getInstance(project).setBaseDir(baseDir);\n    final Module module = runConfigurators ? runDirectoryProjectConfigurators(baseDir, project) : null;\n\n    openFileFromCommandLine(project, virtualFile, line);\n    projectManager.openProject(project);\n    if (callback != null && runConfigurators) {\n      callback.projectOpened(project, module);\n    }\n\n    return project;\n  }","commit_id":"5c7f40b17b920829c245ed92c762e7142f129594","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setToBeShown(boolean value, int exitCode) {\n    GeneralSettings.getInstance().setConfirmOpenNewProject(value || exitCode == 2 ? -1 : exitCode);\n  }","id":39880,"modified_method":"public void setToBeShown(boolean value, int exitCode) {\n    int confirmOpenNewProject = value || exitCode == 2 ? GeneralSettings.OPEN_PROJECT_ASK :\n                                exitCode == 0 ? GeneralSettings.OPEN_PROJECT_SAME_WINDOW : GeneralSettings.OPEN_PROJECT_NEW_WINDOW ;\n    GeneralSettings.getInstance().setConfirmOpenNewProject(confirmOpenNewProject);\n  }","commit_id":"5c7f40b17b920829c245ed92c762e7142f129594","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * @return 0 - this window\n   *         1 - new window\n   *         2 - cancel\n   * @param isNewProject\n   */\n  public static int confirmOpenNewProject(boolean isNewProject) {\n    final GeneralSettings settings = GeneralSettings.getInstance();\n    if (settings.getConfirmOpenNewProject() == GeneralSettings.OPEN_PROJECT_ASK) {\n      if (isNewProject) {\n        return Messages.showYesNoDialog(IdeBundle.message(\"prompt.open.project.in.new.frame\"),\n                                 IdeBundle.message(\"title.new.project\"),\n                                 IdeBundle.message(\"button.existingframe\"),\n                                 IdeBundle.message(\"button.newframe\"),\n                                 Messages.getQuestionIcon(), new ProjectNewWindowDoNotAskOption());\n      }\n      else {\n        return Messages.showYesNoCancelDialog(IdeBundle.message(\"prompt.open.project.in.new.frame\"),\n                                              IdeBundle.message(\"title.open.project\"),\n                                              IdeBundle.message(\"button.existingframe\"), IdeBundle.message(\"button.newframe\"),\n                                              CommonBundle.getCancelButtonText(), Messages.getQuestionIcon(),\n                                              new ProjectNewWindowDoNotAskOption());\n      }\n    }\n    return settings.getConfirmOpenNewProject();\n  }","id":39881,"modified_method":"/**\n   * @return {@link com.intellij.ide.GeneralSettings#OPEN_PROJECT_SAME_WINDOW}\n   *         {@link com.intellij.ide.GeneralSettings#OPEN_PROJECT_NEW_WINDOW}\n   *         {@link com.intellij.openapi.ui.Messages#CANCEL} - if user canceled the dialog\n   * @param isNewProject\n   */\n  public static int confirmOpenNewProject(boolean isNewProject) {\n    final GeneralSettings settings = GeneralSettings.getInstance();\n    int confirmOpenNewProject = settings.getConfirmOpenNewProject();\n    if (confirmOpenNewProject == GeneralSettings.OPEN_PROJECT_ASK) {\n      if (isNewProject) {\n        int exitCode = Messages.showYesNoDialog(IdeBundle.message(\"prompt.open.project.in.new.frame\"),\n                                         IdeBundle.message(\"title.new.project\"),\n                                         IdeBundle.message(\"button.existingframe\"),\n                                         IdeBundle.message(\"button.newframe\"),\n                                         Messages.getQuestionIcon(), new ProjectNewWindowDoNotAskOption());\n        return exitCode == 0 ? GeneralSettings.OPEN_PROJECT_SAME_WINDOW : GeneralSettings.OPEN_PROJECT_NEW_WINDOW;\n      }\n      else {\n        int exitCode = Messages.showYesNoCancelDialog(IdeBundle.message(\"prompt.open.project.in.new.frame\"),\n                                               IdeBundle.message(\"title.open.project\"),\n                                               IdeBundle.message(\"button.existingframe\"), IdeBundle.message(\"button.newframe\"),\n                                               CommonBundle.getCancelButtonText(), Messages.getQuestionIcon(),\n                                               new ProjectNewWindowDoNotAskOption());\n        return exitCode == 0 ? GeneralSettings.OPEN_PROJECT_SAME_WINDOW : exitCode == 1 ? GeneralSettings.OPEN_PROJECT_NEW_WINDOW : Messages.CANCEL;\n      }\n    }\n    return confirmOpenNewProject;\n  }","commit_id":"5c7f40b17b920829c245ed92c762e7142f129594","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static Project openProject(final String path, Project projectToClose, boolean forceOpenInNewFrame) {\n    File file = new File(path);\n    if (!file.exists()) {\n      Messages.showErrorDialog(IdeBundle.message(\"error.project.file.does.not.exist\", path), CommonBundle.getErrorTitle());\n      return null;\n    }\n\n    if (file.isDirectory() && !new File(file, com.intellij.openapi.project.ProjectUtil.DIRECTORY_BASED_PROJECT_DIR).exists()) {\n      Messages.showErrorDialog(IdeBundle.message(\"error.project.file.does.not.exist\", new File(file, com.intellij.openapi.project.ProjectUtil.DIRECTORY_BASED_PROJECT_DIR).getPath()), CommonBundle.getErrorTitle());\n      return null;\n    }\n\n    Project[] openProjects = ProjectManager.getInstance().getOpenProjects();\n    for (Project project : openProjects) {\n      if (isSameProject(path, project)) {\n        focusProjectWindow(project, false);\n        return project;\n      }\n    }\n\n    if (!forceOpenInNewFrame && openProjects.length > 0) {\n      int exitCode = confirmOpenNewProject(false);\n      if (exitCode == 0) { // this window option\n        if (!closeAndDispose(projectToClose != null ? projectToClose : openProjects[openProjects.length - 1])) return null;\n      }\n      else if (exitCode != 1) { // not in a new window\n        return null;\n      }\n    }\n\n    ProjectManagerEx projectManager = ProjectManagerEx.getInstanceEx();\n    Project project = null;\n    try {\n      project = projectManager.loadAndOpenProject(path);\n    }\n    catch (IOException e) {\n      Messages.showMessageDialog(IdeBundle.message(\"error.cannot.load.project\", e.getMessage()),\n                                 IdeBundle.message(\"title.cannot.load.project\"), Messages.getErrorIcon());\n    }\n    catch (JDOMException e) {\n      LOG.info(e);\n      Messages.showMessageDialog(IdeBundle.message(\"error.project.file.is.corrupted\"), IdeBundle.message(\"title.cannot.load.project\"),\n                                 Messages.getErrorIcon());\n    }\n    catch (InvalidDataException e) {\n      LOG.info(e);\n      Messages.showMessageDialog(IdeBundle.message(\"error.project.file.is.corrupted\"), IdeBundle.message(\"title.cannot.load.project\"),\n                                 Messages.getErrorIcon());\n    }\n    return project;\n  }","id":39882,"modified_method":"@Nullable\n  public static Project openProject(final String path, Project projectToClose, boolean forceOpenInNewFrame) {\n    File file = new File(path);\n    if (!file.exists()) {\n      Messages.showErrorDialog(IdeBundle.message(\"error.project.file.does.not.exist\", path), CommonBundle.getErrorTitle());\n      return null;\n    }\n\n    if (file.isDirectory() && !new File(file, com.intellij.openapi.project.ProjectUtil.DIRECTORY_BASED_PROJECT_DIR).exists()) {\n      Messages.showErrorDialog(IdeBundle.message(\"error.project.file.does.not.exist\", new File(file, com.intellij.openapi.project.ProjectUtil.DIRECTORY_BASED_PROJECT_DIR).getPath()), CommonBundle.getErrorTitle());\n      return null;\n    }\n\n    Project[] openProjects = ProjectManager.getInstance().getOpenProjects();\n    for (Project project : openProjects) {\n      if (isSameProject(path, project)) {\n        focusProjectWindow(project, false);\n        return project;\n      }\n    }\n\n    if (!forceOpenInNewFrame && openProjects.length > 0) {\n      int exitCode = confirmOpenNewProject(false);\n      if (exitCode == GeneralSettings.OPEN_PROJECT_SAME_WINDOW) {\n        if (!closeAndDispose(projectToClose != null ? projectToClose : openProjects[openProjects.length - 1])) return null;\n      }\n      else if (exitCode != GeneralSettings.OPEN_PROJECT_NEW_WINDOW) {\n        return null;\n      }\n    }\n\n    ProjectManagerEx projectManager = ProjectManagerEx.getInstanceEx();\n    Project project = null;\n    try {\n      project = projectManager.loadAndOpenProject(path);\n    }\n    catch (IOException e) {\n      Messages.showMessageDialog(IdeBundle.message(\"error.cannot.load.project\", e.getMessage()),\n                                 IdeBundle.message(\"title.cannot.load.project\"), Messages.getErrorIcon());\n    }\n    catch (JDOMException e) {\n      LOG.info(e);\n      Messages.showMessageDialog(IdeBundle.message(\"error.project.file.is.corrupted\"), IdeBundle.message(\"title.cannot.load.project\"),\n                                 Messages.getErrorIcon());\n    }\n    catch (InvalidDataException e) {\n      LOG.info(e);\n      Messages.showMessageDialog(IdeBundle.message(\"error.project.file.is.corrupted\"), IdeBundle.message(\"title.cannot.load.project\"),\n                                 Messages.getErrorIcon());\n    }\n    return project;\n  }","commit_id":"5c7f40b17b920829c245ed92c762e7142f129594","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GithubCreatePullRequestDialog(@NotNull final Project project, @NotNull GithubCreatePullRequestWorker worker) {\n    super(project, true);\n    myWorker = worker;\n\n    myProjectSettings = GithubProjectSettings.getInstance(project);\n\n    myPanel = new GithubCreatePullRequestPanel();\n    myPanel.getShowDiffButton().addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        myWorker.showDiffDialog(myPanel.getSelectedBranch());\n      }\n    });\n    myPanel.getSelectForkButton().addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        ForkInfo fork = myWorker.showTargetDialog();\n        if (fork != null) {\n          myPanel.setForks(myWorker.getForks());\n          myPanel.setSelectedFork(fork.getPath());\n        }\n      }\n    });\n\n    myPanel.getForkComboBox().addItemListener(new ItemListener() {\n      @Override\n      public void itemStateChanged(ItemEvent e) {\n        if (e.getStateChange() == ItemEvent.DESELECTED) {\n          myPanel.setBranches(Collections.<BranchInfo>emptyList());\n        }\n        if (e.getStateChange() == ItemEvent.SELECTED) {\n          final ForkInfo fork = (ForkInfo)e.getItem();\n          if (fork == null) return;\n\n          myPanel.setBranches(fork.getBranches());\n          myPanel.setSelectedBranch(fork.getDefaultBranch());\n\n          if (fork.getRemoteName() == null && !fork.isProposedToCreateRemote()) {\n            fork.setProposedToCreateRemote(true);\n            boolean createRemote = false;\n\n            switch (GithubSettings.getInstance().getCreatePullRequestCreateRemote()) {\n              case YES:\n                createRemote = true;\n                break;\n              case NO:\n                createRemote = false;\n                break;\n              case UNSURE:\n                createRemote = GithubNotifications.showYesNoDialog(project,\n                                                                   \"Can't Find Remote\",\n                                                                   \"Configure remote for '\" + fork.getPath().getUser() + \"'?\",\n                                                                   ourDoNotAskOption) == Messages.YES;\n                break;\n            }\n\n            if (createRemote) {\n              myWorker.configureRemote(fork);\n            }\n          }\n\n          if (fork.getRemoteName() == null) {\n            myPanel.setDiffEnabled(false);\n          }\n          else {\n            myPanel.setDiffEnabled(true);\n            myWorker.launchFetchRemote(fork);\n          }\n        }\n      }\n    });\n\n    myPanel.getBranchComboBox().addItemListener(new ItemListener() {\n      @Override\n      public void itemStateChanged(ItemEvent e) {\n        if (e.getStateChange() == ItemEvent.SELECTED) {\n          BranchInfo branch = (BranchInfo)e.getItem();\n          if (branch == null) return;\n\n          if (branch.getForkInfo().getRemoteName() != null) {\n            if (branch.getDiffInfoTask() != null && branch.getDiffInfoTask().isDone() && branch.getDiffInfoTask().safeGet() == null) {\n              myPanel.setDiffEnabled(false);\n            }\n            else {\n              myPanel.setDiffEnabled(true);\n            }\n          }\n\n          if (myPanel.isTitleDescriptionEmptyOrNotModified()) {\n            Pair<String, String> description = myWorker.getDefaultDescriptionMessage(branch);\n            myPanel.setTitle(description.getFirst());\n            myPanel.setDescription(description.getSecond());\n          }\n\n          myWorker.launchLoadDiffInfo(branch);\n        }\n      }\n    });\n\n    myPanel.setForks(myWorker.getForks());\n    myPanel.setSelectedFork(myProjectSettings.getCreatePullRequestDefaultRepo());\n    myPanel.setSelectedBranch(myProjectSettings.getCreatePullRequestDefaultBranch());\n\n    setTitle(\"Create Pull Request - \" + myWorker.getCurrentBranch());\n    init();\n  }","id":39883,"modified_method":"public GithubCreatePullRequestDialog(@NotNull final Project project, @NotNull GithubCreatePullRequestWorker worker) {\n    super(project, true);\n    myWorker = worker;\n\n    myProjectSettings = GithubProjectSettings.getInstance(project);\n\n    myPanel = new GithubCreatePullRequestPanel();\n    myPanel.getShowDiffButton().addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        myWorker.showDiffDialog(myPanel.getSelectedBranch());\n      }\n    });\n    myPanel.getSelectForkButton().addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        ForkInfo fork = myWorker.showTargetDialog();\n        if (fork != null) {\n          myPanel.setForks(myWorker.getForks());\n          myPanel.setSelectedFork(fork.getPath());\n        }\n      }\n    });\n\n    myPanel.getForkComboBox().addItemListener(new ItemListener() {\n      @Override\n      public void itemStateChanged(ItemEvent e) {\n        if (e.getStateChange() == ItemEvent.DESELECTED) {\n          myPanel.setBranches(Collections.<BranchInfo>emptyList());\n        }\n        if (e.getStateChange() == ItemEvent.SELECTED) {\n          final ForkInfo fork = (ForkInfo)e.getItem();\n          if (fork == null) return;\n\n          myPanel.setBranches(fork.getBranches());\n          myPanel.setSelectedBranch(fork.getDefaultBranch());\n\n          if (fork.getRemoteName() == null && !fork.isProposedToCreateRemote()) {\n            fork.setProposedToCreateRemote(true);\n            boolean createRemote = false;\n\n            switch (GithubSettings.getInstance().getCreatePullRequestCreateRemote()) {\n              case YES:\n                createRemote = true;\n                break;\n              case NO:\n                createRemote = false;\n                break;\n              case UNSURE:\n                createRemote = GithubNotifications.showYesNoDialog(project,\n                                                                   \"Can't Find Remote\",\n                                                                   \"Configure remote for '\" + fork.getPath().getUser() + \"'?\",\n                                                                   ourDoNotAskOption);\n                break;\n            }\n\n            if (createRemote) {\n              myWorker.configureRemote(fork);\n            }\n          }\n\n          if (fork.getRemoteName() == null) {\n            myPanel.setDiffEnabled(false);\n          }\n          else {\n            myPanel.setDiffEnabled(true);\n            myWorker.launchFetchRemote(fork);\n          }\n        }\n      }\n    });\n\n    myPanel.getBranchComboBox().addItemListener(new ItemListener() {\n      @Override\n      public void itemStateChanged(ItemEvent e) {\n        if (e.getStateChange() == ItemEvent.SELECTED) {\n          BranchInfo branch = (BranchInfo)e.getItem();\n          if (branch == null) return;\n\n          if (branch.getForkInfo().getRemoteName() != null) {\n            if (branch.getDiffInfoTask() != null && branch.getDiffInfoTask().isDone() && branch.getDiffInfoTask().safeGet() == null) {\n              myPanel.setDiffEnabled(false);\n            }\n            else {\n              myPanel.setDiffEnabled(true);\n            }\n          }\n\n          if (myPanel.isTitleDescriptionEmptyOrNotModified()) {\n            Pair<String, String> description = myWorker.getDefaultDescriptionMessage(branch);\n            myPanel.setTitle(description.getFirst());\n            myPanel.setDescription(description.getSecond());\n          }\n\n          myWorker.launchLoadDiffInfo(branch);\n        }\n      }\n    });\n\n    myPanel.setForks(myWorker.getForks());\n    myPanel.setSelectedFork(myProjectSettings.getCreatePullRequestDefaultRepo());\n    myPanel.setSelectedBranch(myProjectSettings.getCreatePullRequestDefaultBranch());\n\n    setTitle(\"Create Pull Request - \" + myWorker.getCurrentBranch());\n    init();\n  }","commit_id":"4f1c460e76f616147f9fc46af491bb125010ab08","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean checkAction(@Nullable final BranchInfo branch) {\n    if (branch == null) {\n      GithubNotifications.showWarningDialog(myProject, CANNOT_CREATE_PULL_REQUEST, \"Target branch is not selected\");\n      return false;\n    }\n\n    DiffInfo info;\n    try {\n      info = GithubUtil\n        .computeValueInModal(myProject, \"Collecting diff data...\", new ThrowableConvertor<ProgressIndicator, DiffInfo, IOException>() {\n          @Override\n          public DiffInfo convert(ProgressIndicator indicator) throws IOException {\n            return GithubUtil.runInterruptable(indicator, new ThrowableComputable<DiffInfo, IOException>() {\n              @Override\n              public DiffInfo compute() throws IOException {\n                return getDiffInfo(branch);\n              }\n            });\n          }\n        });\n    }\n    catch (IOException e) {\n      GithubNotifications.showError(myProject, \"Can't collect diff data\", e);\n      return true;\n    }\n    if (info == null) {\n      return true;\n    }\n\n    ForkInfo fork = branch.getForkInfo();\n\n    String localBranchName = \"'\" + myCurrentBranch + \"'\";\n    String targetBranchName = \"'\" + fork.getRemoteName() + \"/\" + branch.getRemoteName() + \"'\";\n    if (info.getInfo().getBranchToHeadCommits(myGitRepository).isEmpty()) {\n      return Messages.YES == GithubNotifications\n        .showYesNoDialog(myProject, \"Do you want to proceed anyway?\",\n                         \"Empty pull request: the branch \" + localBranchName + \" is fully merged to the branch \" + targetBranchName);\n    }\n    if (!info.getInfo().getHeadToBranchCommits(myGitRepository).isEmpty()) {\n      return Messages.YES == GithubNotifications\n        .showYesNoDialog(myProject, \"Do you want to proceed anyway?\",\n                         \"The branch \" + targetBranchName + \" is not fully merged to the branch \" + localBranchName);\n    }\n\n    return true;\n  }","id":39884,"modified_method":"public boolean checkAction(@Nullable final BranchInfo branch) {\n    if (branch == null) {\n      GithubNotifications.showWarningDialog(myProject, CANNOT_CREATE_PULL_REQUEST, \"Target branch is not selected\");\n      return false;\n    }\n\n    DiffInfo info;\n    try {\n      info = GithubUtil\n        .computeValueInModal(myProject, \"Collecting diff data...\", new ThrowableConvertor<ProgressIndicator, DiffInfo, IOException>() {\n          @Override\n          public DiffInfo convert(ProgressIndicator indicator) throws IOException {\n            return GithubUtil.runInterruptable(indicator, new ThrowableComputable<DiffInfo, IOException>() {\n              @Override\n              public DiffInfo compute() throws IOException {\n                return getDiffInfo(branch);\n              }\n            });\n          }\n        });\n    }\n    catch (IOException e) {\n      GithubNotifications.showError(myProject, \"Can't collect diff data\", e);\n      return true;\n    }\n    if (info == null) {\n      return true;\n    }\n\n    ForkInfo fork = branch.getForkInfo();\n\n    String localBranchName = \"'\" + myCurrentBranch + \"'\";\n    String targetBranchName = \"'\" + fork.getRemoteName() + \"/\" + branch.getRemoteName() + \"'\";\n    if (info.getInfo().getBranchToHeadCommits(myGitRepository).isEmpty()) {\n      return GithubNotifications\n        .showYesNoDialog(myProject, \"Do you want to proceed anyway?\",\n                         \"Empty pull request: the branch \" + localBranchName + \" is fully merged to the branch \" + targetBranchName);\n    }\n    if (!info.getInfo().getHeadToBranchCommits(myGitRepository).isEmpty()) {\n      return GithubNotifications\n        .showYesNoDialog(myProject, \"Do you want to proceed anyway?\",\n                         \"The branch \" + targetBranchName + \" is not fully merged to the branch \" + localBranchName);\n    }\n\n    return true;\n  }","commit_id":"4f1c460e76f616147f9fc46af491bb125010ab08","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Messages.YesNoResult\n  public static int showYesNoDialog(@Nullable Project project, @NotNull String title, @NotNull String message) {\n    return Messages.showYesNoDialog(project, message, title, Messages.getQuestionIcon());\n  }","id":39885,"modified_method":"@Messages.YesNoResult\n  public static boolean showYesNoDialog(@Nullable Project project, @NotNull String title, @NotNull String message) {\n    return Messages.YES == Messages.showYesNoDialog(project, message, title, Messages.getQuestionIcon());\n  }","commit_id":"4f1c460e76f616147f9fc46af491bb125010ab08","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Messages.YesNoResult\n  public static int showYesNoDialog(@Nullable Project project,\n                                    @NotNull String title,\n                                    @NotNull String message,\n                                    @NotNull DialogWrapper.DoNotAskOption doNotAskOption) {\n    return Messages.showYesNoDialog(project, message, title, Messages.getQuestionIcon(), doNotAskOption);\n  }","id":39886,"modified_method":"@Messages.YesNoResult\n  public static boolean showYesNoDialog(@Nullable Project project,\n                                        @NotNull String title,\n                                        @NotNull String message,\n                                        @NotNull DialogWrapper.DoNotAskOption doNotAskOption) {\n    return Messages.YES == Messages.showYesNoDialog(project, message, title, Messages.getQuestionIcon(), doNotAskOption);\n  }","commit_id":"4f1c460e76f616147f9fc46af491bb125010ab08","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void actionPerformed(ActionEvent e) {\n      PluginId pluginId = getSelectedPluginId();\n      if (pluginId != null) {\n        PluginManager.disablePlugin(pluginId.toString());\n        final Application app = ApplicationManager.getApplication();\n        final String pluginName = app.getPlugin(pluginId).getName();\n        final String productName = ApplicationNamesInfo.getInstance().getFullProductName();\n        if (app.isRestartCapable()) {\n          int rc = Messages.showYesNoDialog(getRootPane(), pluginName + \" has been disabled. Would you like to restart \" + productName + \" so that the changes would take effect?\",\n                                            \"Disable Plugin\", Messages.getInformationIcon());\n          if (rc == 0) {\n            app.restart();\n          }\n        }\n        else {\n          Messages.showMessageDialog(getRootPane(), pluginName + \" has been disabled. You'll need to restart \" + productName + \" for the changes to take effect.\",\n                                     \"Disable Plugin\", Messages.getInformationIcon());\n        }\n      }\n    }","id":39887,"modified_method":"@Override\n    public void actionPerformed(ActionEvent e) {\n      PluginId pluginId = getSelectedPluginId();\n      if (pluginId != null) {\n        PluginManager.disablePlugin(pluginId.toString());\n        final Application app = ApplicationManager.getApplication();\n        final String pluginName = app.getPlugin(pluginId).getName();\n        int rc = Messages.showYesNoDialog(getRootPane(), \"Are you sure you would like to disable the plugin \" + pluginName +\n                                                         \"? The features provided by the plugin will no longer be available.\",\n                                          \"Disable Plugin\", Messages.getQuestionIcon());\n        if (rc != 0) return;\n        final String productName = ApplicationNamesInfo.getInstance().getFullProductName();\n        if (app.isRestartCapable()) {\n          rc = Messages.showYesNoDialog(getRootPane(), pluginName + \" has been disabled. Would you like to restart \" + productName + \" so that the changes would take effect?\",\n                                            \"Disable Plugin\", Messages.getInformationIcon());\n          if (rc == 0) {\n            app.restart();\n          }\n        }\n        else {\n          Messages.showMessageDialog(getRootPane(), pluginName + \" has been disabled. You'll need to restart \" + productName + \" for the changes to take effect.\",\n                                     \"Disable Plugin\", Messages.getInformationIcon());\n        }\n      }\n    }","commit_id":"dca32a218221c7d7fff85865d76dcab4520bd4dc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(ActionEvent e) {\n      myMessagePool.setJvmIsShuttingDown();\n      LaterInvocator.invokeLater(new Runnable() {\n        public void run() {\n          final Application app = ApplicationManager.getApplication();\n          if (app.isRestartCapable()) {\n            app.restart();\n          }\n          else {\n            app.exit();\n          }\n        }\n      }, ModalityState.NON_MODAL);\n      doOKAction();\n    }","id":39888,"modified_method":"public void actionPerformed(ActionEvent e) {\n      final boolean canRestart = ApplicationManager.getApplication().isRestartCapable();\n      int rc = Messages.showYesNoDialog(getRootPane(), \"Are you sure you would like to \" + (canRestart ? \"restart\" : \"shutdown\") +\n                                                       \" \" + ApplicationNamesInfo.getInstance().getFullProductName() + \"?\",\n                                        \"Confirm\", Messages.getQuestionIcon());\n      if (rc != 0) return;\n      myMessagePool.setJvmIsShuttingDown();\n      LaterInvocator.invokeLater(new Runnable() {\n        public void run() {\n          final Application app = ApplicationManager.getApplication();\n          if (app.isRestartCapable()) {\n            app.restart();\n          }\n          else {\n            app.exit();\n          }\n        }\n      }, ModalityState.NON_MODAL);\n      doOKAction();\n    }","commit_id":"dca32a218221c7d7fff85865d76dcab4520bd4dc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setSelectedRoleChanged(UIRepositoryRole role) throws Exception {\r\n    uncheckAllActionPermissions();\r\n    if (role != null && role.getActionPermissions() != null) {\r\n      for (ActionPermission permission : role.getActionPermissions()) {\r\n        if (permission.equals(ActionPermission.CREATE_CONTENT)) {\r\n          createContent.setChecked(true);\r\n        } else if (permission.equals(ActionPermission.READ_CONTENT)) {\r\n          readContent.setChecked(true);\r\n        } else if (permission.equals(ActionPermission.ADMINISTER_SECURITY)) {\r\n          administerSecurity.setChecked(true);\r\n        }\r\n      }\r\n    }\r\n  }","id":39889,"modified_method":"/**\r\n   * The method is called when a user select a role from the role list. This method reads the current selected\r\n   * role and populates the Action Permission UI with the details\r\n   */\r\n  public void setSelectedRoleChanged(UIRepositoryRole role) throws Exception {\r\n    uncheckAllActionPermissions();\r\n    if (role != null && role.getActionPermissions() != null) {\r\n      for (ActionPermission permission : role.getActionPermissions()) {\r\n        if (permission.equals(ActionPermission.CREATE_CONTENT)) {\r\n          XulCheckbox permissionCheckbox = findCheckbox(ActionPermission.CREATE_CONTENT);\r\n          if(permissionCheckbox != null) {\r\n            permissionCheckbox.setChecked(true);\r\n          }\r\n        } else if (permission.equals(ActionPermission.READ_CONTENT)) {\r\n          XulCheckbox permissionCheckbox = findCheckbox(ActionPermission.READ_CONTENT);\r\n          if(permissionCheckbox != null) {\r\n            permissionCheckbox.setChecked(true);\r\n          }\r\n        } else if (permission.equals(ActionPermission.ADMINISTER_SECURITY)) {\r\n          XulCheckbox permissionCheckbox = findCheckbox(ActionPermission.ADMINISTER_SECURITY);\r\n          if(permissionCheckbox != null) {\r\n            permissionCheckbox.setChecked(true);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }","commit_id":"33db83d8f8aefde86261ca6ebd87a4a98bae8bcf","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void updateRoleActionPermission() {\r\n    if(createContent.isChecked()) {\r\n      security.addRoleActionPermission(ActionPermission.CREATE_CONTENT);\r\n    } else {\r\n      security.removeRoleActionPermission(ActionPermission.CREATE_CONTENT);\r\n    }\r\n    if(readContent.isChecked()) {\r\n      security.addRoleActionPermission(ActionPermission.READ_CONTENT);\r\n    } else {\r\n      security.removeRoleActionPermission(ActionPermission.READ_CONTENT);\r\n    }\r\n    if(administerSecurity.isChecked()) {\r\n      security.addRoleActionPermission(ActionPermission.ADMINISTER_SECURITY);\r\n    } else {\r\n      security.removeRoleActionPermission(ActionPermission.ADMINISTER_SECURITY);\r\n    }    \r\n  }","id":39890,"modified_method":"/**\r\n   * Update the model with the current status\r\n   */\r\n  public void updateRoleActionPermission() {\r\n    for(Entry<XulCheckbox, ActionPermission> currentEntry:actionPermissionCheckboxMap.entrySet()) {\r\n      XulCheckbox permissionCheckbox = currentEntry.getKey();\r\n      if(permissionCheckbox.isChecked()) {\r\n        security.addRoleActionPermission(currentEntry.getValue());\r\n      } else {\r\n        security.removeRoleActionPermission(currentEntry.getValue());\r\n      }\r\n    }\r\n  }","commit_id":"33db83d8f8aefde86261ca6ebd87a4a98bae8bcf","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void createBindings() {\r\n    //User Role Binding\r\n\r\n    roleRadioButton = (XulRadio) document.getElementById(\"role-radio-button\");//$NON-NLS-1$\r\n    userRadioButton = (XulRadio) document.getElementById(\"user-radio-button\");//$NON-NLS-1$\r\n\r\n    roleEditButton = (XulButton) document.getElementById(\"role-edit\");//$NON-NLS-1$\r\n    roleRemoveButton = (XulButton) document.getElementById(\"role-remove\");//$NON-NLS-1$\r\n    userEditButton = (XulButton) document.getElementById(\"user-edit\");//$NON-NLS-1$\r\n    userRemoveButton = (XulButton) document.getElementById(\"user-remove\");//$NON-NLS-1$\r\n\r\n    addUserToRoleButton = (XulButton) document.getElementById(\"add-user-to-role\");//$NON-NLS-1$\r\n    removeUserFromRoleButton = (XulButton) document.getElementById(\"remove-user-from-role\");//$NON-NLS-1$\r\n    addRoleToUserButton = (XulButton) document.getElementById(\"add-role-to-user\");//$NON-NLS-1$\r\n    removeRoleFromUserButton = (XulButton) document.getElementById(\"remove-role-from-user\");//$NON-NLS-1$\r\n\r\n    userDialog = (XulDialog) document.getElementById(\"add-user-dialog\");//$NON-NLS-1$\r\n    roleDialog = (XulDialog) document.getElementById(\"add-role-dialog\");//$NON-NLS-1$\r\n    userRoleDeck = (XulDeck) document.getElementById(\"user-role-deck\");//$NON-NLS-1$\r\n    roleListBox = (XulListbox) document.getElementById(\"roles-list\");//$NON-NLS-1$\r\n    userListBox = (XulListbox) document.getElementById(\"users-list\");//$NON-NLS-1$\r\n    roleDetailTable = (XulTree) document.getElementById(\"role-detail-table\");//$NON-NLS-1$\r\n    userDetailTable = (XulTree) document.getElementById(\"user-detail-table\");//$NON-NLS-1$\r\n    \r\n    createContent = (XulCheckbox) document.getElementById(\"role-create-content-checkbox\");//$NON-NLS-1$\r\n    readContent = (XulCheckbox) document.getElementById(\"role-read-content-checkbox\");//$NON-NLS-1$\r\n    administerSecurity = (XulCheckbox) document.getElementById(\"role-administer-security-checkbox\");//$NON-NLS-1$\r\n    applyActionPermissionButton = (XulButton) document.getElementById(\"apply-action-permission\");//$NON-NLS-1$\r\n    // Add User Binding\r\n\r\n    username = (XulTextbox) document.getElementById(\"user-name\");//$NON-NLS-1$\r\n    userPassword = (XulTextbox) document.getElementById(\"user-password\");//$NON-NLS-1$\r\n    userDescription = (XulTextbox) document.getElementById(\"user-description\");//$NON-NLS-1$\r\n    availableRoles = (XulListbox) document.getElementById(\"available-roles-list\");//$NON-NLS-1$\r\n    assignedRoles = (XulListbox) document.getElementById(\"selected-roles-list\");//$NON-NLS-1$\r\n    assignRoleToUserButton = (XulButton) document.getElementById(\"assign-role-to-user\");//$NON-NLS-1$\r\n    unassignRoleFromUserButton = (XulButton) document.getElementById(\"unassign-role-from-user\");//$NON-NLS-1$\r\n\r\n    bf.setBindingType(Binding.Type.BI_DIRECTIONAL);\r\n    bf.createBinding(securityUser, \"name\", username, \"value\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"password\", userPassword, \"value\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"description\", userDescription, \"value\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"assignedRoles\", assignedRoles, \"elements\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"availableRoles\", availableRoles, \"elements\");//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n    // Binding to convert role array to a role list object and vice versa\r\n    BindingConvertor<List<UIRepositoryRole>, Object[]> arrayToListRoleConverter = new BindingConvertor<List<UIRepositoryRole>, Object[]>() {\r\n\r\n      @Override\r\n      public Object[] sourceToTarget(List<UIRepositoryRole> roles) {\r\n        if(roles != null) {\r\n          Object[] retVal = new Object[roles.size()];\r\n          int i=0;\r\n          for(UIRepositoryRole role:roles) {\r\n            retVal[i++] = role;\r\n          }\r\n          return retVal;\r\n        }\r\n        return null;\r\n      }\r\n\r\n      @Override\r\n      public List<UIRepositoryRole> targetToSource(Object[] roles) {\r\n        if(roles != null) {\r\n          List<UIRepositoryRole> retVal = new ArrayList<UIRepositoryRole>();\r\n          for(int i=0;i<roles.length;i++) {\r\n            retVal.add((UIRepositoryRole)roles[i]);\r\n          }\r\n          return retVal;\r\n        }\r\n        return null;\r\n      }\r\n      \r\n    };\r\n\r\n    // Binding to convert user array to a user list object and vice versa\r\n    BindingConvertor<List<UIRepositoryUser>, Object[]> arrayToListUserConverter = new BindingConvertor<List<UIRepositoryUser>, Object[]>() {\r\n\r\n      @Override\r\n      public Object[] sourceToTarget(List<UIRepositoryUser> users) {\r\n        if(users != null) {\r\n          Object[] retVal = new Object[users.size()];\r\n          int i=0;\r\n          for(UIRepositoryUser user:users) {\r\n            retVal[i++] = user;\r\n          }\r\n          return retVal;\r\n        }\r\n        return null;\r\n      }\r\n\r\n      @Override\r\n      public List<UIRepositoryUser> targetToSource(Object[] users) {\r\n        if(users != null) {\r\n          List<UIRepositoryUser> retVal = new ArrayList<UIRepositoryUser>();\r\n          for(int i=0;i<users.length;i++) {\r\n            retVal.add((UIRepositoryUser)users[i]);\r\n          }\r\n          return retVal;\r\n        }\r\n        return null;\r\n      }\r\n      \r\n    };\r\n\r\n \r\n    bf.createBinding(securityUser, \"availableSelectedRoles\", availableRoles, \"selectedItems\", arrayToListRoleConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"assignedSelectedRoles\", assignedRoles, \"selectedItems\", arrayToListRoleConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    \r\n    bf.createBinding(security, \"selectedUserIndex\", userListBox, \"selectedIndex\");//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n    BindingConvertor<Integer, Boolean> accumulatorButtonConverter = new BindingConvertor<Integer, Boolean>() {\r\n\r\n      @Override\r\n      public Boolean sourceToTarget(Integer value) {\r\n        if (value != null && value >= 0) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      @Override\r\n      public Integer targetToSource(Boolean value) {\r\n        // TODO Auto-generated method stub\r\n        return null;\r\n      }\r\n    };\r\n    \r\n    bf.setBindingType(Binding.Type.ONE_WAY);\r\n    bf.createBinding(assignedRoles,  \"selectedIndex\", securityUser, \"roleUnassignmentPossible\", accumulatorButtonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(availableRoles, \"selectedIndex\", securityUser, \"roleAssignmentPossible\", accumulatorButtonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"roleUnassignmentPossible\", unassignRoleFromUserButton, \"!disabled\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"roleAssignmentPossible\", assignRoleToUserButton, \"!disabled\");//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n    // Add Role Binding\r\n    rolename = (XulTextbox) document.getElementById(\"role-name\");//$NON-NLS-1$\r\n    roleDescription = (XulTextbox) document.getElementById(\"role-description\");//$NON-NLS-1$\r\n    availableUsers = (XulListbox) document.getElementById(\"available-users-list\");//$NON-NLS-1$\r\n    assignedUsers = (XulListbox) document.getElementById(\"selected-users-list\");//$NON-NLS-1$\r\n    assignUserToRoleButton = (XulButton) document.getElementById(\"assign-user-to-role\");//$NON-NLS-1$\r\n    unassignUserFromRoleButton = (XulButton) document.getElementById(\"unassign-user-from-role\");//$NON-NLS-1$\r\n\r\n    bf.setBindingType(Binding.Type.BI_DIRECTIONAL);\r\n    bf.createBinding(securityRole, \"name\", rolename, \"value\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityRole, \"description\", roleDescription, \"value\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityRole, \"assignedUsers\", assignedUsers, \"elements\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityRole, \"availableUsers\", availableUsers, \"elements\");    //$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityRole, \"availableSelectedUsers\", availableUsers, \"selectedItems\", arrayToListUserConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityRole, \"assignedSelectedUsers\", assignedUsers, \"selectedItems\", arrayToListUserConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(security, \"selectedRoleIndex\", roleListBox, \"selectedIndex\");//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n    bf.setBindingType(Binding.Type.ONE_WAY);    \r\n    bf.createBinding(assignedUsers,  \"selectedIndex\", securityRole, \"userUnassignmentPossible\", accumulatorButtonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(availableUsers, \"selectedIndex\", securityRole, \"userAssignmentPossible\", accumulatorButtonConverter);  //$NON-NLS-1$ //$NON-NLS-2$  \r\n    bf.createBinding(securityRole, \"userUnassignmentPossible\", unassignUserFromRoleButton, \"!disabled\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityRole, \"userAssignmentPossible\", assignUserToRoleButton, \"!disabled\");//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n    try {\r\n      bf.setBindingType(Binding.Type.ONE_WAY);\r\n\r\n      BindingConvertor<Integer, Boolean> buttonConverter = new BindingConvertor<Integer, Boolean>() {\r\n\r\n        @Override\r\n        public Boolean sourceToTarget(Integer value) {\r\n          if (value != null && value >= 0) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n\r\n        @Override\r\n        public Integer targetToSource(Boolean value) {\r\n          // TODO Auto-generated method stub\r\n          return null;\r\n        }\r\n      };\r\n      BindingConvertor<Object, Boolean> removeButtonConverter = new BindingConvertor<Object, Boolean>() {\r\n\r\n        @Override\r\n        public Boolean sourceToTarget(Object value) {\r\n          if (value != null) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n\r\n        @Override\r\n        public Object targetToSource(Boolean value) {\r\n          // TODO Auto-generated method stub\r\n          return null;\r\n        }\r\n      };\r\n      bf.createBinding(roleListBox, \"selectedIndex\", roleEditButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(roleListBox, \"selectedIndex\", roleRemoveButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(userListBox, \"selectedIndex\", userEditButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(userListBox, \"selectedIndex\", userRemoveButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n      bf.setBindingType(Binding.Type.ONE_WAY);\r\n      // Action based security permissions\r\n      bf.createBinding(roleListBox, \"selectedIndex\", createContent, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(roleListBox, \"selectedIndex\", readContent, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(roleListBox, \"selectedIndex\", administerSecurity, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(roleListBox, \"selectedIndex\", applyActionPermissionButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      \r\n      bf.createBinding(userListBox, \"selectedItem\", security, \"selectedUser\");//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(roleListBox, \"selectedItem\", security, \"selectedRole\");//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(roleListBox, \"selectedIndex\", addUserToRoleButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(roleDetailTable, \"selectedItem\", removeUserFromRoleButton, \"disabled\", removeButtonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(userListBox, \"selectedIndex\", addRoleToUserButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(userDetailTable, \"selectedItem\", removeRoleFromUserButton, \"disabled\", removeButtonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(security, \"roleList\", roleListBox, \"elements\").fireSourceChanged();//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(security, \"userList\", userListBox, \"elements\").fireSourceChanged();//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(roleListBox, \"selectedItem\", security, \"selectedRole\");//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(userListBox, \"selectedItem\", security, \"selectedUser\");//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(security, \"selectedRole\", this, \"selectedRoleChanged\");//$NON-NLS-1$ //$NON-NLS-2$\r\n      \r\n      roleDetailBinding = bf.createBinding(security, \"selectedRole\", roleDetailTable, \"elements\",//$NON-NLS-1$ //$NON-NLS-2$\r\n          new BindingConvertor<UIRepositoryRole, List<UIRepositoryUser>>() {\r\n\r\n            @Override\r\n            public List<UIRepositoryUser> sourceToTarget(UIRepositoryRole rr) {\r\n              List<UIRepositoryUser> rusers = new ArrayList<UIRepositoryUser>();\r\n              if (rr != null && rr.getUsers() != null) {\r\n                List<UserInfo> users = new ArrayList<UserInfo>(rr.getUsers());\r\n                for (UserInfo user : users) {\r\n                  rusers.add(new UIRepositoryUser(user));\r\n                }\r\n              }\r\n              return rusers;\r\n            }\r\n\r\n            @Override\r\n            public UIRepositoryRole targetToSource(List<UIRepositoryUser> arg0) {\r\n              // TODO Auto-generated method stub\r\n              return null;\r\n            }\r\n\r\n          });\r\n      userDetailBinding = bf.createBinding(security, \"selectedUser\", userDetailTable, \"elements\",//$NON-NLS-1$ //$NON-NLS-2$\r\n          new BindingConvertor<UIRepositoryUser, List<UIRepositoryRole>>() {\r\n\r\n            @Override\r\n            public List<UIRepositoryRole> sourceToTarget(UIRepositoryUser ru) {\r\n              List<UIRepositoryRole> rroles = new ArrayList<UIRepositoryRole>();\r\n              if (ru != null && ru.getRoles() != null) {\r\n                List<RoleInfo> roles = new ArrayList<RoleInfo>(ru.getRoles());\r\n                for (RoleInfo role : roles) {\r\n                  rroles.add(new UIRepositoryRole(role));\r\n                }\r\n              }\r\n              return rroles;\r\n            }\r\n\r\n            @Override\r\n            public UIRepositoryUser targetToSource(List<UIRepositoryRole> arg0) {\r\n              // TODO Auto-generated method stub\r\n              return null;\r\n            }\r\n\r\n          });\r\n      bf.createBinding(security, \"selectedDeck\", userRoleDeck, \"selectedIndex\",//$NON-NLS-1$ //$NON-NLS-2$\r\n          new BindingConvertor<ObjectRecipient.Type, Integer>() {\r\n\r\n            @Override\r\n            public Integer sourceToTarget(Type arg0) {\r\n              if (arg0 == Type.ROLE) {\r\n                roleRadioButton.setSelected(true);\r\n                userRadioButton.setSelected(false);\r\n                return 0;\r\n              } else if (arg0 == Type.USER) {\r\n                roleRadioButton.setSelected(false);\r\n                userRadioButton.setSelected(true);\r\n                return 1;\r\n              } else\r\n                return -1;\r\n            }\r\n\r\n            @Override\r\n            public Type targetToSource(Integer arg0) {\r\n              return null;\r\n            }\r\n\r\n          });\r\n      BindingConvertor<Mode, Boolean> modeBindingConverter = new BindingConvertor<Mode, Boolean>() {\r\n\r\n        @Override\r\n        public Boolean sourceToTarget(Mode arg0) {\r\n          if (arg0.equals(Mode.ADD)) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n\r\n        @Override\r\n        public Mode targetToSource(Boolean arg0) {\r\n          // TODO Auto-generated method stub\r\n          return null;\r\n        }\r\n\r\n      };\r\n      BindingConvertor<Mode, Boolean> anotherModeBindingConverter = new BindingConvertor<Mode, Boolean>() {\r\n\r\n        @Override\r\n        public Boolean sourceToTarget(Mode arg0) {\r\n          if (arg0.equals(Mode.EDIT_MEMBER)) {\r\n            return true;\r\n          } else\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public Mode targetToSource(Boolean arg0) {\r\n          // TODO Auto-generated method stub\r\n          return null;\r\n        }\r\n\r\n      };\r\n      bf.createBinding(securityRole, \"mode\", rolename, \"disabled\", modeBindingConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(securityRole, \"mode\", roleDescription, \"disabled\", anotherModeBindingConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n      bf.createBinding(securityUser, \"mode\", username, \"disabled\", modeBindingConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(securityUser, \"mode\", userPassword, \"disabled\", anotherModeBindingConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(securityUser, \"mode\", userDescription, \"disabled\", anotherModeBindingConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    } catch (Exception e) {\r\n      System.out.println(e.getMessage());\r\n      e.printStackTrace();\r\n    }\r\n    changeToRoleDeck();\r\n  }","id":39891,"modified_method":"private void createBindings() {\r\n    //User Role Binding\r\n\r\n    roleRadioButton = (XulRadio) document.getElementById(\"role-radio-button\");//$NON-NLS-1$\r\n    userRadioButton = (XulRadio) document.getElementById(\"user-radio-button\");//$NON-NLS-1$\r\n\r\n    roleEditButton = (XulButton) document.getElementById(\"role-edit\");//$NON-NLS-1$\r\n    roleRemoveButton = (XulButton) document.getElementById(\"role-remove\");//$NON-NLS-1$\r\n    userEditButton = (XulButton) document.getElementById(\"user-edit\");//$NON-NLS-1$\r\n    userRemoveButton = (XulButton) document.getElementById(\"user-remove\");//$NON-NLS-1$\r\n\r\n    addUserToRoleButton = (XulButton) document.getElementById(\"add-user-to-role\");//$NON-NLS-1$\r\n    removeUserFromRoleButton = (XulButton) document.getElementById(\"remove-user-from-role\");//$NON-NLS-1$\r\n    addRoleToUserButton = (XulButton) document.getElementById(\"add-role-to-user\");//$NON-NLS-1$\r\n    removeRoleFromUserButton = (XulButton) document.getElementById(\"remove-role-from-user\");//$NON-NLS-1$\r\n\r\n    userDialog = (XulDialog) document.getElementById(\"add-user-dialog\");//$NON-NLS-1$\r\n    roleDialog = (XulDialog) document.getElementById(\"add-role-dialog\");//$NON-NLS-1$\r\n    userRoleDeck = (XulDeck) document.getElementById(\"user-role-deck\");//$NON-NLS-1$\r\n    roleListBox = (XulListbox) document.getElementById(\"roles-list\");//$NON-NLS-1$\r\n    userListBox = (XulListbox) document.getElementById(\"users-list\");//$NON-NLS-1$\r\n    roleDetailTable = (XulTree) document.getElementById(\"role-detail-table\");//$NON-NLS-1$\r\n    userDetailTable = (XulTree) document.getElementById(\"user-detail-table\");//$NON-NLS-1$\r\n\r\n    applyActionPermissionButton = (XulButton) document.getElementById(\"apply-action-permission\");//$NON-NLS-1$\r\n    actionPermissionsBox = (XulVbox) document.getElementById(\"role-action-permissions-vbox\");//$NON-NLS-1$\r\n\r\n    // Add User Binding\r\n\r\n    username = (XulTextbox) document.getElementById(\"user-name\");//$NON-NLS-1$\r\n    userPassword = (XulTextbox) document.getElementById(\"user-password\");//$NON-NLS-1$\r\n    userDescription = (XulTextbox) document.getElementById(\"user-description\");//$NON-NLS-1$\r\n    availableRoles = (XulListbox) document.getElementById(\"available-roles-list\");//$NON-NLS-1$\r\n    assignedRoles = (XulListbox) document.getElementById(\"selected-roles-list\");//$NON-NLS-1$\r\n    assignRoleToUserButton = (XulButton) document.getElementById(\"assign-role-to-user\");//$NON-NLS-1$\r\n    unassignRoleFromUserButton = (XulButton) document.getElementById(\"unassign-role-from-user\");//$NON-NLS-1$\r\n\r\n    bf.setBindingType(Binding.Type.BI_DIRECTIONAL);\r\n    bf.createBinding(securityUser, \"name\", username, \"value\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"password\", userPassword, \"value\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"description\", userDescription, \"value\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"assignedRoles\", assignedRoles, \"elements\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"availableRoles\", availableRoles, \"elements\");//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n    // Binding to convert role array to a role list object and vice versa\r\n    BindingConvertor<List<UIRepositoryRole>, Object[]> arrayToListRoleConverter = new BindingConvertor<List<UIRepositoryRole>, Object[]>() {\r\n\r\n      @Override\r\n      public Object[] sourceToTarget(List<UIRepositoryRole> roles) {\r\n        if (roles != null) {\r\n          Object[] retVal = new Object[roles.size()];\r\n          int i = 0;\r\n          for (UIRepositoryRole role : roles) {\r\n            retVal[i++] = role;\r\n          }\r\n          return retVal;\r\n        }\r\n        return null;\r\n      }\r\n\r\n      @Override\r\n      public List<UIRepositoryRole> targetToSource(Object[] roles) {\r\n        if (roles != null) {\r\n          List<UIRepositoryRole> retVal = new ArrayList<UIRepositoryRole>();\r\n          for (int i = 0; i < roles.length; i++) {\r\n            retVal.add((UIRepositoryRole) roles[i]);\r\n          }\r\n          return retVal;\r\n        }\r\n        return null;\r\n      }\r\n\r\n    };\r\n\r\n    // Binding to convert user array to a user list object and vice versa\r\n    BindingConvertor<List<UIRepositoryUser>, Object[]> arrayToListUserConverter = new BindingConvertor<List<UIRepositoryUser>, Object[]>() {\r\n\r\n      @Override\r\n      public Object[] sourceToTarget(List<UIRepositoryUser> users) {\r\n        if (users != null) {\r\n          Object[] retVal = new Object[users.size()];\r\n          int i = 0;\r\n          for (UIRepositoryUser user : users) {\r\n            retVal[i++] = user;\r\n          }\r\n          return retVal;\r\n        }\r\n        return null;\r\n      }\r\n\r\n      @Override\r\n      public List<UIRepositoryUser> targetToSource(Object[] users) {\r\n        if (users != null) {\r\n          List<UIRepositoryUser> retVal = new ArrayList<UIRepositoryUser>();\r\n          for (int i = 0; i < users.length; i++) {\r\n            retVal.add((UIRepositoryUser) users[i]);\r\n          }\r\n          return retVal;\r\n        }\r\n        return null;\r\n      }\r\n\r\n    };\r\n\r\n    bf.createBinding(securityUser, \"availableSelectedRoles\", availableRoles, \"selectedItems\", arrayToListRoleConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"assignedSelectedRoles\", assignedRoles, \"selectedItems\", arrayToListRoleConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n    bf.createBinding(security, \"selectedUserIndex\", userListBox, \"selectedIndex\");//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n    BindingConvertor<Integer, Boolean> accumulatorButtonConverter = new BindingConvertor<Integer, Boolean>() {\r\n\r\n      @Override\r\n      public Boolean sourceToTarget(Integer value) {\r\n        if (value != null && value >= 0) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      @Override\r\n      public Integer targetToSource(Boolean value) {\r\n        // TODO Auto-generated method stub\r\n        return null;\r\n      }\r\n    };\r\n\r\n    bf.setBindingType(Binding.Type.ONE_WAY);\r\n    bf.createBinding(assignedRoles,\r\n        \"selectedIndex\", securityUser, \"roleUnassignmentPossible\", accumulatorButtonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(availableRoles,\r\n        \"selectedIndex\", securityUser, \"roleAssignmentPossible\", accumulatorButtonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"roleUnassignmentPossible\", unassignRoleFromUserButton, \"!disabled\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityUser, \"roleAssignmentPossible\", assignRoleToUserButton, \"!disabled\");//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n    // Add Role Binding\r\n    rolename = (XulTextbox) document.getElementById(\"role-name\");//$NON-NLS-1$\r\n    roleDescription = (XulTextbox) document.getElementById(\"role-description\");//$NON-NLS-1$\r\n    availableUsers = (XulListbox) document.getElementById(\"available-users-list\");//$NON-NLS-1$\r\n    assignedUsers = (XulListbox) document.getElementById(\"selected-users-list\");//$NON-NLS-1$\r\n    assignUserToRoleButton = (XulButton) document.getElementById(\"assign-user-to-role\");//$NON-NLS-1$\r\n    unassignUserFromRoleButton = (XulButton) document.getElementById(\"unassign-user-from-role\");//$NON-NLS-1$\r\n\r\n    bf.setBindingType(Binding.Type.BI_DIRECTIONAL);\r\n    bf.createBinding(securityRole, \"name\", rolename, \"value\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityRole, \"description\", roleDescription, \"value\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityRole, \"assignedUsers\", assignedUsers, \"elements\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityRole, \"availableUsers\", availableUsers, \"elements\"); //$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityRole, \"availableSelectedUsers\", availableUsers, \"selectedItems\", arrayToListUserConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityRole, \"assignedSelectedUsers\", assignedUsers, \"selectedItems\", arrayToListUserConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(security, \"selectedRoleIndex\", roleListBox, \"selectedIndex\");//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n    bf.setBindingType(Binding.Type.ONE_WAY);\r\n    bf.createBinding(assignedUsers,\r\n        \"selectedIndex\", securityRole, \"userUnassignmentPossible\", accumulatorButtonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(availableUsers,\r\n        \"selectedIndex\", securityRole, \"userAssignmentPossible\", accumulatorButtonConverter); //$NON-NLS-1$ //$NON-NLS-2$  \r\n    bf.createBinding(securityRole, \"userUnassignmentPossible\", unassignUserFromRoleButton, \"!disabled\");//$NON-NLS-1$ //$NON-NLS-2$\r\n    bf.createBinding(securityRole, \"userAssignmentPossible\", assignUserToRoleButton, \"!disabled\");//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n    try {\r\n      bf.setBindingType(Binding.Type.ONE_WAY);\r\n\r\n      buttonConverter = new BindingConvertor<Integer, Boolean>() {\r\n\r\n        @Override\r\n        public Boolean sourceToTarget(Integer value) {\r\n          if (value != null && value >= 0) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n\r\n        @Override\r\n        public Integer targetToSource(Boolean value) {\r\n          // TODO Auto-generated method stub\r\n          return null;\r\n        }\r\n      };\r\n      BindingConvertor<Object, Boolean> removeButtonConverter = new BindingConvertor<Object, Boolean>() {\r\n\r\n        @Override\r\n        public Boolean sourceToTarget(Object value) {\r\n          if (value != null) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n\r\n        @Override\r\n        public Object targetToSource(Boolean value) {\r\n          // TODO Auto-generated method stub\r\n          return null;\r\n        }\r\n      };\r\n      bf.createBinding(roleListBox, \"selectedIndex\", roleEditButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(roleListBox, \"selectedIndex\", roleRemoveButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(userListBox, \"selectedIndex\", userEditButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(userListBox, \"selectedIndex\", userRemoveButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n      bf.setBindingType(Binding.Type.ONE_WAY);\r\n      // Action based security permissions\r\n      bf.createBinding(roleListBox, \"selectedIndex\", applyActionPermissionButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n      bf.createBinding(userListBox, \"selectedItem\", security, \"selectedUser\");//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(roleListBox, \"selectedItem\", security, \"selectedRole\");//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(roleListBox, \"selectedIndex\", addUserToRoleButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(roleDetailTable, \"selectedItem\", removeUserFromRoleButton, \"disabled\", removeButtonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(userListBox, \"selectedIndex\", addRoleToUserButton, \"disabled\", buttonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(userDetailTable, \"selectedItem\", removeRoleFromUserButton, \"disabled\", removeButtonConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(security, \"roleList\", roleListBox, \"elements\").fireSourceChanged();//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(security, \"userList\", userListBox, \"elements\").fireSourceChanged();//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(roleListBox, \"selectedItem\", security, \"selectedRole\");//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(userListBox, \"selectedItem\", security, \"selectedUser\");//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(security, \"selectedRole\", this, \"selectedRoleChanged\");//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n      roleDetailBinding = bf.createBinding(security, \"selectedRole\", roleDetailTable, \"elements\",//$NON-NLS-1$ //$NON-NLS-2$\r\n          new BindingConvertor<UIRepositoryRole, List<UIRepositoryUser>>() {\r\n\r\n            @Override\r\n            public List<UIRepositoryUser> sourceToTarget(UIRepositoryRole rr) {\r\n              List<UIRepositoryUser> rusers = new ArrayList<UIRepositoryUser>();\r\n              if (rr != null && rr.getUsers() != null) {\r\n                List<UserInfo> users = new ArrayList<UserInfo>(rr.getUsers());\r\n                for (UserInfo user : users) {\r\n                  rusers.add(new UIRepositoryUser(user));\r\n                }\r\n              }\r\n              return rusers;\r\n            }\r\n\r\n            @Override\r\n            public UIRepositoryRole targetToSource(List<UIRepositoryUser> arg0) {\r\n              // TODO Auto-generated method stub\r\n              return null;\r\n            }\r\n\r\n          });\r\n      userDetailBinding = bf.createBinding(security, \"selectedUser\", userDetailTable, \"elements\",//$NON-NLS-1$ //$NON-NLS-2$\r\n          new BindingConvertor<UIRepositoryUser, List<UIRepositoryRole>>() {\r\n\r\n            @Override\r\n            public List<UIRepositoryRole> sourceToTarget(UIRepositoryUser ru) {\r\n              List<UIRepositoryRole> rroles = new ArrayList<UIRepositoryRole>();\r\n              if (ru != null && ru.getRoles() != null) {\r\n                List<RoleInfo> roles = new ArrayList<RoleInfo>(ru.getRoles());\r\n                for (RoleInfo role : roles) {\r\n                  rroles.add(new UIRepositoryRole(role));\r\n                }\r\n              }\r\n              return rroles;\r\n            }\r\n\r\n            @Override\r\n            public UIRepositoryUser targetToSource(List<UIRepositoryRole> arg0) {\r\n              // TODO Auto-generated method stub\r\n              return null;\r\n            }\r\n\r\n          });\r\n      bf.createBinding(security, \"selectedDeck\", userRoleDeck, \"selectedIndex\",//$NON-NLS-1$ //$NON-NLS-2$\r\n          new BindingConvertor<ObjectRecipient.Type, Integer>() {\r\n\r\n            @Override\r\n            public Integer sourceToTarget(Type arg0) {\r\n              if (arg0 == Type.ROLE) {\r\n                roleRadioButton.setSelected(true);\r\n                userRadioButton.setSelected(false);\r\n                return 0;\r\n              } else if (arg0 == Type.USER) {\r\n                roleRadioButton.setSelected(false);\r\n                userRadioButton.setSelected(true);\r\n                return 1;\r\n              } else\r\n                return -1;\r\n            }\r\n\r\n            @Override\r\n            public Type targetToSource(Integer arg0) {\r\n              return null;\r\n            }\r\n\r\n          });\r\n      BindingConvertor<Mode, Boolean> modeBindingConverter = new BindingConvertor<Mode, Boolean>() {\r\n\r\n        @Override\r\n        public Boolean sourceToTarget(Mode arg0) {\r\n          if (arg0.equals(Mode.ADD)) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }\r\n\r\n        @Override\r\n        public Mode targetToSource(Boolean arg0) {\r\n          // TODO Auto-generated method stub\r\n          return null;\r\n        }\r\n\r\n      };\r\n      BindingConvertor<Mode, Boolean> anotherModeBindingConverter = new BindingConvertor<Mode, Boolean>() {\r\n\r\n        @Override\r\n        public Boolean sourceToTarget(Mode arg0) {\r\n          if (arg0.equals(Mode.EDIT_MEMBER)) {\r\n            return true;\r\n          } else\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public Mode targetToSource(Boolean arg0) {\r\n          // TODO Auto-generated method stub\r\n          return null;\r\n        }\r\n\r\n      };\r\n      bf.createBinding(securityRole, \"mode\", rolename, \"disabled\", modeBindingConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(securityRole, \"mode\", roleDescription, \"disabled\", anotherModeBindingConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n\r\n      bf.createBinding(securityUser, \"mode\", username, \"disabled\", modeBindingConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(securityUser, \"mode\", userPassword, \"disabled\", anotherModeBindingConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n      bf.createBinding(securityUser, \"mode\", userDescription, \"disabled\", anotherModeBindingConverter);//$NON-NLS-1$ //$NON-NLS-2$\r\n    } catch (Exception e) {\r\n      System.out.println(e.getMessage());\r\n      e.printStackTrace();\r\n    }\r\n    initializeActionPermissionUI();\r\n    changeToRoleDeck();\r\n  }","commit_id":"33db83d8f8aefde86261ca6ebd87a4a98bae8bcf","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void applyRoleActionPermission() {\r\n    try {\r\n      String rolename = security.getSelectedRole().getName();\r\n      rui.setActionPermissions(rolename, security.getSelectedRole().getActionPermissions());\r\n      messageBox.setTitle(messages.getString(\"Dialog.Success\"));//$NON-NLS-1$\r\n      messageBox.setAcceptLabel(messages.getString(\"Dialog.Ok\"));//$NON-NLS-1$\r\n      messageBox.setMessage(messages.getString(\"SecurityController.RoleActionPermission.Success\"));//$NON-NLS-1$\r\n      messageBox.open();\r\n      \r\n    } catch (KettleException e) {\r\n      messageBox.setTitle(messages.getString(\"Dialog.Error\"));//$NON-NLS-1$\r\n      messageBox.setAcceptLabel(messages.getString(\"Dialog.Ok\"));//$NON-NLS-1$\r\n      messageBox.setMessage(BaseMessages.getString(RepositoryExplorer.class,\r\n          \"SecurityController.RoleActionPermission.UnableToApplyPermissions\", rolename, e.getLocalizedMessage()));//$NON-NLS-1$\r\n      messageBox.open();\r\n    }\r\n  }","id":39892,"modified_method":"/**\r\n   * Save the permission for the selected role\r\n   */\r\n  public void applyRoleActionPermission() {\r\n    try {\r\n      String rolename = security.getSelectedRole().getName();\r\n      rui.setActionPermissions(rolename, security.getSelectedRole().getActionPermissions());\r\n      messageBox.setTitle(messages.getString(\"Dialog.Success\"));//$NON-NLS-1$\r\n      messageBox.setAcceptLabel(messages.getString(\"Dialog.Ok\"));//$NON-NLS-1$\r\n      messageBox.setMessage(messages.getString(\"SecurityController.RoleActionPermission.Success\"));//$NON-NLS-1$\r\n      messageBox.open();\r\n\r\n    } catch (KettleException e) {\r\n      messageBox.setTitle(messages.getString(\"Dialog.Error\"));//$NON-NLS-1$\r\n      messageBox.setAcceptLabel(messages.getString(\"Dialog.Ok\"));//$NON-NLS-1$\r\n      messageBox.setMessage(BaseMessages.getString(RepositoryExplorer.class,\r\n          \"SecurityController.RoleActionPermission.UnableToApplyPermissions\", rolename, e.getLocalizedMessage()));//$NON-NLS-1$\r\n      messageBox.open();\r\n    }\r\n  }","commit_id":"33db83d8f8aefde86261ca6ebd87a4a98bae8bcf","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void uncheckAllActionPermissions() {\r\n    createContent.setChecked(false);\r\n    readContent.setChecked(false);\r\n    administerSecurity.setChecked(false);\r\n  }","id":39893,"modified_method":"private void uncheckAllActionPermissions() {\r\n    for(XulCheckbox permissionCheckbox:actionPermissionCheckboxMap.keySet()) {\r\n      permissionCheckbox.setChecked(false);\r\n    }\r\n  }","commit_id":"33db83d8f8aefde86261ca6ebd87a4a98bae8bcf","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private Document getParametersDoc() throws PortalException {\n      Document doc = DocumentFactory.getNewDocument();\n\n      // Top-level element\n      Element userPrefParamsE = doc.createElement(\"userPrefParams\");\n\n      if (previousState instanceof NewChannelState)\n        userPrefParamsE.appendChild(doc.importNode(registryChannel, true));\n      else if (previousState instanceof DefaultState) {\n        IUserLayoutNodeDescription node=ulm.getNode(elementID);\n        userPrefParamsE.appendChild(node.getXML(doc));\n      }\n\n      // CPD\n      Document cpd = ChannelRegistryManager.getCPD(registryChannel.getAttribute(\"typeID\"));\n      if (cpd != null)\n        userPrefParamsE.appendChild(doc.importNode(cpd.getDocumentElement(), true));\n\n      doc.appendChild(userPrefParamsE);\n      return doc;\n    }","id":39894,"modified_method":"private Document getParametersDoc() throws PortalException {\n      Document doc = DocumentFactory.getNewDocument();\n\n      // Top-level element\n      Element userPrefParamsE = doc.createElement(\"userPrefParams\");\n\n      if (previousState instanceof NewChannelState)\n          userPrefParamsE.appendChild(channelDesc.getXML(doc));\n      else if (previousState instanceof DefaultState) {\n        IUserLayoutNodeDescription node=ulm.getNode(elementID);\n        userPrefParamsE.appendChild(node.getXML(doc));\n      }\n\n      // CPD\n      Document cpd = ChannelRegistryManager.getCPD(channelDesc.getChannelTypeId());\n      if (cpd != null)\n        userPrefParamsE.appendChild(doc.importNode(cpd.getDocumentElement(), true));\n\n      doc.appendChild(userPrefParamsE);\n      return doc;\n    }","commit_id":"bb407d30add625278590b23cf683e25bbf436d96","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void setRuntimeData (ChannelRuntimeData rd) throws PortalException\n    {\n      runtimeData = rd;\n\n      // If the user hasn't clicked on a tab, get persisted active tab\n      if (activeTab.equals(\"none\"))\n        activeTab = getActiveTab();\n\n      action = runtimeData.getParameter(\"action\");\n\n      if (action != null)\n      {\n        // Select tab\n        if (action.equals(\"selectTab\"))\n          activeTab = runtimeData.getParameter(\"activeTab\");\n        // Set active tab\n        else if (action.equals(\"setActiveTab\"))\n        {\n          try\n          {\n            setActiveTab(activeTab);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageSetActiveTab;\n          }\n        }\n        // Change tab restrictions\n        else if (action.equals(\"changePermissions\" ) )\n        {\n          try\n          {\n            String elementId = runtimeData.getParameter(\"elementID\");\n            String moveAllowed = runtimeData.getParameter(\"moveAllowed\");\n            String editAllowed = runtimeData.getParameter(\"editAllowed\");\n            String addChildAllowed = runtimeData.getParameter(\"addChildAllowed\");\n            String deleteAllowed = runtimeData.getParameter(\"deleteAllowed\");\n            changeRestrictions( elementId, moveAllowed, editAllowed,\n                                addChildAllowed, deleteAllowed );\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageRenameTab;\n          }\n        }\n        // Rename tab\n        else if (action.equals(\"renameTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n            String tabName = runtimeData.getParameter(\"tabName\");\n\n            renameTab(tabId, tabName);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageRenameTab;\n          }\n        }\n        // Move tab\n        else if (action.equals(\"moveTab\"))\n        {\n          try\n          {\n            String methodAndID = runtimeData.getParameter(\"method_ID\");\n\n            if (methodAndID != null)\n            {\n              String sourceTabId = runtimeData.getParameter(\"elementID\");\n              int indexOf_ = methodAndID.indexOf(\"_\");\n              String method = methodAndID.substring(0, indexOf_); // insertBefore or appendAfter\n              String destinationTabId = methodAndID.substring(indexOf_ + 1);\n\n              moveTab(sourceTabId, method, destinationTabId);\n            }\n            else\n              action = \"selectTab\";\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageMoveTab;\n          }\n        }\n        // Add tab\n        else if (action.equals(\"addTab\"))\n        {\n          try\n          {\n            String tabName = runtimeData.getParameter(\"tabName\");\n            String methodAndID = runtimeData.getParameter(\"method_ID\");\n\n            if (methodAndID != null)\n            {\n              int indexOf_ = methodAndID.indexOf(\"_\");\n              String method = methodAndID.substring(0, indexOf_); // insertBefore or appendAfter\n              String destinationTabId = methodAndID.substring(indexOf_ + 1);\n\n              addTab(tabName, method, destinationTabId);\n            }\n            else\n              action = \"newTab\";\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageAddTab;\n          }\n        }\n        // Delete tab\n        else if (action.equals(\"deleteTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n\n            deleteElement(tabId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageDeleteTab;\n          }\n        }\n        // Lock tab\n        else if (action.equals(\"lockTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n\n            updateTabLock(tabId, true);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageLockTab;\n          }\n        }\n        // Unlock tab\n        else if (action.equals(\"unlockTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n\n            updateTabLock(tabId, false);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageUnlockTab;\n          }\n        }\n        // Select column\n        else if (action.equals(\"selectColumn\"))\n          elementID = runtimeData.getParameter(\"elementID\");\n        // Change column width(s)\n        else if (action.equals(\"columnWidth\"))\n        {\n          try\n          {\n            HashMap columnWidths = new HashMap();\n            Enumeration eParams = runtimeData.getParameterNames();\n            while (eParams.hasMoreElements())\n            {\n              String param = (String)eParams.nextElement();\n              String prefix = \"columnWidth_\";\n\n              if (param.startsWith(prefix))\n              {\n                String folderId = param.substring(prefix.length());\n                String newWidth = runtimeData.getParameter(prefix + folderId);\n                columnWidths.put(folderId, newWidth);\n              }\n            }\n\n            changeColumnWidths(columnWidths);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageChangeColumnWidths;\n          }\n        }\n        // Move column\n        else if (action.equals(\"moveColumn\"))\n        {\n          String activeTabParam = runtimeData.getParameter(\"activeTab\");\n          if (activeTabParam != null)\n            activeTab = activeTabParam;\n        }\n        // Move column here\n        else if (action.equals(\"moveColumnHere\"))\n        {\n          try\n          {\n            // Get the source column if this is a one-step move, otherwise we already\n            // have it stored as elementID\n            String sourceId = runtimeData.getParameter(\"sourceID\");\n            if (sourceId != null)\n              elementID = sourceId;\n\n            String method = runtimeData.getParameter(\"method\");\n            String destinationId = runtimeData.getParameter(\"elementID\");\n\n            moveColumn(elementID, method, destinationId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageMoveColumn;\n          }\n        }\n        // New column\n        else if (action.equals(\"newColumn\"))\n        {\n          try\n          {\n            String method = runtimeData.getParameter(\"method\");\n            elementID = runtimeData.getParameter(\"elementID\");\n            String destinationColumnId = elementID;\n\n            addColumn(method, destinationColumnId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageNewColumn;\n          }\n        }\n        // Add column\n        else if (action.equals(\"addColumn\"))\n        {\n          // Currently not implemented...\n          // We need to assign widths to columns.\n          // The action addColumn isn't in the stylesheet yet.\n        }\n        // Delete column\n        else if (action.equals(\"deleteColumn\"))\n        {\n          try\n          {\n            String columnId = runtimeData.getParameter(\"elementID\");\n\n            deleteElement(columnId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageDeleteColumn;\n          }\n        }\n        // Select channel\n        else if (action.equals(\"selectChannel\"))\n        {\n          elementID = runtimeData.getParameter(\"elementID\");\n\n          // Modify channel parameters\n          String subAction = runtimeData.getParameter(\"subAction\");\n          if (subAction != null && subAction.equals(\"modifyChannelParams\"))\n          {\n            IUserLayoutChannelDescription layoutChannel=(IUserLayoutChannelDescription)ulm.getNode(elementID);\n            String channelPublishId=layoutChannel.getChannelPublishId();\n\n            Document channelRegistry = ChannelRegistryManager.getChannelRegistry(staticData.getPerson());\n            Element channel = (Element)channelRegistry.getElementById(\"chan\" + channelPublishId);\n            List overridableChanParams = getOverridableChannelParams(channelPublishId);\n            context.internalState = new ParametersState(context, this, overridableChanParams, channel);\n            context.internalState.setStaticData(staticData);\n          }\n        }\n        // Move channel\n        else if (action.equals(\"moveChannel\"))\n        {\n          String activeTabParam = runtimeData.getParameter(\"activeTab\");\n          if (activeTabParam != null)\n            activeTab = activeTabParam;\n        }\n        // Move channel here\n        else if (action.equals(\"moveChannelHere\"))\n        {\n          try\n          {\n            // Get the source channel if this is a one-step move, otherwise we already\n            // have it stored as elementID\n            String sourceId = runtimeData.getParameter(\"sourceID\");\n            if (sourceId != null)\n              elementID = sourceId;\n\n            String method = runtimeData.getParameter(\"method\");\n            String destinationId = runtimeData.getParameter(\"elementID\");\n\n            moveChannel(elementID, method, destinationId);\n\n            // Clear out elementId so the channel doesn't stay highlighted\n            elementID = null;\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageMoveChannel;\n          }\n        }\n        // Delete channel\n        else if (action.equals(\"deleteChannel\"))\n        {\n          try\n          {\n            String channelSubscribeId = runtimeData.getParameter(\"elementID\");\n\n            deleteChannel(channelSubscribeId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageDeleteChannel;\n          }\n        }\n        // Cancel\n        else if (action.equals(\"cancel\"))\n        {\n          elementID = \"none\";\n        }\n      }\n      else\n        action = \"none\";\n    }","id":39895,"modified_method":"public void setRuntimeData (ChannelRuntimeData rd) throws PortalException\n    {\n      runtimeData = rd;\n\n      // If the user hasn't clicked on a tab, get persisted active tab\n      if (activeTab.equals(\"none\"))\n        activeTab = getActiveTab();\n\n      action = runtimeData.getParameter(\"action\");\n\n      if (action != null)\n      {\n        // Select tab\n        if (action.equals(\"selectTab\"))\n          activeTab = runtimeData.getParameter(\"activeTab\");\n        // Set active tab\n        else if (action.equals(\"setActiveTab\"))\n        {\n          try\n          {\n            setActiveTab(activeTab);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageSetActiveTab;\n          }\n        }\n        // Change tab restrictions\n        else if (action.equals(\"changePermissions\" ) )\n        {\n          try\n          {\n            String elementId = runtimeData.getParameter(\"elementID\");\n            String moveAllowed = runtimeData.getParameter(\"moveAllowed\");\n            String editAllowed = runtimeData.getParameter(\"editAllowed\");\n            String addChildAllowed = runtimeData.getParameter(\"addChildAllowed\");\n            String deleteAllowed = runtimeData.getParameter(\"deleteAllowed\");\n            changeRestrictions( elementId, moveAllowed, editAllowed,\n                                addChildAllowed, deleteAllowed );\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageRenameTab;\n          }\n        }\n        // Rename tab\n        else if (action.equals(\"renameTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n            String tabName = runtimeData.getParameter(\"tabName\");\n\n            renameTab(tabId, tabName);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageRenameTab;\n          }\n        }\n        // Move tab\n        else if (action.equals(\"moveTab\"))\n        {\n          try\n          {\n            String methodAndID = runtimeData.getParameter(\"method_ID\");\n\n            if (methodAndID != null)\n            {\n              String sourceTabId = runtimeData.getParameter(\"elementID\");\n              int indexOf_ = methodAndID.indexOf(\"_\");\n              String method = methodAndID.substring(0, indexOf_); // insertBefore or appendAfter\n              String destinationTabId = methodAndID.substring(indexOf_ + 1);\n\n              moveTab(sourceTabId, method, destinationTabId);\n            }\n            else\n              action = \"selectTab\";\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageMoveTab;\n          }\n        }\n        // Add tab\n        else if (action.equals(\"addTab\"))\n        {\n          try\n          {\n            String tabName = runtimeData.getParameter(\"tabName\");\n            String methodAndID = runtimeData.getParameter(\"method_ID\");\n\n            if (methodAndID != null)\n            {\n              int indexOf_ = methodAndID.indexOf(\"_\");\n              String method = methodAndID.substring(0, indexOf_); // insertBefore or appendAfter\n              String destinationTabId = methodAndID.substring(indexOf_ + 1);\n\n              addTab(tabName, method, destinationTabId);\n            }\n            else\n              action = \"newTab\";\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageAddTab;\n          }\n        }\n        // Delete tab\n        else if (action.equals(\"deleteTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n\n            deleteElement(tabId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageDeleteTab;\n          }\n        }\n        // Lock tab\n        else if (action.equals(\"lockTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n\n            updateTabLock(tabId, true);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageLockTab;\n          }\n        }\n        // Unlock tab\n        else if (action.equals(\"unlockTab\"))\n        {\n          try\n          {\n            String tabId = runtimeData.getParameter(\"elementID\");\n\n            updateTabLock(tabId, false);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageUnlockTab;\n          }\n        }\n        // Select column\n        else if (action.equals(\"selectColumn\"))\n          elementID = runtimeData.getParameter(\"elementID\");\n        // Change column width(s)\n        else if (action.equals(\"columnWidth\"))\n        {\n          try\n          {\n            HashMap columnWidths = new HashMap();\n            Enumeration eParams = runtimeData.getParameterNames();\n            while (eParams.hasMoreElements())\n            {\n              String param = (String)eParams.nextElement();\n              String prefix = \"columnWidth_\";\n\n              if (param.startsWith(prefix))\n              {\n                String folderId = param.substring(prefix.length());\n                String newWidth = runtimeData.getParameter(prefix + folderId);\n                columnWidths.put(folderId, newWidth);\n              }\n            }\n\n            changeColumnWidths(columnWidths);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageChangeColumnWidths;\n          }\n        }\n        // Move column\n        else if (action.equals(\"moveColumn\"))\n        {\n          String activeTabParam = runtimeData.getParameter(\"activeTab\");\n          if (activeTabParam != null)\n            activeTab = activeTabParam;\n        }\n        // Move column here\n        else if (action.equals(\"moveColumnHere\"))\n        {\n          try\n          {\n            // Get the source column if this is a one-step move, otherwise we already\n            // have it stored as elementID\n            String sourceId = runtimeData.getParameter(\"sourceID\");\n            if (sourceId != null)\n              elementID = sourceId;\n\n            String method = runtimeData.getParameter(\"method\");\n            String destinationId = runtimeData.getParameter(\"elementID\");\n\n            moveColumn(elementID, method, destinationId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageMoveColumn;\n          }\n        }\n        // New column\n        else if (action.equals(\"newColumn\"))\n        {\n          try\n          {\n            String method = runtimeData.getParameter(\"method\");\n            elementID = runtimeData.getParameter(\"elementID\");\n            String destinationColumnId = elementID;\n\n            addColumn(method, destinationColumnId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageNewColumn;\n          }\n        }\n        // Add column\n        else if (action.equals(\"addColumn\"))\n        {\n          // Currently not implemented...\n          // We need to assign widths to columns.\n          // The action addColumn isn't in the stylesheet yet.\n        }\n        // Delete column\n        else if (action.equals(\"deleteColumn\"))\n        {\n          try\n          {\n            String columnId = runtimeData.getParameter(\"elementID\");\n\n            deleteElement(columnId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageDeleteColumn;\n          }\n        }\n        // Select channel\n        else if (action.equals(\"selectChannel\"))\n        {\n          elementID = runtimeData.getParameter(\"elementID\");\n\n          // Modify channel parameters\n          String subAction = runtimeData.getParameter(\"subAction\");\n          if (subAction != null && subAction.equals(\"modifyChannelParams\"))\n          {\n            IUserLayoutChannelDescription layoutChannel=(IUserLayoutChannelDescription)ulm.getNode(elementID);\n            List overridableChanParams = getOverridableChannelParams(layoutChannel);\n            context.internalState = new ParametersState(context, this, overridableChanParams, layoutChannel);\n            context.internalState.setStaticData(staticData);\n          }\n        }\n        // Move channel\n        else if (action.equals(\"moveChannel\"))\n        {\n          String activeTabParam = runtimeData.getParameter(\"activeTab\");\n          if (activeTabParam != null)\n            activeTab = activeTabParam;\n        }\n        // Move channel here\n        else if (action.equals(\"moveChannelHere\"))\n        {\n          try\n          {\n            // Get the source channel if this is a one-step move, otherwise we already\n            // have it stored as elementID\n            String sourceId = runtimeData.getParameter(\"sourceID\");\n            if (sourceId != null)\n              elementID = sourceId;\n\n            String method = runtimeData.getParameter(\"method\");\n            String destinationId = runtimeData.getParameter(\"elementID\");\n\n            moveChannel(elementID, method, destinationId);\n\n            // Clear out elementId so the channel doesn't stay highlighted\n            elementID = null;\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageMoveChannel;\n          }\n        }\n        // Delete channel\n        else if (action.equals(\"deleteChannel\"))\n        {\n          try\n          {\n            String channelSubscribeId = runtimeData.getParameter(\"elementID\");\n\n            deleteChannel(channelSubscribeId);\n          }\n          catch (Exception e)\n          {\n            log.error(e, e);\n            action = \"error\";\n            errorMessage = errorMessageDeleteChannel;\n          }\n        }\n        // Cancel\n        else if (action.equals(\"cancel\"))\n        {\n          elementID = \"none\";\n        }\n      }\n      else\n        action = \"none\";\n    }","commit_id":"bb407d30add625278590b23cf683e25bbf436d96","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Adds a channel to the layout.\n   * @param newChannel the channel to add\n   * @param position either <code>before<\/code> or <code>after<\/code>\n   * @param destinationElementId the ID of the channel to insert the new channel before or append after\n   * @throws PortalException\n   */\n  private final void addChannel(Element newChannel, String position, String destinationElementId) throws PortalException\n    {\n      IUserLayoutChannelDescription channel=new UserLayoutChannelDescription(newChannel);\n      if(isTab(destinationElementId)) {\n          // create a new column and move channel there\n          IUserLayoutNodeDescription newColumn=ulm.addNode(createFolder(\"Column\"),destinationElementId,null);\n          ulm.addNode(channel,newColumn.getId(),null);\n      } else if(isColumn(destinationElementId)) {\n          // move the channel into the column\n          ulm.addNode(channel,destinationElementId,null);\n      } else {\n          // assume that destinationElementId is that of a sibling channel\n          String siblingId=null;\n          if(position.equals(\"before\")) {\n              siblingId=destinationElementId;\n    }\n          ulm.addNode(channel,ulm.getParentId(destinationElementId),siblingId);\n    }\n\n      // Make sure ChannelManager knows about the new channel\n      pcs.getChannelManager().instantiateChannel(channel.getId());\n      saveLayout(true);\n  }","id":39896,"modified_method":"/**\n   * Adds a channel to the layout.\n   * @param newChannel the channel to add\n   * @param position either <code>before<\/code> or <code>after<\/code>\n   * @param destinationElementId the ID of the channel to insert the new channel before or append after\n   * @throws PortalException\n   */\n  private final void addChannel(Element newChannel, String position, String destinationElementId) throws PortalException\n    {\n      IUserLayoutChannelDescription channel=new UserLayoutChannelDescription(newChannel);\n      addChannel(channel, position, destinationElementId);\n  }","commit_id":"bb407d30add625278590b23cf683e25bbf436d96","url":"https://github.com/Jasig/uPortal"},{"original_method":"private void updateParams(IUserLayoutChannelDescription cd) throws PortalException {\n      // Process params\n      Iterator iter = overridableChanParams.iterator();\n      while (iter.hasNext()) {\n        Element parameterE = (Element)iter.next();\n        String paramName = parameterE.getAttribute(\"name\");\n        String paramValue = runtimeData.getParameter(paramName);\n        cd.setParameterValue(paramName, paramValue);\n      }\n      ulm.updateNode(cd);\n      context.saveLayout(false);\n    }","id":39897,"modified_method":"private void updateParams(IUserLayoutChannelDescription cd) throws PortalException {\n      // Process params\n      Iterator iter = overridableChanParams.iterator();\n      while (iter.hasNext()) {\n          ChannelParameter parm = (ChannelParameter)iter.next();\n          String paramValue = runtimeData.getParameter(parm.getName());\n          cd.setParameterValue(parm.getName(), paramValue);\n      }\n      ulm.updateNode(cd);\n      context.saveLayout(false);\n    }","commit_id":"bb407d30add625278590b23cf683e25bbf436d96","url":"https://github.com/Jasig/uPortal"},{"original_method":"public ParametersState(TabColumnPrefsState context, BaseState previousState, List overridableChanParams, Element registryChannel) {\n      this.context = context;\n      this.previousState = previousState;\n      this.overridableChanParams = overridableChanParams;\n      this.registryChannel = registryChannel;\n    }","id":39898,"modified_method":"public ParametersState(TabColumnPrefsState context, BaseState previousState, List overridableChanParams, IUserLayoutChannelDescription channelDesc) {\n      this.context = context;\n      this.previousState = previousState;\n      this.overridableChanParams = overridableChanParams;\n      this.channelDesc = channelDesc;\n    }","commit_id":"bb407d30add625278590b23cf683e25bbf436d96","url":"https://github.com/Jasig/uPortal"},{"original_method":"public ParametersState(TabColumnPrefsState context, BaseState previousState, List overridableChanParams, Element registryChannel, String position, String destinationElementId) {\n      this(context, previousState, overridableChanParams, registryChannel);\n      this.position = position;\n      this.destinationElementId = destinationElementId;\n    }","id":39899,"modified_method":"public ParametersState(TabColumnPrefsState context, BaseState previousState, List overridableChanParams, IUserLayoutChannelDescription channelDesc, String position, String destinationElementId) {\n      this(context, previousState, overridableChanParams, channelDesc);\n      this.position = position;\n      this.destinationElementId = destinationElementId;\n    }","commit_id":"bb407d30add625278590b23cf683e25bbf436d96","url":"https://github.com/Jasig/uPortal"},{"original_method":"private void applyChanges() {\n      // Finally, add the channel to the layout or modify it if it is already there\n      try {\n        if (previousState instanceof NewChannelState) {\n          processParams(registryChannel);\n          context.addChannel(registryChannel, position, destinationElementId);\n        }\n        else if (previousState instanceof DefaultState) {\n          updateParams((IUserLayoutChannelDescription)ulm.getNode(elementID));\n          }\n\n      } catch (Exception e) {\n        error = true;\n        errorMessage = errorMessageModChannelParams;\n      }\n    }","id":39900,"modified_method":"private void applyChanges() {\n      // Finally, add the channel to the layout or modify it if it is already there\n      try {\n        if (previousState instanceof NewChannelState) {\n            processParams();\n          context.addChannel(channelDesc, position, destinationElementId);\n        }\n        else if (previousState instanceof DefaultState) {\n          updateParams((IUserLayoutChannelDescription)ulm.getNode(elementID));\n          }\n\n      } catch (Exception e) {\n        error = true;\n        errorMessage = errorMessageModChannelParams;\n      }\n    }","commit_id":"bb407d30add625278590b23cf683e25bbf436d96","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Finds any parameters in a channel that are determined to be overridable\n   * by a user.\n   * @param channelPublishId an identifier to find the selected channel within the channel registry\n   * @return a list of <parameter> elements whose override attribute is set to true\n   * @throws org.jasig.portal.PortalException\n   */\n  private final List getOverridableChannelParams(String channelPublishId) throws PortalException {\n    Document channelRegistry = ChannelRegistryManager.getChannelRegistry(staticData.getPerson());\n    Element channel = (Element)channelRegistry.getElementById(channelPublishId.startsWith(\"chan\") ? channelPublishId : \"chan\" + channelPublishId);\n    List overridableParams = null;\n\n    if (channel != null) {\n      overridableParams = new ArrayList();\n\n      NodeList params = channel.getElementsByTagName(\"parameter\");\n      for (int i = 0; i < params.getLength(); i++) {\n        Element param = (Element)params.item(i);\n        String override = param.getAttribute(\"override\");\n        if (override != null && override.equals(\"yes\"))\n          overridableParams.add(param);\n      }\n    } else {\n    \t\n      throw new PortalException(\"channel.missing.from.registry \"+ channelPublishId);\n    }\n    return overridableParams;\n  }","id":39901,"modified_method":"/**\n   * Finds any parameters in a channel that are determined to be overridable\n   * by a user.\n   * @param channelPublishId an identifier to find the selected channel within the channel registry\n   * @return a list of <parameter> elements whose override attribute is set to true\n   * @throws org.jasig.portal.PortalException\n   */\n  private final List getOverridableChannelParams(String channelPublishId)\n            throws PortalException\n    {\n        List overridableParams = null;\n        ChannelParameter parms[] = getChannelDefParams(channelPublishId);\n\n        if (parms != null && parms.length > 0)\n        {\n            overridableParams = new ArrayList();\n            for (int p = 0; p < parms.length; p++)\n            {\n                if (parms[p].getOverride())\n                    overridableParams.add(parms[p]);\n            }\n        }\n        return overridableParams;\n    }","commit_id":"bb407d30add625278590b23cf683e25bbf436d96","url":"https://github.com/Jasig/uPortal"},{"original_method":"private void processParams(Element channel) {\n      // Process params\n      Iterator iter = overridableChanParams.iterator();\n      while (iter.hasNext()) {\n        Element parameterE = (Element)iter.next();\n        String paramName = parameterE.getAttribute(\"name\");\n        String paramValue = runtimeData.getParameter(paramName);\n\n        // Find param within channel and update it\n        NodeList params = channel.getElementsByTagName(\"parameter\");\n        for (int i = 0; i < params.getLength(); i++) {\n          Element paramE = (Element)params.item(i);\n          if (paramE.getAttribute(\"name\").equals(paramName)) {\n            paramE.setAttribute(\"value\", paramValue);\n            break;\n          }\n        }\n      }\n    }","id":39902,"modified_method":"private void processParams() {\n        // Process params by passing through the overrideable parms list and\n        // pushing the submitted value for that param into the description\n        Iterator iter = overridableChanParams.iterator();\n        while (iter.hasNext()) {\n          ChannelParameter parm = (ChannelParameter)iter.next();\n          String paramValue = runtimeData.getParameter(parm.getName());\n          channelDesc.setParameterValue(parm.getName(), paramValue);\n        }\n      }","commit_id":"bb407d30add625278590b23cf683e25bbf436d96","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void setRuntimeData (ChannelRuntimeData rd) throws PortalException {\n      runtimeData = rd;\n      String action = runtimeData.getParameter(\"action\");\n      if (action != null) {\n        if (action.equals(\"cancel\")) {\n          returnToDefaultState();\n        } else {\n          // User clicked \"?\"\n          if (runtimeData.getParameter(\"channelMoreInfo\") != null) {\n            // Implement channel preview here!\n            String selectedChannel = runtimeData.getParameter(\"selectedChannel\");\n            // Do more...\n          } else if (runtimeData.getParameter(\"addChannel\") != null) {\n            // User clicked \"Add\"\n            String selectedChannel = runtimeData.getParameter(\"selectedChannel\");\n            if (selectedChannel != null) {\n              try {\n                // Determine whether channel has overridable parameters\n                List overridableChanParams = getOverridableChannelParams(selectedChannel);\n                if (overridableChanParams.isEmpty()) {\n                  addChannel(selectedChannel, position, elementID);\n                  returnToDefaultState();\n                } else { // present user with screen to specify subscribe-time params\n                  Document channelRegistry = ChannelRegistryManager.getChannelRegistry(staticData.getPerson());\n                  Element channel = (Element)channelRegistry.getElementById(selectedChannel);\n                  context.internalState = new ParametersState(context, this, overridableChanParams, channel, position, elementID);\n                  context.internalState.setStaticData(staticData);\n                }\n              } catch (Exception e) {\n                  log.error(\"Problem occurred adding Channel.\", e);\n                errorMessage = errorMessageNewChannel;\n              }\n            }\n          } else {\n            // Collect the position and element ID the first time\n            String passedPosition = runtimeData.getParameter(\"position\");\n            String passedElementID = runtimeData.getParameter(\"elementID\");\n            if (passedPosition != null)\n              position = passedPosition;\n            if (passedElementID != null)\n              elementID = passedElementID;\n\n            // User clicked \"Go\"\n            String selectedCategory = runtimeData.getParameter(\"selectedCategory\");\n            if (selectedCategory != null  && selectedCategory.trim().length() > 0)\n              catID = selectedCategory;\n          }\n        }\n      }\n    }","id":39903,"modified_method":"public void setRuntimeData (ChannelRuntimeData rd) throws PortalException {\n      runtimeData = rd;\n      String action = runtimeData.getParameter(\"action\");\n      if (action != null) {\n        if (action.equals(\"cancel\")) {\n          returnToDefaultState();\n        } else {\n          // User clicked \"?\"\n          if (runtimeData.getParameter(\"channelMoreInfo\") != null) {\n            // Implement channel preview here!\n            String selectedChannel = runtimeData.getParameter(\"selectedChannel\");\n            // Do more...\n          } else if (runtimeData.getParameter(\"addChannel\") != null) {\n            // User clicked \"Add\"\n            String selectedChannel = runtimeData.getParameter(\"selectedChannel\");\n            if (selectedChannel != null) {\n              try {\n                // Determine whether channel has overridable parameters\n                List overridableChanParams = getOverridableChannelParams(selectedChannel);\n                if (overridableChanParams.isEmpty()) {\n                  addChannel(selectedChannel, position, elementID);\n                  returnToDefaultState();\n                } else { // present user with screen to specify subscribe-time params\n                  Document channelRegistry = ChannelRegistryManager.getChannelRegistry(staticData.getPerson());\n                  Element channel = channelRegistry.getElementById(selectedChannel);\n                  /*\n                   * The next line is tightly coupled to DLM which is ok since \n                   * this is the DLM version of the prefs channel. But if we \n                   * rework the ILayoutManager interface to create an \n                   * implementation independant approach to instantiating \n                   * channel descriptions we wouldn't have to tighly couple.\n                   */\n                  ChannelDescription newChannel = new ChannelDescription(channel);\n                  context.internalState = new ParametersState(context, this, overridableChanParams, newChannel, position, elementID);\n                  context.internalState.setStaticData(staticData);\n                }\n              } catch (Exception e) {\n                  log.error(\"Problem occurred adding Channel.\", e);\n                errorMessage = errorMessageNewChannel;\n              }\n            }\n          } else {\n            // Collect the position and element ID the first time\n            String passedPosition = runtimeData.getParameter(\"position\");\n            String passedElementID = runtimeData.getParameter(\"elementID\");\n            if (passedPosition != null)\n              position = passedPosition;\n            if (passedElementID != null)\n              elementID = passedElementID;\n\n            // User clicked \"Go\"\n            String selectedCategory = runtimeData.getParameter(\"selectedCategory\");\n            if (selectedCategory != null  && selectedCategory.trim().length() > 0)\n              catID = selectedCategory;\n          }\n        }\n      }\n    }","commit_id":"bb407d30add625278590b23cf683e25bbf436d96","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * This is the public method\n    * @throws Exception\n    * @param sessionData\n    */\n   public void execute (CGroupsManagerSessionData sessionData) throws Exception{\n      ChannelStaticData staticData = sessionData.staticData;\n      ChannelRuntimeData runtimeData= sessionData.runtimeData;\n\n      Utility.logMessage(\"DEBUG\", \"DeleteGroup::execute(): Start\");\n      Document model = getXmlDoc(sessionData);\n      String userID = getUserID(sessionData);\n      String theCommand = runtimeData.getParameter(\"grpCommand\");\n      String delId = getCommandArg(runtimeData);\n      Element delElem = GroupsManagerXML.getElementByTagNameAndId(model, GROUP_TAGNAME, delId);\n      Element pn = ((Element)delElem.getParentNode());\n      if (pn !=null){\n       sessionData.highlightedGroupID = pn.getAttribute(\"id\");\n      }\n      String delKey = delElem.getAttribute(\"key\");\n      String elemName = delElem.getAttribute(\"name\");\n      String retMsg;\n      Node parentNode;\n      Node deletedNode;\n      Utility.logMessage(\"DEBUG\", \"DeleteGroup::execute(): Group: \" + elemName + \"will be deleted\");\n      if (Utility.areEqual(delElem.getAttribute(\"searchResults\"), \"true\")){\n        // if it is search results, just delete the node and skip the rest\n        delElem.getParentNode().removeChild(delElem);\n      }\n      else{\n         //IEntityGroup delGroup = GroupsManagerXML.retrieveGroup(delKey);\n         IEntityGroup delGroup = sessionData.lockedGroup;\n         if (delGroup == null) {\n            retMsg = \"Unable to retrieve Group!\";\n            sessionData.feedback = retMsg;\n            return;\n         }\n         Utility.logMessage(\"DEBUG\", \"DeleteGroup::execute(): About to delete group: \"\n               + elemName);\n         // remove permissions associated with group\n         deletePermissions((IGroupMember)delGroup);\n         // delete the group\n         delGroup.delete();\n         Utility.logMessage(\"DEBUG\", \"DeleteGroup::execute(): About to delete xml nodes for group: \"\n               + elemName);\n         // remove all xml nodes for this group\n         Iterator deletedNodes = GroupsManagerXML.getNodesByTagNameAndKey(model, GROUP_TAGNAME,\n               delKey);\n         IEntityGroup parentEntGrp = null;\n         String hasMbrs = \"duh\";\n         while (deletedNodes.hasNext()) {\n            deletedNode = (Node)deletedNodes.next();\n            parentNode = deletedNode.getParentNode();\n            String nodeKey = ((Element)parentNode).getAttribute(\"key\");\n            if (parentEntGrp == null || !parentEntGrp.getKey().equals(nodeKey)) {\n               if (!Utility.areEqual(nodeKey, \"\")){\n                  parentEntGrp = GroupsManagerXML.retrieveGroup(nodeKey);\n                  hasMbrs = String.valueOf(parentEntGrp.hasMembers());\n                  parentNode.removeChild(deletedNode);\n               }\n               else{\n                  //Search elements have a null \"key\"\n                  parentNode.removeChild(deletedNode);\n                  NodeList nl = parentNode.getChildNodes();\n                  if (nl.getLength() > 0){\n                     hasMbrs = \"true\";\n                  }\n                  else{\n                     hasMbrs = \"false\";\n                  }\n               }\n            }\n            ((Element)parentNode).setAttribute(\"hasMembers\", hasMbrs);\n         }\n\n         /** Remove the permission elements in the xmlDoc */\n         Node principalNode = (Node)model.getDocumentElement().getElementsByTagName(\"principal\").item(0);\n         NodeList permElems = model.getElementsByTagName(\"permission\");\n         /** If we delete from the bottom up, the NodeList elements shift down\n          *  everytime we delete an element. Since the elements that we are looking\n          *  for are sequential and because we increment the counter at the end of\n          *  the loop, the element that we should process next slips down into the\n          *  slot that we just processed. We therefore end up deleting every other\n          *  element. The solution is to delete from the top down.\n          */\n         for (int i = permElems.getLength() - 1; i > -1; i--) {\n            Element permElem = (Element)permElems.item(i);\n            if (permElem.getAttribute(\"target\").equals(delKey)) {\n               principalNode.removeChild(permElem);\n            }\n         }\n         sessionData.mode=BROWSE_MODE;\n      }\n      Utility.logMessage(\"DEBUG\", \"DeleteGroup::execute(): Finished\");\n   }","id":39904,"modified_method":"/**\n    * This is the public method\n    * @throws Exception\n    * @param sessionData\n    */\n   public void execute (CGroupsManagerSessionData sessionData) throws Exception{\n      //ChannelStaticData staticData = sessionData.staticData;\n      ChannelRuntimeData runtimeData= sessionData.runtimeData;\n\n      Utility.logMessage(\"DEBUG\", \"DeleteGroup::execute(): Start\");\n      Document model = getXmlDoc(sessionData);\n      String delId = getCommandArg(runtimeData);\n      Element delElem = GroupsManagerXML.getElementByTagNameAndId(model, GROUP_TAGNAME, delId);\n      Element pn = ((Element)delElem.getParentNode());\n      if (pn !=null){\n       sessionData.highlightedGroupID = pn.getAttribute(\"id\");\n      }\n      String delKey = delElem.getAttribute(\"key\");\n      String elemName = delElem.getAttribute(\"name\");\n      String retMsg;\n      Node parentNode;\n      Node deletedNode;\n      Utility.logMessage(\"DEBUG\", \"DeleteGroup::execute(): Group: \" + elemName + \"will be deleted\");\n      if (Utility.areEqual(delElem.getAttribute(\"searchResults\"), \"true\")){\n        // if it is search results, just delete the node and skip the rest\n        delElem.getParentNode().removeChild(delElem);\n      }\n      else{\n         IEntityGroup delGroup = sessionData.lockedGroup;\n         if (delGroup == null) {\n            retMsg = \"Unable to retrieve Group!\";\n            sessionData.feedback = retMsg;\n            return;\n         }\n         Utility.logMessage(\"DEBUG\", \"DeleteGroup::execute(): About to delete group: \"\n               + elemName);\n         // remove permissions associated with group\n         deletePermissions(delGroup);\n         // delete the group\n         delGroup.delete();\n         Utility.logMessage(\"DEBUG\", \"DeleteGroup::execute(): About to delete xml nodes for group: \"\n               + elemName);\n         // remove all xml nodes for this group\n         Iterator deletedNodes = GroupsManagerXML.getNodesByTagNameAndKey(model, GROUP_TAGNAME,\n               delKey);\n         IEntityGroup parentEntGrp = null;\n         String hasMbrs = \"duh\";\n         while (deletedNodes.hasNext()) {\n            deletedNode = (Node)deletedNodes.next();\n            parentNode = deletedNode.getParentNode();\n            String nodeKey = ((Element)parentNode).getAttribute(\"key\");\n            if (parentEntGrp == null || !parentEntGrp.getKey().equals(nodeKey)) {\n               if (!Utility.areEqual(nodeKey, \"\")){\n                  parentEntGrp = GroupsManagerXML.retrieveGroup(nodeKey);\n                  hasMbrs = String.valueOf(parentEntGrp.hasMembers());\n                  parentNode.removeChild(deletedNode);\n               }\n               else{\n                  //Search elements have a null \"key\"\n                  parentNode.removeChild(deletedNode);\n                  NodeList nl = parentNode.getChildNodes();\n                  if (nl.getLength() > 0){\n                     hasMbrs = \"true\";\n                  }\n                  else{\n                     hasMbrs = \"false\";\n                  }\n               }\n            }\n            ((Element)parentNode).setAttribute(\"hasMembers\", hasMbrs);\n         }\n\n         /** Remove the permission elements in the xmlDoc */\n         Node principalNode = model.getDocumentElement().getElementsByTagName(\"principal\").item(0);\n         NodeList permElems = model.getElementsByTagName(\"permission\");\n         /** If we delete from the bottom up, the NodeList elements shift down\n          *  everytime we delete an element. Since the elements that we are looking\n          *  for are sequential and because we increment the counter at the end of\n          *  the loop, the element that we should process next slips down into the\n          *  slot that we just processed. We therefore end up deleting every other\n          *  element. The solution is to delete from the top down.\n          */\n         for (int i = permElems.getLength() - 1; i > -1; i--) {\n            Element permElem = (Element)permElems.item(i);\n            if (permElem.getAttribute(\"target\").equals(delKey)) {\n               principalNode.removeChild(permElem);\n            }\n         }\n         sessionData.mode=BROWSE_MODE;\n      }\n      Utility.logMessage(\"DEBUG\", \"DeleteGroup::execute(): Finished\");\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * This section adds the selected members to an IEntityGroup.\n    * @throws Exception\n    * @param gmCollection\n    * @param sessionData\n    * @param parentElem\n    * @param model\n    * @throws Exception\n    */\n   private void addChildrenToGroup (Vector gmCollection, CGroupsManagerSessionData sessionData,\n      Element parentElem, Document model) throws Exception {\n      ChannelRuntimeData runtimeData = sessionData.runtimeData;\n      Element parent;\n      ILockableEntityGroup parentGroup = null;\n      IGroupMember childGm = null;\n      Element childElem;\n      String parentName = parentElem.getAttribute(\"key\");\n      String childName = \"\";\n      //parentGroup = GroupsManagerXML.retrieveGroup(parentElem.getAttribute(\"key\"));\n      parentGroup = sessionData.lockedGroup;\n      Iterator gmItr = gmCollection.iterator();\n      while (gmItr.hasNext()) {\n         childGm = (IGroupMember) gmItr.next();\n         childName = GroupsManagerXML.getEntityName(childGm.getType(), childGm.getKey());\n         parentName = parentGroup.getName();\n         Utility.logMessage(\"DEBUG\", \"DoneWithSelection::execute: About to add child\");\n         // add to parent group\n         parentGroup.addMember(childGm);\n         // update parent group\n         parentGroup.updateMembersAndRenewLock();\n         // get parent element(s) and add element for child group member\n         Iterator parentNodes = GroupsManagerXML.getNodesByTagNameAndKey(model, GROUP_TAGNAME,\n               parentElem.getAttribute(\"key\"));\n         while (parentNodes.hasNext()) {\n            parent = (Element)parentNodes.next();\n\n            childElem = GroupsManagerXML.getGroupMemberXml(childGm, false, null, sessionData.getUnrestrictedData());\n            parent.appendChild((Node)childElem);\n            parent.setAttribute(\"hasMembers\", \"true\");\n         }\n      }\n   }","id":39905,"modified_method":"/**\n    * This section adds the selected members to an IEntityGroup.\n    * @throws Exception\n    * @param gmCollection\n    * @param sessionData\n    * @param parentElem\n    * @param model\n    * @throws Exception\n    */\n   private void addChildrenToGroup (Vector gmCollection, CGroupsManagerSessionData sessionData,\n      Element parentElem, Document model) throws Exception {\n      //ChannelRuntimeData runtimeData = sessionData.runtimeData;\n      Element parent;\n      ILockableEntityGroup parentGroup = null;\n      IGroupMember childGm = null;\n      Element childElem;\n      parentGroup = sessionData.lockedGroup;\n      Iterator gmItr = gmCollection.iterator();\n      while (gmItr.hasNext()) {\n         childGm = (IGroupMember) gmItr.next();\n         Utility.logMessage(\"DEBUG\", \"DoneWithSelection::execute: About to add child\");\n         // add to parent group\n         parentGroup.addMember(childGm);\n         // remove property elements for child gm and clear the Entity Properties cache.\n         GroupsManagerXML.removePropertyElements (model, childGm, true);\n         // update parent group\n         parentGroup.updateMembersAndRenewLock();\n         // get parent element(s) and add element for child group member\n         Iterator parentNodes = GroupsManagerXML.getNodesByTagNameAndKey(model, GROUP_TAGNAME,\n               parentElem.getAttribute(\"key\"));\n         while (parentNodes.hasNext()) {\n            parent = (Element)parentNodes.next();\n\n            childElem = GroupsManagerXML.getGroupMemberXml(childGm, false, null, sessionData.getUnrestrictedData());\n            parent.appendChild(childElem);\n            parent.setAttribute(\"hasMembers\", \"true\");\n         }\n      }\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * This is the public method\n    * @throws Exception\n    * @param sessionData\n    */\n   public void execute (CGroupsManagerSessionData sessionData) throws Exception{\n      ChannelStaticData staticData = sessionData.staticData;\n      ChannelRuntimeData runtimeData= sessionData.runtimeData;\n\n      Utility.logMessage(\"DEBUG\", \"DoneWithSelection::execute(): Start\");\n      String parentId = null;\n      boolean hasParentId = hasParentId(staticData);\n      Utility.logMessage(\"DEBUG\", \"DoneWithSelection::execute(): Parent ID is set: \"\n            + hasParentId);\n      IGroupMember[] princResults = null;\n      Document model = getXmlDoc(sessionData);\n      Element rootElem = model.getDocumentElement();\n      NodeList nGroupList = rootElem.getElementsByTagName(GROUP_TAGNAME);\n      NodeList nEntityList = rootElem.getElementsByTagName(ENTITY_TAGNAME);\n      Vector gmCollection = new Vector();\n      Element parentElem = null;\n      Utility.logMessage(\"DEBUG\", \"DoneWithSelection::execute(): Starting group process\");\n      addGroupMemberToCollection(gmCollection, nGroupList);\n      Utility.logMessage(\"DEBUG\", \"DoneWithSelection::execute(): Starting entity process\");\n      addGroupMemberToCollection(gmCollection, nEntityList);\n      // check if selections were made\n      if (gmCollection.size() <1) {\n         sessionData.feedback = sessionData.feedback + \"\\n No groups or people were selected! \";\n         return;\n      }\n\n      /** Presence of parentID means the process is not in servant mode. That is,\n       * the master channel is the Groups Manager channel and AddMembers had\n       * been selected\n       */\n      if (hasParentId) {\n         parentId = getParentId(staticData);\n         Utility.logMessage(\"DEBUG\", \"DoneWithSelection::execute(): Parent ID is set to: \"\n               + parentId);\n         parentElem = GroupsManagerXML.getElementByTagNameAndId(model, GROUP_TAGNAME, parentId);\n         if (parentElem == null) {\n            Utility.logMessage(\"ERROR\", \"DoneWithSelection::execute: Error parent element not found\");\n            return;\n         }\n         addChildrenToGroup(gmCollection, sessionData, parentElem, model);\n         clearSelected(sessionData);\n         sessionData.mode = sessionData.returnToMode;;\n         sessionData.highlightedGroupID = parentId;\n         sessionData.rootViewGroupID=null;\n         // Parent was locked so no other thread or process could have changed it, but\n         // child members could have changed.\n         GroupsManagerXML.refreshAllNodesRecursivelyIfRequired(sessionData.getUnrestrictedData(), parentElem);\n         sessionData.staticData.remove(\"groupParentId\");\n      }\n      else {\n         princResults = (IGroupMember[])gmCollection.toArray(new IGroupMember[0]);\n         if (princResults.length > 0) {\n            staticData.put(\"princResults\", princResults);\n            staticData.setParameter(\"groupManagerFinished\", \"true\");\n         }\n      }\n   }","id":39906,"modified_method":"/**\n    * This is the public method\n    * @throws Exception\n    * @param sessionData\n    */\n   public void execute (CGroupsManagerSessionData sessionData) throws Exception{\n      ChannelStaticData staticData = sessionData.staticData;\n      //ChannelRuntimeData runtimeData= sessionData.runtimeData;\n\n      Utility.logMessage(\"DEBUG\", \"DoneWithSelection::execute(): Start\");\n      String parentId = null;\n      boolean hasParentId = hasParentId(staticData);\n      Utility.logMessage(\"DEBUG\", \"DoneWithSelection::execute(): Parent ID is set: \"\n            + hasParentId);\n      IGroupMember[] princResults = null;\n      Document model = getXmlDoc(sessionData);\n      Element rootElem = model.getDocumentElement();\n      NodeList nGroupList = rootElem.getElementsByTagName(GROUP_TAGNAME);\n      NodeList nEntityList = rootElem.getElementsByTagName(ENTITY_TAGNAME);\n      Vector gmCollection = new Vector();\n      Element parentElem = null;\n      Utility.logMessage(\"DEBUG\", \"DoneWithSelection::execute(): Starting group process\");\n      addGroupMemberToCollection(gmCollection, nGroupList);\n      Utility.logMessage(\"DEBUG\", \"DoneWithSelection::execute(): Starting entity process\");\n      addGroupMemberToCollection(gmCollection, nEntityList);\n      // check if selections were made\n      if (gmCollection.size() <1) {\n         sessionData.feedback = sessionData.feedback + \"\\n No groups or people were selected! \";\n         return;\n      }\n\n      /** Presence of parentID means the process is not in servant mode. That is,\n       * the master channel is the Groups Manager channel and AddMembers had\n       * been selected\n       */\n      if (hasParentId) {\n         parentId = getParentId(staticData);\n         Utility.logMessage(\"DEBUG\", \"DoneWithSelection::execute(): Parent ID is set to: \"\n               + parentId);\n         parentElem = GroupsManagerXML.getElementByTagNameAndId(model, GROUP_TAGNAME, parentId);\n         if (parentElem == null) {\n            Utility.logMessage(\"ERROR\", \"DoneWithSelection::execute: Error parent element not found\");\n            return;\n         }\n         addChildrenToGroup(gmCollection, sessionData, parentElem, model);\n         clearSelected(sessionData);\n         sessionData.mode = sessionData.returnToMode;;\n         sessionData.highlightedGroupID = parentId;\n         sessionData.rootViewGroupID=null;\n         // Parent was locked so no other thread or process could have changed it, but\n         // child members could have changed.\n         GroupsManagerXML.refreshAllNodesRecursivelyIfRequired(sessionData.getUnrestrictedData(), parentElem);\n         sessionData.staticData.remove(\"groupParentId\");\n      }\n      else {\n         princResults = (IGroupMember[])gmCollection.toArray(new IGroupMember[0]);\n         if (princResults.length > 0) {\n            staticData.put(\"princResults\", princResults);\n            staticData.setParameter(\"groupManagerFinished\", \"true\");\n         }\n      }\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * Returns the IGroupMember represented by an Element\n    * @param gmElem\n    * @return IGroupMember\n    */\n   public static IGroupMember retrieveGroupMemberForElement (Element gmElem) {\n      IGroupMember gm;\n      String gmKey = gmElem.getAttribute(\"key\");\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::retrieveGroupMemberForElement(): About to retrieve group member (\"\n            + gmElem.getTagName() + \" for key: \" + gmKey);\n      if (gmElem.getTagName().equals(GROUP_TAGNAME)) {\n         gm = (IGroupMember)GroupsManagerXML.retrieveGroup(gmKey);\n      }\n      else {\n         gm = (IGroupMember)GroupsManagerXML.retrieveEntity(gmKey,gmElem.getAttribute(\"type\"));\n      }\n      return  gm;\n   }","id":39907,"modified_method":"/**\n    * Returns the IGroupMember represented by an Element\n    * @param gmElem\n    * @return IGroupMember\n    */\n   public static IGroupMember retrieveGroupMemberForElement (Element gmElem) {\n      IGroupMember gm;\n      String gmKey = gmElem.getAttribute(\"key\");\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::retrieveGroupMemberForElement(): About to retrieve group member (\"\n            + gmElem.getTagName() + \" for key: \" + gmKey);\n      if (gmElem.getTagName().equals(GROUP_TAGNAME)) {\n         gm = GroupsManagerXML.retrieveGroup(gmKey);\n      }\n      else {\n         gm = GroupsManagerXML.retrieveEntity(gmKey,gmElem.getAttribute(\"type\"));\n      }\n      return  gm;\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * Expands an element\n    * @param expandedElem Element\n    * @param sd CGroupsManagerUnrestrictedSessionData\n    */\n   public static void expandGroupElementXML(Element expandedElem, CGroupsManagerUnrestrictedSessionData sd){\n      //Utility.printElement(expandElem,\"Group to be expanded was found (not null): \\n\" );\n      boolean hasGroupsXML = !(expandedElem.getElementsByTagName(GROUP_TAGNAME).getLength()\n            == 0);\n      boolean hasEntitiesXML = !(expandedElem.getElementsByTagName(ENTITY_TAGNAME).getLength()\n            == 0);\n      boolean hasMembers = (expandedElem.getAttribute(\"hasMembers\").equals(\"true\"));\n      Utility.logMessage(\"DEBUG\", \"ExpandGroup::execute(): Expanded element has Members = \"\n            + hasMembers);\n\n      if (hasMembers) {\n         expandedElem.setAttribute(\"expanded\", \"true\");\n         Utility.logMessage(\"DEBUG\", \"ExpandGroup::execute(): About to retrieve children\");\n         // Have to check for non persistent search element before doing retrieval\n         IGroupMember entGrp = (!isPersistentGroup(expandedElem) ?\n            null :\n            (IGroupMember)retrieveGroup(expandedElem.getAttribute(\"key\")));\n         GroupsManagerXML.getGroupMemberXml(entGrp, true, expandedElem, sd);\n         //Utility.printDoc(xmlDoc, \"renderXML: +++++++++ After children are retrieved +++++++++\");\n      }\n   }","id":39908,"modified_method":"/**\n    * Expands an element\n    * @param expandedElem Element\n    * @param sd CGroupsManagerUnrestrictedSessionData\n    */\n   public static void expandGroupElementXML(Element expandedElem, CGroupsManagerUnrestrictedSessionData sd){\n      //Utility.printElement(expandElem,\"Group to be expanded was found (not null): \\n\" );\n      boolean hasMembers = (expandedElem.getAttribute(\"hasMembers\").equals(\"true\"));\n      Utility.logMessage(\"DEBUG\", \"ExpandGroup::execute(): Expanded element has Members = \"\n            + hasMembers);\n\n      if (hasMembers) {\n         expandedElem.setAttribute(\"expanded\", \"true\");\n         Utility.logMessage(\"DEBUG\", \"ExpandGroup::execute(): About to retrieve children\");\n         // Have to check for non persistent search element before doing retrieval\n         IGroupMember entGrp = (!isPersistentGroup(expandedElem) ?\n            null :\n            (IGroupMember)retrieveGroup(expandedElem.getAttribute(\"key\")));\n         GroupsManagerXML.getGroupMemberXml(entGrp, true, expandedElem, sd);\n         //Utility.printDoc(xmlDoc, \"renderXML: +++++++++ After children are retrieved +++++++++\");\n      }\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * Returns an IEntityGroup for the key.\n    * @param aKey\n    * @return IEntityGroup\n    */\n   public static IEntityGroup retrieveGroup (String aKey) {\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::retrieveGroup(): About to search for Group: \"\n            + aKey);\n      IEntityGroup grp = null;\n      try {\n         if (aKey != null){\n            grp = GroupService.findGroup(aKey);\n         }\n      } catch (Throwable th) {\n         Utility.logMessage(\"ERROR\", \"GroupsManagerXML::retrieveGroup(): Could not retrieve Group Member (\"\n               + aKey + \"): \\n\" + th, (Exception) th);\n      }\n      return  grp;\n   }","id":39909,"modified_method":"/**\n    * Returns an IEntityGroup for the key.\n    * @param aKey\n    * @return IEntityGroup\n    */\n   public static IEntityGroup retrieveGroup (String aKey) {\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::retrieveGroup(): About to search for Group: \"\n            + aKey);\n      IEntityGroup grp = null;\n      try {\n         if (aKey != null){\n            grp = GroupService.findGroup(aKey);\n         }\n      } catch (Throwable th) {\n         Utility.logMessage(\"ERROR\", \"GroupsManagerXML::retrieveGroup(): Could not retrieve Group Member (\"\n               + aKey + \"): \\n\" + th, th);\n      }\n      return  grp;\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * Returns a Document with an element for each IEntityType that has a root group.\n    * @param sessionData CGroupsManagerSessionData\n    * @return Document\n    */\n   public static Document getGroupsManagerXml (CGroupsManagerSessionData sessionData) {\n      ChannelStaticData sd = sessionData.staticData;\n      String rkey = null;\n      IEntityGroup entGrp = null;\n      IGroupMember aGroupMember = null;\n      Element rootGroupElement;\n      Document viewDoc = getNewDocument();\n      sessionData.model = viewDoc;\n      Element viewRoot = viewDoc.createElement(\"CGroupsManager\");\n      viewDoc.appendChild(viewRoot);\n      //don't create permission elements for an admin user\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::getGroupsManagerXML(): sessionData.isAdminUser = \" + sessionData.isAdminUser);\n      if (sessionData.gmPermissions == null) {\n         if (sessionData.isAdminUser)\n            sessionData.gmPermissions = GroupsManagerAdminPermissions.getInstance();\n         else\n            sessionData.gmPermissions = GroupsManagerDefaultPermissions.getInstance();\n      }\n      Element etRoot = getEntityTypesXml(viewDoc);\n      viewRoot.appendChild(etRoot);\n      Element rootGroupsElem = GroupsManagerXML.createElement(GROUP_TAGNAME, viewDoc, true);\n      //id=0 distinguishes the root groups element\n      rootGroupsElem.setAttribute(\"id\", \"0\");\n      rootGroupsElem.setAttribute(\"expanded\", \"true\");\n      Element rdfElem = createRdfElement(null, viewDoc);\n      rootGroupsElem.appendChild(rdfElem);\n      viewRoot.appendChild(rootGroupsElem);\n      try {\n         // name and class for entity types with root group\n         HashMap entTypes = getEntityTypes();\n         // next line initializes the unportected subset of session data\n         CGroupsManagerUnrestrictedSessionData unrsd = sessionData.getUnrestrictedData();\n         Iterator entTypeKeys = entTypes.keySet().iterator();\n         while (entTypeKeys.hasNext()) {\n            Object key = entTypeKeys.next();\n            Class entType = (Class)entTypes.get(key);\n            IEntityGroup rootGrp = GroupService.getRootGroup(entType);\n            rootGroupElement = getGroupMemberXml(rootGrp, true, null, unrsd);\n            rootGroupElement.setAttribute(\"editable\", String.valueOf(rootGrp.isEditable()));\n            rootGroupsElem.appendChild(rootGroupElement);\n         }\n      } catch (Exception e) {\n         Utility.logMessage(\"ERROR\", \"GroupsManagerXML::getGroupsManagerXML(): ERROR\"\n               + e, e);\n      }\n      return  viewDoc;\n   }","id":39910,"modified_method":"/**\n    * Returns a Document with an element for each IEntityType that has a root group.\n    * @param sessionData CGroupsManagerSessionData\n    * @return Document\n    */\n   public static Document getGroupsManagerXml (CGroupsManagerSessionData sessionData) {\n      Element rootGroupElement;\n      Document viewDoc = getNewDocument();\n      sessionData.model = viewDoc;\n      Element viewRoot = viewDoc.createElement(\"CGroupsManager\");\n      viewDoc.appendChild(viewRoot);\n      //don't create permission elements for an admin user\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::getGroupsManagerXML(): sessionData.isAdminUser = \" + sessionData.isAdminUser);\n      if (sessionData.gmPermissions == null) {\n         if (sessionData.isAdminUser)\n            sessionData.gmPermissions = GroupsManagerAdminPermissions.getInstance();\n         else\n            sessionData.gmPermissions = GroupsManagerDefaultPermissions.getInstance();\n      }\n      Element etRoot = getEntityTypesXml(viewDoc);\n      viewRoot.appendChild(etRoot);\n      Element rootGroupsElem = GroupsManagerXML.createElement(GROUP_TAGNAME, viewDoc, true);\n      //id=0 distinguishes the root groups element\n      rootGroupsElem.setAttribute(\"id\", \"0\");\n      rootGroupsElem.setAttribute(\"expanded\", \"true\");\n      Element rdfElem = createRdfElement(null, viewDoc);\n      rootGroupsElem.appendChild(rdfElem);\n      viewRoot.appendChild(rootGroupsElem);\n      try {\n         // name and class for entity types with root group\n         HashMap entTypes = getEntityTypes();\n         // next line initializes the unportected subset of session data\n         CGroupsManagerUnrestrictedSessionData unrsd = sessionData.getUnrestrictedData();\n         Iterator entTypeKeys = entTypes.keySet().iterator();\n         while (entTypeKeys.hasNext()) {\n            Object key = entTypeKeys.next();\n            Class entType = (Class)entTypes.get(key);\n            IEntityGroup rootGrp = GroupService.getRootGroup(entType);\n            rootGroupElement = getGroupMemberXml(rootGrp, true, null, unrsd);\n            rootGroupElement.setAttribute(\"editable\", String.valueOf(rootGrp.isEditable()));\n            rootGroupsElem.appendChild(rootGroupElement);\n         }\n      } catch (Exception e) {\n         Utility.logMessage(\"ERROR\", \"GroupsManagerXML::getGroupsManagerXML(): ERROR\"\n               + e, e);\n      }\n      return  viewDoc;\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * Returns an RDF element for the provided Document\n    * @param entGrp IEntityGroup\n    * @param xmlDoc Document\n    * @return Element\n    */\n   public static Element createRdfElement (IEntityGroup entGrp, Document xmlDoc) {\n      String entName;\n      String entDesc;\n      String entCreator;\n      if (entGrp == null){\n         // use default values\n         entName = ROOT_GROUP_TITLE;\n         entDesc = ROOT_GROUP_DESCRIPTION;\n         entCreator = \"Default\";\n      }\n      else{\n         // get values from IEntityGroup\n         entName = entGrp.getName();\n         entDesc = entGrp.getDescription();\n         entCreator = GroupsManagerXML.getEntityName(ENTITY_CLASSNAME, entGrp.getCreatorID());\n      }\n      //* Maybe I should have all parms in a java.util.HashMap\n      Element rdfElem = (Element)xmlDoc.createElement(\"rdf:RDF\");\n      rdfElem.setAttribute(\"xmlns:dc\", \"http://purl.org/dc/elements/1.1/\");\n      rdfElem.setAttribute(\"xmlns:rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): CREATING ELEMENT RDF DESCRIPTION\");\n      Element rdfDesc = (Element)xmlDoc.createElement(\"rdf:Description\");\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): CREATING ELEMENT DCTITLE\");\n      Element dcTitle = (Element)xmlDoc.createElement(\"dc:title\");\n      dcTitle.appendChild(xmlDoc.createTextNode(entName));\n      rdfDesc.appendChild(dcTitle);\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): CREATING ELEMENT dcDESCRIPTION\");\n      Element dcDescription = (Element)xmlDoc.createElement(\"dc:description\");\n      dcDescription.appendChild(xmlDoc.createTextNode(entDesc));\n      rdfDesc.appendChild(dcDescription);\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): CREATING ELEMENT dcCREATOR\");\n      Element dcCreator = (Element)xmlDoc.createElement(\"dc:creator\");\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): APPENDING TO dcCREATOR\");\n      dcCreator.appendChild(xmlDoc.createTextNode(entCreator));\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): APPENDING TO RDFDESC\");\n      rdfDesc.appendChild(dcCreator);\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): APPENDING TO RDF\");\n      rdfElem.appendChild(rdfDesc);\n      return  rdfElem;\n   }","id":39911,"modified_method":"/**\n    * Returns an RDF element for the provided Document\n    * @param entGrp IEntityGroup\n    * @param xmlDoc Document\n    * @return Element\n    */\n   public static Element createRdfElement (IEntityGroup entGrp, Document xmlDoc) {\n      String entName;\n      String entDesc;\n      String entCreator;\n      if (entGrp == null){\n         // use default values\n         entName = ROOT_GROUP_TITLE;\n         entDesc = ROOT_GROUP_DESCRIPTION;\n         entCreator = \"Default\";\n      }\n      else{\n         // get values from IEntityGroup\n         entName = entGrp.getName();\n         entDesc = entGrp.getDescription();\n         entCreator = GroupsManagerXML.getEntityName(ENTITY_CLASSNAME, entGrp.getCreatorID());\n      }\n      //* Maybe I should have all parms in a java.util.HashMap\n      Element rdfElem = xmlDoc.createElement(\"rdf:RDF\");\n      rdfElem.setAttribute(\"xmlns:dc\", \"http://purl.org/dc/elements/1.1/\");\n      rdfElem.setAttribute(\"xmlns:rdf\", \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\");\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): CREATING ELEMENT RDF DESCRIPTION\");\n      Element rdfDesc = xmlDoc.createElement(\"rdf:Description\");\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): CREATING ELEMENT DCTITLE\");\n      Element dcTitle = xmlDoc.createElement(\"dc:title\");\n      dcTitle.appendChild(xmlDoc.createTextNode(entName));\n      rdfDesc.appendChild(dcTitle);\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): CREATING ELEMENT dcDESCRIPTION\");\n      Element dcDescription = xmlDoc.createElement(\"dc:description\");\n      dcDescription.appendChild(xmlDoc.createTextNode(entDesc));\n      rdfDesc.appendChild(dcDescription);\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): CREATING ELEMENT dcCREATOR\");\n      Element dcCreator = xmlDoc.createElement(\"dc:creator\");\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): APPENDING TO dcCREATOR\");\n      dcCreator.appendChild(xmlDoc.createTextNode(entCreator));\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): APPENDING TO RDFDESC\");\n      rdfDesc.appendChild(dcCreator);\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::createRdfElement(): APPENDING TO RDF\");\n      rdfElem.appendChild(rdfDesc);\n      return  rdfElem;\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * Updates all nodes for the same IEntityGroup with information about the IEntityGroup.\n    * @param sd CGroupsManagerUnrestrictedSessionData\n    * @param entGrp  IEntityGroup\n    * @throws GroupsException\n    */\n   public static void refreshAllNodes (CGroupsManagerUnrestrictedSessionData sd, IEntityGroup entGrp)\n         throws GroupsException {\n      Document model = sd.model;\n      String updKey = entGrp.getKey();\n      Node updNode;\n      Element updElem;\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::refreshAllNodes(): About to refresh all nodes for IEntityGroup: \"\n            + updKey);\n      Iterator updatedNodes = GroupsManagerXML.getNodesByTagNameAndKey(model, GROUP_TAGNAME,\n            updKey);\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::refreshAllNodes(): About to gather all elements for key: \"\n            + updKey);\n      while (updatedNodes.hasNext()) {\n         updNode = (Node)updatedNodes.next();\n         updElem = (Element)updNode;\n         refreshElement (updElem, entGrp);\n      }\n      return;\n   }","id":39912,"modified_method":"/**\n    * Updates all nodes for the same IEntityGroup with information about the IEntityGroup.\n    * @param sd CGroupsManagerUnrestrictedSessionData\n    * @param entGrp  IEntityGroup\n    */\n   public static void refreshAllNodes (CGroupsManagerUnrestrictedSessionData sd, IEntityGroup entGrp) {\n      Document model = sd.model;\n      String updKey = entGrp.getKey();\n      Node updNode;\n      Element updElem;\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::refreshAllNodes(): About to refresh all nodes for IEntityGroup: \"\n            + updKey);\n      Iterator updatedNodes = GroupsManagerXML.getNodesByTagNameAndKey(model, GROUP_TAGNAME,\n            updKey);\n      Utility.logMessage(\"DEBUG\", \"GroupsManagerXML::refreshAllNodes(): About to gather all elements for key: \"\n            + updKey);\n      while (updatedNodes.hasNext()) {\n         updNode = (Node)updatedNodes.next();\n         updElem = (Element)updNode;\n         refreshElement (updElem, entGrp);\n      }\n      return;\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * Updates all nodes representing the same IEntityGroup that is represented by the\n    * anElem, if the anElem is out of date with the IEntityGroup. Additionally, we\n    * do the same for each child node (one level down at this time).\n    * @param sd CGroupsManagerUnrestrictedSessionData\n    * @param parentElem Element\n    */\n   public static void refreshAllNodesRecursivelyIfRequired (CGroupsManagerUnrestrictedSessionData sd, Element parentElem){\n      /** @todo not really recursive, we only go one level down, reconcile this\n       *  in code or by changing name */\n      if (parentElem == null){\n         /** @todo this should be an error */\n         Utility.logMessage(\"INFO\", \"GroupsManagerXML::refreshAllNodesRecursivelyIfRequired(): parentElem is null\");\n         return;\n      }\n      Element childElem;\n      Node childNode;\n      NodeList childNodes;\n      String childType;\n      boolean isParentElementExpanded = (Utility.areEqual(parentElem.getAttribute(\"expanded\"), \"true\") ? true : false);\n      refreshAllNodesIfRequired(sd, parentElem);\n      if (isParentElementExpanded){\n         //String parentType = parentElem.getAttribute(\"type\");\n         Node parentNode = (Node)parentElem;\n         childNodes = parentNode.getChildNodes();\n         for (int i = 0; i < childNodes.getLength(); i++) {\n            childNode = (org.w3c.dom.Node)childNodes.item(i);\n            childElem = (Element)childNode;\n            childType = childElem.getAttribute(\"type\");\n            if (Utility.notEmpty(childType)){\n               refreshAllNodesIfRequired(sd, childElem);\n            }\n         }\n         // Parent may have had children added or removed\n         // The wrapper will do this for us.\n         // Have to check for non persistent search element before doing retrieval\n         expandGroupElementXML(parentElem, sd);\n      }\n      return;\n   }","id":39913,"modified_method":"/**\n    * Updates all nodes representing the same IEntityGroup that is represented by the\n    * anElem, if the anElem is out of date with the IEntityGroup. Additionally, we\n    * do the same for each child node (one level down at this time).\n    * @param sd CGroupsManagerUnrestrictedSessionData\n    * @param parentElem Element\n    */\n   public static void refreshAllNodesRecursivelyIfRequired (CGroupsManagerUnrestrictedSessionData sd, Element parentElem){\n      /* @todo not really recursive, we only go one level down, reconcile this\n       *  in code or by changing name */\n      if (parentElem == null){\n         /* @todo this should be an error */\n         Utility.logMessage(\"INFO\", \"GroupsManagerXML::refreshAllNodesRecursivelyIfRequired(): parentElem is null\");\n         return;\n      }\n      Element childElem;\n      Node childNode;\n      NodeList childNodes;\n      String childType;\n      boolean isParentElementExpanded = (Utility.areEqual(parentElem.getAttribute(\"expanded\"), \"true\") ? true : false);\n      refreshAllNodesIfRequired(sd, parentElem);\n      if (isParentElementExpanded){\n         //String parentType = parentElem.getAttribute(\"type\");\n         Node parentNode = parentElem;\n         childNodes = parentNode.getChildNodes();\n         for (int i = 0; i < childNodes.getLength(); i++) {\n            childNode = childNodes.item(i);\n            childElem = (Element)childNode;\n            childType = childElem.getAttribute(\"type\");\n            if (Utility.notEmpty(childType)){\n               refreshAllNodesIfRequired(sd, childElem);\n            }\n         }\n         // Parent may have had children added or removed\n         // The wrapper will do this for us.\n         // Have to check for non persistent search element before doing retrieval\n         expandGroupElementXML(parentElem, sd);\n      }\n      return;\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * Even though we know we will find a single element, we sometimes want\n    * it returned in an iterator in order to streamline processing.\n    * @param aDoc\n    * @param id\n    * @return iterator\n    */\n   public static java.util.Iterator getNodesById (Document aDoc, String id) {\n      int i;\n      Collection nodes = new java.util.ArrayList();\n      Element elem = (Element)getElementById(aDoc, id);\n      nodes.add(elem);\n      return  nodes.iterator();\n   }","id":39914,"modified_method":"/**\n    * Even though we know we will find a single element, we sometimes want\n    * it returned in an iterator in order to streamline processing.\n    * @param aDoc\n    * @param id\n    * @return iterator\n    */\n   public static java.util.Iterator getNodesById (Document aDoc, String id) {\n      Collection nodes = new java.util.ArrayList();\n      Element elem = getElementById(aDoc, id);\n      nodes.add(elem);\n      return  nodes.iterator();\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * Returns a group member wrapper.\n    * @param type\n    * @return IGroupsManagerWrapper\n    */\n   public static IGroupsManagerWrapper getWrapper (String type) {\n      String tagname =  (type.equals(ENTITY_TAGNAME) || type.equals(ENTITY_CLASSNAME)) ?\n         ENTITY_TAGNAME : GROUP_TAGNAME;\n      IGroupsManagerWrapper rap = (IGroupsManagerWrapper)GroupsManagerWrapperFactory.get(tagname);\n      return rap;\n   }","id":39915,"modified_method":"/**\n    * Returns a group member wrapper.\n    * @param type\n    * @return IGroupsManagerWrapper\n    */\n   public static IGroupsManagerWrapper getWrapper (String type) {\n      String tagname =  (type.equals(ENTITY_TAGNAME) || type.equals(ENTITY_CLASSNAME)) ?\n         ENTITY_TAGNAME : GROUP_TAGNAME;\n      IGroupsManagerWrapper rap = GroupsManagerWrapperFactory.get(tagname);\n      return rap;\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * put your documentation comment here\n    * @throws Exception\n    * @param sessionData\n    */\n   public void execute (CGroupsManagerSessionData sessionData) throws Exception{\n      Document model = getXmlDoc(sessionData);\n      String id = this.getCommandArg(sessionData.runtimeData);\n      Element e = GroupsManagerXML.getElementById(model,id);\n      if (e != null){\n         NodeList nl = e.getChildNodes();\n         for(int i=(nl.getLength()-1); i>=0;i--){\n            if (nl.item(i).getNodeName().equals(\"properties\")){\n               e.removeChild(nl.item(i));\n            }\n         }\n      }\n   }","id":39916,"modified_method":"/**\n    * put your documentation comment here\n    * @throws Exception\n    * @param sessionData\n    */\n   public void execute (CGroupsManagerSessionData sessionData) throws Exception{\n      Document model = getXmlDoc(sessionData);\n      String id = this.getCommandArg(sessionData.runtimeData);\n      Element e = GroupsManagerXML.getElementById(model,id);\n      GroupsManagerXML.removeElementsForTagName(e, PROPERTIES_TAGNAME);\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * This is the public method\n    * @throws Exception\n    * @param sessionData\n    */\n   public void execute (CGroupsManagerSessionData sessionData) throws Exception {\n      ChannelStaticData staticData = sessionData.staticData;\n      ChannelRuntimeData runtimeData = sessionData.runtimeData;\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): Start\");\n      Document model = getXmlDoc(sessionData);\n      String theCommand = getCommand(runtimeData);\n      String cmdIds = getCommandArg(runtimeData);\n      Object parentGroup = null;\n      IGroupMember childGm = null;\n      String hasMbrs = \"duh\";\n      String userID = getUserID(sessionData);\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): About to get parent and child keys\");\n      String parentID = Utility.parseStringDelimitedBy(\"parent.\", cmdIds, \"|\");\n      String childID = Utility.parseStringDelimitedBy(\"child.\", cmdIds, \"|\");\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): Uid of parent element = \"\n            + parentID + \" child element = \" + childID);\n      Element parentElem = GroupsManagerXML.getElementByTagNameAndId(model, GROUP_TAGNAME,\n            parentID);\n      if (parentElem == null) {\n         Utility.logMessage(\"ERROR\", \"RemoveMember::execute(): Unable to retrieve parent element!\");\n         return;\n      }\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): About to get child element = \"\n            + childID);\n      Element childElem = GroupsManagerXML.getElementById(model, childID);\n      if (childElem == null) {\n         Utility.logMessage(\"ERROR\", \"RemoveMember::execute(): Unable to retrieve Child element!\");\n         return;\n      }\n      // The child will always be an IGroupMember\n      childGm = GroupsManagerXML.retrieveGroupMemberForElementId(model, childID);\n      //parentGroup = (Object)GroupsManagerXML.retrieveGroupMemberForElementId(model, parentID);\n      parentGroup = sessionData.lockedGroup;\n      removeChildFromGroup(parentGroup, childGm);\n      hasMbrs = String.valueOf(((IEntityGroup)parentGroup).hasMembers());\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): Got the parent group \");\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): about to remove child elements\");\n      Iterator parentNodes = GroupsManagerXML.getNodesByTagNameAndKey(model, GROUP_TAGNAME,\n            parentElem.getAttribute(\"key\"));\n      Node parentNode;\n      NodeList childNodes;\n      Node childNode;\n      while (parentNodes.hasNext()) {\n         parentNode = (Node)parentNodes.next();\n         childNodes = parentNode.getChildNodes();\n         for (int i = 0; i < childNodes.getLength(); i++) {\n            childNode = (org.w3c.dom.Node)childNodes.item(i);\n            if (((Element)childNode).getAttribute(\"key\").equals(childElem.getAttribute(\"key\"))) {\n               parentNode.removeChild(childNode);\n               ((Element)parentNode).setAttribute(\"hasMembers\", hasMbrs);\n            }\n         }\n      }\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): Completed\");\n   }","id":39917,"modified_method":"/**\n    * This is the public method\n    * @throws Exception\n    * @param sessionData\n    */\n   public void execute (CGroupsManagerSessionData sessionData) throws Exception {\n      //ChannelStaticData staticData = sessionData.staticData;\n      ChannelRuntimeData runtimeData = sessionData.runtimeData;\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): Start\");\n      Document model = getXmlDoc(sessionData);\n      String cmdIds = getCommandArg(runtimeData);\n      Object parentGroup = null;\n      IGroupMember childGm = null;\n      String hasMbrs = \"duh\";\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): About to get parent and child keys\");\n      String parentID = Utility.parseStringDelimitedBy(\"parent.\", cmdIds, \"|\");\n      String childID = Utility.parseStringDelimitedBy(\"child.\", cmdIds, \"|\");\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): Uid of parent element = \"\n            + parentID + \" child element = \" + childID);\n      Element parentElem = GroupsManagerXML.getElementByTagNameAndId(model, GROUP_TAGNAME,\n            parentID);\n      if (parentElem == null) {\n         Utility.logMessage(\"ERROR\", \"RemoveMember::execute(): Unable to retrieve parent element!\");\n         return;\n      }\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): About to get child element = \"\n            + childID);\n      Element childElem = GroupsManagerXML.getElementById(model, childID);\n      if (childElem == null) {\n         Utility.logMessage(\"ERROR\", \"RemoveMember::execute(): Unable to retrieve Child element!\");\n         return;\n      }\n      // The child will always be an IGroupMember\n      childGm = GroupsManagerXML.retrieveGroupMemberForElementId(model, childID);\n      parentGroup = sessionData.lockedGroup;\n      removeChildFromGroup(parentGroup, childGm);\n      hasMbrs = String.valueOf(((IEntityGroup)parentGroup).hasMembers());\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): Got the parent group \");\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): about to remove child elements\");\n      // remove property elements for child gm and clear the Entity Properties cache.\n      GroupsManagerXML.removePropertyElements (model, childGm, true);\n\n      // Removes EntityProperites for the child GroupMember from the Entity Property cache.\n      GroupsManagerXML.clearPropertiesCache (childGm);\n      \n      // remove this member from all parent group elements.\n      Iterator parentNodes = GroupsManagerXML.getNodesByTagNameAndKey(model, GROUP_TAGNAME,\n            parentElem.getAttribute(\"key\"));\n      Node parentNode;\n      NodeList childNodes;\n      Node childNode;\n      while (parentNodes.hasNext()) {\n         parentNode = (Node)parentNodes.next();\n         childNodes = parentNode.getChildNodes();\n         for (int i = 0; i < childNodes.getLength(); i++) {\n            childNode = childNodes.item(i);\n            if (((Element)childNode).getAttribute(\"key\").equals(childElem.getAttribute(\"key\"))) {\n               parentNode.removeChild(childNode);\n               ((Element)parentNode).setAttribute(\"hasMembers\", hasMbrs);\n            }\n         }\n      }\n      Utility.logMessage(\"DEBUG\", \"RemoveMember::execute(): Completed\");\n   }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n    * put your documentation comment here\n    * @throws Exception\n    * @param sessionData\n    */\n  public void execute (CGroupsManagerSessionData sessionData) throws Exception{\n    Document model = getXmlDoc(sessionData);\n    String id = this.getCommandArg(sessionData.runtimeData);\n    Element e = GroupsManagerXML.getElementById(model,id);\n    if (e != null){\n      Element props = model.createElement(\"properties\");\n      EntityIdentifier ei = null;\n      try{\n        ei = new EntityIdentifier(e.getAttribute(\"key\"),Class.forName(e.getAttribute(\"type\")));\n      }\n      catch (ClassNotFoundException ce){\n        throw new RuntimeException(\"Unable to instantiate class:  type \"+e.getAttribute(\"type\")+\" unknown\");\n      }\n      String[] names = EntityPropertyRegistry.getPropertyNames(ei);\n      //System.out.println(\"Found \"+names.length+\" properties\");\n      for(int i=0; i<names.length;i++){\n          Element prop = model.createElement(\"property\");\n          prop.setAttribute(\"name\",names[i]);\n          prop.setAttribute(\"value\",EntityPropertyRegistry.getProperty(ei,names[i]));\n          props.appendChild(prop);\n      }\n      e.appendChild(props);\n    }\n  }","id":39918,"modified_method":"/**\n    * put your documentation comment here\n    * @throws Exception\n    * @param sessionData\n    */\n  public void execute (CGroupsManagerSessionData sessionData) throws Exception{\n    Document model = getXmlDoc(sessionData);\n    String id = this.getCommandArg(sessionData.runtimeData);\n    Element e = GroupsManagerXML.getElementById(model,id);\n    if (e != null){\n      Element props = model.createElement(PROPERTIES_TAGNAME);\n      EntityIdentifier ei = null;\n      try{\n        ei = new EntityIdentifier(e.getAttribute(\"key\"),Class.forName(e.getAttribute(\"type\")));\n      }\n      catch (ClassNotFoundException ce){\n        throw new RuntimeException(\"Unable to instantiate class:  type \"+e.getAttribute(\"type\")+\" unknown\");\n      }\n      String[] names = EntityPropertyRegistry.getPropertyNames(ei);\n      //System.out.println(\"Found \"+names.length+\" properties\");\n      for(int i=0; i<names.length;i++){\n          Element prop = model.createElement(\"property\");\n          prop.setAttribute(\"name\",names[i]);\n          prop.setAttribute(\"value\",EntityPropertyRegistry.getProperty(ei,names[i]));\n          props.appendChild(prop);\n      }\n      e.appendChild(props);\n    }\n  }","commit_id":"ee7f77bfef6db3efed545168bc1ee6a32b5f918a","url":"https://github.com/Jasig/uPortal"},{"original_method":"private Document getParametersDoc() throws PortalException {\n      Document doc = DocumentFactory.getNewDocument();\n\n      // Top-level element\n      Element userPrefParamsE = doc.createElement(\"userPrefParams\");\n\n      // List of parameter names\n      Element paramNamesE = doc.createElement(\"paramNames\");\n      Iterator iter = overridableChanParams.iterator();\n      while (iter.hasNext()) {\n        Element param = (Element)iter.next();\n        String paramName = param.getAttribute(\"name\");\n\n        Element paramNameE = doc.createElement(\"paramName\");\n        paramNameE.appendChild(doc.createTextNode(paramName));\n        paramNamesE.appendChild(paramNameE);\n      }\n      userPrefParamsE.appendChild(paramNamesE);\n\n      // CPD\n      Document cpd = ChannelRegistryManager.getCPD(chanTypeID);\n      if (cpd != null)\n        userPrefParamsE.appendChild(doc.importNode(cpd.getDocumentElement(), true));\n\n      doc.appendChild(userPrefParamsE);\n      return doc;\n    }","id":39919,"modified_method":"private Document getParametersDoc() throws PortalException {\n      Document doc = DocumentFactory.getNewDocument();\n\n      // Top-level element\n      Element userPrefParamsE = doc.createElement(\"userPrefParams\");\n\n      // List of parameter names\n      Element paramNamesE = doc.createElement(\"paramNames\");\n      Iterator iter = overridableChanParams.iterator();\n      while (iter.hasNext()) {\n        Element param = (Element)iter.next();\n        String paramName = param.getAttribute(\"name\");\n\n        Element paramNameE = doc.createElement(\"paramName\");\n        paramNameE.appendChild(doc.createTextNode(paramName));\n        paramNamesE.appendChild(paramNameE);\n      }\n      userPrefParamsE.appendChild(paramNamesE);\n\n      // CPD\n      Document cpd = ChannelRegistryManager.getCPD(channel.getAttribute(\"typeID\"));\n      if (cpd != null)\n        userPrefParamsE.appendChild(doc.importNode(cpd.getDocumentElement(), true));\n\n      doc.appendChild(userPrefParamsE);\n      return doc;\n    }","commit_id":"c9b21121b2652c5a2a7c0a341fc96d1dff937bd5","url":"https://github.com/Jasig/uPortal"},{"original_method":"public ParametersState(TabColumnPrefsState context, NewChannelState previousState, List overridableChanParams, String chanTypeID) {\n        this.context = context;\n        this.previousState = previousState;\n        this.overridableChanParams = overridableChanParams;\n        this.chanTypeID = chanTypeID;\n    }","id":39920,"modified_method":"public ParametersState(TabColumnPrefsState context, NewChannelState previousState, List overridableChanParams, Element channel, String position, String destinationElementId) {\n      this.context = context;\n      this.previousState = previousState;\n      this.overridableChanParams = overridableChanParams;\n      this.channel = channel;\n      this.position = position;\n      this.destinationElementId = destinationElementId;\n    }","commit_id":"c9b21121b2652c5a2a7c0a341fc96d1dff937bd5","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void setRuntimeData (ChannelRuntimeData rd) throws PortalException {\n        runtimeData = rd;\n        String action = runtimeData.getParameter(\"uPTCUP_action\");\n        if (action != null) {\n          if (action.equals(\"back\")) {\n            context.setState(previousState);\n          } else if (action.equals(\"finished\")) {\n            // process params\n          } else if (action.equals(\"cancel\")) {\n            BaseState defaultState = new DefaultState(context);\n            //defaultState.setStaticData(staticData);\n            elementID = \"none\";\n            context.setState(defaultState);\n          }\n        }\n    }","id":39921,"modified_method":"public void setRuntimeData (ChannelRuntimeData rd) throws PortalException {\n      runtimeData = rd;\n      String action = runtimeData.getParameter(\"uPTCUP_action\");\n      if (action != null) {\n        if (action.equals(\"back\")) {\n          context.setState(previousState);\n        } else if (action.equals(\"finished\")) {\n          processParams(); // And add the channel\n          returnToDefaultState();\n        } else if (action.equals(\"cancel\")) {\n          returnToDefaultState();\n        }\n      }\n    }","commit_id":"c9b21121b2652c5a2a7c0a341fc96d1dff937bd5","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void renderXML (ContentHandler out) throws PortalException\n    {\n      XSLT xslt = new XSLT (this);\n      xslt.setXML(getParametersDoc());\n      xslt.setXSL(sslLocation, \"parameters\", runtimeData.getBrowserInfo());\n      xslt.setTarget(out);\n      xslt.setStylesheetParameter(\"baseActionURL\", runtimeData.getBaseActionURL());\n      xslt.transform();\n    }","id":39922,"modified_method":"public void renderXML (ContentHandler out) throws PortalException\n    {\n      XSLT xslt = new XSLT (this);\n      xslt.setXML(getParametersDoc());\n      xslt.setXSL(sslLocation, \"parameters\", runtimeData.getBrowserInfo());\n      xslt.setTarget(out);\n      xslt.setStylesheetParameter(\"baseActionURL\", runtimeData.getBaseActionURL());\n      if (error)\n        xslt.setStylesheetParameter(\"errorMessage\", errorMessage);\n      xslt.transform();\n    }","commit_id":"c9b21121b2652c5a2a7c0a341fc96d1dff937bd5","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void setRuntimeData (ChannelRuntimeData rd) throws PortalException {\n      runtimeData = rd;\n      String action = runtimeData.getParameter(\"action\");\n      if (action != null) {\n        if (action.equals(\"cancel\")) {\n          returnToDefaultState();\n        } else {\n          // User clicked \"?\"\n          if (runtimeData.getParameter(\"channelMoreInfo\") != null) {\n            // Implement channel preview here!\n            String selectedChannel = runtimeData.getParameter(\"selectedChannel\");\n            /*\n            if (selectedChannel != null) {\n              Element channelE = ChannelRegistryManager.getChannel(selectedChannel);\n              String javaClass = channelE.getAttribute(\"class\");\n              org.jasig.portal.IChannel channel = null;\n              try {\n                System.out.println(\"Instantiating class: \" + javaClass);\n                channel = (org.jasig.portal.IChannel)Class.forName(javaClass).newInstance();\n              } catch (Exception e) {\n                LogService.instance().log(LogService.ERROR, \"Not able to instantiate channel: \" + javaClass);\n                e.printStackTrace();\n              }\n              NodeIterator ni = null;\n              try {\n                ni = XPathAPI.selectNodeIterator(channelE, \"parameter\");\n              } catch (javax.xml.transform.TransformerException te) {\n                te.printStackTrace();\n              }\n              ChannelStaticData sdata = new ChannelStaticData();\n              for (Node n = ni.nextNode(); n != null; n = ni.nextNode()) {\n                Element parameter = (Element)n;\n                System.out.println(parameter.getAttribute(\"name\") + \"=\" + parameter.getAttribute(\"value\"));\n                sdata.setParameter(parameter.getAttribute(\"name\"), parameter.getAttribute(\"value\"));\n              }\n              channel.setStaticData(sdata);\n              ChannelRuntimeData rdata = new ChannelRuntimeData();\n              rdata.setBaseActionURL(rd.getBaseActionURL());\n              rdata.setRenderingAsRoot(true);\n              rdata.setBrowserInfo(rd.getBrowserInfo());\n              channel.setRuntimeData(rdata);\n\n              java.io.StringWriter sw = new java.io.StringWriter();\n              org.apache.xml.serialize.OutputFormat outputFormat = new org.apache.xml.serialize.OutputFormat();\n              outputFormat.setIndenting(true);\n              org.apache.xml.serialize.XMLSerializer ser = new org.apache.xml.serialize.XMLSerializer(sw, outputFormat);\n\n              try {\n                channel.renderXML(ser.asContentHandler());\n              } catch (java.io.IOException ioe) {\n                 ioe.printStackTrace();\n              }\n              System.out.println(\"Channel output:\");\n              System.out.println(sw.toString());\n\n            }*/\n          } else if (runtimeData.getParameter(\"addChannel\") != null) {\n            // User clicked \"Add\"\n            String selectedChannel = runtimeData.getParameter(\"selectedChannel\");\n            if (selectedChannel != null) {\n              try {\n                // Determine whether channel has overridable parameters\n                List overridableChanParams = getOverridableChannelParams(selectedChannel);\n                if (true || overridableChanParams.isEmpty()) {\n                  addChannel(selectedChannel, position, elementID);\n                  returnToDefaultState();\n                } else { // present user with screen to specify subscribe-time params\n                  Document channelRegistry = ChannelRegistryManager.getChannelRegistry(staticData.getPerson());\n                  Element channel = (Element)channelRegistry.getElementById(selectedChannel);\n                  String chanTypeID = channel.getAttribute(\"typeID\");\n                  context.internalState = new ParametersState(context, this, overridableChanParams, chanTypeID);\n                  context.internalState.setStaticData(staticData);\n                }\n              } catch (Exception e) {\n                errorMessage = errorMessageNewChannel;\n              }\n            }\n          } else {\n            // Collect the position and element ID the first time\n            String passedPosition = runtimeData.getParameter(\"position\");\n            String passedElementID = runtimeData.getParameter(\"elementID\");\n            if (passedPosition != null)\n              position = passedPosition;\n            if (passedElementID != null)\n              elementID = passedElementID;\n\n            // User clicked \"Go\"\n            String selectedCategory = runtimeData.getParameter(\"selectedCategory\");\n            if (selectedCategory != null  && selectedCategory.trim().length() > 0)\n              catID = selectedCategory;\n          }\n        }\n      }\n    }","id":39923,"modified_method":"public void setRuntimeData (ChannelRuntimeData rd) throws PortalException {\n      runtimeData = rd;\n      String action = runtimeData.getParameter(\"action\");\n      if (action != null) {\n        if (action.equals(\"cancel\")) {\n          returnToDefaultState();\n        } else {\n          // User clicked \"?\"\n          if (runtimeData.getParameter(\"channelMoreInfo\") != null) {\n            // Implement channel preview here!\n            String selectedChannel = runtimeData.getParameter(\"selectedChannel\");\n            /*\n            if (selectedChannel != null) {\n              Element channelE = ChannelRegistryManager.getChannel(selectedChannel);\n              String javaClass = channelE.getAttribute(\"class\");\n              org.jasig.portal.IChannel channel = null;\n              try {\n                System.out.println(\"Instantiating class: \" + javaClass);\n                channel = (org.jasig.portal.IChannel)Class.forName(javaClass).newInstance();\n              } catch (Exception e) {\n                LogService.instance().log(LogService.ERROR, \"Not able to instantiate channel: \" + javaClass);\n                e.printStackTrace();\n              }\n              NodeIterator ni = null;\n              try {\n                ni = XPathAPI.selectNodeIterator(channelE, \"parameter\");\n              } catch (javax.xml.transform.TransformerException te) {\n                te.printStackTrace();\n              }\n              ChannelStaticData sdata = new ChannelStaticData();\n              for (Node n = ni.nextNode(); n != null; n = ni.nextNode()) {\n                Element parameter = (Element)n;\n                System.out.println(parameter.getAttribute(\"name\") + \"=\" + parameter.getAttribute(\"value\"));\n                sdata.setParameter(parameter.getAttribute(\"name\"), parameter.getAttribute(\"value\"));\n              }\n              channel.setStaticData(sdata);\n              ChannelRuntimeData rdata = new ChannelRuntimeData();\n              rdata.setBaseActionURL(rd.getBaseActionURL());\n              rdata.setRenderingAsRoot(true);\n              rdata.setBrowserInfo(rd.getBrowserInfo());\n              channel.setRuntimeData(rdata);\n\n              java.io.StringWriter sw = new java.io.StringWriter();\n              org.apache.xml.serialize.OutputFormat outputFormat = new org.apache.xml.serialize.OutputFormat();\n              outputFormat.setIndenting(true);\n              org.apache.xml.serialize.XMLSerializer ser = new org.apache.xml.serialize.XMLSerializer(sw, outputFormat);\n\n              try {\n                channel.renderXML(ser.asContentHandler());\n              } catch (java.io.IOException ioe) {\n                 ioe.printStackTrace();\n              }\n              System.out.println(\"Channel output:\");\n              System.out.println(sw.toString());\n\n            }*/\n          } else if (runtimeData.getParameter(\"addChannel\") != null) {\n            // User clicked \"Add\"\n            String selectedChannel = runtimeData.getParameter(\"selectedChannel\");\n            if (selectedChannel != null) {\n              try {\n                // Determine whether channel has overridable parameters\n                List overridableChanParams = getOverridableChannelParams(selectedChannel);\n                if (overridableChanParams.isEmpty()) {\n                  addChannel(selectedChannel, position, elementID);\n                  returnToDefaultState();\n                } else { // present user with screen to specify subscribe-time params\n                  Document channelRegistry = ChannelRegistryManager.getChannelRegistry(staticData.getPerson());\n                  Element channel = (Element)channelRegistry.getElementById(selectedChannel);\n                  context.internalState = new ParametersState(context, this, overridableChanParams, channel, position, elementID);\n                  context.internalState.setStaticData(staticData);\n                }\n              } catch (Exception e) {\n                errorMessage = errorMessageNewChannel;\n              }\n            }\n          } else {\n            // Collect the position and element ID the first time\n            String passedPosition = runtimeData.getParameter(\"position\");\n            String passedElementID = runtimeData.getParameter(\"elementID\");\n            if (passedPosition != null)\n              position = passedPosition;\n            if (passedElementID != null)\n              elementID = passedElementID;\n\n            // User clicked \"Go\"\n            String selectedCategory = runtimeData.getParameter(\"selectedCategory\");\n            if (selectedCategory != null  && selectedCategory.trim().length() > 0)\n              catID = selectedCategory;\n          }\n        }\n      }\n    }","commit_id":"c9b21121b2652c5a2a7c0a341fc96d1dff937bd5","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Adds a channel to the layout.\n   * @param selectedChannelId the channel to move from the channel registry\n   * @param position either <code>before<\/code> or <code>after<\/code>\n   * @param destinationElementId the ID of the channel to insert the new channel before or append after\n   * @throws Exception\n   */\n  private final void addChannel(String selectedChannelId, String position, String destinationElementId) throws Exception\n  {\n    Element layout = userLayout.getDocumentElement();\n\n    Document channelRegistry = ChannelRegistryManager.getChannelRegistry(staticData.getPerson());\n    Element newChannel = (Element)(userLayout.importNode(channelRegistry.getElementById(selectedChannelId), true));\n    String instanceId = ulStore.getNextStructChannelId(staticData.getPerson());\n    newChannel.setAttribute(\"ID\", instanceId);\n    // The following line is Xerces-specific\n    ((org.apache.xerces.dom.DocumentImpl)userLayout).putIdentifier(instanceId, newChannel);\n\n    Element destinationElement = userLayout.getElementById(destinationElementId);\n\n    // The destination element might be an empty tab or a column\n    if (isTab(destinationElement))\n    {\n      // Create a new column in this tab and move the source channel there\n      Element newColumn = createFolder(\"\");\n      Node destinationTab = userLayout.getElementById(destinationElementId);\n      UserLayoutManager.moveNode(newColumn, destinationTab, null);\n      UserLayoutManager.moveNode(newChannel, newColumn, null);\n    }\n    else if (isColumn(destinationElement))\n    {\n      // Move the source channel into the destination column\n      UserLayoutManager.moveNode(newChannel, destinationElement, null);\n    }\n    else\n    {\n      // Move the source channel before the destination channel or at the end\n      Node targetColumn = destinationElement.getParentNode();\n      Node siblingChannel = position.equals(\"before\") ? destinationElement : null;\n      UserLayoutManager.moveNode(newChannel, targetColumn, siblingChannel);\n    }\n\n    saveLayout(true);\n  }","id":39924,"modified_method":"/**\n   * Adds a channel to the layout.\n   * @param selectedChannelId the channel to add\n   * @param position either <code>before<\/code> or <code>after<\/code>\n   * @param destinationElementId the ID of the channel to insert the new channel before or append after\n   * @throws Exception\n   */\n  private final void addChannel(String selectedChannelId, String position, String destinationElementId) throws Exception\n  {\n    Document channelRegistry = ChannelRegistryManager.getChannelRegistry(staticData.getPerson());\n    Element newChannel = channelRegistry.getElementById(selectedChannelId);\n    addChannel(newChannel, position, destinationElementId);\n  }","commit_id":"c9b21121b2652c5a2a7c0a341fc96d1dff937bd5","url":"https://github.com/Jasig/uPortal"},{"original_method":"private static boolean isAbstract(PsiMethod method) {\n      final PsiClass containingClass = method.getContainingClass();\n      if (method.hasModifierProperty(PsiModifier.ABSTRACT)) {\n        return true;\n      }\n      if (containingClass == null) {\n        return false;\n      }\n      return containingClass.isInterface();\n    }","id":39925,"modified_method":"private boolean isAbstract(PsiMethod method) {\n      if (method.hasModifierProperty(PsiModifier.ABSTRACT)) {\n        return true;\n      }\n      final PsiClass containingClass = method.getContainingClass();\n      return containingClass != null && containingClass.isInterface();\n    }","commit_id":"21fb41fc4010465990788b70aad78f1274af7350","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitMethod(@NotNull PsiMethod method) {\n      //no call to super, so we don't drill into anonymous classes\n      if (method.isConstructor()) {\n        return;\n      }\n      if (!isAbstract(method)) {\n        return;\n      }\n      final PsiClass containingClass = method.getContainingClass();\n      if (containingClass == null) {\n        return;\n      }\n      if (!method.hasModifierProperty(PsiModifier.ABSTRACT) &&\n          !containingClass.isInterface()) {\n        return;\n      }\n      final PsiMethod[] superMethods = method.findSuperMethods();\n      for (final PsiMethod superMethod : superMethods) {\n        if (isAbstract(superMethod)) {\n          if (methodsHaveSameReturnTypes(method, superMethod) &&\n              haveSameExceptionSignatures(method, superMethod)) {\n            registerMethodError(method);\n            return;\n          }\n        }\n      }\n    }","id":39926,"modified_method":"@Override\n    public void visitMethod(@NotNull PsiMethod method) {\n      //no call to super, so we don't drill into anonymous classes\n      if (method.isConstructor()) {\n        return;\n      }\n      if (!isAbstract(method)) {\n        return;\n      }\n      final PsiClass containingClass = method.getContainingClass();\n      if (containingClass == null) {\n        return;\n      }\n      if (!method.hasModifierProperty(PsiModifier.ABSTRACT) && !containingClass.isInterface()) {\n        return;\n      }\n      final PsiMethod[] superMethods = method.findSuperMethods();\n      for (final PsiMethod superMethod : superMethods) {\n        if (!isAbstract(superMethod)) {\n          continue;\n        }\n        if (!methodsHaveSameReturnTypes(method, superMethod) ||\n            !haveSameExceptionSignatures(method, superMethod)) {\n          continue;\n        }\n        if (ignoreJavaDoc && !haveSameJavaDoc(method, superMethod)) {\n          return;\n        }\n        registerMethodError(method);\n        return;\n      }\n    }","commit_id":"21fb41fc4010465990788b70aad78f1274af7350","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean methodsHaveSameReturnTypes(PsiMethod method1,\n                                                      PsiMethod method2) {\n      final PsiType type1 = method1.getReturnType();\n      if (type1 == null) {\n        return false;\n      }\n      final PsiType type2 = method2.getReturnType();\n      if (type2 == null) {\n        return false;\n      }\n      return type1.equals(type2);\n    }","id":39927,"modified_method":"private boolean methodsHaveSameReturnTypes(PsiMethod method1, PsiMethod method2) {\n      final PsiType type1 = method1.getReturnType();\n      if (type1 == null) {\n        return false;\n      }\n      final PsiType type2 = method2.getReturnType();\n      return type2 != null && type1.equals(type2);\n    }","commit_id":"21fb41fc4010465990788b70aad78f1274af7350","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean haveSameExceptionSignatures(PsiMethod method1,\n                                                       PsiMethod method2) {\n      final PsiReferenceList list1 = method1.getThrowsList();\n      final PsiClassType[] exceptions1 = list1.getReferencedTypes();\n      final PsiReferenceList list2 = method2.getThrowsList();\n      final PsiClassType[] exceptions2 = list2.getReferencedTypes();\n      if (exceptions1.length != exceptions2.length) {\n        return false;\n      }\n      final Set<PsiClassType> set1 =\n        new HashSet<PsiClassType>(Arrays.asList(exceptions1));\n      for (PsiClassType anException : exceptions2) {\n        if (!set1.contains(anException)) {\n          return false;\n        }\n      }\n      return true;\n    }","id":39928,"modified_method":"private boolean haveSameExceptionSignatures(PsiMethod method1, PsiMethod method2) {\n      final PsiReferenceList list1 = method1.getThrowsList();\n      final PsiClassType[] exceptions1 = list1.getReferencedTypes();\n      final PsiReferenceList list2 = method2.getThrowsList();\n      final PsiClassType[] exceptions2 = list2.getReferencedTypes();\n      if (exceptions1.length != exceptions2.length) {\n        return false;\n      }\n      final Set<PsiClassType> set1 = new HashSet<PsiClassType>(Arrays.asList(exceptions1));\n      for (PsiClassType anException : exceptions2) {\n        if (!set1.contains(anException)) {\n          return false;\n        }\n      }\n      return true;\n    }","commit_id":"21fb41fc4010465990788b70aad78f1274af7350","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void visitSynchronizedStatement(\n                PsiSynchronizedStatement statement) {\n            super.visitSynchronizedStatement(statement);\n            final PsiElement parent = statement.getParent();\n            if (!(parent instanceof PsiCodeBlock)) {\n                return;\n            }\n            final PsiElement grandParent = parent.getParent();\n            if (!(grandParent instanceof PsiMethod)) {\n                return;\n            }\n            final PsiMethod method = (PsiMethod) grandParent;\n            final PsiCodeBlock body = method.getBody();\n            if (body == null) {\n                return;\n            }\n            final PsiStatement[] statements = body.getStatements();\n            if (statements.length != 1) {\n                return;\n            }\n            final PsiExpression lockExpression = statement.getLockExpression();\n            if (method.hasModifierProperty(PsiModifier.STATIC)) {\n                if (!(lockExpression\n                        instanceof PsiClassObjectAccessExpression)) {\n                    return;\n                }\n                final PsiClassObjectAccessExpression classExpression =\n                        (PsiClassObjectAccessExpression) lockExpression;\n                final PsiTypeElement typeElement =\n                        classExpression.getOperand();\n                final PsiType type = typeElement.getType();\n                if (!(type instanceof PsiClassType)) {\n                    return;\n                }\n                final PsiClassType classType = (PsiClassType) type;\n                final PsiClass aClass = classType.resolve();\n                final PsiClass containingClass = method.getContainingClass();\n                if (aClass != containingClass) {\n                    return;\n                }\n                registerMethodError(method);\n            } else {\n                if (!(lockExpression instanceof PsiThisExpression)) {\n                    return;\n                }\n                registerMethodError(method);\n            }\n        }","id":39929,"modified_method":"public void visitSynchronizedStatement(\n                PsiSynchronizedStatement statement) {\n            super.visitSynchronizedStatement(statement);\n            final PsiElement parent = statement.getParent();\n            if (!(parent instanceof PsiCodeBlock)) {\n                return;\n            }\n            final PsiElement grandParent = parent.getParent();\n            if (!(grandParent instanceof PsiMethod)) {\n                return;\n            }\n            final PsiMethod method = (PsiMethod) grandParent;\n            final PsiCodeBlock body = method.getBody();\n            if (body == null) {\n                return;\n            }\n            final PsiStatement[] statements = body.getStatements();\n            if (statements.length != 1) {\n                return;\n            }\n            final PsiExpression lockExpression = statement.getLockExpression();\n            if (method.hasModifierProperty(PsiModifier.STATIC)) {\n                if (!(lockExpression\n                        instanceof PsiClassObjectAccessExpression)) {\n                    return;\n                }\n                final PsiClassObjectAccessExpression classExpression =\n                        (PsiClassObjectAccessExpression) lockExpression;\n                final PsiTypeElement typeElement =\n                        classExpression.getOperand();\n                final PsiType type = typeElement.getType();\n                if (!(type instanceof PsiClassType)) {\n                    return;\n                }\n                final PsiClassType classType = (PsiClassType) type;\n                final PsiClass aClass = classType.resolve();\n                final PsiClass containingClass = method.getContainingClass();\n                if (aClass != containingClass) {\n                    return;\n                }\n                registerMethodError(method);\n            } else {\n                if (!(lockExpression instanceof PsiThisExpression)) {\n                    return;\n                }\n                final PsiThisExpression thisExpression =\n                        (PsiThisExpression)lockExpression;\n                final PsiJavaCodeReferenceElement qualifier =\n                        thisExpression.getQualifier();\n                if (qualifier != null) {\n                    final PsiElement target = qualifier.resolve();\n                    final PsiClass containingClass = method.getContainingClass();\n                    if (!containingClass.equals(target)) {\n                        return;\n                    }\n                }\n                registerMethodError(method);\n            }\n        }","commit_id":"ba4306bd5f171b370aecc484000c703fb910b77b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n         * @return the class the specified method is used from, or null if it is\n         * used from 0 or more than 1 other classes.\n         */\n        @Nullable\n        public PsiClass getUsageClass(final PsiMethod method) {\n            final ProgressManager progressManager =\n                    ProgressManager.getInstance();\n            final PsiManager manager = method.getManager();\n            final PsiSearchHelper searchHelper = manager.getSearchHelper();\n            final String name = method.getName();\n            final GlobalSearchScope scope =\n                    GlobalSearchScope.allScope(method.getProject());\n            final FindUsagesCostProcessor costProcessor =\n                    new FindUsagesCostProcessor();\n            searchHelper.processAllFilesWithWord(name, scope,\n                    costProcessor, true);\n            if (costProcessor.isCostTooHigh()) {\n                return null;\n            }\n            progressManager.runProcess(new Runnable() {\n                public void run() {\n                    final Query<PsiReference> query =\n                            MethodReferencesSearch.search(method);\n                    query.forEach(UsageProcessor.this);\n                }\n            }, null);\n            return usageClass;\n        }","id":39930,"modified_method":"/**\n         * @return the class the specified method is used from, or null if it is\n         * used from 0 or more than 1 other classes.\n         */\n        @Nullable\n        public PsiClass getUsageClass(final PsiMethod method) {\n            final ProgressManager progressManager =\n                    ProgressManager.getInstance();\n            final PsiManager manager = method.getManager();\n            final PsiSearchHelper searchHelper = manager.getSearchHelper();\n            final String name = method.getName();\n            final GlobalSearchScope scope =\n                    GlobalSearchScope.allScope(method.getProject());\n            final FindUsagesCostProcessor costProcessor =\n                    new FindUsagesCostProcessor();\n            searchHelper.processAllFilesWithWord(name, scope,\n                    costProcessor, true);\n            if (costProcessor.isCostTooHigh()) {\n                return null;\n            }\n            progressManager.runProcess(new Runnable() {\n                public void run() {\n                    final Query<PsiReference> query =\n                            MethodReferencesSearch.search(method);\n                    query.forEach(UsageProcessor.this);\n                }\n            }, null);\n          synchronized (this) {\n            return usageClass;\n          }\n        }","commit_id":"c0c208953298231cce136c7118d4634b1792fea0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean process(PsiFile psiFile) {\n                counter++;\n                if (counter < 10) {\n                    costTooHigh = false;\n                    return true;\n                }\n                costTooHigh = true;\n                return false;\n            }","id":39931,"modified_method":"public boolean process(PsiFile psiFile) {\n              if (counter.incrementAndGet() >= 10) {\n                costTooHigh = true;\n                return false;\n              }\n                return true;\n            }","commit_id":"c0c208953298231cce136c7118d4634b1792fea0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean process(PsiReference reference) {\n            ProgressManager.checkCanceled();\n            final PsiElement element = reference.getElement();\n            final PsiClass usageClass =\n                    ClassUtils.getContainingClass(element);\n            if (this.usageClass != null &&\n                    !this.usageClass.equals(usageClass)) {\n                this.usageClass = null;\n                return false;\n            }\n            this.usageClass = usageClass;\n            return true;\n        }","id":39932,"modified_method":"public boolean process(PsiReference reference) {\n            ProgressManager.checkCanceled();\n            final PsiElement element = reference.getElement();\n            final PsiClass usageClass =\n                    ClassUtils.getContainingClass(element);\n          synchronized (this) {\n            if (this.usageClass != null &&\n                    !this.usageClass.equals(usageClass)) {\n                this.usageClass = null;\n                return false;\n            }\n            this.usageClass = usageClass;\n          }\n          return true;\n        }","commit_id":"c0c208953298231cce136c7118d4634b1792fea0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitMethod(PsiMethod method) {\n            super.visitMethod(method);\n            if (!method.hasModifierProperty(PsiModifier.STATIC)) {\n                return;\n            }\n            if (method.hasModifierProperty(PsiModifier.PRIVATE)) {\n                return;\n            }\n            if (method.getNameIdentifier() == null) {\n                return;\n            }\n            final UsageProcessor usageProcessor = new UsageProcessor();\n            final PsiClass usageClass = usageProcessor.getUsageClass(method);\n            if (usageClass == null) {\n                return;\n            }\n            if (usageClass.equals(method.getContainingClass())) {\n                return;\n            }\n            if (usageClass instanceof PsiAnonymousClass) {\n                final PsiClass[] interfaces =\n                        usageClass.getInterfaces();\n                final PsiClass superClass;\n                if (interfaces.length == 1) {\n                    superClass = interfaces[0];\n                    registerMethodError(method, superClass,\n                            Boolean.valueOf(false));\n                } else {\n                    superClass = usageClass.getSuperClass();\n                    if (superClass == null) {\n                        return;\n                    }\n                    registerMethodError(method, superClass,\n                            Boolean.valueOf(true));\n                }\n            } else {\n                registerMethodError(method, usageClass);\n            }\n        }","id":39933,"modified_method":"@Override public void visitMethod(PsiMethod method) {\n            super.visitMethod(method);\n            if (!method.hasModifierProperty(PsiModifier.STATIC)) {\n                return;\n            }\n            if (method.hasModifierProperty(PsiModifier.PRIVATE)) {\n                return;\n            }\n            if (method.getNameIdentifier() == null) {\n                return;\n            }\n            final UsageProcessor usageProcessor = new UsageProcessor();\n            final PsiClass usageClass = usageProcessor.getUsageClass(method);\n            if (usageClass == null) {\n                return;\n            }\n            if (usageClass.equals(method.getContainingClass())) {\n                return;\n            }\n            if (usageClass instanceof PsiAnonymousClass) {\n                final PsiClass[] interfaces =\n                        usageClass.getInterfaces();\n                final PsiClass superClass;\n                if (interfaces.length == 1) {\n                    superClass = interfaces[0];\n                    registerMethodError(method, superClass, Boolean.FALSE);\n                } else {\n                    superClass = usageClass.getSuperClass();\n                    if (superClass == null) {\n                        return;\n                    }\n                    registerMethodError(method, superClass, Boolean.TRUE);\n                }\n            } else {\n                registerMethodError(method, usageClass);\n            }\n        }","commit_id":"c0c208953298231cce136c7118d4634b1792fea0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void validateQueryType(QueryTemplate queryTemplate)\n    {\n        List<QueryType> validTypes = getValidQueryTypes();\n        if (validTypes == null || !validTypes.contains(queryTemplate.getType()))\n        {\n            throw new IllegalArgumentException(String.format(\"Query type must me '%s' but was '%s'\", validTypes, queryTemplate.getType()));\n        }\n    }","id":39934,"modified_method":"protected void validateQueryType(QueryTemplate queryTemplate)\n    {\n        List<QueryType> validTypes = getValidQueryTypes();\n        if (validTypes == null || !validTypes.contains(queryTemplate.getType()))\n        {\n            throw new IllegalArgumentException(String.format(\"Query type must be one of '%s' but was '%s'\", validTypes, queryTemplate.getType()));\n        }\n    }","commit_id":"f1572ce2e64e5f9bc65b805767072c70b80fb632","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n    protected void doParseElement(Element element, ParserContext context, BeanDefinitionBuilder builder)\n    {\n        // We want any parsing to occur as a child of this tag so we need to make\n        // a new one that has this as it's owner/parent\n        ParserContext nestedCtx = new ParserContext(context.getReaderContext(), context.getDelegate(), builder.getBeanDefinition());\n\n        parseConfig(element, builder);\n\n        String streamingValue = element.getAttribute(STREAMING_ATTRIBUTE);\n        processStreamingAttribute(builder, streamingValue);\n        BeanDefinition sqlParamResolver = getParamResolverBeanDefinition();\n\n        queryBean = parameterizedQueryDefinitionParser.parseQuery(element, nestedCtx, sqlParamResolver, dbConfigResolverFactoryBeanDefinition);\n\n        createQueryResolverBeanDefinition(sqlParamResolver);\n\n        builder.addConstructorArgValue(queryResolverBean);\n\n        parseSourceExpression(element, builder);\n        parseTargetExpression(element, builder);\n        parseExecutorFactory(element, builder);\n        parseTransactionalAction(element, builder);\n        parseMetadataProvider(element, builder);\n    }","id":39935,"modified_method":"@Override\n    protected void doParseElement(Element element, ParserContext context, BeanDefinitionBuilder builder)\n    {\n        // We want any parsing to occur as a child of this tag so we need to make\n        // a new one that has this as it's owner/parent\n        ParserContext nestedCtx = new ParserContext(context.getReaderContext(), context.getDelegate(), builder.getBeanDefinition());\n\n        parseConfig(element, builder);\n\n        String streamingValue = element.getAttribute(STREAMING_ATTRIBUTE);\n        processStreamingAttribute(builder, streamingValue);\n        BeanDefinition sqlParamResolver = getParamResolverBeanDefinition();\n\n        queryBean = queryDefinitionParser.parseQuery(element, nestedCtx);\n\n        createQueryResolverBeanDefinition(sqlParamResolver);\n\n        builder.addConstructorArgValue(queryResolverBean);\n\n        parseSourceExpression(element, builder);\n        parseTargetExpression(element, builder);\n        parseExecutorFactory(element, builder);\n        parseTransactionalAction(element, builder);\n        parseMetadataProvider(element, builder);\n    }","commit_id":"f1572ce2e64e5f9bc65b805767072c70b80fb632","url":"https://github.com/mulesoft/mule"},{"original_method":"private void parseBulkQuery(Element element, BeanDefinitionBuilder builder)\n    {\n        String file = element.getAttribute(\"file\");\n        String queryText = element.getTextContent();\n\n        if (StringUtils.isEmpty(file))\n        {\n            BeanDefinitionBuilder sqlParamResolverFactory = BeanDefinitionBuilder.genericBeanDefinition(BulkQueryResolverFactoryBean.class);\n            sqlParamResolverFactory.addConstructorArgValue(queryText);\n            builder.addConstructorArgValue(sqlParamResolverFactory.getBeanDefinition());\n        }\n        else\n        {\n            builder.addConstructorArgValue(new FileBulkQueryResolver(file, new SimpleQueryTemplateParser(), new DefaultFileReader()));\n        }\n    }","id":39936,"modified_method":"private void parseBulkQuery(Element element, BeanDefinitionBuilder builder)\n    {\n        String file = element.getAttribute(\"file\");\n\n        BeanDefinitionBuilder bulkQueryResolver;\n\n        if (StringUtils.isEmpty(file))\n        {\n            bulkQueryResolver = BeanDefinitionBuilder.genericBeanDefinition(BulkQueryResolverFactoryBean.class);\n            bulkQueryResolver.addConstructorArgValue(element.getTextContent());\n        }\n        else\n        {\n            bulkQueryResolver = BeanDefinitionBuilder.genericBeanDefinition(FileBulkQueryResolver.class);\n            bulkQueryResolver.addConstructorArgValue(file);\n            bulkQueryResolver.addConstructorArgValue(new SimpleQueryTemplateParser());\n            bulkQueryResolver.addConstructorArgValue(new DefaultFileReader());\n        }\n\n        builder.addConstructorArgValue(bulkQueryResolver.getBeanDefinition());\n    }","commit_id":"f1572ce2e64e5f9bc65b805767072c70b80fb632","url":"https://github.com/mulesoft/mule"},{"original_method":"private void parseDynamicQuery(Element element, BeanDefinitionBuilder builder, Element sqlElem)\n    {\n        String sqlText = sqlElem.getTextContent();\n\n        QueryTemplate queryTemplate = new QueryTemplate(sqlText, QueryType.DDL, Collections.<QueryParam>emptyList(), true);\n        builder.addConstructorArgValue(queryTemplate);\n\n        element.removeChild(sqlElem);\n    }","id":39937,"modified_method":"private void parseDynamicQuery(Element element, BeanDefinitionBuilder builder, Element sqlElem)\n    {\n        BeanDefinitionBuilder queryTemplateFactory = BeanDefinitionBuilder.genericBeanDefinition(DynamicQueryTemplateFactoryBean.class);\n        queryTemplateFactory.addConstructorArgValue(sqlElem.getTextContent());\n\n        builder.addConstructorArgValue(queryTemplateFactory.getBeanDefinition());\n\n        element.removeChild(sqlElem);\n    }","commit_id":"f1572ce2e64e5f9bc65b805767072c70b80fb632","url":"https://github.com/mulesoft/mule"},{"original_method":"private void parseParameterizedQuery(Element element, BeanDefinitionBuilder builder, ParserContext nestedCtx, Element sqlElem)\n    {\n        String sqlText;\n        boolean hasFileAttribute = sqlElem.hasAttribute(FILE_ATTRIBUTE);\n        boolean hasTextContent = !element.getTextContent().trim().isEmpty();\n\n        if (hasFileAttribute && hasTextContent)\n        {\n            throw new IllegalArgumentException(String.format(\"Element %s cannot contain attribute file and text content simultaneously\", element.getTagName()));\n        }\n\n        if (hasFileAttribute)\n        {\n            String fileName = sqlElem.getAttribute(FILE_ATTRIBUTE);\n            try\n            {\n                sqlText = IOUtils.getResourceAsString(fileName, getClass());\n            }\n            catch (IOException e)\n            {\n                throw new IllegalStateException(\"Unable to read query from file: \" + fileName);\n            }\n        }\n        else\n        {\n            Node node = sqlElem.getFirstChild();\n\n            if (node.getNextSibling() != null && node.getNextSibling().getNodeType() == Node.CDATA_SECTION_NODE)\n            {\n                sqlText = node.getNextSibling().getNodeValue();\n            }\n            else\n            {\n                sqlText = node.getNodeValue();\n            }\n        }\n\n        SimpleQueryTemplateParser simpleQueryParser = new SimpleQueryTemplateParser();\n        QueryTemplate queryTemplate = simpleQueryParser.parse(sqlText);\n\n        if (queryTemplate.getParams().size() > 0 && !queryTemplate.usesNamedParameters())\n        {\n            throw new IllegalArgumentException(\"Templates do not support inline parameters\");\n        }\n        else\n        {\n            builder.addConstructorArgValue(queryTemplate.getSqlText());\n            builder.addConstructorArgValue(queryTemplate.getType());\n\n            element.removeChild(sqlElem);\n\n            List<Object> params = new ManagedList<Object>();\n            List<Element> childElementsByTagName = DomUtils.getChildElementsByTagName(element, IN_PARAM_ELEMENT);\n            if (queryTemplate.usesNamedParameters())\n            {\n                for (InputQueryParam inputSqlParam : queryTemplate.getInputParams())\n                {\n                    Element param = findOverriddenParamElement(inputSqlParam.getName(), childElementsByTagName);\n\n                    if (param == null)\n                    {\n                        params.add(inputSqlParam);\n                    }\n                    else\n                    {\n                        BeanDefinition paramBean = parseParameter(nestedCtx, param);\n\n                        params.add(paramBean);\n                    }\n                }\n            }\n            else\n            {\n                for (Element param : childElementsByTagName)\n                {\n                    BeanDefinition paramBean = parseParameter(nestedCtx, param);\n\n                    params.add(paramBean);\n                }\n            }\n\n            builder.addConstructorArgValue(params);\n        }\n    }","id":39938,"modified_method":"private void parseParameterizedQuery(Element element, BeanDefinitionBuilder builder, ParserContext nestedCtx, Element sqlElem)\n    {\n        boolean hasFileAttribute = sqlElem.hasAttribute(FILE_ATTRIBUTE);\n        boolean hasTextContent = !element.getTextContent().trim().isEmpty();\n\n        if (hasFileAttribute && hasTextContent)\n        {\n            throw new IllegalArgumentException(String.format(\"Element %s cannot contain attribute file and text content simultaneously\", element.getTagName()));\n        }\n\n        BeanDefinitionBuilder queryTemplateFactory = BeanDefinitionBuilder.genericBeanDefinition(ParameterizedQueryTemplateFactoryBean.class);\n\n        if (hasFileAttribute)\n        {\n            String fileName = sqlElem.getAttribute(FILE_ATTRIBUTE);\n            BeanDefinitionBuilder queryFileBuilder = BeanDefinitionBuilder.genericBeanDefinition(QueryFileFactoryBean.class);\n            queryFileBuilder.addConstructorArgValue(fileName);\n            queryFileBuilder.addConstructorArgValue(new DefaultFileReader());\n            queryTemplateFactory.addConstructorArgValue(queryFileBuilder.getBeanDefinition());\n        }\n        else\n        {\n            Node node = sqlElem.getFirstChild();\n\n            String sqlText;\n            if (node.getNextSibling() != null && node.getNextSibling().getNodeType() == Node.CDATA_SECTION_NODE)\n            {\n                sqlText = node.getNextSibling().getNodeValue();\n            }\n            else\n            {\n                sqlText = node.getNodeValue();\n            }\n            queryTemplateFactory.addConstructorArgValue(sqlText);\n        }\n\n        List<Object> params = new ManagedList<Object>();\n        List<Element> childElementsByTagName = DomUtils.getChildElementsByTagName(element, IN_PARAM_ELEMENT);\n\n        for (Element param : childElementsByTagName)\n        {\n            BeanDefinition paramBean = parseParameter(nestedCtx, param);\n\n            params.add(paramBean);\n        }\n\n        queryTemplateFactory.addConstructorArgValue(params);\n        queryTemplateFactory.addConstructorArgValue(new SimpleQueryTemplateParser());\n\n        builder.addConstructorArgValue(queryTemplateFactory.getBeanDefinition());\n\n        element.removeChild(sqlElem);\n    }","commit_id":"f1572ce2e64e5f9bc65b805767072c70b80fb632","url":"https://github.com/mulesoft/mule"},{"original_method":"private void parseQueryTemplateRef(Element element, BeanDefinitionBuilder builder, ParserContext nestedCtx, Element template)\n    {\n        String queryTemplateRef = template.getAttribute(\"name\");\n        element.removeChild(template);\n\n        List<Element> params = DomUtils.getChildElementsByTagName(element, IN_PARAM_ELEMENT);\n        List<BeanDefinition> paramList = ParameterizedQueryDefinitionParser.parseParameterValues(params, nestedCtx);\n\n        BeanDefinitionBuilder queryTemplateBuilder = BeanDefinitionBuilder.genericBeanDefinition(QueryTemplateFactoryBean.class);\n        queryTemplateBuilder.addConstructorArgReference(queryTemplateRef);\n        queryTemplateBuilder.addConstructorArgValue(paramList);\n        builder.addConstructorArgValue(queryTemplateBuilder.getBeanDefinition());\n    }","id":39939,"modified_method":"private void parseQueryTemplateRef(Element element, BeanDefinitionBuilder builder, ParserContext nestedCtx, Element template)\n    {\n        String queryTemplateRef = template.getAttribute(\"name\");\n        element.removeChild(template);\n\n        List<Element> params = DomUtils.getChildElementsByTagName(element, IN_PARAM_ELEMENT);\n        List<BeanDefinition> paramList = QueryDefinitionParser.parseOverriddenTemplateParameters(params, nestedCtx);\n\n        BeanDefinitionBuilder queryTemplateBuilder = BeanDefinitionBuilder.genericBeanDefinition(QueryTemplateFactoryBean.class);\n        queryTemplateBuilder.addConstructorArgReference(queryTemplateRef);\n        queryTemplateBuilder.addConstructorArgValue(paramList);\n        builder.addConstructorArgValue(queryTemplateBuilder.getBeanDefinition());\n    }","commit_id":"f1572ce2e64e5f9bc65b805767072c70b80fb632","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void readQueryFromFile() throws Exception\n    {\n        doQueryFromFileTest(muleContext.getRegistry().get(\"testFileQuery\"));\n    }","id":39940,"modified_method":"@Test\n    public void readsQueryFromFile() throws Exception\n    {\n        doQueryFromFileTest(muleContext.getRegistry().get(\"testFileQuery\"), \"1\");\n    }","commit_id":"f1572ce2e64e5f9bc65b805767072c70b80fb632","url":"https://github.com/mulesoft/mule"},{"original_method":"@Test\n    public void readQueryFromFileAndEmptyContent() throws Exception\n    {\n        doQueryFromFileTest(muleContext.getRegistry().get(\"testFileQueryAndEmptyContent\"));\n    }","id":39941,"modified_method":"@Test\n    public void readsQueryFromFileAndEmptyContent() throws Exception\n    {\n        doQueryFromFileTest(muleContext.getRegistry().get(\"testFileQueryAndEmptyContent\"), \"1\");\n    }","commit_id":"f1572ce2e64e5f9bc65b805767072c70b80fb632","url":"https://github.com/mulesoft/mule"},{"original_method":"private void doQueryFromFileTest(Object queryTemplateBean)\n    {\n        assertTrue(queryTemplateBean instanceof QueryTemplate);\n        QueryTemplate queryTemplate = (QueryTemplate) queryTemplateBean;\n        assertEquals(QueryType.SELECT, queryTemplate.getType());\n        assertEquals(\"SELECT * FROM PLANET WHERE POSITION = ?\", queryTemplate.getSqlText());\n        assertEquals(1, queryTemplate.getInputParams().size());\n        InputQueryParam param1 = queryTemplate.getInputParams().get(0);\n        assertEquals(UnknownDbType.getInstance(), param1.getType());\n        assertEquals(\"position\", param1.getName());\n        assertEquals(\"1\", param1.getValue());\n    }","id":39942,"modified_method":"private void doQueryFromFileTest(Object queryTemplateBean, String paramValue)\n    {\n        assertTrue(queryTemplateBean instanceof QueryTemplate);\n        QueryTemplate queryTemplate = (QueryTemplate) queryTemplateBean;\n        assertEquals(QueryType.SELECT, queryTemplate.getType());\n        assertEquals(\"SELECT * FROM PLANET WHERE POSITION = ?\", queryTemplate.getSqlText());\n        assertEquals(1, queryTemplate.getInputParams().size());\n        InputQueryParam param1 = queryTemplate.getInputParams().get(0);\n        assertEquals(UnknownDbType.getInstance(), param1.getType());\n        assertEquals(\"position\", param1.getName());\n        assertEquals(paramValue, param1.getValue());\n    }","commit_id":"f1572ce2e64e5f9bc65b805767072c70b80fb632","url":"https://github.com/mulesoft/mule"},{"original_method":"@Nullable\n    private Trinity<Integer, Integer, RowsDnDSupport.RefinedDropSupport.Position> getAvailableDropPosition() {\n      int[] rows = myTree.getSelectionRows();\n      if (rows == null || rows.length != 1) {\n        return null;\n      }\n      int oldIndex = rows[0];\n      int newIndex = oldIndex + myDirection;\n      while (newIndex > 0 && newIndex < myTree.getRowCount()) {\n        RowsDnDSupport.RefinedDropSupport.Position position = myTreeModel.isDropInto(myTree, oldIndex, newIndex) ?\n                                                              INTO :\n                                                              myDirection > 0 ? BELOW : ABOVE;\n        if (myTreeModel.canDrop(oldIndex, newIndex, position)) {\n          return Trinity.create(oldIndex, newIndex, position);\n        }\n        if (position == BELOW && newIndex < myTree.getRowCount() - 1 && myTreeModel.canDrop(oldIndex, newIndex + 1, ABOVE)) {\n          return Trinity.create(oldIndex, newIndex + 1, ABOVE);\n        }\n        if (position == ABOVE && newIndex > 1 && myTreeModel.canDrop(oldIndex, newIndex - 1, BELOW)) {\n          return Trinity.create(oldIndex, newIndex - 1, BELOW);\n        }\n        newIndex += myDirection;\n      }\n      return null;\n    }","id":39943,"modified_method":"@Nullable\n    private Trinity<Integer, Integer, RowsDnDSupport.RefinedDropSupport.Position> getAvailableDropPosition() {\n      int[] rows = myTree.getSelectionRows();\n      if (rows == null || rows.length != 1) {\n        return null;\n      }\n      int oldIndex = rows[0];\n      int newIndex = oldIndex + myDirection;\n      while (newIndex > 0 && newIndex < myTree.getRowCount()) {\n        RowsDnDSupport.RefinedDropSupport.Position position = myTreeModel.isDropInto(myTree, oldIndex, newIndex) ?\n                                                              INTO :\n                                                              myDirection > 0 ? BELOW : ABOVE;\n        if (myTreeModel.canDrop(oldIndex, newIndex, position)) {\n          return Trinity.create(oldIndex, newIndex, position);\n        }\n        if (position == BELOW && newIndex < myTree.getRowCount() - 1 && myTreeModel.canDrop(oldIndex, newIndex + 1, ABOVE)) {\n          return Trinity.create(oldIndex, newIndex + 1, ABOVE);\n        }\n        if (position == ABOVE && newIndex > 1 && myTreeModel.canDrop(oldIndex, newIndex - 1, BELOW)) {\n          return Trinity.create(oldIndex, newIndex - 1, BELOW);\n        }\n        if (position == BELOW && myTreeModel.canDrop(oldIndex, newIndex, ABOVE)) {\n          return Trinity.create(oldIndex, newIndex, ABOVE);\n        }\n        if (position == ABOVE && myTreeModel.canDrop(oldIndex, newIndex, BELOW)) {\n          return Trinity.create(oldIndex, newIndex, BELOW);\n        }\n        newIndex += myDirection;\n      }\n      return null;\n    }","commit_id":"229b5c3f3817634aea8d314c8533508a2160ed7e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public boolean canDrop(int oldIndex, int newIndex, @NotNull Position position) {\n      DefaultMutableTreeNode oldNode = (DefaultMutableTreeNode)myTree.getPathForRow(oldIndex).getLastPathComponent();\n      DefaultMutableTreeNode newNode = (DefaultMutableTreeNode)myTree.getPathForRow(newIndex).getLastPathComponent();\n      DefaultMutableTreeNode oldParent = (DefaultMutableTreeNode)oldNode.getParent();\n      DefaultMutableTreeNode newParent = (DefaultMutableTreeNode)newNode.getParent();\n      NodeKind oldKind = getKind(oldNode);\n      NodeKind newKind = getKind(newNode);\n      ConfigurationType oldType = getType(oldNode);\n      ConfigurationType newType = getType(newNode);\n      if (oldParent == newParent) {\n        if (oldNode.getPreviousSibling() == newNode && position == BELOW) {\n          return false;\n        }\n        if (oldNode.getNextSibling() == newNode && position == ABOVE) {\n          return false;\n        }\n      }\n      if (oldType != newType || newParent == oldNode || oldParent == newNode)\n        return false;\n      if (oldKind == FOLDER && newKind != FOLDER) {\n        if (newKind.isConfiguration() &&\n            position == ABOVE &&\n            getKind(newParent) == CONFIGURATION_TYPE &&\n            newIndex > 1 &&\n            getKind((DefaultMutableTreeNode)myTree.getPathForRow(newIndex - 1).getParentPath().getLastPathComponent()) == FOLDER) {\n          return true;\n        }\n        return false;\n      }\n      if (!oldKind.supportsDnD() || !newKind.supportsDnD()) {\n        return false;\n      }\n      if (oldKind == TEMPORARY_CONFIGURATION && newKind == CONFIGURATION && position == ABOVE)\n        return false;\n      if (oldKind == CONFIGURATION && newKind == TEMPORARY_CONFIGURATION && position == BELOW)\n        return false;\n      if (oldKind == CONFIGURATION && newKind == TEMPORARY_CONFIGURATION && position == ABOVE && newNode.getPreviousSibling() != null && getKind(newNode.getPreviousSibling()) != CONFIGURATION)\n        return false;\n      if (oldKind == TEMPORARY_CONFIGURATION && newKind == CONFIGURATION && position == BELOW && newNode.getNextSibling() != null && getKind(newNode.getNextSibling()) != TEMPORARY_CONFIGURATION)\n        return false;\n      if (oldParent == newNode.getParent()) { //Same parent\n        if (oldKind.isConfiguration() && newKind.isConfiguration()) {\n          return oldKind == newKind;//both are temporary or saved\n        } else if (oldKind.isConfiguration() && newKind == FOLDER){\n          RunnerAndConfigurationSettings oldSettings = getSettings(oldNode);\n          return (oldSettings != null && ((DefaultMutableTreeNode)newNode.getParent()).getUserObject() == oldSettings.getType());\n        } else if (oldKind == FOLDER) {\n          return !myTree.isExpanded(newIndex) || position == ABOVE;\n        }\n      }\n      return true;\n    }","id":39944,"modified_method":"@Override\n    public boolean canDrop(int oldIndex, int newIndex, @NotNull Position position) {\n      DefaultMutableTreeNode oldNode = (DefaultMutableTreeNode)myTree.getPathForRow(oldIndex).getLastPathComponent();\n      DefaultMutableTreeNode newNode = (DefaultMutableTreeNode)myTree.getPathForRow(newIndex).getLastPathComponent();\n      DefaultMutableTreeNode oldParent = (DefaultMutableTreeNode)oldNode.getParent();\n      DefaultMutableTreeNode newParent = (DefaultMutableTreeNode)newNode.getParent();\n      NodeKind oldKind = getKind(oldNode);\n      NodeKind newKind = getKind(newNode);\n      ConfigurationType oldType = getType(oldNode);\n      ConfigurationType newType = getType(newNode);\n      if (oldParent == newParent) {\n        if (oldNode.getPreviousSibling() == newNode && position == BELOW) {\n          return false;\n        }\n        if (oldNode.getNextSibling() == newNode && position == ABOVE) {\n          return false;\n        }\n      }\n      if (oldType != newType) {\n        DefaultMutableTreeNode typeNode = getConfigurationTypeNode(oldType);\n        if (getKind(oldParent) == FOLDER && typeNode != null && typeNode.getNextSibling() == newNode && position == ABOVE) {\n          return true;\n        }\n        if (getKind(oldParent) == CONFIGURATION_TYPE && oldKind == FOLDER && typeNode != null && typeNode.getNextSibling() == newNode && position == ABOVE) {\n          return true;\n        }\n        return false;\n      }\n      if (newParent == oldNode || oldParent == newNode)\n        return false;\n      if (oldKind == FOLDER && newKind != FOLDER) {\n        if (newKind.isConfiguration() &&\n            position == ABOVE &&\n            getKind(newParent) == CONFIGURATION_TYPE &&\n            newIndex > 1 &&\n            getKind((DefaultMutableTreeNode)myTree.getPathForRow(newIndex - 1).getParentPath().getLastPathComponent()) == FOLDER) {\n          return true;\n        }\n        return false;\n      }\n      if (!oldKind.supportsDnD() || !newKind.supportsDnD()) {\n        return false;\n      }\n      if (oldKind == TEMPORARY_CONFIGURATION && newKind == CONFIGURATION && position == ABOVE)\n        return false;\n      if (oldKind == CONFIGURATION && newKind == TEMPORARY_CONFIGURATION && position == BELOW)\n        return false;\n      if (oldKind == CONFIGURATION && newKind == TEMPORARY_CONFIGURATION && position == ABOVE && newNode.getPreviousSibling() != null && getKind(newNode.getPreviousSibling()) == TEMPORARY_CONFIGURATION)\n        return false;\n      if (oldKind == TEMPORARY_CONFIGURATION && newKind == CONFIGURATION && position == BELOW && newNode.getNextSibling() != null && getKind(newNode.getNextSibling()) != TEMPORARY_CONFIGURATION)\n        return false;\n      if (oldParent == newNode.getParent()) { //Same parent\n        if (oldKind.isConfiguration() && newKind.isConfiguration()) {\n          return oldKind == newKind;//both are temporary or saved\n        } else if (oldKind.isConfiguration() && newKind == FOLDER){\n          RunnerAndConfigurationSettings oldSettings = getSettings(oldNode);\n          return (oldSettings != null && ((DefaultMutableTreeNode)newNode.getParent()).getUserObject() == oldSettings.getType());\n        } else if (oldKind == FOLDER) {\n          return !myTree.isExpanded(newIndex) || position == ABOVE;\n        }\n      }\n      return true;\n    }","commit_id":"229b5c3f3817634aea8d314c8533508a2160ed7e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n    private ConfigurationType getType(DefaultMutableTreeNode treeNode) {\n      Object userObject = treeNode.getUserObject();\n      if (userObject instanceof SingleConfigurationConfigurable) {\n        SingleConfigurationConfigurable configurable = (SingleConfigurationConfigurable)userObject;\n        return configurable.getConfiguration().getType();\n      } else if (userObject instanceof RunnerAndConfigurationSettings) {\n        return ((RunnerAndConfigurationSettings)userObject).getType();\n      } else if (userObject instanceof ConfigurationType) {\n        return (ConfigurationType)userObject;\n      }\n      if (treeNode.getParent() instanceof DefaultMutableTreeNode) {\n        return getType((DefaultMutableTreeNode)treeNode.getParent());\n      }\n      return null;\n    }","id":39945,"modified_method":"@Nullable\n    private ConfigurationType getType(@Nullable DefaultMutableTreeNode treeNode) {\n      if (treeNode == null)\n        return null;\n      Object userObject = treeNode.getUserObject();\n      if (userObject instanceof SingleConfigurationConfigurable) {\n        SingleConfigurationConfigurable configurable = (SingleConfigurationConfigurable)userObject;\n        return configurable.getConfiguration().getType();\n      } else if (userObject instanceof RunnerAndConfigurationSettings) {\n        return ((RunnerAndConfigurationSettings)userObject).getType();\n      } else if (userObject instanceof ConfigurationType) {\n        return (ConfigurationType)userObject;\n      }\n      if (treeNode.getParent() instanceof DefaultMutableTreeNode) {\n        return getType((DefaultMutableTreeNode)treeNode.getParent());\n      }\n      return null;\n    }","commit_id":"229b5c3f3817634aea8d314c8533508a2160ed7e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void drop(int oldIndex, int newIndex, @NotNull Position position) {\n      DefaultMutableTreeNode oldNode = (DefaultMutableTreeNode)myTree.getPathForRow(oldIndex).getLastPathComponent();\n      DefaultMutableTreeNode newNode = (DefaultMutableTreeNode)myTree.getPathForRow(newIndex).getLastPathComponent();\n      DefaultMutableTreeNode newParent = (DefaultMutableTreeNode)newNode.getParent();\n      NodeKind oldKind = getKind(oldNode);\n      boolean wasExpanded = myTree.isExpanded(new TreePath(oldNode.getPath()));\n      if (isDropInto(myTree, oldIndex, newIndex)) { //Drop in folder\n        removeNodeFromParent(oldNode);\n        int index = newNode.getChildCount();\n        if (oldKind == CONFIGURATION) {\n          for (int i = 0; i < newNode.getChildCount(); i++) {\n            if (getKind((DefaultMutableTreeNode)newNode.getChildAt(i)) == TEMPORARY_CONFIGURATION) {\n              index = i;\n              break;\n            }\n          }\n        }\n        insertNodeInto(oldNode, newNode, index);\n        myTree.expandPath(new TreePath(newNode.getPath()));\n      }\n      else {\n        removeNodeFromParent(oldNode);\n        int index = newParent.getIndex(newNode);\n        if (position == BELOW)\n          index++;\n        insertNodeInto(oldNode, newParent, index);\n      }\n      TreePath treePath = new TreePath(oldNode.getPath());\n      myTree.setSelectionPath(treePath);\n      if (wasExpanded) {\n        myTree.expandPath(treePath);\n      }\n    }","id":39946,"modified_method":"@Override\n    public void drop(int oldIndex, int newIndex, @NotNull Position position) {\n      DefaultMutableTreeNode oldNode = (DefaultMutableTreeNode)myTree.getPathForRow(oldIndex).getLastPathComponent();\n      DefaultMutableTreeNode newNode = (DefaultMutableTreeNode)myTree.getPathForRow(newIndex).getLastPathComponent();\n      DefaultMutableTreeNode newParent = (DefaultMutableTreeNode)newNode.getParent();\n      NodeKind oldKind = getKind(oldNode);\n      boolean wasExpanded = myTree.isExpanded(new TreePath(oldNode.getPath()));\n      if (isDropInto(myTree, oldIndex, newIndex)) { //Drop in folder\n        removeNodeFromParent(oldNode);\n        int index = newNode.getChildCount();\n        if (oldKind == CONFIGURATION) {\n          for (int i = 0; i < newNode.getChildCount(); i++) {\n            if (getKind((DefaultMutableTreeNode)newNode.getChildAt(i)) == TEMPORARY_CONFIGURATION) {\n              index = i;\n              break;\n            }\n          }\n        }\n        insertNodeInto(oldNode, newNode, index);\n        myTree.expandPath(new TreePath(newNode.getPath()));\n      }\n      else {\n        ConfigurationType type = getType(oldNode);\n        assert type != null;\n        removeNodeFromParent(oldNode);\n        int index;\n        if (type != getType(newNode)) {\n          DefaultMutableTreeNode typeNode = getConfigurationTypeNode(type);\n          assert typeNode != null;\n          newParent = typeNode;\n          index = newParent.getChildCount();\n        } else {\n          index = newParent.getIndex(newNode);\n          if (position == BELOW)\n          index++;\n        }\n        insertNodeInto(oldNode, newParent, index);\n      }\n      TreePath treePath = new TreePath(oldNode.getPath());\n      myTree.setSelectionPath(treePath);\n      if (wasExpanded) {\n        myTree.expandPath(treePath);\n      }\n    }","commit_id":"229b5c3f3817634aea8d314c8533508a2160ed7e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private JScrollPane createTable() {\n    myTreeRoot = new CheckedTreeNode(null);\n\n    myTree = new CheckboxTree(new CheckboxTree.CheckboxTreeCellRenderer(){\n      public void customizeCellRenderer(final JTree tree,\n                                        Object value,\n                                        final boolean selected,\n                                        final boolean expanded,\n                                        final boolean leaf,\n                                        final int row,\n                                        final boolean hasFocus) {\n\n        value = ((DefaultMutableTreeNode)value).getUserObject();\n\n        if (value instanceof TemplateImpl) {\n          //getTextRenderer().setIcon(TEMPLATE_ICON);\n          getTextRenderer().append (((TemplateImpl)value).getKey(), SimpleTextAttributes.REGULAR_ATTRIBUTES);\n          String description = ((TemplateImpl)value).getDescription();\n          if (description != null && description.length() > 0) {\n            getTextRenderer().append (\" (\" + description + \")\", SimpleTextAttributes.GRAY_ATTRIBUTES);\n          }\n        }\n        else if (value instanceof TemplateGroup) {\n          //getTextRenderer().setIcon(TEMPLATE_GROUP_ICON);\n          getTextRenderer().append (((TemplateGroup)value).getName(), SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n        }\n\n\n      }\n    }, myTreeRoot) {\n      @Override\n      protected void onNodeStateChanged(final CheckedTreeNode node) {\n        Object obj = node.getUserObject();\n        if (obj instanceof TemplateImpl) {\n          ((TemplateImpl)obj).setDeactivated(!node.isChecked());\n          isModified = true;\n        }\n      }\n\n    };\n    myTree.setRootVisible(false);\n    myTree.setShowsRootHandles(true);\n\n    DefaultTreeSelectionModel selModel = new DefaultTreeSelectionModel();\n    myTree.setSelectionModel(selModel);\n    selModel.setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);\n\n    myTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){\n      public void valueChanged(final TreeSelectionEvent e) {\n        boolean enableEditButton = false;\n        boolean enableRemoveButton = false;\n        boolean enableCopyButton = false;\n        boolean enableExportButton = false;\n\n        int selected = getSelectedIndex();\n        if (selected >= 0 && selected < myTree.getRowCount()) {\n          TemplateSettings templateSettings = TemplateSettings.getInstance();\n          TemplateImpl template = getTemplate(selected);\n          if (template != null) {\n            templateSettings.setLastSelectedTemplateKey(template.getKey());\n          } else {\n            templateSettings.setLastSelectedTemplateKey(null);\n          }\n          DefaultMutableTreeNode node = (DefaultMutableTreeNode)myTree.getPathForRow(selected).getLastPathComponent();\n          enableExportButton = false;\n          enableEditButton = false;\n          enableCopyButton = false;\n          if (node.getUserObject() instanceof TemplateImpl) {\n            enableCopyButton = true;\n            TemplateGroup group = getTemplateGroup(template.getGroupName());\n            if (group != null && !getSchemesManager().isShared(group)) {\n              enableEditButton = true;\n              enableRemoveButton = true;\n            }\n          }\n          if (node.getUserObject() instanceof TemplateGroup) {\n            enableRemoveButton = true;\n            TemplateGroup group = (TemplateGroup)node.getUserObject();\n            enableExportButton = !getSchemesManager().isShared(group);\n\n          }\n\n        }\n        updateTemplateTextArea();\n        myEditor.getComponent().setEnabled(enableEditButton);\n\n        if (myCopyButton != null) {\n          myCopyButton.setEnabled(enableCopyButton);\n          myEditButton.setEnabled(enableEditButton);\n          myRemoveButton.setEnabled(enableRemoveButton);\n        }\n\n        if (myExportButton != null) {\n          myExportButton.setEnabled(enableExportButton);\n        }\n\n        if (myImportButton != null) {\n          myImportButton.setEnabled(true);\n        }\n\n      }\n    });\n\n\n    myTree.registerKeyboardAction(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent event) {\n          addRow();\n        }\n      },\n      KeyStroke.getKeyStroke(KeyEvent.VK_INSERT, 0),\n      JComponent.WHEN_FOCUSED\n    );\n\n    myTree.registerKeyboardAction(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent event) {\n          removeRow();\n        }\n      },\n      KeyStroke.getKeyStroke(KeyEvent.VK_DELETE, 0),\n      JComponent.WHEN_FOCUSED\n    );\n\n    myTree.addMouseListener(\n      new MouseAdapter() {\n        public void mouseClicked(MouseEvent e) {\n          if (e.getClickCount() == 2) {\n            edit();\n          }\n        }\n      }\n    );\n\n    JScrollPane scrollpane = ScrollPaneFactory.createScrollPane(myTree);\n    if (myTemplateGroups.size() > 0) {\n      myTree.setSelectionInterval(0, 0);\n    }\n    scrollpane.setPreferredSize(new Dimension(600, 400));\n    return scrollpane;\n  }","id":39947,"modified_method":"private JScrollPane createTable() {\n    myTreeRoot = new CheckedTreeNode(null);\n\n    myTree = new CheckboxTree(new CheckboxTree.CheckboxTreeCellRenderer(){\n      public void customizeCellRenderer(final JTree tree,\n                                        Object value,\n                                        final boolean selected,\n                                        final boolean expanded,\n                                        final boolean leaf,\n                                        final int row,\n                                        final boolean hasFocus) {\n\n        value = ((DefaultMutableTreeNode)value).getUserObject();\n\n        if (value instanceof TemplateImpl) {\n          //getTextRenderer().setIcon(TEMPLATE_ICON);\n          getTextRenderer().append (((TemplateImpl)value).getKey(), SimpleTextAttributes.REGULAR_ATTRIBUTES);\n          String description = ((TemplateImpl)value).getDescription();\n          if (description != null && description.length() > 0) {\n            getTextRenderer().append (\" (\" + description + \")\", SimpleTextAttributes.GRAY_ATTRIBUTES);\n          }\n        }\n        else if (value instanceof TemplateGroup) {\n          //getTextRenderer().setIcon(TEMPLATE_GROUP_ICON);\n          getTextRenderer().append (((TemplateGroup)value).getName(), SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n        }\n\n\n      }\n    }, myTreeRoot) {\n      @Override\n      protected void onNodeStateChanged(final CheckedTreeNode node) {\n        Object obj = node.getUserObject();\n        if (obj instanceof TemplateImpl) {\n          ((TemplateImpl)obj).setDeactivated(!node.isChecked());\n        }\n      }\n\n    };\n    myTree.setRootVisible(false);\n    myTree.setShowsRootHandles(true);\n\n    DefaultTreeSelectionModel selModel = new DefaultTreeSelectionModel();\n    myTree.setSelectionModel(selModel);\n    selModel.setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);\n\n    myTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener(){\n      public void valueChanged(final TreeSelectionEvent e) {\n        boolean enableEditButton = false;\n        boolean enableRemoveButton = false;\n        boolean enableCopyButton = false;\n        boolean enableExportButton = false;\n\n        int selected = getSelectedIndex();\n        if (selected >= 0 && selected < myTree.getRowCount()) {\n          TemplateSettings templateSettings = TemplateSettings.getInstance();\n          TemplateImpl template = getTemplate(selected);\n          if (template != null) {\n            templateSettings.setLastSelectedTemplateKey(template.getKey());\n          } else {\n            templateSettings.setLastSelectedTemplateKey(null);\n          }\n          DefaultMutableTreeNode node = (DefaultMutableTreeNode)myTree.getPathForRow(selected).getLastPathComponent();\n          enableExportButton = false;\n          enableEditButton = false;\n          enableCopyButton = false;\n          if (node.getUserObject() instanceof TemplateImpl) {\n            enableCopyButton = true;\n            if (template != null) {\n              TemplateGroup group = getTemplateGroup(template.getGroupName());\n              if (group != null && !getSchemesManager().isShared(group)) {\n                enableEditButton = true;\n                enableRemoveButton = true;\n              }\n            }\n          }\n          if (node.getUserObject() instanceof TemplateGroup) {\n            enableRemoveButton = true;\n            TemplateGroup group = (TemplateGroup)node.getUserObject();\n            enableExportButton = !getSchemesManager().isShared(group);\n\n          }\n\n        }\n        updateTemplateTextArea();\n        myEditor.getComponent().setEnabled(enableEditButton);\n\n        if (myCopyButton != null) {\n          myCopyButton.setEnabled(enableCopyButton);\n          myEditButton.setEnabled(enableEditButton);\n          myRemoveButton.setEnabled(enableRemoveButton);\n        }\n\n        if (myExportButton != null) {\n          myExportButton.setEnabled(enableExportButton);\n        }\n\n        if (myImportButton != null) {\n          myImportButton.setEnabled(true);\n        }\n\n      }\n    });\n\n\n    myTree.registerKeyboardAction(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent event) {\n          addRow();\n        }\n      },\n      KeyStroke.getKeyStroke(KeyEvent.VK_INSERT, 0),\n      JComponent.WHEN_FOCUSED\n    );\n\n    myTree.registerKeyboardAction(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent event) {\n          removeRow();\n        }\n      },\n      KeyStroke.getKeyStroke(KeyEvent.VK_DELETE, 0),\n      JComponent.WHEN_FOCUSED\n    );\n\n    myTree.addMouseListener(\n      new MouseAdapter() {\n        public void mouseClicked(MouseEvent e) {\n          if (e.getClickCount() == 2) {\n            edit();\n          }\n        }\n      }\n    );\n\n    JScrollPane scrollpane = ScrollPaneFactory.createScrollPane(myTree);\n    if (myTemplateGroups.size() > 0) {\n      myTree.setSelectionInterval(0, 0);\n    }\n    scrollpane.setPreferredSize(new Dimension(600, 400));\n    return scrollpane;\n  }","commit_id":"e36bef2c87402ce1e4b7a869f655da810a1b6721","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void removeTemplateAt(int row) {\n    JTree tree = myTree;\n    TreePath path = tree.getPathForRow(row);\n    DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();\n    LOG.assertTrue(node.getUserObject() instanceof TemplateImpl);\n\n    TemplateImpl template = (TemplateImpl)node.getUserObject();\n    getTemplateGroup(template.getGroupName()).removeElement(template);\n\n    DefaultMutableTreeNode parent = (DefaultMutableTreeNode)node.getParent();\n    TreePath treePathToSelect = (parent.getChildAfter(node) != null || parent.getChildCount() == 1 ?\n                            tree.getPathForRow(row + 1) :\n                            tree.getPathForRow(row - 1));\n    DefaultMutableTreeNode toSelect = treePathToSelect != null ? (DefaultMutableTreeNode)treePathToSelect.getLastPathComponent() : null;\n\n    removeNodeFromParent(node);\n    if (parent.getChildCount() == 0) {\n      myTemplateGroups.remove(parent.getUserObject());\n      removeNodeFromParent(parent);\n    }\n    if (toSelect != null) {\n      setSelectedNode(toSelect);\n    }\n  }","id":39948,"modified_method":"private void removeTemplateAt(int row) {\n    JTree tree = myTree;\n    TreePath path = tree.getPathForRow(row);\n    DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();\n    LOG.assertTrue(node.getUserObject() instanceof TemplateImpl);\n\n    TemplateImpl template = (TemplateImpl)node.getUserObject();\n    TemplateGroup templateGroup = getTemplateGroup(template.getGroupName());\n    if (templateGroup != null) {\n      templateGroup.removeElement(template);\n    }\n\n    DefaultMutableTreeNode parent = (DefaultMutableTreeNode)node.getParent();\n    TreePath treePathToSelect = (parent.getChildAfter(node) != null || parent.getChildCount() == 1 ?\n                            tree.getPathForRow(row + 1) :\n                            tree.getPathForRow(row - 1));\n    DefaultMutableTreeNode toSelect = treePathToSelect != null ? (DefaultMutableTreeNode)treePathToSelect.getLastPathComponent() : null;\n\n    removeNodeFromParent(node);\n    if (parent.getChildCount() == 0) {\n      myTemplateGroups.remove(parent.getUserObject());\n      removeNodeFromParent(parent);\n    }\n    if (toSelect != null) {\n      setSelectedNode(toSelect);\n    }\n  }","commit_id":"e36bef2c87402ce1e4b7a869f655da810a1b6721","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private DefaultMutableTreeNode addTemplate(TemplateImpl template) {\n    TemplateGroup newGroup = getTemplateGroup(template.getGroupName());\n    if (newGroup == null) {\n      newGroup = new TemplateGroup(template.getGroupName());\n      insertNewGroup(newGroup);\n    }\n    if (!newGroup.contains(template)) {\n      newGroup.addElement(template);\n    }\n\n    CheckedTreeNode node = new CheckedTreeNode(template);\n    node.setChecked(template.isDeactivated());\n    if (myTreeRoot.getChildCount() > 0) {\n      for (DefaultMutableTreeNode child = (DefaultMutableTreeNode)myTreeRoot.getFirstChild();\n           child != null;\n           child = (DefaultMutableTreeNode)myTreeRoot.getChildAfter(child)) {\n        if (((TemplateGroup)child.getUserObject()).getName().equals(template.getGroupName())) {\n          int index = getIndexToInsert (child, template.getKey());\n          child.insert(node, index);\n          ((DefaultTreeModel)myTree.getModel()).nodesWereInserted(child, new int[]{index});\n          setSelectedNode(node);\n          return node;\n        }\n      }\n    }\n\n    return null;\n  }","id":39949,"modified_method":"@Nullable\n  private DefaultMutableTreeNode addTemplate(TemplateImpl template) {\n    TemplateGroup newGroup = getTemplateGroup(template.getGroupName());\n    if (newGroup == null) {\n      newGroup = new TemplateGroup(template.getGroupName());\n      insertNewGroup(newGroup);\n    }\n    if (!newGroup.contains(template)) {\n      newGroup.addElement(template);\n    }\n\n    CheckedTreeNode node = new CheckedTreeNode(template);\n    node.setChecked(!template.isDeactivated());\n    if (myTreeRoot.getChildCount() > 0) {\n      for (DefaultMutableTreeNode child = (DefaultMutableTreeNode)myTreeRoot.getFirstChild();\n           child != null;\n           child = (DefaultMutableTreeNode)myTreeRoot.getChildAfter(child)) {\n        if (((TemplateGroup)child.getUserObject()).getName().equals(template.getGroupName())) {\n          int index = getIndexToInsert (child, template.getKey());\n          child.insert(node, index);\n          ((DefaultTreeModel)myTree.getModel()).nodesWereInserted(child, new int[]{index});\n          setSelectedNode(node);\n          return node;\n        }\n      }\n    }\n\n    return null;\n  }","commit_id":"e36bef2c87402ce1e4b7a869f655da810a1b6721","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void fillPanel(JPanel optionsPanel) {\n    JPanel tablePanel = new JPanel();\n    tablePanel.setBorder(BorderFactory.createLineBorder(Color.gray));\n    tablePanel.setLayout(new BorderLayout());\n    tablePanel.add(createTable(), BorderLayout.CENTER);\n\n    JPanel tableButtonsPanel = new JPanel();\n    tableButtonsPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));\n\n    tableButtonsPanel.setLayout(new GridBagLayout());\n    GridBagConstraints gbConstraints = new GridBagConstraints();\n    gbConstraints.gridwidth = GridBagConstraints.REMAINDER;\n    gbConstraints.fill = GridBagConstraints.HORIZONTAL;\n    gbConstraints.insets = new Insets(0, 0, 4, 0);\n\n    final JButton addButton = createButton(tableButtonsPanel, gbConstraints, CodeInsightBundle.message(\"templates.dialog.table.action.add\"));\n    addButton.setEnabled(true);\n    myCopyButton = createButton(tableButtonsPanel, gbConstraints, CodeInsightBundle.message(\"templates.dialog.table.action.copy\"));\n    myEditButton = createButton(tableButtonsPanel, gbConstraints, CodeInsightBundle.message(\"templates.dialog.table.action.edit\"));\n    myRemoveButton = createButton(tableButtonsPanel, gbConstraints, CodeInsightBundle.message(\"templates.dialog.table.action.remove\"));\n\n    if (getSchemesManager().isExportAvailable()) {\n      myExportButton = createButton(tableButtonsPanel, gbConstraints, \"Share...\");\n      myEditButton.setMnemonic('S');\n\n      myExportButton.addActionListener(new ActionListener(){\n        public void actionPerformed(final ActionEvent e) {\n          exportCurrentGroup();\n        }\n      });\n\n\n    }\n\n    if (getSchemesManager().isImportAvailable()) {\n      myImportButton = createButton(tableButtonsPanel, gbConstraints, \"Import Shared...\");\n      myImportButton.setMnemonic('I');\n      myImportButton.setEnabled(true);\n\n      myImportButton.addActionListener(new ActionListener(){\n        public void actionPerformed(final ActionEvent e) {\n          new SchemesToImportPopup<TemplateGroup, TemplateGroup>(TemplateListPanel.this){\n            protected void onSchemeSelected(final TemplateGroup scheme) {\n              for (TemplateImpl newTemplate : scheme.getElements()) {\n                for (TemplateImpl existingTemplate : collectAllTemplates()) {\n                  if (existingTemplate.getKey().equals(newTemplate.getKey())) {\n                    Messages.showMessageDialog(\n                      TemplateListPanel.this,\n                      CodeInsightBundle.message(\"dialog.edit.template.error.already.exists\", existingTemplate.getKey(), existingTemplate.getGroupName()),\n                      CodeInsightBundle.message(\"dialog.edit.template.error.title\"),\n                      Messages.getErrorIcon()\n                    );\n                    return;\n                  }\n                }\n              }\n              insertNewGroup(scheme);\n              for (TemplateImpl template : scheme.getElements()) {\n                addTemplate(template);\n                isModified =  true;\n              }\n            }\n          }.show(getSchemesManager(), myTemplateGroups);\n        }\n      });\n      \n    }\n\n    gbConstraints.weighty = 1;\n    tableButtonsPanel.add(new JPanel(), gbConstraints);\n\n    tablePanel.add(tableButtonsPanel, BorderLayout.EAST);\n    optionsPanel.add(tablePanel, BorderLayout.CENTER);\n\n    JPanel textPanel = new JPanel(new BorderLayout());\n    textPanel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));\n    myEditor = TemplateEditorUtil.createEditor(true, \"\");\n    textPanel.add(myEditor.getComponent(), BorderLayout.CENTER);\n    textPanel.add(createExpandByPanel(), BorderLayout.SOUTH);\n    textPanel.setPreferredSize(new Dimension(100, myEditor.getLineHeight() * 12));\n\n    optionsPanel.add(textPanel, BorderLayout.SOUTH);\n\n    addButton.addActionListener(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent event) {\n          addRow();\n        }\n      }\n    );\n\n    myCopyButton.addActionListener(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent event) {\n          copyRow();\n        }\n      }\n    );\n\n    myEditButton.addActionListener(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent event) {\n          edit();\n        }\n      }\n    );\n\n    myRemoveButton.addActionListener(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent event) {\n          removeRow();\n        }\n      }\n    );\n  }","id":39950,"modified_method":"private void fillPanel(JPanel optionsPanel) {\n    JPanel tablePanel = new JPanel();\n    tablePanel.setBorder(BorderFactory.createLineBorder(Color.gray));\n    tablePanel.setLayout(new BorderLayout());\n    tablePanel.add(createTable(), BorderLayout.CENTER);\n\n    JPanel tableButtonsPanel = new JPanel();\n    tableButtonsPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));\n\n    tableButtonsPanel.setLayout(new GridBagLayout());\n    GridBagConstraints gbConstraints = new GridBagConstraints();\n    gbConstraints.gridwidth = GridBagConstraints.REMAINDER;\n    gbConstraints.fill = GridBagConstraints.HORIZONTAL;\n    gbConstraints.insets = new Insets(0, 0, 4, 0);\n\n    final JButton addButton = createButton(tableButtonsPanel, gbConstraints, CodeInsightBundle.message(\"templates.dialog.table.action.add\"));\n    addButton.setEnabled(true);\n    myCopyButton = createButton(tableButtonsPanel, gbConstraints, CodeInsightBundle.message(\"templates.dialog.table.action.copy\"));\n    myEditButton = createButton(tableButtonsPanel, gbConstraints, CodeInsightBundle.message(\"templates.dialog.table.action.edit\"));\n    myRemoveButton = createButton(tableButtonsPanel, gbConstraints, CodeInsightBundle.message(\"templates.dialog.table.action.remove\"));\n\n    if (getSchemesManager().isExportAvailable()) {\n      myExportButton = createButton(tableButtonsPanel, gbConstraints, \"Share...\");\n      myEditButton.setMnemonic('S');\n\n      myExportButton.addActionListener(new ActionListener(){\n        public void actionPerformed(final ActionEvent e) {\n          exportCurrentGroup();\n        }\n      });\n\n\n    }\n\n    if (getSchemesManager().isImportAvailable()) {\n      myImportButton = createButton(tableButtonsPanel, gbConstraints, \"Import Shared...\");\n      myImportButton.setMnemonic('I');\n      myImportButton.setEnabled(true);\n\n      myImportButton.addActionListener(new ActionListener(){\n        public void actionPerformed(final ActionEvent e) {\n          new SchemesToImportPopup<TemplateGroup, TemplateGroup>(TemplateListPanel.this){\n            protected void onSchemeSelected(final TemplateGroup scheme) {\n              for (TemplateImpl newTemplate : scheme.getElements()) {\n                for (TemplateImpl existingTemplate : collectAllTemplates()) {\n                  if (existingTemplate.getKey().equals(newTemplate.getKey())) {\n                    Messages.showMessageDialog(\n                      TemplateListPanel.this,\n                      CodeInsightBundle.message(\"dialog.edit.template.error.already.exists\", existingTemplate.getKey(), existingTemplate.getGroupName()),\n                      CodeInsightBundle.message(\"dialog.edit.template.error.title\"),\n                      Messages.getErrorIcon()\n                    );\n                    return;\n                  }\n                }\n              }\n              insertNewGroup(scheme);\n              for (TemplateImpl template : scheme.getElements()) {\n                addTemplate(template);\n              }\n            }\n          }.show(getSchemesManager(), myTemplateGroups);\n        }\n      });\n      \n    }\n\n    gbConstraints.weighty = 1;\n    tableButtonsPanel.add(new JPanel(), gbConstraints);\n\n    tablePanel.add(tableButtonsPanel, BorderLayout.EAST);\n    optionsPanel.add(tablePanel, BorderLayout.CENTER);\n\n    JPanel textPanel = new JPanel(new BorderLayout());\n    textPanel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));\n    myEditor = TemplateEditorUtil.createEditor(true, \"\");\n    textPanel.add(myEditor.getComponent(), BorderLayout.CENTER);\n    textPanel.add(createExpandByPanel(), BorderLayout.SOUTH);\n    textPanel.setPreferredSize(new Dimension(100, myEditor.getLineHeight() * 12));\n\n    optionsPanel.add(textPanel, BorderLayout.SOUTH);\n\n    addButton.addActionListener(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent event) {\n          addRow();\n        }\n      }\n    );\n\n    myCopyButton.addActionListener(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent event) {\n          copyRow();\n        }\n      }\n    );\n\n    myEditButton.addActionListener(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent event) {\n          edit();\n        }\n      }\n    );\n\n    myRemoveButton.addActionListener(\n      new ActionListener() {\n        public void actionPerformed(ActionEvent event) {\n          removeRow();\n        }\n      }\n    );\n  }","commit_id":"e36bef2c87402ce1e4b7a869f655da810a1b6721","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void reset() {\n    myTemplateOptions.clear();\n    myTemplateContext.clear();\n\n    TemplateSettings templateSettings = TemplateSettings.getInstance();\n    List<TemplateGroup> groups = new ArrayList<TemplateGroup>(templateSettings.getTemplateGroups());\n\n    Collections.sort(groups, new Comparator<TemplateGroup>(){\n      public int compare(final TemplateGroup o1, final TemplateGroup o2) {\n        return o1.getName().compareTo(o2.getName());\n      }\n    });\n\n    initTemplates(groups, templateSettings.getLastSelectedTemplateKey());\n\n\n\n    if (templateSettings.getDefaultShortcutChar() == TemplateSettings.TAB_CHAR) {\n      myExpandByCombo.setSelectedItem(TAB);\n    }\n    else if (templateSettings.getDefaultShortcutChar() == TemplateSettings.ENTER_CHAR) {\n      myExpandByCombo.setSelectedItem(ENTER);\n    }\n    else {\n      myExpandByCombo.setSelectedItem(SPACE);\n    }\n\n    UiNotifyConnector.doWhenFirstShown(this, new Runnable() {\n      public void run() {\n        updateTemplateText();\n      }\n    });\n\n    isModified = false;\n    myUpdateNeeded = true;\n\n\n  }","id":39951,"modified_method":"public void reset() {\n    myTemplateOptions.clear();\n    myTemplateContext.clear();\n\n    TemplateSettings templateSettings = TemplateSettings.getInstance();\n    List<TemplateGroup> groups = new ArrayList<TemplateGroup>(templateSettings.getTemplateGroups());\n\n    Collections.sort(groups, new Comparator<TemplateGroup>(){\n      public int compare(final TemplateGroup o1, final TemplateGroup o2) {\n        return o1.getName().compareTo(o2.getName());\n      }\n    });\n\n    initTemplates(groups, templateSettings.getLastSelectedTemplateKey());\n\n\n\n    if (templateSettings.getDefaultShortcutChar() == TemplateSettings.TAB_CHAR) {\n      myExpandByCombo.setSelectedItem(TAB);\n    }\n    else if (templateSettings.getDefaultShortcutChar() == TemplateSettings.ENTER_CHAR) {\n      myExpandByCombo.setSelectedItem(ENTER);\n    }\n    else {\n      myExpandByCombo.setSelectedItem(SPACE);\n    }\n\n    UiNotifyConnector.doWhenFirstShown(this, new Runnable() {\n      public void run() {\n        updateTemplateText();\n      }\n    });\n\n    myUpdateNeeded = true;\n\n\n  }","commit_id":"e36bef2c87402ce1e4b7a869f655da810a1b6721","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void copyRow() {\n    int selected = getSelectedIndex();\n    if (selected < 0) return;\n\n    TemplateImpl orTemplate = getTemplate(selected);\n    LOG.assertTrue(orTemplate != null);\n    TemplateImpl template = orTemplate.copy();\n    myTemplateOptions.put(System.identityHashCode(template), template.createOptions());\n    myTemplateContext.put(System.identityHashCode(template), template.createContext());\n    EditTemplateDialog dialog = new EditTemplateDialog(this, CodeInsightBundle.message(\"dialog.copy.live.template.title\"), template, getTemplateGroups(),\n                                                       (String)myExpandByCombo.getSelectedItem(), getOptions(template), getContext(template));\n    dialog.show();\n    if (!dialog.isOK()) return;\n\n    dialog.apply();\n    addTemplate(template);\n    isModified = true;\n  }","id":39952,"modified_method":"private void copyRow() {\n    int selected = getSelectedIndex();\n    if (selected < 0) return;\n\n    TemplateImpl orTemplate = getTemplate(selected);\n    LOG.assertTrue(orTemplate != null);\n    TemplateImpl template = orTemplate.copy();\n    myTemplateOptions.put(System.identityHashCode(template), template.createOptions());\n    myTemplateContext.put(System.identityHashCode(template), template.createContext());\n    EditTemplateDialog dialog = new EditTemplateDialog(this, CodeInsightBundle.message(\"dialog.copy.live.template.title\"), template, getTemplateGroups(),\n                                                       (String)myExpandByCombo.getSelectedItem(), getOptions(template), getContext(template));\n    dialog.show();\n    if (!dialog.isOK()) return;\n\n    dialog.apply();\n    addTemplate(template);\n  }","commit_id":"e36bef2c87402ce1e4b7a869f655da810a1b6721","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void edit() {\n    int selected = getSelectedIndex();\n    if (selected < 0) return;\n\n    TemplateImpl template = getTemplate(selected);\n    DefaultMutableTreeNode oldTemplateNode = getNode(selected);\n    if (template == null) return;\n\n    String oldGroupName = template.getGroupName();\n\n    EditTemplateDialog dialog = new EditTemplateDialog(this, CodeInsightBundle.message(\"dialog.edit.live.template.title\"), template, getTemplateGroups(),\n                                                       (String)myExpandByCombo.getSelectedItem(), getOptions(template), getContext(template));\n    dialog.show();\n    if (!dialog.isOK()) return;\n\n    TemplateGroup group = getTemplateGroup(template.getGroupName());\n\n    LOG.assertTrue(group != null, template.getGroupName());\n\n    dialog.apply();\n\n    DefaultTreeModel model = (DefaultTreeModel)myTree.getModel();\n\n    if (!oldGroupName.equals(template.getGroupName())) {\n      TemplateGroup oldGroup = getTemplateGroup(oldGroupName);\n      oldGroup.removeElement(template);\n\n      template.setId(null);//To make it not equal with default template with the same name\n\n      JTree tree = myTree;\n      DefaultMutableTreeNode parent = (DefaultMutableTreeNode)oldTemplateNode.getParent();\n      removeNodeFromParent(oldTemplateNode);\n      if (parent.getChildCount() == 0) removeNodeFromParent(parent);\n\n      DefaultMutableTreeNode templateNode = addTemplate(template);\n\n      TreePath newTemplatePath = new TreePath(templateNode.getPath());\n      tree.expandPath(newTemplatePath);\n\n      selected = tree.getRowForPath(newTemplatePath);\n\n      ((DefaultTreeModel)myTree.getModel()).nodeStructureChanged(myTreeRoot);\n    }\n\n    myTree.setSelectionInterval(selected, selected);\n\n    updateTemplateTextArea();\n    isModified = true;\n  }","id":39953,"modified_method":"private void edit() {\n    int selected = getSelectedIndex();\n    if (selected < 0) return;\n\n    TemplateImpl template = getTemplate(selected);\n    DefaultMutableTreeNode oldTemplateNode = getNode(selected);\n    if (template == null) return;\n\n    String oldGroupName = template.getGroupName();\n\n    EditTemplateDialog dialog = new EditTemplateDialog(this, CodeInsightBundle.message(\"dialog.edit.live.template.title\"), template, getTemplateGroups(),\n                                                       (String)myExpandByCombo.getSelectedItem(), getOptions(template), getContext(template));\n    dialog.show();\n    if (!dialog.isOK()) return;\n\n    TemplateGroup group = getTemplateGroup(template.getGroupName());\n\n    LOG.assertTrue(group != null, template.getGroupName());\n\n    dialog.apply();\n\n    if (!oldGroupName.equals(template.getGroupName())) {\n      TemplateGroup oldGroup = getTemplateGroup(oldGroupName);\n      if (oldGroup != null) {\n        oldGroup.removeElement(template);\n      }\n\n      template.setId(null);//To make it not equal with default template with the same name\n\n      JTree tree = myTree;\n      if (oldTemplateNode != null) {\n        DefaultMutableTreeNode parent = (DefaultMutableTreeNode)oldTemplateNode.getParent();\n        removeNodeFromParent(oldTemplateNode);\n        if (parent.getChildCount() == 0) removeNodeFromParent(parent);\n      }\n\n      DefaultMutableTreeNode templateNode = addTemplate(template);\n\n      if (templateNode != null) {\n        TreePath newTemplatePath = new TreePath(templateNode.getPath());\n        tree.expandPath(newTemplatePath);\n\n        selected = tree.getRowForPath(newTemplatePath);\n      }\n\n      ((DefaultTreeModel)myTree.getModel()).nodeStructureChanged(myTreeRoot);\n    }\n\n    myTree.setSelectionInterval(selected, selected);\n\n    updateTemplateTextArea();\n  }","commit_id":"e36bef2c87402ce1e4b7a869f655da810a1b6721","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void removeRow() {\n    int selected = getSelectedIndex(); // TODO\n    if (selected < 0) return;\n    TemplateKey templateKey = getTemplateKey(selected);\n    if (templateKey != null) {\n      int result = Messages.showOkCancelDialog(this, CodeInsightBundle.message(\"template.delete.confirmation.text\"),\n                                               CodeInsightBundle.message(\"template.delete.confirmation.title\"),\n                                               Messages.getQuestionIcon());\n      if (result != DialogWrapper.OK_EXIT_CODE) return;\n\n      removeTemplateAt(selected);\n      isModified = true;\n    }\n    else {\n      TemplateGroup group = getGroup(selected);\n      if (group != null) {\n        int result = Messages.showOkCancelDialog(this, CodeInsightBundle.message(\"template.delete.group.confirmation.text\"),\n                                                 CodeInsightBundle.message(\"template.delete.confirmation.title\"),\n                                                 Messages.getQuestionIcon());\n        if (result != DialogWrapper.OK_EXIT_CODE) return;\n\n        JTree tree = myTree;\n        TreePath path = tree.getPathForRow(selected);\n\n        myTemplateGroups.remove(group);\n\n        DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();\n        removeNodeFromParent(node);\n\n        isModified = true;\n      }\n\n    }\n\n  }","id":39954,"modified_method":"private void removeRow() {\n    int selected = getSelectedIndex(); // TODO\n    if (selected < 0) return;\n    TemplateKey templateKey = getTemplateKey(selected);\n    if (templateKey != null) {\n      int result = Messages.showOkCancelDialog(this, CodeInsightBundle.message(\"template.delete.confirmation.text\"),\n                                               CodeInsightBundle.message(\"template.delete.confirmation.title\"),\n                                               Messages.getQuestionIcon());\n      if (result != DialogWrapper.OK_EXIT_CODE) return;\n\n      removeTemplateAt(selected);\n    }\n    else {\n      TemplateGroup group = getGroup(selected);\n      if (group != null) {\n        int result = Messages.showOkCancelDialog(this, CodeInsightBundle.message(\"template.delete.group.confirmation.text\"),\n                                                 CodeInsightBundle.message(\"template.delete.confirmation.title\"),\n                                                 Messages.getQuestionIcon());\n        if (result != DialogWrapper.OK_EXIT_CODE) return;\n\n        JTree tree = myTree;\n        TreePath path = tree.getPathForRow(selected);\n\n        myTemplateGroups.remove(group);\n\n        DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();\n        removeNodeFromParent(node);\n      }\n\n    }\n\n  }","commit_id":"e36bef2c87402ce1e4b7a869f655da810a1b6721","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setValue(Object obj, Object aValue) {\n      obj = ((DefaultMutableTreeNode)obj).getUserObject();\n      if (obj instanceof TemplateImpl) {\n        TemplateImpl template = (TemplateImpl)obj;\n        boolean state = !((Boolean)aValue).booleanValue();\n        if (state != template.isDeactivated()) {\n          template.setDeactivated(!((Boolean)aValue).booleanValue());\n          isModified = true;\n        }\n      }\n    }","id":39955,"modified_method":"public void setValue(Object obj, Object aValue) {\n      obj = ((DefaultMutableTreeNode)obj).getUserObject();\n      if (obj instanceof TemplateImpl) {\n        TemplateImpl template = (TemplateImpl)obj;\n        boolean state = !((Boolean)aValue).booleanValue();\n        if (state != template.isDeactivated()) {\n          template.setDeactivated(!((Boolean)aValue).booleanValue());\n        }\n      }\n    }","commit_id":"e36bef2c87402ce1e4b7a869f655da810a1b6721","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void addRow() {\n    TemplateImpl template = new TemplateImpl(\"\", \"\", TemplateSettings.USER_GROUP_NAME);\n    myTemplateOptions.put(System.identityHashCode(template), template.createOptions());\n    myTemplateContext.put(System.identityHashCode(template), template.createContext());\n    EditTemplateDialog dialog = new EditTemplateDialog(this, CodeInsightBundle.message(\"dialog.add.live.template.title\"), template, getTemplateGroups(),\n                                                       (String)myExpandByCombo.getSelectedItem(), getOptions(template), getContext(template));\n    dialog.show();\n    if (!dialog.isOK()) return;\n    dialog.apply();\n\n    addTemplate(template);\n    isModified = true;\n  }","id":39956,"modified_method":"private void addRow() {\n    TemplateImpl template = new TemplateImpl(\"\", \"\", TemplateSettings.USER_GROUP_NAME);\n    myTemplateOptions.put(System.identityHashCode(template), template.createOptions());\n    myTemplateContext.put(System.identityHashCode(template), template.createContext());\n    EditTemplateDialog dialog = new EditTemplateDialog(this, CodeInsightBundle.message(\"dialog.add.live.template.title\"), template, getTemplateGroups(),\n                                                       (String)myExpandByCombo.getSelectedItem(), getOptions(template), getContext(template));\n    dialog.show();\n    if (!dialog.isOK()) return;\n    dialog.apply();\n\n    addTemplate(template);\n  }","commit_id":"e36bef2c87402ce1e4b7a869f655da810a1b6721","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isModified() {\n    TemplateSettings templateSettings = TemplateSettings.getInstance();\n    if (templateSettings.getDefaultShortcutChar() != getDefaultShortcutChar()) {\n      return true;\n    }\n    return isModified;\n  }","id":39957,"modified_method":"public boolean isModified() {\n    TemplateSettings templateSettings = TemplateSettings.getInstance();\n    if (templateSettings.getDefaultShortcutChar() != getDefaultShortcutChar()) {\n      return true;\n    }\n\n    List<TemplateGroup> originalGroups = templateSettings.getTemplateGroups();\n    List<TemplateGroup> newGroups = getTemplateGroups();\n\n    return !checkAreEqual(collectTemplates(originalGroups), collectTemplates(newGroups));\n  }","commit_id":"e36bef2c87402ce1e4b7a869f655da810a1b6721","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void apply() {\n    TemplateSettings templateSettings = TemplateSettings.getInstance();\n    List<TemplateGroup> templateGroups = getTemplateGroups();\n    for (TemplateGroup templateGroup : templateGroups) {\n      for (TemplateImpl template : templateGroup.getElements()) {\n        template.applyOptions(getOptions(template));\n        template.applyContext(getContext(template));\n      }\n    }\n    templateSettings.setTemplates(templateGroups);\n    templateSettings.setDefaultShortcutChar(getDefaultShortcutChar());\n    isModified = false;\n  }","id":39958,"modified_method":"public void apply() {\n    TemplateSettings templateSettings = TemplateSettings.getInstance();\n    List<TemplateGroup> templateGroups = getTemplateGroups();\n    for (TemplateGroup templateGroup : templateGroups) {\n      for (TemplateImpl template : templateGroup.getElements()) {\n        template.applyOptions(getOptions(template));\n        template.applyContext(getContext(template));\n      }\n    }\n    templateSettings.setTemplates(templateGroups);\n    templateSettings.setDefaultShortcutChar(getDefaultShortcutChar());\n  }","commit_id":"e36bef2c87402ce1e4b7a869f655da810a1b6721","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void moveNode(final Direction direction) {\n    CheckedTreeNode node = getSelectedNode();\n    if (node != null) {\n      if (!isMovingAvailable(node, direction)) {\n        moveNode(node, direction);\n        if (node.getUserObject() instanceof Tool) {\n          ToolsGroup group = (ToolsGroup)(((CheckedTreeNode)node.getParent()).getUserObject());\n          Tool tool = (Tool)node.getUserObject();\n          moveElementInsideGroup(tool, group);\n        }\n        TreePath path = new TreePath(node.getPath());\n        myTree.getSelectionModel().setSelectionPath(path);\n        myTree.expandPath(path);\n        myTree.requestFocus();\n      }\n    }\n  }","id":39959,"modified_method":"private void moveNode(final Direction direction) {\n    CheckedTreeNode node = getSelectedNode();\n    if (node != null) {\n      if (isMovingAvailable(node, direction)) {\n        moveNode(node, direction);\n        if (node.getUserObject() instanceof Tool) {\n          ToolsGroup group = (ToolsGroup)(((CheckedTreeNode)node.getParent()).getUserObject());\n          Tool tool = (Tool)node.getUserObject();\n          moveElementInsideGroup(tool, group, direction);\n        }\n        TreePath path = new TreePath(node.getPath());\n        myTree.getSelectionModel().setSelectionPath(path);\n        myTree.expandPath(path);\n        myTree.requestFocus();\n      }\n    }\n  }","commit_id":"c954352945eff081e0a2f7634f49194fe99b62e9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private CheckedTreeNode getSelectedToolNode() {\n    TreePath selectionPath = myTree.getSelectionPath();\n    if (selectionPath != null) {\n      CheckedTreeNode node = (CheckedTreeNode)selectionPath.getLastPathComponent();\n      if (node.getUserObject() instanceof Tool) return node;\n    }\n    return null;\n  }","id":39960,"modified_method":"private CheckedTreeNode getSelectedToolNode() {\n    TreePath selectionPath = myTree.getSelectionPath();\n    if (selectionPath != null) {\n      return (CheckedTreeNode)selectionPath.getLastPathComponent();\n    }\n    return null;\n  }","commit_id":"c954352945eff081e0a2f7634f49194fe99b62e9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void editSelected() {\n    CheckedTreeNode node = getSelectedToolNode();\n    if (node != null) {\n      Tool selected = (Tool)node.getUserObject();\n      if (selected != null) {\n        String oldGroupName = selected.getGroup();\n        ToolEditorDialog dlg = new ToolEditorDialog(this);\n        dlg.setData(selected, getGroups());\n        dlg.show();\n        if (dlg.isOK()) {\n          selected.copyFrom(dlg.getData());\n          String newGroupName = selected.getGroup();\n          if (!oldGroupName.equals(newGroupName)) {\n            CheckedTreeNode oldGroupNode = (CheckedTreeNode)node.getParent();\n            removeNodeFromParent(node);\n            ((ToolsGroup)oldGroupNode.getUserObject()).removeElement(selected);\n            if (oldGroupNode.getChildCount() == 0) {\n              removeNodeFromParent(oldGroupNode);\n            }\n\n            insertNewTool(selected, true);\n          }\n          else {\n            (getModel()).nodeChanged(node);\n          }\n          myIsModified = true;\n          update();\n        }\n      }\n    }\n  }","id":39961,"modified_method":"private void editSelected() {\n    CheckedTreeNode node = getSelectedToolNode();\n    if (node != null && node.getUserObject() instanceof Tool) {\n      Tool selected = (Tool)node.getUserObject();\n      if (selected != null) {\n        String oldGroupName = selected.getGroup();\n        ToolEditorDialog dlg = new ToolEditorDialog(this);\n        dlg.setData(selected, getGroups());\n        dlg.show();\n        if (dlg.isOK()) {\n          selected.copyFrom(dlg.getData());\n          String newGroupName = selected.getGroup();\n          if (!oldGroupName.equals(newGroupName)) {\n            CheckedTreeNode oldGroupNode = (CheckedTreeNode)node.getParent();\n            removeNodeFromParent(node);\n            ((ToolsGroup)oldGroupNode.getUserObject()).removeElement(selected);\n            if (oldGroupNode.getChildCount() == 0) {\n              removeNodeFromParent(oldGroupNode);\n            }\n\n            insertNewTool(selected, true);\n          }\n          else {\n            (getModel()).nodeChanged(node);\n          }\n          myIsModified = true;\n          update();\n        }\n      }\n    }\n  }","commit_id":"c954352945eff081e0a2f7634f49194fe99b62e9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private Tool getSelectedTool() {\n    CheckedTreeNode node = getSelectedToolNode();\n    return node == null ? null : (Tool)node.getUserObject();\n  }","id":39962,"modified_method":"@Nullable\n  private Tool getSelectedTool() {\n    CheckedTreeNode node = getSelectedToolNode();\n    if (node == null) return null;\n    return node.getUserObject() instanceof Tool ? (Tool)node.getUserObject() : null;\n  }","commit_id":"c954352945eff081e0a2f7634f49194fe99b62e9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void moveElementInsideGroup(final Tool tool, final ToolsGroup group) {\n    group.moveElementUp(tool);\n  }","id":39963,"modified_method":"private void moveElementInsideGroup(final Tool tool, final ToolsGroup group, Direction dir) {\n    if (dir == Direction.UP) {\n      group.moveElementUp(tool);\n    }\n    else {\n      group.moveElementDown(tool);\n    }\n\n  }","commit_id":"c954352945eff081e0a2f7634f49194fe99b62e9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void update() {\n    //TODO update buttons\n\n    (getModel()).nodeStructureChanged(null);\n\n    myTree.repaint();\n  }","id":39964,"modified_method":"private void update() {\n    CheckedTreeNode node = getSelectedToolNode();\n    Tool selectedTool = getSelectedTool();\n    ToolsGroup selectedGroup = getSelectedToolGroup();\n\n    if (selectedTool != null) {\n      myAddButton.setEnabled(true);\n      myCopyButton.setEnabled(true);\n      myEditButton.setEnabled(true);\n      myMoveDownButton.setEnabled(isMovingAvailable(node, Direction.DOWN));\n      myMoveUpButton.setEnabled(isMovingAvailable(node, Direction.UP));\n      myRemoveButton.setEnabled(true);\n    }\n    else if (selectedGroup != null) {\n      myAddButton.setEnabled(true);\n      myCopyButton.setEnabled(false);\n      myEditButton.setEnabled(false);\n      myMoveDownButton.setEnabled(isMovingAvailable(node, Direction.DOWN));\n      myMoveUpButton.setEnabled(isMovingAvailable(node, Direction.UP));\n      myRemoveButton.setEnabled(true);\n\n    }\n    else {\n      myAddButton.setEnabled(true);\n      myCopyButton.setEnabled(false);\n      myEditButton.setEnabled(false);\n      myMoveDownButton.setEnabled(false);\n      myMoveUpButton.setEnabled(false);\n      myRemoveButton.setEnabled(false);\n    }\n\n    (getModel()).nodeStructureChanged(null);\n\n    myTree.repaint();\n  }","commit_id":"c954352945eff081e0a2f7634f49194fe99b62e9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void removeSelected() {\n    CheckedTreeNode node = getSelectedToolNode();\n    if (node != null) {\n      int result = Messages.showYesNoDialog(\n        this,\n        ToolsBundle.message(\"tools.delete.confirmation\"),\n        CommonBundle.getWarningTitle(),\n        Messages.getWarningIcon()\n      );\n      if (result != 0) {\n        return;\n      }\n      myIsModified = true;\n      Tool tool = (Tool)node.getUserObject();\n      CheckedTreeNode parentNode = (CheckedTreeNode)node.getParent();\n      ((ToolsGroup)parentNode.getUserObject()).removeElement(tool);\n      removeNodeFromParent(node);\n      if (parentNode.getChildCount() == 0) {\n        removeNodeFromParent(parentNode);\n      }\n      update();\n      myTree.requestFocus();\n    }\n  }","id":39965,"modified_method":"private void removeSelected() {\n    CheckedTreeNode node = getSelectedToolNode();\n    if (node != null) {\n      int result = Messages.showYesNoDialog(\n        this,\n        ToolsBundle.message(\"tools.delete.confirmation\"),\n        CommonBundle.getWarningTitle(),\n        Messages.getWarningIcon()\n      );\n      if (result != 0) {\n        return;\n      }\n      myIsModified = true;\n      if (node.getUserObject() instanceof Tool) {\n        Tool tool = (Tool)node.getUserObject();\n        CheckedTreeNode parentNode = (CheckedTreeNode)node.getParent();\n        ((ToolsGroup)parentNode.getUserObject()).removeElement(tool);\n        removeNodeFromParent(node);\n        if (parentNode.getChildCount() == 0) {\n          removeNodeFromParent(parentNode);\n        }\n      }\n      else if (node.getUserObject() instanceof ToolsGroup) {\n        removeNodeFromParent(node);\n      }\n      update();\n      myTree.requestFocus();\n    }\n  }","commit_id":"c954352945eff081e0a2f7634f49194fe99b62e9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void valueChanged(ListSelectionEvent event) {\n      super.valueChanged(event);\n\n      boolean enableEditButton = false;\n      boolean enableRemoveButton = false;\n      boolean enableCopyButton = false;\n      boolean enableExportButton = false;\n\n      int selected = getSelectedRow();\n      if (selected >= 0 && selected < myTreeTable.getRowCount()) {\n        TemplateSettings templateSettings = TemplateSettings.getInstance();\n        TemplateImpl template = getTemplate(selected);\n        if (template != null) {\n          templateSettings.setLastSelectedTemplateKey(template.getKey());\n        } else {\n          templateSettings.setLastSelectedTemplateKey(null);\n        }\n        DefaultMutableTreeNode node = (DefaultMutableTreeNode)myTreeTable.getTree().getPathForRow(selected).getLastPathComponent();\n        enableExportButton = false;\n        enableEditButton = false;\n        enableCopyButton = false;\n        if (node.getUserObject() instanceof TemplateImpl) {\n          enableCopyButton = true;\n          TemplateGroup group = getSchemesManager().findSchemeByName(((TemplateImpl)node.getUserObject()).getGroupName());\n          if (group != null && !getSchemesManager().isShared(group)) {\n            enableEditButton = true;\n            enableRemoveButton = true;\n          }\n        }\n        if (node.getUserObject() instanceof TemplateGroup) {\n          enableRemoveButton = true;\n          TemplateGroup group = (TemplateGroup)node.getUserObject();\n          enableExportButton = !getSchemesManager().isShared(group);\n\n        }\n\n      }\n      updateTemplateTextArea();\n      myEditor.getComponent().setEnabled(enableEditButton);\n      myExpandByCombo.setEnabled(enableEditButton);\n      \n      if (myCopyButton != null) {\n        myCopyButton.setEnabled(enableCopyButton);\n        myEditButton.setEnabled(enableEditButton);\n        myRemoveButton.setEnabled(enableRemoveButton);\n      }\n\n      if (myExportButton != null) {\n        myExportButton.setEnabled(enableExportButton);\n        myImportButton.setEnabled(true);\n      }\n    }","id":39966,"modified_method":"public void valueChanged(ListSelectionEvent event) {\n      super.valueChanged(event);\n\n      boolean enableEditButton = false;\n      boolean enableRemoveButton = false;\n      boolean enableCopyButton = false;\n      boolean enableExportButton = false;\n\n      int selected = getSelectedRow();\n      if (selected >= 0 && selected < myTreeTable.getRowCount()) {\n        TemplateSettings templateSettings = TemplateSettings.getInstance();\n        TemplateImpl template = getTemplate(selected);\n        if (template != null) {\n          templateSettings.setLastSelectedTemplateKey(template.getKey());\n        } else {\n          templateSettings.setLastSelectedTemplateKey(null);\n        }\n        DefaultMutableTreeNode node = (DefaultMutableTreeNode)myTreeTable.getTree().getPathForRow(selected).getLastPathComponent();\n        enableExportButton = false;\n        enableEditButton = false;\n        enableCopyButton = false;\n        if (node.getUserObject() instanceof TemplateImpl) {\n          enableCopyButton = true;\n          TemplateGroup group = getTemplateGroup(template.getGroupName());\n          if (group != null && !getSchemesManager().isShared(group)) {\n            enableEditButton = true;\n            enableRemoveButton = true;\n          }\n        }\n        if (node.getUserObject() instanceof TemplateGroup) {\n          enableRemoveButton = true;\n          TemplateGroup group = (TemplateGroup)node.getUserObject();\n          enableExportButton = !getSchemesManager().isShared(group);\n\n        }\n\n      }\n      updateTemplateTextArea();\n      myEditor.getComponent().setEnabled(enableEditButton);\n      myExpandByCombo.setEnabled(enableEditButton);\n      \n      if (myCopyButton != null) {\n        myCopyButton.setEnabled(enableCopyButton);\n        myEditButton.setEnabled(enableEditButton);\n        myRemoveButton.setEnabled(enableRemoveButton);\n      }\n\n      if (myExportButton != null) {\n        myExportButton.setEnabled(enableExportButton);\n        myImportButton.setEnabled(true);\n      }\n    }","commit_id":"722d0ea0e722891dbdfb7c497b69702f64206a04","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void removeTemplateAt(int row) {\n    JTree tree = myTreeTable.getTree();\n    TreePath path = tree.getPathForRow(row);\n    DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();\n    LOG.assertTrue(node.getUserObject() instanceof TemplateImpl);\n\n    TemplateImpl template = (TemplateImpl)node.getUserObject();\n    getTemplateGroup(template.getGroupName()).removeTemplate(template);\n\n    DefaultMutableTreeNode parent = (DefaultMutableTreeNode)node.getParent();\n    TreePath treePathToSelect = (parent.getChildAfter(node) != null || parent.getChildCount() == 1 ?\n                            tree.getPathForRow(row + 1) :\n                            tree.getPathForRow(row - 1));\n    DefaultMutableTreeNode toSelect = treePathToSelect != null ? (DefaultMutableTreeNode)treePathToSelect.getLastPathComponent() : null;\n\n    removeNodeFromParent(node);\n    if (parent.getChildCount() == 0) removeNodeFromParent(parent);\n    if (toSelect != null) {\n      setSelectedNode(toSelect);\n    }\n  }","id":39967,"modified_method":"private void removeTemplateAt(int row) {\n    JTree tree = myTreeTable.getTree();\n    TreePath path = tree.getPathForRow(row);\n    DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();\n    LOG.assertTrue(node.getUserObject() instanceof TemplateImpl);\n\n    TemplateImpl template = (TemplateImpl)node.getUserObject();\n    getTemplateGroup(template.getGroupName()).removeTemplate(template);\n\n    DefaultMutableTreeNode parent = (DefaultMutableTreeNode)node.getParent();\n    TreePath treePathToSelect = (parent.getChildAfter(node) != null || parent.getChildCount() == 1 ?\n                            tree.getPathForRow(row + 1) :\n                            tree.getPathForRow(row - 1));\n    DefaultMutableTreeNode toSelect = treePathToSelect != null ? (DefaultMutableTreeNode)treePathToSelect.getLastPathComponent() : null;\n\n    removeNodeFromParent(node);\n    if (parent.getChildCount() == 0) {\n      myTemplateGroups.remove(parent.getUserObject());\n      removeNodeFromParent(parent);\n    }\n    if (toSelect != null) {\n      setSelectedNode(toSelect);\n    }\n  }","commit_id":"722d0ea0e722891dbdfb7c497b69702f64206a04","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void removeRow() {\n    int selected = myTreeTable.getSelectedRow();\n    if (selected < 0) return;\n    TemplateKey templateKey = getTemplateKey(selected);\n    if (templateKey != null) {\n      int result = Messages.showOkCancelDialog(this, CodeInsightBundle.message(\"template.delete.confirmation.text\"),\n                                               CodeInsightBundle.message(\"template.delete.confirmation.title\"),\n                                               Messages.getQuestionIcon());\n      if (result != DialogWrapper.OK_EXIT_CODE) return;\n\n      removeTemplateAt(selected);\n      isModified = true;\n    }\n    TemplateGroup group = getGroup(selected);\n    if (group != null) {\n      int result = Messages.showOkCancelDialog(this, CodeInsightBundle.message(\"template.delete.group.confirmation.text\"),\n                                               CodeInsightBundle.message(\"template.delete.confirmation.title\"),\n                                               Messages.getQuestionIcon());\n      if (result != DialogWrapper.OK_EXIT_CODE) return;\n\n      JTree tree = myTreeTable.getTree();\n      TreePath path = tree.getPathForRow(selected);\n\n      myTemplateGroups.remove(group);\n\n      DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();\n      removeNodeFromParent(node);\n\n      isModified = true;\n    }\n\n  }","id":39968,"modified_method":"private void removeRow() {\n    int selected = myTreeTable.getSelectedRow();\n    if (selected < 0) return;\n    TemplateKey templateKey = getTemplateKey(selected);\n    if (templateKey != null) {\n      int result = Messages.showOkCancelDialog(this, CodeInsightBundle.message(\"template.delete.confirmation.text\"),\n                                               CodeInsightBundle.message(\"template.delete.confirmation.title\"),\n                                               Messages.getQuestionIcon());\n      if (result != DialogWrapper.OK_EXIT_CODE) return;\n\n      removeTemplateAt(selected);\n      isModified = true;\n    }\n    else {\n      TemplateGroup group = getGroup(selected);\n      if (group != null) {\n        int result = Messages.showOkCancelDialog(this, CodeInsightBundle.message(\"template.delete.group.confirmation.text\"),\n                                                 CodeInsightBundle.message(\"template.delete.confirmation.title\"),\n                                                 Messages.getQuestionIcon());\n        if (result != DialogWrapper.OK_EXIT_CODE) return;\n\n        JTree tree = myTreeTable.getTree();\n        TreePath path = tree.getPathForRow(selected);\n\n        myTemplateGroups.remove(group);\n\n        DefaultMutableTreeNode node = (DefaultMutableTreeNode)path.getLastPathComponent();\n        removeNodeFromParent(node);\n\n        isModified = true;\n      }\n\n    }\n\n  }","commit_id":"722d0ea0e722891dbdfb7c497b69702f64206a04","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void dispose() {\n        console.dispose();\n    }","id":39969,"modified_method":"public void dispose() {\n        console.dispose();\n        console = null;\n        testNGResults.dispose();\n        testNGResults = null;\n        consoleProperties.dispose();\n        consoleProperties = null;\n    }","commit_id":"2f5631bfb9de0a7b6be6f30531759a3b5db6dc7b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public TestNGResults(final Project project, final TestNGConsoleView console) {\n        this.project = project;\n        model = new TestNGResultsTableModel();\n        this.consoleProperties = console.getConsoleProperties();\n        resultsTable = new TableView(model);\n        rootNode = new TreeRootNode();\n        final TestTreeStructure structure = new TestTreeStructure(project, rootNode);\n        tree.attachToModel(project, structure.getRootElement(), console.getConsoleProperties());\n        treeBuilder = new TestTreeBuilder(tree, structure);\n        toolbarPanel.setLayout(new BorderLayout());\n        toolbarPanel.add(new ToolbarPanel(console.getConsoleProperties(), this));\n        animator = new Animator(treeBuilder);\n        tree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener()\n        {\n            public void valueChanged(TreeSelectionEvent e) {\n                TreePath path = e.getPath();\n                if (path == null) return;\n                TestProxy proxy = TestTreeView.getObject(path);\n                if (proxy == null) return;\n                if (ScrollToTestSourceAction.isScrollEnabled(TestNGResults.this)) {\n                    OpenSourceUtil.openSourcesFrom(tree, false);\n                }\n                if (proxy == structure.getRootElement()) {\n                    console.reset();\n                } else {\n                    console.setView(proxy.getOutput());\n                }\n            }\n        });\n        progress.setColor(ColorProgressBar.GREEN);\n        GuiUtils.replaceJSplitPaneWithIDEASplitter(splitPane);\n        splitPane.setDividerLocation(0.33);\n    }","id":39970,"modified_method":"public TestNGResults(final Project project, final TestNGConsoleView console) {\n        this.project = project;\n        model = new TestNGResultsTableModel();\n        this.consoleProperties = console.getConsoleProperties();\n        resultsTable = new TableView(model);\n        rootNode = new TreeRootNode();\n        final TestTreeStructure structure = new TestTreeStructure(project, rootNode);\n        tree.attachToModel(project, structure.getRootElement(), console.getConsoleProperties());\n        treeBuilder = new TestTreeBuilder(tree, structure);\n        toolbarPanel.setLayout(new BorderLayout());\n        toolbar = new ToolbarPanel(console.getConsoleProperties(), this);\n        toolbarPanel.add(toolbar);\n        animator = new Animator(treeBuilder);\n        openSourceListener = new OpenSourceSelectionListener(structure, console);\n        tree.getSelectionModel().addTreeSelectionListener(openSourceListener);\n        progress.setColor(ColorProgressBar.GREEN);\n        splitPane.setDividerLocation(0.33);\n        GuiUtils.replaceJSplitPaneWithIDEASplitter(splitPane);\n        splitPane.setDividerLocation(0.33);\n    }","commit_id":"2f5631bfb9de0a7b6be6f30531759a3b5db6dc7b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void dispose() {\n        treeBuilder.dispose();\n    }","id":39971,"modified_method":"public void dispose() {\n        treeBuilder.dispose();\n        animator.dispose();\n        toolbar.dispose();\n        openSourceListener.structure = null;\n        openSourceListener.console = null;\n        tree.getSelectionModel().removeTreeSelectionListener(openSourceListener);\n        tree.dispose();\n    }","commit_id":"2f5631bfb9de0a7b6be6f30531759a3b5db6dc7b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void initTreeListeners() {\n    myTree.getSelectionModel().addTreeSelectionListener(new TreeSelectionListener() {\n      @Override\n      public void valueChanged(TreeSelectionEvent e) {\n        syncRightPanel();\n        if (isAutoScrollMode()) {\n          OpenSourceUtil.openSourcesFrom(DataManager.getInstance().getDataContext(InspectionResultsView.this), false);\n        }\n      }\n    });\n\n    EditSourceOnDoubleClickHandler.install(myTree);\n\n    myTree.addKeyListener(new KeyAdapter() {\n      @Override\n      public void keyPressed(KeyEvent e) {\n        if (e.getKeyCode() == KeyEvent.VK_ENTER) {\n          OpenSourceUtil.openSourcesFrom(DataManager.getInstance().getDataContext(InspectionResultsView.this), false);\n        }\n      }\n    });\n\n    myTree.addMouseListener(new PopupHandler() {\n      @Override\n      public void invokePopup(Component comp, int x, int y) {\n        popupInvoked(comp, x, y);\n      }\n    });\n\n    SmartExpander.installOn(myTree);\n  }","id":39972,"modified_method":"private void initTreeListeners() {\n    myTree.getSelectionModel().addTreeSelectionListener(e -> {\n      syncRightPanel();\n      if (isAutoScrollMode()) {\n        OpenSourceUtil.openSourcesFrom(DataManager.getInstance().getDataContext(InspectionResultsView.this), false);\n      }\n    });\n\n    EditSourceOnDoubleClickHandler.install(myTree);\n\n    myTree.addKeyListener(new KeyAdapter() {\n      @Override\n      public void keyPressed(KeyEvent e) {\n        if (e.getKeyCode() == KeyEvent.VK_ENTER) {\n          OpenSourceUtil.openSourcesFrom(DataManager.getInstance().getDataContext(InspectionResultsView.this), false);\n        }\n      }\n    });\n\n    myTree.addMouseListener(new PopupHandler() {\n      @Override\n      public void invokePopup(Component comp, int x, int y) {\n        popupInvoked(comp, x, y);\n      }\n    });\n\n    SmartExpander.installOn(myTree);\n  }","commit_id":"34a4621fd13e86883936c52adef9d6177be9c3ae","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public InspectionResultsView(@NotNull final Project project,\n                               final InspectionProfile inspectionProfile,\n                               @NotNull AnalysisScope scope,\n                               @NotNull GlobalInspectionContextImpl globalInspectionContext,\n                               @NotNull InspectionRVContentProvider provider) {\n    setLayout(new BorderLayout());\n\n    myProject = project;\n    myInspectionProfile = inspectionProfile;\n    myScope = scope;\n    myGlobalInspectionContext = globalInspectionContext;\n    myProvider = provider;\n\n    myTree = new InspectionTree(project, globalInspectionContext);\n    initTreeListeners();\n\n    myOccurenceNavigator = initOccurenceNavigator();\n\n    mySplitter = new OnePixelSplitter(false, AnalysisUIOptions.getInstance(myProject).SPLITTER_PROPORTION);\n\n    mySplitter.setFirstComponent(ScrollPaneFactory.createScrollPane(myTree, SideBorder.LEFT | SideBorder.RIGHT));\n\n    mySplitter.addPropertyChangeListener(new PropertyChangeListener() {\n      @Override\n      public void propertyChange(PropertyChangeEvent evt) {\n        if (Splitter.PROP_PROPORTION.equals(evt.getPropertyName())) {\n          myGlobalInspectionContext.setSplitterProportion(((Float)evt.getNewValue()).floatValue());\n        }\n      }\n    });\n    add(mySplitter, BorderLayout.CENTER);\n\n    createActionsToolbar();\n    TreeUtil.selectFirstNode(myTree);\n  }","id":39973,"modified_method":"public InspectionResultsView(@NotNull final Project project,\n                               final InspectionProfile inspectionProfile,\n                               @NotNull AnalysisScope scope,\n                               @NotNull GlobalInspectionContextImpl globalInspectionContext,\n                               @NotNull InspectionRVContentProvider provider) {\n    setLayout(new BorderLayout());\n\n    myProject = project;\n    myInspectionProfile = inspectionProfile;\n    myScope = scope;\n    myGlobalInspectionContext = globalInspectionContext;\n    myProvider = provider;\n\n    myTree = new InspectionTree(project, globalInspectionContext);\n    initTreeListeners();\n\n    myOccurenceNavigator = initOccurenceNavigator();\n\n    mySplitter = new OnePixelSplitter(false, AnalysisUIOptions.getInstance(myProject).SPLITTER_PROPORTION);\n\n    mySplitter.setFirstComponent(ScrollPaneFactory.createScrollPane(myTree, SideBorder.LEFT | SideBorder.RIGHT));\n\n    mySplitter.addPropertyChangeListener(evt -> {\n      if (Splitter.PROP_PROPORTION.equals(evt.getPropertyName())) {\n        myGlobalInspectionContext.setSplitterProportion(((Float)evt.getNewValue()).floatValue());\n      }\n    });\n    add(mySplitter, BorderLayout.CENTER);\n\n    createActionsToolbar();\n    TreeUtil.selectFirstNode(myTree);\n  }","commit_id":"34a4621fd13e86883936c52adef9d6177be9c3ae","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void actionPerformed(final AnActionEvent e) {\n    final InspectionResultsView view = getInvoker(e);\n    final InspectionTree tree = view.getTree();\n    if (isProblemDescriptorsAcceptable()) {\n      final CommonProblemDescriptor[] descriptors = tree.getSelectedDescriptors();\n      if (descriptors.length > 0) {\n        doApplyFix(view.getProject(), descriptors, tree.getContext());\n        return;\n      }\n    }\n\n    doApplyFix(getSelectedElements(e), view);\n  }","id":39974,"modified_method":"@Override\n  public void actionPerformed(final AnActionEvent e) {\n    final InspectionResultsView view = getInvoker(e);\n    final InspectionTree tree = view.getTree();\n    final CommonProblemDescriptor[] descriptors;\n    if (isProblemDescriptorsAcceptable() && (descriptors = tree.getSelectedDescriptors()).length > 0) {\n      doApplyFix(view.getProject(), descriptors, tree.getContext());\n    } else {\n      doApplyFix(getSelectedElements(e), view);\n    }\n    view.updateRightPanel();\n  }","commit_id":"34a4621fd13e86883936c52adef9d6177be9c3ae","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setChildren(@NotNull DefaultMutableTreeNode parentNode,\n                          @NotNull Collection<? extends DefaultMutableTreeNode> childrenNodes) {\n    parentNode.removeAllChildren();\n    for (DefaultMutableTreeNode child : childrenNodes) {\n      parentNode.add(child);\n    }\n    if (!myTree.isEditing()) {\n      refreshNode(parentNode);\n    }\n    else {\n      myShouldRepaint = true;\n    }\n  }","id":39975,"modified_method":"public void setChildren(@NotNull DefaultMutableTreeNode parentNode,\n                          @NotNull Collection<? extends DefaultMutableTreeNode> childrenNodes) {\n    parentNode.removeAllChildren();\n    for (DefaultMutableTreeNode child : childrenNodes) {\n      parentNode.add(child);\n    }\n    if (!myTree.isEditing()) {\n      refreshNode(parentNode);\n      TreePath path = TreeUtil.getPathFromRoot(parentNode);\n      if (myTree.getSelectionModel().isPathSelected(path)) {\n        updateChangesView();\n      }\n    }\n    else {\n      myShouldRepaint = true;\n    }\n  }","commit_id":"ebfb87038006c737ac66e850b637e4b5f5b4f457","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public PushLog(Project project, final CheckedTreeNode root) {\n    DefaultTreeModel treeModel = new DefaultTreeModel(root);\n    treeModel.nodeStructureChanged(root);\n    myTreeCellRenderer = new MyTreeCellRenderer();\n    myTree = new CheckboxTree(myTreeCellRenderer, root) {\n\n      public boolean isPathEditable(TreePath path) {\n        return isEditable() && path.getLastPathComponent() instanceof DefaultMutableTreeNode;\n      }\n\n      @Override\n      protected void onNodeStateChanged(CheckedTreeNode node) {\n        if (node instanceof EditableTreeNode) {\n          ((EditableTreeNode)node).fireOnSelectionChange(node.isChecked());\n        }\n      }\n\n      @Override\n      public String getToolTipText(MouseEvent event) {\n        final TreePath path = myTree.getPathForLocation(event.getX(), event.getY());\n        if (path == null) {\n          return \"\";\n        }\n        Object node = path.getLastPathComponent();\n        if (node == null || (!(node instanceof DefaultMutableTreeNode))) {\n          return \"\";\n        }\n        if (node instanceof TooltipNode) {\n          return ((TooltipNode)node).getTooltip();\n        }\n        return \"\";\n      }\n\n      @Override\n      public boolean stopEditing() {\n        DefaultMutableTreeNode node = (DefaultMutableTreeNode)myTree.getLastSelectedPathComponent();\n        if (node instanceof EditableTreeNode) {\n          JComponent editedComponent = (JComponent)node.getUserObject();\n          InputVerifier verifier = editedComponent.getInputVerifier();\n          if (verifier != null && !verifier.verify(editedComponent)) return false;\n        }\n        boolean result = super.stopEditing();\n        if (myShouldRepaint) {\n          refreshNode(root);\n        }\n        return result;\n      }\n\n      @Override\n      public void cancelEditing() {\n        super.cancelEditing();\n        if (myShouldRepaint) {\n          refreshNode(root);\n        }\n      }\n    };\n    myTree.setEditable(true);\n    MyTreeCellEditor treeCellEditor = new MyTreeCellEditor();\n    myTree.setCellEditor(treeCellEditor);\n    treeCellEditor.addCellEditorListener(new CellEditorListener() {\n      @Override\n      public void editingStopped(ChangeEvent e) {\n        DefaultMutableTreeNode node = (DefaultMutableTreeNode)myTree.getLastSelectedPathComponent();\n        if (node != null && node instanceof EditableTreeNode) {\n          ((EditableTreeNode)node).fireOnChange();\n        }\n      }\n\n      @Override\n      public void editingCanceled(ChangeEvent e) {\n        DefaultMutableTreeNode node = (DefaultMutableTreeNode)myTree.getLastSelectedPathComponent();\n        if (node != null && node instanceof EditableTreeNode) {\n          ((EditableTreeNode)node).fireOnCancel();\n        }\n      }\n    });\n    myTree.setRootVisible(false);\n    TreeUtil.collapseAll(myTree, 1);\n    final VcsBranchEditorListener linkMouseListener = new VcsBranchEditorListener(myTreeCellRenderer);\n    linkMouseListener.installOn(myTree);\n\n    myTree.getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION);\n    myTree.addTreeSelectionListener(new TreeSelectionListener() {\n      @Override\n      public void valueChanged(TreeSelectionEvent e) {\n        TreePath[] nodes = myTree.getSelectionPaths();\n        if (nodes != null) {\n          ArrayList<Change> changes = new ArrayList<Change>();\n          for (TreePath path : nodes) {\n            if (path.getLastPathComponent() instanceof VcsFullCommitDetailsNode) {\n              VcsFullCommitDetailsNode commitDetailsNode = (VcsFullCommitDetailsNode)path.getLastPathComponent();\n              changes.addAll(commitDetailsNode.getUserObject().getChanges());\n            }\n            else if (path.getLastPathComponent() instanceof RepositoryNode) {\n              changes.addAll(collectAllChanges((RepositoryNode)path.getLastPathComponent()));\n            }\n          }\n          myChangesBrowser.getViewer().setEmptyText(\"No differences\");\n          myChangesBrowser.setChangesToDisplay(CommittedChangesTreeBrowser.zipChanges(changes));\n          return;\n        }\n        setDefaultEmptyText();\n        myChangesBrowser.setChangesToDisplay(Collections.<Change>emptyList());\n      }\n    });\n    myTree.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0), START_EDITING);\n    //override default tree behaviour.\n    myTree.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), \"\");\n\n    myTree.setRowHeight(0);\n    ToolTipManager.sharedInstance().registerComponent(myTree);\n\n    myChangesBrowser =\n      new ChangesBrowser(project, null, Collections.<Change>emptyList(), null, false, true, null, ChangesBrowser.MyUseCase.LOCAL_CHANGES,\n                         null);\n    myChangesBrowser.getDiffAction().registerCustomShortcutSet(CommonShortcuts.getDiff(), myTree);\n    setDefaultEmptyText();\n\n    Splitter splitter = new Splitter(false, 0.7f);\n    splitter.setFirstComponent(ScrollPaneFactory.createScrollPane(myTree));\n    splitter.setSecondComponent(myChangesBrowser);\n\n    setLayout(new BorderLayout());\n    add(splitter);\n  }","id":39976,"modified_method":"public PushLog(Project project, final CheckedTreeNode root) {\n    DefaultTreeModel treeModel = new DefaultTreeModel(root);\n    treeModel.nodeStructureChanged(root);\n    myTreeCellRenderer = new MyTreeCellRenderer();\n    myTree = new CheckboxTree(myTreeCellRenderer, root) {\n\n      public boolean isPathEditable(TreePath path) {\n        return isEditable() && path.getLastPathComponent() instanceof DefaultMutableTreeNode;\n      }\n\n      @Override\n      protected void onNodeStateChanged(CheckedTreeNode node) {\n        if (node instanceof EditableTreeNode) {\n          ((EditableTreeNode)node).fireOnSelectionChange(node.isChecked());\n        }\n      }\n\n      @Override\n      public String getToolTipText(MouseEvent event) {\n        final TreePath path = myTree.getPathForLocation(event.getX(), event.getY());\n        if (path == null) {\n          return \"\";\n        }\n        Object node = path.getLastPathComponent();\n        if (node == null || (!(node instanceof DefaultMutableTreeNode))) {\n          return \"\";\n        }\n        if (node instanceof TooltipNode) {\n          return ((TooltipNode)node).getTooltip();\n        }\n        return \"\";\n      }\n\n      @Override\n      public boolean stopEditing() {\n        DefaultMutableTreeNode node = (DefaultMutableTreeNode)myTree.getLastSelectedPathComponent();\n        if (node instanceof EditableTreeNode) {\n          JComponent editedComponent = (JComponent)node.getUserObject();\n          InputVerifier verifier = editedComponent.getInputVerifier();\n          if (verifier != null && !verifier.verify(editedComponent)) return false;\n        }\n        boolean result = super.stopEditing();\n        if (myShouldRepaint) {\n          refreshNode(root);\n        }\n        return result;\n      }\n\n      @Override\n      public void cancelEditing() {\n        super.cancelEditing();\n        if (myShouldRepaint) {\n          refreshNode(root);\n        }\n      }\n    };\n    myTree.setEditable(true);\n    MyTreeCellEditor treeCellEditor = new MyTreeCellEditor();\n    myTree.setCellEditor(treeCellEditor);\n    treeCellEditor.addCellEditorListener(new CellEditorListener() {\n      @Override\n      public void editingStopped(ChangeEvent e) {\n        DefaultMutableTreeNode node = (DefaultMutableTreeNode)myTree.getLastSelectedPathComponent();\n        if (node != null && node instanceof EditableTreeNode) {\n          ((EditableTreeNode)node).fireOnChange();\n        }\n      }\n\n      @Override\n      public void editingCanceled(ChangeEvent e) {\n        DefaultMutableTreeNode node = (DefaultMutableTreeNode)myTree.getLastSelectedPathComponent();\n        if (node != null && node instanceof EditableTreeNode) {\n          ((EditableTreeNode)node).fireOnCancel();\n        }\n      }\n    });\n    myTree.setRootVisible(false);\n    TreeUtil.collapseAll(myTree, 1);\n    final VcsBranchEditorListener linkMouseListener = new VcsBranchEditorListener(myTreeCellRenderer);\n    linkMouseListener.installOn(myTree);\n\n    myTree.getSelectionModel().setSelectionMode(TreeSelectionModel.DISCONTIGUOUS_TREE_SELECTION);\n    myTree.addTreeSelectionListener(new TreeSelectionListener() {\n      @Override\n      public void valueChanged(TreeSelectionEvent e) {\n        updateChangesView();\n      }\n    });\n    myTree.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0), START_EDITING);\n    //override default tree behaviour.\n    myTree.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), \"\");\n\n    myTree.setRowHeight(0);\n    ToolTipManager.sharedInstance().registerComponent(myTree);\n\n    myChangesBrowser =\n      new ChangesBrowser(project, null, Collections.<Change>emptyList(), null, false, true, null, ChangesBrowser.MyUseCase.LOCAL_CHANGES,\n                         null);\n    myChangesBrowser.getDiffAction().registerCustomShortcutSet(CommonShortcuts.getDiff(), myTree);\n    setDefaultEmptyText();\n\n    Splitter splitter = new Splitter(false, 0.7f);\n    splitter.setFirstComponent(ScrollPaneFactory.createScrollPane(myTree));\n    splitter.setSecondComponent(myChangesBrowser);\n\n    setLayout(new BorderLayout());\n    add(splitter);\n  }","commit_id":"ebfb87038006c737ac66e850b637e4b5f5b4f457","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void processAction(ActionEvent ae) throws AbortProcessingException {\n    FacesContext context = FacesContext.getCurrentInstance();\n    ExternalContext extContext = context.getExternalContext();\n    Map reqMap = context.getExternalContext().getRequestMap();\n    Map requestParams = context.getExternalContext().getRequestParameterMap();\n\n    AssessmentSettingsBean assessmentSettings = (AssessmentSettingsBean) cu.\n        lookupBean(\n        \"assessmentSettings\");\n    SaveAssessmentSettings s = new SaveAssessmentSettings();\n    AssessmentFacade assessment = s.save(assessmentSettings);\n    assessmentSettings.setAssessment(assessment);\n\n    //  we need a publishedUrl, this is the url used by anonymous user\n    String releaseTo = assessment.getAssessmentAccessControl().getReleaseTo();\n    if (releaseTo != null) {\n      // generate an alias to the pub assessment\n      String alias = AgentFacade.getAgentString() + (new Date()).getTime();\n      assessmentSettings.setAlias(alias);\n      //log.info(\"servletPath=\" + extContext.getRequestServletPath());\n      String server = ( (javax.servlet.http.HttpServletRequest) extContext.\n                       getRequest()).getRequestURL().toString();\n      int index = server.indexOf(extContext.getRequestContextPath() + \"/\"); // \"/samigo/\"\n      server = server.substring(0, index);\n      //log.info(\"servletPath=\" + server);\n      String url = server + extContext.getRequestContextPath();\n      assessmentSettings.setPublishedUrl(url + \"/servlet/Login?id=\" + alias);\n    }\n\n  }","id":39977,"modified_method":"public void processAction(ActionEvent ae) throws AbortProcessingException {\n    FacesContext context = FacesContext.getCurrentInstance();\n    ExternalContext extContext = context.getExternalContext();\n    Map reqMap = context.getExternalContext().getRequestMap();\n    Map requestParams = context.getExternalContext().getRequestParameterMap();\n    ResourceBundle rb=ResourceBundle.getBundle(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\", context.getViewRoot().getLocale());\n    AssessmentSettingsBean assessmentSettings = (AssessmentSettingsBean) cu.\n        lookupBean(\n        \"assessmentSettings\");\n    //Huong's adding\n    Object time=assessmentSettings.getValueMap().get(\"hasTimeAssessment\");\n    \n    boolean isTime=((Boolean)time).booleanValue();\n    // System.out.println(\"SAVESETTINGSANDCONFIRM\");\n    if(!((isTime)&&((assessmentSettings.getTimeLimit().intValue())==0))){\n        System.out.println(\"SAVESETTINGSANDCONFIRM Success\");\n\tassessmentSettings.setOutcomePublish(\"publish_success\");\n\tSaveAssessmentSettings s = new SaveAssessmentSettings();\n\tAssessmentFacade assessment = s.save(assessmentSettings);\n\t// System.out.println(\"ASSESSMENT SETTINGSAVED\");\n\tassessmentSettings.setAssessment(assessment);\n\n    //  we need a publishedUrl, this is the url used by anonymous user\n\tString releaseTo = assessment.getAssessmentAccessControl().getReleaseTo();\n\tif (releaseTo != null) {\n           // generate an alias to the pub assessment\n\t    String alias = AgentFacade.getAgentString() + (new Date()).getTime();\n\t    assessmentSettings.setAlias(alias);\n           //log.info(\"servletPath=\" + extContext.getRequestServletPath());\n            String server = ( (javax.servlet.http.HttpServletRequest) extContext.\n\t\t\tgetRequest()).getRequestURL().toString();\n\t    int index = server.indexOf(extContext.getRequestContextPath() + \"/\"); // \"/samigo/\"\n\t    server = server.substring(0, index);\n      //log.info(\"servletPath=\" + server);\n\t    String url = server + extContext.getRequestContextPath();\n\t    assessmentSettings.setPublishedUrl(url + \"/servlet/Login?id=\" + alias);\n\n\t}\n\n    }\n    else{\n        //System.out.println(\"ASSESSMENT SETTING NOT SAVE AND ERROR CHECK\");\n\tString err=(String)rb.getObject(\"timeSelect_error\");\n\tcontext.addMessage(null,new FacesMessage(err));\n\tassessmentSettings.setOutcomePublish(\"publish_fail\");\n\t// System.out.println(\"ASSESSMENT SETTING NOT SAVE AND ERROR MESSAGE CREATED\");\n\n    }\n\n  }","commit_id":"a3b666cb69071f81e2a67162fb20edeb459872de","url":"https://github.com/sakaiproject/sakai"},{"original_method":"protected void dispatch(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n      // NOTE: this is a simple path dispatching, taking the path as the view id = jsp file name for the view,\n      //       with default used if no path and a path prefix as configured.\n\n      // build up the target that will be dispatched to\n      String target = req.getPathInfo();\n      log.debug(\"***0. dispatch, target =\"+target);\n\n      // see if we need to reset the assessmentBean, such as when returning\n\t\t// from a helper\n\t\t// TODO: there MUST be a cleaner way to do this!! These dependencies\n\t\t// shouldn't be here!!\n\t\tif (target != null && target.startsWith(RESET_ASSESSMENT_BEAN)) {\n\t\t\tAssessmentBean assessmentBean = (AssessmentBean) ContextUtil\n\t\t\t\t\t.lookupBeanFromExternalServlet(\"assessmentBean\", req, res);\n\t\t\tAssessmentService assessmentService = new AssessmentService();\n\t\t\tAssessmentFacade assessment = assessmentService\n\t\t\t\t\t.getAssessment(assessmentBean.getAssessmentId());\n\t\t\tassessmentBean.setAssessment(assessment);\n\n\t\t\ttarget = target.replaceFirst(RESET_ASSESSMENT_BEAN, \"\");\n\t\t}\n\n\t\t// see if this is a helper trying to return to caller\n\t\tif (HELPER_RETURN_NOTIFICATION.equals(target)) {\n\t\t\tToolSession session = SessionManager.getCurrentToolSession();\n\t\t\ttarget = (String) session.getAttribute(ToolManager.getCurrentTool()\n\t\t\t\t\t.getId()\n\t\t\t\t\t+ Tool.HELPER_DONE_URL);\n\t\t\tif (target != null) {\n\t\t\t\tsession.removeAttribute(ToolManager.getCurrentTool().getId()\n\t\t\t\t\t\t+ Tool.HELPER_DONE_URL);\n\t\t\t\tres.sendRedirect(target);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n      \n\n      boolean sendToHelper = sendToHelper(req, res);\n      boolean isResourceRequest = isResourceRequest(target);\n      log.debug(\"***1. dispatch, send to helper =\"+sendToHelper);\n      log.debug(\"***2. dispatch, isResourceRequest =\"+ isResourceRequest);\n\n      // see if we have a helper request\n      if (sendToHelper) {\n        return;\n      }\n\n      if (isResourceRequest) {\n        // get a dispatcher to the path\n        RequestDispatcher resourceDispatcher = getServletContext().getRequestDispatcher(target);\n        if (resourceDispatcher != null)  {\n          resourceDispatcher.forward(req, res);\n          return;\n        }\n      }\n\n      if (target == null || \"/\".equals(target)) {\n        target = computeDefaultTarget();\n\n        // make sure it's a valid path\n        if (!target.startsWith(\"/\")){\n          target = \"/\" + target;\n        }\n\n        // now that we've messed with the URL, send a redirect to make it official\n        res.sendRedirect(Web.returnUrl(req, target));\n        return;\n      }\n\n      // see if we want to change the specifically requested view\n      String newTarget = redirectRequestedTarget(target);\n\n      // make sure it's a valid path\n      if (!newTarget.startsWith(\"/\")){\n        newTarget = \"/\" + newTarget;\n      }\n\n      if (!newTarget.equals(target)){\n        // now that we've messed with the URL, send a redirect to make it official\n        res.sendRedirect(Web.returnUrl(req, newTarget));\n        return;\n      }\n      target = newTarget;\n\n      // store this\n      ToolSession toolSession = SessionManager.getCurrentToolSession();\n      if (toolSession!=null){\n        toolSession.setAttribute(LAST_VIEW_VISITED, target);\n      }\n        log.debug(\"3a. dispatch: toolSession=\"+toolSession);\n        log.debug(\"3b. dispatch: target=\"+target);\n        log.debug(\"3c. dispatch: lastview?\"+m_defaultToLastView);\n\n\n      // add the configured folder root and extension (if missing)\n      target = m_path + target;\n\n      // add the default JSF extension (if we have no extension)\n      int lastSlash = target.lastIndexOf(\"/\");\n      int lastDot = target.lastIndexOf(\".\");\n      if (lastDot < 0 || lastDot < lastSlash){\n        target += JSF_EXT;\n      }\n     \n      // set the information that can be removed from return URLs\n      req.setAttribute(URL_PATH, m_path);\n      req.setAttribute(URL_EXT, \".jsp\");\n\n      // set the sakai request object wrappers to provide the native, not Sakai set up, URL information\n      // - this assures that the FacesServlet can dispatch to the proper view based on the path info\n      req.setAttribute(Tool.NATIVE_URL, Tool.NATIVE_URL);\n\n      // TODO: Should setting the HTTP headers be moved up to the portal level as well?\n      res.setContentType(\"text/html; charset=UTF-8\");\n      res.addDateHeader(\"Expires\", System.currentTimeMillis() - (1000L * 60L * 60L * 24L * 365L));\n      res.addDateHeader(\"Last-Modified\", System.currentTimeMillis());\n      res.addHeader(\"Cache-Control\", \"no-store, no-cache, must-revalidate, max-age=0, post-check=0, pre-check=0\");\n      res.addHeader(\"Pragma\", \"no-cache\");\n\n      // dispatch to the target\n      log.debug(\"***4. dispatch, dispatching path: \" + req.getPathInfo() + \" to: \" + target + \" context: \"\n\t+ getServletContext().getServletContextName());\n      // if this is a return from the file picker and going back to \n      // case 1: item mofification, then set \n      //         itemAuthorbean.attachmentlist = filepicker list\n      if (target.indexOf(\"/jsf/author/item/\") > -1 \n\t  && (\"true\").equals(toolSession.getAttribute(\"SENT_TO_FILEPICKER_HELPER\"))){\n\t ItemAuthorBean bean = (ItemAuthorBean) ContextUtil.lookupBeanFromExternalServlet(\n                               \"itemauthor\", req, res);\n         bean.setItemAttachment();\n         toolSession.removeAttribute(\"SENT_TO_FILEPICKER_HELPER\");\n      }\n\n      // case 2: part mofification, then set \n      //         sectionBean.attachmentList = filepicker list\n      if (target.indexOf(\"/jsf/author/editPart\") > -1 \n\t  && (\"true\").equals(toolSession.getAttribute(\"SENT_TO_FILEPICKER_HELPER\"))){\n\t SectionBean bean = (SectionBean) ContextUtil.lookupBeanFromExternalServlet(\n                               \"sectionBean\", req, res);\n         bean.setPartAttachment();\n         toolSession.removeAttribute(\"SENT_TO_FILEPICKER_HELPER\");\n      }\n\n      // case 3: assessment settings mofification, then set \n      //         assessmentSettingsBean.attachmentList = filepicker list\n      if (target.indexOf(\"/jsf/author/authorSettings\") > -1 \n\t  && (\"true\").equals(toolSession.getAttribute(\"SENT_TO_FILEPICKER_HELPER\"))){\n\t AssessmentSettingsBean bean = (AssessmentSettingsBean) ContextUtil.lookupBeanFromExternalServlet(\n                               \"assessmentSettings\", req, res);\n         bean.setAssessmentAttachment();\n         toolSession.removeAttribute(\"SENT_TO_FILEPICKER_HELPER\");\n      }\n\n      // case 4: create new mail, then set\n\t\t// emailBean.attachmentList = filepicker list\n\t\tif (target.indexOf(\"/jsf/evaluation/createNewEmail\") > -1\n\t\t\t\t&& (\"true\").equals(toolSession.getAttribute(\"SENT_TO_FILEPICKER_HELPER\"))) {\n\t\t\tEmailBean bean = (EmailBean) ContextUtil.lookupBeanFromExternalServlet(\"email\", req, res);\n\t\t\tbean.prepareAttachment();\n\t\t\ttoolSession.removeAttribute(\"SENT_TO_FILEPICKER_HELPER\");\n\t\t}\n      \n      RequestDispatcher dispatcher = getServletContext().getRequestDispatcher(target);\n      dispatcher.forward(req, res);\n\n      // restore the request object\n      req.removeAttribute(Tool.NATIVE_URL);\n      req.removeAttribute(URL_PATH);\n      req.removeAttribute(URL_EXT);\n      \n    }","id":39978,"modified_method":"protected void dispatch(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n      // NOTE: this is a simple path dispatching, taking the path as the view id = jsp file name for the view,\n      //       with default used if no path and a path prefix as configured.\n\n      // build up the target that will be dispatched to\n      String target = req.getPathInfo();\n      log.debug(\"***0. dispatch, target =\"+target);\n\n      // see if we need to reset the assessmentBean, such as when returning\n\t\t// from a helper\n\t\t// TODO: there MUST be a cleaner way to do this!! These dependencies\n\t\t// shouldn't be here!!\n\t\tif (target != null && target.startsWith(RESET_ASSESSMENT_BEAN)) {\n\t\t\tAssessmentBean assessmentBean = (AssessmentBean) ContextUtil\n\t\t\t\t\t.lookupBeanFromExternalServlet(\"assessmentBean\", req, res);\n\t\t\tif (assessmentBean != null && assessmentBean.getAssessmentId() != null) {\n\t\t\t\tAssessmentService assessmentService = new AssessmentService();\n\t\t\t\tAssessmentFacade assessment = assessmentService.getAssessment(assessmentBean.getAssessmentId());\n\t\t\t\tassessmentBean.setAssessment(assessment);\n\t\t\t}\n\t\t\ttarget = target.replaceFirst(RESET_ASSESSMENT_BEAN, \"\");\n\t\t}\n\n\t\t// see if this is a helper trying to return to caller\n\t\tif (HELPER_RETURN_NOTIFICATION.equals(target)) {\n\t\t\tToolSession session = SessionManager.getCurrentToolSession();\n\t\t\ttarget = (String) session.getAttribute(ToolManager.getCurrentTool()\n\t\t\t\t\t.getId()\n\t\t\t\t\t+ Tool.HELPER_DONE_URL);\n\t\t\tif (target != null) {\n\t\t\t\tsession.removeAttribute(ToolManager.getCurrentTool().getId()\n\t\t\t\t\t\t+ Tool.HELPER_DONE_URL);\n\t\t\t\tres.sendRedirect(target);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n      \n\n      boolean sendToHelper = sendToHelper(req, res);\n      boolean isResourceRequest = isResourceRequest(target);\n      log.debug(\"***1. dispatch, send to helper =\"+sendToHelper);\n      log.debug(\"***2. dispatch, isResourceRequest =\"+ isResourceRequest);\n\n      // see if we have a helper request\n      if (sendToHelper) {\n        return;\n      }\n\n      if (isResourceRequest) {\n        // get a dispatcher to the path\n        RequestDispatcher resourceDispatcher = getServletContext().getRequestDispatcher(target);\n        if (resourceDispatcher != null)  {\n          resourceDispatcher.forward(req, res);\n          return;\n        }\n      }\n\n      if (target == null || \"/\".equals(target)) {\n        target = computeDefaultTarget();\n\n        // make sure it's a valid path\n        if (!target.startsWith(\"/\")){\n          target = \"/\" + target;\n        }\n\n        // now that we've messed with the URL, send a redirect to make it official\n        res.sendRedirect(Web.returnUrl(req, target));\n        return;\n      }\n\n      // see if we want to change the specifically requested view\n      String newTarget = redirectRequestedTarget(target);\n\n      // make sure it's a valid path\n      if (!newTarget.startsWith(\"/\")){\n        newTarget = \"/\" + newTarget;\n      }\n\n      if (!newTarget.equals(target)){\n        // now that we've messed with the URL, send a redirect to make it official\n        res.sendRedirect(Web.returnUrl(req, newTarget));\n        return;\n      }\n      target = newTarget;\n\n      // store this\n      ToolSession toolSession = SessionManager.getCurrentToolSession();\n      if (toolSession!=null){\n        toolSession.setAttribute(LAST_VIEW_VISITED, target);\n      }\n        log.debug(\"3a. dispatch: toolSession=\"+toolSession);\n        log.debug(\"3b. dispatch: target=\"+target);\n        log.debug(\"3c. dispatch: lastview?\"+m_defaultToLastView);\n\n\n      // add the configured folder root and extension (if missing)\n      target = m_path + target;\n\n      // add the default JSF extension (if we have no extension)\n      int lastSlash = target.lastIndexOf(\"/\");\n      int lastDot = target.lastIndexOf(\".\");\n      if (lastDot < 0 || lastDot < lastSlash){\n        target += JSF_EXT;\n      }\n     \n      // set the information that can be removed from return URLs\n      req.setAttribute(URL_PATH, m_path);\n      req.setAttribute(URL_EXT, \".jsp\");\n\n      // set the sakai request object wrappers to provide the native, not Sakai set up, URL information\n      // - this assures that the FacesServlet can dispatch to the proper view based on the path info\n      req.setAttribute(Tool.NATIVE_URL, Tool.NATIVE_URL);\n\n      // TODO: Should setting the HTTP headers be moved up to the portal level as well?\n      res.setContentType(\"text/html; charset=UTF-8\");\n      res.addDateHeader(\"Expires\", System.currentTimeMillis() - (1000L * 60L * 60L * 24L * 365L));\n      res.addDateHeader(\"Last-Modified\", System.currentTimeMillis());\n      res.addHeader(\"Cache-Control\", \"no-store, no-cache, must-revalidate, max-age=0, post-check=0, pre-check=0\");\n      res.addHeader(\"Pragma\", \"no-cache\");\n\n      // dispatch to the target\n      log.debug(\"***4. dispatch, dispatching path: \" + req.getPathInfo() + \" to: \" + target + \" context: \"\n\t+ getServletContext().getServletContextName());\n      // if this is a return from the file picker and going back to \n      // case 1: item mofification, then set \n      //         itemAuthorbean.attachmentlist = filepicker list\n      if (target.indexOf(\"/jsf/author/item/\") > -1 \n\t  && (\"true\").equals(toolSession.getAttribute(\"SENT_TO_FILEPICKER_HELPER\"))){\n\t ItemAuthorBean bean = (ItemAuthorBean) ContextUtil.lookupBeanFromExternalServlet(\n                               \"itemauthor\", req, res);\n         bean.setItemAttachment();\n         toolSession.removeAttribute(\"SENT_TO_FILEPICKER_HELPER\");\n      }\n\n      // case 2: part mofification, then set \n      //         sectionBean.attachmentList = filepicker list\n      if (target.indexOf(\"/jsf/author/editPart\") > -1 \n\t  && (\"true\").equals(toolSession.getAttribute(\"SENT_TO_FILEPICKER_HELPER\"))){\n\t SectionBean bean = (SectionBean) ContextUtil.lookupBeanFromExternalServlet(\n                               \"sectionBean\", req, res);\n         bean.setPartAttachment();\n         toolSession.removeAttribute(\"SENT_TO_FILEPICKER_HELPER\");\n      }\n\n      // case 3: assessment settings mofification, then set \n      //         assessmentSettingsBean.attachmentList = filepicker list\n      if (target.indexOf(\"/jsf/author/authorSettings\") > -1 \n\t  && (\"true\").equals(toolSession.getAttribute(\"SENT_TO_FILEPICKER_HELPER\"))){\n\t AssessmentSettingsBean bean = (AssessmentSettingsBean) ContextUtil.lookupBeanFromExternalServlet(\n                               \"assessmentSettings\", req, res);\n         bean.setAssessmentAttachment();\n         toolSession.removeAttribute(\"SENT_TO_FILEPICKER_HELPER\");\n      }\n\n      // case 4: create new mail, then set\n\t\t// emailBean.attachmentList = filepicker list\n\t\tif (target.indexOf(\"/jsf/evaluation/createNewEmail\") > -1\n\t\t\t\t&& (\"true\").equals(toolSession.getAttribute(\"SENT_TO_FILEPICKER_HELPER\"))) {\n\t\t\tEmailBean bean = (EmailBean) ContextUtil.lookupBeanFromExternalServlet(\"email\", req, res);\n\t\t\tbean.prepareAttachment();\n\t\t\ttoolSession.removeAttribute(\"SENT_TO_FILEPICKER_HELPER\");\n\t\t}\n      \n      RequestDispatcher dispatcher = getServletContext().getRequestDispatcher(target);\n      dispatcher.forward(req, res);\n\n      // restore the request object\n      req.removeAttribute(Tool.NATIVE_URL);\n      req.removeAttribute(URL_PATH);\n      req.removeAttribute(URL_EXT);\n      \n    }","commit_id":"e0853cd7c30b7076102acd35e6a193241810f807","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\r\n\t * Standard process action method.\r\n\t * @param ae ValueChangeEvent\r\n\t * @throws AbortProcessingException\r\n\t */\r\n\tpublic void processValueChange(ValueChangeEvent ae)\r\n\t\t\tthrows AbortProcessingException {\r\n\t\tAuthorBean author = (AuthorBean) ContextUtil.lookupBean(\"author\");\r\n\t\tDeliveryBean delivery = (DeliveryBean) ContextUtil.lookupBean(\"delivery\");\r\n\t\tPersonBean person = (PersonBean) ContextUtil.lookupBean(\"person\");\r\n\t\tString newValue = ae.getNewValue().toString();\r\n\t\tlog.debug(\"**** ae.getNewValue : \" + newValue);\r\n\r\n\t\t\r\n\t\tif (\"edit_pending\".equals(newValue)) {\r\n\t\t\tEditAssessmentListener editAssessmentListener = new EditAssessmentListener();\r\n\t\t\teditAssessmentListener.processAction(null);\r\n\t\t\tauthor.setFirstFromPage(\"editAssessment\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t}\r\n\t\telse if (\"preview_pending\".equals(newValue)) {\r\n\t\t\tdelivery.setActionString(\"previewAssessment\");\r\n\t\t\tauthor.setIsEditPendingAssessmentFlow(true);\r\n\t\t\tperson.setPreviewFromPage(\"author\");\r\n\t\t\tBeginDeliveryActionListener beginDeliveryActionListener = new BeginDeliveryActionListener();\r\n\t\t\tbeginDeliveryActionListener.processAction(null);\r\n\t\t\tauthor.setOutcome(\"beginAssessment\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t}\r\n\t\telse if (\"print_pending\".equals(newValue) || \"print_published\".equals(newValue)) {\r\n\t\t\tdelivery.setActionString(\"previewAssessment\");\r\n\t\t\tauthor.setIsEditPendingAssessmentFlow(true);\r\n\t\t\tif (\"print_published\".equals(newValue)) {\r\n\t\t\t\tauthor.setIsEditPendingAssessmentFlow(false);\r\n\t\t\t\tauthor.setJustPublishedAnAssessment(true);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t\t}\r\n\t\t\tPDFAssessmentBean pdfBean = (PDFAssessmentBean)ContextUtil.lookupBean(\"pdfAssessment\");\r\n\t\t\tpdfBean.prepPDF();\r\n\t\t\tpdfBean.setActionString(\"author\");\r\n\t\t\tauthor.setOutcome(\"print\");\r\n\t\t}\r\n\t\telse if (\"settings_pending\".equals(newValue)) {\r\n\t\t\tAuthorSettingsListener authorSettingsListener = new AuthorSettingsListener();\r\n\t\t\tauthorSettingsListener.processAction(null);\r\n\t\t\tauthor.setFromPage(\"author\");\r\n\t\t\tauthor.setFirstFromPage(\"author\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t}\r\n\t\telse if (\"publish\".equals(newValue)) {\r\n\t\t\tAuthorSettingsListener authorSettingsListener = new AuthorSettingsListener();\r\n\t\t\tauthorSettingsListener.processAction(null);\r\n\t\t\tauthor.setIsErrorInSettings(false);\r\n\t\t\tConfirmPublishAssessmentListener confirmPublishAssessmentListener = new ConfirmPublishAssessmentListener();\r\n\t\t\tconfirmPublishAssessmentListener.processAction(null);\r\n\t\t\tif (author.getIsErrorInSettings()) {\r\n\t\t\t\tauthor.setOutcome(\"editAssessmentSettings\");\t\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tPublishAssessmentListener publishAssessmentListener = new PublishAssessmentListener();\r\n\t\t\t\tpublishAssessmentListener.processAction(null);\r\n\t\t\t\tauthor.setOutcome(\"saveSettingsAndConfirmPublish\");\t\t\r\n\t\t\t}\r\n\t\t\tauthor.setFromPage(\"author\");\r\n\t\t\tauthor.setFirstFromPage(\"author\");\r\n\t\t}\r\n\t\telse if (\"duplicate\".equals(newValue)) {\r\n\t\t\tConfirmCopyAssessmentListener confirmCopyAssessmentListener = new ConfirmCopyAssessmentListener();\r\n\t\t\tconfirmCopyAssessmentListener.processAction(null);\r\n\t\t\tauthor.setOutcome(\"confirmCopyAssessment\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t}\r\n\t\telse if (\"export\".equals(newValue)) {\r\n\t\t\tChooseExportTypeListener chooseExportTypeListener = new ChooseExportTypeListener();\r\n\t\t\tchooseExportTypeListener.processAction(null);\r\n\t\t\tauthor.setOutcome(\"chooseExportType\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t}\r\n\t\telse if (\"remove_pending\".equals(newValue)) {\r\n\t\t\tConfirmRemoveAssessmentListener confirmRemoveAssessmentListener = new ConfirmRemoveAssessmentListener();\r\n\t\t\tconfirmRemoveAssessmentListener.processAction(null);\r\n\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t}\r\n\t\telse if (\"scores\".equals(newValue)) {\r\n\t\t\tdelivery.setActionString(\"gradeAssessment\");\r\n\t\t\tResetTotalScoreListener resetTotalScoreListener = new ResetTotalScoreListener();\r\n\t\t\tresetTotalScoreListener.processAction(null);\r\n\t\t\tTotalScoreListener totalScoreListener = new TotalScoreListener();\r\n\t\t\ttotalScoreListener.processAction(null);\r\n\t\t\tauthor.setJustPublishedAnAssessment(true);\r\n\t\t}\r\n\t\tif (\"edit_published\".equals(newValue)) {\r\n\t\t\tConfirmEditPublishedAssessmentListener confirmEditPublishedAssessmentListener = new ConfirmEditPublishedAssessmentListener();\r\n\t\t\tconfirmEditPublishedAssessmentListener.processAction(null);\r\n\t\t\tauthor.setOutcome(\"confirmEditPublishedAssessment\");\r\n\t\t\tauthor.setFromPage(\"author\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(true);\r\n\t\t}\r\n\t\telse if (\"preview_published\".equals(newValue)) {\r\n\t\t\tdelivery.setActionString(\"previewAssessment\");\r\n\t\t\tauthor.setIsEditPendingAssessmentFlow(false);\r\n\t\t\tperson.setPreviewFromPage(\"author\");\r\n\t\t\tBeginDeliveryActionListener beginDeliveryActionListener = new BeginDeliveryActionListener();\r\n\t\t\tbeginDeliveryActionListener.processAction(null);\r\n\t\t\tauthor.setOutcome(\"beginAssessment\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(true);\r\n\t\t}\r\n\t\telse if (\"settings_published\".equals(newValue)) {\r\n\t\t\tEditPublishedSettingsListener editPublishedSettingsListener = new EditPublishedSettingsListener();\r\n\t\t\teditPublishedSettingsListener.processAction(null);\r\n\t\t\tauthor.setJustPublishedAnAssessment(true);\r\n\t\t}\r\n\t\telse if (\"remove_published\".equals(newValue)) {\r\n\t\t\tConfirmRemovePublishedAssessmentListener confirmRemovePublishedAssessmentListener = new ConfirmRemovePublishedAssessmentListener();\r\n\t\t\tconfirmRemovePublishedAssessmentListener.processAction(null);\r\n\t\t\tauthor.setJustPublishedAnAssessment(true);\r\n\t\t}\r\n\t}","id":39979,"modified_method":"/**\r\n\t * Standard process action method.\r\n\t * @param ae ValueChangeEvent\r\n\t * @throws AbortProcessingException\r\n\t */\r\n\tpublic void processValueChange(ValueChangeEvent ae)\r\n\t\t\tthrows AbortProcessingException {\r\n\t\tAuthorBean author = (AuthorBean) ContextUtil.lookupBean(\"author\");\r\n\t\tDeliveryBean delivery = (DeliveryBean) ContextUtil.lookupBean(\"delivery\");\r\n\t\tPersonBean person = (PersonBean) ContextUtil.lookupBean(\"person\");\r\n\t\tString newValue = ae.getNewValue().toString();\r\n\t\tlog.debug(\"**** ae.getNewValue : \" + newValue);\r\n\r\n\t\t\r\n\t\tif (\"edit_pending\".equals(newValue)) {\r\n\t\t\tEditAssessmentListener editAssessmentListener = new EditAssessmentListener();\r\n\t\t\teditAssessmentListener.processAction(null);\r\n\t\t\tauthor.setFirstFromPage(\"editAssessment\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t}\r\n\t\telse if (\"preview_pending\".equals(newValue)) {\r\n\t\t\tdelivery.setActionString(\"previewAssessment\");\r\n\t\t\tauthor.setIsEditPendingAssessmentFlow(true);\r\n\t\t\tperson.setPreviewFromPage(\"author\");\r\n\t\t\tBeginDeliveryActionListener beginDeliveryActionListener = new BeginDeliveryActionListener();\r\n\t\t\tbeginDeliveryActionListener.processAction(null);\r\n\t\t\tauthor.setOutcome(\"beginAssessment\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t}\r\n\t\telse if (\"print_pending\".equals(newValue) || \"print_published\".equals(newValue)) {\r\n\t\t\tdelivery.setActionString(\"previewAssessment\");\r\n\t\t\tauthor.setIsEditPendingAssessmentFlow(true);\r\n\t\t\tif (\"print_published\".equals(newValue)) {\r\n\t\t\t\tauthor.setIsEditPendingAssessmentFlow(false);\r\n\t\t\t\tauthor.setJustPublishedAnAssessment(true);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t\t}\r\n\t\t\tPDFAssessmentBean pdfBean = (PDFAssessmentBean)ContextUtil.lookupBean(\"pdfAssessment\");\r\n\t\t\tpdfBean.prepPDF();\r\n\t\t\tpdfBean.setActionString(\"author\");\r\n\t\t\tauthor.setOutcome(\"print\");\r\n\t\t}\r\n\t\telse if (\"settings_pending\".equals(newValue)) {\r\n\t\t\tAuthorSettingsListener authorSettingsListener = new AuthorSettingsListener();\r\n\t\t\tauthorSettingsListener.processAction(null);\r\n\t\t\tauthor.setFromPage(\"author\");\r\n\t\t\tauthor.setFirstFromPage(\"author\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t}\r\n\t\telse if (\"publish\".equals(newValue)) {\r\n\t\t\tAuthorSettingsListener authorSettingsListener = new AuthorSettingsListener();\r\n\t\t\tauthorSettingsListener.processAction(null);\r\n\t\t\tauthor.setIsErrorInSettings(false);\r\n\t\t\tConfirmPublishAssessmentListener confirmPublishAssessmentListener = new ConfirmPublishAssessmentListener();\r\n\t\t\tconfirmPublishAssessmentListener.setIsFromActionSelect(true);\r\n\t\t\tconfirmPublishAssessmentListener.processAction(null);\r\n\t\t\tif (author.getIsErrorInSettings()) {\r\n\t\t\t\tauthor.setOutcome(\"editAssessmentSettings\");\t\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tPublishAssessmentListener publishAssessmentListener = new PublishAssessmentListener();\r\n\t\t\t\tpublishAssessmentListener.processAction(null);\r\n\t\t\t\tauthor.setOutcome(\"saveSettingsAndConfirmPublish\");\t\t\r\n\t\t\t}\r\n\t\t\tauthor.setFromPage(\"author\");\r\n\t\t\tauthor.setFirstFromPage(\"author\");\r\n\t\t}\r\n\t\telse if (\"duplicate\".equals(newValue)) {\r\n\t\t\tConfirmCopyAssessmentListener confirmCopyAssessmentListener = new ConfirmCopyAssessmentListener();\r\n\t\t\tconfirmCopyAssessmentListener.processAction(null);\r\n\t\t\tauthor.setOutcome(\"confirmCopyAssessment\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t}\r\n\t\telse if (\"export\".equals(newValue)) {\r\n\t\t\tChooseExportTypeListener chooseExportTypeListener = new ChooseExportTypeListener();\r\n\t\t\tchooseExportTypeListener.processAction(null);\r\n\t\t\tauthor.setOutcome(\"chooseExportType\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t}\r\n\t\telse if (\"remove_pending\".equals(newValue)) {\r\n\t\t\tConfirmRemoveAssessmentListener confirmRemoveAssessmentListener = new ConfirmRemoveAssessmentListener();\r\n\t\t\tconfirmRemoveAssessmentListener.processAction(null);\r\n\t\t\tauthor.setJustPublishedAnAssessment(false);\r\n\t\t}\r\n\t\telse if (\"scores\".equals(newValue)) {\r\n\t\t\tdelivery.setActionString(\"gradeAssessment\");\r\n\t\t\tResetTotalScoreListener resetTotalScoreListener = new ResetTotalScoreListener();\r\n\t\t\tresetTotalScoreListener.processAction(null);\r\n\t\t\tTotalScoreListener totalScoreListener = new TotalScoreListener();\r\n\t\t\ttotalScoreListener.processAction(null);\r\n\t\t\tauthor.setJustPublishedAnAssessment(true);\r\n\t\t}\r\n\t\tif (\"edit_published\".equals(newValue)) {\r\n\t\t\tConfirmEditPublishedAssessmentListener confirmEditPublishedAssessmentListener = new ConfirmEditPublishedAssessmentListener();\r\n\t\t\tconfirmEditPublishedAssessmentListener.processAction(null);\r\n\t\t\tauthor.setOutcome(\"confirmEditPublishedAssessment\");\r\n\t\t\tauthor.setFromPage(\"author\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(true);\r\n\t\t}\r\n\t\telse if (\"preview_published\".equals(newValue)) {\r\n\t\t\tdelivery.setActionString(\"previewAssessment\");\r\n\t\t\tauthor.setIsEditPendingAssessmentFlow(false);\r\n\t\t\tperson.setPreviewFromPage(\"author\");\r\n\t\t\tBeginDeliveryActionListener beginDeliveryActionListener = new BeginDeliveryActionListener();\r\n\t\t\tbeginDeliveryActionListener.processAction(null);\r\n\t\t\tauthor.setOutcome(\"beginAssessment\");\r\n\t\t\tauthor.setJustPublishedAnAssessment(true);\r\n\t\t}\r\n\t\telse if (\"settings_published\".equals(newValue)) {\r\n\t\t\tEditPublishedSettingsListener editPublishedSettingsListener = new EditPublishedSettingsListener();\r\n\t\t\teditPublishedSettingsListener.processAction(null);\r\n\t\t\tauthor.setJustPublishedAnAssessment(true);\r\n\t\t}\r\n\t\telse if (\"remove_published\".equals(newValue)) {\r\n\t\t\tConfirmRemovePublishedAssessmentListener confirmRemovePublishedAssessmentListener = new ConfirmRemovePublishedAssessmentListener();\r\n\t\t\tconfirmRemovePublishedAssessmentListener.processAction(null);\r\n\t\t\tauthor.setJustPublishedAnAssessment(true);\r\n\t\t}\r\n\t}","commit_id":"e8d46cf83cc79d827d0bfc1fdb286c7a4e9e8b19","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void processAction(ActionEvent ae) throws AbortProcessingException {\n    FacesContext context = FacesContext.getCurrentInstance();\n    ExternalContext extContext = context.getExternalContext();\n    AssessmentSettingsBean assessmentSettings = (AssessmentSettingsBean) ContextUtil.lookupBean(\"assessmentSettings\");\n    AssessmentBean assessmentBean = (AssessmentBean) ContextUtil.lookupBean(\"assessmentBean\");\n    //#1 - permission checking before proceeding - daisyf\n    String assessmentId=String.valueOf(assessmentSettings.getAssessmentId());\n    SaveAssessmentSettings s = new SaveAssessmentSettings();\n    AssessmentService assessmentService = new AssessmentService();\n    AssessmentFacade assessment = assessmentService.getAssessment(\n        assessmentId);\n    if (!passAuthz(context, assessment.getCreatedBy())){\n      assessmentSettings.setOutcomePublish(\"editAssessmentSettings\");\n      return;\n    }\n\n    assessmentBean.setAssessment(assessment);\n    //proceed to look for error, save assessment setting and confirm publish\n    //#2a - look for error: check if core assessment title is unique\n    boolean error=false;\n\n    String assessmentName = TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getTitle());\n    if(assessmentName!=null &&(assessmentName.trim()).equals(\"\")){\n     \tString nameEmpty_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"assessmentName_empty\");\n\tcontext.addMessage(null,new FacesMessage(nameEmpty_err));\n\terror=true;\n    }\n    if(!assessmentService.assessmentTitleIsUnique(assessmentId,assessmentName,false)){\n      String nameUnique_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"assessmentName_error\");\n      context.addMessage(null,new FacesMessage(nameUnique_err));\n      error=true;\n    }\n    \n // check if start date is valid\n    if(!assessmentSettings.getIsValidStartDate()){\n    \tString startDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_start_date\");\n    \tcontext.addMessage(null,new FacesMessage(startDateErr));\n    \terror=true;\n    }\n    // check if due date is valid\n    if(!assessmentSettings.getIsValidDueDate()){\n    \tString dueDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_due_date\");\n    \tcontext.addMessage(null,new FacesMessage(dueDateErr));\n    \terror=true;\n    }\n    // check if retract date is valid\n    if(!assessmentSettings.getIsValidRetractDate()){\n    \tString retractDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_retrack_date\");\n    \tcontext.addMessage(null,new FacesMessage(retractDateErr));\n    \terror=true;\n    }\n    \n\n    Date startDate = assessmentSettings.getStartDate();\n    Date dueDate = assessmentSettings.getDueDate();\n    Date retractDate = assessmentSettings.getRetractDate();\n    boolean isRetractEarlierThanAvaliable = false;\n    if ((dueDate != null && startDate != null && dueDate.before(startDate)) ||\n    \t(dueDate != null && startDate == null && dueDate.before(new Date()))) {\n    \tString dateError1 = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"due_earlier_than_avaliable\");\n    \tcontext.addMessage(null,new FacesMessage(FacesMessage.SEVERITY_WARN, dateError1, null));\n    \terror=true;\n    \tassessmentSettings.setStartDate(new Date());\n    }\n    if ((retractDate != null && startDate != null && retractDate.before(startDate)) ||\n        (retractDate != null && startDate == null && retractDate.before(new Date()))) {\n    \tString dateError2 = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"retract_earlier_than_avaliable\");\n    \tcontext.addMessage(null,new FacesMessage(FacesMessage.SEVERITY_WARN, dateError2, null));\n    \terror=true;\n    \tisRetractEarlierThanAvaliable = true;\n    \tassessmentSettings.setStartDate(new Date());\n    }\n    if (!isRetractEarlierThanAvaliable && (retractDate != null && dueDate != null && retractDate.before(dueDate))) {\n    \tString dateError3 = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"retract_earlier_than_due\");\n    \tcontext.addMessage(null,new FacesMessage(FacesMessage.SEVERITY_WARN, dateError3, null));\n    \terror=true;\n    }\n    \n    if (assessmentSettings.getReleaseTo().equals(AssessmentAccessControl.RELEASE_TO_SELECTED_GROUPS)) {\n    \tString[] groupsAuthorized = assessmentSettings.getGroupsAuthorizedToSave(); //getGroupsAuthorized();\n    \tif (groupsAuthorized == null || groupsAuthorized.length == 0) {\n    \t\tString releaseGroupError = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"choose_one_group\");\n        \tcontext.addMessage(null,new FacesMessage(releaseGroupError));\n        \terror=true;\n        \tassessmentSettings.setNoGroupSelectedError(true);\n    \t}\n    \telse {\n    \t\tassessmentSettings.setNoGroupSelectedError(false);\n    \t}\n    }\n    \n    //Gradebook right now only excep if total score >0 check if total score<=0 then throw error.\n    if(assessmentSettings.getToDefaultGradebook() != null && assessmentSettings.getToDefaultGradebook().equals(\"1\"))\n\t{\n \t    if(assessmentBean.getTotalScore()<=0)\n\t\t{\n                String gb_err=(String)ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\", \"gradebook_exception_min_points\");\n\t\tcontext.addMessage(null, new FacesMessage(gb_err));\n\t\terror=true;\n\t\t}\n\t}\n\n\n\n    //#2b - check if gradebook exist, if so, if assessment title already exists in GB\n    GradebookService g = null;\n    if (integrated){\n      g = (GradebookService) SpringBeanLocator.getInstance().\n            getBean(\"org.sakaiproject.service.gradebook.GradebookService\");\n    }\n    String toGradebook = assessmentSettings.getToDefaultGradebook();\n    try{\n\tif (toGradebook!=null && toGradebook.equals(EvaluationModelIfc.TO_DEFAULT_GRADEBOOK.toString()) &&\n\t    gbsHelper.isAssignmentDefined(assessmentName, g)){\n        String gbConflict_err= ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\" , \"gbConflict_error\");\n        context.addMessage(null,new FacesMessage(gbConflict_err));\n        error=true;\n      }\n    }\n    catch(Exception e){\n      log.warn(\"external assessment in GB has the same title:\"+e.getMessage());\n    }\n\n    //#2c - validate if this is a time assessment, is there a time entry?\n    Object time=assessmentSettings.getValueMap().get(\"hasTimeAssessment\");\n    boolean isTime=false;\n    if (time!=null) {\n    \t// Because different flow might get different type, we test it before cast.\n    \tif (time instanceof java.lang.String) {\n    \t\tisTime = Boolean.getBoolean((String) time);\n    \t}\n    \telse if (time instanceof java.lang.Boolean) {\n    \t\tisTime=((Boolean)time).booleanValue();\n    \t}\n    }\n      \n  \n    if ((isTime) &&((assessmentSettings.getTimeLimit().intValue())==0)){\n      String time_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"timeSelect_error\");\n      context.addMessage(null,new FacesMessage(time_err));\n      error=true;\n    }\n        boolean ipErr=false;\n        String ipString = assessmentSettings.getIpAddresses().trim(); \n        String[]arraysIp=(ipString.split(\"\\n\"));\n        //System.out.println(\"arraysIp.length: \"+arraysIp.length);\n        for(int a=0;a<arraysIp.length;a++){\n            String currentString=arraysIp[a];\n\t    if(!currentString.trim().equals(\"\")){\n\t\tif(a<(arraysIp.length-1))\n\t\t    currentString=currentString.substring(0,currentString.length()-1);           \n\t\tif(!s.isIpValid(currentString)){\n\t\tipErr=true;\n\t\tbreak;\n\t\t}\n\t    }\n\t\n\t}\n\tif(ipErr){\n\t    error=true;\n\t    String  ip_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"ip_error\");\n\t    context.addMessage(null,new FacesMessage(ip_err));\n    }\n\t\n\tString unlimitedSubmissions = assessmentSettings.getUnlimitedSubmissions();\n\tif (unlimitedSubmissions != null && unlimitedSubmissions.equals(AssessmentAccessControlIfc.LIMITED_SUBMISSIONS.toString())) {\n\t\tString submissionsAllowed = assessmentSettings.getSubmissionsAllowed().trim();\n\t\ttry {\n\t\t\tint submissionAllowed = Integer.parseInt(submissionsAllowed);\n\t\t\tif (submissionAllowed < 1) {\n\t\t\t\tthrow new RuntimeException();\n\t\t\t}\n\t\t}\n\t\tcatch (RuntimeException e){\n\t\t\terror=true;\n\t\t\tString  submission_err = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"submissions_allowed_error\");\n\t\t\tcontext.addMessage(null,new FacesMessage(submission_err));\n\t\t}\n\t}\n\t\n\tString scoringType=assessmentSettings.getScoringType();\n\tif ((scoringType).equals(EvaluationModelIfc.AVERAGE_SCORE.toString()) && \"0\".equals(assessmentSettings.getUnlimitedSubmissions())) {\n\t\ttry {\n\t\t\tString submissionsAllowed = assessmentSettings.getSubmissionsAllowed().trim();\n\t\t\tint submissionAllowed = Integer.parseInt(submissionsAllowed);\n\t\t\tif (submissionAllowed < 2) {\n\t\t\t\tthrow new RuntimeException();\n\t\t\t}\n\t\t}\n\t\tcatch (RuntimeException e){\n\t\t\terror=true;\n\t\t\tString  submission_err = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"averag_grading_single_submission\");\n\t\t\tcontext.addMessage(null,new FacesMessage(submission_err));\n\t\t}\n\t}\n\t\n    //check feedback - if at specific time then time should be defined.\n    if((assessmentSettings.getFeedbackDelivery()).equals(\"2\") && ((assessmentSettings.getFeedbackDateString()==null) || (assessmentSettings.getFeedbackDateString().equals(\"\")))){\n\terror=true;\n\tString  date_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"date_error\");\n\tcontext.addMessage(null,new FacesMessage(date_err));\n\n    }\n\n   \n    if (error){\n      assessmentSettings.setOutcomePublish(\"editAssessmentSettings\");\n      return;\n    }\n\n    //#3 now u can proceed to save core assessment\n    assessment = s.save(assessmentSettings);\n    //unEscape the TextFormat.convertPlaintextToFormattedTextNoHighUnicode in s.save()\n    assessment.setTitle(FormattedText.convertFormattedTextToPlaintext(assessment.getTitle()));\n    assessmentSettings.setAssessment(assessment);\n\n    //  we need a publishedUrl, this is the url used by anonymous user\n    String releaseTo = assessment.getAssessmentAccessControl().getReleaseTo();\n    if (releaseTo != null) {\n      // generate an alias to the pub assessment\n      String alias = AgentFacade.getAgentString() + (new Date()).getTime();\n      assessmentSettings.setAlias(alias);\n      //log.info(\"servletPath=\" + extContext.getRequestServletPath());\n      String server = ( (javax.servlet.http.HttpServletRequest) extContext.\n\t\t\t      getRequest()).getRequestURL().toString();\n      int index = server.indexOf(extContext.getRequestContextPath() + \"/\"); // \"/samigo-app/\"\n      server = server.substring(0, index);\n      //log.info(\"servletPath=\" + server);\n      String url = server + extContext.getRequestContextPath();\n      assessmentSettings.setPublishedUrl(url + \"/servlet/Login?id=\" + alias);\n\n    }\n   \n    //#4 - before going to confirm publishing, check if the title is unique\n    PublishedAssessmentService publishedService = new PublishedAssessmentService();\n    if ( !publishedService.publishedAssessmentTitleIsUnique(assessmentId,assessmentName)){\n      String err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"published_assessment_title_not_unique_error\");\n      context.addMessage(null,new FacesMessage(err));\n      assessmentSettings.setOutcomePublish(\"editAssessmentSettings\");\n      AuthorBean author = (AuthorBean) ContextUtil.lookupBean(\"author\");\n      author.setIsErrorInSettings(true);\n      return;\n    }\n    \n    //#4 - regenerate the core assessment list in autor bean again\n    // sortString can be of these value:title,releaseTo,dueDate,startDate\n    // get the managed bean, author and reset the list.\n    // Yes, we need to do that just in case the user change those delivery\n    // dates and turning an inactive pub to active pub and then go back to assessment list page\n    AuthorBean author = (AuthorBean) ContextUtil.lookupBean(\"author\");\n\tArrayList assessmentList = assessmentService.getBasicInfoOfAllActiveAssessments(author.getCoreAssessmentOrderBy(),author.isCoreAscending());\n\t// get the managed bean, author and set the list\n\tauthor.setAssessments(assessmentList);\n\t\n\tPublishRepublishNotificationBean publishRepublishNotification = (PublishRepublishNotificationBean) ContextUtil.lookupBean(\"publishRepublishNotification\");\n\tpublishRepublishNotification.setSendNotification(false);\n\tpublishRepublishNotification.setPrePopulateText(ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"pre_populate_text_publish\"));\n\tassessmentSettings.setOutcomePublish(\"saveSettingsAndConfirmPublish\"); // finally goto confirm\n\tSetFromPageAsAuthorSettingsListener setFromPageAsAuthorSettingsListener = new SetFromPageAsAuthorSettingsListener();\n\tsetFromPageAsAuthorSettingsListener.processAction(null);\n  }","id":39980,"modified_method":"public void processAction(ActionEvent ae) throws AbortProcessingException {\n    FacesContext context = FacesContext.getCurrentInstance();\n    ExternalContext extContext = context.getExternalContext();\n    AssessmentSettingsBean assessmentSettings = (AssessmentSettingsBean) ContextUtil.lookupBean(\"assessmentSettings\");\n    AssessmentBean assessmentBean = (AssessmentBean) ContextUtil.lookupBean(\"assessmentBean\");\n    AuthorBean author = (AuthorBean) ContextUtil.lookupBean(\"author\");\n    //#1 - permission checking before proceeding - daisyf\n    String assessmentId=String.valueOf(assessmentSettings.getAssessmentId());\n    SaveAssessmentSettings s = new SaveAssessmentSettings();\n    AssessmentService assessmentService = new AssessmentService();\n    AssessmentFacade assessment = assessmentService.getAssessment(\n        assessmentId);\n    if (!passAuthz(context, assessment.getCreatedBy())){\n      assessmentSettings.setOutcomePublish(\"editAssessmentSettings\");\n      author.setIsErrorInSettings(true);\n      return;\n    }\n\n    assessmentBean.setAssessment(assessment);\n    //proceed to look for error, save assessment setting and confirm publish\n    //#2a - look for error: check if core assessment title is unique\n    boolean error=false;\n\n    String assessmentName = TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getTitle());\n    if(assessmentName!=null &&(assessmentName.trim()).equals(\"\")){\n     \tString nameEmpty_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"assessmentName_empty\");\n\tcontext.addMessage(null,new FacesMessage(nameEmpty_err));\n\terror=true;\n    }\n    if(!assessmentService.assessmentTitleIsUnique(assessmentId,assessmentName,false)){\n      String nameUnique_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"assessmentName_error\");\n      context.addMessage(null,new FacesMessage(nameUnique_err));\n      error=true;\n    }\n    \n // check if start date is valid\n    if(!assessmentSettings.getIsValidStartDate()){\n    \tString startDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_start_date\");\n    \tcontext.addMessage(null,new FacesMessage(startDateErr));\n    \terror=true;\n    }\n    // check if due date is valid\n    if(!assessmentSettings.getIsValidDueDate()){\n    \tString dueDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_due_date\");\n    \tcontext.addMessage(null,new FacesMessage(dueDateErr));\n    \terror=true;\n    }\n    // check if retract date is valid\n    if(!assessmentSettings.getIsValidRetractDate()){\n    \tString retractDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_retrack_date\");\n    \tcontext.addMessage(null,new FacesMessage(retractDateErr));\n    \terror=true;\n    }\n    \n\n    Date startDate = assessmentSettings.getStartDate();\n    Date dueDate = assessmentSettings.getDueDate();\n    Date retractDate = assessmentSettings.getRetractDate();\n    boolean isRetractEarlierThanAvaliable = false;\n    if ((dueDate != null && startDate != null && dueDate.before(startDate)) ||\n    \t(dueDate != null && startDate == null && dueDate.before(new Date()))) {\n    \tString dateError1 = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"due_earlier_than_avaliable\");\n    \tcontext.addMessage(null,new FacesMessage(FacesMessage.SEVERITY_WARN, dateError1, null));\n    \terror=true;\n    \tassessmentSettings.setStartDate(new Date());\n    }\n    if ((retractDate != null && startDate != null && retractDate.before(startDate)) ||\n        (retractDate != null && startDate == null && retractDate.before(new Date()))) {\n    \tString dateError2 = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"retract_earlier_than_avaliable\");\n    \tcontext.addMessage(null,new FacesMessage(FacesMessage.SEVERITY_WARN, dateError2, null));\n    \terror=true;\n    \tisRetractEarlierThanAvaliable = true;\n    \tassessmentSettings.setStartDate(new Date());\n    }\n    if (!isRetractEarlierThanAvaliable && (retractDate != null && dueDate != null && retractDate.before(dueDate))) {\n    \tString dateError3 = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"retract_earlier_than_due\");\n    \tcontext.addMessage(null,new FacesMessage(FacesMessage.SEVERITY_WARN, dateError3, null));\n    \terror=true;\n    }\n    \n    if (!isFromActionSelect) {\n    \tif (assessmentSettings.getReleaseTo().equals(AssessmentAccessControl.RELEASE_TO_SELECTED_GROUPS)) {\n    \t\tString[] groupsAuthorized = assessmentSettings.getGroupsAuthorizedToSave(); //getGroupsAuthorized();\n    \t\tif (groupsAuthorized == null || groupsAuthorized.length == 0) {\n    \t\t\tString releaseGroupError = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"choose_one_group\");\n    \t\t\tcontext.addMessage(null,new FacesMessage(releaseGroupError));\n    \t\t\terror=true;\n    \t\t\tassessmentSettings.setNoGroupSelectedError(true);\n    \t\t}\n    \t\telse {\n    \t\t\tassessmentSettings.setNoGroupSelectedError(false);\n    \t\t}\n    \t}\n\n\n    \t//#2c - validate if this is a time assessment, is there a time entry?\n    \tObject time=assessmentSettings.getValueMap().get(\"hasTimeAssessment\");\n    \tboolean isTime=false;\n    \tif (time!=null) {\n    \t\t// Because different flow might get different type, we test it before cast.\n    \t\tif (time instanceof java.lang.String) {\n    \t\t\tisTime = Boolean.getBoolean((String) time);\n    \t\t}\n    \t\telse if (time instanceof java.lang.Boolean) {\n    \t\t\tisTime=((Boolean)time).booleanValue();\n    \t\t}\n    \t}\n\n\n    \tif ((isTime) &&((assessmentSettings.getTimeLimit().intValue())==0)){\n    \t\tString time_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"timeSelect_error\");\n    \t\tcontext.addMessage(null,new FacesMessage(time_err));\n    \t\terror=true;\n    \t}\n    \tboolean ipErr=false;\n    \tString ipString = assessmentSettings.getIpAddresses().trim(); \n    \tString[]arraysIp=(ipString.split(\"\\n\"));\n    \t//System.out.println(\"arraysIp.length: \"+arraysIp.length);\n    \tfor(int a=0;a<arraysIp.length;a++){\n    \t\tString currentString=arraysIp[a];\n    \t\tif(!currentString.trim().equals(\"\")){\n    \t\t\tif(a<(arraysIp.length-1))\n    \t\t\t\tcurrentString=currentString.substring(0,currentString.length()-1);           \n    \t\t\tif(!s.isIpValid(currentString)){\n    \t\t\t\tipErr=true;\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t}\n\n    \t}\n    \tif(ipErr){\n    \t\terror=true;\n    \t\tString  ip_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"ip_error\");\n    \t\tcontext.addMessage(null,new FacesMessage(ip_err));\n    \t}\n\n    \tString unlimitedSubmissions = assessmentSettings.getUnlimitedSubmissions();\n    \tif (unlimitedSubmissions != null && unlimitedSubmissions.equals(AssessmentAccessControlIfc.LIMITED_SUBMISSIONS.toString())) {\n    \t\tString submissionsAllowed = assessmentSettings.getSubmissionsAllowed().trim();\n    \t\ttry {\n    \t\t\tint submissionAllowed = Integer.parseInt(submissionsAllowed);\n    \t\t\tif (submissionAllowed < 1) {\n    \t\t\t\tthrow new RuntimeException();\n    \t\t\t}\n    \t\t}\n    \t\tcatch (RuntimeException e){\n    \t\t\terror=true;\n    \t\t\tString  submission_err = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"submissions_allowed_error\");\n    \t\t\tcontext.addMessage(null,new FacesMessage(submission_err));\n    \t\t}\n    \t}\n\n    \tString scoringType=assessmentSettings.getScoringType();\n    \tif ((scoringType).equals(EvaluationModelIfc.AVERAGE_SCORE.toString()) && \"0\".equals(assessmentSettings.getUnlimitedSubmissions())) {\n    \t\ttry {\n    \t\t\tString submissionsAllowed = assessmentSettings.getSubmissionsAllowed().trim();\n    \t\t\tint submissionAllowed = Integer.parseInt(submissionsAllowed);\n    \t\t\tif (submissionAllowed < 2) {\n    \t\t\t\tthrow new RuntimeException();\n    \t\t\t}\n    \t\t}\n    \t\tcatch (RuntimeException e){\n    \t\t\terror=true;\n    \t\t\tString  submission_err = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"averag_grading_single_submission\");\n    \t\t\tcontext.addMessage(null,new FacesMessage(submission_err));\n    \t\t}\n    \t}\n\n    \t//check feedback - if at specific time then time should be defined.\n    \tif((assessmentSettings.getFeedbackDelivery()).equals(\"2\") && ((assessmentSettings.getFeedbackDateString()==null) || (assessmentSettings.getFeedbackDateString().equals(\"\")))){\n    \t\terror=true;\n    \t\tString date_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"date_error\");\n    \t\tcontext.addMessage(null,new FacesMessage(date_err));\n    \t}\n    }\n    else {\n    \tif (assessmentSettings.getReleaseTo().equals(AssessmentAccessControl.RELEASE_TO_SELECTED_GROUPS)) {\n    \t\tassessmentSettings.getGroupsAuthorized(); //populate groupsAuthorized;\n    \t}\n    }\n    \n    //Gradebook right now only excep if total score >0 check if total score<=0 then throw error.\n    if(assessmentSettings.getToDefaultGradebook() != null && assessmentSettings.getToDefaultGradebook().equals(\"1\"))\n\t{\n \t    if(assessmentBean.getTotalScore()<=0)\n\t\t{\n \t    \tString gb_err=(String)ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\", \"gradebook_exception_min_points\");\n            context.addMessage(null, new FacesMessage(gb_err));\n            error=true;\n\t\t}\n\t}\n\n    //#2b - check if gradebook exist, if so, if assessment title already exists in GB\n    GradebookService g = null;\n    if (integrated){\n      g = (GradebookService) SpringBeanLocator.getInstance().\n            getBean(\"org.sakaiproject.service.gradebook.GradebookService\");\n    }\n    String toGradebook = assessmentSettings.getToDefaultGradebook();\n    try{\n\tif (toGradebook!=null && toGradebook.equals(EvaluationModelIfc.TO_DEFAULT_GRADEBOOK.toString()) &&\n\t    gbsHelper.isAssignmentDefined(assessmentName, g)){\n        String gbConflict_err= ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\" , \"gbConflict_error\");\n        context.addMessage(null,new FacesMessage(gbConflict_err));\n        error=true;\n      }\n    }\n    catch(Exception e){\n      log.warn(\"external assessment in GB has the same title:\"+e.getMessage());\n    }\n   \n    if (error){\n      assessmentSettings.setOutcomePublish(\"editAssessmentSettings\");\n      author.setIsErrorInSettings(true);\n      return;\n    }\n\n    //#3 now u can proceed to save core assessment\n    if (!isFromActionSelect) {\n    \tassessment = s.save(assessmentSettings, true);\n\n    \t//unEscape the TextFormat.convertPlaintextToFormattedTextNoHighUnicode in s.save()\n    \tassessment.setTitle(FormattedText.convertFormattedTextToPlaintext(assessment.getTitle()));\n    \tassessmentSettings.setAssessment(assessment);\n    }\n    \n    //  we need a publishedUrl, this is the url used by anonymous user\n    String releaseTo = assessment.getAssessmentAccessControl().getReleaseTo();\n    if (releaseTo != null) {\n      // generate an alias to the pub assessment\n      String alias = AgentFacade.getAgentString() + (new Date()).getTime();\n      assessmentSettings.setAlias(alias);\n      //log.info(\"servletPath=\" + extContext.getRequestServletPath());\n      String server = ( (javax.servlet.http.HttpServletRequest) extContext.\n\t\t\t      getRequest()).getRequestURL().toString();\n      int index = server.indexOf(extContext.getRequestContextPath() + \"/\"); // \"/samigo-app/\"\n      server = server.substring(0, index);\n      //log.info(\"servletPath=\" + server);\n      String url = server + extContext.getRequestContextPath();\n      assessmentSettings.setPublishedUrl(url + \"/servlet/Login?id=\" + alias);\n    }\n   \n    //#4 - before going to confirm publishing, check if the title is unique\n    PublishedAssessmentService publishedService = new PublishedAssessmentService();\n    if ( !publishedService.publishedAssessmentTitleIsUnique(assessmentId,assessmentName)){\n      String err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"published_assessment_title_not_unique_error\");\n      context.addMessage(null,new FacesMessage(err));\n      assessmentSettings.setOutcomePublish(\"editAssessmentSettings\");\n      author.setIsErrorInSettings(true);\n      return;\n    }\n    \n    //#4 - regenerate the core assessment list in autor bean again\n    // sortString can be of these value:title,releaseTo,dueDate,startDate\n    // get the managed bean, author and reset the list.\n    // Yes, we need to do that just in case the user change those delivery\n    // dates and turning an inactive pub to active pub and then go back to assessment list page\n    ArrayList assessmentList = assessmentService.getBasicInfoOfAllActiveAssessments(author.getCoreAssessmentOrderBy(),author.isCoreAscending());\n\t// get the managed bean, author and set the list\n\tauthor.setAssessments(assessmentList);\n\t\n\tPublishRepublishNotificationBean publishRepublishNotification = (PublishRepublishNotificationBean) ContextUtil.lookupBean(\"publishRepublishNotification\");\n\tpublishRepublishNotification.setSendNotification(false);\n\tpublishRepublishNotification.setPrePopulateText(ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"pre_populate_text_publish\"));\n\tassessmentSettings.setOutcomePublish(\"saveSettingsAndConfirmPublish\"); // finally goto confirm\n\tSetFromPageAsAuthorSettingsListener setFromPageAsAuthorSettingsListener = new SetFromPageAsAuthorSettingsListener();\n\tsetFromPageAsAuthorSettingsListener.processAction(null);\n  }","commit_id":"e8d46cf83cc79d827d0bfc1fdb286c7a4e9e8b19","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public AssessmentFacade save(AssessmentSettingsBean assessmentSettings)\n  {\n    // create an assessment based on the title entered and the assessment\n    // template selected\n    // #1 - set Assessment\n    Long assessmentId = assessmentSettings.getAssessmentId();\n    //log.info(\"**** save assessment assessmentId =\"+assessmentId.toString());\n    ItemAuthorBean iAuthor=new ItemAuthorBean();\n    //System.out.println(\"assessmentSettings.getFeedbackAuthoring: \"+assessmentSettings.getFeedbackAuthoring());\n    iAuthor.setShowFeedbackAuthoring(assessmentSettings.getFeedbackAuthoring());\n    //System.out.println(\"iAuthor.getShowFeedbackAuthoring :\"+iAuthor.getShowFeedbackAuthoring());\n    AssessmentService assessmentService = new AssessmentService();\n    AssessmentFacade assessment = assessmentService.getAssessment(\n        assessmentId.toString());\n    //log.info(\"** assessment = \"+assessment);\n    assessment.setTitle(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getTitle()));\n    //assessment.setTitle(assessmentSettings.getTitle());\n    assessment.setDescription(assessmentSettings.getDescription());\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.AUTHORS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getAuthors()));\n\n    // #2 - set AssessmentAccessControl\n    AssessmentAccessControl control = (AssessmentAccessControl)assessment.getAssessmentAccessControl();\n    if (control == null){\n      control = new AssessmentAccessControl();\n      // need to fix accessControl so it can take AssessmentFacade later\n      control.setAssessmentBase(assessment.getData());\n    }\n    // a. LATER set dueDate, retractDate, startDate, releaseTo\n    if (assessmentSettings.getStartDate() != null) {\n    \tcontrol.setStartDate(assessmentSettings.getStartDate());\n    }\n    else {\n    \tcontrol.setStartDate(new Date());\n    }\n    control.setDueDate(assessmentSettings.getDueDate());\n    control.setRetractDate(assessmentSettings.getRetractDate());\n    control.setFeedbackDate(assessmentSettings.getFeedbackDate());\n    control.setReleaseTo(assessmentSettings.getReleaseTo());\n    //log.info(\"control RELEASETO =\"+control.getReleaseTo());\n    //log.info(\"settings RELEASETO =\"+assessmentSettings.getReleaseTo());\n\n    // b. set Timed Assessment\n    //log.info(\"** Time limit update to = \"+assessmentSettings.getTimeLimit().intValue());\n    control.setTimeLimit(assessmentSettings.getTimeLimit());\n    if (assessmentSettings.getTimedAssessment())\n      control.setTimedAssessment(AssessmentAccessControl.TIMED_ASSESSMENT);\n    else\n      control.setTimedAssessment(AssessmentAccessControl.DO_NOT_TIMED_ASSESSMENT);\n\n    // c. set Assessment Orgainzation\n    if (assessmentSettings.getItemNavigation()!=null ) {\n    \tString nav = assessmentSettings.getItemNavigation();\n    \tif (\"1\".equals(nav)) {\n    \t\tassessmentSettings.setAssessmentFormat(\"1\");\n    \t}\n    \tcontrol.setItemNavigation(Integer.valueOf(nav));\n    }\n    if (assessmentSettings.getItemNumbering()!=null)\n      control.setItemNumbering(new Integer(assessmentSettings.getItemNumbering()));\n    if (assessmentSettings.getAssessmentFormat()!=null )\n     control.setAssessmentFormat(new Integer(assessmentSettings.getAssessmentFormat()));\n\n    if (assessmentSettings.getIsMarkForReview())\n        control.setMarkForReview(AssessmentAccessControl.MARK_FOR_REVIEW);\n    else {\n    \tcontrol.setMarkForReview(AssessmentAccessControl.NOT_MARK_FOR_REVIEW);\n    }\n\n    // d. set Submissions\n    if (control.getItemNavigation() != null && control.getItemNavigation().equals(Integer.valueOf(1))) {\n    \tcontrol.setUnlimitedSubmissions(Boolean.FALSE);\n    \tcontrol.setSubmissionsAllowed(Integer.valueOf(\"1\"));\n    }\n    else {\n    \tif (assessmentSettings.getUnlimitedSubmissions()!=null){\n    \t\tif (!assessmentSettings.getUnlimitedSubmissions().\n    \t\t\t\tequals(AssessmentAccessControlIfc.UNLIMITED_SUBMISSIONS.toString())) {\n    \t\t\tcontrol.setUnlimitedSubmissions(Boolean.FALSE);\n    \t\t\tif (assessmentSettings.getSubmissionsAllowed() != null)\n    \t\t\t\tcontrol.setSubmissionsAllowed(new Integer(assessmentSettings.\n    \t\t\t\t\t\tgetSubmissionsAllowed()));\n    \t\t\telse\n    \t\t\t\tcontrol.setSubmissionsAllowed(Integer.valueOf(\"1\"));\n    \t\t}\n    \t\telse {\n    \t\t\tcontrol.setUnlimitedSubmissions(Boolean.TRUE);\n    \t\t\tcontrol.setSubmissionsAllowed(null);\n    \t\t}\n    \t}\n    }\n    //log.info(\"**unlimited submission=\"+assessmentSettings.getUnlimitedSubmissions());\n    //log.info(\"**allowed=\"+control.getSubmissionsAllowed());\n\n    if (assessmentSettings.getLateHandling()!=null){\n      control.setLateHandling(new Integer(assessmentSettings.\n                                                getLateHandling()));\n    }\n    if (assessmentSettings.getSubmissionsSaved()!=null){\n      control.setSubmissionsSaved(new Integer(assessmentSettings.getSubmissionsSaved()));\n    }\n    \n    if (assessmentSettings.getAutoSubmit())\n        control.setAutoSubmit(AssessmentAccessControl.AUTO_SUBMIT);\n    else {\n    \tcontrol.setAutoSubmit(AssessmentAccessControl.DO_NOT_AUTO_SUBMIT);\n    }\n    assessment.setAssessmentAccessControl(control);\n\n    // e. set Submission Messages\n    control.setSubmissionMessage(assessmentSettings.getSubmissionMessage());\n    // f. set username\n    control.setUsername(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getUsername()));\n    // g. set password\n    control.setPassword(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getPassword()));\n    // h. set finalPageUrl\n\n    String finalPageUrl = \"\";\n    if (assessmentSettings.getFinalPageUrl() != null) {\n    \tfinalPageUrl = TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getFinalPageUrl().trim());\n    \tif (finalPageUrl.length() != 0 && !finalPageUrl.toLowerCase().startsWith(\"http\")) {\n    \t\tfinalPageUrl = \"http://\" + finalPageUrl;\n    \t}\n    }\n    control.setFinalPageUrl(finalPageUrl);\n\n    //#3 Feedback\n    AssessmentFeedback feedback = (AssessmentFeedback)assessment.getAssessmentFeedback();\n    if (feedback == null){\n      feedback = new AssessmentFeedback();\n      // need to fix feeback so it can take AssessmentFacade later\n      feedback.setAssessmentBase(assessment.getData());\n    }\n    if (assessmentSettings.getFeedbackDelivery()!=null)\n     feedback.setFeedbackDelivery(new Integer(assessmentSettings.getFeedbackDelivery()));\n    if (assessmentSettings.getFeedbackComponentOption()!=null)\n        feedback.setFeedbackComponentOption(new Integer(assessmentSettings.getFeedbackComponentOption()));\n    if (assessmentSettings.getFeedbackAuthoring()!=null)\n     feedback.setFeedbackAuthoring(new Integer(assessmentSettings.getFeedbackAuthoring()));\n    feedback.setShowQuestionText(Boolean.valueOf(assessmentSettings.getShowQuestionText()));\n    feedback.setShowStudentResponse(Boolean.valueOf(assessmentSettings.getShowStudentResponse()));\n    feedback.setShowCorrectResponse(Boolean.valueOf(assessmentSettings.getShowCorrectResponse()));\n    feedback.setShowStudentScore(Boolean.valueOf(assessmentSettings.getShowStudentScore()));\n    feedback.setShowStudentQuestionScore(Boolean.valueOf(assessmentSettings.getShowStudentQuestionScore()));\n    feedback.setShowQuestionLevelFeedback(Boolean.valueOf(assessmentSettings.getShowQuestionLevelFeedback()));\n    feedback.setShowSelectionLevelFeedback(Boolean.valueOf(assessmentSettings.getShowSelectionLevelFeedback()));\n    feedback.setShowGraderComments(Boolean.valueOf(assessmentSettings.getShowGraderComments()));\n    feedback.setShowStatistics(Boolean.valueOf(assessmentSettings.getShowStatistics()));\n    assessment.setAssessmentFeedback(feedback);\n\n    // g. set Grading\n    EvaluationModel evaluation = (EvaluationModel) assessment.getEvaluationModel();\n    if (evaluation == null){\n      evaluation = new EvaluationModel();\n      // need to fix evaluation so it can take AssessmentFacade later\n      evaluation.setAssessmentBase(assessment.getData());\n    }\n    \n    String firstTargetSelected = assessmentSettings.getFirstTargetSelected();\n\tif (\"Anonymous Users\".equals(firstTargetSelected)) {\n\t\tevaluation.setAnonymousGrading(Integer.valueOf(\"1\"));\n\t\tevaluation.setToGradeBook(\"2\");\n\t}\n\telse {\n\t\tif (assessmentSettings.getAnonymousGrading() != null)\n\t\t      evaluation.setAnonymousGrading(Integer.valueOf(assessmentSettings.getAnonymousGrading()));\n\t\tif (assessmentSettings.getToDefaultGradebook() != null)\n\t\t\tevaluation.setToGradeBook(assessmentSettings.getToDefaultGradebook());\n\t}\n    \n    if (assessmentSettings.getScoringType()!=null)\n      evaluation.setScoringType(new Integer(assessmentSettings.getScoringType()));\n    assessment.setEvaluationModel(evaluation);\n\n\n    // h. update ValueMap: it contains value for teh checkboxes in\n    // authorSettings.jsp for: hasAvailableDate, hasDueDate,\n    // hasRetractDate, hasAnonymous, hasAuthenticatedUser, hasIpAddress,\n    // hasUsernamePassword,\n    // hasTimeAssessment,hasAutoSubmit, hasPartMetaData, hasQuestionMetaData\n    HashMap h = assessmentSettings.getValueMap();\n    updateMetaWithValueMap(assessment, h);\n\n    // i. set Graphics\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.BGCOLOR, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getBgColor()));\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.BGIMAGE, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getBgImage()));\n\n    // j. set objectives,rubrics,keywords\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.KEYWORDS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getKeywords()));\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.OBJECTIVES, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getObjectives()));\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.RUBRICS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getRubrics()));\n\n    // jj. save assessment first, then deal with ip\n    assessmentService.saveAssessment(assessment);\n    assessmentService.deleteAllSecuredIP(assessment);\n\n    // k. set ipAddresses\n   \n    HashSet ipSet = new HashSet();\n    String ipAddresses = assessmentSettings.getIpAddresses();\n    if (ipAddresses == null)\n      ipAddresses = \"\";\n    \n    String[] ip = ipAddresses.split(\"\\\\n\");\n    for (int j=0; j<ip.length;j++){\n      if (ip[j]!=null && !ip[j].equals(\"\\r\")) {\n    \t  \n        ipSet.add(new SecuredIPAddress(assessment.getData(),null,ip[j]));\n      }\n    }\n    assessment.setSecuredIPAddressSet(ipSet);\n\n    // l. FINALLY: save the assessment\n    assessmentService.saveAssessment(assessment);\n\n    // added by daisyf, 10/10/06\n    updateAttachment(assessment.getAssessmentAttachmentList(), assessmentSettings.getAttachmentList(),(AssessmentIfc)assessment.getData(), true);\n    EventTrackingService.post(EventTrackingService.newEvent(\"sam.setting.edit\", \"assessmentId=\" + assessmentSettings.getAssessmentId(), true));\n    \n    //added by gopalrc, 6 Nov 2007\n    AuthzQueriesFacadeAPI authz = PersistenceService.getInstance().getAuthzQueriesFacade();\n    if (assessmentSettings.getReleaseTo().equals(AssessmentAccessControl.RELEASE_TO_SELECTED_GROUPS)) {\n        authz.removeAuthorizationByQualifierAndFunction(assessmentId.toString(), \"TAKE_ASSESSMENT\");\n    \tString[] groupsAuthorized = assessmentSettings.getGroupsAuthorizedToSave();//getGroupsAuthorized();\n    \tif (groupsAuthorized != null && groupsAuthorized.length > 0) {\n    \t\tfor (int i=0; i<groupsAuthorized.length; i++){\n    \t\t\tauthz.createAuthorization(groupsAuthorized[i], \"TAKE_ASSESSMENT\", assessmentId.toString());\n    \t\t}\n    \t\t\n    \t\tPublishedAssessmentService publishedAssessmentService = new PublishedAssessmentService();\n    \t\tTreeMap groupsForSite = publishedAssessmentService.getGroupsForSite();\n    \t\tif (groupsForSite != null && groupsForSite.size() > 0) {\n    \t\t\tString releaseToGroups = getReleaseToGroupsAsString(groupsForSite, groupsAuthorized);\n    \t\t\tassessmentSettings.setReleaseToGroupsAsString(releaseToGroups);\n    \t\t}\n    \t}\n    }\n    else { // releaseTo is not \"Selected Groups\" - clean up old/orphaned group permissions if necessary\n    \tCollection groups = null;\n    \ttry {\n    \t\tSite site = SiteService.getSite(ToolManager.getCurrentPlacement().getContext());\n    \t\tgroups = site.getGroups();\n    \t}\n\t\tcatch (IdUnusedException ex) {\n\t\t\t// No site available\n\t\t}\n\t\tif (groups != null && groups.size() > 0) {\n\t\t\tIterator groupIter = groups.iterator();\n\t\t\twhile (groupIter.hasNext()) {\n\t\t\t\tGroup group = (Group) groupIter.next();\n\t\t\t\t//try {\n\t\t\t\t\tauthz.removeAuthorizationByAgentQualifierAndFunction(group.getId(), assessmentId.toString(), \"TAKE_ASSESSMENT\");\n\t\t\t\t//}\n\t\t\t\t//catch (Exception ex) {\n\t\t\t\t\t// No authz permission data for the group\n\t\t\t\t//}\n    \t\t}\n    \t}\n    }\n    \n    assessment = assessmentService.getAssessment(assessmentId.toString());\n    \n    return assessment;\n  }","id":39981,"modified_method":"public AssessmentFacade save(AssessmentSettingsBean assessmentSettings, boolean isFromConfirmPublishAssessmentListener)\n  {\n    // create an assessment based on the title entered and the assessment\n    // template selected\n    // #1 - set Assessment\n    Long assessmentId = assessmentSettings.getAssessmentId();\n    //log.info(\"**** save assessment assessmentId =\"+assessmentId.toString());\n    ItemAuthorBean iAuthor=new ItemAuthorBean();\n    //System.out.println(\"assessmentSettings.getFeedbackAuthoring: \"+assessmentSettings.getFeedbackAuthoring());\n    iAuthor.setShowFeedbackAuthoring(assessmentSettings.getFeedbackAuthoring());\n    //System.out.println(\"iAuthor.getShowFeedbackAuthoring :\"+iAuthor.getShowFeedbackAuthoring());\n    AssessmentService assessmentService = new AssessmentService();\n    AssessmentFacade assessment = assessmentService.getAssessment(\n        assessmentId.toString());\n    //log.info(\"** assessment = \"+assessment);\n    assessment.setTitle(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getTitle()));\n    //assessment.setTitle(assessmentSettings.getTitle());\n    assessment.setDescription(assessmentSettings.getDescription());\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.AUTHORS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getAuthors()));\n\n    // #2 - set AssessmentAccessControl\n    AssessmentAccessControl control = (AssessmentAccessControl)assessment.getAssessmentAccessControl();\n    if (control == null){\n      control = new AssessmentAccessControl();\n      // need to fix accessControl so it can take AssessmentFacade later\n      control.setAssessmentBase(assessment.getData());\n    }\n    // a. LATER set dueDate, retractDate, startDate, releaseTo\n    if (isFromConfirmPublishAssessmentListener) {\n    \tif (assessmentSettings.getStartDate() != null) {\n    \t\tcontrol.setStartDate(assessmentSettings.getStartDate());\n    \t}\n    \telse {\n    \t\tcontrol.setStartDate(new Date());\n    \t}\n    }\n    else {\n    \tcontrol.setStartDate(assessmentSettings.getStartDate());\n    }\n    control.setDueDate(assessmentSettings.getDueDate());\n    control.setRetractDate(assessmentSettings.getRetractDate());\n    control.setFeedbackDate(assessmentSettings.getFeedbackDate());\n    control.setReleaseTo(assessmentSettings.getReleaseTo());\n    //log.info(\"control RELEASETO =\"+control.getReleaseTo());\n    //log.info(\"settings RELEASETO =\"+assessmentSettings.getReleaseTo());\n\n    // b. set Timed Assessment\n    //log.info(\"** Time limit update to = \"+assessmentSettings.getTimeLimit().intValue());\n    control.setTimeLimit(assessmentSettings.getTimeLimit());\n    if (assessmentSettings.getTimedAssessment())\n      control.setTimedAssessment(AssessmentAccessControl.TIMED_ASSESSMENT);\n    else\n      control.setTimedAssessment(AssessmentAccessControl.DO_NOT_TIMED_ASSESSMENT);\n\n    // c. set Assessment Orgainzation\n    if (assessmentSettings.getItemNavigation()!=null ) {\n    \tString nav = assessmentSettings.getItemNavigation();\n    \tif (\"1\".equals(nav)) {\n    \t\tassessmentSettings.setAssessmentFormat(\"1\");\n    \t}\n    \tcontrol.setItemNavigation(Integer.valueOf(nav));\n    }\n    if (assessmentSettings.getItemNumbering()!=null)\n      control.setItemNumbering(new Integer(assessmentSettings.getItemNumbering()));\n    if (assessmentSettings.getAssessmentFormat()!=null )\n     control.setAssessmentFormat(new Integer(assessmentSettings.getAssessmentFormat()));\n\n    if (assessmentSettings.getIsMarkForReview())\n        control.setMarkForReview(AssessmentAccessControl.MARK_FOR_REVIEW);\n    else {\n    \tcontrol.setMarkForReview(AssessmentAccessControl.NOT_MARK_FOR_REVIEW);\n    }\n\n    // d. set Submissions\n    if (control.getItemNavigation() != null && control.getItemNavigation().equals(Integer.valueOf(1))) {\n    \tcontrol.setUnlimitedSubmissions(Boolean.FALSE);\n    \tcontrol.setSubmissionsAllowed(Integer.valueOf(\"1\"));\n    }\n    else {\n    \tif (assessmentSettings.getUnlimitedSubmissions()!=null){\n    \t\tif (!assessmentSettings.getUnlimitedSubmissions().\n    \t\t\t\tequals(AssessmentAccessControlIfc.UNLIMITED_SUBMISSIONS.toString())) {\n    \t\t\tcontrol.setUnlimitedSubmissions(Boolean.FALSE);\n    \t\t\tif (assessmentSettings.getSubmissionsAllowed() != null)\n    \t\t\t\tcontrol.setSubmissionsAllowed(new Integer(assessmentSettings.\n    \t\t\t\t\t\tgetSubmissionsAllowed()));\n    \t\t\telse\n    \t\t\t\tcontrol.setSubmissionsAllowed(Integer.valueOf(\"1\"));\n    \t\t}\n    \t\telse {\n    \t\t\tcontrol.setUnlimitedSubmissions(Boolean.TRUE);\n    \t\t\tcontrol.setSubmissionsAllowed(null);\n    \t\t}\n    \t}\n    }\n    //log.info(\"**unlimited submission=\"+assessmentSettings.getUnlimitedSubmissions());\n    //log.info(\"**allowed=\"+control.getSubmissionsAllowed());\n\n    if (assessmentSettings.getLateHandling()!=null){\n      control.setLateHandling(new Integer(assessmentSettings.\n                                                getLateHandling()));\n    }\n    if (assessmentSettings.getSubmissionsSaved()!=null){\n      control.setSubmissionsSaved(new Integer(assessmentSettings.getSubmissionsSaved()));\n    }\n    \n    if (assessmentSettings.getAutoSubmit())\n        control.setAutoSubmit(AssessmentAccessControl.AUTO_SUBMIT);\n    else {\n    \tcontrol.setAutoSubmit(AssessmentAccessControl.DO_NOT_AUTO_SUBMIT);\n    }\n    assessment.setAssessmentAccessControl(control);\n\n    // e. set Submission Messages\n    control.setSubmissionMessage(assessmentSettings.getSubmissionMessage());\n    // f. set username\n    control.setUsername(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getUsername()));\n    // g. set password\n    control.setPassword(TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getPassword()));\n    // h. set finalPageUrl\n\n    String finalPageUrl = \"\";\n    if (assessmentSettings.getFinalPageUrl() != null) {\n    \tfinalPageUrl = TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getFinalPageUrl().trim());\n    \tif (finalPageUrl.length() != 0 && !finalPageUrl.toLowerCase().startsWith(\"http\")) {\n    \t\tfinalPageUrl = \"http://\" + finalPageUrl;\n    \t}\n    }\n    control.setFinalPageUrl(finalPageUrl);\n\n    //#3 Feedback\n    AssessmentFeedback feedback = (AssessmentFeedback)assessment.getAssessmentFeedback();\n    if (feedback == null){\n      feedback = new AssessmentFeedback();\n      // need to fix feeback so it can take AssessmentFacade later\n      feedback.setAssessmentBase(assessment.getData());\n    }\n    if (assessmentSettings.getFeedbackDelivery()!=null)\n     feedback.setFeedbackDelivery(new Integer(assessmentSettings.getFeedbackDelivery()));\n    if (assessmentSettings.getFeedbackComponentOption()!=null)\n        feedback.setFeedbackComponentOption(new Integer(assessmentSettings.getFeedbackComponentOption()));\n    if (assessmentSettings.getFeedbackAuthoring()!=null)\n     feedback.setFeedbackAuthoring(new Integer(assessmentSettings.getFeedbackAuthoring()));\n    feedback.setShowQuestionText(Boolean.valueOf(assessmentSettings.getShowQuestionText()));\n    feedback.setShowStudentResponse(Boolean.valueOf(assessmentSettings.getShowStudentResponse()));\n    feedback.setShowCorrectResponse(Boolean.valueOf(assessmentSettings.getShowCorrectResponse()));\n    feedback.setShowStudentScore(Boolean.valueOf(assessmentSettings.getShowStudentScore()));\n    feedback.setShowStudentQuestionScore(Boolean.valueOf(assessmentSettings.getShowStudentQuestionScore()));\n    feedback.setShowQuestionLevelFeedback(Boolean.valueOf(assessmentSettings.getShowQuestionLevelFeedback()));\n    feedback.setShowSelectionLevelFeedback(Boolean.valueOf(assessmentSettings.getShowSelectionLevelFeedback()));\n    feedback.setShowGraderComments(Boolean.valueOf(assessmentSettings.getShowGraderComments()));\n    feedback.setShowStatistics(Boolean.valueOf(assessmentSettings.getShowStatistics()));\n    assessment.setAssessmentFeedback(feedback);\n\n    // g. set Grading\n    EvaluationModel evaluation = (EvaluationModel) assessment.getEvaluationModel();\n    if (evaluation == null){\n      evaluation = new EvaluationModel();\n      // need to fix evaluation so it can take AssessmentFacade later\n      evaluation.setAssessmentBase(assessment.getData());\n    }\n    \n    String firstTargetSelected = assessmentSettings.getFirstTargetSelected();\n\tif (\"Anonymous Users\".equals(firstTargetSelected)) {\n\t\tevaluation.setAnonymousGrading(Integer.valueOf(\"1\"));\n\t\tevaluation.setToGradeBook(\"2\");\n\t}\n\telse {\n\t\tif (assessmentSettings.getAnonymousGrading() != null)\n\t\t      evaluation.setAnonymousGrading(Integer.valueOf(assessmentSettings.getAnonymousGrading()));\n\t\tif (assessmentSettings.getToDefaultGradebook() != null)\n\t\t\tevaluation.setToGradeBook(assessmentSettings.getToDefaultGradebook());\n\t}\n    \n    if (assessmentSettings.getScoringType()!=null)\n      evaluation.setScoringType(new Integer(assessmentSettings.getScoringType()));\n    assessment.setEvaluationModel(evaluation);\n\n\n    // h. update ValueMap: it contains value for teh checkboxes in\n    // authorSettings.jsp for: hasAvailableDate, hasDueDate,\n    // hasRetractDate, hasAnonymous, hasAuthenticatedUser, hasIpAddress,\n    // hasUsernamePassword,\n    // hasTimeAssessment,hasAutoSubmit, hasPartMetaData, hasQuestionMetaData\n    HashMap h = assessmentSettings.getValueMap();\n    updateMetaWithValueMap(assessment, h);\n\n    // i. set Graphics\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.BGCOLOR, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getBgColor()));\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.BGIMAGE, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getBgImage()));\n\n    // j. set objectives,rubrics,keywords\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.KEYWORDS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getKeywords()));\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.OBJECTIVES, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getObjectives()));\n    assessment.updateAssessmentMetaData(AssessmentMetaDataIfc.RUBRICS, TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getRubrics()));\n\n    // jj. save assessment first, then deal with ip\n    assessmentService.saveAssessment(assessment);\n    assessmentService.deleteAllSecuredIP(assessment);\n\n    // k. set ipAddresses\n   \n    HashSet ipSet = new HashSet();\n    String ipAddresses = assessmentSettings.getIpAddresses();\n    if (ipAddresses == null)\n      ipAddresses = \"\";\n    \n    String[] ip = ipAddresses.split(\"\\\\n\");\n    for (int j=0; j<ip.length;j++){\n      if (ip[j]!=null && !ip[j].equals(\"\\r\")) {\n    \t  \n        ipSet.add(new SecuredIPAddress(assessment.getData(),null,ip[j]));\n      }\n    }\n    assessment.setSecuredIPAddressSet(ipSet);\n\n    // l. FINALLY: save the assessment\n    assessmentService.saveAssessment(assessment);\n\n    // added by daisyf, 10/10/06\n    updateAttachment(assessment.getAssessmentAttachmentList(), assessmentSettings.getAttachmentList(),(AssessmentIfc)assessment.getData(), true);\n    EventTrackingService.post(EventTrackingService.newEvent(\"sam.setting.edit\", \"assessmentId=\" + assessmentSettings.getAssessmentId(), true));\n    \n    //added by gopalrc, 6 Nov 2007\n    AuthzQueriesFacadeAPI authz = PersistenceService.getInstance().getAuthzQueriesFacade();\n    if (assessmentSettings.getReleaseTo().equals(AssessmentAccessControl.RELEASE_TO_SELECTED_GROUPS)) {\n        authz.removeAuthorizationByQualifierAndFunction(assessmentId.toString(), \"TAKE_ASSESSMENT\");\n    \tString[] groupsAuthorized = assessmentSettings.getGroupsAuthorizedToSave();//getGroupsAuthorized();\n    \tif (groupsAuthorized != null && groupsAuthorized.length > 0) {\n    \t\tfor (int i=0; i<groupsAuthorized.length; i++){\n    \t\t\tauthz.createAuthorization(groupsAuthorized[i], \"TAKE_ASSESSMENT\", assessmentId.toString());\n    \t\t}\n    \t\t\n    \t\tPublishedAssessmentService publishedAssessmentService = new PublishedAssessmentService();\n    \t\tTreeMap groupsForSite = publishedAssessmentService.getGroupsForSite();\n    \t\tif (groupsForSite != null && groupsForSite.size() > 0) {\n    \t\t\tString releaseToGroups = getReleaseToGroupsAsString(groupsForSite, groupsAuthorized);\n    \t\t\tassessmentSettings.setReleaseToGroupsAsString(releaseToGroups);\n    \t\t}\n    \t}\n    }\n    else { // releaseTo is not \"Selected Groups\" - clean up old/orphaned group permissions if necessary\n    \tCollection groups = null;\n    \ttry {\n    \t\tSite site = SiteService.getSite(ToolManager.getCurrentPlacement().getContext());\n    \t\tgroups = site.getGroups();\n    \t}\n\t\tcatch (IdUnusedException ex) {\n\t\t\t// No site available\n\t\t}\n\t\tif (groups != null && groups.size() > 0) {\n\t\t\tIterator groupIter = groups.iterator();\n\t\t\twhile (groupIter.hasNext()) {\n\t\t\t\tGroup group = (Group) groupIter.next();\n\t\t\t\t//try {\n\t\t\t\t\tauthz.removeAuthorizationByAgentQualifierAndFunction(group.getId(), assessmentId.toString(), \"TAKE_ASSESSMENT\");\n\t\t\t\t//}\n\t\t\t\t//catch (Exception ex) {\n\t\t\t\t\t// No authz permission data for the group\n\t\t\t\t//}\n    \t\t}\n    \t}\n    }\n    \n    assessment = assessmentService.getAssessment(assessmentId.toString());\n    \n    return assessment;\n  }","commit_id":"e8d46cf83cc79d827d0bfc1fdb286c7a4e9e8b19","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void processAction(ActionEvent ae) throws AbortProcessingException\n  {\n    FacesContext context = FacesContext.getCurrentInstance();\n\n    AssessmentSettingsBean assessmentSettings = (AssessmentSettingsBean) ContextUtil.\n        lookupBean(\"assessmentSettings\");\n    boolean error=false;\n    String assessmentId=String.valueOf(assessmentSettings.getAssessmentId()); \n    AssessmentService assessmentService = new AssessmentService();\n    SaveAssessmentSettings s = new SaveAssessmentSettings();\n    String assessmentName = TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getTitle());\n \n    // check if name is empty\n    if(assessmentName!=null &&(assessmentName.trim()).equals(\"\")){\n     \tString nameEmpty_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"assessmentName_empty\");\n\tcontext.addMessage(null,new FacesMessage(nameEmpty_err));\n\terror=true;\n    }\n\n    // check if name is unique \n    if(!assessmentService.assessmentTitleIsUnique(assessmentId,assessmentName,false)){\n\tString nameUnique_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"assessmentName_error\");\n\tcontext.addMessage(null,new FacesMessage(nameUnique_err));\n\terror=true;\n    }\n    \n    // check if start date is valid\n    if(!assessmentSettings.getIsValidStartDate()){\n    \tString startDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_start_date\");\n    \tcontext.addMessage(null,new FacesMessage(startDateErr));\n    \terror=true;\n    }\n    // check if due date is valid\n    if(!assessmentSettings.getIsValidDueDate()){\n    \tString dueDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_due_date\");\n    \tcontext.addMessage(null,new FacesMessage(dueDateErr));\n    \terror=true;\n    }\n    // check if retract date is valid\n    if(!assessmentSettings.getIsValidRetractDate()){\n    \tString retractDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_retrack_date\");\n    \tcontext.addMessage(null,new FacesMessage(retractDateErr));\n    \terror=true;\n    }\n    \n    Date startDate = assessmentSettings.getStartDate();\n    Date dueDate = assessmentSettings.getDueDate();\n    Date retractDate = assessmentSettings.getRetractDate();\n    boolean isRetractEarlierThanAvaliable = false;\n    if ((dueDate != null && startDate != null && dueDate.before(startDate)) ||\n    \t(dueDate != null && startDate == null && dueDate.before(new Date()))) {\n    \tString dateError1 = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"due_earlier_than_avaliable\");\n    \tcontext.addMessage(null,new FacesMessage(FacesMessage.SEVERITY_WARN, dateError1, null));\n    \terror=true;\n    \tassessmentSettings.setStartDate(new Date());\n    }\n    if ((retractDate != null && startDate != null && retractDate.before(startDate)) ||\n        (retractDate != null && startDate == null && retractDate.before(new Date()))) {\n    \tString dateError2 = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"retract_earlier_than_avaliable\");\n    \tcontext.addMessage(null,new FacesMessage(FacesMessage.SEVERITY_WARN, dateError2, null));\n    \terror=true;\n    \tisRetractEarlierThanAvaliable = true;\n    \tassessmentSettings.setStartDate(new Date());\n    }\n    if (!isRetractEarlierThanAvaliable && (retractDate != null && dueDate != null && retractDate.before(dueDate))) {\n    \tString dateError3 = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"retract_earlier_than_due\");\n    \tcontext.addMessage(null,new FacesMessage(FacesMessage.SEVERITY_WARN, dateError3, null));\n    \terror=true;\n    }\n\n    if (assessmentSettings.getReleaseTo().equals(AssessmentAccessControl.RELEASE_TO_SELECTED_GROUPS)) {\n    \tString[] groupsAuthorized = assessmentSettings.getGroupsAuthorizedToSave(); //getGroupsAuthorized();\n    \tif (groupsAuthorized == null || groupsAuthorized.length == 0) {\n    \t\tString releaseGroupError = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"choose_one_group\");\n        \tcontext.addMessage(null,new FacesMessage(releaseGroupError));\n        \terror=true;\n        \tassessmentSettings.setNoGroupSelectedError(true);\n    \t}\n    \telse {\n    \t\tassessmentSettings.setNoGroupSelectedError(false);\n    \t}\n    }\n    \n    //  if timed assessment, does it has value for time\n    Object time=assessmentSettings.getValueMap().get(\"hasTimeAssessment\");\n    boolean isTime=false;\n    try\n    {\n      if (time != null)\n      {\n        isTime = ( (Boolean) time).booleanValue();\n      }\n    }\n    catch (Exception ex)\n    {\n      // keep default\n      log.warn(\"Expecting Boolean hasTimeAssessment, got: \" + time);\n\n    }\n    if((isTime) &&((assessmentSettings.getTimeLimit().intValue())==0)){\n\tString time_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"timeSelect_error\");\n\tcontext.addMessage(null,new FacesMessage(time_err));\n        error=true;\n    }\n    \n    String ipString = assessmentSettings.getIpAddresses().trim();  \n     String[]arraysIp=(ipString.split(\"\\n\"));\n     boolean ipErr=false;\n     for(int a=0;a<arraysIp.length;a++){\n\t String currentString=arraysIp[a];\n\t if(!currentString.trim().equals(\"\")){\n\t     if(a<(arraysIp.length-1))\n\t\t currentString=currentString.substring(0,currentString.length()-1);           \n\t     if(!s.isIpValid(currentString)){\n\t\t ipErr=true;\n\t\t break;\n\t     }\n\t }\n\t\n     }\n\tif(ipErr){\n\t    error=true;\n\t    String  ip_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"ip_error\");\n\t    context.addMessage(null,new FacesMessage(ip_err));\n\n\t}\n\n\tString unlimitedSubmissions = assessmentSettings.getUnlimitedSubmissions();\n\tif (unlimitedSubmissions != null && unlimitedSubmissions.equals(AssessmentAccessControlIfc.LIMITED_SUBMISSIONS.toString())) {\n\t\ttry {\n\t\t\tString submissionsAllowed = assessmentSettings.getSubmissionsAllowed().trim();\n\t\t\tint submissionAllowed = Integer.parseInt(submissionsAllowed);\n\t\t\tif (submissionAllowed < 1) {\n\t\t\t\tthrow new RuntimeException();\n\t\t\t}\n\t\t}\n\t\tcatch (RuntimeException e){\n\t\t\terror=true;\n\t\t\tString  submission_err = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"submissions_allowed_error\");\n\t\t\tcontext.addMessage(null,new FacesMessage(submission_err));\n\t\t}\n\t}\n\t\n\t//String unlimitedSubmissions = assessmentSettings.getUnlimitedSubmissions();\n\tString scoringType=assessmentSettings.getScoringType();\n\tif ((scoringType).equals(EvaluationModelIfc.AVERAGE_SCORE.toString()) && \"0\".equals(assessmentSettings.getUnlimitedSubmissions())) {\n\t\ttry {\n\t\t\tString submissionsAllowed = assessmentSettings.getSubmissionsAllowed().trim();\n\t\t\tint submissionAllowed = Integer.parseInt(submissionsAllowed);\n\t\t\tif (submissionAllowed < 2) {\n\t\t\t\tthrow new RuntimeException();\n\t\t\t}\n\t\t}\n\t\tcatch (RuntimeException e){\n\t\t\terror=true;\n\t\t\tString  submission_err = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"averag_grading_single_submission\");\n\t\t\tcontext.addMessage(null,new FacesMessage(submission_err));\n\t\t}\n\t}\n\t\t\n    //check feedback - if at specific time then time should be defined.\n    if((assessmentSettings.getFeedbackDelivery()).equals(\"2\")) {\n    \tif (assessmentSettings.getFeedbackDateString()==null || assessmentSettings.getFeedbackDateString().equals(\"\")) {\n    \t\terror=true;\n    \t\tString  date_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"date_error\");\n    \t\tcontext.addMessage(null,new FacesMessage(date_err));\n    \t}\n    \telse if(!assessmentSettings.getIsValidFeedbackDate()){\n        \tString feedbackDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_feedback_date\");\n        \tcontext.addMessage(null,new FacesMessage(feedbackDateErr));\n        \terror=true;\n        }\n    }\n\n    if (error){\n      String blockDivs = ContextUtil.lookupParam(\"assessmentSettingsAction:blockDivs\");\n      assessmentSettings.setBlockDivs(blockDivs);\n      assessmentSettings.setOutcomeSave(\"editAssessmentSettings\");\n      return;\n    }\n \n    // Set the outcome once Save button is clicked\n    AuthorBean author = (AuthorBean) ContextUtil.lookupBean(\"author\");\n    assessmentSettings.setOutcomeSave(author.getFromPage());\n\n    s.save(assessmentSettings);\n\n    // reset the core listing in case assessment title changes\n    ArrayList assessmentList = assessmentService.getBasicInfoOfAllActiveAssessments(\n    \t\tauthor.getCoreAssessmentOrderBy(),author.isCoreAscending());\n    Iterator iter = assessmentList.iterator();\n\twhile (iter.hasNext()) {\n\t\tAssessmentFacade assessmentFacade= (AssessmentFacade) iter.next();\n\t\tassessmentFacade.setTitle(FormattedText.convertFormattedTextToPlaintext(assessmentFacade.getTitle()));\n\t}\n    // get the managed bean, author and set the list\n    author.setAssessments(assessmentList);\n\n    // goto Question Authoring page\n    EditAssessmentListener editA= new EditAssessmentListener();\n    editA.setPropertiesForAssessment(author);\n  }","id":39982,"modified_method":"public void processAction(ActionEvent ae) throws AbortProcessingException\n  {\n    FacesContext context = FacesContext.getCurrentInstance();\n\n    AssessmentSettingsBean assessmentSettings = (AssessmentSettingsBean) ContextUtil.\n        lookupBean(\"assessmentSettings\");\n    boolean error=false;\n    String assessmentId=String.valueOf(assessmentSettings.getAssessmentId()); \n    AssessmentService assessmentService = new AssessmentService();\n    SaveAssessmentSettings s = new SaveAssessmentSettings();\n    String assessmentName = TextFormat.convertPlaintextToFormattedTextNoHighUnicode(log, assessmentSettings.getTitle());\n \n    // check if name is empty\n    if(assessmentName!=null &&(assessmentName.trim()).equals(\"\")){\n     \tString nameEmpty_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"assessmentName_empty\");\n\tcontext.addMessage(null,new FacesMessage(nameEmpty_err));\n\terror=true;\n    }\n\n    // check if name is unique \n    if(!assessmentService.assessmentTitleIsUnique(assessmentId,assessmentName,false)){\n\tString nameUnique_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"assessmentName_error\");\n\tcontext.addMessage(null,new FacesMessage(nameUnique_err));\n\terror=true;\n    }\n    \n    // check if start date is valid\n    if(!assessmentSettings.getIsValidStartDate()){\n    \tString startDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_start_date\");\n    \tcontext.addMessage(null,new FacesMessage(startDateErr));\n    \terror=true;\n    }\n    // check if due date is valid\n    if(!assessmentSettings.getIsValidDueDate()){\n    \tString dueDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_due_date\");\n    \tcontext.addMessage(null,new FacesMessage(dueDateErr));\n    \terror=true;\n    }\n    // check if retract date is valid\n    if(!assessmentSettings.getIsValidRetractDate()){\n    \tString retractDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_retrack_date\");\n    \tcontext.addMessage(null,new FacesMessage(retractDateErr));\n    \terror=true;\n    }\n    \n    if (assessmentSettings.getReleaseTo().equals(AssessmentAccessControl.RELEASE_TO_SELECTED_GROUPS)) {\n    \tString[] groupsAuthorized = assessmentSettings.getGroupsAuthorizedToSave(); //getGroupsAuthorized();\n    \tif (groupsAuthorized == null || groupsAuthorized.length == 0) {\n    \t\tString releaseGroupError = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"choose_one_group\");\n        \tcontext.addMessage(null,new FacesMessage(releaseGroupError));\n        \terror=true;\n        \tassessmentSettings.setNoGroupSelectedError(true);\n    \t}\n    \telse {\n    \t\tassessmentSettings.setNoGroupSelectedError(false);\n    \t}\n    }\n    \n    //  if timed assessment, does it has value for time\n    Object time=assessmentSettings.getValueMap().get(\"hasTimeAssessment\");\n    boolean isTime=false;\n    try\n    {\n      if (time != null)\n      {\n        isTime = ( (Boolean) time).booleanValue();\n      }\n    }\n    catch (Exception ex)\n    {\n      // keep default\n      log.warn(\"Expecting Boolean hasTimeAssessment, got: \" + time);\n\n    }\n    if((isTime) &&((assessmentSettings.getTimeLimit().intValue())==0)){\n\tString time_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"timeSelect_error\");\n\tcontext.addMessage(null,new FacesMessage(time_err));\n        error=true;\n    }\n    \n    String ipString = assessmentSettings.getIpAddresses().trim();  \n     String[]arraysIp=(ipString.split(\"\\n\"));\n     boolean ipErr=false;\n     for(int a=0;a<arraysIp.length;a++){\n\t String currentString=arraysIp[a];\n\t if(!currentString.trim().equals(\"\")){\n\t     if(a<(arraysIp.length-1))\n\t\t currentString=currentString.substring(0,currentString.length()-1);           \n\t     if(!s.isIpValid(currentString)){\n\t\t ipErr=true;\n\t\t break;\n\t     }\n\t }\n\t\n     }\n\tif(ipErr){\n\t    error=true;\n\t    String  ip_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"ip_error\");\n\t    context.addMessage(null,new FacesMessage(ip_err));\n\n\t}\n\n\tString unlimitedSubmissions = assessmentSettings.getUnlimitedSubmissions();\n\tif (unlimitedSubmissions != null && unlimitedSubmissions.equals(AssessmentAccessControlIfc.LIMITED_SUBMISSIONS.toString())) {\n\t\ttry {\n\t\t\tString submissionsAllowed = assessmentSettings.getSubmissionsAllowed().trim();\n\t\t\tint submissionAllowed = Integer.parseInt(submissionsAllowed);\n\t\t\tif (submissionAllowed < 1) {\n\t\t\t\tthrow new RuntimeException();\n\t\t\t}\n\t\t}\n\t\tcatch (RuntimeException e){\n\t\t\terror=true;\n\t\t\tString  submission_err = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"submissions_allowed_error\");\n\t\t\tcontext.addMessage(null,new FacesMessage(submission_err));\n\t\t}\n\t}\n\t\n\t//String unlimitedSubmissions = assessmentSettings.getUnlimitedSubmissions();\n\tString scoringType=assessmentSettings.getScoringType();\n\tif ((scoringType).equals(EvaluationModelIfc.AVERAGE_SCORE.toString()) && \"0\".equals(assessmentSettings.getUnlimitedSubmissions())) {\n\t\ttry {\n\t\t\tString submissionsAllowed = assessmentSettings.getSubmissionsAllowed().trim();\n\t\t\tint submissionAllowed = Integer.parseInt(submissionsAllowed);\n\t\t\tif (submissionAllowed < 2) {\n\t\t\t\tthrow new RuntimeException();\n\t\t\t}\n\t\t}\n\t\tcatch (RuntimeException e){\n\t\t\terror=true;\n\t\t\tString  submission_err = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"averag_grading_single_submission\");\n\t\t\tcontext.addMessage(null,new FacesMessage(submission_err));\n\t\t}\n\t}\n\t\t\n    //check feedback - if at specific time then time should be defined.\n    if((assessmentSettings.getFeedbackDelivery()).equals(\"2\")) {\n    \tif (assessmentSettings.getFeedbackDateString()==null || assessmentSettings.getFeedbackDateString().equals(\"\")) {\n    \t\terror=true;\n    \t\tString  date_err=ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AssessmentSettingsMessages\",\"date_error\");\n    \t\tcontext.addMessage(null,new FacesMessage(date_err));\n    \t}\n    \telse if(!assessmentSettings.getIsValidFeedbackDate()){\n        \tString feedbackDateErr = ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.GeneralMessages\",\"invalid_feedback_date\");\n        \tcontext.addMessage(null,new FacesMessage(feedbackDateErr));\n        \terror=true;\n        }\n    }\n\n    if (error){\n      String blockDivs = ContextUtil.lookupParam(\"assessmentSettingsAction:blockDivs\");\n      assessmentSettings.setBlockDivs(blockDivs);\n      assessmentSettings.setOutcomeSave(\"editAssessmentSettings\");\n      return;\n    }\n \n    // Set the outcome once Save button is clicked\n    AuthorBean author = (AuthorBean) ContextUtil.lookupBean(\"author\");\n    assessmentSettings.setOutcomeSave(author.getFromPage());\n\n    s.save(assessmentSettings, false);\n\n    // reset the core listing in case assessment title changes\n    ArrayList assessmentList = assessmentService.getBasicInfoOfAllActiveAssessments(\n    \t\tauthor.getCoreAssessmentOrderBy(),author.isCoreAscending());\n    Iterator iter = assessmentList.iterator();\n\twhile (iter.hasNext()) {\n\t\tAssessmentFacade assessmentFacade= (AssessmentFacade) iter.next();\n\t\tassessmentFacade.setTitle(FormattedText.convertFormattedTextToPlaintext(assessmentFacade.getTitle()));\n\t}\n    // get the managed bean, author and set the list\n    author.setAssessments(assessmentList);\n\n    // goto Question Authoring page\n    EditAssessmentListener editA= new EditAssessmentListener();\n    editA.setPropertiesForAssessment(author);\n  }","commit_id":"e8d46cf83cc79d827d0bfc1fdb286c7a4e9e8b19","url":"https://github.com/sakaiproject/sakai"},{"original_method":"@NotNull\n    @Override\n    public Collection<DeclarationDescriptor> getAllDescriptors() {\n        if (!allDescriptorsComputed) {\n            for (JetDeclaration declaration : declarationProvider.getAllDeclarations()) {\n                if (declaration instanceof JetEnumEntry) {\n                    JetEnumEntry jetEnumEntry = (JetEnumEntry) declaration;\n                    Name name = jetEnumEntry.getNameAsName();\n                    if (name != null) {\n                        getProperties(name);\n                        getObjectDescriptor(name);\n                    }\n                }\n                else if (declaration instanceof JetObjectDeclaration) {\n                    JetClassOrObject classOrObject = (JetClassOrObject) declaration;\n                    Name name = classOrObject.getNameAsName();\n                    if (name != null) {\n                        getProperties(name);\n                        getObjectDescriptor(name);\n                    }\n                }\n                else if (declaration instanceof JetClassOrObject) {\n                    JetClassOrObject classOrObject = (JetClassOrObject) declaration;\n                    Name name = classOrObject.getNameAsName();\n                    if (name != null) {\n                        getClassifier(name);\n                    }\n                }\n                else if (declaration instanceof JetFunction) {\n                    JetFunction function = (JetFunction) declaration;\n                    getFunctions(function.getNameAsSafeName());\n                }\n                else if (declaration instanceof JetProperty) {\n                    JetProperty property = (JetProperty) declaration;\n                    getProperties(property.getNameAsSafeName());\n                }\n                else if (declaration instanceof JetParameter) {\n                    JetParameter parameter = (JetParameter) declaration;\n                    Name name = parameter.getNameAsName();\n                    if (name != null) {\n                        getProperties(name);\n                    }\n                }\n                else if (declaration instanceof JetTypedef || declaration instanceof JetMultiDeclaration) {\n                    // Do nothing for typedefs as they are not supported.\n                    // MultiDeclarations are not supported on global level too.\n                }\n                else {\n                    throw new IllegalArgumentException(\"Unsupported declaration kind: \" + declaration);\n                }\n            }\n            addExtraDescriptors();\n            allDescriptorsComputed = true;\n        }\n        return allDescriptors;\n    }","id":39983,"modified_method":"@NotNull\n    @Override\n    public Collection<DeclarationDescriptor> getAllDescriptors() {\n        if (!allDescriptorsComputed) {\n            for (JetDeclaration declaration : declarationProvider.getAllDeclarations()) {\n                if (declaration instanceof JetEnumEntry) {\n                    JetEnumEntry jetEnumEntry = (JetEnumEntry) declaration;\n                    Name name = safeNameForLazyResolve(jetEnumEntry);\n                    if (name != null) {\n                        getProperties(name);\n                        getObjectDescriptor(name);\n                    }\n                }\n                else if (declaration instanceof JetObjectDeclaration) {\n                    JetObjectDeclaration objectDeclaration = (JetObjectDeclaration) declaration;\n                    Name name = safeNameForLazyResolve(objectDeclaration.getNameAsDeclaration());\n                    if (name != null) {\n                        getProperties(name);\n                        getObjectDescriptor(name);\n                    }\n                }\n                else if (declaration instanceof JetClassOrObject) {\n                    JetClassOrObject classOrObject = (JetClassOrObject) declaration;\n                    Name name = safeNameForLazyResolve(classOrObject.getNameAsName());\n                    if (name != null) {\n                        getClassifier(name);\n                    }\n                }\n                else if (declaration instanceof JetFunction) {\n                    JetFunction function = (JetFunction) declaration;\n                    getFunctions(safeNameForLazyResolve(function));\n                }\n                else if (declaration instanceof JetProperty) {\n                    JetProperty property = (JetProperty) declaration;\n                    getProperties(safeNameForLazyResolve(property));\n                }\n                else if (declaration instanceof JetParameter) {\n                    JetParameter parameter = (JetParameter) declaration;\n                    Name name = safeNameForLazyResolve(parameter);\n                    getProperties(name);\n                }\n                else if (declaration instanceof JetTypedef || declaration instanceof JetMultiDeclaration) {\n                    // Do nothing for typedefs as they are not supported.\n                    // MultiDeclarations are not supported on global level too.\n                }\n                else {\n                    throw new IllegalArgumentException(\"Unsupported declaration kind: \" + declaration);\n                }\n            }\n            addExtraDescriptors();\n            allDescriptorsComputed = true;\n        }\n        return allDescriptors;\n    }","commit_id":"636deb6a092782c091c1dd00db08afe3c75769fd","url":"https://github.com/JetBrains/kotlin"},{"original_method":"protected void putToIndex(JetDeclaration declaration) {\n        if (declaration instanceof JetClassInitializer) {\n            return;\n        }\n        allDeclarations.add(declaration);\n        if (declaration instanceof JetNamedFunction) {\n            JetNamedFunction namedFunction = (JetNamedFunction) declaration;\n            functions.put(namedFunction.getNameAsName(), namedFunction);\n        }\n        else if (declaration instanceof JetProperty) {\n            JetProperty property = (JetProperty) declaration;\n            properties.put(property.getNameAsName(), property);\n        }\n        else if (declaration instanceof JetClassOrObject) {\n            JetClassOrObject classOrObject = (JetClassOrObject) declaration;\n            classesAndObjects.put(classOrObject.getNameAsName(), classOrObject);\n        }\n        else if (declaration instanceof JetParameter || declaration instanceof JetTypedef || declaration instanceof JetMultiDeclaration) {\n            // Do nothing, just put it into allDeclarations is enough\n        }\n        else {\n            throw new IllegalArgumentException(\"Unknown declaration: \" + declaration);\n        }\n    }","id":39984,"modified_method":"protected void putToIndex(JetDeclaration declaration) {\n        if (declaration instanceof JetClassInitializer) {\n            return;\n        }\n        allDeclarations.add(declaration);\n        if (declaration instanceof JetNamedFunction) {\n            JetNamedFunction namedFunction = (JetNamedFunction) declaration;\n            functions.put(safeNameForLazyResolve(namedFunction), namedFunction);\n        }\n        else if (declaration instanceof JetProperty) {\n            JetProperty property = (JetProperty) declaration;\n            properties.put(safeNameForLazyResolve(property), property);\n        }\n        else if (declaration instanceof JetClassOrObject) {\n            JetClassOrObject classOrObject = (JetClassOrObject) declaration;\n            classesAndObjects.put(safeNameForLazyResolve(classOrObject.getNameAsName()), classOrObject);\n        }\n        else if (declaration instanceof JetParameter || declaration instanceof JetTypedef || declaration instanceof JetMultiDeclaration) {\n            // Do nothing, just put it into allDeclarations is enough\n        }\n        else {\n            throw new IllegalArgumentException(\"Unknown declaration: \" + declaration);\n        }\n    }","commit_id":"636deb6a092782c091c1dd00db08afe3c75769fd","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    public DeclarationDescriptor resolveToDescriptor(JetDeclaration declaration) {\n        DeclarationDescriptor result = declaration.accept(new JetVisitor<DeclarationDescriptor, Void>() {\n            @Override\n            public DeclarationDescriptor visitClass(JetClass klass, Void data) {\n                return getClassDescriptor(klass);\n            }\n\n            @Override\n            public DeclarationDescriptor visitObjectDeclaration(JetObjectDeclaration declaration, Void data) {\n                PsiElement parent = declaration.getParent();\n                if (parent instanceof JetClassObject) {\n                    JetClassObject jetClassObject = (JetClassObject) parent;\n                    return resolveToDescriptor(jetClassObject);\n                }\n                return getClassDescriptor(declaration);\n            }\n\n            @Override\n            public DeclarationDescriptor visitClassObject(JetClassObject classObject, Void data) {\n                DeclarationDescriptor containingDeclaration =\n                        getInjector().getScopeProvider().getResolutionScopeForDeclaration(classObject).getContainingDeclaration();\n                return ((ClassDescriptor) containingDeclaration).getClassObjectDescriptor();\n            }\n\n            @Override\n            public DeclarationDescriptor visitTypeParameter(JetTypeParameter parameter, Void data) {\n                JetTypeParameterListOwner ownerElement = PsiTreeUtil.getParentOfType(parameter, JetTypeParameterListOwner.class);\n                DeclarationDescriptor ownerDescriptor = resolveToDescriptor(ownerElement);\n\n                List<TypeParameterDescriptor> typeParameters;\n                Name name = parameter.getNameAsName();\n                if (ownerDescriptor instanceof CallableDescriptor) {\n                    CallableDescriptor callableDescriptor = (CallableDescriptor) ownerDescriptor;\n                    typeParameters = callableDescriptor.getTypeParameters();\n                }\n                else if (ownerDescriptor instanceof ClassDescriptor) {\n                    ClassDescriptor classDescriptor = (ClassDescriptor) ownerDescriptor;\n                    typeParameters = classDescriptor.getTypeConstructor().getParameters();\n                }\n                else {\n                    throw new IllegalStateException(\"Unknown owner kind for a type parameter: \" + ownerDescriptor);\n                }\n\n                for (TypeParameterDescriptor typeParameterDescriptor : typeParameters) {\n                    if (typeParameterDescriptor.getName().equals(name)) {\n                        return typeParameterDescriptor;\n                    }\n                }\n\n                throw new IllegalStateException(\"Type parameter \" + name + \" not found for \" + ownerDescriptor);\n            }\n\n            @Override\n            public DeclarationDescriptor visitNamedFunction(JetNamedFunction function, Void data) {\n                JetScope scopeForDeclaration = getInjector().getScopeProvider().getResolutionScopeForDeclaration(function);\n                scopeForDeclaration.getFunctions(function.getNameAsName());\n                return getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, function);\n            }\n\n            @Override\n            public DeclarationDescriptor visitParameter(JetParameter parameter, Void data) {\n                PsiElement grandFather = parameter.getParent().getParent();\n                if (grandFather instanceof JetClass) {\n                    JetClass jetClass = (JetClass) grandFather;\n                    // This is a primary constructor parameter\n                    if (parameter.getValOrVarNode() != null) {\n                        getClassDescriptor(jetClass).getDefaultType().getMemberScope().getProperties(parameter.getNameAsName());\n                        return getBindingContext().get(BindingContext.PRIMARY_CONSTRUCTOR_PARAMETER, parameter);\n                    }\n                }\n                return super.visitParameter(parameter, data);\n            }\n\n            @Override\n            public DeclarationDescriptor visitProperty(JetProperty property, Void data) {\n                JetScope scopeForDeclaration = getInjector().getScopeProvider().getResolutionScopeForDeclaration(property);\n                scopeForDeclaration.getProperties(property.getNameAsName());\n                return getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, property);\n            }\n\n            @Override\n            public DeclarationDescriptor visitObjectDeclarationName(JetObjectDeclarationName declarationName, Void data) {\n                JetScope scopeForDeclaration = getInjector().getScopeProvider().getResolutionScopeForDeclaration(\n                        (JetDeclaration) declarationName.getParent());\n                scopeForDeclaration.getProperties(declarationName.getNameAsName());\n                return getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, declarationName);\n            }\n\n            @Override\n            public DeclarationDescriptor visitJetElement(JetElement element, Void data) {\n                throw new IllegalArgumentException(\"Unsupported declaration type: \" + element + \" \" + element.getText());\n            }\n        }, null);\n        if (result == null) {\n            throw new IllegalStateException(\"No descriptor resolved for \" + declaration + \" \" + declaration.getText());\n        }\n        return result;\n    }","id":39985,"modified_method":"@NotNull\n    public DeclarationDescriptor resolveToDescriptor(JetDeclaration declaration) {\n        DeclarationDescriptor result = declaration.accept(new JetVisitor<DeclarationDescriptor, Void>() {\n            @Override\n            public DeclarationDescriptor visitClass(JetClass klass, Void data) {\n                return getClassDescriptor(klass);\n            }\n\n            @Override\n            public DeclarationDescriptor visitObjectDeclaration(JetObjectDeclaration declaration, Void data) {\n                PsiElement parent = declaration.getParent();\n                if (parent instanceof JetClassObject) {\n                    JetClassObject jetClassObject = (JetClassObject) parent;\n                    return resolveToDescriptor(jetClassObject);\n                }\n                return getClassDescriptor(declaration);\n            }\n\n            @Override\n            public DeclarationDescriptor visitClassObject(JetClassObject classObject, Void data) {\n                DeclarationDescriptor containingDeclaration =\n                        getInjector().getScopeProvider().getResolutionScopeForDeclaration(classObject).getContainingDeclaration();\n                return ((ClassDescriptor) containingDeclaration).getClassObjectDescriptor();\n            }\n\n            @Override\n            public DeclarationDescriptor visitTypeParameter(JetTypeParameter parameter, Void data) {\n                JetTypeParameterListOwner ownerElement = PsiTreeUtil.getParentOfType(parameter, JetTypeParameterListOwner.class);\n                DeclarationDescriptor ownerDescriptor = resolveToDescriptor(ownerElement);\n\n                List<TypeParameterDescriptor> typeParameters;\n                Name name = parameter.getNameAsName();\n                if (ownerDescriptor instanceof CallableDescriptor) {\n                    CallableDescriptor callableDescriptor = (CallableDescriptor) ownerDescriptor;\n                    typeParameters = callableDescriptor.getTypeParameters();\n                }\n                else if (ownerDescriptor instanceof ClassDescriptor) {\n                    ClassDescriptor classDescriptor = (ClassDescriptor) ownerDescriptor;\n                    typeParameters = classDescriptor.getTypeConstructor().getParameters();\n                }\n                else {\n                    throw new IllegalStateException(\"Unknown owner kind for a type parameter: \" + ownerDescriptor);\n                }\n\n                for (TypeParameterDescriptor typeParameterDescriptor : typeParameters) {\n                    if (typeParameterDescriptor.getName().equals(name)) {\n                        return typeParameterDescriptor;\n                    }\n                }\n\n                throw new IllegalStateException(\"Type parameter \" + name + \" not found for \" + ownerDescriptor);\n            }\n\n            @Override\n            public DeclarationDescriptor visitNamedFunction(JetNamedFunction function, Void data) {\n                JetScope scopeForDeclaration = getInjector().getScopeProvider().getResolutionScopeForDeclaration(function);\n                scopeForDeclaration.getFunctions(safeNameForLazyResolve(function));\n                return getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, function);\n            }\n\n            @Override\n            public DeclarationDescriptor visitParameter(JetParameter parameter, Void data) {\n                PsiElement grandFather = parameter.getParent().getParent();\n                if (grandFather instanceof JetClass) {\n                    JetClass jetClass = (JetClass) grandFather;\n                    // This is a primary constructor parameter\n                    if (parameter.getValOrVarNode() != null) {\n                        getClassDescriptor(jetClass).getDefaultType().getMemberScope().getProperties(safeNameForLazyResolve(parameter));\n                        return getBindingContext().get(BindingContext.PRIMARY_CONSTRUCTOR_PARAMETER, parameter);\n                    }\n                }\n                return super.visitParameter(parameter, data);\n            }\n\n            @Override\n            public DeclarationDescriptor visitProperty(JetProperty property, Void data) {\n                JetScope scopeForDeclaration = getInjector().getScopeProvider().getResolutionScopeForDeclaration(property);\n                scopeForDeclaration.getProperties(safeNameForLazyResolve(property));\n                return getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, property);\n            }\n\n            @Override\n            public DeclarationDescriptor visitObjectDeclarationName(JetObjectDeclarationName declarationName, Void data) {\n                JetScope scopeForDeclaration = getInjector().getScopeProvider().getResolutionScopeForDeclaration(declarationName.getParent());\n                scopeForDeclaration.getProperties(safeNameForLazyResolve(declarationName));\n                return getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, declarationName);\n            }\n\n            @Override\n            public DeclarationDescriptor visitJetElement(JetElement element, Void data) {\n                throw new IllegalArgumentException(\"Unsupported declaration type: \" + element + \" \" + element.getText());\n            }\n        }, null);\n        if (result == null) {\n            throw new IllegalStateException(\"No descriptor resolved for \" + declaration + \" \" + declaration.getText());\n        }\n        return result;\n    }","commit_id":"636deb6a092782c091c1dd00db08afe3c75769fd","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    public ClassDescriptor getClassDescriptor(@NotNull JetClassOrObject classOrObject) {\n        if (classOrObject.getParent() instanceof JetClassObject) {\n            return getClassObjectDescriptor((JetClassObject) classOrObject.getParent());\n        }\n        JetScope resolutionScope = getInjector().getScopeProvider().getResolutionScopeForDeclaration(classOrObject);\n        Name name = classOrObject.getNameAsName();\n        assert name != null : \"Name is null for \" + classOrObject + \" \" + classOrObject.getText();\n\n        // Why not use the result here. Because it may be that there is a redeclaration:\n        //     class A {} class A { fun foo(): A<completion here>}\n        // and if we find teh class by name only, we may b-not get the right one.\n        // This call is only needed to make sure the classes are written to trace\n        resolutionScope.getClassifier(name);\n        DeclarationDescriptor declaration = getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, classOrObject);\n\n        if (declaration == null) {\n            // Why not use the result here. See the comment\n            resolutionScope.getObjectDescriptor(name);\n            declaration = getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, classOrObject);\n        }\n        if (declaration == null) {\n            throw new IllegalArgumentException(\"Could not find a classifier for \" + classOrObject + \" \" + classOrObject.getText());\n        }\n        return (ClassDescriptor) declaration;\n    }","id":39986,"modified_method":"@NotNull\n    public ClassDescriptor getClassDescriptor(@NotNull JetClassOrObject classOrObject) {\n        if (classOrObject.getParent() instanceof JetClassObject) {\n            return getClassObjectDescriptor((JetClassObject) classOrObject.getParent());\n        }\n        JetScope resolutionScope = getInjector().getScopeProvider().getResolutionScopeForDeclaration(classOrObject);\n        Name name = safeNameForLazyResolve(classOrObject.getNameAsName());\n\n        // Why not use the result here. Because it may be that there is a redeclaration:\n        //     class A {} class A { fun foo(): A<completion here>}\n        // and if we find teh class by name only, we may b-not get the right one.\n        // This call is only needed to make sure the classes are written to trace\n        resolutionScope.getClassifier(name);\n        DeclarationDescriptor declaration = getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, classOrObject);\n\n        if (declaration == null) {\n            // Why not use the result here. See the comment\n            resolutionScope.getObjectDescriptor(name);\n            declaration = getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, classOrObject);\n        }\n        if (declaration == null) {\n            throw new IllegalArgumentException(\"Could not find a classifier for \" + classOrObject + \" \" + classOrObject.getText());\n        }\n        return (ClassDescriptor) declaration;\n    }","commit_id":"636deb6a092782c091c1dd00db08afe3c75769fd","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public LazyTypeParameterDescriptor(\n            @NotNull ResolveSession resolveSession,\n            @NotNull LazyClassDescriptor containingDeclaration,\n            @NotNull JetTypeParameter jetTypeParameter,\n            int index) {\n        this.resolveSession = resolveSession;\n        this.jetTypeParameter = jetTypeParameter;\n        this.variance = jetTypeParameter.getVariance();\n        this.containingDeclaration = containingDeclaration;\n        this.index = index;\n        this.name = jetTypeParameter.getNameAsName();\n        this.reified = jetTypeParameter.hasModifier(JetTokens.REIFIED_KEYWORD);\n\n        StorageManager storageManager = resolveSession.getStorageManager();\n        this.typeConstructor = storageManager.createLazyValue(new Computable<TypeConstructor>() {\n            @Override\n            public TypeConstructor compute() {\n                return createTypeConstructor();\n            }\n        });\n        this.defaultType = storageManager.createLazyValue(new Computable<JetType>() {\n            @Override\n            public JetType compute() {\n                return createDefaultType();\n            }\n        });\n        this.upperBounds = storageManager.createLazyValue(new Computable<Set<JetType>>() {\n            @Override\n            public Set<JetType> compute() {\n                return resolveUpperBounds();\n            }\n        });\n        this.upperBoundsAsType = storageManager.createLazyValue(new Computable<JetType>() {\n            @Override\n            public JetType compute() {\n                return computeUpperBoundsAsType();\n            }\n        });\n    }","id":39987,"modified_method":"public LazyTypeParameterDescriptor(\n            @NotNull ResolveSession resolveSession,\n            @NotNull LazyClassDescriptor containingDeclaration,\n            @NotNull JetTypeParameter jetTypeParameter,\n            int index) {\n        this.resolveSession = resolveSession;\n        this.jetTypeParameter = jetTypeParameter;\n        this.variance = jetTypeParameter.getVariance();\n        this.containingDeclaration = containingDeclaration;\n        this.index = index;\n        this.name = ResolveSessionUtils.safeNameForLazyResolve(jetTypeParameter.getNameAsName());\n        this.reified = jetTypeParameter.hasModifier(JetTokens.REIFIED_KEYWORD);\n\n        StorageManager storageManager = resolveSession.getStorageManager();\n        this.typeConstructor = storageManager.createLazyValue(new Computable<TypeConstructor>() {\n            @Override\n            public TypeConstructor compute() {\n                return createTypeConstructor();\n            }\n        });\n        this.defaultType = storageManager.createLazyValue(new Computable<JetType>() {\n            @Override\n            public JetType compute() {\n                return createDefaultType();\n            }\n        });\n        this.upperBounds = storageManager.createLazyValue(new Computable<Set<JetType>>() {\n            @Override\n            public Set<JetType> compute() {\n                return resolveUpperBounds();\n            }\n        });\n        this.upperBoundsAsType = storageManager.createLazyValue(new Computable<JetType>() {\n            @Override\n            public JetType compute() {\n                return computeUpperBoundsAsType();\n            }\n        });\n    }","commit_id":"c2e8282fb92c60bc4b1e4e36bd5b6e0a853d25e9","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    @NotNull\n    public DeclarationDescriptor resolveToDescriptor(JetDeclaration declaration) {\n        DeclarationDescriptor result = declaration.accept(new JetVisitor<DeclarationDescriptor, Void>() {\n            @Override\n            public DeclarationDescriptor visitClass(JetClass klass, Void data) {\n                return getClassDescriptor(klass);\n            }\n\n            @Override\n            public DeclarationDescriptor visitObjectDeclaration(JetObjectDeclaration declaration, Void data) {\n                PsiElement parent = declaration.getParent();\n                if (parent instanceof JetClassObject) {\n                    JetClassObject jetClassObject = (JetClassObject) parent;\n                    return resolveToDescriptor(jetClassObject);\n                }\n                return getClassDescriptor(declaration);\n            }\n\n            @Override\n            public DeclarationDescriptor visitClassObject(JetClassObject classObject, Void data) {\n                DeclarationDescriptor containingDeclaration =\n                        getInjector().getScopeProvider().getResolutionScopeForDeclaration(classObject).getContainingDeclaration();\n                return ((ClassDescriptor) containingDeclaration).getClassObjectDescriptor();\n            }\n\n            @Override\n            public DeclarationDescriptor visitTypeParameter(JetTypeParameter parameter, Void data) {\n                JetTypeParameterListOwner ownerElement = PsiTreeUtil.getParentOfType(parameter, JetTypeParameterListOwner.class);\n                DeclarationDescriptor ownerDescriptor = resolveToDescriptor(ownerElement);\n\n                List<TypeParameterDescriptor> typeParameters;\n                Name name = parameter.getNameAsName();\n                if (ownerDescriptor instanceof CallableDescriptor) {\n                    CallableDescriptor callableDescriptor = (CallableDescriptor) ownerDescriptor;\n                    typeParameters = callableDescriptor.getTypeParameters();\n                }\n                else if (ownerDescriptor instanceof ClassDescriptor) {\n                    ClassDescriptor classDescriptor = (ClassDescriptor) ownerDescriptor;\n                    typeParameters = classDescriptor.getTypeConstructor().getParameters();\n                }\n                else {\n                    throw new IllegalStateException(\"Unknown owner kind for a type parameter: \" + ownerDescriptor);\n                }\n\n                for (TypeParameterDescriptor typeParameterDescriptor : typeParameters) {\n                    if (typeParameterDescriptor.getName().equals(name)) {\n                        return typeParameterDescriptor;\n                    }\n                }\n\n                throw new IllegalStateException(\"Type parameter \" + name + \" not found for \" + ownerDescriptor);\n            }\n\n            @Override\n            public DeclarationDescriptor visitNamedFunction(JetNamedFunction function, Void data) {\n                JetScope scopeForDeclaration = getInjector().getScopeProvider().getResolutionScopeForDeclaration(function);\n                scopeForDeclaration.getFunctions(safeNameForLazyResolve(function));\n                return getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, function);\n            }\n\n            @Override\n            public DeclarationDescriptor visitParameter(JetParameter parameter, Void data) {\n                PsiElement grandFather = parameter.getParent().getParent();\n                if (grandFather instanceof JetClass) {\n                    JetClass jetClass = (JetClass) grandFather;\n                    // This is a primary constructor parameter\n                    if (parameter.getValOrVarNode() != null) {\n                        getClassDescriptor(jetClass).getDefaultType().getMemberScope().getProperties(safeNameForLazyResolve(parameter));\n                        return getBindingContext().get(BindingContext.PRIMARY_CONSTRUCTOR_PARAMETER, parameter);\n                    }\n                }\n                return super.visitParameter(parameter, data);\n            }\n\n            @Override\n            public DeclarationDescriptor visitProperty(JetProperty property, Void data) {\n                JetScope scopeForDeclaration = getInjector().getScopeProvider().getResolutionScopeForDeclaration(property);\n                scopeForDeclaration.getProperties(safeNameForLazyResolve(property));\n                return getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, property);\n            }\n\n            @Override\n            public DeclarationDescriptor visitObjectDeclarationName(JetObjectDeclarationName declarationName, Void data) {\n                JetScope scopeForDeclaration = getInjector().getScopeProvider().getResolutionScopeForDeclaration(declarationName.getParent());\n                scopeForDeclaration.getProperties(safeNameForLazyResolve(declarationName));\n                return getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, declarationName);\n            }\n\n            @Override\n            public DeclarationDescriptor visitJetElement(JetElement element, Void data) {\n                throw new IllegalArgumentException(\"Unsupported declaration type: \" + element + \" \" + element.getText());\n            }\n        }, null);\n        if (result == null) {\n            throw new IllegalStateException(\"No descriptor resolved for \" + declaration + \" \" + declaration.getText());\n        }\n        return result;\n    }","id":39988,"modified_method":"@Override\n    @NotNull\n    public DeclarationDescriptor resolveToDescriptor(JetDeclaration declaration) {\n        DeclarationDescriptor result = declaration.accept(new JetVisitor<DeclarationDescriptor, Void>() {\n            @Override\n            public DeclarationDescriptor visitClass(JetClass klass, Void data) {\n                return getClassDescriptor(klass);\n            }\n\n            @Override\n            public DeclarationDescriptor visitObjectDeclaration(JetObjectDeclaration declaration, Void data) {\n                PsiElement parent = declaration.getParent();\n                if (parent instanceof JetClassObject) {\n                    JetClassObject jetClassObject = (JetClassObject) parent;\n                    return resolveToDescriptor(jetClassObject);\n                }\n                return getClassDescriptor(declaration);\n            }\n\n            @Override\n            public DeclarationDescriptor visitClassObject(JetClassObject classObject, Void data) {\n                DeclarationDescriptor containingDeclaration =\n                        getInjector().getScopeProvider().getResolutionScopeForDeclaration(classObject).getContainingDeclaration();\n                return ((ClassDescriptor) containingDeclaration).getClassObjectDescriptor();\n            }\n\n            @Override\n            public DeclarationDescriptor visitTypeParameter(JetTypeParameter parameter, Void data) {\n                JetTypeParameterListOwner ownerElement = PsiTreeUtil.getParentOfType(parameter, JetTypeParameterListOwner.class);\n                DeclarationDescriptor ownerDescriptor = resolveToDescriptor(ownerElement);\n\n                List<TypeParameterDescriptor> typeParameters;\n                if (ownerDescriptor instanceof CallableDescriptor) {\n                    CallableDescriptor callableDescriptor = (CallableDescriptor) ownerDescriptor;\n                    typeParameters = callableDescriptor.getTypeParameters();\n                }\n                else if (ownerDescriptor instanceof ClassDescriptor) {\n                    ClassDescriptor classDescriptor = (ClassDescriptor) ownerDescriptor;\n                    typeParameters = classDescriptor.getTypeConstructor().getParameters();\n                }\n                else {\n                    throw new IllegalStateException(\"Unknown owner kind for a type parameter: \" + ownerDescriptor);\n                }\n\n                Name name = ResolveSessionUtils.safeNameForLazyResolve(parameter.getNameAsName());\n                for (TypeParameterDescriptor typeParameterDescriptor : typeParameters) {\n                    if (typeParameterDescriptor.getName().equals(name)) {\n                        return typeParameterDescriptor;\n                    }\n                }\n\n                throw new IllegalStateException(\"Type parameter \" + name + \" not found for \" + ownerDescriptor);\n            }\n\n            @Override\n            public DeclarationDescriptor visitNamedFunction(JetNamedFunction function, Void data) {\n                JetScope scopeForDeclaration = getInjector().getScopeProvider().getResolutionScopeForDeclaration(function);\n                scopeForDeclaration.getFunctions(safeNameForLazyResolve(function));\n                return getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, function);\n            }\n\n            @Override\n            public DeclarationDescriptor visitParameter(JetParameter parameter, Void data) {\n                PsiElement grandFather = parameter.getParent().getParent();\n                if (grandFather instanceof JetClass) {\n                    JetClass jetClass = (JetClass) grandFather;\n                    // This is a primary constructor parameter\n                    if (parameter.getValOrVarNode() != null) {\n                        getClassDescriptor(jetClass).getDefaultType().getMemberScope().getProperties(safeNameForLazyResolve(parameter));\n                        return getBindingContext().get(BindingContext.PRIMARY_CONSTRUCTOR_PARAMETER, parameter);\n                    }\n                }\n                return super.visitParameter(parameter, data);\n            }\n\n            @Override\n            public DeclarationDescriptor visitProperty(JetProperty property, Void data) {\n                JetScope scopeForDeclaration = getInjector().getScopeProvider().getResolutionScopeForDeclaration(property);\n                scopeForDeclaration.getProperties(safeNameForLazyResolve(property));\n                return getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, property);\n            }\n\n            @Override\n            public DeclarationDescriptor visitObjectDeclarationName(JetObjectDeclarationName declarationName, Void data) {\n                JetScope scopeForDeclaration = getInjector().getScopeProvider().getResolutionScopeForDeclaration(declarationName.getParent());\n                scopeForDeclaration.getProperties(safeNameForLazyResolve(declarationName));\n                return getBindingContext().get(BindingContext.DECLARATION_TO_DESCRIPTOR, declarationName);\n            }\n\n            @Override\n            public DeclarationDescriptor visitJetElement(JetElement element, Void data) {\n                throw new IllegalArgumentException(\"Unsupported declaration type: \" + element + \" \" + element.getText());\n            }\n        }, null);\n        if (result == null) {\n            throw new IllegalStateException(\"No descriptor resolved for \" + declaration + \" \" + declaration.getText());\n        }\n        return result;\n    }","commit_id":"c2e8282fb92c60bc4b1e4e36bd5b6e0a853d25e9","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static boolean checkRefsInAugmentedAssignmentOrUnaryModified(final PsiElement[] refsToInline, final Project project, final Editor editor,\n                                                        final String localName) {\n    for (PsiElement element : refsToInline) {\n\n      PsiElement parent = element.getParent();\n      if (parent instanceof PsiArrayAccessExpression) {\n        element = parent;\n        parent = parent.getParent();\n      }\n\n      if (parent instanceof PsiAssignmentExpression && element == ((PsiAssignmentExpression)parent).getLExpression()\n          || isUnaryWriteExpression(parent)) {\n\n        EditorColorsManager manager = EditorColorsManager.getInstance();\n        final TextAttributes writeAttributes = manager.getGlobalScheme().getAttributes(EditorColors.WRITE_SEARCH_RESULT_ATTRIBUTES);\n        HighlightManager.getInstance(project).addOccurrenceHighlights(editor, new PsiElement[]{element}, writeAttributes, true, null);\n        String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"variable.is.accessed.for.writing\", localName));\n        CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n        WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n        return true;\n      }\n    }\n    return false;\n  }","id":39989,"modified_method":"@Nullable\n  public static PsiElement checkRefsInAugmentedAssignmentOrUnaryModified(final PsiElement[] refsToInline) {\n    for (PsiElement element : refsToInline) {\n\n      PsiElement parent = element.getParent();\n      if (parent instanceof PsiArrayAccessExpression) {\n        element = parent;\n        parent = parent.getParent();\n      }\n\n      if (parent instanceof PsiAssignmentExpression && element == ((PsiAssignmentExpression)parent).getLExpression()\n          || isUnaryWriteExpression(parent)) {\n\n        return element;\n      }\n    }\n    return null;\n  }","commit_id":"c0e2a0c3b031e76f2217fbaeb1868910abee5f35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * should be called in AtomicAction\n   */\n  public static void invoke(@NotNull final Project project, final Editor editor, final PsiLocalVariable local, PsiReferenceExpression refExpr) {\n    if (!CommonRefactoringUtil.checkReadOnlyStatus(project, local)) return;\n\n    final HighlightManager highlightManager = HighlightManager.getInstance(project);\n\n    final String localName = local.getName();\n\n    final Query<PsiReference> query = ReferencesSearch.search(local, GlobalSearchScope.allScope(project), false);\n    if (query.findFirst() == null){\n      LOG.assertTrue(refExpr == null);\n      String message = RefactoringBundle.message(\"variable.is.never.used\", localName);\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n\n    final PsiClass containingClass = PsiTreeUtil.getParentOfType(local, PsiClass.class);\n    final List<PsiClass> innerClassesWithUsages = new ArrayList<PsiClass>();\n    final List<PsiElement> innerClassUsages = new ArrayList<PsiElement>();\n    query.forEach(new Processor<PsiReference>() {\n      public boolean process(final PsiReference psiReference) {\n        final PsiElement element = psiReference.getElement();\n        final PsiClass psiClass = PsiTreeUtil.getParentOfType(element, PsiClass.class);\n        if (psiClass != containingClass) {\n          innerClassesWithUsages.add(psiClass);\n          innerClassUsages.add(element);\n        }\n        return true;\n      }\n    });\n\n    final PsiCodeBlock containerBlock = PsiTreeUtil.getParentOfType(local, PsiCodeBlock.class);\n    LOG.assertTrue(containerBlock != null);\n\n    final PsiExpression defToInline = innerClassesWithUsages.isEmpty()\n                                      ? getDefToInline(local, refExpr, containerBlock)\n                                      : getDefToInline(local, innerClassesWithUsages.get(0), containerBlock);\n    if (defToInline == null){\n      final String key = refExpr == null ? \"variable.has.no.initializer\" : \"variable.has.no.dominating.definition\";\n      String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(key, localName));\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n\n    final List<PsiElement> refsToInlineList = new ArrayList<PsiElement>();\n    Collections.addAll(refsToInlineList, DefUseUtil.getRefs(containerBlock, local, defToInline));\n    for (PsiElement innerClassUsage : innerClassUsages) {\n      if (!refsToInlineList.contains(innerClassUsage)) {\n        refsToInlineList.add(innerClassUsage);\n      }\n    }\n    if (refsToInlineList.size() == 0) {\n      String message = RefactoringBundle.message(\"variable.is.never.used.before.modification\", localName);\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n    final PsiElement[] refsToInline = refsToInlineList.toArray(new PsiElement[refsToInlineList.size()]);\n\n    EditorColorsManager manager = EditorColorsManager.getInstance();\n    final TextAttributes attributes = manager.getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES);\n    final TextAttributes writeAttributes = manager.getGlobalScheme().getAttributes(EditorColors.WRITE_SEARCH_RESULT_ATTRIBUTES);\n    if (refExpr != null && PsiUtil.isAccessedForReading(refExpr) && ArrayUtil.find(refsToInline, refExpr) < 0) {\n      final PsiElement[] defs = DefUseUtil.getDefs(containerBlock, local, refExpr);\n      LOG.assertTrue(defs.length > 0);\n      highlightManager.addOccurrenceHighlights(editor, defs, attributes, true, null);\n      String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"variable.is.accessed.for.writing\", localName));\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n      return;\n    }\n\n    PsiFile workingFile = local.getContainingFile();\n    for (PsiElement ref : refsToInline) {\n      final PsiFile otherFile = ref.getContainingFile();\n      if (!otherFile.equals(workingFile)) {\n        String message = RefactoringBundle.message(\"variable.is.referenced.in.multiple.files\", localName);\n        CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n        return;\n      }\n    }\n\n    for (final PsiElement ref : refsToInline) {\n      final PsiElement[] defs = DefUseUtil.getDefs(containerBlock, local, ref);\n      boolean isSameDefinition = true;\n      for (PsiElement def : defs) {\n        isSameDefinition &= isSameDefinition(def, defToInline);\n      }\n      if (!isSameDefinition) {\n        highlightManager.addOccurrenceHighlights(editor, defs, writeAttributes, true, null);\n        highlightManager.addOccurrenceHighlights(editor, new PsiElement[]{ref}, attributes, true, null);\n        String message =\n          RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"variable.is.accessed.for.writing.and.used.with.inlined\", localName));\n        CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n        WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n        return;\n      }\n    }\n\n    if (checkRefsInAugmentedAssignmentOrUnaryModified(refsToInline, project, editor, localName)) {\n      return;\n    }\n\n    if (editor != null && !ApplicationManager.getApplication().isUnitTestMode()) {\n      // TODO : check if initializer uses fieldNames that possibly will be hidden by other\n      // locals with the same names after inlining\n      highlightManager.addOccurrenceHighlights(\n        editor,\n        refsToInline,\n        attributes, true, null\n      );\n      int occurrencesCount = refsToInline.length;\n      String occurencesString = RefactoringBundle.message(\"occurences.string\", occurrencesCount);\n      final String promptKey = isInliningVariableInitializer(defToInline)\n                               ? \"inline.local.variable.prompt\" : \"inline.local.variable.definition.prompt\";\n      final String question = RefactoringBundle.message(promptKey, localName) + \" \" + occurencesString;\n      RefactoringMessageDialog dialog = new RefactoringMessageDialog(\n        REFACTORING_NAME,\n        question,\n        HelpID.INLINE_VARIABLE,\n        \"OptionPane.questionIcon\",\n        true,\n        project);\n      dialog.show();\n      if (!dialog.isOK()){\n        WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n        return;\n      }\n    }\n\n    final Runnable runnable = new Runnable() {\n      public void run() {\n        try{\n          PsiExpression[] exprs = new PsiExpression[refsToInline.length];\n          for(int idx = 0; idx < refsToInline.length; idx++){\n            PsiJavaCodeReferenceElement refElement = (PsiJavaCodeReferenceElement)refsToInline[idx];\n            exprs[idx] = InlineUtil.inlineVariable(local, defToInline, refElement);\n          }\n\n          if (!isInliningVariableInitializer(defToInline)) {\n            defToInline.getParent().delete();\n          } else {\n            defToInline.delete();\n          }\n\n          if (ReferencesSearch.search(local).findFirst() == null) {\n            QuickFixFactory.getInstance().createRemoveUnusedVariableFix(local).invoke(project, editor, local.getContainingFile());\n          }\n\n          if (editor != null && !ApplicationManager.getApplication().isUnitTestMode()) {\n            highlightManager.addOccurrenceHighlights(editor, exprs, attributes, true, null);\n            WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n          }\n\n          for (final PsiExpression expr : exprs) {\n            InlineUtil.tryToInlineArrayCreationForVarargs(expr);\n          }\n        }\n        catch (IncorrectOperationException e){\n          LOG.error(e);\n        }\n      }\n    };\n\n    CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n      public void run() {\n        ApplicationManager.getApplication().runWriteAction(runnable);\n      }\n    }, RefactoringBundle.message(\"inline.command\", localName), null);\n  }","id":39990,"modified_method":"/**\n   * should be called in AtomicAction\n   */\n  public static void invoke(@NotNull final Project project, final Editor editor, final PsiLocalVariable local, PsiReferenceExpression refExpr) {\n    if (!CommonRefactoringUtil.checkReadOnlyStatus(project, local)) return;\n\n    final HighlightManager highlightManager = HighlightManager.getInstance(project);\n\n    final String localName = local.getName();\n\n    final Query<PsiReference> query = ReferencesSearch.search(local, GlobalSearchScope.allScope(project), false);\n    if (query.findFirst() == null){\n      LOG.assertTrue(refExpr == null);\n      String message = RefactoringBundle.message(\"variable.is.never.used\", localName);\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n\n    final PsiClass containingClass = PsiTreeUtil.getParentOfType(local, PsiClass.class);\n    final List<PsiClass> innerClassesWithUsages = new ArrayList<PsiClass>();\n    final List<PsiElement> innerClassUsages = new ArrayList<PsiElement>();\n    query.forEach(new Processor<PsiReference>() {\n      public boolean process(final PsiReference psiReference) {\n        final PsiElement element = psiReference.getElement();\n        final PsiClass psiClass = PsiTreeUtil.getParentOfType(element, PsiClass.class);\n        if (psiClass != containingClass) {\n          innerClassesWithUsages.add(psiClass);\n          innerClassUsages.add(element);\n        }\n        return true;\n      }\n    });\n\n    final PsiCodeBlock containerBlock = PsiTreeUtil.getParentOfType(local, PsiCodeBlock.class);\n    LOG.assertTrue(containerBlock != null);\n\n    final PsiExpression defToInline = innerClassesWithUsages.isEmpty()\n                                      ? getDefToInline(local, refExpr, containerBlock)\n                                      : getDefToInline(local, innerClassesWithUsages.get(0), containerBlock);\n    if (defToInline == null){\n      final String key = refExpr == null ? \"variable.has.no.initializer\" : \"variable.has.no.dominating.definition\";\n      String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(key, localName));\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n\n    final List<PsiElement> refsToInlineList = new ArrayList<PsiElement>();\n    Collections.addAll(refsToInlineList, DefUseUtil.getRefs(containerBlock, local, defToInline));\n    for (PsiElement innerClassUsage : innerClassUsages) {\n      if (!refsToInlineList.contains(innerClassUsage)) {\n        refsToInlineList.add(innerClassUsage);\n      }\n    }\n    if (refsToInlineList.size() == 0) {\n      String message = RefactoringBundle.message(\"variable.is.never.used.before.modification\", localName);\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n    final PsiElement[] refsToInline = refsToInlineList.toArray(new PsiElement[refsToInlineList.size()]);\n\n    EditorColorsManager manager = EditorColorsManager.getInstance();\n    final TextAttributes attributes = manager.getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES);\n    final TextAttributes writeAttributes = manager.getGlobalScheme().getAttributes(EditorColors.WRITE_SEARCH_RESULT_ATTRIBUTES);\n    if (refExpr != null && PsiUtil.isAccessedForReading(refExpr) && ArrayUtil.find(refsToInline, refExpr) < 0) {\n      final PsiElement[] defs = DefUseUtil.getDefs(containerBlock, local, refExpr);\n      LOG.assertTrue(defs.length > 0);\n      highlightManager.addOccurrenceHighlights(editor, defs, attributes, true, null);\n      String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"variable.is.accessed.for.writing\", localName));\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n      return;\n    }\n\n    PsiFile workingFile = local.getContainingFile();\n    for (PsiElement ref : refsToInline) {\n      final PsiFile otherFile = ref.getContainingFile();\n      if (!otherFile.equals(workingFile)) {\n        String message = RefactoringBundle.message(\"variable.is.referenced.in.multiple.files\", localName);\n        CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n        return;\n      }\n    }\n\n    for (final PsiElement ref : refsToInline) {\n      final PsiElement[] defs = DefUseUtil.getDefs(containerBlock, local, ref);\n      boolean isSameDefinition = true;\n      for (PsiElement def : defs) {\n        isSameDefinition &= isSameDefinition(def, defToInline);\n      }\n      if (!isSameDefinition) {\n        highlightManager.addOccurrenceHighlights(editor, defs, writeAttributes, true, null);\n        highlightManager.addOccurrenceHighlights(editor, new PsiElement[]{ref}, attributes, true, null);\n        String message =\n          RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"variable.is.accessed.for.writing.and.used.with.inlined\", localName));\n        CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n        WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n        return;\n      }\n    }\n\n    final PsiElement writeAccess = checkRefsInAugmentedAssignmentOrUnaryModified(refsToInline);\n    if (writeAccess != null) {\n      HighlightManager.getInstance(project).addOccurrenceHighlights(editor, new PsiElement[]{writeAccess}, writeAttributes, true, null);\n      String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"variable.is.accessed.for.writing\", localName));\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n      return;\n    }\n\n    if (editor != null && !ApplicationManager.getApplication().isUnitTestMode()) {\n      // TODO : check if initializer uses fieldNames that possibly will be hidden by other\n      // locals with the same names after inlining\n      highlightManager.addOccurrenceHighlights(\n        editor,\n        refsToInline,\n        attributes, true, null\n      );\n      int occurrencesCount = refsToInline.length;\n      String occurencesString = RefactoringBundle.message(\"occurences.string\", occurrencesCount);\n      final String promptKey = isInliningVariableInitializer(defToInline)\n                               ? \"inline.local.variable.prompt\" : \"inline.local.variable.definition.prompt\";\n      final String question = RefactoringBundle.message(promptKey, localName) + \" \" + occurencesString;\n      RefactoringMessageDialog dialog = new RefactoringMessageDialog(\n        REFACTORING_NAME,\n        question,\n        HelpID.INLINE_VARIABLE,\n        \"OptionPane.questionIcon\",\n        true,\n        project);\n      dialog.show();\n      if (!dialog.isOK()){\n        WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n        return;\n      }\n    }\n\n    final Runnable runnable = new Runnable() {\n      public void run() {\n        try{\n          PsiExpression[] exprs = new PsiExpression[refsToInline.length];\n          for(int idx = 0; idx < refsToInline.length; idx++){\n            PsiJavaCodeReferenceElement refElement = (PsiJavaCodeReferenceElement)refsToInline[idx];\n            exprs[idx] = InlineUtil.inlineVariable(local, defToInline, refElement);\n          }\n\n          if (!isInliningVariableInitializer(defToInline)) {\n            defToInline.getParent().delete();\n          } else {\n            defToInline.delete();\n          }\n\n          if (ReferencesSearch.search(local).findFirst() == null) {\n            QuickFixFactory.getInstance().createRemoveUnusedVariableFix(local).invoke(project, editor, local.getContainingFile());\n          }\n\n          if (editor != null && !ApplicationManager.getApplication().isUnitTestMode()) {\n            highlightManager.addOccurrenceHighlights(editor, exprs, attributes, true, null);\n            WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n          }\n\n          for (final PsiExpression expr : exprs) {\n            InlineUtil.tryToInlineArrayCreationForVarargs(expr);\n          }\n        }\n        catch (IncorrectOperationException e){\n          LOG.error(e);\n        }\n      }\n    };\n\n    CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n      public void run() {\n        ApplicationManager.getApplication().runWriteAction(runnable);\n      }\n    }, RefactoringBundle.message(\"inline.command\", localName), null);\n  }","commit_id":"c0e2a0c3b031e76f2217fbaeb1868910abee5f35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void inlineElement(final Project project, final Editor editor, final PsiElement psiElement) {\n    final PsiParameter psiParameter = (PsiParameter) psiElement;\n    final PsiParameterList parameterList = (PsiParameterList) psiParameter.getParent();\n    if (!(parameterList.getParent() instanceof PsiMethod)) {\n      return;\n    }\n    final int index = parameterList.getParameterIndex(psiParameter);\n    final PsiMethod method = (PsiMethod) parameterList.getParent();\n\n    String errorMessage = getCannotInlineMessage(psiParameter, method);\n    if (errorMessage != null) {\n      CommonRefactoringUtil.showErrorHint(project, editor, errorMessage, RefactoringBundle.message(\"inline.parameter.refactoring\"), null);\n      return;\n    }\n\n    final Ref<PsiExpression> refInitializer = new Ref<PsiExpression>();\n    final Ref<PsiExpression> refConstantInitializer = new Ref<PsiExpression>();\n    final Ref<PsiCallExpression> refMethodCall = new Ref<PsiCallExpression>();\n    final List<PsiReference> occurrences = new ArrayList<PsiReference>();\n    final Collection<PsiFile> containingFiles = new HashSet<PsiFile>();\n    containingFiles.add(psiParameter.getContainingFile());\n    boolean result = ReferencesSearch.search(method).forEach(new Processor<PsiReference>() {\n      public boolean process(final PsiReference psiReference) {\n        PsiElement element = psiReference.getElement();\n        final PsiElement parent = element.getParent();\n        if (parent instanceof PsiCallExpression) {\n          final PsiCallExpression methodCall = (PsiCallExpression)parent;\n          occurrences.add(psiReference);\n          containingFiles.add(element.getContainingFile());\n          final PsiExpression[] expressions = methodCall.getArgumentList().getExpressions();\n          if (expressions.length <= index) return false;\n          PsiExpression argument = expressions[index];\n          if (!refInitializer.isNull()) {\n            return argument != null\n                   && PsiEquivalenceUtil.areElementsEquivalent(refInitializer.get(), argument)\n                   && PsiEquivalenceUtil.areElementsEquivalent(refMethodCall.get(), methodCall);\n          }\n          if (InlineToAnonymousConstructorProcessor.isConstant(argument) || getReferencedFinalField(argument) != null) {\n            if (refConstantInitializer.isNull()) {\n              refConstantInitializer.set(argument);\n            }\n            else if (!isSameConstant(argument, refConstantInitializer.get())) {\n              return false;\n            }\n          }\n          else {\n            if (!refConstantInitializer.isNull()) return false;\n            refInitializer.set(argument);\n            refMethodCall.set(methodCall);\n          }\n        }\n        return true;\n      }\n    });\n    if (occurrences.isEmpty()) {\n      CommonRefactoringUtil.showErrorHint(project, editor, \"Method has no usages\", RefactoringBundle.message(\"inline.parameter.refactoring\"), null);\n      return;\n    }\n    if (!result) {\n      CommonRefactoringUtil.showErrorHint(project, editor, \"Cannot find constant initializer for parameter\", RefactoringBundle.message(\"inline.parameter.refactoring\"), null);\n      return;\n    }\n    if (!refInitializer.isNull()) {\n      if (ApplicationManager.getApplication().isUnitTestMode()) {\n        final InlineParameterExpressionProcessor processor =\n          new InlineParameterExpressionProcessor(refMethodCall.get(), method, psiParameter, refInitializer.get(),\n                                                 method.getProject().getUserData(\n                                                   InlineParameterExpressionProcessor.CREATE_LOCAL_FOR_TESTS));\n        processor.run();\n      }\n      else {\n        final boolean createLocal = ReferencesSearch.search(psiParameter).findAll().size() > 1;\n        InlineParameterDialog dlg = new InlineParameterDialog(refMethodCall.get(), method, psiParameter, refInitializer.get(), createLocal);\n        dlg.show();\n      }\n      return;\n    }\n    if (refConstantInitializer.isNull()) {\n      CommonRefactoringUtil.showErrorHint(project, editor, \"Cannot find constant initializer for parameter\", RefactoringBundle.message(\"inline.parameter.refactoring\"), null);\n      return;\n    }\n\n    final Ref<Boolean> isNotConstantAccessible = new Ref<Boolean>();\n    final PsiExpression constantExpression = refConstantInitializer.get();\n    constantExpression.accept(new JavaRecursiveElementVisitor(){\n      @Override\n      public void visitReferenceExpression(PsiReferenceExpression expression) {\n        super.visitReferenceExpression(expression);\n        final PsiElement resolved = expression.resolve();\n        if (resolved instanceof PsiMember && !PsiUtil.isAccessible((PsiMember)resolved, method, null)) {\n          isNotConstantAccessible.set(Boolean.TRUE);\n        }\n      }\n    });\n    if (!isNotConstantAccessible.isNull() && isNotConstantAccessible.get()) {\n      CommonRefactoringUtil.showErrorHint(project, editor, \"Constant initializer is not accessible in method body\", RefactoringBundle.message(\"inline.parameter.refactoring\"), null);\n      return;\n    }\n\n    if (!ApplicationManager.getApplication().isUnitTestMode()) {\n      String occurencesString = RefactoringBundle.message(\"occurences.string\", occurrences.size());\n      String question = RefactoringBundle.message(\"inline.parameter.confirmation\", psiParameter.getName(),\n                                                  constantExpression.getText()) + \" \" + occurencesString;\n      RefactoringMessageDialog dialog = new RefactoringMessageDialog(\n        REFACTORING_NAME,\n        question,\n        HelpID.INLINE_VARIABLE,\n        \"OptionPane.questionIcon\",\n        true,\n        project);\n      dialog.show();\n      if (!dialog.isOK()){\n        return;\n      }\n    }\n\n    new WriteCommandAction(project,\n                           RefactoringBundle.message(\"inline.parameter.command.name\", psiParameter.getName()),\n                           containingFiles.toArray(new PsiFile[containingFiles.size()]) ) {\n      protected void run(final Result result) throws Throwable {\n        SameParameterValueInspection.InlineParameterValueFix.inlineSameParameterValue(method, psiParameter, constantExpression);\n      }\n\n      protected UndoConfirmationPolicy getUndoConfirmationPolicy() {\n        return UndoConfirmationPolicy.DEFAULT;\n      }\n    }.execute();\n  }","id":39991,"modified_method":"public void inlineElement(final Project project, final Editor editor, final PsiElement psiElement) {\n    final PsiParameter psiParameter = (PsiParameter) psiElement;\n    final PsiParameterList parameterList = (PsiParameterList) psiParameter.getParent();\n    if (!(parameterList.getParent() instanceof PsiMethod)) {\n      return;\n    }\n    final int index = parameterList.getParameterIndex(psiParameter);\n    final PsiMethod method = (PsiMethod) parameterList.getParent();\n\n    String errorMessage = getCannotInlineMessage(psiParameter, method);\n    if (errorMessage != null) {\n      CommonRefactoringUtil.showErrorHint(project, editor, errorMessage, RefactoringBundle.message(\"inline.parameter.refactoring\"), null);\n      return;\n    }\n\n    final Ref<PsiExpression> refInitializer = new Ref<PsiExpression>();\n    final Ref<PsiExpression> refConstantInitializer = new Ref<PsiExpression>();\n    final Ref<PsiCallExpression> refMethodCall = new Ref<PsiCallExpression>();\n    final List<PsiReference> occurrences = new ArrayList<PsiReference>();\n    final Collection<PsiFile> containingFiles = new HashSet<PsiFile>();\n    containingFiles.add(psiParameter.getContainingFile());\n    boolean result = ReferencesSearch.search(method).forEach(new Processor<PsiReference>() {\n      public boolean process(final PsiReference psiReference) {\n        PsiElement element = psiReference.getElement();\n        final PsiElement parent = element.getParent();\n        if (parent instanceof PsiCallExpression) {\n          final PsiCallExpression methodCall = (PsiCallExpression)parent;\n          occurrences.add(psiReference);\n          containingFiles.add(element.getContainingFile());\n          final PsiExpression[] expressions = methodCall.getArgumentList().getExpressions();\n          if (expressions.length <= index) return false;\n          PsiExpression argument = expressions[index];\n          if (!refInitializer.isNull()) {\n            return argument != null\n                   && PsiEquivalenceUtil.areElementsEquivalent(refInitializer.get(), argument)\n                   && PsiEquivalenceUtil.areElementsEquivalent(refMethodCall.get(), methodCall);\n          }\n          if (InlineToAnonymousConstructorProcessor.isConstant(argument) || getReferencedFinalField(argument) != null) {\n            if (refConstantInitializer.isNull()) {\n              refConstantInitializer.set(argument);\n            }\n            else if (!isSameConstant(argument, refConstantInitializer.get())) {\n              return false;\n            }\n          }\n          else {\n            if (!refConstantInitializer.isNull()) return false;\n            refInitializer.set(argument);\n            refMethodCall.set(methodCall);\n          }\n        }\n        return true;\n      }\n    });\n    if (occurrences.isEmpty()) {\n      final int offset = editor.getCaretModel().getOffset();\n      final PsiElement refExpr = psiElement.getContainingFile().findElementAt(offset);\n      final PsiCodeBlock codeBlock = PsiTreeUtil.getParentOfType(refExpr, PsiCodeBlock.class);\n      if (codeBlock != null) {\n        final PsiElement[] defs = DefUseUtil.getDefs(codeBlock, psiParameter, refExpr);\n        if (defs.length == 1) {\n          final PsiElement def = defs[0];\n          if (def instanceof PsiReferenceExpression && PsiUtil.isOnAssignmentLeftHand((PsiExpression)def)) {\n            final PsiExpression rExpr = ((PsiAssignmentExpression)def.getParent()).getRExpression();\n            if (rExpr != null) {\n              final PsiElement[] refs = DefUseUtil.getRefs(codeBlock, psiParameter, refExpr);\n\n              if (InlineLocalHandler.checkRefsInAugmentedAssignmentOrUnaryModified(refs) == null) {\n                new WriteCommandAction(project) {\n                  @Override\n                  protected void run(Result result) throws Throwable {\n                    for (final PsiElement ref : refs) {\n                      InlineUtil.inlineVariable(psiParameter, rExpr, (PsiJavaCodeReferenceElement)ref);\n                    }\n                    def.getParent().delete();\n                  }\n                }.execute();\n                return;\n              }\n            }\n          }\n        }\n      }\n      CommonRefactoringUtil\n        .showErrorHint(project, editor, \"Method has no usages\", RefactoringBundle.message(\"inline.parameter.refactoring\"), null);\n      return;\n    }\n    if (!result) {\n      CommonRefactoringUtil.showErrorHint(project, editor, \"Cannot find constant initializer for parameter\", RefactoringBundle.message(\"inline.parameter.refactoring\"), null);\n      return;\n    }\n    if (!refInitializer.isNull()) {\n      if (ApplicationManager.getApplication().isUnitTestMode()) {\n        final InlineParameterExpressionProcessor processor =\n          new InlineParameterExpressionProcessor(refMethodCall.get(), method, psiParameter, refInitializer.get(),\n                                                 method.getProject().getUserData(\n                                                   InlineParameterExpressionProcessor.CREATE_LOCAL_FOR_TESTS));\n        processor.run();\n      }\n      else {\n        final boolean createLocal = ReferencesSearch.search(psiParameter).findAll().size() > 1;\n        InlineParameterDialog dlg = new InlineParameterDialog(refMethodCall.get(), method, psiParameter, refInitializer.get(), createLocal);\n        dlg.show();\n      }\n      return;\n    }\n    if (refConstantInitializer.isNull()) {\n      CommonRefactoringUtil.showErrorHint(project, editor, \"Cannot find constant initializer for parameter\", RefactoringBundle.message(\"inline.parameter.refactoring\"), null);\n      return;\n    }\n\n    final Ref<Boolean> isNotConstantAccessible = new Ref<Boolean>();\n    final PsiExpression constantExpression = refConstantInitializer.get();\n    constantExpression.accept(new JavaRecursiveElementVisitor(){\n      @Override\n      public void visitReferenceExpression(PsiReferenceExpression expression) {\n        super.visitReferenceExpression(expression);\n        final PsiElement resolved = expression.resolve();\n        if (resolved instanceof PsiMember && !PsiUtil.isAccessible((PsiMember)resolved, method, null)) {\n          isNotConstantAccessible.set(Boolean.TRUE);\n        }\n      }\n    });\n    if (!isNotConstantAccessible.isNull() && isNotConstantAccessible.get()) {\n      CommonRefactoringUtil.showErrorHint(project, editor, \"Constant initializer is not accessible in method body\", RefactoringBundle.message(\"inline.parameter.refactoring\"), null);\n      return;\n    }\n\n    if (!ApplicationManager.getApplication().isUnitTestMode()) {\n      String occurencesString = RefactoringBundle.message(\"occurences.string\", occurrences.size());\n      String question = RefactoringBundle.message(\"inline.parameter.confirmation\", psiParameter.getName(),\n                                                  constantExpression.getText()) + \" \" + occurencesString;\n      RefactoringMessageDialog dialog = new RefactoringMessageDialog(\n        REFACTORING_NAME,\n        question,\n        HelpID.INLINE_VARIABLE,\n        \"OptionPane.questionIcon\",\n        true,\n        project);\n      dialog.show();\n      if (!dialog.isOK()){\n        return;\n      }\n    }\n\n    new WriteCommandAction(project,\n                           RefactoringBundle.message(\"inline.parameter.command.name\", psiParameter.getName()),\n                           containingFiles.toArray(new PsiFile[containingFiles.size()]) ) {\n      protected void run(final Result result) throws Throwable {\n        SameParameterValueInspection.InlineParameterValueFix.inlineSameParameterValue(method, psiParameter, constantExpression);\n      }\n\n      protected UndoConfirmationPolicy getUndoConfirmationPolicy() {\n        return UndoConfirmationPolicy.DEFAULT;\n      }\n    }.execute();\n  }","commit_id":"c0e2a0c3b031e76f2217fbaeb1868910abee5f35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean invoke(final PsiElement element, @Nullable Editor editor, final InlineHandler languageSpecific) {\n    final PsiReference invocationReference = editor != null ? TargetElementUtilBase.findReference(editor) : null;\n    final InlineHandler.Settings settings = languageSpecific.prepareInlineElement(element, editor, invocationReference != null);\n    if (settings == null || settings == InlineHandler.Settings.CANNOT_INLINE_SETTINGS) {\n      return settings != null;\n    }\n\n    final Collection<PsiReference> allReferences;\n\n    if (settings.isOnlyOneReferenceToInline()) {\n      allReferences = Collections.singleton(invocationReference);\n    } else {\n      final Ref<Collection<PsiReference>> usagesRef = new Ref<Collection<PsiReference>>();\n      ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable() {\n        @Override\n        public void run() {\n          usagesRef.set(ReferencesSearch.search(element).findAll());\n        }\n      }, \"Find Usages\", false, element.getProject());\n      allReferences = usagesRef.get();\n    }\n\n    final Map<Language, InlineHandler.Inliner> inliners = new HashMap<Language, InlineHandler.Inliner>();\n\n    final MultiMap<PsiElement, String> conflicts = new MultiMap<PsiElement, String>();\n    for (PsiReference ref : allReferences) {\n      final Language language = ref.getElement().getLanguage();\n      if (inliners.containsKey(language)) continue;\n\n      InlineHandler.Inliner inliner = null;\n      final List<InlineHandler> handlers = InlineHandlers.getInlineHandlers(language);\n      for (InlineHandler handler : handlers) {\n        inliner = handler.createInliner(element, settings);\n        if (inliner != null) {\n          inliners.put(language, inliner);\n          break;\n        }\n      }\n      if (inliner == null) {\n        conflicts.putValue(null, \"Cannot inline reference from \" + language.getID());\n      }\n    }\n\n    for (PsiReference reference : allReferences) {\n      collectConflicts(reference, element, inliners, conflicts);\n    }\n\n    final Project project = element.getProject();\n    if (!conflicts.isEmpty()) {\n      if (ApplicationManager.getApplication().isUnitTestMode()) {\n        throw new BaseRefactoringProcessor.ConflictsInTestsException(conflicts.values());\n      } else {\n        final ConflictsDialog conflictsDialog = new ConflictsDialog(project, conflicts);\n        conflictsDialog.show();\n        if (!conflictsDialog.isOK()){\n          return true;\n        }\n      }\n    }\n\n    HashSet<PsiElement> elements = new HashSet<PsiElement>();\n    for (PsiReference reference : allReferences) {\n      PsiElement refElement = reference.getElement();\n      if (refElement != null) {\n        elements.add(refElement);\n      }\n    }\n    if (!settings.isOnlyOneReferenceToInline()) {\n      elements.add(element);\n    }\n\n    if (!CommonRefactoringUtil.checkReadOnlyStatusRecursively(project, elements, true)) {\n      return true;\n    }\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      public void run() {\n        final String subj = element instanceof PsiNamedElement ? ((PsiNamedElement)element).getName() : \"element\";\n\n        CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n          public void run() {\n            final PsiReference[] references = sortDepthFirstRightLeftOrder(allReferences);\n\n\n            final UsageInfo[] usages = new UsageInfo[references.length];\n            for (int i = 0; i < references.length; i++) {\n              usages[i] = new UsageInfo(references[i]);\n            }\n\n            for (UsageInfo usage : usages) {\n              inlineReference(usage, element, inliners);\n            }\n\n            if (!settings.isOnlyOneReferenceToInline()) {\n              languageSpecific.removeDefinition(element, settings);\n            }\n          }\n        }, RefactoringBundle.message(\"inline.command\", subj), null);\n      }\n    });\n    return true;\n  }","id":39992,"modified_method":"public static boolean invoke(final PsiElement element, @Nullable Editor editor, final InlineHandler languageSpecific) {\n    final PsiReference invocationReference = editor != null ? TargetElementUtilBase.findReference(editor) : null;\n    final InlineHandler.Settings settings = languageSpecific.prepareInlineElement(element, editor, invocationReference != null);\n    if (settings == null || settings == InlineHandler.Settings.CANNOT_INLINE_SETTINGS) {\n      return settings != null;\n    }\n\n    final Collection<PsiReference> allReferences;\n\n    if (settings.isOnlyOneReferenceToInline()) {\n      allReferences = Collections.singleton(invocationReference);\n    } else {\n      final Ref<Collection<PsiReference>> usagesRef = new Ref<Collection<PsiReference>>();\n      ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable() {\n        @Override\n        public void run() {\n          final ReferencesToInlineSearcher searcher = ReferencesToInlineSearchers.getSearcher(element.getLanguage());\n          if (searcher != null) {\n            usagesRef.set(searcher.findReferences(element));\n          }\n          else {\n            usagesRef.set(ReferencesSearch.search(element).findAll());\n          }\n        }\n      }, \"Find Usages\", false, element.getProject());\n      allReferences = usagesRef.get();\n    }\n\n    final Map<Language, InlineHandler.Inliner> inliners = new HashMap<Language, InlineHandler.Inliner>();\n\n    final MultiMap<PsiElement, String> conflicts = new MultiMap<PsiElement, String>();\n    for (PsiReference ref : allReferences) {\n      final Language language = ref.getElement().getLanguage();\n      if (inliners.containsKey(language)) continue;\n\n      InlineHandler.Inliner inliner = null;\n      final List<InlineHandler> handlers = InlineHandlers.getInlineHandlers(language);\n      for (InlineHandler handler : handlers) {\n        inliner = handler.createInliner(element, settings);\n        if (inliner != null) {\n          inliners.put(language, inliner);\n          break;\n        }\n      }\n      if (inliner == null) {\n        conflicts.putValue(null, \"Cannot inline reference from \" + language.getID());\n      }\n    }\n\n    for (PsiReference reference : allReferences) {\n      collectConflicts(reference, element, inliners, conflicts);\n    }\n\n    final Project project = element.getProject();\n    if (!conflicts.isEmpty()) {\n      if (ApplicationManager.getApplication().isUnitTestMode()) {\n        throw new BaseRefactoringProcessor.ConflictsInTestsException(conflicts.values());\n      } else {\n        final ConflictsDialog conflictsDialog = new ConflictsDialog(project, conflicts);\n        conflictsDialog.show();\n        if (!conflictsDialog.isOK()){\n          return true;\n        }\n      }\n    }\n\n    HashSet<PsiElement> elements = new HashSet<PsiElement>();\n    for (PsiReference reference : allReferences) {\n      PsiElement refElement = reference.getElement();\n      if (refElement != null) {\n        elements.add(refElement);\n      }\n    }\n    if (!settings.isOnlyOneReferenceToInline()) {\n      elements.add(element);\n    }\n\n    if (!CommonRefactoringUtil.checkReadOnlyStatusRecursively(project, elements, true)) {\n      return true;\n    }\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      public void run() {\n        final String subj = element instanceof PsiNamedElement ? ((PsiNamedElement)element).getName() : \"element\";\n\n        CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n          public void run() {\n            final PsiReference[] references = sortDepthFirstRightLeftOrder(allReferences);\n\n\n            final UsageInfo[] usages = new UsageInfo[references.length];\n            for (int i = 0; i < references.length; i++) {\n              usages[i] = new UsageInfo(references[i]);\n            }\n\n            for (UsageInfo usage : usages) {\n              inlineReference(usage, element, inliners);\n            }\n\n            if (!settings.isOnlyOneReferenceToInline()) {\n              languageSpecific.removeDefinition(element, settings);\n            }\n          }\n        }, RefactoringBundle.message(\"inline.command\", subj), null);\n      }\n    });\n    return true;\n  }","commit_id":"a12908633255d17903100b5f45d402411d8822ac","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void removeDefinition(final PsiElement element, Settings settings) {\n    final PsiElement owner = element.getParent().getParent();\n    if (element instanceof GrVariable &&\n        owner instanceof GrVariableDeclarationOwner) {\n      ((GrVariableDeclarationOwner) owner).removeVariable(((GrVariable) element));\n    }\n    if (element instanceof GrMethod) {\n      element.delete();\n    }\n  }","id":39993,"modified_method":"public void removeDefinition(PsiElement element, Settings settings) {\n    if (element instanceof GrAccessorMethod) {\n      element = ((GrAccessorMethod)element).getProperty();\n    }\n    final PsiElement owner = element.getParent().getParent();\n    if (element instanceof GrVariable && owner instanceof GrVariableDeclarationOwner) {\n      ((GrVariableDeclarationOwner)owner).removeVariable(((GrVariable)element));\n    }\n    if (element instanceof GrMethod) {\n      element.delete();\n    }\n  }","commit_id":"a12908633255d17903100b5f45d402411d8822ac","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public Settings prepareInlineElement(final PsiElement element, Editor editor, boolean invokedOnReference) {\n    if (element instanceof GrVariable) {\n      if (GroovyRefactoringUtil.isLocalVariable((GrVariable)element)) {\n        return GroovyInlineVariableUtil.inlineLocalVariableSettings((GrVariable)element, editor);\n      } else if (element instanceof GrField) {\n        return GroovyInlineVariableUtil.inlineFieldSettings((GrField)element, editor);\n      }\n    } else if (element instanceof GrMethod) {\n      return GroovyInlineMethodUtil.inlineMethodSettings((GrMethod) element, editor, invokedOnReference);\n    } else {\n      Application application = ApplicationManager.getApplication();\n      if (!application.isUnitTestMode()) {\n        String message = GroovyRefactoringBundle.message(\"wrong.element.to.inline\");\n        CommonRefactoringUtil.showErrorHint(element.getProject(), editor, message, INLINE_REFACTORING, HelpID.INLINE_VARIABLE);\n      }\n      if (element instanceof GrTypeDefinition || element instanceof GrClassSubstitution) {\n        return null;      //todo inline to anonymous class, push members from super class\n      }\n    }\n\n    if (element instanceof PsiMember) {\n      //dummy, todo implement\n      return new Settings() {\n        public boolean isOnlyOneReferenceToInline() {\n          return true;\n        }\n      };\n    }\n    return null;\n  }","id":39994,"modified_method":"@Nullable\n  public Settings prepareInlineElement(final PsiElement element, Editor editor, boolean invokedOnReference) {\n    if (element instanceof GrVariable) {\n      if (GroovyRefactoringUtil.isLocalVariable((GrVariable)element)) {\n        return GroovyInlineVariableUtil.inlineLocalVariableSettings((GrVariable)element, editor);\n      }\n      else if (element instanceof GrField) {\n        return GroovyInlineVariableUtil.inlineFieldSettings((GrField)element, editor, invokedOnReference);\n      }\n    }\n    else if (element instanceof GrAccessorMethod) {\n      return GroovyInlineVariableUtil.inlineFieldSettings(((GrAccessorMethod)element).getProperty(), editor, invokedOnReference);\n    }\n    else if (element instanceof GrMethod) {\n      return GroovyInlineMethodUtil.inlineMethodSettings((GrMethod)element, editor, invokedOnReference);\n    }\n    else {\n      if (element instanceof GrTypeDefinition || element instanceof GrClassSubstitution) {\n        return null;      //todo inline to anonymous class, push members from super class\n      }\n    }\n\n    if (element instanceof PsiMember) {\n      //dummy, todo implement\n      return new Settings() {\n        public boolean isOnlyOneReferenceToInline() {\n          return true;\n        }\n      };\n    }\n    return null;\n  }","commit_id":"a12908633255d17903100b5f45d402411d8822ac","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public Inliner createInliner(PsiElement element, Settings settings) {\n    if (element instanceof GrVariable) {\n      if (GroovyRefactoringUtil.isLocalVariable((GrVariable)element)) {\n        return GroovyInlineVariableUtil.createInlinerForVariable(((GrVariable)element));\n      }\n      else if (element instanceof GrField) {\n        return GroovyInlineVariableUtil.createInlinerForVariable(((GrVariable)element));\n      }\n    }\n    if (element instanceof GrMethod) {\n      return new GroovyMethodInliner((GrMethod) element);\n    }\n    return null;\n  }","id":39995,"modified_method":"@Nullable\n  public Inliner createInliner(PsiElement element, Settings settings) {\n    if (element instanceof GrVariable) {\n      return GroovyInlineVariableUtil.createInlinerForVariable(((GrVariable)element));\n    }\n    if (element instanceof GrAccessorMethod) {\n      return GroovyInlineVariableUtil.createInlinerForVariable(((GrAccessorMethod)element).getProperty());\n    }\n    if (element instanceof GrMethod) {\n      return new GroovyMethodInliner((GrMethod)element);\n    }\n    return null;\n  }","commit_id":"a12908633255d17903100b5f45d402411d8822ac","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static InlineHandler.Settings inlineMethodSettings(GrMethod method, Editor editor, boolean invokedOnReference) {\n\n    final Project project = method.getProject();\n    if (method.isConstructor()) {\n      String message = GroovyRefactoringBundle.message(\"refactoring.cannot.be.applied.to.constructors\", REFACTORING_NAME);\n      showErrorMessage(message, project, editor);\n      return null;\n    }\n\n    if (invokedOnReference) {\n      PsiReference reference = editor != null ? TargetElementUtil.findReference(editor, editor.getCaretModel().getOffset()) : null;\n      if (reference == null) return null;\n\n      PsiElement element = reference.getElement();\n\n      if (element.getContainingFile() instanceof GroovyFile) {\n        if (!(isStaticMethod(method) || areInSameClass(element, method))) { // todo implement for other cases\n//        showErrorMessage(\"Other class support will be implemented soon\", myProject);\n//        return null;\n        }\n      }\n\n      if (!(element instanceof GrExpression && element.getParent() instanceof GrCallExpression)) {\n        String message = GroovyRefactoringBundle.message(\"refactoring.is.available.only.for.method.calls\", REFACTORING_NAME);\n        showErrorMessage(message, project, editor);\n        return null;\n      }\n\n      GrCallExpression call = (GrCallExpression)element.getParent();\n\n      if (PsiTreeUtil.getParentOfType(element, GrParameter.class) != null) {\n        String message = GroovyRefactoringBundle.message(\"refactoring.is.not.supported.in.parameter.initializers\", REFACTORING_NAME);\n        showErrorMessage(message, project, editor);\n        return null;\n      }\n\n\n      GroovyRefactoringUtil.highlightOccurrences(project, editor, new GrExpression[]{call});\n      if (hasBadReturns(method) && !isTailMethodCall(call)) {\n        String message = GroovyRefactoringBundle\n          .message(\"refactoring.is.not.supported.when.return.statement.interrupts.the.execution.flow\", REFACTORING_NAME);\n        showErrorMessage(message, project, editor);\n        return null;\n      }\n    }\n    if (method.getBlock() == null) {\n      String message;\n      if (method.hasModifierProperty(PsiModifier.ABSTRACT)) {\n        message = GroovyRefactoringBundle.message(\"refactoring.cannot.be.applied.to.abstract.methods\", REFACTORING_NAME);\n      } else {\n        message = GroovyRefactoringBundle.message(\"refactoring.cannot.be.applied.no.sources.attached\", REFACTORING_NAME);\n      }\n      showErrorMessage(message, project, editor);\n      return null;\n    }\n\n    return inlineMethodDialogResult(method, project, invokedOnReference);\n  }","id":39996,"modified_method":"@Nullable\n  public static InlineHandler.Settings inlineMethodSettings(GrMethod method, Editor editor, boolean invokedOnReference) {\n\n    final Project project = method.getProject();\n    if (method.isConstructor()) {\n      String message = GroovyRefactoringBundle.message(\"refactoring.cannot.be.applied.to.constructors\", REFACTORING_NAME);\n      showErrorMessage(message, project, editor);\n      return InlineHandler.Settings.CANNOT_INLINE_SETTINGS;\n    }\n\n    if (invokedOnReference) {\n      PsiReference reference = editor != null ? TargetElementUtil.findReference(editor, editor.getCaretModel().getOffset()) : null;\n      if (reference == null) return InlineHandler.Settings.CANNOT_INLINE_SETTINGS;\n\n      PsiElement element = reference.getElement();\n\n      if (element.getContainingFile() instanceof GroovyFile) {\n        if (!(isStaticMethod(method) || areInSameClass(element, method))) { // todo implement for other cases\n//        showErrorMessage(\"Other class support will be implemented soon\", myProject);\n//        return null;\n        }\n      }\n\n      if (!(element instanceof GrExpression && element.getParent() instanceof GrCallExpression)) {\n        String message = GroovyRefactoringBundle.message(\"refactoring.is.available.only.for.method.calls\", REFACTORING_NAME);\n        showErrorMessage(message, project, editor);\n        return InlineHandler.Settings.CANNOT_INLINE_SETTINGS;\n      }\n\n      GrCallExpression call = (GrCallExpression)element.getParent();\n\n      if (PsiTreeUtil.getParentOfType(element, GrParameter.class) != null) {\n        String message = GroovyRefactoringBundle.message(\"refactoring.is.not.supported.in.parameter.initializers\", REFACTORING_NAME);\n        showErrorMessage(message, project, editor);\n        return InlineHandler.Settings.CANNOT_INLINE_SETTINGS;\n      }\n\n\n      GroovyRefactoringUtil.highlightOccurrences(project, editor, new GrExpression[]{call});\n      if (hasBadReturns(method) && !isTailMethodCall(call)) {\n        String message = GroovyRefactoringBundle\n          .message(\"refactoring.is.not.supported.when.return.statement.interrupts.the.execution.flow\", REFACTORING_NAME);\n        showErrorMessage(message, project, editor);\n        return InlineHandler.Settings.CANNOT_INLINE_SETTINGS;\n      }\n    }\n    if (method.getBlock() == null) {\n      String message;\n      if (method.hasModifierProperty(PsiModifier.ABSTRACT)) {\n        message = GroovyRefactoringBundle.message(\"refactoring.cannot.be.applied.to.abstract.methods\", REFACTORING_NAME);\n      } else {\n        message = GroovyRefactoringBundle.message(\"refactoring.cannot.be.applied.no.sources.attached\", REFACTORING_NAME);\n      }\n      showErrorMessage(message, project, editor);\n      return InlineHandler.Settings.CANNOT_INLINE_SETTINGS;\n    }\n\n    return inlineMethodDialogResult(method, project, invokedOnReference);\n  }","commit_id":"a12908633255d17903100b5f45d402411d8822ac","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String createVariableDefinitionText(GrParameter parameter, GrExpression expression, String varName) {\n    final PsiModifierList modifierList = parameter.getModifierList();\n    String modifiers;\n    if (modifierList != null) {\n      modifiers = modifierList.getText().trim();\n    }\n    else {\n      modifiers = \"\";\n    }\n\n    String type;\n    final GrTypeElement typeElement = parameter.getTypeElementGroovy();\n    if (typeElement != null) {\n      type = typeElement.getText();\n    }\n    else {\n      type = \"\";\n    }\n    if (modifiers.length() == 0 && type.length() == 0) {\n      modifiers = GrModifier.DEF;\n    }\n\n    return modifiers + \" \" + type + \" \" + varName + \" =  \" + expression.getText();\n  }","id":39997,"modified_method":"private static String createVariableDefinitionText(GrParameter parameter, GrExpression expression, String varName) {\n    final PsiModifierList modifierList = parameter.getModifierList();\n    String modifiers;\n    modifiers = modifierList.getText().trim();\n\n    String type;\n    final GrTypeElement typeElement = parameter.getTypeElementGroovy();\n    if (typeElement != null) {\n      type = typeElement.getText();\n    }\n    else {\n      type = \"\";\n    }\n    if (modifiers.length() == 0 && type.length() == 0) {\n      modifiers = GrModifier.DEF;\n    }\n\n    return modifiers + \" \" + type + \" \" + varName + \" =  \" + expression.getText();\n  }","commit_id":"a12908633255d17903100b5f45d402411d8822ac","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Shows dialog with question to inline\n   */\n  @Nullable\n  private static InlineHandler.Settings inlineMethodDialogResult(GrMethod method, Project project, boolean invokedOnReference) {\n    Application application = ApplicationManager.getApplication();\n    if (!application.isUnitTestMode()) {\n      final InlineMethodDialog dialog = new InlineMethodDialog(project, method, invokedOnReference, checkMethodForRecursion(method));\n\n      dialog.show();\n      if (!dialog.isOK()) {\n        WindowManager.getInstance().getStatusBar(project).setInfo(GroovyRefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n        return null;\n      } else {\n        return new InlineHandler.Settings() {\n          public boolean isOnlyOneReferenceToInline() {\n            return dialog.isInlineThisOnly();\n          }\n        };\n      }\n    }\n    return new InlineHandler.Settings() {\n      public boolean isOnlyOneReferenceToInline() {\n        return true;\n      }\n    };\n\n  }","id":39998,"modified_method":"/**\n   * Shows dialog with question to inline\n   */\n  @Nullable\n  private static InlineHandler.Settings inlineMethodDialogResult(GrMethod method, Project project, boolean invokedOnReference) {\n    Application application = ApplicationManager.getApplication();\n    if (!application.isUnitTestMode()) {\n      final InlineMethodDialog dialog = new InlineMethodDialog(project, method, invokedOnReference, checkMethodForRecursion(method));\n\n      dialog.show();\n      if (!dialog.isOK()) {\n        WindowManager.getInstance().getStatusBar(project).setInfo(GroovyRefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n        return InlineHandler.Settings.CANNOT_INLINE_SETTINGS;\n      }\n      else {\n        return new InlineHandler.Settings() {\n          public boolean isOnlyOneReferenceToInline() {\n            return dialog.isInlineThisOnly();\n          }\n        };\n      }\n    }\n    return new InlineHandler.Settings() {\n      public boolean isOnlyOneReferenceToInline() {\n        return true;\n      }\n    };\n\n  }","commit_id":"a12908633255d17903100b5f45d402411d8822ac","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  static InlineHandler.Settings inlineFieldSettings(final GrField field, Editor editor) {\n    final String localName = field.getName();\n    final Project project = field.getProject();\n\n    if (!field.hasModifierProperty(GrModifier.FINAL)) {\n      String message = RefactoringBundle.message(\"0.refactoring.is.supported.only.for.final.fields\", REFACTORING_NAME);\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_FIELD);\n      return null;\n    }\n\n    if (field.getInitializerGroovy() == null) {\n      String message = GroovyRefactoringBundle.message(\"cannot.find.a.single.definition.to.inline.field\");\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_FIELD);\n      return null;\n    }\n\n    final Collection<PsiReference> refs = ReferencesSearch.search(field).findAll();\n    ArrayList<PsiElement> exprs = new ArrayList<PsiElement>();\n    for (PsiReference ref : refs) {\n      exprs.add(ref.getElement());\n    }\n    GroovyRefactoringUtil.highlightOccurrences(project, editor, PsiUtilBase.toPsiElementArray(exprs));\n    if (refs.isEmpty()) {\n      String message = GroovyRefactoringBundle.message(\"field.is.never.used.0\", field.getName());\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_FIELD);\n      return null;\n    }\n\n    return inlineDialogResult(localName, project, refs, true, false);\n  }","id":39999,"modified_method":"@Nullable\n  static InlineHandler.Settings inlineFieldSettings(final GrField field, Editor editor, boolean invokedOnReference) {\n    final Project project = field.getProject();\n\n    if (!field.hasModifierProperty(PsiModifier.FINAL)) {\n      String message = RefactoringBundle.message(\"0.refactoring.is.supported.only.for.final.fields\", INLINE_FIELD);\n      CommonRefactoringUtil.showErrorHint(project, editor, message, INLINE_FIELD, HelpID.INLINE_FIELD);\n      return InlineHandler.Settings.CANNOT_INLINE_SETTINGS;\n    }\n\n    if (field.getInitializerGroovy() == null) {\n      String message = GroovyRefactoringBundle.message(\"cannot.find.a.single.definition.to.inline.field\");\n      CommonRefactoringUtil.showErrorHint(project, editor, message, INLINE_FIELD, HelpID.INLINE_FIELD);\n      return InlineHandler.Settings.CANNOT_INLINE_SETTINGS;\n    }\n\n    return inlineFieldDialogResult(project, field, invokedOnReference);\n  }","commit_id":"a12908633255d17903100b5f45d402411d8822ac","url":"https://github.com/JetBrains/intellij-community"}]