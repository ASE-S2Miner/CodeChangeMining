[{"original_method":"private void doRealRun() {\n        try {\n            try {\n                progressMonitor.addCancelListener(this);\n                progressMonitor.beginTask(title);\n                try {\n                    realRun();\n                } finally {\n                    if (EventQueue.isDispatchThread()) {\n                        finish();\n                    } else {\n                        EventQueue.invokeAndWait(new Runnable() {\n                            public void run() {\n                                finish();\n                            }\n                        });\n                    }\n                }\n            } finally {\n                progressMonitor.finishTask();\n                progressMonitor.removeCancelListener(this);\n                if (progressMonitor instanceof PleaseWaitProgressMonitor) {\n                    ((PleaseWaitProgressMonitor)progressMonitor).close();\n                }\n            }\n        } catch (final Exception e) {\n            if (!ignoreException) {\n                // Exception has to thrown in EDT to be shown to user\n                SwingUtilities.invokeLater(new Runnable() {\n                    public void run() {\n                        ExceptionDialogUtil.explainException(e);\n                    }\n                });\n            }\n        }\n    }","id":54000,"modified_method":"private void doRealRun() {\n        try {\n            try {\n                progressMonitor.addCancelListener(this);\n                progressMonitor.beginTask(title);\n                try {\n                    realRun();\n                } finally {\n                    if (EventQueue.isDispatchThread()) {\n                        finish();\n                    } else {\n                        EventQueue.invokeAndWait(new Runnable() {\n                            public void run() {\n                                finish();\n                            }\n                        });\n                    }\n                }\n            } finally {\n                progressMonitor.finishTask();\n                progressMonitor.removeCancelListener(this);\n                if (progressMonitor instanceof PleaseWaitProgressMonitor) {\n                    ((PleaseWaitProgressMonitor)progressMonitor).close();\n                }\n            }\n        } catch (final Exception e) {\n            if (!ignoreException) {\n                // Exception has to thrown in EDT to be shown to user\n                SwingUtilities.invokeLater(new Runnable() {\n                    public void run() {\n                        if (e instanceof RuntimeException) {\n                            BugReportExceptionHandler.handleException(e);\n                        } else {\n                            ExceptionDialogUtil.explainException(e);\n                        }\n                    }\n                });\n            }\n        }\n    }","commit_id":"1b3ad7a8f87be8a11527d5d91987982a91076a37","url":"https://github.com/openstreetmap/josm"},{"original_method":"public byte[] exportLayouts(String ownerId)\n\t\tthrows PortalException, SystemException {\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(ownerId);\n\n\t\tGroup guestGroup = GroupLocalServiceUtil.getGroup(\n\t\t\tlayoutSet.getCompanyId(), GroupImpl.GUEST);\n\n\t\t// Build compatibility\n\n\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\tElement root = doc.addElement(\"root\");\n\n\t\tElement header = root.addElement(\"header\");\n\n\t\theader.addAttribute(\n\t\t\t\"build-number\", String.valueOf(ReleaseInfo.getBuildNumber()));\n\t\theader.addAttribute(\"owner-id\", ownerId);\n\t\theader.addAttribute(\"export-date\", Time.getRFC822());\n\t\theader.addAttribute(\"theme-id\", layoutSet.getThemeId());\n\t\theader.addAttribute(\"color-scheme-id\", layoutSet.getColorSchemeId());\n\n\t\t// Layouts\n\n\t\tIterator itr = getLayouts(ownerId).iterator();\n\n\t\twhile (itr.hasNext()) {\n\t\t\tLayout layout = (Layout)itr.next();\n\n\t\t\tElement layoutEl = root.addElement(\"layout\");\n\n\t\t\tlayoutEl.addAttribute(\"layout-id\", layout.getLayoutId());\n\t\t\tlayoutEl.addElement(\"parent-layout-id\").addText(\n\t\t\t\tlayout.getParentLayoutId());\n\t\t\tlayoutEl.addElement(\"name\").addCDATA(layout.getName());\n\t\t\tlayoutEl.addElement(\"title\").addCDATA(layout.getTitle());\n\t\t\tlayoutEl.addElement(\"type\").addText(layout.getType());\n\t\t\tlayoutEl.addElement(\"type-settings\").addCDATA(\n\t\t\t\tlayout.getTypeSettings());\n\t\t\tlayoutEl.addElement(\"hidden\").addText(\n\t\t\t\tString.valueOf(layout.getHidden()));\n\t\t\tlayoutEl.addElement(\"friendly-url\").addText(\n\t\t\t\tlayout.getFriendlyURL());\n\t\t\tlayoutEl.addElement(\"theme-id\").addText(layout.getThemeId());\n\t\t\tlayoutEl.addElement(\"color-scheme-id\").addText(\n\t\t\t\tlayout.getColorSchemeId());\n\t\t\tlayoutEl.addElement(\"priority\").addText(\n\t\t\t\tString.valueOf(layout.getPriority()));\n\n\t\t\t// Layout permissions\n\n\t\t\tElement permissionsEl = layoutEl.addElement(\"permissions\");\n\n\t\t\texportLayoutPermissions(\n\t\t\t\tlayout, layout.getGroupId(), permissionsEl,\n\t\t\t\t\"community-actions\");\n\n\t\t\tif (!layout.getGroupId().equals(guestGroup.getGroupId())) {\n\t\t\t\texportLayoutPermissions(\n\t\t\t\t\tlayout, guestGroup.getGroupId(), permissionsEl,\n\t\t\t\t\t\"guest-actions\");\n\t\t\t}\n\n\t\t\t// Portlet permissions\n\n\t\t\tif (layout.getType().equals(LayoutImpl.TYPE_PORTLET)) {\n\t\t\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t\t\t(LayoutTypePortlet)layout.getLayoutType();\n\n\t\t\t\tList portletIds = layoutTypePortlet.getPortletIds();\n\n\t\t\t\tfor (int i = 0; i < portletIds.size(); i++) {\n\t\t\t\t\tString portletId = (String)portletIds.get(i);\n\n\t\t\t\t\tElement portletEl = permissionsEl.addElement(\"portlet\");\n\n\t\t\t\t\tportletEl.addAttribute(\"portlet-id\", portletId);\n\n\t\t\t\t\texportPortletPermissions(\n\t\t\t\t\t\tportletId, layout, layout.getGroupId(), portletEl,\n\t\t\t\t\t\t\"community-actions\");\n\n\t\t\t\t\tif (!layout.getGroupId().equals(guestGroup.getGroupId())) {\n\t\t\t\t\t\texportPortletPermissions(\n\t\t\t\t\t\t\tportletId, layout, guestGroup.getGroupId(),\n\t\t\t\t\t\t\tportletEl, \"guest-actions\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Portlet preferences\n\n\t\titr = PortletPreferencesLocalServiceUtil.getPortletPreferencesByOwnerId(\n\t\t\townerId).iterator();\n\n\t\twhile (itr.hasNext()) {\n\t\t\tPortletPreferences prefs = (PortletPreferences)itr.next();\n\n\t\t\tElement el = root.addElement(\"portlet-preferences\");\n\n\t\t\tString portletId = prefs.getPortletId();\n\t\t\tString layoutId = prefs.getLayoutId();\n\n\t\t\tel.addAttribute(\"portlet-id\", portletId);\n\t\t\tel.addAttribute(\"layout-id\", layoutId);\n\t\t\tel.addElement(\"preferences\").addCDATA(prefs.getPreferences());\n\n\t\t\t// Portlet data\n\n\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\tlayoutSet.getCompanyId(), portletId);\n\n\t\t\tif (portlet != null) {\n\t\t\t\tPortletDataHandler portletDataHandler =\n\t\t\t\t\tportlet.getPortletDataHandler();\n\n\t\t\t\tif (portletDataHandler != null) {\n\t\t\t\t\tString data = StringPool.BLANK;\n\n\t\t\t\t\tdata = portletDataHandler.exportData(\n\t\t\t\t\t\tlayoutSet.getCompanyId(), layoutSet.getGroupId());\n\n\t\t\t\t\tel = root.addElement(\"portlet-data\");\n\t\t\t\t\tel.addAttribute(\"portlet-id\", portletId);\n\n\t\t\t\t\tel.addElement(\"data\").addCDATA(data);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// XML file\n\n\t\ttry {\n\t\t\tZipWriter zipWriter = new ZipWriter();\n\n\t\t\tzipWriter.addEntry(\"layouts.xml\", XMLFormatter.toString(doc));\n\n\t\t\treturn zipWriter.finish();\n\t\t}\n\t\tcatch (IOException ioe) {\n\t\t\tthrow new SystemException(ioe);\n\t\t}\n\t}","id":54001,"modified_method":"public byte[] exportLayouts(String ownerId)\n\t\tthrows PortalException, SystemException {\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(ownerId);\n\n\t\tGroup guestGroup = GroupLocalServiceUtil.getGroup(\n\t\t\tlayoutSet.getCompanyId(), GroupImpl.GUEST);\n\n\t\t// Build compatibility\n\n\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\tElement root = doc.addElement(\"root\");\n\n\t\tElement header = root.addElement(\"header\");\n\n\t\theader.addAttribute(\n\t\t\t\"build-number\", String.valueOf(ReleaseInfo.getBuildNumber()));\n\t\theader.addAttribute(\"owner-id\", ownerId);\n\t\theader.addAttribute(\"export-date\", Time.getRFC822());\n\t\theader.addAttribute(\"theme-id\", layoutSet.getThemeId());\n\t\theader.addAttribute(\"color-scheme-id\", layoutSet.getColorSchemeId());\n\n\t\t// Layouts\n\n\t\tIterator itr = getLayouts(ownerId).iterator();\n\n\t\twhile (itr.hasNext()) {\n\t\t\tLayout layout = (Layout)itr.next();\n\n\t\t\tElement layoutEl = root.addElement(\"layout\");\n\n\t\t\tlayoutEl.addAttribute(\"layout-id\", layout.getLayoutId());\n\t\t\tlayoutEl.addElement(\"parent-layout-id\").addText(\n\t\t\t\tlayout.getParentLayoutId());\n\t\t\tlayoutEl.addElement(\"name\").addCDATA(layout.getName());\n\t\t\tlayoutEl.addElement(\"title\").addCDATA(layout.getTitle());\n\t\t\tlayoutEl.addElement(\"type\").addText(layout.getType());\n\t\t\tlayoutEl.addElement(\"type-settings\").addCDATA(\n\t\t\t\tlayout.getTypeSettings());\n\t\t\tlayoutEl.addElement(\"hidden\").addText(\n\t\t\t\tString.valueOf(layout.getHidden()));\n\t\t\tlayoutEl.addElement(\"friendly-url\").addText(\n\t\t\t\tlayout.getFriendlyURL());\n\t\t\tlayoutEl.addElement(\"theme-id\").addText(layout.getThemeId());\n\t\t\tlayoutEl.addElement(\"color-scheme-id\").addText(\n\t\t\t\tlayout.getColorSchemeId());\n\t\t\tlayoutEl.addElement(\"priority\").addText(\n\t\t\t\tString.valueOf(layout.getPriority()));\n\n\t\t\t// Layout permissions\n\n\t\t\tElement permissionsEl = layoutEl.addElement(\"permissions\");\n\n\t\t\texportLayoutPermissions(\n\t\t\t\tlayout, layout.getGroupId(), permissionsEl,\n\t\t\t\t\"community-actions\");\n\n\t\t\tif (!layout.getGroupId().equals(guestGroup.getGroupId())) {\n\t\t\t\texportLayoutPermissions(\n\t\t\t\t\tlayout, guestGroup.getGroupId(), permissionsEl,\n\t\t\t\t\t\"guest-actions\");\n\t\t\t}\n\n\t\t\t// Portlet permissions\n\n\t\t\tif (layout.getType().equals(LayoutImpl.TYPE_PORTLET)) {\n\t\t\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t\t\t(LayoutTypePortlet)layout.getLayoutType();\n\n\t\t\t\tList portletIds = layoutTypePortlet.getPortletIds();\n\n\t\t\t\tfor (int i = 0; i < portletIds.size(); i++) {\n\t\t\t\t\tString portletId = (String)portletIds.get(i);\n\n\t\t\t\t\tElement portletEl = permissionsEl.addElement(\"portlet\");\n\n\t\t\t\t\tportletEl.addAttribute(\"portlet-id\", portletId);\n\n\t\t\t\t\texportPortletPermissions(\n\t\t\t\t\t\tportletId, layout, layout.getGroupId(), portletEl,\n\t\t\t\t\t\t\"community-actions\");\n\n\t\t\t\t\tif (!layout.getGroupId().equals(guestGroup.getGroupId())) {\n\t\t\t\t\t\texportPortletPermissions(\n\t\t\t\t\t\t\tportletId, layout, guestGroup.getGroupId(),\n\t\t\t\t\t\t\tportletEl, \"guest-actions\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Portlet preferences\n\n\t\titr = PortletPreferencesLocalServiceUtil.getPortletPreferencesByOwnerId(\n\t\t\townerId).iterator();\n\n\t\twhile (itr.hasNext()) {\n\t\t\tPortletPreferences prefs = (PortletPreferences)itr.next();\n\n\t\t\tElement el = root.addElement(\"portlet-preferences\");\n\n\t\t\tString portletId = prefs.getPortletId();\n\t\t\tString layoutId = prefs.getLayoutId();\n\n\t\t\tel.addAttribute(\"portlet-id\", portletId);\n\t\t\tel.addAttribute(\"layout-id\", layoutId);\n\t\t\tel.addElement(\"preferences\").addCDATA(prefs.getPreferences());\n\n\t\t\t// Portlet data\n\n\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\tlayoutSet.getCompanyId(), portletId);\n\n\t\t\tif (portlet != null) {\n\t\t\t\tPortletDataHandler portletDataHandler =\n\t\t\t\t\tportlet.getPortletDataHandler();\n\n\t\t\t\tif (portletDataHandler != null) {\n\t\t\t\t\tString data = null;\n\n\t\t\t\t\ttry {\n                        PortletPreferencesImpl prefsImpl = (PortletPreferencesImpl)PortletPreferencesSerializer.fromDefaultXML(prefs.getPreferences());\n\t\t\t\t\t\tdata = portletDataHandler.exportData(\n\t\t\t\t\t\t\tlayoutSet.getCompanyId(), layoutSet.getGroupId(), portletId, prefsImpl);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (PortletDataException pde) {\n\t\t\t\t\t\tthrow new PortalException(pde);\n\t\t\t\t\t}\n\n                    Element el2 = el.addElement(\"portlet-data\");\n                    if (data != null) {\n                        el2.addCDATA(data);\n                    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// XML file\n\n\t\ttry {\n\t\t\tZipWriter zipWriter = new ZipWriter();\n\n\t\t\tzipWriter.addEntry(\"layouts.xml\", XMLFormatter.toString(doc));\n\n\t\t\treturn zipWriter.finish();\n\t\t}\n\t\tcatch (IOException ioe) {\n\t\t\tthrow new SystemException(ioe);\n\t\t}\n\t}","commit_id":"9a4a241d0265999fa3521903210ac6f6ed126aa7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void importLayouts(String userId, String ownerId, File file)\n\t\tthrows PortalException, SystemException {\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(ownerId);\n\n\t\tGroup guestGroup = GroupLocalServiceUtil.getGroup(\n\t\t\tlayoutSet.getCompanyId(), GroupImpl.GUEST);\n\n\t\t// XML file\n\n\t\tElement root = null;\n\n\t\ttry {\n\t\t\tZipReader zipReader = new ZipReader(file);\n\n\t\t\tString xml = zipReader.getEntryAsString(\"layouts.xml\");\n\n\t\t\tSAXReader reader = new SAXReader();\n\n\t\t\tDocument doc = reader.read(new StringReader(xml));\n\n\t\t\troot = doc.getRootElement();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(e);\n\t\t}\n\n\t\t// Build compatibility\n\n\t\tElement header = (Element)root.element(\"header\");\n\n\t\tint buildNumber = ReleaseInfo.getBuildNumber();\n\n\t\tint importBuildNumber = GetterUtil.getInteger(\n\t\t\theader.attributeValue(\"build-number\"));\n\n\t\tif (buildNumber != importBuildNumber) {\n\t\t\tthrow new LayoutImportException();\n\t\t}\n\n\t\t// Look and feel\n\n\t\tString themeId = header.attributeValue(\"theme-id\");\n\t\tString colorSchemeId = header.attributeValue(\"color-scheme-id\");\n\n\t\tLayoutSetLocalServiceUtil.updateLookAndFeel(\n\t\t\townerId, themeId, colorSchemeId);\n\n\t\t// Layouts\n\n\t\tUser user = UserUtil.findByPrimaryKey(userId);\n\n\t\tList newLayoutPKs = new ArrayList();\n\n\t\tIterator itr = root.elements(\"layout\").iterator();\n\n\t\twhile (itr.hasNext()) {\n\t\t\tElement layoutEl = (Element)itr.next();\n\n\t\t\tString layoutId = layoutEl.attributeValue(\"layout-id\");\n\t\t\tString parentLayoutId = layoutEl.elementText(\n\t\t\t\t\"parent-layout-id\");\n\t\t\tString name = layoutEl.elementText(\"name\");\n\t\t\tString title = layoutEl.elementText(\"title\");\n\t\t\tString type = layoutEl.elementText(\"type\");\n\t\t\tString typeSettings = layoutEl.elementText(\"type-settings\");\n\t\t\tboolean hidden = GetterUtil.getBoolean(\n\t\t\t\tlayoutEl.elementText(\"hidden\"));\n\t\t\tString friendlyURL = layoutEl.elementText(\"friendly-url\");\n\t\t\tthemeId = layoutEl.elementText(\"theme-id\");\n\t\t\tcolorSchemeId = layoutEl.elementText(\"color-scheme-id\");\n\t\t\tint priority = GetterUtil.getInteger(\n\t\t\t\tlayoutEl.elementText(\"priority\"));\n\n\t\t\tLayoutPK layoutPK = new LayoutPK(layoutId, ownerId);\n\n\t\t\tnewLayoutPKs.add(layoutPK);\n\n\t\t\tLayout layout = LayoutUtil.fetchByPrimaryKey(layoutPK);\n\n\t\t\tif (layout == null) {\n\t\t\t\tlayout = LayoutUtil.create(layoutPK);\n\t\t\t}\n\n\t\t\tlayout.setCompanyId(user.getActualCompanyId());\n\t\t\tlayout.setParentLayoutId(parentLayoutId);\n\t\t\tlayout.setName(name);\n\t\t\tlayout.setTitle(title);\n\t\t\tlayout.setType(type);\n\t\t\tlayout.setTypeSettings(typeSettings);\n\t\t\tlayout.setHidden(hidden);\n\t\t\tlayout.setFriendlyURL(friendlyURL);\n\t\t\tlayout.setThemeId(themeId);\n\t\t\tlayout.setColorSchemeId(colorSchemeId);\n\t\t\tlayout.setPriority(priority);\n\n\t\t\tLayoutUtil.update(layout);\n\n\t\t\t// Layout permissions\n\n\t\t\tElement permissionsEl = layoutEl.element(\"permissions\");\n\n\t\t\timportLayoutPermissions(\n\t\t\t\tlayout, layout.getGroupId(), permissionsEl,\n\t\t\t\t\"community-actions\");\n\n\t\t\tif (!layout.getGroupId().equals(guestGroup.getGroupId())) {\n\t\t\t\timportLayoutPermissions(\n\t\t\t\t\tlayout, guestGroup.getGroupId(), permissionsEl,\n\t\t\t\t\t\"guest-actions\");\n\t\t\t}\n\n\t\t\t// Portlet permissions\n\n\t\t\tList portlets = permissionsEl.elements(\"portlet\");\n\n\t\t\tfor (int i = 0; i < portlets.size(); i++) {\n\t\t\t\tElement portletEl = (Element)portlets.get(i);\n\n\t\t\t\tString portletId = portletEl.attributeValue(\"portlet-id\");\n\n\t\t\t\timportPortletPermissions(\n\t\t\t\t\tportletId, layout, layout.getGroupId(), portletEl,\n\t\t\t\t\t\"community-actions\");\n\n\t\t\t\tif (!layout.getGroupId().equals(guestGroup.getGroupId())) {\n\t\t\t\t\timportPortletPermissions(\n\t\t\t\t\t\tportletId, layout, guestGroup.getGroupId(),\n\t\t\t\t\t\tportletEl, \"guest-actions\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdeleteMissingLayouts(ownerId, newLayoutPKs);\n\n\t\t// Portlet preferences\n\n\t\tPortletPreferencesUtil.removeByOwnerId(ownerId);\n\n\t\titr = root.elements(\"portlet-preferences\").iterator();\n\n\t\twhile (itr.hasNext()) {\n\t\t\tElement el = (Element)itr.next();\n\n\t\t\tString portletId = el.attributeValue(\"portlet-id\");\n\t\t\tString layoutId = el.attributeValue(\"layout-id\");\n\t\t\tString preferences = el.elementText(\"preferences\");\n\n\t\t\tPortletPreferences prefs = PortletPreferencesUtil.create(\n\t\t\t\tnew PortletPreferencesPK(portletId, layoutId, ownerId));\n\n\t\t\tprefs.setPreferences(preferences);\n\n\t\t\tPortletPreferencesUtil.update(prefs);\n\t\t}\n\n\t\t// Portlet data\n\n\t\titr = root.elements(\"portlet-data\").iterator();\n\n\t\twhile (itr.hasNext()) {\n\t\t\tElement el = (Element)itr.next();\n\n\t\t\tString portletId = el.attributeValue(\"portlet-id\");\n\t\t\tString data = el.elementText(\"data\");\n\n\t\t\t// Portlet data\n\n\t\t\tPortlet portlet = PortletLocalServiceUtil.getPortletById(\n\t\t\t\tlayoutSet.getCompanyId(), portletId);\n\n\t\t\tPortletDataHandler portletDataHandler =\n\t\t\t\tportlet.getPortletDataHandler();\n\n\t\t\tif (portletDataHandler != null) {\n\t\t\t\tportletDataHandler.importData(\n\t\t\t\t\tlayoutSet.getCompanyId(), layoutSet.getGroupId(), data);\n\t\t\t}\n\t\t}\n\n\t\t// Page count\n\n\t\tLayoutSetLocalServiceUtil.updatePageCount(ownerId);\n\t}","id":54002,"modified_method":"public void importLayouts(String userId, String ownerId, File file)\n\t\tthrows PortalException, SystemException {\n\n\t\tLayoutSet layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(ownerId);\n\n\t\tGroup guestGroup = GroupLocalServiceUtil.getGroup(\n\t\t\tlayoutSet.getCompanyId(), GroupImpl.GUEST);\n\n\t\t// XML file\n\n\t\tElement root = null;\n\n\t\ttry {\n\t\t\tZipReader zipReader = new ZipReader(file);\n\n\t\t\tString xml = zipReader.getEntryAsString(\"layouts.xml\");\n\n\t\t\tSAXReader reader = new SAXReader();\n\n\t\t\tDocument doc = reader.read(new StringReader(xml));\n\n\t\t\troot = doc.getRootElement();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new SystemException(e);\n\t\t}\n\n\t\t// Build compatibility\n\n\t\tElement header = (Element)root.element(\"header\");\n\n\t\tint buildNumber = ReleaseInfo.getBuildNumber();\n\n\t\tint importBuildNumber = GetterUtil.getInteger(\n\t\t\theader.attributeValue(\"build-number\"));\n\n\t\tif (buildNumber != importBuildNumber) {\n\t\t\tthrow new LayoutImportException();\n\t\t}\n\n\t\t// Look and feel\n\n\t\tString themeId = header.attributeValue(\"theme-id\");\n\t\tString colorSchemeId = header.attributeValue(\"color-scheme-id\");\n\n\t\tLayoutSetLocalServiceUtil.updateLookAndFeel(\n\t\t\townerId, themeId, colorSchemeId);\n\n\t\t// Layouts\n\n\t\tUser user = UserUtil.findByPrimaryKey(userId);\n\n\t\tList newLayoutPKs = new ArrayList();\n\n\t\tIterator itr = root.elements(\"layout\").iterator();\n\n\t\twhile (itr.hasNext()) {\n\t\t\tElement layoutEl = (Element)itr.next();\n\n\t\t\tString layoutId = layoutEl.attributeValue(\"layout-id\");\n\t\t\tString parentLayoutId = layoutEl.elementText(\n\t\t\t\t\"parent-layout-id\");\n\t\t\tString name = layoutEl.elementText(\"name\");\n\t\t\tString title = layoutEl.elementText(\"title\");\n\t\t\tString type = layoutEl.elementText(\"type\");\n\t\t\tString typeSettings = layoutEl.elementText(\"type-settings\");\n\t\t\tboolean hidden = GetterUtil.getBoolean(\n\t\t\t\tlayoutEl.elementText(\"hidden\"));\n\t\t\tString friendlyURL = layoutEl.elementText(\"friendly-url\");\n\t\t\tthemeId = layoutEl.elementText(\"theme-id\");\n\t\t\tcolorSchemeId = layoutEl.elementText(\"color-scheme-id\");\n\t\t\tint priority = GetterUtil.getInteger(\n\t\t\t\tlayoutEl.elementText(\"priority\"));\n\n\t\t\tLayoutPK layoutPK = new LayoutPK(layoutId, ownerId);\n\n\t\t\tnewLayoutPKs.add(layoutPK);\n\n\t\t\tLayout layout = LayoutUtil.fetchByPrimaryKey(layoutPK);\n\n\t\t\tif (layout == null) {\n\t\t\t\tlayout = LayoutUtil.create(layoutPK);\n\t\t\t}\n\n\t\t\tlayout.setCompanyId(user.getActualCompanyId());\n\t\t\tlayout.setParentLayoutId(parentLayoutId);\n\t\t\tlayout.setName(name);\n\t\t\tlayout.setTitle(title);\n\t\t\tlayout.setType(type);\n\t\t\tlayout.setTypeSettings(typeSettings);\n\t\t\tlayout.setHidden(hidden);\n\t\t\tlayout.setFriendlyURL(friendlyURL);\n\t\t\tlayout.setThemeId(themeId);\n\t\t\tlayout.setColorSchemeId(colorSchemeId);\n\t\t\tlayout.setPriority(priority);\n\n\t\t\tLayoutUtil.update(layout);\n\n\t\t\t// Layout permissions\n\n\t\t\tElement permissionsEl = layoutEl.element(\"permissions\");\n\n\t\t\timportLayoutPermissions(\n\t\t\t\tlayout, layout.getGroupId(), permissionsEl,\n\t\t\t\t\"community-actions\");\n\n\t\t\tif (!layout.getGroupId().equals(guestGroup.getGroupId())) {\n\t\t\t\timportLayoutPermissions(\n\t\t\t\t\tlayout, guestGroup.getGroupId(), permissionsEl,\n\t\t\t\t\t\"guest-actions\");\n\t\t\t}\n\n\t\t\t// Portlet permissions\n\n\t\t\tList portlets = permissionsEl.elements(\"portlet\");\n\n\t\t\tfor (int i = 0; i < portlets.size(); i++) {\n\t\t\t\tElement portletEl = (Element)portlets.get(i);\n\n\t\t\t\tString portletId = portletEl.attributeValue(\"portlet-id\");\n\n\t\t\t\timportPortletPermissions(\n\t\t\t\t\tportletId, layout, layout.getGroupId(), portletEl,\n\t\t\t\t\t\"community-actions\");\n\n\t\t\t\tif (!layout.getGroupId().equals(guestGroup.getGroupId())) {\n\t\t\t\t\timportPortletPermissions(\n\t\t\t\t\t\tportletId, layout, guestGroup.getGroupId(),\n\t\t\t\t\t\tportletEl, \"guest-actions\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdeleteMissingLayouts(ownerId, newLayoutPKs);\n\n\t\t// Portlet preferences\n\n\t\tPortletPreferencesUtil.removeByOwnerId(ownerId);\n\n\t\titr = root.elements(\"portlet-preferences\").iterator();\n\n\t\twhile (itr.hasNext()) {\n\t\t\tElement el = (Element)itr.next();\n\n\t\t\tString portletId = el.attributeValue(\"portlet-id\");\n\t\t\tString layoutId = el.attributeValue(\"layout-id\");\n\t\t\tString preferences = el.elementText(\"preferences\");\n\n\t\t\tPortletPreferences prefs = PortletPreferencesUtil.create(\n\t\t\t\tnew PortletPreferencesPK(portletId, layoutId, ownerId));\n\n            prefs.setPreferences(preferences);\n\n            // Check to see if there is any custom portlet data importer...\n            Element portletData = el.element(\"portlet-data\");\n            if (portletData != null) {\n                Portlet portlet = PortletLocalServiceUtil.getPortletById(layoutSet.getCompanyId(), portletId);\n                if (portlet != null) {\n                    PortletDataHandler portletDataHandler = portlet.getPortletDataHandler();\n                    if (portletDataHandler != null) {\n                        try {\n                            PortletPreferencesImpl prefsImpl = (PortletPreferencesImpl)PortletPreferencesSerializer.fromDefaultXML(preferences);\n                            \n                            prefsImpl = (PortletPreferencesImpl)portletDataHandler.importData(\n                                layoutSet.getCompanyId(), \n                                layoutSet.getGroupId(),\n                                portletId,\n                                prefsImpl,\n                                portletData.getText());\n                            if (prefsImpl != null) {\n                                prefs.setPreferences(PortletPreferencesSerializer.toXML(prefsImpl));\n                            }\n                        }\n                        catch (PortletDataException pde) {\n                            throw new PortalException(pde);\n                        }\n                            \n                    }\n                    else {\n                        _log.warn(\".LAR contains custom <portlet-data> for portlet Id \" + portletId + \" but no matching PortletDataHandler found.\");\n                    }\n                }\n            }\n\n\t\t\tPortletPreferencesUtil.update(prefs);\n\t\t}\n\n\t\t// Page count\n\t\tLayoutSetLocalServiceUtil.updatePageCount(ownerId);\n\t}","commit_id":"9a4a241d0265999fa3521903210ac6f6ed126aa7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void importData(String companyId, String groupId, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tSAXReader reader = SAXReaderFactory.getInstance();\n\n\t\t\tXStream xStream = new XStream();\n\n\t\t\tDocument doc = reader.read(new StringReader(data));\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\t// Articles\n\n\t\t\tElement el = root.element(\"articles\").element(\"list\");\n\n\t\t\tDocument tempDoc = DocumentHelper.createDocument();\n\n\t\t\ttempDoc.content().add(el.createCopy());\n\n\t\t\tList articles = (List)xStream.fromXML(\n\t\t\t\tXMLFormatter.toString(tempDoc));\n\n\t\t\tIterator itr = articles.iterator();\n\n\t\t\twhile (itr.hasNext()) {\n\t\t\t\tJournalArticle article = (JournalArticle)itr.next();\n\n\t\t\t\tarticle.setGroupId(groupId);\n\n\t\t\t\tJournalArticleUtil.update(article, true);\n\t\t\t}\n\n\t\t\t// Structures\n\n\t\t\tel = root.element(\"structures\").element(\"list\");\n\n\t\t\ttempDoc = DocumentHelper.createDocument();\n\n\t\t\ttempDoc.content().add(el.createCopy());\n\n\t\t\tList structures = (List)xStream.fromXML(\n\t\t\t\tXMLFormatter.toString(tempDoc));\n\n\t\t\titr = structures.iterator();\n\n\t\t\twhile (itr.hasNext()) {\n\t\t\t\tJournalStructure structure = (JournalStructure)itr.next();\n\n\t\t\t\tstructure.setGroupId(groupId);\n\n\t\t\t\tJournalStructureUtil.update(structure, true);\n\t\t\t}\n\n\t\t\t// Templates\n\n\t\t\tel = root.element(\"templates\").element(\"list\");\n\n\t\t\ttempDoc = DocumentHelper.createDocument();\n\n\t\t\ttempDoc.content().add(el.createCopy());\n\n\t\t\tList templates = (List)xStream.fromXML(\n\t\t\t\tXMLFormatter.toString(tempDoc));\n\n\t\t\titr = templates.iterator();\n\n\t\t\twhile (itr.hasNext()) {\n\t\t\t\tJournalTemplate template = (JournalTemplate)itr.next();\n\n\t\t\t\ttemplate.setGroupId(groupId);\n\n\t\t\t\tJournalTemplateUtil.update(template, true);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":54003,"modified_method":"public PortletPreferences importData(String companyId, String groupId, String portletId, PortletPreferences portletPreferences, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n            NewJournalContentCreationStrategy creationStrategy = PortletDataHandlerUtils.getContentCreationStrategy();\n            \n\t\t\tSAXReader reader = SAXReaderFactory.getInstance();\n\n\t\t\tXStream xStream = new XStream();\n\n\t\t\tDocument doc = reader.read(new StringReader(data));\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\t// Articles\n\n\t\t\tElement el = root.element(\"articles\").element(\"list\");\n\n\t\t\tDocument tempDoc = DocumentHelper.createDocument();\n\n\t\t\ttempDoc.content().add(el.createCopy());\n\n\t\t\tList articles = (List)xStream.fromXML(\n\t\t\t\tXMLFormatter.toString(tempDoc));\n\n\t\t\tIterator itr = articles.iterator();\n\n\t\t\twhile (itr.hasNext()) {\n\t\t\t\tJournalArticle article = (JournalArticle)itr.next();\n\t\t\t\tarticle.setGroupId(groupId);\n                \n                // See if the article already exists...\n                JournalArticlePK pk = article.getPrimaryKey();\n                boolean exists = (JournalArticleUtil.fetchByPrimaryKey(pk) != null);\n\n                if (!exists) {\n                    // Article ID not in this group yet - create it...   \n                    article.setNew(true);\n\n                    String authorId = creationStrategy.getAuthorUserId(companyId, groupId, article);\n                    if (authorId != null) {\n                        article.setUserId(authorId);\n                        article.setUserName(creationStrategy.getAuthorUserName(companyId, groupId, article));\n                    }\n                    \n                    String approvedById = creationStrategy.getApprovalUserId(companyId, groupId, article);\n                    if (approvedById != null) {\n                        article.setApprovedByUserId(approvedById);\n                        article.setApprovedByUserName(creationStrategy.getApprovalUserName(companyId, groupId, article));\n                        article.setApproved(true);\n                    }\n                    else {\n                        article.setApprovedByUserId(null);\n                        article.setApprovedByUserName(null);\n                        article.setApproved(false);\n                    }\n                    \n                    article = JournalArticleUtil.update(article, true);\n                    JournalArticleLocalServiceUtil.addArticleResources(article, \n                             creationStrategy.addCommunityPermissions(companyId, groupId, article), \n                             creationStrategy.addGuestPermissions(companyId, groupId, article));\n                }\n\t\t\t}\n\n\t\t\t// Structures\n\n\t\t\tel = root.element(\"structures\").element(\"list\");\n\n\t\t\ttempDoc = DocumentHelper.createDocument();\n\n\t\t\ttempDoc.content().add(el.createCopy());\n\n\t\t\tList structures = (List)xStream.fromXML(\n\t\t\t\tXMLFormatter.toString(tempDoc));\n\n\t\t\titr = structures.iterator();\n\n\t\t\twhile (itr.hasNext()) {\n\t\t\t\tJournalStructure structure = (JournalStructure)itr.next();\n\t\t\t\tstructure.setGroupId(groupId);\n                \n                JournalStructurePK pk = structure.getPrimaryKey();\n                boolean exists = (JournalStructureUtil.fetchByPrimaryKey(pk) != null);\n\n                if (!exists) {\n                    structure.setNew(true);\n                    \n                    String authorId = creationStrategy.getAuthorUserId(companyId, groupId, structure);\n                    if (authorId != null) {\n                        structure.setUserId(authorId);\n                        structure.setUserName(creationStrategy.getAuthorUserName(companyId, groupId, structure));\n                    }\n                    \n                    structure = JournalStructureUtil.update(structure, true);\n                    JournalStructureLocalServiceUtil.addStructureResources(structure,\n                            creationStrategy.addCommunityPermissions(companyId, groupId, structure), \n                            creationStrategy.addGuestPermissions(companyId, groupId, structure));\n                }\n\t\t\t}\n\n\t\t\t// Templates\n\n\t\t\tel = root.element(\"templates\").element(\"list\");\n\n\t\t\ttempDoc = DocumentHelper.createDocument();\n\n\t\t\ttempDoc.content().add(el.createCopy());\n\n\t\t\tList templates = (List)xStream.fromXML(\n\t\t\t\tXMLFormatter.toString(tempDoc));\n\n\t\t\titr = templates.iterator();\n\n\t\t\twhile (itr.hasNext()) {\n\t\t\t\tJournalTemplate template = (JournalTemplate)itr.next();\n\t\t\t\ttemplate.setGroupId(groupId);\n\n                JournalTemplatePK pk = template.getPrimaryKey();\n                boolean exists = (JournalTemplateUtil.fetchByPrimaryKey(pk) != null);\n\n                if (!exists) {\n                    template.setNew(true);\n\n                    String authorId = creationStrategy.getAuthorUserId(companyId, groupId, template);\n                    if (authorId != null) {\n                        template.setUserId(authorId);\n                        template.setUserName(creationStrategy.getAuthorUserName(companyId, groupId, template));\n                    }\n                    \n                    template = JournalTemplateUtil.update(template, true);\n                    JournalTemplateLocalServiceUtil.addTemplateResources(template,\n                            creationStrategy.addCommunityPermissions(companyId, groupId, template), \n                            creationStrategy.addGuestPermissions(companyId, groupId, template));\n                }\n\t\t\t}\n            \n            // No special modification to the incomming portlet preferences needed...\n            return null;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"9a4a241d0265999fa3521903210ac6f6ed126aa7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String exportData(String companyId, String groupId)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tSAXReader reader = SAXReaderFactory.getInstance();\n\n\t\t\tXStream xStream = new XStream();\n\n\t\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\t\tElement root = doc.addElement(\"journal-data\");\n\n\t\t\troot.addAttribute(\"group-id\", groupId);\n\n\t\t\t// Articles\n\n\t\t\tObject obj = JournalArticleUtil.findByGroupId(groupId);\n\n\t\t\tString xml = xStream.toXML(obj);\n\n\t\t\tElement el = root.addElement(\"articles\");\n\n\t\t\tDocument tempDoc = reader.read(new StringReader(xml));\n\n\t\t\tel.content().add(tempDoc.getRootElement().createCopy());\n\n\t\t\t// Structures\n\n\t\t\tobj = JournalStructureUtil.findByGroupId(groupId);\n\n\t\t\txml = xStream.toXML(obj);\n\n\t\t\ttempDoc = reader.read(new StringReader(xml));\n\n\t\t\tel = root.addElement(\"structures\");\n\n\t\t\tel.content().add(tempDoc.getRootElement().createCopy());\n\n\t\t\t// Templates\n\n\t\t\tobj = JournalTemplateUtil.findByGroupId(groupId);\n\n\t\t\txml = xStream.toXML(obj);\n\n\t\t\tel = root.addElement(\"templates\");\n\n\t\t\ttempDoc = reader.read(new StringReader(xml));\n\n\t\t\tel.content().add(tempDoc.getRootElement().createCopy());\n\n\t\t\treturn XMLFormatter.toString(doc);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":54004,"modified_method":"public String exportData(String companyId, String groupId, String portletId, PortletPreferences portletPreferences)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tSAXReader reader = SAXReaderFactory.getInstance();\n\n\t\t\tXStream xStream = new XStream();\n\n\t\t\tDocument doc = DocumentHelper.createDocument();\n\n\t\t\tElement root = doc.addElement(\"journal-data\");\n\n\t\t\troot.addAttribute(\"group-id\", groupId);\n\n\t\t\t// Articles\n\n\t\t\tObject obj = JournalArticleUtil.findByGroupId(groupId);\n\n\t\t\tString xml = xStream.toXML(obj);\n\n\t\t\tElement el = root.addElement(\"articles\");\n\n\t\t\tDocument tempDoc = reader.read(new StringReader(xml));\n\n\t\t\tel.content().add(tempDoc.getRootElement().createCopy());\n\n\t\t\t// Structures\n\n\t\t\tobj = JournalStructureUtil.findByGroupId(groupId);\n\n\t\t\txml = xStream.toXML(obj);\n\n\t\t\ttempDoc = reader.read(new StringReader(xml));\n\n\t\t\tel = root.addElement(\"structures\");\n\n\t\t\tel.content().add(tempDoc.getRootElement().createCopy());\n\n\t\t\t// Templates\n\n\t\t\tobj = JournalTemplateUtil.findByGroupId(groupId);\n\n\t\t\txml = xStream.toXML(obj);\n\n\t\t\tel = root.addElement(\"templates\");\n\n\t\t\ttempDoc = reader.read(new StringReader(xml));\n\n\t\t\tel.content().add(tempDoc.getRootElement().createCopy());\n\n\t\t\treturn XMLFormatter.toString(doc);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","commit_id":"9a4a241d0265999fa3521903210ac6f6ed126aa7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public CreateLibrarySourceDialog(@Nullable Project project, @NotNull String title, VirtualFile contextDirectory) {\n        super(project);\n\n        setTitle(title);\n\n        init();\n\n        contentPane.setMinimumSize(new Dimension(380, 180));\n\n        useBundledKotlinRadioButton.setText(useBundledKotlinRadioButton.getText() + \" - \" + JetPluginUtil.getPluginVersion());\n\n        initialStandaloneLabelText = useStandaloneKotlinRadioButton.getText();\n\n        kotlinStandalonePathField.setEditable(false);\n        kotlinStandalonePathField.addBrowseFolderListener(\n                \"Kotlin Compiler\", \"Choose folder with Kotlin compiler installation\", project,\n                new FileChooserDescriptor(false, true, false, false, false, false) {\n                    @Override\n                    public boolean isFileSelectable(VirtualFile file) {\n                        if (!super.isFileSelectable(file)) {\n                            return false;\n                        }\n\n                        return PathUtil.KOTLIN_HOME_DIRECTORY_ADAPTER.fun(com.intellij.util.PathUtil.getLocalPath(file)) != null;\n                    }\n                });\n\n        kotlinStandalonePathField.getTextField().getDocument().addDocumentListener(new DocumentAdapter() {\n            @Override\n            protected void textChanged(final DocumentEvent e) {\n                updateStandaloneVersion();\n                updateComponentVersion();\n            }\n        });\n\n        updateStandaloneVersion();\n\n        copyIntoDirectoryField.addBrowseFolderListener(\n                \"Copy Into...\", \"Choose folder where files will be copied\", project,\n                FileChooserDescriptorFactory.createSingleFolderDescriptor());\n        copyIntoDirectoryField.getTextField().setText(FileUIUtils.getDefaultLibraryFolder(project, contextDirectory));\n\n        copyLibraryCheckbox.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(@NotNull ActionEvent e) {\n                updateComponents();\n            }\n        });\n        useStandaloneKotlinRadioButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(@NotNull ActionEvent e) {\n                updateComponents();\n            }\n        });\n        useBundledKotlinRadioButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(@NotNull ActionEvent e) {\n                updateComponents();\n            }\n        });\n\n        updateComponents();\n    }","id":54005,"modified_method":"public CreateLibrarySourceDialog(@Nullable Project project, @NotNull String title, VirtualFile contextDirectory) {\n        super(project);\n\n        setTitle(title);\n\n        init();\n\n        contentPane.setMinimumSize(new Dimension(380, 180));\n\n        useBundledKotlinRadioButton.setText(useBundledKotlinRadioButton.getText() + \" - \" + JetPluginUtil.getPluginVersion());\n\n        initialStandaloneLabelText = useStandaloneKotlinRadioButton.getText();\n\n        kotlinStandalonePathField.setEditable(false);\n        kotlinStandalonePathField.addBrowseFolderListener(\n                \"Kotlin Compiler\", \"Choose folder with Kotlin compiler installation\", project,\n                new FileChooserDescriptor(false, true, false, false, false, false) {\n                    @Override\n                    public boolean isFileSelectable(VirtualFile file) {\n                        if (!super.isFileSelectable(file)) {\n                            return false;\n                        }\n\n                        return PathUtil.KOTLIN_HOME_DIRECTORY_ADAPTER.fun(com.intellij.util.PathUtil.getLocalPath(file)) != null;\n                    }\n                });\n\n        kotlinStandalonePathField.getTextField().getDocument().addDocumentListener(new DocumentAdapter() {\n            @Override\n            protected void textChanged(final DocumentEvent e) {\n                updateStandaloneVersion();\n                updateComponentVersion();\n            }\n        });\n\n        updateStandaloneVersion();\n\n        copyIntoDirectoryField.addBrowseFolderListener(\n                \"Copy Into...\", \"Choose folder where files will be copied\", project,\n                FileChooserDescriptorFactory.createSingleFolderDescriptor());\n        copyIntoDirectoryField.getTextField().getDocument().addDocumentListener(new DocumentAdapter() {\n            @Override\n            protected void textChanged(final DocumentEvent e) {\n                updateComponentVersion();\n            }\n        });\n\n        copyIntoDirectoryField.getTextField().setText(FileUIUtils.getDefaultLibraryFolder(project, contextDirectory));\n\n        copyLibraryCheckbox.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(@NotNull ActionEvent e) {\n                updateComponents();\n            }\n        });\n        useStandaloneKotlinRadioButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(@NotNull ActionEvent e) {\n                updateComponents();\n            }\n        });\n        useBundledKotlinRadioButton.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(@NotNull ActionEvent e) {\n                updateComponents();\n            }\n        });\n\n        updateComponents();\n    }","commit_id":"d73123f771abb1e4c2af36e5e0090d2dc8c3dada","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void updateComponentVersion() {\n        if (useStandaloneKotlinRadioButton.isSelected()) {\n            if (version != null) {\n                useStandaloneKotlinRadioButton.setForeground(Color.BLACK);\n                useStandaloneKotlinRadioButton.setText(initialStandaloneLabelText + \" - \" + version);\n                setOKActionEnabled(true);\n            }\n            else {\n                useStandaloneKotlinRadioButton.setForeground(Color.RED);\n                useStandaloneKotlinRadioButton.setText(initialStandaloneLabelText + \" - \" + \"Invalid Version\");\n                setOKActionEnabled(false);\n            }\n        }\n        else {\n            useStandaloneKotlinRadioButton.setForeground(Color.BLACK);\n            useStandaloneKotlinRadioButton.setText(initialStandaloneLabelText);\n            setOKActionEnabled(true);\n        }\n    }","id":54006,"modified_method":"private void updateComponentVersion() {\n        boolean isError = false;\n\n        useStandaloneKotlinRadioButton.setForeground(Color.BLACK);\n        useStandaloneKotlinRadioButton.setText(initialStandaloneLabelText);\n        if (useStandaloneKotlinRadioButton.isSelected()) {\n            if (version != null) {\n                useStandaloneKotlinRadioButton.setText(initialStandaloneLabelText + \" - \" + version);\n            }\n            else {\n                useStandaloneKotlinRadioButton.setForeground(Color.RED);\n                useStandaloneKotlinRadioButton.setText(initialStandaloneLabelText + \" - \" + \"Invalid Version\");\n                isError = true;\n            }\n        }\n\n        copyLibraryCheckbox.setForeground(Color.BLACK);\n        if (copyLibraryCheckbox.isSelected()) {\n            if (copyIntoDirectoryField.getText().trim().isEmpty()) {\n                copyLibraryCheckbox.setForeground(Color.RED);\n                isError = true;\n            }\n        }\n\n        setOKActionEnabled(!isError);\n    }","commit_id":"d73123f771abb1e4c2af36e5e0090d2dc8c3dada","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void appendPrefix(@NotNull List<TextChunk> result, int lineNumber, int columnNumber) {\n    String prefix = \"(\" + (lineNumber + 1) + \": \" + (columnNumber + 1) + \") \";\n    TextChunk prefixChunk = new TextChunk(myColorsScheme.getAttributes(UsageTreeColors.USAGE_LOCATION), prefix);\n    result.add(prefixChunk);\n  }","id":54007,"modified_method":"private void appendPrefix(@NotNull List<TextChunk> result, int lineNumber) {\n    result.add(new TextChunk(myColorsScheme.getAttributes(UsageTreeColors.USAGE_LOCATION), String.valueOf(lineNumber + 1)));\n  }","commit_id":"e0f21709ee3dcc16b52f397a69f55a6f1b970a83","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull \n  private TextChunk[] extractChunks(@NotNull UsageInfo2UsageAdapter usageInfo2UsageAdapter, @NotNull PsiFile file) {\n    int absoluteStartOffset = usageInfo2UsageAdapter.getNavigationOffset();\n    if (absoluteStartOffset == -1) return TextChunk.EMPTY_ARRAY;\n\n    Document visibleDocument = myDocument instanceof DocumentWindow ? ((DocumentWindow)myDocument).getDelegate() : myDocument;\n    int visibleStartOffset = myDocument instanceof DocumentWindow ? ((DocumentWindow)myDocument).injectedToHost(absoluteStartOffset) : absoluteStartOffset;\n\n    int lineNumber = myDocument.getLineNumber(absoluteStartOffset);\n    int visibleLineNumber = visibleDocument.getLineNumber(visibleStartOffset);\n    int visibleColumnNumber = visibleStartOffset - visibleDocument.getLineStartOffset(visibleLineNumber);\n    final List<TextChunk> result = new ArrayList<TextChunk>();\n    appendPrefix(result, visibleLineNumber, visibleColumnNumber);\n\n    int fragmentToShowStart = myDocument.getLineStartOffset(lineNumber);\n    int fragmentToShowEnd = fragmentToShowStart < myDocument.getTextLength() ? myDocument.getLineEndOffset(lineNumber) : 0;\n    if (fragmentToShowStart > fragmentToShowEnd) return TextChunk.EMPTY_ARRAY;\n\n    final CharSequence chars = myDocument.getCharsSequence();\n    if (fragmentToShowEnd - fragmentToShowStart > MAX_LINE_LENGTH_TO_SHOW) {\n      final int lineStartOffset = fragmentToShowStart;\n      fragmentToShowStart = Math.max(lineStartOffset, absoluteStartOffset - OFFSET_BEFORE_TO_SHOW_WHEN_LONG_LINE);\n\n      final int lineEndOffset = fragmentToShowEnd;\n      Segment segment = usageInfo2UsageAdapter.getUsageInfo().getSegment();\n      int usage_length = segment != null ? segment.getEndOffset() - segment.getStartOffset():0;\n      fragmentToShowEnd = Math.min(lineEndOffset, absoluteStartOffset + usage_length + OFFSET_AFTER_TO_SHOW_WHEN_LONG_LINE);\n\n      // if we search something like a word, then expand shown context from one symbol before / after at least for word boundary\n      // this should not cause restarts of the lexer as the tokens are usually words\n      if (usage_length > 0 &&\n          StringUtil.isJavaIdentifierStart(chars.charAt(absoluteStartOffset)) &&\n          StringUtil.isJavaIdentifierStart(chars.charAt(absoluteStartOffset + usage_length - 1))) {\n        while(fragmentToShowEnd < lineEndOffset && StringUtil.isJavaIdentifierStart(chars.charAt(fragmentToShowEnd - 1))) ++fragmentToShowEnd;\n        while(fragmentToShowStart > lineStartOffset && StringUtil.isJavaIdentifierStart(chars.charAt(fragmentToShowStart))) --fragmentToShowStart;\n        if (fragmentToShowStart != lineStartOffset) ++fragmentToShowStart;\n        if (fragmentToShowEnd != lineEndOffset) --fragmentToShowEnd;\n      }\n    }\n    if (myDocument instanceof DocumentWindow) {\n      List<TextRange> editable = InjectedLanguageManager.getInstance(file.getProject())\n        .intersectWithAllEditableFragments(file, new TextRange(fragmentToShowStart, fragmentToShowEnd));\n      for (TextRange range : editable) {\n        createTextChunks(usageInfo2UsageAdapter, chars, range.getStartOffset(), range.getEndOffset(), true, result);\n      }\n      return result.toArray(new TextChunk[result.size()]);\n    }\n    return createTextChunks(usageInfo2UsageAdapter, chars, fragmentToShowStart, fragmentToShowEnd, true, result);\n  }","id":54008,"modified_method":"@NotNull \n  private TextChunk[] extractChunks(@NotNull UsageInfo2UsageAdapter usageInfo2UsageAdapter, @NotNull PsiFile file) {\n    int absoluteStartOffset = usageInfo2UsageAdapter.getNavigationOffset();\n    if (absoluteStartOffset == -1) return TextChunk.EMPTY_ARRAY;\n\n    Document visibleDocument = myDocument instanceof DocumentWindow ? ((DocumentWindow)myDocument).getDelegate() : myDocument;\n    int visibleStartOffset = myDocument instanceof DocumentWindow ? ((DocumentWindow)myDocument).injectedToHost(absoluteStartOffset) : absoluteStartOffset;\n\n    int lineNumber = myDocument.getLineNumber(absoluteStartOffset);\n    int visibleLineNumber = visibleDocument.getLineNumber(visibleStartOffset);\n    List<TextChunk> result = new ArrayList<TextChunk>();\n    appendPrefix(result, visibleLineNumber);\n\n    int fragmentToShowStart = myDocument.getLineStartOffset(lineNumber);\n    int fragmentToShowEnd = fragmentToShowStart < myDocument.getTextLength() ? myDocument.getLineEndOffset(lineNumber) : 0;\n    if (fragmentToShowStart > fragmentToShowEnd) return TextChunk.EMPTY_ARRAY;\n\n    final CharSequence chars = myDocument.getCharsSequence();\n    if (fragmentToShowEnd - fragmentToShowStart > MAX_LINE_LENGTH_TO_SHOW) {\n      final int lineStartOffset = fragmentToShowStart;\n      fragmentToShowStart = Math.max(lineStartOffset, absoluteStartOffset - OFFSET_BEFORE_TO_SHOW_WHEN_LONG_LINE);\n\n      final int lineEndOffset = fragmentToShowEnd;\n      Segment segment = usageInfo2UsageAdapter.getUsageInfo().getSegment();\n      int usage_length = segment != null ? segment.getEndOffset() - segment.getStartOffset():0;\n      fragmentToShowEnd = Math.min(lineEndOffset, absoluteStartOffset + usage_length + OFFSET_AFTER_TO_SHOW_WHEN_LONG_LINE);\n\n      // if we search something like a word, then expand shown context from one symbol before / after at least for word boundary\n      // this should not cause restarts of the lexer as the tokens are usually words\n      if (usage_length > 0 &&\n          StringUtil.isJavaIdentifierStart(chars.charAt(absoluteStartOffset)) &&\n          StringUtil.isJavaIdentifierStart(chars.charAt(absoluteStartOffset + usage_length - 1))) {\n        while(fragmentToShowEnd < lineEndOffset && StringUtil.isJavaIdentifierStart(chars.charAt(fragmentToShowEnd - 1))) ++fragmentToShowEnd;\n        while(fragmentToShowStart > lineStartOffset && StringUtil.isJavaIdentifierStart(chars.charAt(fragmentToShowStart))) --fragmentToShowStart;\n        if (fragmentToShowStart != lineStartOffset) ++fragmentToShowStart;\n        if (fragmentToShowEnd != lineEndOffset) --fragmentToShowEnd;\n      }\n    }\n    if (myDocument instanceof DocumentWindow) {\n      List<TextRange> editable = InjectedLanguageManager.getInstance(file.getProject())\n        .intersectWithAllEditableFragments(file, new TextRange(fragmentToShowStart, fragmentToShowEnd));\n      for (TextRange range : editable) {\n        createTextChunks(usageInfo2UsageAdapter, chars, range.getStartOffset(), range.getEndOffset(), true, result);\n      }\n      return result.toArray(new TextChunk[result.size()]);\n    }\n    return createTextChunks(usageInfo2UsageAdapter, chars, fragmentToShowStart, fragmentToShowEnd, true, result);\n  }","commit_id":"e0f21709ee3dcc16b52f397a69f55a6f1b970a83","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private static MyModel setTableModel(@NotNull JTable table,\n                                       @NotNull UsageViewImpl usageView,\n                                       @NotNull final List<UsageNode> data,\n                                       @NotNull AtomicInteger outOfScopeUsages,\n                                       @NotNull SearchScope searchScope) {\n    ApplicationManager.getApplication().assertIsDispatchThread();\n    final int columnCount = calcColumnCount(data);\n    MyModel model = table.getModel() instanceof MyModel ? (MyModel)table.getModel() : null;\n    if (model == null || model.getColumnCount() != columnCount) {\n      model = new MyModel(data, columnCount);\n      table.setModel(model);\n\n      ShowUsagesTableCellRenderer renderer = new ShowUsagesTableCellRenderer(usageView, outOfScopeUsages, searchScope);\n      for (int i=0;i<table.getColumnModel().getColumnCount();i++) {\n        TableColumn column = table.getColumnModel().getColumn(i);\n        column.setCellRenderer(renderer);\n      }\n    }\n    return model;\n  }","id":54009,"modified_method":"@NotNull\n  private static MyModel setTableModel(@NotNull JTable table,\n                                       @NotNull UsageViewImpl usageView,\n                                       @NotNull final List<UsageNode> data,\n                                       @NotNull AtomicInteger outOfScopeUsages,\n                                       @NotNull SearchScope searchScope) {\n    ApplicationManager.getApplication().assertIsDispatchThread();\n    final int columnCount = calcColumnCount(data);\n    MyModel model = table.getModel() instanceof MyModel ? (MyModel)table.getModel() : null;\n    if (model == null || model.getColumnCount() != columnCount) {\n      model = new MyModel(data, columnCount);\n      table.setModel(model);\n\n      ShowUsagesTableCellRenderer renderer = new ShowUsagesTableCellRenderer(usageView, outOfScopeUsages, searchScope);\n      for (int i=0;i<table.getColumnModel().getColumnCount();i++) {\n        TableColumn column = table.getColumnModel().getColumn(i);\n        column.setPreferredWidth(0);\n        column.setCellRenderer(renderer);\n      }\n    }\n    return model;\n  }","commit_id":"e0f21709ee3dcc16b52f397a69f55a6f1b970a83","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void setSizeAndDimensions(@NotNull JTable table,\n                                    @NotNull JBPopup popup,\n                                    @NotNull RelativePoint popupPosition,\n                                    @NotNull List<UsageNode> data) {\n    JComponent content = popup.getContent();\n    Window window = SwingUtilities.windowForComponent(content);\n    Dimension d = window.getSize();\n\n    int width = calcMaxWidth(table);\n    width = (int)Math.max(d.getWidth(), width);\n    Dimension headerSize = ((AbstractPopup)popup).getHeaderPreferredSize();\n    width = Math.max((int)headerSize.getWidth(), width);\n    width = Math.max(myWidth, width);\n\n    if (myWidth == -1) myWidth = width;\n    int newWidth = Math.max(width, d.width + width - myWidth);\n\n    myWidth = newWidth;\n\n    int rowsToShow = Math.min(30, data.size());\n    Dimension dimension = new Dimension(newWidth, table.getRowHeight() * rowsToShow);\n    Rectangle rectangle = fitToScreen(dimension, popupPosition, table);\n    if (!data.isEmpty()) {\n      ScrollingUtil.ensureSelectionExists(table);\n    }\n    table.setSize(rectangle.getSize());\n    //table.setPreferredSize(dimension);\n    //table.setMaximumSize(dimension);\n    //table.setPreferredScrollableViewportSize(dimension);\n\n\n    Dimension footerSize = ((AbstractPopup)popup).getFooterPreferredSize();\n\n    rectangle.height += headerSize.height + footerSize.height + 4/* invisible borders, margins etc*/;\n    ScreenUtil.fitToScreen(rectangle);\n    Dimension newDim = rectangle.getSize();\n    window.setBounds(rectangle);\n    window.setMinimumSize(newDim);\n    window.setMaximumSize(newDim);\n\n    window.validate();\n    window.repaint();\n  }","id":54010,"modified_method":"private void setSizeAndDimensions(@NotNull JTable table,\n                                    @NotNull JBPopup popup,\n                                    @NotNull RelativePoint popupPosition,\n                                    @NotNull List<UsageNode> data) {\n    JComponent content = popup.getContent();\n    Window window = SwingUtilities.windowForComponent(content);\n    Dimension d = window.getSize();\n\n    int width = calcMaxWidth(table);\n    width = (int)Math.max(d.getWidth(), width);\n    Dimension headerSize = ((AbstractPopup)popup).getHeaderPreferredSize();\n    width = Math.max((int)headerSize.getWidth(), width);\n    width = Math.max(myWidth, width);\n\n    if (myWidth == -1) myWidth = width;\n    int newWidth = Math.max(width, d.width + width - myWidth);\n\n    myWidth = newWidth;\n\n    int rowsToShow = Math.min(30, data.size());\n    Dimension dimension = new Dimension(newWidth, table.getRowHeight() * rowsToShow);\n    Rectangle rectangle = fitToScreen(dimension, popupPosition, table);\n    if (!data.isEmpty()) {\n      ScrollingUtil.ensureSelectionExists(table);\n    }\n    table.setSize(rectangle.getSize());\n    //table.setPreferredSize(dimension);\n    //table.setMaximumSize(dimension);\n    //table.setPreferredScrollableViewportSize(dimension);\n\n\n    Dimension footerSize = ((AbstractPopup)popup).getFooterPreferredSize();\n\n    int footer = footerSize.height;\n    int footerBorder = footer == 0 ? 0 : 1;\n    rectangle.height += headerSize.height + footer + footerBorder;\n    ScreenUtil.fitToScreen(rectangle);\n    Dimension newDim = rectangle.getSize();\n    window.setBounds(rectangle);\n    window.setMinimumSize(newDim);\n    window.setMaximumSize(newDim);\n\n    window.validate();\n    window.repaint();\n  }","commit_id":"e0f21709ee3dcc16b52f397a69f55a6f1b970a83","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public Component getTableCellRendererComponent(JTable list, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n    UsageNode usageNode = value instanceof UsageNode ? (UsageNode)value : null;\n\n    Usage usage = usageNode == null ? null : usageNode.getUsage();\n\n    JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT, 0,0));\n    Color fileBgColor = getBackgroundColor(isSelected, usage);\n    final Color bg = UIUtil.getListSelectionBackground();\n    final Color fg = UIUtil.getListSelectionForeground();\n    Color panelBackground = isSelected ? bg : fileBgColor == null ? list.getBackground() : fileBgColor;\n    Color panelForeground = isSelected ? fg : list.getForeground();\n    panel.setBackground(panelBackground);\n    panel.setForeground(panelForeground);\n\n    SimpleColoredComponent textChunks = new SimpleColoredComponent();\n    textChunks.setIpad(new Insets(0, 0, 0, 0));\n    textChunks.setBorder(null);\n\n    if (usage == null || usageNode instanceof ShowUsagesAction.StringNode) {\n      textChunks.append(value != null ? value.toString() : \"\", SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n      return textComponentSpanningWholeRow(textChunks, panelBackground, panelForeground, column, list, row);\n    }\n    if (usage == ShowUsagesAction.MORE_USAGES_SEPARATOR) {\n      textChunks.append(\"...<\");\n      textChunks.append(\"more usages\", SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n      textChunks.append(\">...\");\n      return textComponentSpanningWholeRow(textChunks, panelBackground, panelForeground, column, list, row);\n    }\n    else if (usage == ShowUsagesAction.USAGES_OUTSIDE_SCOPE_SEPARATOR) {\n      textChunks.append(\"...<\");\n      textChunks.append(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScope), SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n      textChunks.append(\">...\");\n      return textComponentSpanningWholeRow(textChunks, panelBackground, panelForeground, column, list, row);\n    }\n\n    if (column == 0) {\n      GroupNode parent = (GroupNode)usageNode.getParent();\n      appendGroupText(parent, panel, fileBgColor);\n    }\n    else if (usage != ShowUsagesAction.MORE_USAGES_SEPARATOR && usage != ShowUsagesAction.USAGES_OUTSIDE_SCOPE_SEPARATOR) {\n      UsagePresentation presentation = usage.getPresentation();\n      TextChunk[] text = presentation.getText();\n\n      if (column == 1) {\n        final Icon icon = presentation.getIcon();\n        textChunks.setIcon(icon == null ? EmptyIcon.ICON_16 : icon);\n        if (text.length != 0) {\n          SimpleTextAttributes attributes = isSelected ?\n            new SimpleTextAttributes(bg, fg, fg, SimpleTextAttributes.STYLE_ITALIC) :\n            deriveAttributesWithColor(text[0].getSimpleAttributesIgnoreBackground(), fileBgColor);\n          textChunks.append(text[0].getText(), attributes);\n        }\n      }\n      else if (column == 2) {\n        for (int i = 1; i < text.length; i++) {\n          TextChunk textChunk = text[i];\n          final SimpleTextAttributes attrs = textChunk.getSimpleAttributesIgnoreBackground();\n          SimpleTextAttributes attributes = isSelected ?\n            new SimpleTextAttributes(bg, fg, fg, attrs.getStyle()) : deriveAttributesWithColor(attrs, fileBgColor);\n          textChunks.append(textChunk.getText(), attributes);\n        }\n      }\n      else {\n        assert false : column;\n      }\n    }\n    panel.add(textChunks);\n    return panel;\n  }","id":54011,"modified_method":"@Override\n  public Component getTableCellRendererComponent(JTable list, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n    UsageNode usageNode = value instanceof UsageNode ? (UsageNode)value : null;\n    Usage usage = usageNode == null ? null : usageNode.getUsage();\n\n    Color fileBgColor = getBackgroundColor(isSelected, usage);\n    Color bg = UIUtil.getListSelectionBackground();\n    Color fg = UIUtil.getListSelectionForeground();\n    Color panelBackground = isSelected ? bg : fileBgColor == null ? list.getBackground() : fileBgColor;\n    Color panelForeground = isSelected ? fg : list.getForeground();\n\n    SimpleColoredComponent textChunks = new SimpleColoredComponent();\n    if (usageNode == null || usageNode instanceof ShowUsagesAction.StringNode) {\n      textChunks.append(ObjectUtils.notNull(value, \"\").toString(), SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n      return textComponentSpanningWholeRow(textChunks, panelBackground, panelForeground, column, list);\n    }\n    if (usage == ShowUsagesAction.MORE_USAGES_SEPARATOR) {\n      textChunks.append(\"...<\");\n      textChunks.append(\"more usages\", SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n      textChunks.append(\">...\");\n      return textComponentSpanningWholeRow(textChunks, panelBackground, panelForeground, column, list);\n    }\n    else if (usage == ShowUsagesAction.USAGES_OUTSIDE_SCOPE_SEPARATOR) {\n      textChunks.append(\"...<\");\n      textChunks.append(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScope), SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n      textChunks.append(\">...\");\n      return textComponentSpanningWholeRow(textChunks, panelBackground, panelForeground, column, list);\n    }\n\n    boolean lineNumberColumn = column == 1;\n    JPanel panel = new JPanel(new FlowLayout(lineNumberColumn ? FlowLayout.RIGHT : FlowLayout.LEFT, 0, 0) {\n      @Override\n      public void layoutContainer(Container container) {\n        super.layoutContainer(container);\n        for (Component component : container.getComponents()) { // align inner components\n          Rectangle b = component.getBounds();\n          Insets insets = container.getInsets();\n          component.setBounds(b.x, b.y, b.width, container.getSize().height - insets.top - insets.bottom);\n        }\n      }\n    });\n    panel.setFont(null);\n    panel.setBackground(panelBackground);\n    panel.setForeground(panelForeground);\n\n    if (column == 0) {\n      appendGroupText((GroupNode)usageNode.getParent(), panel, fileBgColor);\n      return panel;\n    }\n    else if (usage != ShowUsagesAction.MORE_USAGES_SEPARATOR && usage != ShowUsagesAction.USAGES_OUTSIDE_SCOPE_SEPARATOR) {\n      UsagePresentation presentation = usage.getPresentation();\n      TextChunk[] text = presentation.getText();\n\n      if (lineNumberColumn) { // line number\n        if (text.length != 0) {\n          TextChunk chunk = text[0];\n          textChunks.append(chunk.getText(), getAttributes(isSelected, fileBgColor, bg, fg, chunk));\n        }\n      }\n      else if (column == 2) {\n        Icon icon = presentation.getIcon();\n        textChunks.setIcon(icon == null ? EmptyIcon.ICON_16 : icon);\n        textChunks.append(\"\").appendTextPadding(16 + 5);\n        for (int i = 1; i < text.length; i++) {\n          TextChunk chunk = text[i];\n          textChunks.append(chunk.getText(), getAttributes(isSelected, fileBgColor, bg, fg, chunk));\n        }\n      }\n      else {\n        assert false : column;\n      }\n    }\n    panel.add(textChunks);\n    return panel;\n  }","commit_id":"e0f21709ee3dcc16b52f397a69f55a6f1b970a83","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private static Component textComponentSpanningWholeRow(@NotNull SimpleColoredComponent chunks,\n                                                         Color panelBackground,\n                                                         Color panelForeground,\n                                                         final int column,\n                                                         @NotNull final JTable table, int row) {\n    final SimpleColoredComponent component = new SimpleColoredComponent() {\n      @Override\n      protected void doPaint(Graphics2D g) {\n        int offset = 0;\n        int i = 0;\n        final TableColumnModel columnModel = table.getColumnModel();\n        while (i < column) {\n          offset += columnModel.getColumn(i).getWidth();\n          i++;\n        }\n        g.translate(-offset, 0);\n\n        //if (column == columnModel.getColumnCount()-1) {\n        //}\n        setSize(getWidth()+offset, getHeight()); // should increase the column width so that selection background will be visible even after offset translation\n\n        super.doPaint(g);\n\n        g.translate(+offset, 0);\n      }\n\n      @NotNull\n      @Override\n      public Dimension getPreferredSize() {\n        //return super.getPreferredSize();\n        return column == table.getColumnModel().getColumnCount()-1 ? super.getPreferredSize() : new Dimension(0,0);\n        // it should span the whole row, so we can't return any specific value here,\n        // because otherwise it would be used in the \"max width\" calculation in com.intellij.find.actions.ShowUsagesAction.calcMaxWidth\n      }\n    };\n\n    component.setIpad(new Insets(0,0,0,0));\n    component.setBorder(null);\n    component.setBackground(panelBackground);\n    component.setForeground(panelForeground);\n\n    for (SimpleColoredComponent.ColoredIterator iterator = chunks.iterator(); iterator.hasNext(); ) {\n      iterator.next();\n      String fragment = iterator.getFragment();\n      SimpleTextAttributes attributes = iterator.getTextAttributes();\n      attributes = attributes.derive(attributes.getStyle(), panelForeground, panelBackground, attributes.getWaveColor());\n      component.append(fragment, attributes);\n    }\n\n    return component;\n  }","id":54012,"modified_method":"@NotNull\n  private static Component textComponentSpanningWholeRow(@NotNull SimpleColoredComponent chunks,\n                                                         Color panelBackground,\n                                                         Color panelForeground,\n                                                         final int column,\n                                                         @NotNull final JTable table) {\n    final SimpleColoredComponent component = new SimpleColoredComponent() {\n      @Override\n      protected void doPaint(Graphics2D g) {\n        int offset = 0;\n        int i = 0;\n        final TableColumnModel columnModel = table.getColumnModel();\n        while (i < column) {\n          offset += columnModel.getColumn(i).getWidth();\n          i++;\n        }\n        g.translate(-offset, 0);\n\n        //if (column == columnModel.getColumnCount()-1) {\n        //}\n        setSize(getWidth()+offset, getHeight()); // should increase the column width so that selection background will be visible even after offset translation\n\n        super.doPaint(g);\n\n        g.translate(+offset, 0);\n      }\n\n      @NotNull\n      @Override\n      public Dimension getPreferredSize() {\n        //return super.getPreferredSize();\n        return column == table.getColumnModel().getColumnCount()-1 ? super.getPreferredSize() : new Dimension(0,0);\n        // it should span the whole row, so we can't return any specific value here,\n        // because otherwise it would be used in the \"max width\" calculation in com.intellij.find.actions.ShowUsagesAction.calcMaxWidth\n      }\n    };\n\n    component.setBackground(panelBackground);\n    component.setForeground(panelForeground);\n\n    for (SimpleColoredComponent.ColoredIterator iterator = chunks.iterator(); iterator.hasNext(); ) {\n      iterator.next();\n      String fragment = iterator.getFragment();\n      SimpleTextAttributes attributes = iterator.getTextAttributes();\n      attributes = attributes.derive(attributes.getStyle(), panelForeground, panelBackground, attributes.getWaveColor());\n      component.append(fragment, attributes);\n    }\n\n    return component;\n  }","commit_id":"e0f21709ee3dcc16b52f397a69f55a6f1b970a83","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void appendGroupText(final GroupNode node, JPanel panel, Color fileBgColor) {\n    UsageGroup group = node == null ? null : node.getGroup();\n    if (group == null) return;\n    GroupNode parentGroup = (GroupNode)node.getParent();\n    appendGroupText(parentGroup, panel, fileBgColor);\n    if (node.canNavigateToSource()) {\n      SimpleColoredComponent renderer = new SimpleColoredComponent();\n\n      renderer.setIcon(group.getIcon(false));\n      SimpleTextAttributes attributes = deriveAttributesWithColor(SimpleTextAttributes.REGULAR_ATTRIBUTES, fileBgColor);\n      renderer.append(group.getText(myUsageView), attributes);\n      renderer.append(\" \", attributes);\n      renderer.setIpad(new Insets(0,0,0,0));\n      renderer.setBorder(null);\n      panel.add(renderer);\n    }\n  }","id":54013,"modified_method":"private void appendGroupText(final GroupNode node, JPanel panel, Color fileBgColor) {\n    UsageGroup group = node == null ? null : node.getGroup();\n    if (group == null) return;\n    GroupNode parentGroup = (GroupNode)node.getParent();\n    appendGroupText(parentGroup, panel, fileBgColor);\n    if (node.canNavigateToSource()) {\n      SimpleColoredComponent renderer = new SimpleColoredComponent();\n      renderer.setIcon(group.getIcon(false));\n      SimpleTextAttributes attributes = deriveAttributesWithColor(SimpleTextAttributes.REGULAR_ATTRIBUTES, fileBgColor);\n      renderer.append(group.getText(myUsageView), attributes);\n      renderer.setBorder(null);\n      panel.add(renderer);\n    }\n  }","commit_id":"e0f21709ee3dcc16b52f397a69f55a6f1b970a83","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void customizeCellRenderer(@NotNull JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n    boolean showAsReadOnly = false;\n    if (value instanceof Node && value != tree.getModel().getRoot()) {\n      Node node = (Node)value;\n      if (!node.isValid()) {\n        append(UsageViewBundle.message(\"node.invalid\") + \" \", UIUtil.isUnderDarcula() ? ourInvalidAttributesDarcula : ourInvalidAttributes);\n      }\n      if (myPresentation.isShowReadOnlyStatusAsRed() && node.isReadOnly()) {\n        showAsReadOnly = true;\n      }\n    }\n\n    myCalculated = false;\n    if (value instanceof DefaultMutableTreeNode) {\n      DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode)value;\n      Object userObject = treeNode.getUserObject();\n\n      Rectangle visibleRect = ((JViewport)tree.getParent()).getViewRect();\n      if (!visibleRect.isEmpty()) {\n        //Protection against SOE on some OSes and JDKs IDEA-120631\n        RowLocation visible = myRowBoundsCalled ? RowLocation.INSIDE_VISIBLE_RECT : isRowVisible(row, visibleRect);\n        myRowBoundsCalled = false;\n        if (visible != RowLocation.INSIDE_VISIBLE_RECT) {\n          // for the node outside visible rect do not compute (expensive) presentation\n          return;\n        }\n        if (!getIpad().equals(STANDARD_IPAD_NOWIFI)) {\n          // for the visible node, return its ipad to the standard value\n          setIpad(STANDARD_IPAD_NOWIFI);\n        }\n      }\n\n      // we can be called recursively via isRowVisible()\n      if (myCalculated) return;\n      myCalculated = true;\n\n      if (userObject instanceof UsageTarget) {\n        UsageTarget usageTarget = (UsageTarget)userObject;\n        if (!usageTarget.isValid()) {\n          append(UsageViewBundle.message(\"node.invalid\"), ourInvalidAttributes);\n          return;\n        }\n\n        final ItemPresentation presentation = usageTarget.getPresentation();\n        LOG.assertTrue(presentation != null);\n        if (showAsReadOnly) {\n          append(UsageViewBundle.message(\"node.readonly\") + \" \", ourReadOnlyAttributes);\n        }\n        final String text = presentation.getPresentableText();\n        append(text == null ? \"\" : text, SimpleTextAttributes.REGULAR_ATTRIBUTES);\n        setIcon(presentation.getIcon(expanded));\n      }\n      else if (treeNode instanceof GroupNode) {\n        GroupNode node = (GroupNode)treeNode;\n\n        if (node.isRoot()) {\n          append(StringUtil.capitalize(myPresentation.getUsagesWord()), patchAttrs(node, SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES));\n        }\n        else {\n          append(node.getGroup().getText(myView),\n                 patchAttrs(node, showAsReadOnly ? ourReadOnlyAttributes : SimpleTextAttributes.REGULAR_ATTRIBUTES));\n          setIcon(node.getGroup().getIcon(expanded));\n        }\n\n        int count = node.getRecursiveUsageCount();\n        append(\" (\" + StringUtil.pluralize(count + \" \" + myPresentation.getUsagesWord(), count) + \")\",\n               patchAttrs(node, ourNumberOfUsagesAttribute));\n      }\n      else if (treeNode instanceof UsageNode) {\n        UsageNode node = (UsageNode)treeNode;\n        setIcon(node.getUsage().getPresentation().getIcon());\n        if (showAsReadOnly) {\n          append(UsageViewBundle.message(\"node.readonly\") + \" \", patchAttrs(node, ourReadOnlyAttributes));\n        }\n\n        if (node.isValid()) {\n          TextChunk[] text = node.getUsage().getPresentation().getText();\n          for (TextChunk textChunk : text) {\n            SimpleTextAttributes simples = textChunk.getSimpleAttributesIgnoreBackground();\n            append(textChunk.getText(), patchAttrs(node, simples));\n          }\n        }\n      }\n      else if (userObject instanceof String) {\n        append((String)userObject, SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n      }\n      else {\n        append(userObject == null ? \"\" : userObject.toString(), SimpleTextAttributes.REGULAR_ATTRIBUTES);\n      }\n    }\n    else {\n      append(value.toString(), SimpleTextAttributes.REGULAR_ATTRIBUTES);\n    }\n    SpeedSearchUtil.applySpeedSearchHighlighting(tree, this, true, mySelected);\n  }","id":54014,"modified_method":"@Override\n  public void customizeCellRenderer(@NotNull JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {\n    boolean showAsReadOnly = false;\n    if (value instanceof Node && value != tree.getModel().getRoot()) {\n      Node node = (Node)value;\n      if (!node.isValid()) {\n        append(UsageViewBundle.message(\"node.invalid\") + \" \", UIUtil.isUnderDarcula() ? ourInvalidAttributesDarcula : ourInvalidAttributes);\n      }\n      if (myPresentation.isShowReadOnlyStatusAsRed() && node.isReadOnly()) {\n        showAsReadOnly = true;\n      }\n    }\n\n    myCalculated = false;\n    if (value instanceof DefaultMutableTreeNode) {\n      DefaultMutableTreeNode treeNode = (DefaultMutableTreeNode)value;\n      Object userObject = treeNode.getUserObject();\n\n      Rectangle visibleRect = ((JViewport)tree.getParent()).getViewRect();\n      if (!visibleRect.isEmpty()) {\n        //Protection against SOE on some OSes and JDKs IDEA-120631\n        RowLocation visible = myRowBoundsCalled ? RowLocation.INSIDE_VISIBLE_RECT : isRowVisible(row, visibleRect);\n        myRowBoundsCalled = false;\n        if (visible != RowLocation.INSIDE_VISIBLE_RECT) {\n          // for the node outside visible rect do not compute (expensive) presentation\n          return;\n        }\n        if (!getIpad().equals(STANDARD_IPAD_NOWIFI)) {\n          // for the visible node, return its ipad to the standard value\n          setIpad(STANDARD_IPAD_NOWIFI);\n        }\n      }\n\n      // we can be called recursively via isRowVisible()\n      if (myCalculated) return;\n      myCalculated = true;\n\n      if (userObject instanceof UsageTarget) {\n        UsageTarget usageTarget = (UsageTarget)userObject;\n        if (!usageTarget.isValid()) {\n          append(UsageViewBundle.message(\"node.invalid\"), ourInvalidAttributes);\n          return;\n        }\n\n        final ItemPresentation presentation = usageTarget.getPresentation();\n        LOG.assertTrue(presentation != null);\n        if (showAsReadOnly) {\n          append(UsageViewBundle.message(\"node.readonly\") + \" \", ourReadOnlyAttributes);\n        }\n        final String text = presentation.getPresentableText();\n        append(text == null ? \"\" : text, SimpleTextAttributes.REGULAR_ATTRIBUTES);\n        setIcon(presentation.getIcon(expanded));\n      }\n      else if (treeNode instanceof GroupNode) {\n        GroupNode node = (GroupNode)treeNode;\n\n        if (node.isRoot()) {\n          append(StringUtil.capitalize(myPresentation.getUsagesWord()), patchAttrs(node, SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES));\n        }\n        else {\n          append(node.getGroup().getText(myView),\n                 patchAttrs(node, showAsReadOnly ? ourReadOnlyAttributes : SimpleTextAttributes.REGULAR_ATTRIBUTES));\n          setIcon(node.getGroup().getIcon(expanded));\n        }\n\n        int count = node.getRecursiveUsageCount();\n        SimpleTextAttributes attributes = patchAttrs(node, ourNumberOfUsagesAttribute);\n        append(FontUtil.spaceAndThinSpace() + StringUtil.pluralize(count + \" \" + myPresentation.getUsagesWord(), count),\n               SimpleTextAttributes.GRAYED_ATTRIBUTES.derive(attributes.getStyle(), null, null, null));\n      }\n      else if (treeNode instanceof UsageNode) {\n        UsageNode node = (UsageNode)treeNode;\n        setIcon(node.getUsage().getPresentation().getIcon());\n        if (showAsReadOnly) {\n          append(UsageViewBundle.message(\"node.readonly\") + \" \", patchAttrs(node, ourReadOnlyAttributes));\n        }\n\n        if (node.isValid()) {\n          TextChunk[] text = node.getUsage().getPresentation().getText();\n          for (int i = 0; i < text.length; i++) {\n            TextChunk textChunk = text[i];\n            SimpleTextAttributes simples = textChunk.getSimpleAttributesIgnoreBackground();\n            append(textChunk.getText() + (i == 0 ? \" \" : \"\"), patchAttrs(node, simples));\n          }\n        }\n      }\n      else if (userObject instanceof String) {\n        append((String)userObject, SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES);\n      }\n      else {\n        append(userObject == null ? \"\" : userObject.toString(), SimpleTextAttributes.REGULAR_ATTRIBUTES);\n      }\n    }\n    else {\n      append(value.toString(), SimpleTextAttributes.REGULAR_ATTRIBUTES);\n    }\n    SpeedSearchUtil.applySpeedSearchHighlighting(tree, this, true, mySelected);\n  }","commit_id":"e0f21709ee3dcc16b52f397a69f55a6f1b970a83","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public java.awt.Component getTableCellRendererComponent(\n                                    javax.swing.JTable jTable, \n                                    Object obj, \n                                    boolean isSelected, \n                                    boolean hasFocus, \n                                    int row, \n                                    int col)\n        {\n            final LWPathway.Entry entry = getTableModel().getEntry(row);\n            if (entry == null)\n                return null;\n            \n            \n            \n            this.setBorder(DefaultBorder);\n            \n            if (entry.isPathway()) {\n                boolean bool = false;\n                if (obj instanceof Boolean)\n                    bool = ((Boolean)obj).booleanValue();\n                \n                if (col == PathwayTableModel.COL_VISIBLEnMAPVIEW) {\n                    setIcon(bool ? eyeOpen : eyeClosed);\n                    setBorder(iconBorder);\n                    setToolTipText(\"Show/hide pathway\");\n                }              \n                else if (col == PathwayTableModel.COL_NOTES) {\n                    if (entry.node == VUE.getActivePathway()  && entry.pathway.getCurrentEntry() == entry)\n                        setBackground(selectedColor);\n                    else\n                        setBackground(BGColor);\n                                        \n                }\n                else if (col == PathwayTableModel.COL_LOCKED) {\n                    setIcon(bool ? lockIcon : lockOpenIcon);\n                    if (entry.node == VUE.getActivePathway() && entry.pathway.getCurrentEntry() == entry)\n                        setBackground(selectedColor);\n                    else\n                        setBackground(BGColor);\n                    setToolTipText(\"Is locked\");\n                }\n                else\n                {\n                    if (entry.node == VUE.getActivePathway()  && entry.pathway.getCurrentEntry() == entry)\n                        setBackground(selectedColor);\n                    else\n                        setBackground(BGColor);\n                }\n            }\n\n            // This applies to both regular entries as well as pathway entries:           \n            if (col == PathwayTableModel.COL_NOTES) {\n                if (entry.hasNotes()) {\n                    setIcon(notesIcon);\n                    setToolTipText(entry.getNotes());\n                } else {\n                    setToolTipText(null);\n                    setIcon(null);\n                }\n            }  else if (col == PathwayTableModel.COL_VISIBLEnMAPVIEW && !entry.isPathway()) \n            {\n            \tboolean bool = false;\n                if (obj instanceof Boolean)\n                    bool = ((Boolean)obj).booleanValue();\n                setBorder(iconBorder);\n                if (entry.hasVariableDisplayMode())\n                    setIcon(bool ? mapViewIcon : slideViewIcon);\n                else\n                    setIcon(null);\n                setToolTipText(\"Toggle map/slide node\");\n                final LWPathway activePathway = VUE.getActivePathway();\n            \tif (entry.pathway == activePathway && entry.pathway.getCurrentEntry() == entry) \n        \t\t{\n        \t\t\tsetBackground(selectedColor);\n        \t\t\tsetForeground(selectedColor);\n            \t\tsetOpaque(true);        \t\t\t        \t\t\t\n        \t\t}\n        \t\telse\n        \t\t{\n        \t\t\tsetBackground(BGColor);\n        \t\t\tsetOpaque(true);        \t\t\t\n        \t\t\tsetForeground(BGColor);        \t\t\t\n        \t\t}\n            } \n            else if (!entry.isPathway())\n            {\n            \tfinal LWPathway activePathway = VUE.getActivePathway();\n            \t//System.out.println(\"return null\");\n            \tif (entry.pathway == activePathway && entry.pathway.getCurrentEntry() == entry) \n        \t\t{\n        \t\t\tsetBackground(selectedColor);\n        \t\t\tsetForeground(selectedColor);\n            \t\tsetOpaque(true);\n        \t\t\tsetIcon(null);\n        \t\t\t\n        \t\t}\n        \t\telse\n        \t\t{\n        \t\t\tsetBackground(BGColor);\n        \t\t\tsetOpaque(true);        \t\t\t\n        \t\t\tsetForeground(BGColor);\n        \t\t\tsetIcon(null);\n        \t\t}\n        \t\treturn this;             \n            }\n            \n           if (entry.isPathway())\n           {\n        \t   GradientLabel gl = new GradientLabel(entry.pathway);\n        \t   this.setOpaque(false);\n        \t   gl.add(this);\n        \t   return gl;\n           }\n           else        \t   \n            return this;            \n        }","id":54015,"modified_method":"public java.awt.Component getTableCellRendererComponent(\n                                    javax.swing.JTable jTable, \n                                    Object obj, \n                                    boolean isSelected, \n                                    boolean hasFocus, \n                                    int row, \n                                    int col)\n        {\n            final LWPathway.Entry entry = getTableModel().getEntry(row);\n            if (entry == null)\n                return this;\n                                    \n            this.setBorder(DefaultBorder);\n            \n            \n            if (entry.isPathway()) \n            {\n                boolean bool = false;\n                if (obj instanceof Boolean)\n                    bool = ((Boolean)obj).booleanValue();\n                \n                if (col == PathwayTableModel.COL_VISIBLE) {\n                    setIcon(bool ? eyeOpen : eyeClosed);\n                    setBorder(iconBorder);\n                    setToolTipText(\"Show/hide pathway\");\n                }              \n                else if (col == PathwayTableModel.COL_NOTES) {\n                    if (entry.node == VUE.getActivePathway()  && entry.pathway.getCurrentEntry() == entry)\n                        setBackground(selectedColor);\n                    else\n                        setBackground(BGColor);\n                    \n                    if (entry.hasNotes()) {\n                        setIcon(notesIcon);\n                        setToolTipText(entry.getNotes());\n                    } else {\n                        setToolTipText(null);\n                        setIcon(null);\n                    }                                        \n                }\n                else if (col == PathwayTableModel.COL_LOCKEDnMAPVIEW) {                \t\n            \t\t\n                    setBorder(iconBorder);\n                    setIcon(bool ? lockIcon : lockOpenIcon);\n                    this.setAlignmentY(JLabel.CENTER_ALIGNMENT);\n                    if (entry.node == VUE.getActivePathway() && entry.pathway.getCurrentEntry() == entry)\n                        setBackground(selectedColor);\n                    else\n                        setBackground(BGColor);\n                    setToolTipText(\"Is locked\");\n                }\n                else\n                {\n                    if (entry.node == VUE.getActivePathway()  && entry.pathway.getCurrentEntry() == entry)\n                        setBackground(selectedColor);\n                    else\n                        setBackground(BGColor);\n                }\n               \n               GradientLabel gl = new GradientLabel(entry.pathway);\n         \t   this.setOpaque(false);\n         \t   gl.add(this);\n         \t   return gl;\n            }\n            else\n            {\n            \tfinal LWPathway activePathway = VUE.getActivePathway();\n            \t//System.out.println(\"return null\");\n            \tif (entry.pathway == activePathway && entry.pathway.getCurrentEntry() == entry) \n        \t\t{\n        \t\t\tsetBackground(selectedColor);\n        \t\t\tsetForeground(selectedColor);\n            \t\tsetOpaque(true);            \t\n        \t\t\tsetIcon(null);\n        \t\t\t\n        \t\t}\n        \t\telse\n        \t\t{\n        \t\t\tsetBackground(BGColor);\n        \t\t\tsetOpaque(true);        \t\t\n        \t\t\tsetForeground(BGColor);\n        \t\t\tsetIcon(null);\n        \t\t}\n            \t\n                if (col == PathwayTableModel.COL_NOTES) {\n                    if (entry.hasNotes()) {\n                        setIcon(notesIcon);\n                        setToolTipText(entry.getNotes());\n                    } else {\n                        setToolTipText(null);\n                        setIcon(null);\n                    }\n                }\n                else if (col == PathwayTableModel.COL_LOCKEDnMAPVIEW) \n                {\n                \tboolean bool = false;\n                    if (obj instanceof Boolean)\n                        bool = ((Boolean)obj).booleanValue();\n                    \n                    setBorder(iconBorder);\n                    \n                    if (entry.hasVariableDisplayMode())\n                        setIcon(bool ? mapViewIcon : slideViewIcon);\n                    else\n                        setIcon(null);\n                    \n                    setToolTipText(\"Toggle map/slide node\");\n                    \n                } \n\n        \t\treturn this;             \n            }                                             \t                \n        }","commit_id":"46e12cf84b25b096b89228e3728a92b141fae64a","url":"https://github.com/VUE/VUE"},{"original_method":"public void mousePressed(MouseEvent e) {\n\t\t  int row = getSelectedRow();\n\t\t  PathwayTableModel tableModel = getTableModel();\n\t      lastSelectedRow = row;\n\t      int col = getSelectedColumn();\n\t      \n\t      if (DEBUG.PATHWAY) System.out.println(\"PathwayTable: valueChanged: selected row \"+row+\", col \"+col);\n\t                    \n\t                    \n\t      final LWPathway.Entry entry = tableModel.getEntry(row);\t\n\t\n\t    if (entry.isPathway()) \n\t    {\n            if (col == PathwayTableModel.COL_VISIBLEnMAPVIEW ||\n                col == PathwayTableModel.COL_OPEN ||\n                col == PathwayTableModel.COL_LOCKED) {\n                // setValue forces a value toggle in these cases\n                setValueAt(entry.pathway, row, col);\n        //        selectedEntry = false;\n            }\n            //pathway.setCurrentIndex(-1);\n        } \n\t    else if (col == PathwayTableModel.COL_VISIBLEnMAPVIEW && entry.hasVariableDisplayMode()) \n        {\n            setValueAt(entry.pathway, row,col);\n          //  selectedEntry = false;\n        }\n    }","id":54016,"modified_method":"public void mousePressed(MouseEvent e) {\n\t\t  int row = getSelectedRow();\n\t\t  PathwayTableModel tableModel = getTableModel();\n\t      lastSelectedRow = row;\n\t      int col = getSelectedColumn();\n\t      \n\t      if (DEBUG.PATHWAY) System.out.println(\"PathwayTable: valueChanged: selected row \"+row+\", col \"+col);\n\t                    \n\t                    \n\t      final LWPathway.Entry entry = tableModel.getEntry(row);\t\n\t\n\t    if (entry.isPathway()) \n\t    {\n            if (col == PathwayTableModel.COL_VISIBLE ||\n                col == PathwayTableModel.COL_OPEN ||\n                col == PathwayTableModel.COL_LOCKEDnMAPVIEW) {\n                // setValue forces a value toggle in these cases\n                setValueAt(entry.pathway, row, col);\n        //        selectedEntry = false;\n            }\n            //pathway.setCurrentIndex(-1);\n        } \n\t    else if (col == PathwayTableModel.COL_LOCKEDnMAPVIEW && entry.hasVariableDisplayMode()) \n        {\n            setValueAt(entry.pathway, row,col);\n          //  selectedEntry = false;\n        }\n    }","commit_id":"46e12cf84b25b096b89228e3728a92b141fae64a","url":"https://github.com/VUE/VUE"},{"original_method":"public java.awt.Component getTableCellRendererComponent(\n                                    javax.swing.JTable jTable, \n                                    Object value, \n                                    boolean isSelected, \n                                    boolean hasFocus, \n                                    int row, \n                                    int col)\n        {\n            final LWPathway.Entry entry = getTableModel().getEntry(row);\n            if (entry == null)\n                return null;\n         \n           // setBorder(DefaultBorder);\n\n            String debug = \"\";\n\n            if (DEBUG.PATHWAY) debug = \"(row\"+row+\")\";\n            GradientLabel gl = new GradientLabel(entry.pathway);\n            \n            setMinimumSize(new Dimension(10, 20));\n            setPreferredSize(new Dimension(500, 20));      \n            setOpaque(true);\n            \n            if (entry.isPathway())\n            {\n            \t  if (col == PathwayTableModel.COL_OPEN) \n            \t  {\n                  \tboolean bool = false;\n                    if (value instanceof Boolean)\n                        bool = ((Boolean)value).booleanValue();\n                  \n                  \tsetFont(new Font(\"Lucida Sans Unicode\", Font.PLAIN, 20));\n                  \tsetForeground(Color.white);\n                  \tsetText(bool ? \" \"+DownArrowChar : \" \"+RightArrowChar);                  \n                  }\n            \t  else\n            \t  {\n            \t\t  final LWPathway p = entry.pathway;\n            \t\t  /*if (p == VUE.getActivePathway())\n                    \tsetBackground(Color.red);\n                \telse*/\n            \t\t  //Background is always going to be gradient now.\n                \n            \t\t setBackground(BGColor);\n            \t\t setFont(PathwayFont);\n            \t\t setForeground(Color.white);\n            \t\t setText(debug+\"   \" + entry.getLabel());            \t\t\n            \t  }\n            }\n            else {\n            \t//entry is not a pathway if you're in the wrong column go null;\n            \t\n            \t//only return the label for the proper column...\n            \t\n            \tfinal LWPathway activePathway = VUE.getActivePathway();\n            \t\n            \tif (col != PathwayTableModel.COL_LABEL)\n            \t{\n            \t\tif (entry.pathway == activePathway && entry.pathway.getCurrentEntry() == entry) \n            \t\t{\n            \t\t\tsetBackground(selectedColor);\n            \t\t\tsetForeground(selectedColor);\n            \t\t\t\n            \t\t}\n            \t\telse\n            \t\t{\n            \t\t\tsetBackground(BGColor);\n            \t\t\tsetForeground(BGColor);\n            \t\t}\n            \t\treturn this;\n            \t}\n            \t\n                setFont(SelectedEntryFont);\n            \tsetForeground(Color.black);\n                if (entry.pathway == activePathway && entry.pathway.getCurrentEntry() == entry) {\n                    // This is the current item on the current path\n                                        \n                \tsetBackground(selectedColor); \n                    \n                    \tsetText(debug+\"   \"+entry.getLabel());\n                    //setText(debug+\"  * \"+getText());\n                } else {\n                   // setFont(EntryFont);\n                    \n                    \n                \tsetText(debug+\"   \"+entry.getLabel());\n                        if (entry.node != null && (entry.node.isFiltered() || entry.node.isHidden()))\n                            setForeground(Color.lightGray);\n                        \n                        \n                }\n            }\n            \n            if (entry.isPathway())\n            {\n            \tthis.setOpaque(false);\n            \tgl.setLayout(new BorderLayout());\n            \tgl.add(this,BorderLayout.CENTER);            \t\n            \treturn gl;\n            }\n            else                  \t\n            \treturn this;\n        }","id":54017,"modified_method":"public java.awt.Component getTableCellRendererComponent(\n                                    javax.swing.JTable jTable, \n                                    Object value, \n                                    boolean isSelected, \n                                    boolean hasFocus, \n                                    int row, \n                                    int col)\n        {\n            final LWPathway.Entry entry = getTableModel().getEntry(row);\n            String debug = \"\";\n            \n            if (entry == null)\n                return this;\n         \n            if (DEBUG.PATHWAY) debug = \"(row\"+row+\")\";\n         \n            GradientLabel gl = new GradientLabel(entry.pathway);\n            JLabel label = new JLabel();\n            \n            setMinimumSize(new Dimension(10, 20));\n            setPreferredSize(new Dimension(500, 20));      \n\n            \n            if (entry.isPathway())\n            {\n            \t  if (col == PathwayTableModel.COL_OPEN) \n            \t  {\n                  \tboolean bool = false;\n                    if (value instanceof Boolean)\n                        bool = ((Boolean)value).booleanValue();\n                  \n                  \tsetFont(new Font(\"Lucida Sans Unicode\", Font.PLAIN, 20));\n                  \tsetForeground(Color.white);\n                  \tsetText(bool ? \" \"+DownArrowChar : \" \"+RightArrowChar);                  \n                  }\n            \t  else\n            \t  {\n            \t\t  final LWPathway p = entry.pathway;\n            \t\t  /*if (p == VUE.getActivePathway())\n                    \tsetBackground(Color.red);\n                \telse*/\n            \t\t  //Background is always going to be gradient now.\n                \n            \t\t setBackground(BGColor);\n            \t\t setFont(PathwayFont);\n            \t\t setForeground(Color.white);\n            \t\t setText(debug+\"   \" + entry.getLabel());            \t\t\n            \t  }\n            \tthis.setOpaque(false);\n                gl.setLayout(new BorderLayout());\n                gl.add(this,BorderLayout.CENTER);            \t\n                return gl;\n            }\n            else {\n            \t//entry is not a pathway if you're in the wrong column go null;            \t\n            \t//only return the label for the proper column...\n            \t\n            \tfinal LWPathway activePathway = VUE.getActivePathway();\n            \t\n            \tif (col != PathwayTableModel.COL_LABEL)\n            \t{\n            \t\tif (entry.pathway == activePathway && entry.pathway.getCurrentEntry() == entry) \n            \t\t{\n            \t\t\tsetBackground(selectedColor);\n            \t\t\tsetForeground(selectedColor);            \t\t\t            \t\t\t\n            \t\t}\n            \t\telse\n            \t\t{\n            \t\t\tsetBackground(BGColor);\n            \t\t\tsetForeground(BGColor);\n            \t\t}\n            \t\tthis.setOpaque(false);\n                \tlabel.setForeground(this.getForeground());\n                \tlabel.setBackground(this.getBackground());\n                \tlabel.setOpaque(true);\n                \tlabel.setLayout(new BorderLayout());\n                \tlabel.add(this,BorderLayout.CENTER);\n                \treturn label;\n            \t}\n            \t\n                setFont(SelectedEntryFont);\n            \tsetForeground(Color.black);\n                if (entry.pathway == activePathway && entry.pathway.getCurrentEntry() == entry) {\n                    // This is the current item on the current path\n                                        \n                \tsetBackground(selectedColor); \n                    \n                    \tsetText(debug+\"   \"+entry.getLabel());\n                    //setText(debug+\"  * \"+getText());\n                } else {\n                   // setFont(EntryFont);\n                    \n                    \n                \tsetText(debug+\"   \"+entry.getLabel());\n                        if (entry.node != null && (entry.node.isFiltered() || entry.node.isHidden()))\n                            setForeground(Color.lightGray);\n                        \n                        \n                }\n                \n            \tthis.setOpaque(false);\n            \tlabel.setForeground(this.getForeground());\n            \tlabel.setBackground(this.getBackground());\n            \tlabel.setOpaque(true);\n            \tlabel.setLayout(new BorderLayout());\n            \tlabel.add(this,BorderLayout.CENTER);\n            \treturn label;\n            }                        \t\n        }","commit_id":"46e12cf84b25b096b89228e3728a92b141fae64a","url":"https://github.com/VUE/VUE"},{"original_method":"public void mousePressed(MouseEvent e) {\n//\t\t\t TODO Auto-generated method stub\n\t        if (VUE.getActivePathway().isLocked())\n                return;\n            Color c = VueUtil.runColorChooser(\"Pathway Color Selection\", currentColor, VUE.getDialogParent());\n            fireEditingStopped();\n            if (c != null) {\n                // why the row checking here?\n                int row = getSelectedRow();\n                if (row == -1)\n                    row = lastSelectedRow;\n                if (row != -1)\n                    getTableModel().setValueAt(currentColor = c, row, 5);\n            }\t\t\n\t\t}","id":54018,"modified_method":"public void mousePressed(MouseEvent e) {\n//\t\t\t TODO Auto-generated method stub\n\t        if (VUE.getActivePathway().isLocked())\n                return;\n            Color c = VueUtil.runColorChooser(\"Pathway Color Selection\", currentColor, VUE.getDialogParent());\n            fireEditingStopped();\n            if (c != null) {\n                // why the row checking here?\n                int row = getSelectedRow();\n                if (row == -1)\n                    row = lastSelectedRow;\n                if (row != -1)\n                    getTableModel().setValueAt(currentColor = c, row, 4);\n            }\t\t\n\t\t}","commit_id":"46e12cf84b25b096b89228e3728a92b141fae64a","url":"https://github.com/VUE/VUE"},{"original_method":"public void setValueAt(Object aValue, int row, int col){\n        if (DEBUG.PATHWAY) System.out.println(this + \" setValutAt \" + row + \",\" + col + \" \" + aValue);\n        LWPathway.Entry entry = getEntry(row);\n        if (entry == null)\n            return;\n        \n        if (entry.isPathway()) {\n            LWPathway p = entry.pathway;\n            boolean bool = false;\n            if (aValue instanceof Boolean)\n                bool = ((Boolean)aValue).booleanValue();\n\n                 if (col == COL_VISIBLEnMAPVIEW) { p.setVisible(!p.isVisible()); }        // not proper (must use aValue to be proper)\n            else if (col == COL_COLOR)   { p.setStrokeColor((Color)aValue); }     // proper\n            else if (col == COL_OPEN)    { p.setOpen(!p.isOpen()); }              // not proper\n            else if (col == COL_LABEL)   { entry.setLabel((String)aValue); }      // proper\n            else if (col == COL_LOCKED)  { p.setLocked(!p.isLocked()); }          // not proper\n            //else if (col == COL_MAPVIEW)\n        \t//{entry.setMapView(((Boolean)aValue).booleanValue());        \t\n        \t//}\n           /* else if (col == COL_REVEALER) {\n                if (bool)\n                    getPathwayList().setRevealer(p);\n                else\n                    getPathwayList().setRevealer(null);\n            }*/\n        } else {\n            if (col == COL_LABEL) entry.setLabel((String)aValue);\n            else if (col == COL_VISIBLEnMAPVIEW)\n            \t{\n                    if (!entry.isOffMapSlide()) {\n                        entry.setMapView(!entry.isMapView());\n                        VUE.getSlideViewer().reload();\n                    }\n            \n            \t}\n            \t\n        }\n        VUE.getUndoManager().mark();\n        // all the above sets will trigger LWCEvents, listeneted to by the\n        // LWPathways they're in, which are listeneted to by their map's\n        // LWPathwayList, which is listented to by us, the PathwayTableModel.\n        // When we get the callback to LWCChanged, we call fireTableDataChanged.\n    }","id":54019,"modified_method":"public void setValueAt(Object aValue, int row, int col){\n        if (DEBUG.PATHWAY) System.out.println(this + \" setValutAt \" + row + \",\" + col + \" \" + aValue);\n        LWPathway.Entry entry = getEntry(row);\n        if (entry == null)\n            return;\n        \n        if (entry.isPathway()) {\n            LWPathway p = entry.pathway;\n            boolean bool = false;\n            if (aValue instanceof Boolean)\n                bool = ((Boolean)aValue).booleanValue();\n\n                 if (col == COL_VISIBLE) { p.setVisible(!p.isVisible()); }        // not proper (must use aValue to be proper)\n            else if (col == COL_COLOR)   { p.setStrokeColor((Color)aValue); }     // proper\n            else if (col == COL_OPEN)    { p.setOpen(!p.isOpen()); }              // not proper\n            else if (col == COL_LABEL)   { entry.setLabel((String)aValue); }      // proper\n            else if (col == COL_LOCKEDnMAPVIEW)  { p.setLocked(!p.isLocked()); }          // not proper\n            //else if (col == COL_MAPVIEW)\n        \t//{entry.setMapView(((Boolean)aValue).booleanValue());        \t\n        \t//}\n           /* else if (col == COL_REVEALER) {\n                if (bool)\n                    getPathwayList().setRevealer(p);\n                else\n                    getPathwayList().setRevealer(null);\n            }*/\n        } else {\n            if (col == COL_LABEL) entry.setLabel((String)aValue);\n            else if (col == COL_LOCKEDnMAPVIEW)\n            \t{\n                    if (!entry.isOffMapSlide()) {\n                        entry.setMapView(!entry.isMapView());\n                        VUE.getSlideViewer().reload();\n                    }\n            \n            \t}\n            \t\n        }\n        VUE.getUndoManager().mark();\n        // all the above sets will trigger LWCEvents, listeneted to by the\n        // LWPathways they're in, which are listeneted to by their map's\n        // LWPathwayList, which is listented to by us, the PathwayTableModel.\n        // When we get the callback to LWCChanged, we call fireTableDataChanged.\n    }","commit_id":"46e12cf84b25b096b89228e3728a92b141fae64a","url":"https://github.com/VUE/VUE"},{"original_method":"public Class getColumnClass(int col){\n        if (col == COL_COLOR)\n            return Color.class;\n        else if (col == COL_VISIBLEnMAPVIEW || col == COL_NOTES || col == COL_LOCKED)// || col == COL_MAPVIEW)\n            return ImageIcon.class;\n        else if (col == COL_LABEL || col == COL_OPEN)\n            return Object.class;\n       // else if (col == COL_REVEALER)\n       //     return Boolean.class;\n        //return javax.swing.JLabel.class;\n        else\n            return null;\n    }","id":54020,"modified_method":"public Class getColumnClass(int col){\n        if (col == COL_COLOR)\n            return Color.class;\n        else if (col == COL_VISIBLE || col == COL_NOTES || col == COL_LOCKEDnMAPVIEW)// || col == COL_MAPVIEW)\n            return ImageIcon.class;\n        else if (col == COL_LABEL || col == COL_OPEN)\n            return Object.class;\n       // else if (col == COL_REVEALER)\n       //     return Boolean.class;\n        //return javax.swing.JLabel.class;\n        else\n            return null;\n    }","commit_id":"46e12cf84b25b096b89228e3728a92b141fae64a","url":"https://github.com/VUE/VUE"},{"original_method":"public synchronized Object getValueAt(int row, int col)\n    {\n        final LWPathway.Entry entry = getEntry(row);\n        if (entry == null)\n            return null;\n        \n        if (entry.isPathway()) {\n            LWPathway p = entry.pathway;\n            try {\n                switch (col) {\n                case COL_VISIBLEnMAPVIEW: return new Boolean(p.isVisible());\n                case COL_COLOR: return p.getStrokeColor();\n                case COL_OPEN: return new Boolean(p.isOpen());\n                case COL_LABEL: return p.getDisplayLabel();\n                case COL_NOTES: return new Boolean(p.hasNotes());\n                case COL_LOCKED: return new Boolean(p.isLocked());\n              //  case COL_REVEALER: return new Boolean(getPathwayList().getRevealer() == p);\n                //case COL_REVEALER: return new Boolean(p.isRevealer());\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n                System.err.println(\"exception in the table model, setting pathway cell:\" + e);\n            } \n        } else {\n            try {\n                if (col == COL_LABEL)                               \t\n                    return entry.getLabel();  \n                else if (col == COL_VISIBLEnMAPVIEW)\n                    return new Boolean(entry.isMapView());\n            } catch (Exception e) {\n                e.printStackTrace();\n                System.err.println(\"exception in the table model, setting pathway element cell:\" + e);\n            }  \n        }\n        return null;\n    }","id":54021,"modified_method":"public synchronized Object getValueAt(int row, int col)\n    {\n        final LWPathway.Entry entry = getEntry(row);\n        if (entry == null)\n            return null;\n        \n        if (entry.isPathway()) {\n            LWPathway p = entry.pathway;\n            try {\n                switch (col) {\n                case COL_VISIBLE: return new Boolean(p.isVisible());\n                case COL_COLOR: return p.getStrokeColor();\n                case COL_OPEN: return new Boolean(p.isOpen());\n                case COL_LABEL: return p.getDisplayLabel();\n                case COL_NOTES: return new Boolean(p.hasNotes());\n                case COL_LOCKEDnMAPVIEW: return new Boolean(p.isLocked());\n              //  case COL_REVEALER: return new Boolean(getPathwayList().getRevealer() == p);\n                //case COL_REVEALER: return new Boolean(p.isRevealer());\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n                System.err.println(\"exception in the table model, setting pathway cell:\" + e);\n            } \n        } else {\n            try {\n                if (col == COL_LABEL)                               \t\n                    return entry.getLabel();  \n                else if (col == COL_LOCKEDnMAPVIEW)\n                    return new Boolean(entry.isMapView());\n            } catch (Exception e) {\n                e.printStackTrace();\n                System.err.println(\"exception in the table model, setting pathway element cell:\" + e);\n            }  \n        }\n        return null;\n    }","commit_id":"46e12cf84b25b096b89228e3728a92b141fae64a","url":"https://github.com/VUE/VUE"},{"original_method":"private static boolean checkVersion(Class<?> aClass) {\n    try {\n      Version v = (Version)aClass.newInstance();\n      boolean atLeast = true;\n      /*boolean atLeast = v.isAtLeast(1, 7, 0);\n      if (! atLeast) {\n        ourProblemDescription = \"JavaHL library version is old: \" + v.toString();\n      }*/\n      return atLeast;\n    }\n    catch (InstantiationException e) {\n      return false;\n    }\n    catch (IllegalAccessException e) {\n      return false;\n    } catch (Throwable e) {\n      return false;\n    }\n  }","id":54022,"modified_method":"private static boolean checkVersion(Class<?> aClass) {\n    try {\n      Version v = (Version)aClass.newInstance();\n      //boolean atLeast = true;\n      boolean atLeast = v.isAtLeast(1, 7, 0);\n      if (! atLeast) {\n        ourProblemDescription = \"JavaHL library version is old: \" + v.toString();\n      }\n      return atLeast;\n    }\n    catch (InstantiationException e) {\n      return false;\n    }\n    catch (IllegalAccessException e) {\n      return false;\n    } catch (Throwable e) {\n      return false;\n    }\n  }","commit_id":"e32822a515bd87c9c211c358583e903458963430","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void setAcceleration(SvnConfiguration17.UseAcceleration acceleration) {\n    if (! CheckJavaHL.isPresent()) {\n      myJavaHLAcceleration.setText(myJavaHLAcceleration.getText() + \". \" + CheckJavaHL.getProblemDescription());\n      myJavaHLAcceleration.setEnabled(false);\n      myJavaHLAcceleration.setForeground(Color.red);\n    }\n\n    if (SvnConfiguration17.UseAcceleration.javaHL.equals(acceleration)) {\n      myJavaHLAcceleration.setSelected(true);\n      return;\n    }\n    myNoAcceleration.setSelected(true);\n  }","id":54023,"modified_method":"private void setAcceleration(SvnConfiguration17.UseAcceleration acceleration) {\n    if (! CheckJavaHL.isPresent()) {\n      myJavaHLInfo.setText(CheckJavaHL.getProblemDescription());\n      myJavaHLInfo.setForeground(Color.red);\n      myJavaHLInfo.setEnabled(true);\n      myJavaHLAcceleration.setEnabled(false);\n      /*myJavaHLAcceleration.setText(myJavaHLAcceleration.getText() + \". \" + CheckJavaHL.getProblemDescription());\n      myJavaHLAcceleration.setEnabled(false);\n      myJavaHLAcceleration.setForeground(Color.red);*/\n    } else {\n      myJavaHLInfo.setText(\"You need to have JavaHL 1.7.2\");\n      myJavaHLInfo.setForeground(UIUtil.getInactiveTextColor());\n      myJavaHLAcceleration.setEnabled(true);\n    }\n\n    if (SvnConfiguration17.UseAcceleration.javaHL.equals(acceleration)) {\n      myJavaHLAcceleration.setSelected(true);\n      return;\n    }\n    myNoAcceleration.setSelected(true);\n  }","commit_id":"e32822a515bd87c9c211c358583e903458963430","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MetadataSearchMainGUI(DockWindow w) {\n        super();        \n        JPopupMenu popup = new JPopupMenu();\n        mapInfoStack = new WidgetStack(SEARCH_STR);        \n        // VUE.addActiveListener(LWMap.class, this);\n        setMinimumSize(new Dimension(320, 300));\n        setLayout(new BorderLayout());\n        mInfoPanel = new MetaSearchPanel();\n        mInfoPanel.setName(SEARCH_STR);\n        metadataPanel = new MetadataPanel();\n        metadataPanel.setName(SAVED_SEARCH_STR);\n        Widget.setWantsScroller(mapInfoStack, true);\n        adjustHeaderTableColumnModel();\n        // mTabbedPane.addTab(metadataPanel.getName(),metadataPanel);\n        mapInfoStack.addPane(mInfoPanel, 1f);\n        mapInfoStack.addPane(metadataPanel, 2f);        \n        \n        // Widget.setWantsScroller(mapInfoStack, true);\n        saveSearchAction = new AbstractAction(SAVE_SEARCH_STR) {\n            public void actionPerformed(ActionEvent e) {\n                \n            \tif(searchTermsTable.isEditing()){\n            \t\tsearchTermsTable.getCellEditor().stopCellEditing();\n                }\n                SearchData data = new SearchData();\n                searchDataList = new ArrayList<SearchData>();   \n                int rowCount = searchResultModel.getRowCount();\n                String searchName = (String) JOptionPane.showInputDialog(null,null,\"Please Enter Search Name\",JOptionPane.PLAIN_MESSAGE,null,null,(\"Search\" + \" \"+ (rowCount+1)));\n            \tif(searchName!=null && searchName.trim().length()==0){\n            \t\tsearchName = \"Search\" + \" \"+ (searchResultModel.getRowCount()+1);\n            \t}                \n                if(searchName!= null){\n                    data.setSearchSaveName(searchName);\n                    data.setSearchType(searchTypeCmbBox.getSelectedItem()\n                            .toString().trim());\n                    data.setMapType(mapCmbBox.getSelectedItem().toString()\n                            .trim());\n                    data.setResultType(resultCmbBox.getSelectedItem()\n                            .toString().trim());                    \n                    data.setAndOrType(strAndOrType);     \n                                          \n                    data.setDataList(searchTerms);\n                    searchDataList.add(data);                    \n                    searchResultModel.addRow(data);\n                    searchTerms = new ArrayList<VueMetadataElement>();\n                    if(searchResultModel.getData()!=null && VUE.getActiveMap()!=null){\n                    \tVUE.getActiveMap().setSearchArrLst(searchResultModel.getData());\n                    }\n                }\n            }\n        };\n        runSearchAction = new AbstractAction(RUN_SEARCH_STR) {\n            public void actionPerformed(ActionEvent e) {\n                searchButtonAction();            \n            }\n        };\n        renameAction = new AbstractAction(RENAME_STR) {\n            public void actionPerformed(ActionEvent e) {\n                searchResultModel.setEditableFlag(true);\n                int selectedIndex = searchResultTbl.getSelectedRow();\n                if (selectedIndex != -1){\n                    searchResultTbl.editCellAt(selectedIndex, 0);\n                    searchResultModel.setEditableFlag(false);\n                }\n            }\n        };\n        deleteAction = new AbstractAction(DELETE_STR) {\n            public void actionPerformed(ActionEvent e) {\n                int selectedIndex = searchResultTbl.getSelectedRow();\n                if (selectedIndex != -1){\n                    searchResultModel.removeRow(selectedIndex);\n                }\n            }\n        };\n        Widget.setMenuActions(metadataPanel, new Action[] { saveSearchAction,\n                runSearchAction, renameAction, deleteAction });\n        w.setContent(mapInfoStack);\n        w.setHeight(350);\n        w.setWidth(320);\n        validate();\n        setVisible(true);\n    }","id":54024,"modified_method":"public MetadataSearchMainGUI(DockWindow w) {\n        super();        \n        JPopupMenu popup = new JPopupMenu();\n        mapInfoStack = new WidgetStack(SEARCH_STR);        \n        // VUE.addActiveListener(LWMap.class, this);\n        setMinimumSize(new Dimension(300, 350));\n        setLayout(new BorderLayout());\n        mInfoPanel = new MetaSearchPanel();\n        mInfoPanel.setName(SEARCH_STR);\n        metadataPanel = new MetadataPanel();\n        metadataPanel.setName(SAVED_SEARCH_STR);\n        Widget.setWantsScroller(mapInfoStack, true);\n        adjustHeaderTableColumnModel();\n        // mTabbedPane.addTab(metadataPanel.getName(),metadataPanel);\n        mapInfoStack.addPane(mInfoPanel, 1f);\n        mapInfoStack.addPane(metadataPanel, 2f);        \n        \n        // Widget.setWantsScroller(mapInfoStack, true);\n        saveSearchAction = new AbstractAction(SAVE_SEARCH_STR) {\n            public void actionPerformed(ActionEvent e) {\n                \n            \tif(searchTermsTable.isEditing()){\n            \t\tsearchTermsTable.getCellEditor().stopCellEditing();\n                }\n                SearchData data = new SearchData();\n                searchDataList = new ArrayList<SearchData>();   \n                int rowCount = searchResultModel.getRowCount();\n                String searchName = (String) JOptionPane.showInputDialog(null,null,\"Please Enter Search Name\",JOptionPane.PLAIN_MESSAGE,null,null,(\"Search\" + \" \"+ (rowCount+1)));\n            \tif(searchName!=null && searchName.trim().length()==0){\n            \t\tsearchName = \"Search\" + \" \"+ (searchResultModel.getRowCount()+1);\n            \t}                \n                if(searchName!= null){\n                    data.setSearchSaveName(searchName);\n                    data.setSearchType(searchTypeCmbBox.getSelectedItem()\n                            .toString().trim());\n                    data.setMapType(mapCmbBox.getSelectedItem().toString()\n                            .trim());\n                    data.setResultType(resultCmbBox.getSelectedItem()\n                            .toString().trim());                    \n                    data.setAndOrType(strAndOrType);     \n                                          \n                    data.setDataList(searchTerms);\n                    searchDataList.add(data);                    \n                    searchResultModel.addRow(data);\n                    searchTerms = new ArrayList<VueMetadataElement>();\n                    if(searchResultModel.getData()!=null && VUE.getActiveMap()!=null){\n                    \tVUE.getActiveMap().setSearchArrLst(searchResultModel.getData());\n                    }\n                }\n            }\n        };\n        runSearchAction = new AbstractAction(RUN_SEARCH_STR) {\n            public void actionPerformed(ActionEvent e) {\n                searchButtonAction();            \n            }\n        };\n        renameAction = new AbstractAction(RENAME_STR) {\n            public void actionPerformed(ActionEvent e) {\n                searchResultModel.setEditableFlag(true);\n                int selectedIndex = searchResultTbl.getSelectedRow();\n                if (selectedIndex != -1){\n                    searchResultTbl.editCellAt(selectedIndex, 0);\n                    searchResultModel.setEditableFlag(false);\n                }\n            }\n        };\n        deleteAction = new AbstractAction(DELETE_STR) {\n            public void actionPerformed(ActionEvent e) {\n                int selectedIndex = searchResultTbl.getSelectedRow();\n                if (selectedIndex != -1){\n                    searchResultModel.removeRow(selectedIndex);\n                }\n            }\n        };\n        Widget.setMenuActions(metadataPanel, new Action[] { saveSearchAction,\n                runSearchAction, renameAction, deleteAction });\n        w.setContent(mapInfoStack);\n        w.setHeight(350);\n        w.setWidth(300);\n        validate();\n        setVisible(true);\n    }","commit_id":"a7dc81aeb8a0bae003eb2a211940a6de3a18db21","url":"https://github.com/VUE/VUE"},{"original_method":"public java.awt.Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int col)\n    {\t\t\n\t\tJPanel searchPanel = new JPanel();\n\t\tsearchPanel.setLayout(new BorderLayout());\t\t\n\t\t//java.util.List<SearchData> searchResultArrLst = (List<SearchData>) searchResultTableModel.getData(row);\n\t\tSearchData data = searchResultTableModel.getData(row);   \t\t\n\t\tJPanel runPanel = new JPanel();\n\t\trunPanel.setLayout(new BorderLayout());\n\t\tFont macFont = new Font(\"Lucinda Grande\", Font.BOLD, 11);\n\t\tFont windowsFont = new Font(\"Lucida Sans Unicode\", Font.BOLD, 11);\n\t\tif (isSelected) {\n\t\t\tsearchPanel.setBackground(new Color(188,212,255));\t\n\t\t\trunPanel.setBackground(new Color(188,212,255));\t\n        } else {\n        \tsearchPanel.setBackground(Color.white);\n        \tsearchPanel.setForeground(WidgetStack.BottomGradient);\n        \trunPanel.setBackground(Color.white);\n        \trunPanel.setForeground(WidgetStack.BottomGradient);\n        }\n\t\tJPanel linePanel = new JPanel() {\n            protected void paintComponent(java.awt.Graphics g) {\n            \t//setSize(300,20);\n                g.setColor(java.awt.Color.GRAY);                       \n                //g.drawLine(5,getHeight()/2, getWidth()-15, getHeight()/2);\n                int x1 = -5;\n                int x2 = getWidth();\n                int y1 = getHeight()/2+4;\n                int y2 = getHeight()/2+4;\n                int dashlength = 5;\n                int spacelength = 5;\n                if((x1==x2)&&(y1==y2)) {\n            \t\tg.drawLine(x1,y1,x2,y2);\n            \t\treturn;\n            \t\t}\n            \t\tdouble linelength=Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n            \t\tdouble yincrement=(y2-y1)/(linelength/(dashlength+spacelength));\n            \t\tdouble xincdashspace=(x2-x1)/(linelength/(dashlength+spacelength));\n            \t\tdouble yincdashspace=(y2-y1)/(linelength/(dashlength+spacelength));\n            \t\tdouble xincdash=(x2-x1)/(linelength/(dashlength));\n            \t\tdouble yincdash=(y2-y1)/(linelength/(dashlength));\n            \t\tint counter=0;\n            \t\tfor (double i=0;i<linelength-dashlength;i+=dashlength+spacelength){\n            \t\tg.drawLine((int) (x1+xincdashspace*counter),\n            \t\t  (int) (y1+yincdashspace*counter),\n            \t\t  (int) (x1+xincdashspace*counter+xincdash),\n            \t\t  (int) (y1+yincdashspace*counter+yincdash));\n            \t\tcounter++;\n            \t\t}\n            \t\tif ((dashlength+spacelength)*counter<=linelength)\n            \t\tg.drawLine((int) (x1+xincdashspace*counter),\n            \t\t (int) (y1+yincdashspace*counter),\n            \t\t x2,y2);            \t\n            }\n            \n            public java.awt.Dimension getMinimumSize()\n            {\n                 return new java.awt.Dimension(this.getWidth(),30);\n            }\n\t\t};\n\t\tif(col == 0){\t\t\t\n\t\t\tString lblStr = data.getSearchSaveName();\n\t\t\tJLabel searchLbl = new JLabel();\n\t\t\tsearchLbl.setFont(GUI.TitleFace);\n\t\t\tsearchLbl.setForeground(WidgetStack.BottomGradient);\n\t\t\tsearchLbl.setText(lblStr);\n\t\t\tsearchLbl.setBorder(BorderFactory.createEmptyBorder(0, 10, 0, 0));\t\t\t\n\t\t\tsearchPanel.add(searchLbl, BorderLayout.WEST);\t\t\t\n    \t\tboolean isWindows = VueUtil.isWindowsPlatform();    \t\t    \t\t\n    \t\tif(isWindows){\n    \t\t\tsearchPanel.setFont(GUI.TitleFace);\n    \t\t}else{\n    \t\t\tsearchPanel.setFont(macFont);\n    \t\t}\n\t\t\treturn searchPanel;\n\t\t}else{\t\t\t\n\t\t\tString runStr = \"<html><body><font color=\\\"Blue\\\"><u><b>run<\/b><\/u><\/font><\/body><\/html>\";\t\t\n\t\t\tJLabel runLbl = new JLabel();\n\t\t\trunLbl.setText(runStr);\t\t\n\t\t\trunLbl.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 10));\n\t\t\trunPanel.add(runLbl, BorderLayout.EAST);\t\t\t\n\t\t\t//runPanel.add(linePanel,BorderLayout.SOUTH);\t\t\t\n    \t\tboolean isWindows = VueUtil.isWindowsPlatform();    \t\t    \t\t\n    \t\tif(isWindows){\n    \t\t\trunPanel.setFont(GUI.TitleFace);\n    \t\t}else{\n    \t\t\trunPanel.setFont(macFont);\n    \t\t}\n\t\t\treturn runPanel;\n\t\t}\t\t\n\t\t\n    }","id":54025,"modified_method":"public java.awt.Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int col)\n    {\t\t\n\t\tJPanel searchPanel = new JPanel();\n\t\tsearchPanel.setLayout(new BorderLayout());\t\t\n\t\t//java.util.List<SearchData> searchResultArrLst = (List<SearchData>) searchResultTableModel.getData(row);\n\t\tSearchData data = searchResultTableModel.getData(row);   \t\t\n\t\tJPanel runPanel = new JPanel();\n\t\trunPanel.setLayout(new BorderLayout());\n\t\tFont macFont = new Font(\"Lucinda Grande\", Font.BOLD, 11);\n\t\tFont windowsFont = new Font(\"Lucida Sans Unicode\", Font.BOLD, 11);\n\t\tif (isSelected) {\n\t\t\tsearchPanel.setBackground(new Color(188,212,255));\t\n\t\t\trunPanel.setBackground(new Color(188,212,255));\t\n        } else {\n        \tsearchPanel.setBackground(Color.white);\n        \tsearchPanel.setForeground(WidgetStack.BottomGradient);\n        \trunPanel.setBackground(Color.white);\n        \trunPanel.setForeground(WidgetStack.BottomGradient);\n        }\n\t\tJPanel linePanel = new JPanel() {\n            protected void paintComponent(java.awt.Graphics g) {\n            \t//setSize(300,20);\n                g.setColor(java.awt.Color.GRAY);                       \n                //g.drawLine(5,getHeight()/2, getWidth()-15, getHeight()/2);\n                int x1 = -5;\n                int x2 = getWidth();\n                int y1 = getHeight()/2+4;\n                int y2 = getHeight()/2+4;\n                int dashlength = 5;\n                int spacelength = 5;\n                if((x1==x2)&&(y1==y2)) {\n            \t\tg.drawLine(x1,y1,x2,y2);\n            \t\treturn;\n            \t\t}\n            \t\tdouble linelength=Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n            \t\tdouble yincrement=(y2-y1)/(linelength/(dashlength+spacelength));\n            \t\tdouble xincdashspace=(x2-x1)/(linelength/(dashlength+spacelength));\n            \t\tdouble yincdashspace=(y2-y1)/(linelength/(dashlength+spacelength));\n            \t\tdouble xincdash=(x2-x1)/(linelength/(dashlength));\n            \t\tdouble yincdash=(y2-y1)/(linelength/(dashlength));\n            \t\tint counter=0;\n            \t\tfor (double i=0;i<linelength-dashlength;i+=dashlength+spacelength){\n            \t\tg.drawLine((int) (x1+xincdashspace*counter),\n            \t\t  (int) (y1+yincdashspace*counter),\n            \t\t  (int) (x1+xincdashspace*counter+xincdash),\n            \t\t  (int) (y1+yincdashspace*counter+yincdash));\n            \t\tcounter++;\n            \t\t}\n            \t\tif ((dashlength+spacelength)*counter<=linelength)\n            \t\tg.drawLine((int) (x1+xincdashspace*counter),\n            \t\t (int) (y1+yincdashspace*counter),\n            \t\t x2,y2);            \t\n            }\n            \n            public java.awt.Dimension getMinimumSize()\n            {\n                 return new java.awt.Dimension(this.getWidth(),30);\n            }\n\t\t};\n\t\tif(col == 0){\t\t\t\n\t\t\tString lblStr = data.getSearchSaveName();\n\t\t\tJLabel searchLbl = new JLabel();\t\t\t\n\t\t\tsearchLbl.setText(lblStr);\n\t\t\tsearchLbl.setBorder(BorderFactory.createEmptyBorder(0, 10, 0, 0));\t\t\t\n\t\t\tsearchPanel.add(searchLbl, BorderLayout.WEST);\t\t\t\n    \t\tboolean isWindows = VueUtil.isWindowsPlatform();    \t\t    \t\t\n    \t\tif(isWindows){\n    \t\t\tsearchPanel.setFont(windowsFont);\n    \t\t}else{\n    \t\t\tsearchPanel.setFont(macFont);\n    \t\t}\n\t\t\treturn searchPanel;\n\t\t}else{\t\t\t\n\t\t\t\t\t\t\n\t\t\tJLabel runLbl = new JLabel();\n\t\t\trunLbl.setFont(GUI.TitleFace);\n\t\t\trunLbl.setForeground(WidgetStack.BottomGradient);\t\t\t\n\t\t\trunLbl.setText(runStr);\t\t\t\n\t\t\trunLbl.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 10));\n\t\t\trunPanel.add(runLbl, BorderLayout.EAST);\t\t\t\t\t\t\n    \t\tboolean isWindows = VueUtil.isWindowsPlatform();    \t\t    \t\t\n    \t\tif(isWindows){\n    \t\t\trunPanel.setFont(windowsFont);\n    \t\t}else{\n    \t\t\trunPanel.setFont(macFont);\n    \t\t}\n\t\t\treturn runPanel;\n\t\t}\t\t\n\t\t\n    }","commit_id":"a7dc81aeb8a0bae003eb2a211940a6de3a18db21","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n\t * Perform a volume export validated by the token presented in the request.\n\t * Upon completion of the Export operation, the identified host (by ip and iqn) will\n\t * have access to connect to the requested volume. No connection is made, just the authorization.\n\t * \n\t * If a valid export record exists for the given token and host information, then the connectionString\n\t * for that record is returned rather than creating a new record.\n\t * @param request\n\t * @return\n\t * @throws EucalyptusCloudException\n\t */\n\tpublic ExportVolumeResponseType ExportVolume(ExportVolumeType request) throws EucalyptusCloudException {\n\t\tfinal ExportVolumeResponseType reply = (ExportVolumeResponseType) request.getReply();\t\t\n\t\tfinal String volumeId = request.getVolumeId();\n\t\tString token = request.getToken();\n\t\tfinal String ip = request.getIp();\n\t\tfinal String iqn = request.getIqn();\n\t\treply.setVolumeId(volumeId);\n\n\t\tLOG.info(\"Processing ExportVolume request for volume \" + volumeId);\n\n\t\tfinal String tokenValue = cleanupTokenString(token);\n\t\t\n\t\tfinal Function<VolumeInfo, String> exportAndAttach = new Function<VolumeInfo, String>() {\n\t\t\t@Override\n\t\t\tpublic String apply(VolumeInfo volume) {\n\t\t\t\tVolumeToken tokenInfo = null;\n\t\t\t\tVolumeInfo volEntity = Entities.merge(volume);\n\t\t\t\ttry {\n\t\t\t\t\ttokenInfo = volEntity.getAttachmentTokenIfValid(tokenValue);\n\t\t\t\t\tif(tokenInfo == null) {\n\t\t\t\t\t\tthrow new Exception(\"Cannot export, due to invalid token\");\n\t\t\t\t\t}\n\t\t\t\t} catch(Exception e) {\n\t\t\t\t\tLOG.error(\"Could not check for valid token\", e);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tVolumeExportRecord export = null;\n\t\t\t\ttry {\n\t\t\t\t\texport = tokenInfo.getValidExport(ip, iqn);\t\t\t\t\t\n\t\t\t\t} catch (EucalyptusCloudException e2) {\n\t\t\t\t\tLOG.error(\"Failed when checking/getting valid export for \" + ip + \" - \" + iqn);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(export == null) {\n\t\t\t\t\tString connectionString = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\t//attachVolume must be idempotent.\n\t\t\t\t\t\tconnectionString = blockManager.exportVolume(volumeId, iqn);\n\t\t\t\t\t} catch(Exception e) {\n\t\t\t\t\t\tLOG.error(\"Could not attach volume: \" + e.getMessage());\n\t\t\t\t\t\tLOG.trace(\"Failed volume attach\",e);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttry{\n\t\t\t\t\t\t//addExport must be idempotent, if one exists a new is not added with same data\n\t\t\t\t\t\ttokenInfo.addExport(ip, iqn, connectionString);\n\t\t\t\t\t\treturn connectionString;\n\t\t\t\t\t} catch(Exception e) {\n\t\t\t\t\t\tLOG.error(\"Could not export volume \" + volumeId + \" failed to add export record\");\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tLOG.info(\"Unexporting volume \" + volumeId + \" to \" + iqn + \" for export failure cleanup\");\n\t\t\t\t\t\t\tblockManager.unexportVolume(volumeId, iqn);\n\t\t\t\t\t\t} catch (EucalyptusCloudException e1) {\n\t\t\t\t\t\t\tLOG.error(\"Failed to detach volume during invalidation failure\", e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tLOG.debug(\"Found extant valid export for \" + ip + \" and \" + iqn + \" returning connection information for that export\");\n\t\t\t\t\treturn export.getConnectionString();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tVolumeInfo searchVol = new VolumeInfo(volumeId);\n\t\tEntityTransaction db = Entities.get(VolumeInfo.class);\n\t\tVolumeInfo vol = null;\n\t\ttry {\n\t\t\tvol = Entities.uniqueResult(searchVol);\n\t\t\tdb.commit();\t\t\t\n\t\t} catch(NoSuchElementException e) {\n\t\t\tLOG.error(\"No volume db record found for \" + volumeId,e);\t\t\t\n\t\t\tthrow new EucalyptusCloudException(\"Volume not found \" + volumeId);\t\t\t\n\t\t} catch (TransactionException e) {\t\t\t\n\t\t\tLOG.error(\"Failed to Export due to db error\",e);\n\t\t\tthrow new EucalyptusCloudException(\"Could not export volume\",e);\t\t\t\t\t\n\t\t} finally {\n\t\t\tif(db.isActive()) {\n\t\t\t\tdb.rollback();\n\t\t\t}\n\t\t}\t\t\n\t\t\n\t\t//Do the export\n\t\ttry {\n\t\t\tString connectionString = Entities.asTransaction(VolumeInfo.class, exportAndAttach).apply(vol);\n\t\t\tif(connectionString != null) {\n\t\t\t\treply.setConnectionString(connectionString);\n\t\t\t} else {\n\t\t\t\tthrow new Exception(\"Got null record result. Cannot set connection string\");\n\t\t\t}\n\t\t} catch(Exception e) {\n\t\t\tLOG.error(\"Failed ExportVolume transaction due to: \" + e.getMessage(), e);\n\t\t\tthrow new EucalyptusCloudException(\"Failed to add export\",e);\t\t\n\t\t}\n\t\t\n\t\treturn reply;\n\t}","id":54026,"modified_method":"/**\n\t * Perform a volume export validated by the token presented in the request.\n\t * Upon completion of the Export operation, the identified host (by ip and iqn) will\n\t * have access to connect to the requested volume. No connection is made, just the authorization.\n\t * \n\t * If a valid export record exists for the given token and host information, then the connectionString\n\t * for that record is returned rather than creating a new record.\n\t * @param request\n\t * @return\n\t * @throws EucalyptusCloudException\n\t */\n\tpublic ExportVolumeResponseType ExportVolume(ExportVolumeType request) throws EucalyptusCloudException {\n\t\tfinal ExportVolumeResponseType reply = (ExportVolumeResponseType) request.getReply();\t\t\n\t\tfinal String volumeId = request.getVolumeId();\n\t\tfinal String token = request.getToken();\n\t\tfinal String ip = request.getIp();\n\t\tfinal String iqn = request.getIqn();\n\t\treply.setVolumeId(volumeId);\n\n\t\tLOG.info(\"Processing ExportVolume request for volume \" + volumeId);\n\t\t\n\t\tfinal Function<VolumeInfo, String> exportAndAttach = new Function<VolumeInfo, String>() {\n\t\t\t@Override\n\t\t\tpublic String apply(VolumeInfo volume) {\n\t\t\t\tVolumeToken tokenInfo = null;\n\t\t\t\tVolumeInfo volEntity = Entities.merge(volume);\n\t\t\t\ttry {\n\t\t\t\t\ttokenInfo = volEntity.getAttachmentTokenIfValid(token);\n\t\t\t\t\tif(tokenInfo == null) {\n\t\t\t\t\t\tthrow new Exception(\"Cannot export, due to invalid token\");\n\t\t\t\t\t}\n\t\t\t\t} catch(Exception e) {\n\t\t\t\t\tLOG.error(\"Could not check for valid token\", e);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tVolumeExportRecord export = null;\n\t\t\t\ttry {\n\t\t\t\t\texport = tokenInfo.getValidExport(ip, iqn);\t\t\t\t\t\n\t\t\t\t} catch (EucalyptusCloudException e2) {\n\t\t\t\t\tLOG.error(\"Failed when checking/getting valid export for \" + ip + \" - \" + iqn);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(export == null) {\n\t\t\t\t\tString connectionString = null;\n\t\t\t\t\ttry {\n\t\t\t\t\t\t//attachVolume must be idempotent.\n\t\t\t\t\t\tconnectionString = blockManager.exportVolume(volumeId, iqn);\n\t\t\t\t\t} catch(Exception e) {\n\t\t\t\t\t\tLOG.error(\"Could not attach volume: \" + e.getMessage());\n\t\t\t\t\t\tLOG.trace(\"Failed volume attach\",e);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttry{\n\t\t\t\t\t\t//addExport must be idempotent, if one exists a new is not added with same data\n\t\t\t\t\t\ttokenInfo.addExport(ip, iqn, connectionString);\n\t\t\t\t\t\treturn connectionString;\n\t\t\t\t\t} catch(Exception e) {\n\t\t\t\t\t\tLOG.error(\"Could not export volume \" + volumeId + \" failed to add export record\");\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tLOG.info(\"Unexporting volume \" + volumeId + \" to \" + iqn + \" for export failure cleanup\");\n\t\t\t\t\t\t\tblockManager.unexportVolume(volumeId, iqn);\n\t\t\t\t\t\t} catch (EucalyptusCloudException e1) {\n\t\t\t\t\t\t\tLOG.error(\"Failed to detach volume during invalidation failure\", e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tLOG.debug(\"Found extant valid export for \" + ip + \" and \" + iqn + \" returning connection information for that export\");\n\t\t\t\t\treturn export.getConnectionString();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tVolumeInfo searchVol = new VolumeInfo(volumeId);\n\t\tEntityTransaction db = Entities.get(VolumeInfo.class);\n\t\tVolumeInfo vol = null;\n\t\ttry {\n\t\t\tvol = Entities.uniqueResult(searchVol);\n\t\t\tdb.commit();\t\t\t\n\t\t} catch(NoSuchElementException e) {\n\t\t\tLOG.error(\"No volume db record found for \" + volumeId,e);\t\t\t\n\t\t\tthrow new EucalyptusCloudException(\"Volume not found \" + volumeId);\t\t\t\n\t\t} catch (TransactionException e) {\t\t\t\n\t\t\tLOG.error(\"Failed to Export due to db error\",e);\n\t\t\tthrow new EucalyptusCloudException(\"Could not export volume\",e);\t\t\t\t\t\n\t\t} finally {\n\t\t\tif(db.isActive()) {\n\t\t\t\tdb.rollback();\n\t\t\t}\n\t\t}\t\t\n\t\t\n\t\t//Do the export\n\t\ttry {\n\t\t\tString connectionString = Entities.asTransaction(VolumeInfo.class, exportAndAttach).apply(vol);\n\t\t\tif(connectionString != null) {\n\t\t\t\treply.setConnectionString(connectionString);\n\t\t\t} else {\n\t\t\t\tthrow new Exception(\"Got null record result. Cannot set connection string\");\n\t\t\t}\n\t\t} catch(Exception e) {\n\t\t\tLOG.error(\"Failed ExportVolume transaction due to: \" + e.getMessage(), e);\n\t\t\tthrow new EucalyptusCloudException(\"Failed to add export\",e);\t\t\n\t\t}\n\t\t\n\t\treturn reply;\n\t}","commit_id":"709914fb72bfdf61fde6ad4917d8081b9bc4636e","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public GetVolumeTokenResponseType GetVolumeToken(GetVolumeTokenType request) throws EucalyptusCloudException {\n\t\tGetVolumeTokenResponseType reply = (GetVolumeTokenResponseType) request.getReply();\n\t\tString volumeId = request.getVolumeId();\n\t\tLOG.info(\"Processing GetVolumeToken request for volume \" + volumeId);\n\t\t\n\t\tif(null == volumeId) {\n\t\t\tLOG.error(\"Cannot get token for a null-valued volumeId\");\n\t\t\tthrow new EucalyptusCloudException(\"No volumeId specified in token request\");\t\t\t\n\t\t}\n\t\t\n\t\tEntityTransaction db = Entities.get(VolumeInfo.class);\n\t\ttry {\t\t\t\n\t\t\tVolumeInfo vol = Entities.uniqueResult(new VolumeInfo(volumeId));\t\t\t\t\n\t\t\tVolumeToken token = vol.getOrCreateAttachmentToken();\n\t\t\t\n\t\t\tif(ENCRYPT_TOKEN) {\n\t\t\t\t//Encrypt the token with the NC's private key. token.getToken();\n\t\t\t\tString encryptedToken = BlockStorageUtil.encryptForNode(token.getToken());    \n\t\t\t\treply.setToken(encryptedToken);\n\t\t\t} else {\n\t\t\t\treply.setToken(token.getToken());\n\t\t\t}\n\t\t\treply.setVolumeId(volumeId);\n\t\t\treturn reply;\n\t\t} catch(NoSuchElementException e) {\n\t\t\tthrow new EucalyptusCloudException(\"Volume \" + request.getVolumeId() + \" not found\", e);\n\t\t} catch(Exception e) {\n\t\t\tLOG.error(\"Failed to get volume token: \" + e.getMessage());\n\t\t\tthrow new EucalyptusCloudException(\"Could not get volume token for volume \" + request.getVolumeId(), e);\t\t\t\n\t\t} finally {\n\t\t\tdb.commit();\n\t\t}\n\t}","id":54027,"modified_method":"public GetVolumeTokenResponseType GetVolumeToken(GetVolumeTokenType request) throws EucalyptusCloudException {\n\t\tGetVolumeTokenResponseType reply = (GetVolumeTokenResponseType) request.getReply();\n\t\tString volumeId = request.getVolumeId();\n\t\tLOG.info(\"Processing GetVolumeToken request for volume \" + volumeId);\n\t\t\n\t\tif(null == volumeId) {\n\t\t\tLOG.error(\"Cannot get token for a null-valued volumeId\");\n\t\t\tthrow new EucalyptusCloudException(\"No volumeId specified in token request\");\t\t\t\n\t\t}\n\t\t\n\t\tEntityTransaction db = Entities.get(VolumeInfo.class);\n\t\ttry {\t\t\t\n\t\t\tVolumeInfo vol = Entities.uniqueResult(new VolumeInfo(volumeId));\t\t\t\t\n\t\t\tVolumeToken token = vol.getOrCreateAttachmentToken();\n\t\t\t\n\t\t\t//Encrypt the token with the NC's private key\n\t\t\tString encryptedToken = BlockStorageUtil.encryptForNode(token.getToken());    \n\t\t\treply.setToken(encryptedToken);\t\t\t\n\t\t\treply.setVolumeId(volumeId);\n\t\t\treturn reply;\n\t\t} catch(NoSuchElementException e) {\n\t\t\tthrow new EucalyptusCloudException(\"Volume \" + request.getVolumeId() + \" not found\", e);\n\t\t} catch(Exception e) {\n\t\t\tLOG.error(\"Failed to get volume token: \" + e.getMessage());\n\t\t\tthrow new EucalyptusCloudException(\"Could not get volume token for volume \" + request.getVolumeId(), e);\t\t\t\n\t\t} finally {\n\t\t\tdb.commit();\n\t\t}\n\t}","commit_id":"709914fb72bfdf61fde6ad4917d8081b9bc4636e","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n\t * Removes connection authorization for the specified iqn/ip pair in the request using\n\t * the specified token. Only performs the operation if the token is valid for the specified volume.\n\t * \n\t * Invalidates the token upon successful de-authorization.\n\t * @param request\n\t * @return\n\t * @throws EucalyptusCloudException\n\t */\n\tpublic UnexportVolumeResponseType UnexportVolume(UnexportVolumeType request) throws EucalyptusCloudException {\n\t\tUnexportVolumeResponseType reply = request.getReply();\n\t\tString token = request.getToken();\n\t\tfinal String volumeId = request.getVolumeId();\n\t\tfinal String nodeIqn = request.getIqn();\n\t\tfinal String nodeIp = request.getIp();\n\n\t\tLOG.info(\"Processing UnexportVolume request for volume \" + volumeId + \" from node \" + nodeIp + \" with iqn \" + nodeIqn);\n\t\t\n\t\tif(token.startsWith(StorageProperties.TOKEN_PREFIX)) {\n\t\t\t//Strip off prefix if not already done.\n\t\t\ttoken = token.substring(StorageProperties.TOKEN_PREFIX.length(), token.length());\n\t\t}\n\t\t\n\t\tif(ENCRYPT_TOKEN) {\n\t\t\t//Decrypt the token with the Cloud's private key. token.getToken();\n\t\t\ttoken = BlockStorageUtil.decryptWithCloud(token);\n\t\t}\n\t\t\n\t\tfinal String tokenValue = token;\n\t\t\n\t\tfinal Function<String, VolumeInfo> unexport = new Function<String, VolumeInfo>() {\n\t\t\t@Override\n\t\t\tpublic VolumeInfo apply(String volumeId) {\n\t\t\t\tVolumeInfo volumeEntity = null;\n\t\t\t\ttry {\n\t\t\t\t\tVolumeInfo foundVolume = Entities.uniqueResult(new VolumeInfo(volumeId));\n\t\t\t\t\tvolumeEntity = Entities.merge(foundVolume);\n\t\t\t\t\tvolumeEntity.invalidateExport(tokenValue, nodeIp, nodeIqn);\n\t\t\t\t\t//Entities.flush(volumeEntity); //Sync state\n\t\t\t\t} catch(Exception e) {\n\t\t\t\t\tLOG.error(\"Could not remove export for volume \" + volumeId + \" due to: \" + e.getMessage(), e);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn volumeEntity;\n\t\t\t}\n\t\t};\n\n\t\tfinal Function<String, VolumeInfo> tearDown = new Function<String, VolumeInfo>() {\n\t\t\t@Override\n\t\t\tpublic VolumeInfo apply(String volumeId) {\n\t\t\t\tVolumeInfo volumeEntity = null;\n\t\t\t\ttry {\n\t\t\t\t\tVolumeInfo foundVolume = Entities.uniqueResult(new VolumeInfo(volumeId));\n\t\t\t\t\tvolumeEntity = Entities.merge(foundVolume);\n\t\t\t\t\t\n\t\t\t\t\tVolumeToken validToken = null;\n\t\t\t\t\tvalidToken = volumeEntity.getCurrentValidToken();\n\t\t\t\t\tif(validToken == null) {\n\t\t\t\t\t\t//There are no active exports, so unexport all.\n\t\t\t\t\t\tblockManager.unexportVolumeFromAll(volumeId);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tblockManager.unexportVolume(volumeEntity.getVolumeId(), nodeIqn);\n\t\t\t\t\t\t} catch(UnsupportedOperationException e) {\n\t\t\t\t\t\t\t//The backend doesn't support unexport to just one host... this is a noop.\n\t\t\t\t\t\t\tLOG.debug(\"UnexportVolume for single host not supported by backend. Treating as no-op\");\n\t\t\t\t\t\t} catch(Exception e) {\n\t\t\t\t\t\t\tLOG.error(\"Could not detach volume \" + volumeEntity.getVolumeId(), e);\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch(Exception e) {\n\t\t\t\t\tLOG.error(\"Could not remove export for volume \" + volumeId + \" due to: \" + e.getMessage(), e);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn volumeEntity;\n\t\t\t}\n\t\t};\n\t\t\n\t\ttry {\n\t\t\t//Use two transactions to isolate the db updates so we don't roll those back without rolling-back the teardown\n\t\t\tEntities.asTransaction(VolumeInfo.class, unexport).apply(volumeId);\n\t\t\tEntities.asTransaction(VolumeInfo.class, tearDown).apply(volumeId);\n\t\t\treply.set_return(true);\n\t\t} catch(NoSuchElementException e) {\n\t\t\tLOG.error(\"No volume found\",e);\t\t\t\n\t\t\tthrow new EucalyptusCloudException(\"Volume not found \" + volumeId);\t\t\t\n\t\t} catch(Exception e) {\n\t\t\tLOG.error(\"Failed unexportAndDetach transaction due to: \" + e.getMessage(), e);\n\t\t\tthrow new EucalyptusCloudException(e);\n\t\t}\t\t\n\t\treturn reply;\n\t}","id":54028,"modified_method":"/**\n\t * Removes connection authorization for the specified iqn/ip pair in the request using\n\t * the specified token. Only performs the operation if the token is valid for the specified volume.\n\t * \n\t * Invalidates the token upon successful de-authorization.\n\t * @param request\n\t * @return\n\t * @throws EucalyptusCloudException\n\t */\n\tpublic UnexportVolumeResponseType UnexportVolume(UnexportVolumeType request) throws EucalyptusCloudException {\n\t\tUnexportVolumeResponseType reply = request.getReply();\n\t\tfinal String token = request.getToken();\n\t\tfinal String volumeId = request.getVolumeId();\n\t\tfinal String nodeIqn = request.getIqn();\n\t\tfinal String nodeIp = request.getIp();\n\n\t\tLOG.info(\"Processing UnexportVolume request for volume \" + volumeId + \" from node \" + nodeIp + \" with iqn \" + nodeIqn);\n\t\t\n\t\tVolumeInfo volumeEntity = null;\n\t\tVolumeToken validToken = null;\n\t\tEntityTransaction db = Entities.get(VolumeInfo.class);\n\t\ttry {\n\t\t\tVolumeInfo foundVolume = Entities.uniqueResult(new VolumeInfo(volumeId));\n\t\t\tvolumeEntity = Entities.merge(foundVolume);\n\t\t\t\n\t\t\ttry {\n\t\t\t\tvalidToken = volumeEntity.getAttachmentTokenIfValid(token);\n\t\t\t\t//volumeEntity.invalidateExport(tokenValue, nodeIp, nodeIqn);\t\t\t\t\n\t\t\t\t//Entities.flush(volumeEntity); //Sync state -- not needed.... same transaction\n\t\t\t} catch(Exception e) {\n\t\t\t\tLOG.error(\"Invalid token in request for volume \" + volumeId + \". Encrypted token: \" + token);\t\t\t\t\t\n\t\t\t\tthrow new EucalyptusCloudException(e);\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif(validToken.hasOnlyExport(nodeIp, nodeIqn)) {\n\t\t\t\t//There are no active exports, so unexport all.\n\t\t\t\tblockManager.unexportVolumeFromAll(volumeId);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tblockManager.unexportVolume(volumeEntity.getVolumeId(), nodeIqn);\n\t\t\t\t} catch(UnsupportedOperationException e) {\n\t\t\t\t\t//The backend doesn't support unexport to just one host... this is a noop.\n\t\t\t\t\tLOG.info(\"Volume \" + volumeId + \": UnexportVolume for single host not supported by backend. Treating as no-op and continuing normally.\");\n\t\t\t\t} catch(Exception e) {\n\t\t\t\t\tLOG.error(\"Could not detach volume: \" + volumeId, e);\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//Do the actual invalidation. Handle retries, but only on the DB part.\n\t\t\tif(!Entities.asTransaction(VolumeInfo.class, new Function<VolumeInfo, Boolean>() {\n\t\t\t\t@Override\n\t\t\t\tpublic Boolean apply(VolumeInfo vol) {\n\t\t\t\t\tVolumeInfo entity = Entities.merge(vol);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tentity.invalidateExport(token, nodeIp, nodeIqn);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} catch(Exception e) {\n\t\t\t\t\t\tLOG.error(\"Error invalidating export: \" + e.getMessage());\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}).apply(volumeEntity)) {\n\t\t\t\t//Transaction failed after retries...\n\t\t\t\tLOG.error(\"Error invalidating the export record in the DB for volume \" + volumeId);\n\t\t\t}\n\t\t\t\n\t\t\tdb.commit();\n\t\t\treply.set_return(true);\n\t\t} catch(NoSuchElementException e) {\n\t\t\tLOG.error(\"Volume \" + volumeId + \" not found in DB\",e);\t\t\t\n\t\t\tthrow new EucalyptusCloudException(\"Volume \" + volumeId + \" not found\");\t\t\t\n\t\t} catch(Exception e) {\n\t\t\tLOG.error(\"Failed UnexportVolume due to: \" + e.getMessage(), e);\n\t\t\tthrow new EucalyptusCloudException(e);\n\t\t} finally {\n\t\t\tdb.rollback();\n\t\t}\n\t\treturn reply;\n\t}","commit_id":"709914fb72bfdf61fde6ad4917d8081b9bc4636e","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static String decryptWithCloud(String data) throws EucalyptusCloudException {\n\t\tPrivateKey scPrivateKey = SystemCredentials.lookup(Eucalyptus.class).getPrivateKey();\n\t\ttry {\n\t\t\tCipher cipher = Ciphers.RSA_PKCS1.get();\n\t\t\tcipher.init(Cipher.DECRYPT_MODE, scPrivateKey);\n\t\t\treturn new String(cipher.doFinal(Base64.decode(data)));\n\t\t} catch(Exception ex) {\n\t\t\tLOG.error(ex);\n\t\t\tthrow new EucalyptusCloudException(\"Unable to decrypt storage target password\", ex);\n\t\t}\n\t}","id":54029,"modified_method":"public static String decryptWithCloud(String data) throws EucalyptusCloudException {\n\t\tPrivateKey clcPrivateKey = SystemCredentials.lookup(Eucalyptus.class).getPrivateKey();\n\t\ttry {\n\t\t\tCipher cipher = Ciphers.RSA_PKCS1.get();\n\t\t\tcipher.init(Cipher.DECRYPT_MODE, clcPrivateKey);\n\t\t\treturn new String(cipher.doFinal(Base64.decode(data)));\n\t\t} catch(Exception ex) {\n\t\t\tLOG.error(ex);\n\t\t\tthrow new EucalyptusCloudException(\"Unable to decrypt data with cloud private key\", ex);\n\t\t}\n\t}","commit_id":"709914fb72bfdf61fde6ad4917d8081b9bc4636e","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static String encryptForNode(String data) throws EucalyptusCloudException {\n    try {\n      List<ServiceConfiguration> clusterList = ServiceConfigurations.listPartition( ClusterController.class, StorageProperties.NAME );\n      if( clusterList.size() < 1 ) {\n        String msg = \"Failed to find a cluster with the corresponding partition name for this SC: \" + StorageProperties.NAME + \"\\nFound: \" + clusterList.toString( ).replaceAll( \", \", \",\\n\" );\n        throw new EucalyptusCloudException(msg);\n      } else {\n        ServiceConfiguration clusterConfig = clusterList.get( 0 );\n        PublicKey ncPublicKey = Partitions.lookup( clusterConfig ).getNodeCertificate( ).getPublicKey();\n        Cipher cipher = Ciphers.RSA_PKCS1.get();\n        cipher.init(Cipher.ENCRYPT_MODE, ncPublicKey);\n        return new String(Base64.encode(cipher.doFinal(data.getBytes())));\n      }\n    } catch ( Exception e ) {\n\t\t\tLOG.error( \"Unable to encrypt storage target password: \" + e.getMessage( ), e );\n\t\t\tthrow new EucalyptusCloudException(\"Unable to encrypt storage target password: \" + e.getMessage(), e);\n\t\t}\n\t}","id":54030,"modified_method":"public static String encryptForNode(String data) throws EucalyptusCloudException {\n\t\ttry {\n\t\t\tList<ServiceConfiguration> clusterList = ServiceConfigurations.listPartition( ClusterController.class, StorageProperties.NAME );\n\t\t\tif( clusterList.size() < 1 ) {\n\t\t\t\tString msg = \"Failed to find a cluster with the corresponding partition name for this SC: \" + StorageProperties.NAME + \"\\nFound: \" + clusterList.toString( ).replaceAll( \", \", \",\\n\" );\n\t\t\t\tthrow new EucalyptusCloudException(msg);\n\t\t\t} else {\n\t\t\t\tServiceConfiguration clusterConfig = clusterList.get( 0 );\n\t\t\t\tPublicKey ncPublicKey = Partitions.lookup( clusterConfig ).getNodeCertificate( ).getPublicKey();\n\t\t\t\tCipher cipher = Ciphers.RSA_PKCS1.get();\n\t\t\t\tcipher.init(Cipher.ENCRYPT_MODE, ncPublicKey);\n\t\t\t\treturn new String(Base64.encode(cipher.doFinal(data.getBytes())));\n\t\t\t}\n\t\t} catch ( Exception e ) {\n\t\t\tLOG.error( \"Unable to encrypt data: \" + e.getMessage( ), e );\n\t\t\tthrow new EucalyptusCloudException(\"Unable to encrypt data: \" + e.getMessage(), e);\n\t\t}\n\t}","commit_id":"709914fb72bfdf61fde6ad4917d8081b9bc4636e","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n\t * Returns either the single valid attachment token for the volume, or null\n\t * if none exists. Throws an exception if multiple valid tokens are found\n\t * \n\t * @return\n\t * @throws EucalyptusCloudException\n\t */\n\tpublic VolumeToken getAttachmentTokenIfValid(String tokenValue) throws EucalyptusCloudException {\t\t\t\t\n\t\ttry {\n\t\t\tVolumeToken tok = getCurrentValidToken();\n\t\t\tif(tok == null) {\n\t\t\t\tLOG.warn(\"Got request for attachment token, no valid token found for volume  \" + this.getVolumeId());\n\t\t\t\tthrow new EucalyptusCloudException(\"No valid token found\");\n\t\t\t} else {\n\t\t\t\tif(!tokenValue.equals(tok.getToken())){\n\t\t\t\t\tLOG.warn(\"Token requested is not the current valid token for volume \" + this.getVolumeId() + \" request token: \" + tokenValue + \" current token: \" + tok.getToken());\n\t\t\t\t\tthrow new EucalyptusCloudException(\"Requested token is not the current valid token\");\n\t\t\t\t} else {\n\t\t\t\t\treturn tok;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch(Exception e) {\n\t\t\tLOG.error(\"Error checking for valid attachment token\",e);\n\t\t\tthrow new EucalyptusCloudException(e);\n\t\t}\n\t}","id":54031,"modified_method":"/**\n\t * Returns either the single valid attachment token for the volume, or null\n\t * if none exists. Throws an exception if multiple valid tokens are found\n\t * \n\t * @return\n\t * @throws EucalyptusCloudException\n\t */\n\tpublic VolumeToken getAttachmentTokenIfValid(final String encryptedTokenValue) throws EucalyptusCloudException {\t\t\t\t\n\t\ttry {\n\t\t\tString decryptedToken = decryptToken(encryptedTokenValue);\n\t\t\tVolumeToken tok = getCurrentValidToken();\n\t\t\tif(tok == null) {\n\t\t\t\tLOG.warn(\"Got request for attachment token, no valid token found for volume  \" + this.getVolumeId());\n\t\t\t\tthrow new EucalyptusCloudException(\"No valid token found\");\n\t\t\t} else {\n\t\t\t\tif(!decryptedToken.equals(tok.getToken())){\n\t\t\t\t\tLOG.error(\"Token requested is not valid token for volume \" + this.getVolumeId() + \" request token: \" + redactToken(decryptedToken) + \" current token: \" + redactToken(tok.getToken()));\n\t\t\t\t\tthrow new EucalyptusCloudException(\"Requested token is not the current valid token\");\n\t\t\t\t} else {\n\t\t\t\t\treturn tok;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch(Exception e) {\n\t\t\tLOG.error(\"Error checking for valid attachment token\",e);\n\t\t\tthrow new EucalyptusCloudException(e);\n\t\t}\n\t}","commit_id":"709914fb72bfdf61fde6ad4917d8081b9bc4636e","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n   * @param attachVol\n   */\n  public void addTransientVolume( final String deviceName, final String remoteDevice, final Volume vol ) {\n    final Function<Volume, Volume> attachmentFunction = new Function<Volume, Volume>( ) {\n      public Volume apply( final Volume input ) {\n        final VmInstance entity = Entities.merge( VmInstance.this );\n        final Volume volEntity = Entities.merge( vol );\n        VmVolumeAttachment attachVol = new VmVolumeAttachment( entity, volEntity.getDisplayName( ), deviceName, remoteDevice, AttachmentState.attaching.name( ), new Date( ), false );\n        volEntity.setState( State.BUSY );\n        entity.getTransientVolumeState( ).addVolumeAttachment( attachVol );\n        return volEntity;\n      }\n    };\n    Entities.asTransaction( VmInstance.class, attachmentFunction, VmInstances.TX_RETRIES );\n  }","id":54032,"modified_method":"/**\n   * @param attachVol\n   */\n  public void addTransientVolume( final String deviceName, final String remoteDevice, final Volume vol ) {\n    final Function<Volume, Volume> attachmentFunction = new Function<Volume, Volume>( ) {\n      public Volume apply( final Volume input ) {\n        final VmInstance entity = Entities.merge( VmInstance.this );\n        final Volume volEntity = Entities.merge( vol );\n        VmVolumeAttachment attachVol = new VmVolumeAttachment( entity, volEntity.getDisplayName( ), deviceName, remoteDevice, AttachmentState.attaching.name( ), new Date( ), false );\n        volEntity.setState( State.BUSY );\n        entity.getTransientVolumeState( ).addVolumeAttachment( attachVol );\n        return volEntity;\n      }\n    };\n    Entities.asTransaction( VmInstance.class, attachmentFunction, VmInstances.TX_RETRIES ).apply( vol );\n  }","commit_id":"c3dda5c1a418233a8b12118587fd6cac25f65b75","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void addPersistentVolume( final String deviceName, final Volume vol ) {\n    final Function<Volume, Volume> attachmentFunction = new Function<Volume, Volume>( ) {\n      public Volume apply( final Volume input ) {\n        final VmInstance entity = Entities.merge( VmInstance.this );\n        final Volume volEntity = Entities.merge( vol );\n        final VmVolumeAttachment volumeAttachment = new VmVolumeAttachment( entity, vol.getDisplayName( ), deviceName, vol.getRemoteDevice( ), AttachmentState.attached.name( ), new Date( ), true );\n        entity.bootRecord.getPersistentVolumes( ).add( volumeAttachment );\n        return volEntity;\n      }\n    };\n    Entities.asTransaction( VmInstance.class, attachmentFunction, VmInstances.TX_RETRIES );\n  }","id":54033,"modified_method":"public void addPersistentVolume( final String deviceName, final Volume vol ) {\n    final Function<Volume, Volume> attachmentFunction = new Function<Volume, Volume>( ) {\n      public Volume apply( final Volume input ) {\n        final VmInstance entity = Entities.merge( VmInstance.this );\n        final Volume volEntity = Entities.merge( vol );\n        final VmVolumeAttachment volumeAttachment = new VmVolumeAttachment( entity, vol.getDisplayName( ), deviceName, vol.getRemoteDevice( ), AttachmentState.attached.name( ), new Date( ), true );\n        entity.bootRecord.getPersistentVolumes( ).add( volumeAttachment );\n        return volEntity;\n      }\n    };\n    Entities.asTransaction( VmInstance.class, attachmentFunction, VmInstances.TX_RETRIES ).apply( vol );\n  }","commit_id":"c3dda5c1a418233a8b12118587fd6cac25f65b75","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void addPermanentVolume( final String deviceName, final Volume vol ) {\n    final Function<Volume, Volume> attachmentFunction = new Function<Volume, Volume>( ) {\n      public Volume apply( final Volume input ) {\n        final VmInstance entity = Entities.merge( VmInstance.this );\n        final Volume volEntity = Entities.merge( vol );\n        final VmVolumeAttachment volumeAttachment = new VmVolumeAttachment( entity, vol.getDisplayName( ), deviceName, vol.getRemoteDevice( ), AttachmentState.attached.name( ), new Date( ), false );\n        entity.bootRecord.getPersistentVolumes( ).add( volumeAttachment );\n        return volEntity;\n      }\n    };\n    Entities.asTransaction( VmInstance.class, attachmentFunction, VmInstances.TX_RETRIES );\n  }","id":54034,"modified_method":"public void addPermanentVolume( final String deviceName, final Volume vol ) {\n    final Function<Volume, Volume> attachmentFunction = new Function<Volume, Volume>( ) {\n      public Volume apply( final Volume input ) {\n        final VmInstance entity = Entities.merge( VmInstance.this );\n        final Volume volEntity = Entities.merge( vol );\n        final VmVolumeAttachment volumeAttachment = new VmVolumeAttachment( entity, vol.getDisplayName( ), deviceName, vol.getRemoteDevice( ), AttachmentState.attached.name( ), new Date( ), false );\n        entity.bootRecord.getPersistentVolumes( ).add( volumeAttachment );\n        return volEntity;\n      }\n    };\n    Entities.asTransaction( VmInstance.class, attachmentFunction, VmInstances.TX_RETRIES ).apply( vol );\n  }","commit_id":"c3dda5c1a418233a8b12118587fd6cac25f65b75","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"protected T createInstance(String name, String path, CamelContext context) {\n            if (path == null) {\n                return null;\n            }\n            URL url = bundle.getEntry(path);\n            LOG.trace(\"The entry {}'s url is {}\", name, url);\n            //Setup the TCCL with Camel context application class loader\n            ClassLoader oldClassLoader = Thread.currentThread().getContextClassLoader();\n            try {\n                ClassLoader  newClassLoader = context.getApplicationContextClassLoader();\n                if (newClassLoader != null) {\n                    Thread.currentThread().setContextClassLoader(newClassLoader);\n                }\n                return createInstance(name, url, context.getInjector());\n            } finally {\n                Thread.currentThread().setContextClassLoader(oldClassLoader);   \n            }\n        }","id":54035,"modified_method":"protected T createInstance(String name, String path, CamelContext context) {\n            if (path == null) {\n                return null;\n            }\n            URL url = bundle.getEntry(path);\n            LOG.trace(\"The entry {}'s url is {}\", name, url);\n            //Setup the TCCL with Camel context application class loader\n            ClassLoader oldClassLoader = Thread.currentThread().getContextClassLoader();\n            try {\n                ClassLoader newClassLoader = context.getApplicationContextClassLoader();\n                if (newClassLoader != null) {\n                    Thread.currentThread().setContextClassLoader(newClassLoader);\n                }\n                T answer = createInstance(name, url, context.getInjector());\n                if (answer != null) {\n                    initBundleContext(answer);\n                }\n                return answer;\n            } finally {\n                Thread.currentThread().setContextClassLoader(oldClassLoader);   \n            }\n        }","commit_id":"7d71ad4e621444d4fc108ecdeb71377784d2af17","url":"https://github.com/apache/camel"},{"original_method":"public PaxLoggingComponent(CamelContext context, BundleContext bundleContext) {\n        super(context, PaxLoggingEndpoint.class);\n        this.bundleContext = bundleContext;\n    }","id":54036,"modified_method":"public PaxLoggingComponent() {\n        super(PaxLoggingEndpoint.class);\n    }","commit_id":"7d71ad4e621444d4fc108ecdeb71377784d2af17","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    @SuppressWarnings({\"unchecked\"})\n    public synchronized <S> S getBusinessObject(Class<S> businessInterfaceType) {\n        //TODO: this should be cached\n        if (viewServices.containsKey(businessInterfaceType.getName())) {\n            final ServiceController<?> serviceController = currentServiceContainer().getRequiredService(viewServices.get(businessInterfaceType.getName()));\n            final ComponentView view = (ComponentView) serviceController.getValue();\n            try {\n                return(S) view.createInstance().getInstance();\n            } catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n        } else {\n            throw WeldLogger.ROOT_LOGGER.viewNotFoundOnEJB(businessInterfaceType.getName(), ejbName);\n        }\n    }","id":54037,"modified_method":"@Override\n    @SuppressWarnings({ \"unchecked\" })\n    public synchronized <S> S getBusinessObject(Class<S> businessInterfaceType) {\n        final String businessInterfaceName = businessInterfaceType.getName();\n        ManagedReference managedReference = null;\n\n        if (businessInterfaceToReference == null) {\n            businessInterfaceToReference = new HashMap<String, ManagedReference>();\n        } else {\n            managedReference = businessInterfaceToReference.get(businessInterfaceName);\n        }\n\n        if (managedReference == null) {\n            if (viewServices.containsKey(businessInterfaceType.getName())) {\n                final ServiceController<?> serviceController = currentServiceContainer().getRequiredService(\n                        viewServices.get(businessInterfaceType.getName()));\n                final ComponentView view = (ComponentView) serviceController.getValue();\n                try {\n                    managedReference = view.createInstance();\n                    businessInterfaceToReference.put(businessInterfaceType.getName(), managedReference);\n                } catch (Exception e) {\n                    throw new RuntimeException(e);\n                }\n            } else {\n                throw WeldLogger.ROOT_LOGGER.viewNotFoundOnEJB(businessInterfaceType.getName(), ejbName);\n            }\n        }\n        return (S) managedReference.getInstance();\n    }","commit_id":"f3656d7204c2295d735e2476e084d6ae9c9f1920","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    @SuppressWarnings({\"unchecked\"})\n    public synchronized <S> S getBusinessObject(Class<S> businessInterfaceType) {\n        if (isRemoved()) {\n            throw WeldLogger.ROOT_LOGGER.ejbHashBeenRemoved();\n        }\n        if (viewServices.containsKey(businessInterfaceType.getName())) {\n            final ServiceController<?> serviceController = currentServiceContainer().getRequiredService(viewServices.get(businessInterfaceType.getName()));\n            final ComponentView view = (ComponentView) serviceController.getValue();\n            try {\n                return (S) view.createInstance(Collections.<Object, Object>singletonMap(SessionID.class, id)).getInstance();\n            } catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n        } else {\n            throw WeldLogger.ROOT_LOGGER.viewNotFoundOnEJB(businessInterfaceType.getName(), ejbComponent.getComponentName());\n        }\n    }","id":54038,"modified_method":"@Override\n    @SuppressWarnings({ \"unchecked\" })\n    public synchronized <S> S getBusinessObject(Class<S> businessInterfaceType) {\n        if (isRemoved()) {\n            throw WeldLogger.ROOT_LOGGER.ejbHashBeenRemoved();\n        }\n\n        final String businessInterfaceName = businessInterfaceType.getName();\n        ManagedReference managedReference = null;\n\n        if (businessInterfaceToReference == null) {\n            businessInterfaceToReference = new HashMap<String, ManagedReference>();\n        } else {\n            managedReference = businessInterfaceToReference.get(businessInterfaceName);\n        }\n\n        if (managedReference == null) {\n            if (viewServices.containsKey(businessInterfaceType.getName())) {\n                final ServiceController<?> serviceController = currentServiceContainer().getRequiredService(\n                        viewServices.get(businessInterfaceType.getName()));\n                final ComponentView view = (ComponentView) serviceController.getValue();\n                try {\n                    managedReference = view.createInstance(Collections.<Object, Object> singletonMap(SessionID.class, id));\n                    businessInterfaceToReference.put(businessInterfaceName, managedReference);\n                } catch (Exception e) {\n                    throw new RuntimeException(e);\n                }\n            } else {\n                throw WeldLogger.ROOT_LOGGER\n                        .viewNotFoundOnEJB(businessInterfaceType.getName(), ejbComponent.getComponentName());\n            }\n        }\n        return (S) managedReference.getInstance();\n    }","commit_id":"f3656d7204c2295d735e2476e084d6ae9c9f1920","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Calculates and adds replica partition stats.\n     */\n    private void addReplicaPartitionStats(LocalMapStatsImpl localMapStats, String mapName, int partitionId,\n                                          InternalPartition partition, ClusterService clusterService,\n                                          int backupCount, Address thisAddress) {\n        long heapCost = 0;\n        long backupEntryCount = 0;\n        long backupEntryMemoryCost = 0;\n\n        for (int replica = 1; replica <= backupCount; replica++) {\n            final Address replicaAddress = getReplicaAddress(replica, partition, clusterService, backupCount);\n            if (notGotReplicaAddress(replicaAddress, clusterService, backupCount)) {\n                printWarning(partition, replica);\n                continue;\n            }\n            if (gotReplicaAddress(replicaAddress, thisAddress)) {\n                RecordStore recordStore = getRecordStoreOrNull(mapName, partitionId);\n                if (hasRecords(recordStore)) {\n                    heapCost += recordStore.getHeapCost();\n                    backupEntryCount += recordStore.size();\n                    backupEntryMemoryCost += getMemoryCost(recordStore);\n                }\n            }\n        }\n        localMapStats.incrementHeapCost(heapCost);\n        localMapStats.incrementBackupEntryCount(backupEntryCount);\n        localMapStats.incrementBackupEntryMemoryCost(backupEntryMemoryCost);\n    }","id":54039,"modified_method":"/**\n     * Calculates and adds replica partition stats.\n     */\n    private void addReplicaPartitionStats(LocalMapStatsImpl localMapStats, String mapName, int partitionId,\n                                          InternalPartition partition, InternalPartitionService partitionService,\n                                          int backupCount, Address thisAddress) {\n        long heapCost = 0;\n        long backupEntryCount = 0;\n        long backupEntryMemoryCost = 0;\n\n        for (int replica = 1; replica <= backupCount; replica++) {\n            final Address replicaAddress = getReplicaAddress(replica, partition, partitionService, backupCount);\n            if (notGotReplicaAddress(replicaAddress, partitionService, backupCount)) {\n                printWarning(partition, replica);\n                continue;\n            }\n            if (gotReplicaAddress(replicaAddress, thisAddress)) {\n                RecordStore recordStore = getRecordStoreOrNull(mapName, partitionId);\n                if (hasRecords(recordStore)) {\n                    heapCost += recordStore.getHeapCost();\n                    backupEntryCount += recordStore.size();\n                    backupEntryMemoryCost += getMemoryCost(recordStore);\n                }\n            }\n        }\n        localMapStats.incrementHeapCost(heapCost);\n        localMapStats.incrementBackupEntryCount(backupEntryCount);\n        localMapStats.incrementBackupEntryMemoryCost(backupEntryMemoryCost);\n    }","commit_id":"ee80724d1e68b9d233564b06aa53664c02ef8599","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"/**\n     * Gets replica address. Waits if necessary.\n     *\n     * @see #waitForReplicaAddress\n     */\n    private Address getReplicaAddress(int replica, InternalPartition partition,\n                                      ClusterService clusterService, int backupCount) {\n        Address replicaAddress = partition.getReplicaAddress(replica);\n        if (replicaAddress == null) {\n            replicaAddress = waitForReplicaAddress(replica, partition, clusterService, backupCount);\n        }\n        return replicaAddress;\n    }","id":54040,"modified_method":"/**\n     * Gets replica address. Waits if necessary.\n     *\n     * @see #waitForReplicaAddress\n     */\n    private Address getReplicaAddress(int replica, InternalPartition partition,\n                                      InternalPartitionService partitionService, int backupCount) {\n        Address replicaAddress = partition.getReplicaAddress(replica);\n        if (replicaAddress == null) {\n            replicaAddress = waitForReplicaAddress(replica, partition, partitionService, backupCount);\n        }\n        return replicaAddress;\n    }","commit_id":"ee80724d1e68b9d233564b06aa53664c02ef8599","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"/**\n     * Waits partition table update to get replica address if current replica address is null.\n     */\n    private Address waitForReplicaAddress(int replica, InternalPartition partition,\n                                          ClusterService clusterService, int backupCount) {\n        int tryCount = RETRY_COUNT;\n        Address replicaAddress = null;\n        while (replicaAddress == null && clusterService.getSize() > backupCount && tryCount-- > 0) {\n            sleep();\n            replicaAddress = partition.getReplicaAddress(replica);\n        }\n        return replicaAddress;\n    }","id":54041,"modified_method":"/**\n     * Waits partition table update to get replica address if current replica address is null.\n     */\n    private Address waitForReplicaAddress(int replica, InternalPartition partition,\n                                          InternalPartitionService partitionService, int backupCount) {\n        int tryCount = RETRY_COUNT;\n        Address replicaAddress = null;\n        while (replicaAddress == null && partitionService.getMemberGroupsSize() > backupCount && tryCount-- > 0) {\n            sleep();\n            replicaAddress = partition.getReplicaAddress(replica);\n        }\n        return replicaAddress;\n    }","commit_id":"ee80724d1e68b9d233564b06aa53664c02ef8599","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private boolean notGotReplicaAddress(Address replicaAddress, ClusterService clusterService, int backupCount) {\n        return replicaAddress == null && clusterService.getSize() > backupCount;\n    }","id":54042,"modified_method":"private boolean notGotReplicaAddress(Address replicaAddress, InternalPartitionService partitionService, int backupCount) {\n        return replicaAddress == null && partitionService.getMemberGroupsSize() > backupCount;\n    }","commit_id":"ee80724d1e68b9d233564b06aa53664c02ef8599","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public LocalMapStatsImpl createLocalMapStats(String mapName) {\n        final NodeEngine nodeEngine = this.nodeEngine;\n        final MapContainer mapContainer = mapServiceContext.getMapContainer(mapName);\n        final LocalMapStatsImpl localMapStats = getLocalMapStatsImpl(mapName);\n        if (!mapContainer.getMapConfig().isStatisticsEnabled()) {\n            return localMapStats;\n        }\n        final int backupCount = mapContainer.getTotalBackupCount();\n        final ClusterService clusterService = nodeEngine.getClusterService();\n        final InternalPartitionService partitionService = nodeEngine.getPartitionService();\n        final Address thisAddress = clusterService.getThisAddress();\n\n        localMapStats.init();\n        localMapStats.setBackupCount(backupCount);\n        addNearCacheStats(localMapStats, mapContainer);\n\n        for (int partitionId = 0; partitionId < partitionService.getPartitionCount(); partitionId++) {\n            InternalPartition partition = partitionService.getPartition(partitionId);\n            Address owner = partition.getOwnerOrNull();\n            if (owner == null) {\n                //no-op because no owner is set yet. Therefor we don't know anything about the map\n                continue;\n            }\n            if (owner.equals(thisAddress)) {\n                addOwnerPartitionStats(localMapStats, mapName, partitionId);\n            } else {\n                addReplicaPartitionStats(localMapStats, mapName, partitionId,\n                        partition, clusterService, backupCount, thisAddress);\n            }\n        }\n        return localMapStats;\n    }","id":54043,"modified_method":"public LocalMapStatsImpl createLocalMapStats(String mapName) {\n        final NodeEngine nodeEngine = this.nodeEngine;\n        final MapContainer mapContainer = mapServiceContext.getMapContainer(mapName);\n        final LocalMapStatsImpl localMapStats = getLocalMapStatsImpl(mapName);\n        if (!mapContainer.getMapConfig().isStatisticsEnabled()) {\n            return localMapStats;\n        }\n        final int backupCount = mapContainer.getTotalBackupCount();\n        final ClusterService clusterService = nodeEngine.getClusterService();\n        final InternalPartitionService partitionService = nodeEngine.getPartitionService();\n        final Address thisAddress = clusterService.getThisAddress();\n\n        localMapStats.init();\n        localMapStats.setBackupCount(backupCount);\n        addNearCacheStats(localMapStats, mapContainer);\n\n        for (int partitionId = 0; partitionId < partitionService.getPartitionCount(); partitionId++) {\n            InternalPartition partition = partitionService.getPartition(partitionId);\n            Address owner = partition.getOwnerOrNull();\n            if (owner == null) {\n                //no-op because no owner is set yet. Therefor we don't know anything about the map\n                continue;\n            }\n            if (owner.equals(thisAddress)) {\n                addOwnerPartitionStats(localMapStats, mapName, partitionId);\n            } else {\n                addReplicaPartitionStats(localMapStats, mapName, partitionId,\n                        partition, partitionService, backupCount, thisAddress);\n            }\n        }\n        return localMapStats;\n    }","commit_id":"ee80724d1e68b9d233564b06aa53664c02ef8599","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public TestHazelcastInstanceFactory(int count) {\n        this.count = count;\n        if (mockNetwork) {\n            addresses = createAddresses(count);\n            registry = new TestNodeRegistry(addresses);\n        } else {\n            addresses = null;\n            registry = null;\n        }\n    }","id":54044,"modified_method":"public TestHazelcastInstanceFactory(int count) {\n        this(createAddresses(count));\n    }","commit_id":"ee80724d1e68b9d233564b06aa53664c02ef8599","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public HazelcastInstance newHazelcastClient(ClientConfig config) {\n        if (!mockNetwork) {\n            return HazelcastClient.newHazelcastClient(config);\n        }\n\n        if (config == null) {\n            config = new XmlClientConfigBuilder().build();\n        }\n\n        final ClassLoader tccl = Thread.currentThread().getContextClassLoader();\n        HazelcastClientProxy proxy;\n        try {\n            if (tccl == ClassLoader.getSystemClassLoader()) {\n                Thread.currentThread().setContextClassLoader(HazelcastClient.class.getClassLoader());\n            }\n            ClientConnectionManagerFactory clientConnectionManagerFactory =\n                    clientRegistry.createClientServiceFactory(\"127.0.0.1\", clientPorts);\n            AddressProvider testAddressProvider = createAddressProvider(config);\n            HazelcastClientInstanceImpl client =\n                    new HazelcastClientInstanceImpl(config, clientConnectionManagerFactory, testAddressProvider);\n            client.start();\n            clients.add(client);\n            OutOfMemoryErrorDispatcher.registerClient(client);\n            proxy = new HazelcastClientProxy(client);\n        } finally {\n            Thread.currentThread().setContextClassLoader(tccl);\n        }\n        return proxy;\n    }","id":54045,"modified_method":"public HazelcastInstance newHazelcastClient(ClientConfig config) {\n        if (!mockNetwork) {\n            return HazelcastClient.newHazelcastClient(config);\n        }\n\n        if (config == null) {\n            config = new XmlClientConfigBuilder().build();\n        }\n\n        ClassLoader tccl = Thread.currentThread().getContextClassLoader();\n        HazelcastClientProxy proxy;\n        try {\n            if (tccl == ClassLoader.getSystemClassLoader()) {\n                Thread.currentThread().setContextClassLoader(HazelcastClient.class.getClassLoader());\n            }\n            ClientConnectionManagerFactory clientConnectionManagerFactory =\n                    clientRegistry.createClientServiceFactory(\"127.0.0.1\", CLIENT_PORTS);\n            AddressProvider testAddressProvider = createAddressProvider(config);\n            HazelcastClientInstanceImpl client =\n                    new HazelcastClientInstanceImpl(config, clientConnectionManagerFactory, testAddressProvider);\n            client.start();\n            clients.add(client);\n            OutOfMemoryErrorDispatcher.registerClient(client);\n            proxy = new HazelcastClientProxy(client);\n        } finally {\n            Thread.currentThread().setContextClassLoader(tccl);\n        }\n        return proxy;\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void terminateAll() {\n        if (!mockNetwork) {\n            //For client terminateAll and shutdownAll is same\n            HazelcastClient.shutdownAll();\n        } else {\n            for (HazelcastClientInstanceImpl client : clients) {\n                client.getLifecycleService().terminate();\n            }\n        }\n        super.terminateAll();\n    }","id":54046,"modified_method":"@Override\n    public void terminateAll() {\n        if (mockNetwork) {\n            for (HazelcastClientInstanceImpl client : clients) {\n                client.getLifecycleService().terminate();\n            }\n        } else {\n            // for client terminateAll() and shutdownAll() is the same\n            HazelcastClient.shutdownAll();\n        }\n        super.terminateAll();\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public TestHazelcastFactory() {\n        super(0);\n        this.clientRegistry = new TestClientRegistry(registry);\n    }","id":54047,"modified_method":"public TestHazelcastFactory() {\n        super(0);\n        this.clientRegistry = new TestClientRegistry(getRegistry());\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    public void shutdownAll() {\n        if (!mockNetwork) {\n            HazelcastClient.shutdownAll();\n        } else {\n            for (HazelcastClientInstanceImpl client : clients) {\n                client.shutdown();\n            }\n        }\n        super.shutdownAll();\n    }","id":54048,"modified_method":"@Override\n    public void shutdownAll() {\n        if (mockNetwork) {\n            for (HazelcastClientInstanceImpl client : clients) {\n                client.shutdown();\n            }\n        } else {\n            // for client terminateAll() and shutdownAll() is the same\n            HazelcastClient.shutdownAll();\n        }\n        super.shutdownAll();\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private AddressProvider createAddressProvider(ClientConfig config) {\n\n        List<String> userConfiguredAddresses = config.getNetworkConfig().getAddresses();\n        if (!userConfiguredAddresses.contains(\"localhost\")) {\n            //Addresses are set explicitly. Dont add more addresses\n            return null;\n        }\n\n        return new AddressProvider() {\n            @Override\n            public Collection<InetSocketAddress> loadAddresses() {\n                Collection<InetSocketAddress> inetAddresses = new ArrayList<InetSocketAddress>();\n                for (Address address : addressMap.values()) {\n                    Collection<InetSocketAddress> addresses = AddressHelper.getPossibleSocketAddresses(address.getPort(),\n                            address.getHost(), 3);\n                    inetAddresses.addAll(addresses);\n                }\n\n                return inetAddresses;\n\n            }\n        };\n    }","id":54049,"modified_method":"private AddressProvider createAddressProvider(ClientConfig config) {\n        List<String> userConfiguredAddresses = config.getNetworkConfig().getAddresses();\n        if (!userConfiguredAddresses.contains(\"localhost\")) {\n            // addresses are set explicitly, don't add more addresses\n            return null;\n        }\n\n        return new AddressProvider() {\n            @Override\n            public Collection<InetSocketAddress> loadAddresses() {\n                Collection<InetSocketAddress> inetAddresses = new ArrayList<InetSocketAddress>();\n                for (Address address : getKnownAddresses()) {\n                    Collection<InetSocketAddress> addresses = AddressHelper.getPossibleSocketAddresses(address.getPort(),\n                            address.getHost(), 3);\n                    inetAddresses.addAll(addresses);\n                }\n                return inetAddresses;\n            }\n        };\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public Collection<Address> getKnownAddresses() {\n        return Collections.unmodifiableCollection(addressMap.values());\n    }","id":54050,"modified_method":"public Collection<Address> getKnownAddresses() {\n        return unmodifiableCollection(addressMap.values());\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public TestHazelcastInstanceFactory() {\n        this.count = 0;\n        this.registry = new TestNodeRegistry(Collections.unmodifiableCollection(addressMap.values()));\n    }","id":54051,"modified_method":"public TestHazelcastInstanceFactory() {\n        this(0);\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public TestHazelcastInstanceFactory(String... addresses) {\n        this.count = addresses.length;\n        if (mockNetwork) {\n            List<Address> addressesList = createAddresses(-1, PORTS, addresses);\n            initFactory(addressesList);\n        }\n    }","id":54052,"modified_method":"public TestHazelcastInstanceFactory(String... addresses) {\n        this(-1, addresses);\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public TestHazelcastInstanceFactory(Collection<Address> addresses) {\n        this.count = addresses.size();\n        if (mockNetwork) {\n            initFactory(addresses);\n        }\n    }","id":54053,"modified_method":"public TestHazelcastInstanceFactory(Collection<Address> addresses) {\n        this.count = addresses.size();\n        this.registry = getRegistry(addresses);\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private static List<Address> createAddresses(AtomicInteger ports, int count) {\n        List<Address> addresses = new ArrayList<Address>(count);\n        for (int i = 0; i < count; i++) {\n            addresses.add(createAddress(\"127.0.0.1\", ports.incrementAndGet()));\n        }\n        return addresses;\n    }","id":54054,"modified_method":"private List<Address> createAddresses(AtomicInteger ports, int count) {\n        if (!mockNetwork || count == 0) {\n            return emptyList();\n        }\n        List<Address> addresses = new ArrayList<Address>(count);\n        for (int i = 0; i < count; i++) {\n            addresses.add(createAddress(\"127.0.0.1\", ports.incrementAndGet()));\n        }\n        return addresses;\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public TestHazelcastInstanceFactory(int initialPort, String... addresses) {\n        this.count = addresses.length;\n        if (mockNetwork) {\n            List<Address> addressList = createAddresses(initialPort, PORTS, addresses);\n            initFactory(addressList);\n        }\n    }","id":54055,"modified_method":"public TestHazelcastInstanceFactory(int initialPort, String... addresses) {\n        this.count = addresses.length;\n        this.registry = getRegistry(createAddresses(initialPort, PORTS, addresses));\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public TestHazelcastInstanceFactory(int count) {\n        this.count = count;\n        if (mockNetwork) {\n            List<Address> addresses = createAddresses(PORTS, count);\n            initFactory(addresses);\n        }\n    }","id":54056,"modified_method":"public TestHazelcastInstanceFactory(int count) {\n        this.count = count;\n        this.registry = getRegistry(createAddresses(PORTS, count));\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected static Address createAddress(String host, int port) {\n        try {\n            return new Address(host, port);\n        } catch (UnknownHostException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }","id":54057,"modified_method":"private static Address createAddress(String host, int port) {\n        try {\n            return new Address(host, port);\n        } catch (UnknownHostException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private void initFactory(Collection<Address> addresses) {\n        int ix = 0;\n        for (Address address : addresses) {\n            addressMap.put(ix++, address);\n        }\n        this.registry = new TestNodeRegistry(Collections.unmodifiableCollection(addressMap.values()));\n    }","id":54058,"modified_method":"private TestNodeRegistry getRegistry(Collection<Address> addresses) {\n        if (!mockNetwork) {\n            return null;\n        }\n\n        int ix = 0;\n        for (Address address : addresses) {\n            addressMap.put(ix++, address);\n        }\n        return new TestNodeRegistry(getKnownAddresses());\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private static List<Address> createAddresses(int initialPort, AtomicInteger ports, String... addressArray) {\n        checkElementsNotNull(addressArray);\n\n        int count = addressArray.length;\n        List<Address> addresses = new ArrayList<Address>(count);\n        for (String address : addressArray) {\n            int port = initialPort == -1 ? ports.incrementAndGet() : initialPort++;\n            addresses.add(createAddress(address, port));\n        }\n        return addresses;\n    }","id":54059,"modified_method":"private List<Address> createAddresses(int initialPort, AtomicInteger ports, String... addressArray) {\n        if (!mockNetwork) {\n            return emptyList();\n        }\n        checkElementsNotNull(addressArray);\n\n        int count = addressArray.length;\n        List<Address> addresses = new ArrayList<Address>(count);\n        for (String address : addressArray) {\n            int port = initialPort == -1 ? ports.incrementAndGet() : initialPort++;\n            addresses.add(createAddress(address, port));\n        }\n        return addresses;\n    }","commit_id":"b2bb240bacb5ab01969c26bebd9454debc9149c4","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public LocalMapStatsImpl createLocalMapStats(String mapName) {\n        final NodeEngine nodeEngine = this.nodeEngine;\n        final MapContainer mapContainer = mapServiceContext.getMapContainer(mapName);\n        final LocalMapStatsImpl localMapStats = getLocalMapStatsImpl(mapName);\n        if (!mapContainer.getMapConfig().isStatisticsEnabled()) {\n            return localMapStats;\n        }\n        final int backupCount = mapContainer.getTotalBackupCount();\n        final ClusterService clusterService = nodeEngine.getClusterService();\n        final InternalPartitionService partitionService = nodeEngine.getPartitionService();\n        final Address thisAddress = clusterService.getThisAddress();\n\n        localMapStats.init();\n        localMapStats.setBackupCount(backupCount);\n        addNearCacheStats(localMapStats, mapContainer);\n\n        for (int partitionId = 0; partitionId < partitionService.getPartitionCount(); partitionId++) {\n            InternalPartition partition = partitionService.getPartition(partitionId);\n            Address owner = partition.getOwnerOrNull();\n            if (owner == null) {\n                //no-op because no owner is set yet. Therefor we don't know anything about the map\n                continue;\n            }\n            if (owner.equals(thisAddress)) {\n                addOwnerPartitionStats(localMapStats, mapName, partitionId);\n            } else {\n                addReplicaPartitionStats(localMapStats, mapName, partitionId,\n                        partition, clusterService, backupCount, thisAddress);\n            }\n        }\n        return localMapStats;\n    }","id":54060,"modified_method":"public LocalMapStatsImpl createLocalMapStats(String mapName) {\n        final NodeEngine nodeEngine = this.nodeEngine;\n        final MapContainer mapContainer = mapServiceContext.getMapContainer(mapName);\n        final LocalMapStatsImpl localMapStats = getLocalMapStatsImpl(mapName);\n        if (!mapContainer.getMapConfig().isStatisticsEnabled()) {\n            return localMapStats;\n        }\n        final int backupCount = mapContainer.getTotalBackupCount();\n        final ClusterService clusterService = nodeEngine.getClusterService();\n        final InternalPartitionService partitionService = nodeEngine.getPartitionService();\n        final Address thisAddress = clusterService.getThisAddress();\n\n        localMapStats.init();\n        localMapStats.setBackupCount(backupCount);\n        addNearCacheStats(localMapStats, mapContainer);\n\n        for (int partitionId = 0; partitionId < partitionService.getPartitionCount(); partitionId++) {\n            InternalPartition partition = partitionService.getPartition(partitionId);\n            Address owner = partition.getOwnerOrNull();\n            if (owner == null) {\n                //no-op because no owner is set yet. Therefor we don't know anything about the map\n                continue;\n            }\n            if (owner.equals(thisAddress)) {\n                addOwnerPartitionStats(localMapStats, mapName, partitionId);\n            } else {\n                addReplicaPartitionStats(localMapStats, mapName, partitionId,\n                        partition, partitionService, backupCount, thisAddress);\n            }\n        }\n        return localMapStats;\n    }","commit_id":"de6eb831c5b598268d2af75152ff468e41999a29","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"/**\n     * Waits partition table update to get replica address if current replica address is null.\n     */\n    private Address waitForReplicaAddress(int replica, InternalPartition partition,\n                                          ClusterService clusterService, int backupCount) {\n        int tryCount = RETRY_COUNT;\n        Address replicaAddress = null;\n        while (replicaAddress == null && clusterService.getSize() > backupCount && tryCount-- > 0) {\n            sleep();\n            replicaAddress = partition.getReplicaAddress(replica);\n        }\n        return replicaAddress;\n    }","id":54061,"modified_method":"/**\n     * Waits partition table update to get replica address if current replica address is null.\n     */\n    private Address waitForReplicaAddress(int replica, InternalPartition partition,\n                                          InternalPartitionService partitionService, int backupCount) {\n        int tryCount = RETRY_COUNT;\n        Address replicaAddress = null;\n        while (replicaAddress == null && partitionService.getMemberGroupsSize() > backupCount && tryCount-- > 0) {\n            sleep();\n            replicaAddress = partition.getReplicaAddress(replica);\n        }\n        return replicaAddress;\n    }","commit_id":"de6eb831c5b598268d2af75152ff468e41999a29","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private boolean notGotReplicaAddress(Address replicaAddress, ClusterService clusterService, int backupCount) {\n        return replicaAddress == null && clusterService.getSize() > backupCount;\n    }","id":54062,"modified_method":"private boolean notGotReplicaAddress(Address replicaAddress, InternalPartitionService partitionService, int backupCount) {\n        return replicaAddress == null && partitionService.getMemberGroupsSize() > backupCount;\n    }","commit_id":"de6eb831c5b598268d2af75152ff468e41999a29","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"/**\n     * Gets replica address. Waits if necessary.\n     *\n     * @see #waitForReplicaAddress\n     */\n    private Address getReplicaAddress(int replica, InternalPartition partition,\n                                      ClusterService clusterService, int backupCount) {\n        Address replicaAddress = partition.getReplicaAddress(replica);\n        if (replicaAddress == null) {\n            replicaAddress = waitForReplicaAddress(replica, partition, clusterService, backupCount);\n        }\n        return replicaAddress;\n    }","id":54063,"modified_method":"/**\n     * Gets replica address. Waits if necessary.\n     *\n     * @see #waitForReplicaAddress\n     */\n    private Address getReplicaAddress(int replica, InternalPartition partition,\n                                      InternalPartitionService partitionService, int backupCount) {\n        Address replicaAddress = partition.getReplicaAddress(replica);\n        if (replicaAddress == null) {\n            replicaAddress = waitForReplicaAddress(replica, partition, partitionService, backupCount);\n        }\n        return replicaAddress;\n    }","commit_id":"de6eb831c5b598268d2af75152ff468e41999a29","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"/**\n     * Calculates and adds replica partition stats.\n     */\n    private void addReplicaPartitionStats(LocalMapStatsImpl localMapStats, String mapName, int partitionId,\n                                          InternalPartition partition, ClusterService clusterService,\n                                          int backupCount, Address thisAddress) {\n        long heapCost = 0;\n        long backupEntryCount = 0;\n        long backupEntryMemoryCost = 0;\n\n        for (int replica = 1; replica <= backupCount; replica++) {\n            final Address replicaAddress = getReplicaAddress(replica, partition, clusterService, backupCount);\n            if (notGotReplicaAddress(replicaAddress, clusterService, backupCount)) {\n                printWarning(partition, replica);\n                continue;\n            }\n            if (gotReplicaAddress(replicaAddress, thisAddress)) {\n                RecordStore recordStore = getRecordStoreOrNull(mapName, partitionId);\n                if (hasRecords(recordStore)) {\n                    heapCost += recordStore.getHeapCost();\n                    backupEntryCount += recordStore.size();\n                    backupEntryMemoryCost += getMemoryCost(recordStore);\n                }\n            }\n        }\n        localMapStats.incrementHeapCost(heapCost);\n        localMapStats.incrementBackupEntryCount(backupEntryCount);\n        localMapStats.incrementBackupEntryMemoryCost(backupEntryMemoryCost);\n    }","id":54064,"modified_method":"/**\n     * Calculates and adds replica partition stats.\n     */\n    private void addReplicaPartitionStats(LocalMapStatsImpl localMapStats, String mapName, int partitionId,\n                                          InternalPartition partition, InternalPartitionService partitionService,\n                                          int backupCount, Address thisAddress) {\n        long heapCost = 0;\n        long backupEntryCount = 0;\n        long backupEntryMemoryCost = 0;\n\n        for (int replica = 1; replica <= backupCount; replica++) {\n            final Address replicaAddress = getReplicaAddress(replica, partition, partitionService, backupCount);\n            if (notGotReplicaAddress(replicaAddress, partitionService, backupCount)) {\n                printWarning(partition, replica);\n                continue;\n            }\n            if (gotReplicaAddress(replicaAddress, thisAddress)) {\n                RecordStore recordStore = getRecordStoreOrNull(mapName, partitionId);\n                if (hasRecords(recordStore)) {\n                    heapCost += recordStore.getHeapCost();\n                    backupEntryCount += recordStore.size();\n                    backupEntryMemoryCost += getMemoryCost(recordStore);\n                }\n            }\n        }\n        localMapStats.incrementHeapCost(heapCost);\n        localMapStats.incrementBackupEntryCount(backupEntryCount);\n        localMapStats.incrementBackupEntryMemoryCost(backupEntryMemoryCost);\n    }","commit_id":"de6eb831c5b598268d2af75152ff468e41999a29","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public TestHazelcastInstanceFactory(int count) {\n        this.count = count;\n        if (mockNetwork) {\n            addresses = createAddresses(count);\n            registry = new TestNodeRegistry(addresses);\n        } else {\n            addresses = null;\n            registry = null;\n        }\n    }","id":54065,"modified_method":"public TestHazelcastInstanceFactory(int count) {\n        this(createAddresses(count));\n    }","commit_id":"de6eb831c5b598268d2af75152ff468e41999a29","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"/**\n     * Prints out an error report.\n     *\n     * @param request The request being processed\n     * @param response The response being generated\n     * @param throwable The exception that occurred (which possibly wraps\n     *  a root cause exception\n     */\n    protected void report(Request request, Response response,\n                          Throwable throwable) {\n\n        // Do nothing on non-HTTP responses\n        int statusCode = response.getStatus();\n\n        // Do nothing on a 1xx, 2xx and 3xx status\n        // Do nothing if anything has been written already\n        if (statusCode < 400 || response.getContentWritten() > 0 ||\n                !response.isError()) {\n            return;\n        }\n\n        String message = RequestUtil.filter(response.getMessage());\n        if (message == null) {\n            if (throwable != null) {\n                String exceptionMessage = throwable.getMessage();\n                if (exceptionMessage != null && exceptionMessage.length() > 0) {\n                    message = RequestUtil.filter(\n                            (new Scanner(exceptionMessage)).nextLine());\n                }\n            }\n            if (message == null) {\n                message = \"\";\n            }\n        }\n\n        // Do nothing if there is no report for the specified status code and\n        // no error message provided\n        String report = null;\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n        response.setLocale(smClient.getLocale());\n        try {\n            report = smClient.getString(\"http.\" + statusCode);\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n        }\n        if (report == null) {\n            if (message.length() == 0) {\n                return;\n            } else {\n                report = smClient.getString(\"errorReportValve.noDescription\");\n            }\n        }\n\n        StringBuilder sb = new StringBuilder();\n\n        sb.append(\"<!DOCTYPE html><html><head><title>\");\n        sb.append(ServerInfo.getServerInfo()).append(\" - \");\n        sb.append(smClient.getString(\"errorReportValve.errorReport\"));\n        sb.append(\"<\/title>\");\n        sb.append(\"<style type=\\\"text/css\\\">\");\n        sb.append(org.apache.catalina.util.TomcatCSS.TOMCAT_CSS);\n        sb.append(\"<\/style> \");\n        sb.append(\"<\/head><body>\");\n        sb.append(\"<h1>\");\n        sb.append(smClient.getString(\"errorReportValve.statusHeader\",\n                               \"\" + statusCode, message)).append(\"<\/h1>\");\n        sb.append(\"<div class=\\\"line\\\"><\/div>\");\n        sb.append(\"<p><b>type<\/b> \");\n        if (throwable != null) {\n            sb.append(smClient.getString(\"errorReportValve.exceptionReport\"));\n        } else {\n            sb.append(smClient.getString(\"errorReportValve.statusReport\"));\n        }\n        sb.append(\"<\/p>\");\n        sb.append(\"<p><b>\");\n        sb.append(smClient.getString(\"errorReportValve.message\"));\n        sb.append(\"<\/b> <u>\");\n        sb.append(message).append(\"<\/u><\/p>\");\n        sb.append(\"<p><b>\");\n        sb.append(smClient.getString(\"errorReportValve.description\"));\n        sb.append(\"<\/b> <u>\");\n        sb.append(report);\n        sb.append(\"<\/u><\/p>\");\n\n        if (throwable != null) {\n\n            String stackTrace = getPartialServletStackTrace(throwable);\n            sb.append(\"<p><b>\");\n            sb.append(smClient.getString(\"errorReportValve.exception\"));\n            sb.append(\"<\/b><\/p><pre>\");\n            sb.append(RequestUtil.filter(stackTrace));\n            sb.append(\"<\/pre>\");\n\n            int loops = 0;\n            Throwable rootCause = throwable.getCause();\n            while (rootCause != null && (loops < 10)) {\n                stackTrace = getPartialServletStackTrace(rootCause);\n                sb.append(\"<p><b>\");\n                sb.append(smClient.getString(\"errorReportValve.rootCause\"));\n                sb.append(\"<\/b><\/p><pre>\");\n                sb.append(RequestUtil.filter(stackTrace));\n                sb.append(\"<\/pre>\");\n                // In case root cause is somehow heavily nested\n                rootCause = rootCause.getCause();\n                loops++;\n            }\n\n            sb.append(\"<p><b>\");\n            sb.append(smClient.getString(\"errorReportValve.note\"));\n            sb.append(\"<\/b> <u>\");\n            sb.append(smClient.getString(\"errorReportValve.rootCauseInLogs\",\n                                   ServerInfo.getServerInfo()));\n            sb.append(\"<\/u><\/p>\");\n\n        }\n\n        sb.append(\"<hr class=\\\"line\\\">\");\n        sb.append(\"<h3>\").append(ServerInfo.getServerInfo()).append(\"<\/h3>\");\n        sb.append(\"<\/body><\/html>\");\n\n        try {\n            try {\n                response.setContentType(\"text/html\");\n                response.setCharacterEncoding(\"utf-8\");\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                if (container.getLogger().isDebugEnabled()) {\n                    container.getLogger().debug(\"status.setContentType\", t);\n                }\n            }\n            Writer writer = response.getReporter();\n            if (writer != null) {\n                // If writer is null, it's an indication that the response has\n                // been hard committed already, which should never happen\n                writer.write(sb.toString());\n            }\n        } catch (IOException e) {\n            // Ignore\n        } catch (IllegalStateException e) {\n            // Ignore\n        }\n\n    }","id":54066,"modified_method":"/**\n     * Prints out an error report.\n     *\n     * @param request The request being processed\n     * @param response The response being generated\n     * @param throwable The exception that occurred (which possibly wraps\n     *  a root cause exception\n     */\n    protected void report(Request request, Response response,\n                          Throwable throwable) {\n\n        // Do nothing on non-HTTP responses\n        int statusCode = response.getStatus();\n\n        // Do nothing on a 1xx, 2xx and 3xx status\n        // Do nothing if anything has been written already\n        if (statusCode < 400 || response.getContentWritten() > 0 ||\n                !response.isError()) {\n            return;\n        }\n\n        String message = RequestUtil.filter(response.getMessage());\n        if (message == null) {\n            if (throwable != null) {\n                String exceptionMessage = throwable.getMessage();\n                if (exceptionMessage != null && exceptionMessage.length() > 0) {\n                    message = RequestUtil.filter(\n                            (new Scanner(exceptionMessage)).nextLine());\n                }\n            }\n            if (message == null) {\n                message = \"\";\n            }\n        }\n\n        // Do nothing if there is no report for the specified status code and\n        // no error message provided\n        String report = null;\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n        response.setLocale(smClient.getLocale());\n        try {\n            report = smClient.getString(\"http.\" + statusCode);\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n        }\n        if (report == null) {\n            if (message.length() == 0) {\n                return;\n            } else {\n                report = smClient.getString(\"errorReportValve.noDescription\");\n            }\n        }\n\n        StringBuilder sb = new StringBuilder();\n\n        sb.append(\"<!DOCTYPE html><html><head>\");\n        if(showServerInfo || showReport){\n            sb.append(\"<title>\");\n            if(showServerInfo) {\n                sb.append(ServerInfo.getServerInfo()).append(\" - \");\n            }\n            sb.append(smClient.getString(\"errorReportValve.errorReport\"));\n            sb.append(\"<\/title>\");\n            sb.append(\"<style><!--\");\n            sb.append(org.apache.catalina.util.TomcatCSS.TOMCAT_CSS);\n            sb.append(\"--><\/style> \");\n        }\n        sb.append(\"<\/head><body>\");\n        sb.append(\"<h1>\");\n        sb.append(smClient.getString(\"errorReportValve.statusHeader\",\n                               \"\" + statusCode, message)).append(\"<\/h1>\");\n        if (showReport) {\n            sb.append(\"<div class=\\\"line\\\"><\/div>\");\n            sb.append(\"<p><b>type<\/b> \");\n            if (throwable != null) {\n                sb.append(smClient.getString(\"errorReportValve.exceptionReport\"));\n            } else {\n                sb.append(smClient.getString(\"errorReportValve.statusReport\"));\n            }\n            sb.append(\"<\/p>\");\n            sb.append(\"<p><b>\");\n            sb.append(smClient.getString(\"errorReportValve.message\"));\n            sb.append(\"<\/b> <u>\");\n            sb.append(message).append(\"<\/u><\/p>\");\n            sb.append(\"<p><b>\");\n            sb.append(smClient.getString(\"errorReportValve.description\"));\n            sb.append(\"<\/b> <u>\");\n            sb.append(report);\n            sb.append(\"<\/u><\/p>\");\n            if (throwable != null) {\n\n                String stackTrace = getPartialServletStackTrace(throwable);\n                sb.append(\"<p><b>\");\n                sb.append(smClient.getString(\"errorReportValve.exception\"));\n                sb.append(\"<\/b><\/p><pre>\");\n                sb.append(RequestUtil.filter(stackTrace));\n                sb.append(\"<\/pre>\");\n\n                int loops = 0;\n                Throwable rootCause = throwable.getCause();\n                while (rootCause != null && (loops < 10)) {\n                    stackTrace = getPartialServletStackTrace(rootCause);\n                    sb.append(\"<p><b>\");\n                    sb.append(smClient.getString(\"errorReportValve.rootCause\"));\n                    sb.append(\"<\/b><\/p><pre>\");\n                    sb.append(RequestUtil.filter(stackTrace));\n                    sb.append(\"<\/pre>\");\n                    // In case root cause is somehow heavily nested\n                    rootCause = rootCause.getCause();\n                    loops++;\n                }\n\n                sb.append(\"<p><b>\");\n                sb.append(smClient.getString(\"errorReportValve.note\"));\n                sb.append(\"<\/b> <u>\");\n                sb.append(smClient.getString(\"errorReportValve.rootCauseInLogs\",\n                        showServerInfo?ServerInfo.getServerInfo():\"\"));\n                sb.append(\"<\/u><\/p>\");\n\n            }\n            sb.append(\"<hr class=\\\"line\\\">\");\n        }\n        sb.append(\"<h3>\").append(showServerInfo?ServerInfo.getServerInfo():\"\").append(\"<\/h3>\");\n        sb.append(\"<\/body><\/html>\");\n\n        try {\n            try {\n                response.setContentType(\"text/html\");\n                response.setCharacterEncoding(\"utf-8\");\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                if (container.getLogger().isDebugEnabled()) {\n                    container.getLogger().debug(\"status.setContentType\", t);\n                }\n            }\n            Writer writer = response.getReporter();\n            if (writer != null) {\n                // If writer is null, it's an indication that the response has\n                // been hard committed already, which should never happen\n                writer.write(sb.toString());\n            }\n        } catch (IOException e) {\n            // Ignore\n        } catch (IllegalStateException e) {\n            // Ignore\n        }\n\n    }","commit_id":"4132b15beb3d977be0c5d7e0966d477db2ec8d72","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Prints out an error report.\n     *\n     * @param request The request being processed\n     * @param response The response being generated\n     * @param throwable The exception that occurred (which possibly wraps\n     *  a root cause exception\n     */\n    protected void report(Request request, Response response,\n                          Throwable throwable) {\n\n        // Do nothing on non-HTTP responses\n        int statusCode = response.getStatus();\n\n        // Do nothing on a 1xx, 2xx and 3xx status\n        // Do nothing if anything has been written already\n        if (statusCode < 400 || response.getContentWritten() > 0 ||\n                !response.isError()) {\n            return;\n        }\n\n        String message = RequestUtil.filter(response.getMessage());\n        if (message == null) {\n            if (throwable != null) {\n                String exceptionMessage = throwable.getMessage();\n                if (exceptionMessage != null && exceptionMessage.length() > 0) {\n                    message = RequestUtil.filter(\n                            (new Scanner(exceptionMessage)).nextLine());\n                }\n            }\n            if (message == null) {\n                message = \"\";\n            }\n        }\n\n        // Do nothing if there is no report for the specified status code and\n        // no error message provided\n        String report = null;\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n        response.setLocale(smClient.getLocale());\n        try {\n            report = smClient.getString(\"http.\" + statusCode);\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n        }\n        if (report == null) {\n            if (message.length() == 0) {\n                return;\n            } else {\n                report = smClient.getString(\"errorReportValve.noDescription\");\n            }\n        }\n\n        StringBuilder sb = new StringBuilder();\n\n        sb.append(\"<!DOCTYPE html><html><head>\");\n        if(showServerInfo || showReport){\n            sb.append(\"<title>\");\n            if(showServerInfo) {\n                sb.append(ServerInfo.getServerInfo()).append(\" - \");\n            }\n            sb.append(smClient.getString(\"errorReportValve.errorReport\"));\n            sb.append(\"<\/title>\");\n            sb.append(\"<style type=\\\"text/css\\\">\");\n            sb.append(org.apache.catalina.util.TomcatCSS.TOMCAT_CSS);\n            sb.append(\"<\/style> \");\n        }\n        sb.append(\"<\/head><body>\");\n        sb.append(\"<h1>\");\n        sb.append(smClient.getString(\"errorReportValve.statusHeader\",\n                               \"\" + statusCode, message)).append(\"<\/h1>\");\n        if (showReport) {\n            sb.append(\"<div class=\\\"line\\\"><\/div>\");\n            sb.append(\"<p><b>type<\/b> \");\n            if (throwable != null) {\n                sb.append(smClient.getString(\"errorReportValve.exceptionReport\"));\n            } else {\n                sb.append(smClient.getString(\"errorReportValve.statusReport\"));\n            }\n            sb.append(\"<\/p>\");\n            sb.append(\"<p><b>\");\n            sb.append(smClient.getString(\"errorReportValve.message\"));\n            sb.append(\"<\/b> <u>\");\n            sb.append(message).append(\"<\/u><\/p>\");\n            sb.append(\"<p><b>\");\n            sb.append(smClient.getString(\"errorReportValve.description\"));\n            sb.append(\"<\/b> <u>\");\n            sb.append(report);\n            sb.append(\"<\/u><\/p>\");\n            if (throwable != null) {\n\n                String stackTrace = getPartialServletStackTrace(throwable);\n                sb.append(\"<p><b>\");\n                sb.append(smClient.getString(\"errorReportValve.exception\"));\n                sb.append(\"<\/b><\/p><pre>\");\n                sb.append(RequestUtil.filter(stackTrace));\n                sb.append(\"<\/pre>\");\n\n                int loops = 0;\n                Throwable rootCause = throwable.getCause();\n                while (rootCause != null && (loops < 10)) {\n                    stackTrace = getPartialServletStackTrace(rootCause);\n                    sb.append(\"<p><b>\");\n                    sb.append(smClient.getString(\"errorReportValve.rootCause\"));\n                    sb.append(\"<\/b><\/p><pre>\");\n                    sb.append(RequestUtil.filter(stackTrace));\n                    sb.append(\"<\/pre>\");\n                    // In case root cause is somehow heavily nested\n                    rootCause = rootCause.getCause();\n                    loops++;\n                }\n\n                sb.append(\"<p><b>\");\n                sb.append(smClient.getString(\"errorReportValve.note\"));\n                sb.append(\"<\/b> <u>\");\n                sb.append(smClient.getString(\"errorReportValve.rootCauseInLogs\",\n                        showServerInfo?ServerInfo.getServerInfo():\"\"));\n                sb.append(\"<\/u><\/p>\");\n\n            }\n            sb.append(\"<hr class=\\\"line\\\">\");\n        }\n        sb.append(\"<h3>\").append(showServerInfo?ServerInfo.getServerInfo():\"\").append(\"<\/h3>\");\n        sb.append(\"<\/body><\/html>\");\n\n        try {\n            try {\n                response.setContentType(\"text/html\");\n                response.setCharacterEncoding(\"utf-8\");\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                if (container.getLogger().isDebugEnabled()) {\n                    container.getLogger().debug(\"status.setContentType\", t);\n                }\n            }\n            Writer writer = response.getReporter();\n            if (writer != null) {\n                // If writer is null, it's an indication that the response has\n                // been hard committed already, which should never happen\n                writer.write(sb.toString());\n            }\n        } catch (IOException e) {\n            // Ignore\n        } catch (IllegalStateException e) {\n            // Ignore\n        }\n\n    }","id":54067,"modified_method":"/**\n     * Prints out an error report.\n     *\n     * @param request The request being processed\n     * @param response The response being generated\n     * @param throwable The exception that occurred (which possibly wraps\n     *  a root cause exception\n     */\n    protected void report(Request request, Response response,\n                          Throwable throwable) {\n\n        // Do nothing on non-HTTP responses\n        int statusCode = response.getStatus();\n\n        // Do nothing on a 1xx, 2xx and 3xx status\n        // Do nothing if anything has been written already\n        if (statusCode < 400 || response.getContentWritten() > 0 ||\n                !response.isError()) {\n            return;\n        }\n\n        String message = RequestUtil.filter(response.getMessage());\n        if (message == null) {\n            if (throwable != null) {\n                String exceptionMessage = throwable.getMessage();\n                if (exceptionMessage != null && exceptionMessage.length() > 0) {\n                    message = RequestUtil.filter(\n                            (new Scanner(exceptionMessage)).nextLine());\n                }\n            }\n            if (message == null) {\n                message = \"\";\n            }\n        }\n\n        // Do nothing if there is no report for the specified status code and\n        // no error message provided\n        String report = null;\n        StringManager smClient = StringManager.getManager(\n                Constants.Package, request.getLocales());\n        response.setLocale(smClient.getLocale());\n        try {\n            report = smClient.getString(\"http.\" + statusCode);\n        } catch (Throwable t) {\n            ExceptionUtils.handleThrowable(t);\n        }\n        if (report == null) {\n            if (message.length() == 0) {\n                return;\n            } else {\n                report = smClient.getString(\"errorReportValve.noDescription\");\n            }\n        }\n\n        StringBuilder sb = new StringBuilder();\n\n        sb.append(\"<!DOCTYPE html><html><head>\");\n        if(showServerInfo || showReport){\n            sb.append(\"<title>\");\n            if(showServerInfo) {\n                sb.append(ServerInfo.getServerInfo()).append(\" - \");\n            }\n            sb.append(smClient.getString(\"errorReportValve.errorReport\"));\n            sb.append(\"<\/title>\");\n            sb.append(\"<style type=\\\"text/css\\\">\");\n            sb.append(org.apache.catalina.util.TomcatCSS.TOMCAT_CSS);\n            sb.append(\"<\/style> \");\n        }\n        sb.append(\"<\/head><body>\");\n        sb.append(\"<h1>\");\n        sb.append(smClient.getString(\"errorReportValve.statusHeader\",\n                String.valueOf(statusCode), message)).append(\"<\/h1>\");\n        if (showReport) {\n            sb.append(\"<div class=\\\"line\\\"><\/div>\");\n            sb.append(\"<p><b>type<\/b> \");\n            if (throwable != null) {\n                sb.append(smClient.getString(\"errorReportValve.exceptionReport\"));\n            } else {\n                sb.append(smClient.getString(\"errorReportValve.statusReport\"));\n            }\n            sb.append(\"<\/p>\");\n            sb.append(\"<p><b>\");\n            sb.append(smClient.getString(\"errorReportValve.message\"));\n            sb.append(\"<\/b> <u>\");\n            sb.append(message).append(\"<\/u><\/p>\");\n            sb.append(\"<p><b>\");\n            sb.append(smClient.getString(\"errorReportValve.description\"));\n            sb.append(\"<\/b> <u>\");\n            sb.append(report);\n            sb.append(\"<\/u><\/p>\");\n            if (throwable != null) {\n\n                String stackTrace = getPartialServletStackTrace(throwable);\n                sb.append(\"<p><b>\");\n                sb.append(smClient.getString(\"errorReportValve.exception\"));\n                sb.append(\"<\/b><\/p><pre>\");\n                sb.append(RequestUtil.filter(stackTrace));\n                sb.append(\"<\/pre>\");\n\n                int loops = 0;\n                Throwable rootCause = throwable.getCause();\n                while (rootCause != null && (loops < 10)) {\n                    stackTrace = getPartialServletStackTrace(rootCause);\n                    sb.append(\"<p><b>\");\n                    sb.append(smClient.getString(\"errorReportValve.rootCause\"));\n                    sb.append(\"<\/b><\/p><pre>\");\n                    sb.append(RequestUtil.filter(stackTrace));\n                    sb.append(\"<\/pre>\");\n                    // In case root cause is somehow heavily nested\n                    rootCause = rootCause.getCause();\n                    loops++;\n                }\n\n                sb.append(\"<p><b>\");\n                sb.append(smClient.getString(\"errorReportValve.note\"));\n                sb.append(\"<\/b> <u>\");\n                sb.append(smClient.getString(\"errorReportValve.rootCauseInLogs\",\n                        showServerInfo?ServerInfo.getServerInfo():\"\"));\n                sb.append(\"<\/u><\/p>\");\n\n            }\n            sb.append(\"<hr class=\\\"line\\\">\");\n        }\n        if (showServerInfo) {\n            sb.append(\"<h3>\").append(ServerInfo.getServerInfo()).append(\"<\/h3>\");\n        }\n        sb.append(\"<\/body><\/html>\");\n\n        try {\n            try {\n                response.setContentType(\"text/html\");\n                response.setCharacterEncoding(\"utf-8\");\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                if (container.getLogger().isDebugEnabled()) {\n                    container.getLogger().debug(\"status.setContentType\", t);\n                }\n            }\n            Writer writer = response.getReporter();\n            if (writer != null) {\n                // If writer is null, it's an indication that the response has\n                // been hard committed already, which should never happen\n                writer.write(sb.toString());\n            }\n        } catch (IOException e) {\n            // Ignore\n        } catch (IllegalStateException e) {\n            // Ignore\n        }\n\n    }","commit_id":"72da6453f81e47478fa961f7199a932c1de7c904","url":"https://github.com/apache/tomcat"},{"original_method":"protected void importKBArticle(\n\t\t\tPortletDataContext portletDataContext, Map<String, String> dirNames,\n\t\t\tElement kbArticleElement, KBArticle kbArticle)\n\t\tthrows Exception {\n\n\t\tMap<Long, Long> kbArticlePKs =\n\t\t\t(Map<Long, Long>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tKBArticle.class);\n\n\t\tlong userId = portletDataContext.getUserId(kbArticle.getUserUuid());\n\t\tlong parentResourcePrimKey = MapUtil.getLong(\n\t\t\tkbArticlePKs, kbArticle.getParentResourcePrimKey());\n\t\tString[] sections = AdminUtil.unescapeSections(kbArticle.getSections());\n\t\tString dirName = MapUtil.getString(\n\t\t\tdirNames, String.valueOf(kbArticle.getResourcePrimKey()));\n\n\t\tServiceContext serviceContext = portletDataContext.createServiceContext(\n\t\t\tkbArticleElement, kbArticle, _NAMESPACE);\n\n\t\tKBArticle importedKBArticle = null;\n\n\t\tif (portletDataContext.isDataStrategyMirror()) {\n\t\t\tKBArticle existingKBArticle = KBArticleUtil.fetchByUUID_G(\n\t\t\t\tkbArticle.getUuid(), portletDataContext.getScopeGroupId());\n\n\t\t\tif (existingKBArticle == null) {\n\t\t\t\timportedKBArticle = importKBArticleVersions(\n\t\t\t\t\tportletDataContext, kbArticle.getUuid(),\n\t\t\t\t\tparentResourcePrimKey, dirName, kbArticleElement);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tKBArticleLocalServiceUtil.updateKBArticle(\n\t\t\t\t\tuserId, existingKBArticle.getResourcePrimKey(),\n\t\t\t\t\tkbArticle.getTitle(), kbArticle.getContent(),\n\t\t\t\t\tkbArticle.getDescription(), sections, dirName,\n\t\t\t\t\tserviceContext);\n\n\t\t\t\tKBArticleLocalServiceUtil.moveKBArticle(\n\t\t\t\t\tuserId, existingKBArticle.getResourcePrimKey(),\n\t\t\t\t\tparentResourcePrimKey, kbArticle.getPriority());\n\n\t\t\t\timportedKBArticle =\n\t\t\t\t\tKBArticleLocalServiceUtil.getLatestKBArticle(\n\t\t\t\t\t\texistingKBArticle.getResourcePrimKey(),\n\t\t\t\t\t\tWorkflowConstants.STATUS_APPROVED);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\timportedKBArticle = importKBArticleVersions(\n\t\t\t\tportletDataContext, null, parentResourcePrimKey, dirName,\n\t\t\t\tkbArticleElement);\n\t\t}\n\n\t\tportletDataContext.importClassedModel(\n\t\t\tkbArticle, importedKBArticle, _NAMESPACE);\n\n\t\tlong importId = CounterLocalServiceUtil.increment();\n\n\t\timportKBArticleAttachments(\n\t\t\tportletDataContext, importId, dirNames, kbArticleElement,\n\t\t\timportedKBArticle);\n\t}","id":54068,"modified_method":"protected void importKBArticle(\n\t\t\tPortletDataContext portletDataContext, Map<String, String> dirNames,\n\t\t\tElement kbArticleElement, KBArticle kbArticle)\n\t\tthrows Exception {\n\n\t\tMap<Long, Long> kbArticlePKs =\n\t\t\t(Map<Long, Long>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tKBArticle.class);\n\n\t\tlong userId = portletDataContext.getUserId(kbArticle.getUserUuid());\n\t\tlong parentResourcePrimKey = MapUtil.getLong(\n\t\t\tkbArticlePKs, kbArticle.getParentResourcePrimKey());\n\t\tString[] sections = AdminUtil.unescapeSections(kbArticle.getSections());\n\t\tString dirName = MapUtil.getString(\n\t\t\tdirNames, String.valueOf(kbArticle.getResourcePrimKey()));\n\n\t\tServiceContext serviceContext = portletDataContext.createServiceContext(\n\t\t\tkbArticleElement, kbArticle, _NAMESPACE);\n\n\t\tKBArticle importedKBArticle = null;\n\n\t\tif (portletDataContext.isDataStrategyMirror()) {\n\t\t\tKBArticle existingKBArticle = KBArticleUtil.fetchByUUID_G(\n\t\t\t\tkbArticle.getUuid(), portletDataContext.getScopeGroupId());\n\n\t\t\tif (existingKBArticle == null) {\n\t\t\t\timportedKBArticle = importKBArticleVersions(\n\t\t\t\t\tportletDataContext, kbArticle.getUuid(),\n\t\t\t\t\tparentResourcePrimKey, dirName, kbArticleElement);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tKBArticleLocalServiceUtil.updateKBArticle(\n\t\t\t\t\tuserId, existingKBArticle.getResourcePrimKey(),\n\t\t\t\t\tkbArticle.getTitle(), kbArticle.getContent(),\n\t\t\t\t\tkbArticle.getDescription(), sections, dirName,\n\t\t\t\t\tserviceContext);\n\n\t\t\t\tKBArticleLocalServiceUtil.moveKBArticle(\n\t\t\t\t\tuserId, existingKBArticle.getResourcePrimKey(),\n\t\t\t\t\tparentResourcePrimKey, kbArticle.getPriority());\n\n\t\t\t\timportedKBArticle =\n\t\t\t\t\tKBArticleLocalServiceUtil.getLatestKBArticle(\n\t\t\t\t\t\texistingKBArticle.getResourcePrimKey(),\n\t\t\t\t\t\tWorkflowConstants.STATUS_APPROVED);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\timportedKBArticle = importKBArticleVersions(\n\t\t\t\tportletDataContext, null, parentResourcePrimKey, dirName,\n\t\t\t\tkbArticleElement);\n\t\t}\n\n\t\tportletDataContext.importClassedModel(\n\t\t\tkbArticle, importedKBArticle, _NAMESPACE);\n\n\t\timportKBArticleAttachments(\n\t\t\tportletDataContext, CounterLocalServiceUtil.increment(), dirNames,\n\t\t\tkbArticleElement, importedKBArticle);\n\t}","commit_id":"62ca544ac9bf9a1f950d65351d7a76d89f2ef151","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected String getEmailKBArticleAttachments(Locale locale)\n\t\tthrows Exception {\n\n\t\tList<FileEntry> attachmentsFileEntries =\n\t\t\t_kbArticle.getAttachmentsFileEntries();\n\n\t\tif (attachmentsFileEntries.size() <= 0) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(attachmentsFileEntries.size() * 5);\n\n\t\tfor (FileEntry fileEntry : attachmentsFileEntries) {\n\t\t\tsb.append(fileEntry.getTitle());\n\t\t\tsb.append(\" (\");\n\t\t\tsb.append(\n\t\t\t\tTextFormatter.formatStorageSize(fileEntry.getSize(), locale));\n\t\t\tsb.append(\")\");\n\t\t\tsb.append(\"<br />\");\n\t\t}\n\n\t\treturn sb.toString();\n\t}","id":54069,"modified_method":"protected String getEmailKBArticleAttachments(Locale locale)\n\t\tthrows Exception {\n\n\t\tList<FileEntry> attachmentsFileEntries =\n\t\t\t_kbArticle.getAttachmentsFileEntries();\n\n\t\tif (attachmentsFileEntries.isEmpty()) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tStringBundler sb = new StringBundler(attachmentsFileEntries.size() * 5);\n\n\t\tfor (FileEntry fileEntry : attachmentsFileEntries) {\n\t\t\tsb.append(fileEntry.getTitle());\n\t\t\tsb.append(\" (\");\n\t\t\tsb.append(\n\t\t\t\tTextFormatter.formatStorageSize(fileEntry.getSize(), locale));\n\t\t\tsb.append(\")\");\n\t\t\tsb.append(\"<br />\");\n\t\t}\n\n\t\treturn sb.toString();\n\t}","commit_id":"62ca544ac9bf9a1f950d65351d7a76d89f2ef151","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public static long getFolderId(\n\t\t\tlong groupId, long userId, long resourcePrimKey)\n\t\tthrows PortalException, SystemException {\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\n\t\tlong repositoryId = PortletFileRepositoryUtil.getPortletRepository(\n\t\t\tgroupId, PortletKeys.KNOWLEDGE_BASE_ARTICLE, serviceContext);\n\n\t\tFolder kbArticleFolder = PortletFileRepositoryUtil.getPortletFolder(\n\t\t\tuserId, repositoryId, DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,\n\t\t\tString.valueOf(resourcePrimKey), serviceContext);\n\n\t\treturn kbArticleFolder.getFolderId();\n\t}","id":54070,"modified_method":"public static long getFolderId(\n\t\t\tlong groupId, long userId, long resourcePrimKey)\n\t\tthrows PortalException, SystemException {\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\n\t\tlong repositoryId = PortletFileRepositoryUtil.getPortletRepository(\n\t\t\tgroupId, PortletKeys.KNOWLEDGE_BASE_ARTICLE, serviceContext);\n\n\t\tFolder folder = PortletFileRepositoryUtil.getPortletFolder(\n\t\t\tuserId, repositoryId, DLFolderConstants.DEFAULT_PARENT_FOLDER_ID,\n\t\t\tString.valueOf(resourcePrimKey), serviceContext);\n\n\t\treturn folder.getFolderId();\n\t}","commit_id":"62ca544ac9bf9a1f950d65351d7a76d89f2ef151","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void addKBArticleAttachments(\n\t\t\tlong userId, KBArticle kbArticle, String dirName,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\ttry {\n\t\t\tDLStoreUtil.addDirectory(\n\t\t\t\tserviceContext.getCompanyId(), CompanyConstants.SYSTEM,\n\t\t\t\tkbArticle.getAttachmentsDirName());\n\t\t}\n\t\tcatch (DuplicateDirectoryException dde) {\n\t\t\t_log.error(\"Directory already exists for \" + dde.getMessage());\n\t\t}\n\n\t\tif (Validator.isNull(dirName) ||\n\t\t\t!DLStoreUtil.hasDirectory(\n\t\t\t\tserviceContext.getCompanyId(), CompanyConstants.SYSTEM,\n\t\t\t\tdirName)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tlong groupId = serviceContext.getScopeGroupId();\n\n\t\tString[] fileNames = DLStoreUtil.getFileNames(\n\t\t\tserviceContext.getCompanyId(), CompanyConstants.SYSTEM, dirName);\n\n\t\tif (fileNames.length > 0) {\n\t\t\tPortletFileRepositoryUtil.deletePortletFileEntries(\n\t\t\t\tgroupId, kbArticle.getAttachmentsFolderId());\n\t\t}\n\n\t\tfor (String fileName : fileNames) {\n\t\t\tInputStream inputStream = null;\n\n\t\t\ttry {\n\t\t\t\tinputStream = DLStoreUtil.getFileAsStream(\n\t\t\t\t\tserviceContext.getCompanyId(), CompanyConstants.SYSTEM,\n\t\t\t\t\tfileName);\n\n\t\t\t\tString shortFileName = FileUtil.getShortFileName(fileName);\n\n\t\t\t\tPortletFileRepositoryUtil.addPortletFileEntry(\n\t\t\t\t\tgroupId, userId, PortletKeys.KNOWLEDGE_BASE_ARTICLE,\n\t\t\t\t\tkbArticle.getAttachmentsFolderId(), inputStream,\n\t\t\t\t\tshortFileName);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tStreamUtil.cleanUp(inputStream);\n\t\t\t}\n\t\t}\n\n\t\tTicket ticket = ticketLocalService.fetchTicket(\n\t\t\tStringUtil.extractLast(dirName, StringPool.SLASH));\n\n\t\tif (ticket != null) {\n\t\t\tticketLocalService.deleteTicket(ticket);\n\t\t}\n\t}","id":54071,"modified_method":"protected void addKBArticleAttachments(\n\t\t\tlong userId, KBArticle kbArticle, String dirName,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n\t\ttry {\n\t\t\tDLStoreUtil.addDirectory(\n\t\t\t\tserviceContext.getCompanyId(), CompanyConstants.SYSTEM,\n\t\t\t\tkbArticle.getAttachmentsDirName());\n\t\t}\n\t\tcatch (DuplicateDirectoryException dde) {\n\t\t\t_log.error(\"Directory already exists for \" + dde.getMessage());\n\t\t}\n\n\t\tif (Validator.isNull(dirName) ||\n\t\t\t!DLStoreUtil.hasDirectory(\n\t\t\t\tserviceContext.getCompanyId(), CompanyConstants.SYSTEM,\n\t\t\t\tdirName)) {\n\n\t\t\treturn;\n\t\t}\n\n\t\tString[] fileNames = DLStoreUtil.getFileNames(\n\t\t\tserviceContext.getCompanyId(), CompanyConstants.SYSTEM, dirName);\n\n\t\tif (fileNames.length > 0) {\n\t\t\tPortletFileRepositoryUtil.deletePortletFileEntries(\n\t\t\t\tserviceContext.getScopeGroupId(),\n\t\t\t\tkbArticle.getAttachmentsFolderId());\n\t\t}\n\n\t\tfor (String fileName : fileNames) {\n\t\t\tInputStream inputStream = null;\n\n\t\t\ttry {\n\t\t\t\tinputStream = DLStoreUtil.getFileAsStream(\n\t\t\t\t\tserviceContext.getCompanyId(), CompanyConstants.SYSTEM,\n\t\t\t\t\tfileName);\n\n\t\t\t\tString shortFileName = FileUtil.getShortFileName(fileName);\n\n\t\t\t\tPortletFileRepositoryUtil.addPortletFileEntry(\n\t\t\t\t\tserviceContext.getScopeGroupId(), userId,\n\t\t\t\t\tPortletKeys.KNOWLEDGE_BASE_ARTICLE,\n\t\t\t\t\tkbArticle.getAttachmentsFolderId(), inputStream,\n\t\t\t\t\tshortFileName);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tStreamUtil.cleanUp(inputStream);\n\t\t\t}\n\t\t}\n\n\t\tTicket ticket = ticketLocalService.fetchTicket(\n\t\t\tStringUtil.extractLast(dirName, StringPool.SLASH));\n\n\t\tif (ticket != null) {\n\t\t\tticketLocalService.deleteTicket(ticket);\n\t\t}\n\t}","commit_id":"62ca544ac9bf9a1f950d65351d7a76d89f2ef151","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void updateKBArticleAsset(\n\t\t\tlong userId, KBArticle kbArticle, long[] assetCategoryIds,\n\t\t\tString[] assetTagNames)\n\t\tthrows PortalException, SystemException {\n\n\t\t// TODO\n\n\t\tlong classTypeId = 0;\n\n\t\tassetEntryLocalService.updateEntry(\n\t\t\tuserId, kbArticle.getGroupId(), KBArticle.class.getName(),\n\t\t\tkbArticle.getClassPK(), kbArticle.getUuid(), classTypeId,\n\t\t\tassetCategoryIds, assetTagNames, false, null, null, null, null,\n\t\t\tContentTypes.TEXT_HTML, kbArticle.getTitle(),\n\t\t\tkbArticle.getDescription(), null, null, null, 0, 0, null, false);\n\t}","id":54072,"modified_method":"public void updateKBArticleAsset(\n\t\t\tlong userId, KBArticle kbArticle, long[] assetCategoryIds,\n\t\t\tString[] assetTagNames)\n\t\tthrows PortalException, SystemException {\n\n\t\t// TODO\n\n\t\tlong classTypeId = 0;\n\n\t\tassetEntryLocalService.updateEntry(\n\t\t\tuserId, kbArticle.getGroupId(), kbArticle.getCreateDate(),\n\t\t\tkbArticle.getModifiedDate(), KBArticle.class.getName(),\n\t\t\tkbArticle.getClassPK(), kbArticle.getUuid(), classTypeId,\n\t\t\tassetCategoryIds, assetTagNames, false, null, null, null,\n\t\t\tContentTypes.TEXT_HTML, kbArticle.getTitle(),\n\t\t\tkbArticle.getDescription(), null, null, null, 0, 0, null, false);\n\t}","commit_id":"62ca544ac9bf9a1f950d65351d7a76d89f2ef151","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected void doImportStagedModel(\n\t\t\tPortletDataContext portletDataContext,\n\t\t\tCalendarResource calendarResource)\n\t\tthrows Exception {\n\n\t\tlong userId = portletDataContext.getUserId(\n\t\t\tcalendarResource.getUserUuid());\n\n\t\tStagedModelDataHandlerUtil.importReferenceStagedModels(\n\t\t\tportletDataContext, calendarResource, Calendar.class);\n\n\t\tServiceContext serviceContext = portletDataContext.createServiceContext(\n\t\t\tcalendarResource);\n\n\t\tlong classPK = getClassPK(portletDataContext, calendarResource, userId);\n\n\t\tCalendarResource importedCalendarResource = null;\n\n\t\tif (portletDataContext.isDataStrategyMirror()) {\n\t\t\tCalendarResource existingCalendarResource =\n\t\t\t\tCalendarResourceLocalServiceUtil.\n\t\t\t\t\tfetchCalendarResourceByUuidAndGroupId(\n\t\t\t\t\t\tcalendarResource.getUuid(),\n\t\t\t\t\t\tportletDataContext.getScopeGroupId());\n\n\t\t\tif (existingCalendarResource == null) {\n\t\t\t\texistingCalendarResource =\n\t\t\t\t\tCalendarResourceLocalServiceUtil.fetchCalendarResource(\n\t\t\t\t\t\tcalendarResource.getClassNameId(), classPK);\n\t\t\t}\n\n\t\t\tif (existingCalendarResource == null) {\n\t\t\t\tserviceContext.setUuid(calendarResource.getUuid());\n\n\t\t\t\timportedCalendarResource =\n\t\t\t\t\tCalendarResourceLocalServiceUtil.addCalendarResource(\n\t\t\t\t\t\tuserId, portletDataContext.getScopeGroupId(),\n\t\t\t\t\t\tcalendarResource.getClassNameId(), classPK,\n\t\t\t\t\t\tcalendarResource.getClassUuid(),\n\t\t\t\t\t\tcalendarResource.getCode(),\n\t\t\t\t\t\tcalendarResource.getNameMap(),\n\t\t\t\t\t\tcalendarResource.getDescriptionMap(),\n\t\t\t\t\t\tcalendarResource.isActive(), serviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\timportedCalendarResource =\n\t\t\t\t\tCalendarResourceLocalServiceUtil.updateCalendarResource(\n\t\t\t\t\t\texistingCalendarResource.getCalendarResourceId(),\n\t\t\t\t\t\tcalendarResource.getNameMap(),\n\t\t\t\t\t\tcalendarResource.getDescriptionMap(),\n\t\t\t\t\t\tcalendarResource.isActive(), serviceContext);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\timportedCalendarResource =\n\t\t\t\tCalendarResourceLocalServiceUtil.addCalendarResource(\n\t\t\t\t\tuserId, portletDataContext.getScopeGroupId(),\n\t\t\t\t\tcalendarResource.getClassNameId(), classPK,\n\t\t\t\t\tcalendarResource.getClassUuid(), calendarResource.getCode(),\n\t\t\t\t\tcalendarResource.getNameMap(),\n\t\t\t\t\tcalendarResource.getDescriptionMap(),\n\t\t\t\t\tcalendarResource.isActive(), serviceContext);\n\t\t}\n\n\t\tupdateCalendars(\n\t\t\tportletDataContext, calendarResource, importedCalendarResource);\n\n\t\tportletDataContext.importClassedModel(\n\t\t\tcalendarResource, importedCalendarResource);\n\t}","id":54073,"modified_method":"@Override\n\tprotected void doImportStagedModel(\n\t\t\tPortletDataContext portletDataContext,\n\t\t\tCalendarResource calendarResource)\n\t\tthrows Exception {\n\n\t\tlong userId = portletDataContext.getUserId(\n\t\t\tcalendarResource.getUserUuid());\n\n\t\tStagedModelDataHandlerUtil.importReferenceStagedModels(\n\t\t\tportletDataContext, calendarResource, Calendar.class);\n\n\t\tServiceContext serviceContext = portletDataContext.createServiceContext(\n\t\t\tcalendarResource);\n\n\t\tlong classPK = getClassPK(portletDataContext, calendarResource, userId);\n\n\t\tGroup sourceGroup = GroupLocalServiceUtil.getGroup(\n\t\t\tportletDataContext.getSourceGroupId());\n\t\tGroup newGroup = GroupLocalServiceUtil.getGroup(\n\t\t\tportletDataContext.getScopeGroupId());\n\t\tString sourceCalendarResourceName = calendarResource.getName(\n\t\t\tLocaleUtil.getDefault());\n\t\tMap<Locale, String> calendarResourceNameMap =\n\t\t\tcalendarResource.getNameMap();\n\n\t\tCalendarResource importedCalendarResource = null;\n\n\t\tif (sourceCalendarResourceName.equals(sourceGroup.getName())) {\n\t\t\tcalendarResourceNameMap = new HashMap<Locale, String>();\n\t\t\tcalendarResourceNameMap.put(\n\t\t\t\tLocaleUtil.getDefault(), newGroup.getName());\n\t\t}\n\n\t\tif (portletDataContext.isDataStrategyMirror()) {\n\t\t\tCalendarResource existingCalendarResource =\n\t\t\t\tCalendarResourceLocalServiceUtil.\n\t\t\t\t\tfetchCalendarResourceByUuidAndGroupId(\n\t\t\t\t\t\tcalendarResource.getUuid(),\n\t\t\t\t\t\tportletDataContext.getScopeGroupId());\n\n\t\t\tif (existingCalendarResource == null) {\n\t\t\t\texistingCalendarResource =\n\t\t\t\t\tCalendarResourceLocalServiceUtil.fetchCalendarResource(\n\t\t\t\t\t\tcalendarResource.getClassNameId(), classPK);\n\t\t\t}\n\n\t\t\tif (existingCalendarResource == null) {\n\t\t\t\tserviceContext.setUuid(calendarResource.getUuid());\n\n\t\t\t\timportedCalendarResource =\n\t\t\t\t\tCalendarResourceLocalServiceUtil.addCalendarResource(\n\t\t\t\t\t\tuserId, portletDataContext.getScopeGroupId(),\n\t\t\t\t\t\tcalendarResource.getClassNameId(), classPK,\n\t\t\t\t\t\tcalendarResource.getClassUuid(),\n\t\t\t\t\t\tcalendarResource.getCode(), calendarResourceNameMap,\n\t\t\t\t\t\tcalendarResource.getDescriptionMap(),\n\t\t\t\t\t\tcalendarResource.isActive(), serviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\timportedCalendarResource =\n\t\t\t\t\tCalendarResourceLocalServiceUtil.updateCalendarResource(\n\t\t\t\t\t\texistingCalendarResource.getCalendarResourceId(),\n\t\t\t\t\t\tcalendarResource.getNameMap(),\n\t\t\t\t\t\tcalendarResource.getDescriptionMap(),\n\t\t\t\t\t\tcalendarResource.isActive(), serviceContext);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\timportedCalendarResource =\n\t\t\t\tCalendarResourceLocalServiceUtil.addCalendarResource(\n\t\t\t\t\tuserId, portletDataContext.getScopeGroupId(),\n\t\t\t\t\tcalendarResource.getClassNameId(), classPK,\n\t\t\t\t\tcalendarResource.getClassUuid(), calendarResource.getCode(),\n\t\t\t\t\tcalendarResourceNameMap,\n\t\t\t\t\tcalendarResource.getDescriptionMap(),\n\t\t\t\t\tcalendarResource.isActive(), serviceContext);\n\t\t}\n\n\t\tupdateCalendars(\n\t\t\tportletDataContext, calendarResource, importedCalendarResource);\n\n\t\tportletDataContext.importClassedModel(\n\t\t\tcalendarResource, importedCalendarResource);\n\t}","commit_id":"a90bf8858f917a5959ec1e2c9e861ca6af0197a0","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected void doImportStagedModel(\n\t\t\tPortletDataContext portletDataContext, Calendar calendar)\n\t\tthrows Exception {\n\n\t\tlong userId = portletDataContext.getUserId(calendar.getUserUuid());\n\n\t\tStagedModelDataHandlerUtil.importReferenceStagedModels(\n\t\t\tportletDataContext, CalendarResource.class);\n\n\t\tMap<Long, Long> calendarResourceIds =\n\t\t\t(Map<Long, Long>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tCalendarResource.class);\n\n\t\tlong calendarResourceId = MapUtil.getLong(\n\t\t\tcalendarResourceIds, calendar.getCalendarResourceId(),\n\t\t\tcalendar.getCalendarResourceId());\n\n\t\tServiceContext serviceContext = portletDataContext.createServiceContext(\n\t\t\tcalendar);\n\n\t\tCalendar importedCalendar = null;\n\n\t\tif (portletDataContext.isDataStrategyMirror()) {\n\t\t\tCalendar existingCalendar =\n\t\t\t\tCalendarLocalServiceUtil.fetchCalendarByUuidAndGroupId(\n\t\t\t\t\tcalendar.getUuid(), portletDataContext.getScopeGroupId());\n\n\t\t\tif (existingCalendar == null) {\n\t\t\t\tserviceContext.setUuid(calendar.getUuid());\n\n\t\t\t\timportedCalendar = CalendarLocalServiceUtil.addCalendar(\n\t\t\t\t\tuserId, portletDataContext.getScopeGroupId(),\n\t\t\t\t\tcalendarResourceId, calendar.getNameMap(),\n\t\t\t\t\tcalendar.getDescriptionMap(), calendar.getColor(),\n\t\t\t\t\tcalendar.isDefaultCalendar(), calendar.isEnableComments(),\n\t\t\t\t\tcalendar.isEnableRatings(), serviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\timportedCalendar = CalendarLocalServiceUtil.updateCalendar(\n\t\t\t\t\texistingCalendar.getCalendarId(), calendar.getNameMap(),\n\t\t\t\t\tcalendar.getDescriptionMap(), calendar.getColor(),\n\t\t\t\t\tcalendar.isDefaultCalendar(), calendar.isEnableComments(),\n\t\t\t\t\tcalendar.isEnableRatings(), serviceContext);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\timportedCalendar = CalendarLocalServiceUtil.addCalendar(\n\t\t\t\tuserId, portletDataContext.getScopeGroupId(),\n\t\t\t\tcalendarResourceId, calendar.getNameMap(),\n\t\t\t\tcalendar.getDescriptionMap(), calendar.getColor(),\n\t\t\t\tcalendar.isDefaultCalendar(), calendar.isEnableComments(),\n\t\t\t\tcalendar.isEnableRatings(), serviceContext);\n\t\t}\n\n\t\tportletDataContext.importClassedModel(calendar, importedCalendar);\n\t}","id":54074,"modified_method":"@Override\n\tprotected void doImportStagedModel(\n\t\t\tPortletDataContext portletDataContext, Calendar calendar)\n\t\tthrows Exception {\n\n\t\tlong userId = portletDataContext.getUserId(calendar.getUserUuid());\n\n\t\tStagedModelDataHandlerUtil.importReferenceStagedModels(\n\t\t\tportletDataContext, CalendarResource.class);\n\n\t\tMap<Long, Long> calendarResourceIds =\n\t\t\t(Map<Long, Long>)portletDataContext.getNewPrimaryKeysMap(\n\t\t\t\tCalendarResource.class);\n\n\t\tlong calendarResourceId = MapUtil.getLong(\n\t\t\tcalendarResourceIds, calendar.getCalendarResourceId(),\n\t\t\tcalendar.getCalendarResourceId());\n\n\t\tServiceContext serviceContext = portletDataContext.createServiceContext(\n\t\t\tcalendar);\n\n\t\tGroup sourceGroup = GroupLocalServiceUtil.getGroup(\n\t\t\t\tportletDataContext.getSourceGroupId());\n\t\tGroup newGroup = GroupLocalServiceUtil.getGroup(\n\t\t\t\tportletDataContext.getScopeGroupId());\n\t\tString sourceCalendarName = calendar.getName(LocaleUtil.getDefault());\n\t\tMap<Locale, String> calendarNameMap = calendar.getNameMap();\n\n\t\tCalendar importedCalendar = null;\n\n\t\tif (sourceCalendarName.equals(sourceGroup.getName())) {\n\t\t\tcalendarNameMap = new HashMap<Locale, String>();\n\t\t\tcalendarNameMap.put(LocaleUtil.getDefault(), newGroup.getName());\n\t\t}\n\n\t\tif (portletDataContext.isDataStrategyMirror()) {\n\t\t\tCalendar existingCalendar =\n\t\t\t\tCalendarLocalServiceUtil.fetchCalendarByUuidAndGroupId(\n\t\t\t\t\tcalendar.getUuid(), portletDataContext.getScopeGroupId());\n\n\t\t\tif (existingCalendar == null) {\n\t\t\t\tserviceContext.setUuid(calendar.getUuid());\n\n\t\t\t\timportedCalendar = CalendarLocalServiceUtil.addCalendar(\n\t\t\t\t\tuserId, portletDataContext.getScopeGroupId(),\n\t\t\t\t\tcalendarResourceId, calendarNameMap,\n\t\t\t\t\tcalendar.getDescriptionMap(), calendar.getColor(),\n\t\t\t\t\tcalendar.isDefaultCalendar(), calendar.isEnableComments(),\n\t\t\t\t\tcalendar.isEnableRatings(), serviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\timportedCalendar = CalendarLocalServiceUtil.updateCalendar(\n\t\t\t\t\texistingCalendar.getCalendarId(), calendar.getNameMap(),\n\t\t\t\t\tcalendar.getDescriptionMap(), calendar.getColor(),\n\t\t\t\t\tcalendar.isDefaultCalendar(), calendar.isEnableComments(),\n\t\t\t\t\tcalendar.isEnableRatings(), serviceContext);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\timportedCalendar = CalendarLocalServiceUtil.addCalendar(\n\t\t\t\tuserId, portletDataContext.getScopeGroupId(),\n\t\t\t\tcalendarResourceId, calendarNameMap,\n\t\t\t\tcalendar.getDescriptionMap(), calendar.getColor(),\n\t\t\t\tcalendar.isDefaultCalendar(), calendar.isEnableComments(),\n\t\t\t\tcalendar.isEnableRatings(), serviceContext);\n\t\t}\n\n\t\tportletDataContext.importClassedModel(calendar, importedCalendar);\n\t}","commit_id":"a90bf8858f917a5959ec1e2c9e861ca6af0197a0","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected Object[] getPlidAndPortletId(\n\t\t\tHttpServletRequest request, long plid, long primaryKey)\n\t\tthrows Exception {\n\n\t\tif (plid != LayoutConstants.DEFAULT_PLID) {\n\t\t\ttry {\n\t\t\t\tLayout layout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\t\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t\t\t(LayoutTypePortlet)layout.getLayoutType();\n\n\t\t\t\tfor (String portletId : _portletIds) {\n\t\t\t\t\tif (layoutTypePortlet.hasPortletId(portletId)) {\n\t\t\t\t\t\treturn new Object[] {plid, portletId};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (NoSuchLayoutException nsle) {\n\t\t\t}\n\t\t}\n\n\t\tlong groupId = 0;\n\n\t\tif (primaryKey > 0) {\n\t\t\ttry {\n\t\t\t\tgroupId = getGroupId(primaryKey);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(e, e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (groupId <= 0) {\n\t\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t\tgroupId = themeDisplay.getScopeGroupId();\n\t\t}\n\n\t\tfor (String portletId : _portletIds) {\n\t\t\tplid = PortalUtil.getPlidFromPortletId(groupId, portletId);\n\n\t\t\tif (plid != LayoutConstants.DEFAULT_PLID) {\n\t\t\t\treturn new Object[] {plid, portletId};\n\t\t\t}\n\t\t}\n\n\t\tthrow new NoSuchLayoutException();\n\t}","id":54075,"modified_method":"protected Object[] getPlidAndPortletId(\n\t\t\tHttpServletRequest request, long plid, long primaryKey)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong groupId = themeDisplay.getScopeGroupId();\n\n\t\tif (primaryKey > 0) {\n\t\t\ttry {\n\t\t\t\tgroupId = getGroupId(primaryKey);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(e, e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ((plid != LayoutConstants.DEFAULT_PLID) &&\n\t\t\t(groupId == themeDisplay.getScopeGroupId())) {\n\n\t\t\ttry {\n\t\t\t\tLayout layout = LayoutLocalServiceUtil.getLayout(plid);\n\n\t\t\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t\t\t(LayoutTypePortlet)layout.getLayoutType();\n\n\t\t\t\tfor (String portletId : _portletIds) {\n\t\t\t\t\tif (layoutTypePortlet.hasPortletId(portletId)) {\n\t\t\t\t\t\treturn new Object[] {plid, portletId};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (NoSuchLayoutException nsle) {\n\t\t\t}\n\t\t}\n\n\t\tfor (String portletId : _portletIds) {\n\t\t\tplid = PortalUtil.getPlidFromPortletId(groupId, portletId);\n\n\t\t\tif (plid != LayoutConstants.DEFAULT_PLID) {\n\t\t\t\treturn new Object[] {plid, portletId};\n\t\t\t}\n\t\t}\n\n\t\tthrow new NoSuchLayoutException();\n\t}","commit_id":"e07a2491960097d02536348d65c9dfe1460335f1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PortletPreferences deleteData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences preferences)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tpreferences.setValue(\"group-id\", StringPool.BLANK);\n\t\t\tpreferences.setValue(\"article-id\", StringPool.BLANK);\n\n\t\t\treturn preferences;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":54076,"modified_method":"protected PortletPreferences doDeleteData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences preferences)\n\t\tthrows Exception {\n\n\t\tpreferences.setValue(\"group-id\", StringPool.BLANK);\n\t\tpreferences.setValue(\"article-id\", StringPool.BLANK);\n\n\t\treturn preferences;\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences preferences, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tcontext.importPermissions(\n\t\t\t\t\"com.liferay.portlet.journal\", context.getSourceGroupId(),\n\t\t\t\tcontext.getScopeGroupId());\n\n\t\t\tif (Validator.isNull(data)) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tDocument doc = SAXReaderUtil.read(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tElement dlFoldersEl = root.element(\"dl-folders\");\n\n\t\t\tList<Element> dlFolderEls = Collections.EMPTY_LIST;\n\n\t\t\tif (dlFoldersEl != null) {\n\t\t\t\tdlFolderEls = dlFoldersEl.elements(\"folder\");\n\t\t\t}\n\n\t\t\tfor (Element folderEl : dlFolderEls) {\n\t\t\t\tDLPortletDataHandlerImpl.importFolder(context, folderEl);\n\t\t\t}\n\n\t\t\tElement dlFileEntriesEl = root.element(\"dl-file-entries\");\n\n\t\t\tList<Element> dlFileEntryEls = Collections.EMPTY_LIST;\n\n\t\t\tif (dlFileEntriesEl != null) {\n\t\t\t\tdlFileEntryEls = dlFileEntriesEl.elements(\"file-entry\");\n\t\t\t}\n\n\t\t\tfor (Element fileEntryEl : dlFileEntryEls) {\n\t\t\t\tDLPortletDataHandlerImpl.importFileEntry(context, fileEntryEl);\n\t\t\t}\n\n\t\t\tElement dlFileRanksEl = root.element(\"dl-file-ranks\");\n\n\t\t\tList<Element> dlFileRankEls = Collections.EMPTY_LIST;\n\n\t\t\tif (dlFileRanksEl != null) {\n\t\t\t\tdlFileRankEls = dlFileRanksEl.elements(\"file-rank\");\n\t\t\t}\n\n\t\t\tfor (Element fileRankEl : dlFileRankEls) {\n\t\t\t\tDLPortletDataHandlerImpl.importFileRank(context, fileRankEl);\n\t\t\t}\n\n\t\t\tElement igFoldersEl = root.element(\"ig-folders\");\n\n\t\t\tList<Element> igFolderEls = Collections.EMPTY_LIST;\n\n\t\t\tif (igFoldersEl != null) {\n\t\t\t\tigFolderEls = igFoldersEl.elements(\"folder\");\n\t\t\t}\n\n\t\t\tfor (Element folderEl : igFolderEls) {\n\t\t\t\tIGPortletDataHandlerImpl.importFolder(context, folderEl);\n\t\t\t}\n\n\t\t\tElement igImagesEl = root.element(\"ig-images\");\n\n\t\t\tList<Element> igImageEls = Collections.EMPTY_LIST;\n\n\t\t\tif (igImagesEl != null) {\n\t\t\t\tigImageEls = igImagesEl.elements(\"image\");\n\t\t\t}\n\n\t\t\tfor (Element imageEl : igImageEls) {\n\t\t\t\tIGPortletDataHandlerImpl.importImage(context, imageEl);\n\t\t\t}\n\n\t\t\tElement structureEl = root.element(\"structure\");\n\n\t\t\tif (structureEl != null) {\n\t\t\t\tJournalPortletDataHandlerImpl.importStructure(\n\t\t\t\t\tcontext, structureEl);\n\t\t\t}\n\n\t\t\tElement templateEl = root.element(\"template\");\n\n\t\t\tif (templateEl != null) {\n\t\t\t\tJournalPortletDataHandlerImpl.importTemplate(\n\t\t\t\t\tcontext, templateEl);\n\t\t\t}\n\n\t\t\tElement articleEl = root.element(\"article\");\n\n\t\t\tif (articleEl != null) {\n\t\t\t\tJournalPortletDataHandlerImpl.importArticle(\n\t\t\t\t\tcontext, articleEl);\n\t\t\t}\n\n\t\t\tString articleId = preferences.getValue(\n\t\t\t\t\"article-id\", StringPool.BLANK);\n\n\t\t\tif (Validator.isNotNull(articleId)) {\n\t\t\t\tMap<String, String> articleIds =\n\t\t\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\t\t\tJournalArticle.class);\n\n\t\t\t\tarticleId = MapUtil.getString(articleIds, articleId, articleId);\n\n\t\t\t\tpreferences.setValue(\n\t\t\t\t\t\"group-id\", String.valueOf(context.getScopeGroupId()));\n\t\t\t\tpreferences.setValue(\"article-id\", articleId);\n\n\t\t\t\tLayout layout = LayoutLocalServiceUtil.getLayout(\n\t\t\t\t\tcontext.getPlid());\n\n\t\t\t\tJournalContentSearchLocalServiceUtil.updateContentSearch(\n\t\t\t\t\tcontext.getScopeGroupId(), layout.isPrivateLayout(),\n\t\t\t\t\tlayout.getLayoutId(), portletId, articleId, true);\n\t\t\t}\n\n\t\t\treturn preferences;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":54077,"modified_method":"protected PortletPreferences doImportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences preferences, String data)\n\t\tthrows Exception {\n\n\t\tcontext.importPermissions(\n\t\t\t\"com.liferay.portlet.journal\", context.getSourceGroupId(),\n\t\t\tcontext.getScopeGroupId());\n\n\t\tif (Validator.isNull(data)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(data);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tElement dlFoldersElement = rootElement.element(\"dl-folders\");\n\n\t\tList<Element> dlFolderElements = Collections.EMPTY_LIST;\n\n\t\tif (dlFoldersElement != null) {\n\t\t\tdlFolderElements = dlFoldersElement.elements(\"folder\");\n\t\t}\n\n\t\tfor (Element folderElement : dlFolderElements) {\n\t\t\tDLPortletDataHandlerImpl.importFolder(context, folderElement);\n\t\t}\n\n\t\tElement dlFileEntriesElement = rootElement.element(\"dl-file-entries\");\n\n\t\tList<Element> dlFileEntryElements = Collections.EMPTY_LIST;\n\n\t\tif (dlFileEntriesElement != null) {\n\t\t\tdlFileEntryElements = dlFileEntriesElement.elements(\"file-entry\");\n\t\t}\n\n\t\tfor (Element fileEntryElement : dlFileEntryElements) {\n\t\t\tDLPortletDataHandlerImpl.importFileEntry(context, fileEntryElement);\n\t\t}\n\n\t\tElement dlFileRanksElement = rootElement.element(\"dl-file-ranks\");\n\n\t\tList<Element> dlFileRankElements = Collections.EMPTY_LIST;\n\n\t\tif (dlFileRanksElement != null) {\n\t\t\tdlFileRankElements = dlFileRanksElement.elements(\"file-rank\");\n\t\t}\n\n\t\tfor (Element fileRankElement : dlFileRankElements) {\n\t\t\tDLPortletDataHandlerImpl.importFileRank(context, fileRankElement);\n\t\t}\n\n\t\tElement igFoldersElement = rootElement.element(\"ig-folders\");\n\n\t\tList<Element> igFolderElements = Collections.EMPTY_LIST;\n\n\t\tif (igFoldersElement != null) {\n\t\t\tigFolderElements = igFoldersElement.elements(\"folder\");\n\t\t}\n\n\t\tfor (Element folderElement : igFolderElements) {\n\t\t\tIGPortletDataHandlerImpl.importFolder(context, folderElement);\n\t\t}\n\n\t\tElement igImagesElement = rootElement.element(\"ig-images\");\n\n\t\tList<Element> igImageElements = Collections.EMPTY_LIST;\n\n\t\tif (igImagesElement != null) {\n\t\t\tigImageElements = igImagesElement.elements(\"image\");\n\t\t}\n\n\t\tfor (Element imageElement : igImageElements) {\n\t\t\tIGPortletDataHandlerImpl.importImage(context, imageElement);\n\t\t}\n\n\t\tElement structureElement = rootElement.element(\"structure\");\n\n\t\tif (structureElement != null) {\n\t\t\tJournalPortletDataHandlerImpl.importStructure(\n\t\t\t\tcontext, structureElement);\n\t\t}\n\n\t\tElement templateElement = rootElement.element(\"template\");\n\n\t\tif (templateElement != null) {\n\t\t\tJournalPortletDataHandlerImpl.importTemplate(\n\t\t\t\tcontext, templateElement);\n\t\t}\n\n\t\tElement articleElement = rootElement.element(\"article\");\n\n\t\tif (articleElement != null) {\n\t\t\tJournalPortletDataHandlerImpl.importArticle(\n\t\t\t\tcontext, articleElement);\n\t\t}\n\n\t\tString articleId = preferences.getValue(\"article-id\", StringPool.BLANK);\n\n\t\tif (Validator.isNotNull(articleId)) {\n\t\t\tMap<String, String> articleIds =\n\t\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\t\tJournalArticle.class);\n\n\t\t\tarticleId = MapUtil.getString(articleIds, articleId, articleId);\n\n\t\t\tpreferences.setValue(\n\t\t\t\t\"group-id\", String.valueOf(context.getScopeGroupId()));\n\t\t\tpreferences.setValue(\"article-id\", articleId);\n\n\t\t\tLayout layout = LayoutLocalServiceUtil.getLayout(\n\t\t\t\tcontext.getPlid());\n\n\t\t\tJournalContentSearchLocalServiceUtil.updateContentSearch(\n\t\t\t\tcontext.getScopeGroupId(), layout.isPrivateLayout(),\n\t\t\t\tlayout.getLayoutId(), portletId, articleId, true);\n\t\t}\n\n\t\treturn preferences;\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String exportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences preferences)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tcontext.addPermissions(\n\t\t\t\t\"com.liferay.portlet.journal\", context.getScopeGroupId());\n\n\t\t\tString articleId = preferences.getValue(\"article-id\", null);\n\n\t\t\tif (articleId == null) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"No article id found in preferences of portlet \" +\n\t\t\t\t\t\t\tportletId);\n\t\t\t\t}\n\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tlong articleGroupId = GetterUtil.getLong(\n\t\t\t\tpreferences.getValue(\"group-id\", StringPool.BLANK));\n\n\t\t\tif (articleGroupId <= 0) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"No group id found in preferences of portlet \" +\n\t\t\t\t\t\t\tportletId);\n\t\t\t\t}\n\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tJournalArticle article = null;\n\n\t\t\ttry {\n\t\t\t\tarticle = JournalArticleLocalServiceUtil.getLatestArticle(\n\t\t\t\t\tarticleGroupId, articleId,\n\t\t\t\t\tWorkflowConstants.STATUS_APPROVED);\n\t\t\t}\n\t\t\tcatch (NoSuchArticleException nsae) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"No approved article found with group id \" +\n\t\t\t\t\t\t\tarticleGroupId + \" and article id \" + articleId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (article == null) {\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tDocument doc = SAXReaderUtil.createDocument();\n\n\t\t\tElement root = doc.addElement(\"journal-content-data\");\n\n\t\t\tElement dlFoldersEl = root.addElement(\"dl-folders\");\n\t\t\tElement dlFilesEl = root.addElement(\"dl-file-entries\");\n\t\t\tElement dlFileRanksEl = root.addElement(\"dl-file-ranks\");\n\t\t\tElement igFoldersEl = root.addElement(\"ig-folders\");\n\t\t\tElement igImagesEl = root.addElement(\"ig-images\");\n\n\t\t\tJournalPortletDataHandlerImpl.exportArticle(\n\t\t\t\tcontext, root, dlFoldersEl, dlFilesEl, dlFileRanksEl,\n\t\t\t\tigFoldersEl, igImagesEl, article);\n\n\t\t\tString structureId = article.getStructureId();\n\n\t\t\tif (Validator.isNotNull(structureId)) {\n\t\t\t\tJournalStructure structure = JournalStructureUtil.findByG_S(\n\t\t\t\t\tarticle.getGroupId(), structureId);\n\n\t\t\t\tJournalPortletDataHandlerImpl.exportStructure(\n\t\t\t\t\tcontext, root, structure);\n\t\t\t}\n\n\t\t\tString templateId = article.getTemplateId();\n\n\t\t\tif (Validator.isNotNull(templateId)) {\n\t\t\t\tJournalTemplate template = JournalTemplateUtil.findByG_T(\n\t\t\t\t\tarticle.getGroupId(), templateId);\n\n\t\t\t\tJournalPortletDataHandlerImpl.exportTemplate(\n\t\t\t\t\tcontext, root, dlFoldersEl, dlFilesEl, dlFileRanksEl,\n\t\t\t\t\tigFoldersEl, igImagesEl, template);\n\t\t\t}\n\n\t\t\treturn doc.formattedString();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":54078,"modified_method":"protected String doExportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences preferences)\n\t\tthrows Exception {\n\n\t\tcontext.addPermissions(\n\t\t\t\"com.liferay.portlet.journal\", context.getScopeGroupId());\n\n\t\tString articleId = preferences.getValue(\"article-id\", null);\n\n\t\tif (articleId == null) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"No article id found in preferences of portlet \" +\n\t\t\t\t\t\tportletId);\n\t\t\t}\n\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tlong articleGroupId = GetterUtil.getLong(\n\t\t\tpreferences.getValue(\"group-id\", StringPool.BLANK));\n\n\t\tif (articleGroupId <= 0) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"No group id found in preferences of portlet \" + portletId);\n\t\t\t}\n\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tJournalArticle article = null;\n\n\t\ttry {\n\t\t\tarticle = JournalArticleLocalServiceUtil.getLatestArticle(\n\t\t\t\tarticleGroupId, articleId, WorkflowConstants.STATUS_APPROVED);\n\t\t}\n\t\tcatch (NoSuchArticleException nsae) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"No approved article found with group id \" +\n\t\t\t\t\t\tarticleGroupId + \" and article id \" + articleId);\n\t\t\t}\n\t\t}\n\n\t\tif (article == null) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"journal-content-data\");\n\n\t\tElement dlFoldersElement = rootElement.addElement(\"dl-folders\");\n\t\tElement dlFilesElement = rootElement.addElement(\"dl-file-entries\");\n\t\tElement dlFileRanksElement = rootElement.addElement(\"dl-file-ranks\");\n\t\tElement igFoldersElement = rootElement.addElement(\"ig-folders\");\n\t\tElement igImagesElement = rootElement.addElement(\"ig-images\");\n\n\t\tJournalPortletDataHandlerImpl.exportArticle(\n\t\t\tcontext, rootElement, dlFoldersElement, dlFilesElement,\n\t\t\tdlFileRanksElement, igFoldersElement, igImagesElement, article);\n\n\t\tString structureId = article.getStructureId();\n\n\t\tif (Validator.isNotNull(structureId)) {\n\t\t\tJournalStructure structure = JournalStructureUtil.findByG_S(\n\t\t\t\tarticle.getGroupId(), structureId);\n\n\t\t\tJournalPortletDataHandlerImpl.exportStructure(\n\t\t\t\tcontext, rootElement, structure);\n\t\t}\n\n\t\tString templateId = article.getTemplateId();\n\n\t\tif (Validator.isNotNull(templateId)) {\n\t\t\tJournalTemplate template = JournalTemplateUtil.findByG_T(\n\t\t\t\tarticle.getGroupId(), templateId);\n\n\t\t\tJournalPortletDataHandlerImpl.exportTemplate(\n\t\t\t\tcontext, rootElement, dlFoldersElement, dlFilesElement,\n\t\t\t\tdlFileRanksElement, igFoldersElement, igImagesElement,\n\t\t\t\ttemplate);\n\t\t}\n\n\t\treturn document.formattedString();\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void exportTemplate(\n\t\t\tPortletDataContext context, Element templatesEl,\n\t\t\tElement dlFoldersEl, Element dlFileEntriesEl, Element dlFileRanks,\n\t\t\tElement igFoldersEl, Element igImagesEl, JournalTemplate template)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!context.isWithinDateRange(template.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getTemplatePath(context, template);\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clone this template to make sure changes to its content are never\n\t\t// persisted\n\n\t\ttemplate = (JournalTemplate)template.clone();\n\n\t\tElement templateEl = templatesEl.addElement(\"template\");\n\n\t\ttemplateEl.addAttribute(\"path\", path);\n\n\t\tif (template.isSmallImage()) {\n\t\t\tString smallImagePath = getTemplateSmallImagePath(\n\t\t\t\tcontext, template);\n\n\t\t\ttemplateEl.addAttribute(\"small-image-path\", smallImagePath);\n\n\t\t\tImage smallImage = ImageUtil.fetchByPrimaryKey(\n\t\t\t\ttemplate.getSmallImageId());\n\n\t\t\ttemplate.setSmallImageType(smallImage.getType());\n\n\t\t\tcontext.addZipEntry(smallImagePath, smallImage.getTextObj());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"embedded-assets\")) {\n\t\t\tString content = template.getXsl();\n\n\t\t\tcontent = exportDLFileEntries(\n\t\t\t\tcontext, dlFoldersEl, dlFileEntriesEl, dlFileRanks, templateEl,\n\t\t\t\tcontent);\n\t\t\tcontent = exportIGImages(\n\t\t\t\tcontext, igFoldersEl, igImagesEl, templateEl, content);\n\t\t\tcontent = exportLayoutFriendlyURLs(context, content);\n\n\t\t\tcontent = StringUtil.replace(\n\t\t\t\tcontent, StringPool.AMPERSAND_ENCODED, StringPool.AMPERSAND);\n\n\t\t\ttemplate.setXsl(content);\n\t\t}\n\n\t\ttemplate.setUserUuid(template.getUserUuid());\n\n\t\tcontext.addPermissions(JournalTemplate.class, template.getId());\n\n\t\tcontext.addZipEntry(path, template);\n\t}","id":54079,"modified_method":"protected static void exportTemplate(\n\t\t\tPortletDataContext context, Element templatesElement,\n\t\t\tElement dlFoldersElement, Element dlFileEntriesElement,\n\t\t\tElement dlFileRanksElement, Element igFoldersElement,\n\t\t\tElement igImagesElement, JournalTemplate template)\n\t\tthrows Exception {\n\n\t\tif (!context.isWithinDateRange(template.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getTemplatePath(context, template);\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clone this template to make sure changes to its content are never\n\t\t// persisted\n\n\t\ttemplate = (JournalTemplate)template.clone();\n\n\t\tElement templateElement = templatesElement.addElement(\"template\");\n\n\t\ttemplateElement.addAttribute(\"path\", path);\n\n\t\tif (template.isSmallImage()) {\n\t\t\tString smallImagePath = getTemplateSmallImagePath(\n\t\t\t\tcontext, template);\n\n\t\t\ttemplateElement.addAttribute(\"small-image-path\", smallImagePath);\n\n\t\t\tImage smallImage = ImageUtil.fetchByPrimaryKey(\n\t\t\t\ttemplate.getSmallImageId());\n\n\t\t\ttemplate.setSmallImageType(smallImage.getType());\n\n\t\t\tcontext.addZipEntry(smallImagePath, smallImage.getTextObj());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"embedded-assets\")) {\n\t\t\tString content = template.getXsl();\n\n\t\t\tcontent = exportDLFileEntries(\n\t\t\t\tcontext, dlFoldersElement, dlFileEntriesElement,\n\t\t\t\tdlFileRanksElement, templateElement, content);\n\t\t\tcontent = exportIGImages(\n\t\t\t\tcontext, igFoldersElement, igImagesElement, templateElement,\n\t\t\t\tcontent);\n\t\t\tcontent = exportLayoutFriendlyURLs(context, content);\n\n\t\t\tcontent = StringUtil.replace(\n\t\t\t\tcontent, StringPool.AMPERSAND_ENCODED, StringPool.AMPERSAND);\n\n\t\t\ttemplate.setXsl(content);\n\t\t}\n\n\t\ttemplate.setUserUuid(template.getUserUuid());\n\n\t\tcontext.addPermissions(JournalTemplate.class, template.getId());\n\n\t\tcontext.addZipEntry(path, template);\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void importArticle(\n\t\t\tPortletDataContext context, Element articleEl)\n\t\tthrows Exception {\n\n\t\tString path = articleEl.attributeValue(\"path\");\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJournalArticle article = (JournalArticle)context.getZipEntryAsObject(\n\t\t\tpath);\n\n\t\tlong userId = context.getUserId(article.getUserUuid());\n\n\t\tUser user = UserLocalServiceUtil.getUser(userId);\n\n\t\tlong groupId = context.getScopeGroupId();\n\n\t\tString articleId = article.getArticleId();\n\t\tboolean autoArticleId = false;\n\n\t\tif ((Validator.isNumber(articleId)) ||\n\t\t\t(JournalArticleUtil.fetchByG_A_V(\n\t\t\t\tgroupId, articleId,\n\t\t\t\t\tJournalArticleConstants.DEFAULT_VERSION) != null)) {\n\n\t\t\tautoArticleId = true;\n\t\t}\n\n\t\tMap<String, String> articleIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalArticle.class);\n\n\t\tString newArticleId = articleIds.get(articleId);\n\n\t\tif (Validator.isNotNull(newArticleId)) {\n\n\t\t\t// A sibling of a different version was already assigned a new\n\t\t\t// article id\n\n\t\t\tarticleId = newArticleId;\n\t\t\tautoArticleId = false;\n\t\t}\n\n\t\tString content = article.getContent();\n\n\t\tcontent = importDLFileEntries(context, articleEl, content);\n\t\tcontent = importIGImages(context, articleEl, content);\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\tcontent = StringUtil.replace(\n\t\t\tcontent, \"@data_handler_group_friendly_url@\",\n\t\t\tgroup.getFriendlyURL());\n\n\t\tarticle.setContent(content);\n\n\t\tMap<String, String> structureIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalStructure.class);\n\n\t\tString parentStructureId = MapUtil.getString(\n\t\t\tstructureIds, article.getStructureId(), article.getStructureId());\n\n\t\tMap<String, String> templateIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalTemplate.class);\n\n\t\tString parentTemplateId = MapUtil.getString(\n\t\t\ttemplateIds, article.getTemplateId(), article.getTemplateId());\n\n\t\tDate displayDate = article.getDisplayDate();\n\n\t\tint displayDateMonth = 0;\n\t\tint displayDateDay = 0;\n\t\tint displayDateYear = 0;\n\t\tint displayDateHour = 0;\n\t\tint displayDateMinute = 0;\n\n\t\tif (displayDate != null) {\n\t\t\tCalendar displayCal = CalendarFactoryUtil.getCalendar(\n\t\t\t\tuser.getTimeZone());\n\n\t\t\tdisplayCal.setTime(displayDate);\n\n\t\t\tdisplayDateMonth = displayCal.get(Calendar.MONTH);\n\t\t\tdisplayDateDay = displayCal.get(Calendar.DATE);\n\t\t\tdisplayDateYear = displayCal.get(Calendar.YEAR);\n\t\t\tdisplayDateHour = displayCal.get(Calendar.HOUR);\n\t\t\tdisplayDateMinute = displayCal.get(Calendar.MINUTE);\n\n\t\t\tif (displayCal.get(Calendar.AM_PM) == Calendar.PM) {\n\t\t\t\tdisplayDateHour += 12;\n\t\t\t}\n\t\t}\n\n\t\tDate expirationDate = article.getExpirationDate();\n\n\t\tint expirationDateMonth = 0;\n\t\tint expirationDateDay = 0;\n\t\tint expirationDateYear = 0;\n\t\tint expirationDateHour = 0;\n\t\tint expirationDateMinute = 0;\n\t\tboolean neverExpire = true;\n\n\t\tif (expirationDate != null) {\n\t\t\tCalendar expirationCal = CalendarFactoryUtil.getCalendar(\n\t\t\t\tuser.getTimeZone());\n\n\t\t\texpirationCal.setTime(expirationDate);\n\n\t\t\texpirationDateMonth = expirationCal.get(Calendar.MONTH);\n\t\t\texpirationDateDay = expirationCal.get(Calendar.DATE);\n\t\t\texpirationDateYear = expirationCal.get(Calendar.YEAR);\n\t\t\texpirationDateHour = expirationCal.get(Calendar.HOUR);\n\t\t\texpirationDateMinute = expirationCal.get(Calendar.MINUTE);\n\t\t\tneverExpire = false;\n\n\t\t\tif (expirationCal.get(Calendar.AM_PM) == Calendar.PM) {\n\t\t\t\texpirationDateHour += 12;\n\t\t\t}\n\t\t}\n\n\t\tDate reviewDate = article.getReviewDate();\n\n\t\tint reviewDateMonth = 0;\n\t\tint reviewDateDay = 0;\n\t\tint reviewDateYear = 0;\n\t\tint reviewDateHour = 0;\n\t\tint reviewDateMinute = 0;\n\t\tboolean neverReview = true;\n\n\t\tif (reviewDate != null) {\n\t\t\tCalendar reviewCal = CalendarFactoryUtil.getCalendar(\n\t\t\t\tuser.getTimeZone());\n\n\t\t\treviewCal.setTime(reviewDate);\n\n\t\t\treviewDateMonth = reviewCal.get(Calendar.MONTH);\n\t\t\treviewDateDay = reviewCal.get(Calendar.DATE);\n\t\t\treviewDateYear = reviewCal.get(Calendar.YEAR);\n\t\t\treviewDateHour = reviewCal.get(Calendar.HOUR);\n\t\t\treviewDateMinute = reviewCal.get(Calendar.MINUTE);\n\t\t\tneverReview = false;\n\n\t\t\tif (reviewCal.get(Calendar.AM_PM) == Calendar.PM) {\n\t\t\t\treviewDateHour += 12;\n\t\t\t}\n\t\t}\n\n\t\tif (Validator.isNotNull(article.getStructureId())) {\n\t\t\tJournalStructure structure = JournalStructureUtil.fetchByG_S(\n\t\t\t\tcontext.getScopeGroupId(), article.getStructureId());\n\n\t\t\tif (structure == null) {\n\t\t\t\tString newStructureId = structureIds.get(\n\t\t\t\t\tarticle.getStructureId());\n\n\t\t\t\tif (Validator.isNotNull(newStructureId)) {\n\t\t\t\t\tstructure = JournalStructureUtil.fetchByG_S(\n\t\t\t\t\t\tcontext.getScopeGroupId(),\n\t\t\t\t\t\tString.valueOf(newStructureId));\n\t\t\t\t}\n\n\t\t\t\tif (structure == null) {\n\t\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t\tStringBundler sb = new StringBundler();\n\n\t\t\t\t\t\tsb.append(\"Structure \");\n\t\t\t\t\t\tsb.append(article.getStructureId());\n\t\t\t\t\t\tsb.append(\" is missing for article \");\n\t\t\t\t\t\tsb.append(article.getArticleId());\n\t\t\t\t\t\tsb.append(\", skipping this article.\");\n\n\t\t\t\t\t\t_log.warn(sb.toString());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Validator.isNotNull(article.getTemplateId())) {\n\t\t\tJournalTemplate template = JournalTemplateUtil.fetchByG_T(\n\t\t\t\tcontext.getScopeGroupId(), article.getTemplateId());\n\n\t\t\tif (template == null) {\n\t\t\t\tString newTemplateId = templateIds.get(article.getTemplateId());\n\n\t\t\t\tif (Validator.isNotNull(newTemplateId)) {\n\t\t\t\t\ttemplate = JournalTemplateUtil.fetchByG_T(\n\t\t\t\t\t\tcontext.getScopeGroupId(), newTemplateId);\n\t\t\t\t}\n\n\t\t\t\tif (template == null) {\n\t\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t\tStringBundler sb = new StringBundler();\n\n\t\t\t\t\t\tsb.append(\"Template \");\n\t\t\t\t\t\tsb.append(article.getTemplateId());\n\t\t\t\t\t\tsb.append(\" is missing for article \");\n\t\t\t\t\t\tsb.append(article.getArticleId());\n\t\t\t\t\t\tsb.append(\", skipping this article.\");\n\n\t\t\t\t\t\t_log.warn(sb.toString());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tFile smallFile = null;\n\n\t\tString smallImagePath = articleEl.attributeValue(\"small-image-path\");\n\n\t\tif (article.isSmallImage() && Validator.isNotNull(smallImagePath)) {\n\t\t\tbyte[] bytes = context.getZipEntryAsByteArray(smallImagePath);\n\n\t\t\tsmallFile = File.createTempFile(\n\t\t\t\tString.valueOf(article.getSmallImageId()),\n\t\t\t\tStringPool.PERIOD + article.getSmallImageType());\n\n\t\t\tFileUtil.write(smallFile, bytes);\n\t\t}\n\n\t\tMap<String, byte[]> images = new HashMap<String, byte[]>();\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"images\")) {\n\t\t\tString imagePath = articleEl.attributeValue(\"image-path\");\n\n\t\t\tList<String> imageFiles = context.getZipFolderEntries(imagePath);\n\n\t\t\tfor (String imageFile : imageFiles) {\n\t\t\t\tString fileName = imageFile;\n\n\t\t\t\tif (fileName.contains(StringPool.SLASH)) {\n\t\t\t\t\tfileName = fileName.substring(\n\t\t\t\t\t\tfileName.lastIndexOf(StringPool.SLASH) + 1);\n\t\t\t\t}\n\n\t\t\t\tif (fileName.endsWith(\".xml\")) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tint pos = fileName.lastIndexOf(StringPool.PERIOD);\n\n\t\t\t\tif (pos != -1) {\n\t\t\t\t\tfileName = fileName.substring(0, pos);\n\t\t\t\t}\n\n\t\t\t\timages.put(fileName, context.getZipEntryAsByteArray(imageFile));\n\t\t\t}\n\t\t}\n\n\t\tString articleURL = null;\n\n\t\tlong[] assetCategoryIds = null;\n\t\tString[] assetTagNames = null;\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"categories\")) {\n\t\t\tassetCategoryIds = context.getAssetCategoryIds(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\tassetTagNames = context.getAssetTagNames(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tJournalCreationStrategy creationStrategy =\n\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\tlong authorId = creationStrategy.getAuthorUserId(context, article);\n\n\t\tif (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\tuserId = authorId;\n\t\t}\n\n\t\tString newContent = creationStrategy.getTransformedContent(\n\t\t\tcontext, article);\n\n\t\tif (newContent != JournalCreationStrategy.ARTICLE_CONTENT_UNCHANGED) {\n\t\t\tarticle.setContent(newContent);\n\t\t}\n\n\t\tboolean addCommunityPermissions =\n\t\t\tcreationStrategy.addCommunityPermissions(context, article);\n\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\tcontext, article);\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddCommunityPermissions(addCommunityPermissions);\n\t\tserviceContext.setAddGuestPermissions(addGuestPermissions);\n\t\tserviceContext.setAssetCategoryIds(assetCategoryIds);\n\t\tserviceContext.setAssetTagNames(assetTagNames);\n\t\tserviceContext.setCreateDate(article.getCreateDate());\n\t\tserviceContext.setModifiedDate(article.getModifiedDate());\n\t\tserviceContext.setScopeGroupId(groupId);\n\n\t\tif (article.getStatus() != WorkflowConstants.STATUS_APPROVED) {\n\t\t\tserviceContext.setWorkflowAction(\n\t\t\t\tWorkflowConstants.ACTION_SAVE_DRAFT);\n\t\t}\n\n\t\tJournalArticle importedArticle = null;\n\n\t\tif (context.isDataStrategyMirror()) {\n\t\t\tJournalArticle existingArticle = JournalArticleUtil.fetchByUUID_G(\n\t\t\t\tarticle.getUuid(), groupId);\n\n\t\t\tif (existingArticle == null) {\n\t\t\t\tserviceContext.setUuid(article.getUuid());\n\n\t\t\t\timportedArticle = JournalArticleLocalServiceUtil.addArticle(\n\t\t\t\t\tuserId, groupId, articleId, autoArticleId,\n\t\t\t\t\tarticle.getVersion(), article.getTitle(),\n\t\t\t\t\tarticle.getDescription(), article.getContent(),\n\t\t\t\t\tarticle.getType(), parentStructureId, parentTemplateId,\n\t\t\t\t\tdisplayDateMonth, displayDateDay, displayDateYear,\n\t\t\t\t\tdisplayDateHour, displayDateMinute, expirationDateMonth,\n\t\t\t\t\texpirationDateDay, expirationDateYear, expirationDateHour,\n\t\t\t\t\texpirationDateMinute, neverExpire, reviewDateMonth,\n\t\t\t\t\treviewDateDay, reviewDateYear, reviewDateHour,\n\t\t\t\t\treviewDateMinute, neverReview, article.isIndexable(),\n\t\t\t\t\tarticle.isSmallImage(), article.getSmallImageURL(),\n\t\t\t\t\tsmallFile, images, articleURL, serviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\timportedArticle = JournalArticleLocalServiceUtil.updateArticle(\n\t\t\t\t\tuserId, existingArticle.getGroupId(),\n\t\t\t\t\texistingArticle.getArticleId(), 0.0, article.getTitle(),\n\t\t\t\t\tarticle.getDescription(), article.getContent(),\n\t\t\t\t\tarticle.getType(), parentStructureId, parentTemplateId,\n\t\t\t\t\tdisplayDateMonth, displayDateDay, displayDateYear,\n\t\t\t\t\tdisplayDateHour, displayDateMinute, expirationDateMonth,\n\t\t\t\t\texpirationDateDay, expirationDateYear, expirationDateHour,\n\t\t\t\t\texpirationDateMinute, neverExpire, reviewDateMonth,\n\t\t\t\t\treviewDateDay, reviewDateYear, reviewDateHour,\n\t\t\t\t\treviewDateMinute, neverReview, article.isIndexable(),\n\t\t\t\t\tarticle.isSmallImage(), article.getSmallImageURL(),\n\t\t\t\t\tsmallFile, images, articleURL, serviceContext);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\timportedArticle = JournalArticleLocalServiceUtil.addArticle(\n\t\t\t\tuserId, groupId, articleId, autoArticleId, article.getVersion(),\n\t\t\t\tarticle.getTitle(), article.getDescription(),\n\t\t\t\tarticle.getContent(), article.getType(), parentStructureId,\n\t\t\t\tparentTemplateId, displayDateMonth, displayDateDay,\n\t\t\t\tdisplayDateYear, displayDateHour, displayDateMinute,\n\t\t\t\texpirationDateMonth, expirationDateDay, expirationDateYear,\n\t\t\t\texpirationDateHour, expirationDateMinute, neverExpire,\n\t\t\t\treviewDateMonth, reviewDateDay, reviewDateYear, reviewDateHour,\n\t\t\t\treviewDateMinute, neverReview, article.isIndexable(),\n\t\t\t\tarticle.isSmallImage(), article.getSmallImageURL(), smallFile,\n\t\t\t\timages, articleURL, serviceContext);\n\t\t}\n\n\t\tcontext.importPermissions(\n\t\t\tJournalArticle.class, article.getResourcePrimKey(),\n\t\t\timportedArticle.getResourcePrimKey());\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"comments\")) {\n\t\t\tcontext.importComments(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey(),\n\t\t\t\timportedArticle.getResourcePrimKey(), groupId);\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\tcontext.importRatingsEntries(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey(),\n\t\t\t\timportedArticle.getResourcePrimKey());\n\t\t}\n\n\t\tarticleIds.put(articleId, importedArticle.getArticleId());\n\n\t\tif (!articleId.equals(importedArticle.getArticleId())) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"An article with the ID \" + articleId + \" already \" +\n\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\timportedArticle.getArticleId());\n\t\t\t}\n\t\t}\n\t}","id":54080,"modified_method":"protected static void importArticle(\n\t\t\tPortletDataContext context, Element articleElement)\n\t\tthrows Exception {\n\n\t\tString path = articleElement.attributeValue(\"path\");\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJournalArticle article = (JournalArticle)context.getZipEntryAsObject(\n\t\t\tpath);\n\n\t\tlong userId = context.getUserId(article.getUserUuid());\n\n\t\tUser user = UserLocalServiceUtil.getUser(userId);\n\n\t\tString articleId = article.getArticleId();\n\t\tboolean autoArticleId = false;\n\n\t\tif ((Validator.isNumber(articleId)) ||\n\t\t\t(JournalArticleUtil.fetchByG_A_V(\n\t\t\t\tcontext.getScopeGroupId(), articleId,\n\t\t\t\t\tJournalArticleConstants.DEFAULT_VERSION) != null)) {\n\n\t\t\tautoArticleId = true;\n\t\t}\n\n\t\tMap<String, String> articleIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalArticle.class);\n\n\t\tString newArticleId = articleIds.get(articleId);\n\n\t\tif (Validator.isNotNull(newArticleId)) {\n\n\t\t\t// A sibling of a different version was already assigned a new\n\t\t\t// article id\n\n\t\t\tarticleId = newArticleId;\n\t\t\tautoArticleId = false;\n\t\t}\n\n\t\tString content = article.getContent();\n\n\t\tcontent = importDLFileEntries(context, articleElement, content);\n\t\tcontent = importIGImages(context, articleElement, content);\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(context.getScopeGroupId());\n\n\t\tcontent = StringUtil.replace(\n\t\t\tcontent, \"@data_handler_group_friendly_url@\",\n\t\t\tgroup.getFriendlyURL());\n\n\t\tarticle.setContent(content);\n\n\t\tMap<String, String> structureIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalStructure.class);\n\n\t\tString parentStructureId = MapUtil.getString(\n\t\t\tstructureIds, article.getStructureId(), article.getStructureId());\n\n\t\tMap<String, String> templateIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalTemplate.class);\n\n\t\tString parentTemplateId = MapUtil.getString(\n\t\t\ttemplateIds, article.getTemplateId(), article.getTemplateId());\n\n\t\tDate displayDate = article.getDisplayDate();\n\n\t\tint displayDateMonth = 0;\n\t\tint displayDateDay = 0;\n\t\tint displayDateYear = 0;\n\t\tint displayDateHour = 0;\n\t\tint displayDateMinute = 0;\n\n\t\tif (displayDate != null) {\n\t\t\tCalendar displayCal = CalendarFactoryUtil.getCalendar(\n\t\t\t\tuser.getTimeZone());\n\n\t\t\tdisplayCal.setTime(displayDate);\n\n\t\t\tdisplayDateMonth = displayCal.get(Calendar.MONTH);\n\t\t\tdisplayDateDay = displayCal.get(Calendar.DATE);\n\t\t\tdisplayDateYear = displayCal.get(Calendar.YEAR);\n\t\t\tdisplayDateHour = displayCal.get(Calendar.HOUR);\n\t\t\tdisplayDateMinute = displayCal.get(Calendar.MINUTE);\n\n\t\t\tif (displayCal.get(Calendar.AM_PM) == Calendar.PM) {\n\t\t\t\tdisplayDateHour += 12;\n\t\t\t}\n\t\t}\n\n\t\tDate expirationDate = article.getExpirationDate();\n\n\t\tint expirationDateMonth = 0;\n\t\tint expirationDateDay = 0;\n\t\tint expirationDateYear = 0;\n\t\tint expirationDateHour = 0;\n\t\tint expirationDateMinute = 0;\n\t\tboolean neverExpire = true;\n\n\t\tif (expirationDate != null) {\n\t\t\tCalendar expirationCal = CalendarFactoryUtil.getCalendar(\n\t\t\t\tuser.getTimeZone());\n\n\t\t\texpirationCal.setTime(expirationDate);\n\n\t\t\texpirationDateMonth = expirationCal.get(Calendar.MONTH);\n\t\t\texpirationDateDay = expirationCal.get(Calendar.DATE);\n\t\t\texpirationDateYear = expirationCal.get(Calendar.YEAR);\n\t\t\texpirationDateHour = expirationCal.get(Calendar.HOUR);\n\t\t\texpirationDateMinute = expirationCal.get(Calendar.MINUTE);\n\t\t\tneverExpire = false;\n\n\t\t\tif (expirationCal.get(Calendar.AM_PM) == Calendar.PM) {\n\t\t\t\texpirationDateHour += 12;\n\t\t\t}\n\t\t}\n\n\t\tDate reviewDate = article.getReviewDate();\n\n\t\tint reviewDateMonth = 0;\n\t\tint reviewDateDay = 0;\n\t\tint reviewDateYear = 0;\n\t\tint reviewDateHour = 0;\n\t\tint reviewDateMinute = 0;\n\t\tboolean neverReview = true;\n\n\t\tif (reviewDate != null) {\n\t\t\tCalendar reviewCal = CalendarFactoryUtil.getCalendar(\n\t\t\t\tuser.getTimeZone());\n\n\t\t\treviewCal.setTime(reviewDate);\n\n\t\t\treviewDateMonth = reviewCal.get(Calendar.MONTH);\n\t\t\treviewDateDay = reviewCal.get(Calendar.DATE);\n\t\t\treviewDateYear = reviewCal.get(Calendar.YEAR);\n\t\t\treviewDateHour = reviewCal.get(Calendar.HOUR);\n\t\t\treviewDateMinute = reviewCal.get(Calendar.MINUTE);\n\t\t\tneverReview = false;\n\n\t\t\tif (reviewCal.get(Calendar.AM_PM) == Calendar.PM) {\n\t\t\t\treviewDateHour += 12;\n\t\t\t}\n\t\t}\n\n\t\tif (Validator.isNotNull(article.getStructureId())) {\n\t\t\tJournalStructure structure = JournalStructureUtil.fetchByG_S(\n\t\t\t\tcontext.getScopeGroupId(), article.getStructureId());\n\n\t\t\tif (structure == null) {\n\t\t\t\tString newStructureId = structureIds.get(\n\t\t\t\t\tarticle.getStructureId());\n\n\t\t\t\tif (Validator.isNotNull(newStructureId)) {\n\t\t\t\t\tstructure = JournalStructureUtil.fetchByG_S(\n\t\t\t\t\t\tcontext.getScopeGroupId(),\n\t\t\t\t\t\tString.valueOf(newStructureId));\n\t\t\t\t}\n\n\t\t\t\tif (structure == null) {\n\t\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t\tStringBundler sb = new StringBundler();\n\n\t\t\t\t\t\tsb.append(\"Structure \");\n\t\t\t\t\t\tsb.append(article.getStructureId());\n\t\t\t\t\t\tsb.append(\" is missing for article \");\n\t\t\t\t\t\tsb.append(article.getArticleId());\n\t\t\t\t\t\tsb.append(\", skipping this article.\");\n\n\t\t\t\t\t\t_log.warn(sb.toString());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Validator.isNotNull(article.getTemplateId())) {\n\t\t\tJournalTemplate template = JournalTemplateUtil.fetchByG_T(\n\t\t\t\tcontext.getScopeGroupId(), article.getTemplateId());\n\n\t\t\tif (template == null) {\n\t\t\t\tString newTemplateId = templateIds.get(article.getTemplateId());\n\n\t\t\t\tif (Validator.isNotNull(newTemplateId)) {\n\t\t\t\t\ttemplate = JournalTemplateUtil.fetchByG_T(\n\t\t\t\t\t\tcontext.getScopeGroupId(), newTemplateId);\n\t\t\t\t}\n\n\t\t\t\tif (template == null) {\n\t\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t\tStringBundler sb = new StringBundler();\n\n\t\t\t\t\t\tsb.append(\"Template \");\n\t\t\t\t\t\tsb.append(article.getTemplateId());\n\t\t\t\t\t\tsb.append(\" is missing for article \");\n\t\t\t\t\t\tsb.append(article.getArticleId());\n\t\t\t\t\t\tsb.append(\", skipping this article.\");\n\n\t\t\t\t\t\t_log.warn(sb.toString());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tFile smallFile = null;\n\n\t\tString smallImagePath = articleElement.attributeValue(\n\t\t\t\"small-image-path\");\n\n\t\tif (article.isSmallImage() && Validator.isNotNull(smallImagePath)) {\n\t\t\tbyte[] bytes = context.getZipEntryAsByteArray(smallImagePath);\n\n\t\t\tsmallFile = File.createTempFile(\n\t\t\t\tString.valueOf(article.getSmallImageId()),\n\t\t\t\tStringPool.PERIOD + article.getSmallImageType());\n\n\t\t\tFileUtil.write(smallFile, bytes);\n\t\t}\n\n\t\tMap<String, byte[]> images = new HashMap<String, byte[]>();\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"images\")) {\n\t\t\tString imagePath = articleElement.attributeValue(\"image-path\");\n\n\t\t\tList<String> imageFiles = context.getZipFolderEntries(imagePath);\n\n\t\t\tfor (String imageFile : imageFiles) {\n\t\t\t\tString fileName = imageFile;\n\n\t\t\t\tif (fileName.contains(StringPool.SLASH)) {\n\t\t\t\t\tfileName = fileName.substring(\n\t\t\t\t\t\tfileName.lastIndexOf(StringPool.SLASH) + 1);\n\t\t\t\t}\n\n\t\t\t\tif (fileName.endsWith(\".xml\")) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tint pos = fileName.lastIndexOf(StringPool.PERIOD);\n\n\t\t\t\tif (pos != -1) {\n\t\t\t\t\tfileName = fileName.substring(0, pos);\n\t\t\t\t}\n\n\t\t\t\timages.put(fileName, context.getZipEntryAsByteArray(imageFile));\n\t\t\t}\n\t\t}\n\n\t\tString articleURL = null;\n\n\t\tlong[] assetCategoryIds = null;\n\t\tString[] assetTagNames = null;\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"categories\")) {\n\t\t\tassetCategoryIds = context.getAssetCategoryIds(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\tassetTagNames = context.getAssetTagNames(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tJournalCreationStrategy creationStrategy =\n\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\tlong authorId = creationStrategy.getAuthorUserId(context, article);\n\n\t\tif (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\tuserId = authorId;\n\t\t}\n\n\t\tString newContent = creationStrategy.getTransformedContent(\n\t\t\tcontext, article);\n\n\t\tif (newContent != JournalCreationStrategy.ARTICLE_CONTENT_UNCHANGED) {\n\t\t\tarticle.setContent(newContent);\n\t\t}\n\n\t\tboolean addCommunityPermissions =\n\t\t\tcreationStrategy.addCommunityPermissions(context, article);\n\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\tcontext, article);\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddCommunityPermissions(addCommunityPermissions);\n\t\tserviceContext.setAddGuestPermissions(addGuestPermissions);\n\t\tserviceContext.setAssetCategoryIds(assetCategoryIds);\n\t\tserviceContext.setAssetTagNames(assetTagNames);\n\t\tserviceContext.setCreateDate(article.getCreateDate());\n\t\tserviceContext.setModifiedDate(article.getModifiedDate());\n\t\tserviceContext.setScopeGroupId(context.getScopeGroupId());\n\n\t\tif (article.getStatus() != WorkflowConstants.STATUS_APPROVED) {\n\t\t\tserviceContext.setWorkflowAction(\n\t\t\t\tWorkflowConstants.ACTION_SAVE_DRAFT);\n\t\t}\n\n\t\tJournalArticle importedArticle = null;\n\n\t\tif (context.isDataStrategyMirror()) {\n\t\t\tJournalArticle existingArticle = JournalArticleUtil.fetchByUUID_G(\n\t\t\t\tarticle.getUuid(), context.getScopeGroupId());\n\n\t\t\tif (existingArticle == null) {\n\t\t\t\tserviceContext.setUuid(article.getUuid());\n\n\t\t\t\timportedArticle = JournalArticleLocalServiceUtil.addArticle(\n\t\t\t\t\tuserId, context.getScopeGroupId(), articleId, autoArticleId,\n\t\t\t\t\tarticle.getVersion(), article.getTitle(),\n\t\t\t\t\tarticle.getDescription(), article.getContent(),\n\t\t\t\t\tarticle.getType(), parentStructureId, parentTemplateId,\n\t\t\t\t\tdisplayDateMonth, displayDateDay, displayDateYear,\n\t\t\t\t\tdisplayDateHour, displayDateMinute, expirationDateMonth,\n\t\t\t\t\texpirationDateDay, expirationDateYear, expirationDateHour,\n\t\t\t\t\texpirationDateMinute, neverExpire, reviewDateMonth,\n\t\t\t\t\treviewDateDay, reviewDateYear, reviewDateHour,\n\t\t\t\t\treviewDateMinute, neverReview, article.isIndexable(),\n\t\t\t\t\tarticle.isSmallImage(), article.getSmallImageURL(),\n\t\t\t\t\tsmallFile, images, articleURL, serviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\timportedArticle = JournalArticleLocalServiceUtil.updateArticle(\n\t\t\t\t\tuserId, existingArticle.getGroupId(),\n\t\t\t\t\texistingArticle.getArticleId(), 0.0, article.getTitle(),\n\t\t\t\t\tarticle.getDescription(), article.getContent(),\n\t\t\t\t\tarticle.getType(), parentStructureId, parentTemplateId,\n\t\t\t\t\tdisplayDateMonth, displayDateDay, displayDateYear,\n\t\t\t\t\tdisplayDateHour, displayDateMinute, expirationDateMonth,\n\t\t\t\t\texpirationDateDay, expirationDateYear, expirationDateHour,\n\t\t\t\t\texpirationDateMinute, neverExpire, reviewDateMonth,\n\t\t\t\t\treviewDateDay, reviewDateYear, reviewDateHour,\n\t\t\t\t\treviewDateMinute, neverReview, article.isIndexable(),\n\t\t\t\t\tarticle.isSmallImage(), article.getSmallImageURL(),\n\t\t\t\t\tsmallFile, images, articleURL, serviceContext);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\timportedArticle = JournalArticleLocalServiceUtil.addArticle(\n\t\t\t\tuserId, context.getScopeGroupId(), articleId, autoArticleId,\n\t\t\t\tarticle.getVersion(), article.getTitle(),\n\t\t\t\tarticle.getDescription(), article.getContent(),\n\t\t\t\tarticle.getType(), parentStructureId, parentTemplateId,\n\t\t\t\tdisplayDateMonth, displayDateDay, displayDateYear,\n\t\t\t\tdisplayDateHour, displayDateMinute, expirationDateMonth,\n\t\t\t\texpirationDateDay, expirationDateYear, expirationDateHour,\n\t\t\t\texpirationDateMinute, neverExpire, reviewDateMonth,\n\t\t\t\treviewDateDay, reviewDateYear, reviewDateHour, reviewDateMinute,\n\t\t\t\tneverReview, article.isIndexable(), article.isSmallImage(),\n\t\t\t\tarticle.getSmallImageURL(), smallFile, images, articleURL,\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\tcontext.importPermissions(\n\t\t\tJournalArticle.class, article.getResourcePrimKey(),\n\t\t\timportedArticle.getResourcePrimKey());\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"comments\")) {\n\t\t\tcontext.importComments(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey(),\n\t\t\t\timportedArticle.getResourcePrimKey(),\n\t\t\t\tcontext.getScopeGroupId());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\tcontext.importRatingsEntries(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey(),\n\t\t\t\timportedArticle.getResourcePrimKey());\n\t\t}\n\n\t\tarticleIds.put(articleId, importedArticle.getArticleId());\n\n\t\tif (!articleId.equals(importedArticle.getArticleId())) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"An article with the ID \" + articleId + \" already \" +\n\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\timportedArticle.getArticleId());\n\t\t\t}\n\t\t}\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PortletPreferences deleteData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences preferences)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tif (!context.addPrimaryKey(\n\t\t\t\t\tJournalPortletDataHandlerImpl.class, \"deleteData\")) {\n\n\t\t\t\tJournalArticleLocalServiceUtil.deleteArticles(\n\t\t\t\t\tcontext.getScopeGroupId());\n\n\t\t\t\tJournalTemplateLocalServiceUtil.deleteTemplates(\n\t\t\t\t\tcontext.getScopeGroupId());\n\n\t\t\t\tJournalStructureLocalServiceUtil.deleteStructures(\n\t\t\t\t\tcontext.getScopeGroupId());\n\t\t\t}\n\n\t\t\treturn preferences;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":54081,"modified_method":"protected PortletPreferences doDeleteData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences preferences)\n\t\tthrows Exception {\n\n\t\tif (!context.addPrimaryKey(\n\t\t\t\tJournalPortletDataHandlerImpl.class, \"deleteData\")) {\n\n\t\t\tJournalArticleLocalServiceUtil.deleteArticles(\n\t\t\t\tcontext.getScopeGroupId());\n\n\t\t\tJournalTemplateLocalServiceUtil.deleteTemplates(\n\t\t\t\tcontext.getScopeGroupId());\n\n\t\t\tJournalStructureLocalServiceUtil.deleteStructures(\n\t\t\t\tcontext.getScopeGroupId());\n\t\t}\n\n\t\treturn preferences;\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void exportStructure(\n\t\t\tPortletDataContext context, Element structuresEl,\n\t\t\tJournalStructure structure)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!context.isWithinDateRange(structure.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getStructurePath(context, structure);\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tElement structureEl = structuresEl.addElement(\"structure\");\n\n\t\tstructureEl.addAttribute(\"path\", path);\n\n\t\tstructure.setUserUuid(structure.getUserUuid());\n\n\t\tcontext.addPermissions(JournalStructure.class, structure.getId());\n\n\t\tcontext.addZipEntry(path, structure);\n\t}","id":54082,"modified_method":"protected static void exportStructure(\n\t\t\tPortletDataContext context, Element structuresElement,\n\t\t\tJournalStructure structure)\n\t\tthrows Exception {\n\n\t\tif (!context.isWithinDateRange(structure.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getStructurePath(context, structure);\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tElement structureElement = structuresElement.addElement(\"structure\");\n\n\t\tstructureElement.addAttribute(\"path\", path);\n\n\t\tstructure.setUserUuid(structure.getUserUuid());\n\n\t\tcontext.addPermissions(JournalStructure.class, structure.getId());\n\n\t\tcontext.addZipEntry(path, structure);\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static void importTemplate(\n\t\t\tPortletDataContext context, Element templateEl)\n\t\tthrows Exception {\n\n\t\tString path = templateEl.attributeValue(\"path\");\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJournalTemplate template = (JournalTemplate)context.getZipEntryAsObject(\n\t\t\tpath);\n\n\t\tlong userId = context.getUserId(template.getUserUuid());\n\t\tlong groupId = context.getScopeGroupId();\n\n\t\tString templateId = template.getTemplateId();\n\t\tboolean autoTemplateId = false;\n\n\t\tif ((Validator.isNumber(templateId)) ||\n\t\t\t(JournalTemplateUtil.fetchByG_T(groupId, templateId) != null)) {\n\n\t\t\tautoTemplateId = true;\n\t\t}\n\n\t\tMap<String, String> structureIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalStructure.class);\n\n\t\tString parentStructureId = MapUtil.getString(\n\t\t\tstructureIds, template.getStructureId(), template.getStructureId());\n\n\t\tString xsl = template.getXsl();\n\n\t\txsl = importDLFileEntries(context, templateEl, xsl);\n\t\txsl = importIGImages(context, templateEl, xsl);\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\txsl = StringUtil.replace(\n\t\t\txsl, \"@data_handler_group_friendly_url@\", group.getFriendlyURL());\n\n\t\ttemplate.setXsl(xsl);\n\n\t\tboolean formatXsl = false;\n\n\t\tJournalCreationStrategy creationStrategy =\n\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\tlong authorId = creationStrategy.getAuthorUserId(context, template);\n\n\t\tif (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\tuserId = authorId;\n\t\t}\n\n\t\tboolean addCommunityPermissions =\n\t\t\tcreationStrategy.addCommunityPermissions(context, template);\n\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\tcontext, template);\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddCommunityPermissions(addCommunityPermissions);\n\t\tserviceContext.setAddGuestPermissions(addGuestPermissions);\n\t\tserviceContext.setCreateDate(template.getCreateDate());\n\t\tserviceContext.setModifiedDate(template.getModifiedDate());\n\n\t\tFile smallFile = null;\n\n\t\tString smallImagePath = templateEl.attributeValue(\"small-image-path\");\n\n\t\tif (template.isSmallImage() && Validator.isNotNull(smallImagePath)) {\n\t\t\tif (smallImagePath.endsWith(StringPool.PERIOD)) {\n\t\t\t\tsmallImagePath += template.getSmallImageType();\n\t\t\t}\n\n\t\t\tbyte[] bytes = context.getZipEntryAsByteArray(smallImagePath);\n\n\t\t\tif (bytes != null) {\n\t\t\t\tsmallFile = File.createTempFile(\n\t\t\t\t\tString.valueOf(template.getSmallImageId()),\n\t\t\t\t\tStringPool.PERIOD + template.getSmallImageType());\n\n\t\t\t\tFileUtil.write(smallFile, bytes);\n\t\t\t}\n\t\t}\n\n\t\tJournalTemplate existingTemplate = null;\n\n\t\tif (context.isDataStrategyMirror()) {\n\t\t\texistingTemplate = JournalTemplateUtil.fetchByUUID_G(\n\t\t\t\ttemplate.getUuid(), groupId);\n\n\t\t\tif (existingTemplate == null) {\n\t\t\t\tserviceContext.setUuid(template.getUuid());\n\n\t\t\t\texistingTemplate = JournalTemplateLocalServiceUtil.addTemplate(\n\t\t\t\t\tuserId, groupId, templateId, autoTemplateId,\n\t\t\t\t\tparentStructureId, template.getName(),\n\t\t\t\t\ttemplate.getDescription(), template.getXsl(), formatXsl,\n\t\t\t\t\ttemplate.getLangType(), template.getCacheable(),\n\t\t\t\t\ttemplate.isSmallImage(), template.getSmallImageURL(),\n\t\t\t\t\tsmallFile, serviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingTemplate =\n\t\t\t\t\tJournalTemplateLocalServiceUtil.updateTemplate(\n\t\t\t\t\t\texistingTemplate.getGroupId(),\n\t\t\t\t\t\texistingTemplate.getTemplateId(),\n\t\t\t\t\t\texistingTemplate.getStructureId(), template.getName(),\n\t\t\t\t\t\ttemplate.getDescription(), template.getXsl(), formatXsl,\n\t\t\t\t\t\ttemplate.getLangType(), template.getCacheable(),\n\t\t\t\t\t\ttemplate.isSmallImage(), template.getSmallImageURL(),\n\t\t\t\t\t\tsmallFile, serviceContext);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\texistingTemplate = JournalTemplateLocalServiceUtil.addTemplate(\n\t\t\t\tuserId, groupId, templateId, autoTemplateId, parentStructureId,\n\t\t\t\ttemplate.getName(), template.getDescription(),\n\t\t\t\ttemplate.getXsl(), formatXsl, template.getLangType(),\n\t\t\t\ttemplate.getCacheable(), template.isSmallImage(),\n\t\t\t\ttemplate.getSmallImageURL(), smallFile, serviceContext);\n\t\t}\n\n\t\tMap<String, String> templateIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalTemplate.class);\n\n\t\ttemplateIds.put(templateId, existingTemplate.getTemplateId());\n\n\t\tcontext.importPermissions(\n\t\t\tJournalTemplate.class, template.getId(),\n\t\t\texistingTemplate.getId());\n\n\t\tif (!templateId.equals(existingTemplate.getTemplateId())) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"A template with the ID \" + templateId + \" already \" +\n\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\texistingTemplate.getTemplateId());\n\t\t\t}\n\t\t}\n\t}","id":54083,"modified_method":"protected static void importTemplate(\n\t\t\tPortletDataContext context, Element templateElement)\n\t\tthrows Exception {\n\n\t\tString path = templateElement.attributeValue(\"path\");\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJournalTemplate template = (JournalTemplate)context.getZipEntryAsObject(\n\t\t\tpath);\n\n\t\tlong userId = context.getUserId(template.getUserUuid());\n\n\t\tString templateId = template.getTemplateId();\n\t\tboolean autoTemplateId = false;\n\n\t\tif ((Validator.isNumber(templateId)) ||\n\t\t\t(JournalTemplateUtil.fetchByG_T(\n\t\t\t\tcontext.getScopeGroupId(), templateId) != null)) {\n\n\t\t\tautoTemplateId = true;\n\t\t}\n\n\t\tMap<String, String> structureIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalStructure.class);\n\n\t\tString parentStructureId = MapUtil.getString(\n\t\t\tstructureIds, template.getStructureId(), template.getStructureId());\n\n\t\tString xsl = template.getXsl();\n\n\t\txsl = importDLFileEntries(context, templateElement, xsl);\n\t\txsl = importIGImages(context, templateElement, xsl);\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(context.getScopeGroupId());\n\n\t\txsl = StringUtil.replace(\n\t\t\txsl, \"@data_handler_group_friendly_url@\", group.getFriendlyURL());\n\n\t\ttemplate.setXsl(xsl);\n\n\t\tboolean formatXsl = false;\n\n\t\tJournalCreationStrategy creationStrategy =\n\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\tlong authorId = creationStrategy.getAuthorUserId(context, template);\n\n\t\tif (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\tuserId = authorId;\n\t\t}\n\n\t\tboolean addCommunityPermissions =\n\t\t\tcreationStrategy.addCommunityPermissions(context, template);\n\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\tcontext, template);\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddCommunityPermissions(addCommunityPermissions);\n\t\tserviceContext.setAddGuestPermissions(addGuestPermissions);\n\t\tserviceContext.setCreateDate(template.getCreateDate());\n\t\tserviceContext.setModifiedDate(template.getModifiedDate());\n\n\t\tFile smallFile = null;\n\n\t\tString smallImagePath = templateElement.attributeValue(\n\t\t\t\"small-image-path\");\n\n\t\tif (template.isSmallImage() && Validator.isNotNull(smallImagePath)) {\n\t\t\tif (smallImagePath.endsWith(StringPool.PERIOD)) {\n\t\t\t\tsmallImagePath += template.getSmallImageType();\n\t\t\t}\n\n\t\t\tbyte[] bytes = context.getZipEntryAsByteArray(smallImagePath);\n\n\t\t\tif (bytes != null) {\n\t\t\t\tsmallFile = File.createTempFile(\n\t\t\t\t\tString.valueOf(template.getSmallImageId()),\n\t\t\t\t\tStringPool.PERIOD + template.getSmallImageType());\n\n\t\t\t\tFileUtil.write(smallFile, bytes);\n\t\t\t}\n\t\t}\n\n\t\tJournalTemplate existingTemplate = null;\n\n\t\tif (context.isDataStrategyMirror()) {\n\t\t\texistingTemplate = JournalTemplateUtil.fetchByUUID_G(\n\t\t\t\ttemplate.getUuid(), context.getScopeGroupId());\n\n\t\t\tif (existingTemplate == null) {\n\t\t\t\tserviceContext.setUuid(template.getUuid());\n\n\t\t\t\texistingTemplate = JournalTemplateLocalServiceUtil.addTemplate(\n\t\t\t\t\tuserId, context.getScopeGroupId(), templateId,\n\t\t\t\t\tautoTemplateId, parentStructureId, template.getName(),\n\t\t\t\t\ttemplate.getDescription(), template.getXsl(), formatXsl,\n\t\t\t\t\ttemplate.getLangType(), template.getCacheable(),\n\t\t\t\t\ttemplate.isSmallImage(), template.getSmallImageURL(),\n\t\t\t\t\tsmallFile, serviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingTemplate =\n\t\t\t\t\tJournalTemplateLocalServiceUtil.updateTemplate(\n\t\t\t\t\t\texistingTemplate.getGroupId(),\n\t\t\t\t\t\texistingTemplate.getTemplateId(),\n\t\t\t\t\t\texistingTemplate.getStructureId(), template.getName(),\n\t\t\t\t\t\ttemplate.getDescription(), template.getXsl(), formatXsl,\n\t\t\t\t\t\ttemplate.getLangType(), template.getCacheable(),\n\t\t\t\t\t\ttemplate.isSmallImage(), template.getSmallImageURL(),\n\t\t\t\t\t\tsmallFile, serviceContext);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\texistingTemplate = JournalTemplateLocalServiceUtil.addTemplate(\n\t\t\t\tuserId, context.getScopeGroupId(), templateId, autoTemplateId,\n\t\t\t\tparentStructureId, template.getName(),\n\t\t\t\ttemplate.getDescription(), template.getXsl(), formatXsl,\n\t\t\t\ttemplate.getLangType(), template.getCacheable(),\n\t\t\t\ttemplate.isSmallImage(), template.getSmallImageURL(), smallFile,\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\tMap<String, String> templateIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalTemplate.class);\n\n\t\ttemplateIds.put(templateId, existingTemplate.getTemplateId());\n\n\t\tcontext.importPermissions(\n\t\t\tJournalTemplate.class, template.getId(),\n\t\t\texistingTemplate.getId());\n\n\t\tif (!templateId.equals(existingTemplate.getTemplateId())) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"A template with the ID \" + templateId + \" already \" +\n\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\texistingTemplate.getTemplateId());\n\t\t\t}\n\t\t}\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String exportLayoutFriendlyURLs(\n\t\tPortletDataContext context, String content) {\n\n\t\tGroup group = null;\n\n\t\ttry {\n\t\t\tgroup = GroupLocalServiceUtil.getGroup(context.getScopeGroupId());\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(e);\n\t\t\t}\n\n\t\t\treturn content;\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder(content);\n\n\t\tString friendlyURLPrivateGroupPath =\n\t\t\tPropsValues.LAYOUT_FRIENDLY_URL_PRIVATE_GROUP_SERVLET_MAPPING;\n\t\tString friendlyURLPrivateUserPath =\n\t\t\tPropsValues.LAYOUT_FRIENDLY_URL_PRIVATE_USER_SERVLET_MAPPING;\n\t\tString friendlyURLPublicPath =\n\t\t\tPropsValues.LAYOUT_FRIENDLY_URL_PUBLIC_SERVLET_MAPPING;\n\n\t\tString href = \"href=\";\n\n\t\tint beginPos = content.length();\n\n\t\twhile (true) {\n\t\t\tint hrefLength = href.length();\n\n\t\t\tbeginPos = content.lastIndexOf(href, beginPos);\n\n\t\t\tif (beginPos == -1) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchar c = content.charAt(beginPos + hrefLength);\n\n\t\t\tif ((c == CharPool.APOSTROPHE) || (c == CharPool.QUOTE)) {\n\t\t\t\threfLength++;\n\t\t\t}\n\n\t\t\tint endPos1 = content.indexOf(\n\t\t\t\tStringPool.APOSTROPHE, beginPos + hrefLength);\n\t\t\tint endPos2 = content.indexOf(\n\t\t\t\tStringPool.CLOSE_BRACKET, beginPos + hrefLength);\n\t\t\tint endPos3 = content.indexOf(\n\t\t\t\tStringPool.CLOSE_PARENTHESIS, beginPos + hrefLength);\n\t\t\tint endPos4 = content.indexOf(\n\t\t\t\tStringPool.LESS_THAN, beginPos + hrefLength);\n\t\t\tint endPos5 = content.indexOf(\n\t\t\t\tStringPool.QUOTE, beginPos + hrefLength);\n\t\t\tint endPos6 = content.indexOf(\n\t\t\t\tStringPool.SPACE, beginPos + hrefLength);\n\n\t\t\tint endPos = endPos1;\n\n\t\t\tif ((endPos == -1) || ((endPos2 != -1) && (endPos2 < endPos))) {\n\t\t\t\tendPos = endPos2;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos3 != -1) && (endPos3 < endPos))) {\n\t\t\t\tendPos = endPos3;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos4 != -1) && (endPos4 < endPos))) {\n\t\t\t\tendPos = endPos4;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos5 != -1) && (endPos5 < endPos))) {\n\t\t\t\tendPos = endPos5;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos6 != -1) && (endPos6 < endPos))) {\n\t\t\t\tendPos = endPos6;\n\t\t\t}\n\n\t\t\tif (endPos == -1) {\n\t\t\t\tbeginPos--;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString url = content.substring(beginPos + hrefLength, endPos);\n\n\t\t\tif (!url.startsWith(friendlyURLPrivateGroupPath) &&\n\t\t\t\t!url.startsWith(friendlyURLPrivateUserPath) &&\n\t\t\t\t!url.startsWith(friendlyURLPublicPath)) {\n\n\t\t\t\tbeginPos--;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tint beginGroupPos = content.indexOf(\n\t\t\t\tStringPool.SLASH, beginPos + hrefLength + 1);\n\n\t\t\tif (beginGroupPos == -1) {\n\t\t\t\tbeginPos--;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tint endGroupPos = content.indexOf(\n\t\t\t\tStringPool.SLASH, beginGroupPos + 1);\n\n\t\t\tif (endGroupPos == -1) {\n\t\t\t\tbeginPos--;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString groupFriendlyURL = content.substring(\n\t\t\t\tbeginGroupPos, endGroupPos);\n\n\t\t\tif (groupFriendlyURL.equals(group.getFriendlyURL())) {\n\t\t\t\tsb.replace(\n\t\t\t\t\tbeginGroupPos, endGroupPos,\n\t\t\t\t\t\"@data_handler_group_friendly_url@\");\n\t\t\t}\n\n\t\t\tbeginPos--;\n\t\t}\n\n\t\treturn sb.toString();\n\t}","id":54084,"modified_method":"protected static String exportLayoutFriendlyURLs(\n\t\tPortletDataContext context, String content) {\n\n\t\tGroup group = null;\n\n\t\ttry {\n\t\t\tgroup = GroupLocalServiceUtil.getGroup(context.getScopeGroupId());\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(e);\n\t\t\t}\n\n\t\t\treturn content;\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder(content);\n\n\t\tString friendlyURLPrivateGroupPath =\n\t\t\tPropsValues.LAYOUT_FRIENDLY_URL_PRIVATE_GROUP_SERVLET_MAPPING;\n\t\tString friendlyURLPrivateUserPath =\n\t\t\tPropsValues.LAYOUT_FRIENDLY_URL_PRIVATE_USER_SERVLET_MAPPING;\n\t\tString friendlyURLPublicPath =\n\t\t\tPropsValues.LAYOUT_FRIENDLY_URL_PUBLIC_SERVLET_MAPPING;\n\n\t\tString href = \"href=\";\n\n\t\tint beginPos = content.length();\n\n\t\twhile (true) {\n\t\t\tint hrefLength = href.length();\n\n\t\t\tbeginPos = content.lastIndexOf(href, beginPos);\n\n\t\t\tif (beginPos == -1) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchar c = content.charAt(beginPos + hrefLength);\n\n\t\t\tif ((c == CharPool.APOSTROPHE) || (c == CharPool.QUOTE)) {\n\t\t\t\threfLength++;\n\t\t\t}\n\n\t\t\tint endPos1 = content.indexOf(\n\t\t\t\tStringPool.APOSTROPHE, beginPos + hrefLength);\n\t\t\tint endPos2 = content.indexOf(\n\t\t\t\tStringPool.CLOSE_BRACKET, beginPos + hrefLength);\n\t\t\tint endPos3 = content.indexOf(\n\t\t\t\tStringPool.CLOSE_PARENTHESIS, beginPos + hrefLength);\n\t\t\tint endPos4 = content.indexOf(\n\t\t\t\tStringPool.LESS_THAN, beginPos + hrefLength);\n\t\t\tint endPos5 = content.indexOf(\n\t\t\t\tStringPool.QUOTE, beginPos + hrefLength);\n\t\t\tint endPos6 = content.indexOf(\n\t\t\t\tStringPool.SPACE, beginPos + hrefLength);\n\n\t\t\tint endPos = endPos1;\n\n\t\t\tif ((endPos == -1) || ((endPos2 != -1) && (endPos2 < endPos))) {\n\t\t\t\tendPos = endPos2;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos3 != -1) && (endPos3 < endPos))) {\n\t\t\t\tendPos = endPos3;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos4 != -1) && (endPos4 < endPos))) {\n\t\t\t\tendPos = endPos4;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos5 != -1) && (endPos5 < endPos))) {\n\t\t\t\tendPos = endPos5;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos6 != -1) && (endPos6 < endPos))) {\n\t\t\t\tendPos = endPos6;\n\t\t\t}\n\n\t\t\tif (endPos == -1) {\n\t\t\t\tbeginPos--;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString url = content.substring(beginPos + hrefLength, endPos);\n\n\t\t\tif (!url.startsWith(friendlyURLPrivateGroupPath) &&\n\t\t\t\t!url.startsWith(friendlyURLPrivateUserPath) &&\n\t\t\t\t!url.startsWith(friendlyURLPublicPath)) {\n\n\t\t\t\tbeginPos--;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tint beginGroupPos = content.indexOf(\n\t\t\t\tStringPool.SLASH, beginPos + hrefLength + 1);\n\n\t\t\tif (beginGroupPos == -1) {\n\t\t\t\tbeginPos--;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tint endGroupPos = content.indexOf(\n\t\t\t\tStringPool.SLASH, beginGroupPos + 1);\n\n\t\t\tif (endGroupPos == -1) {\n\t\t\t\tbeginPos--;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString groupFriendlyURL = content.substring(\n\t\t\t\tbeginGroupPos, endGroupPos);\n\n\t\t\tif (groupFriendlyURL.equals(group.getFriendlyURL())) {\n\t\t\t\tsb.replace(\n\t\t\t\t\tbeginGroupPos, endGroupPos,\n\t\t\t\t\t\"@data_handler_group_friendly_url@\");\n\t\t\t}\n\n\t\t\tbeginPos--;\n\t\t}\n\n\t\treturn sb.toString();\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String importDLFileEntries(\n\t\t\tPortletDataContext context, Element parentEl, String content)\n\t\tthrows SystemException {\n\n\t\tMap<Long, Long> fileEntryPKs =\n\t\t\t(Map<Long, Long>)context.getNewPrimaryKeysMap(DLFileEntry.class);\n\n\t\tList<Element> dlReferenceEls = parentEl.elements(\"dl-reference\");\n\n\t\tfor (Element dlReferenceEl : dlReferenceEls) {\n\t\t\tString dlReferencePath = dlReferenceEl.attributeValue(\"path\");\n\n\t\t\tDLFileEntry fileEntry = (DLFileEntry)context.getZipEntryAsObject(\n\t\t\t\tdlReferencePath);\n\n\t\t\tif (fileEntry == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlong fileEntryId = MapUtil.getLong(\n\t\t\t\tfileEntryPKs, fileEntry.getFileEntryId(),\n\t\t\t\tfileEntry.getFileEntryId());\n\n\t\t\tfileEntry = DLFileEntryUtil.fetchByPrimaryKey(fileEntryId);\n\n\t\t\tif (fileEntry == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString dlReference = \"[$dl-reference=\" + dlReferencePath + \"$]\";\n\n\t\t\tStringBundler sb = new StringBundler(6);\n\n\t\t\tsb.append(\"/documents/\");\n\t\t\tsb.append(context.getScopeGroupId());\n\t\t\tsb.append(StringPool.SLASH);\n\t\t\tsb.append(fileEntry.getFolderId());\n\t\t\tsb.append(StringPool.SLASH);\n\t\t\tsb.append(\n\t\t\t\tHttpUtil.encodeURL(HtmlUtil.unescape(fileEntry.getTitle())));\n\n\t\t\tcontent = StringUtil.replace(content, dlReference, sb.toString());\n\t\t}\n\n\t\treturn content;\n\t}","id":54085,"modified_method":"protected static String importDLFileEntries(\n\t\t\tPortletDataContext context, Element parentElement, String content)\n\t\tthrows Exception {\n\n\t\tMap<Long, Long> fileEntryPKs =\n\t\t\t(Map<Long, Long>)context.getNewPrimaryKeysMap(DLFileEntry.class);\n\n\t\tList<Element> dlReferenceElements = parentElement.elements(\n\t\t\t\"dl-reference\");\n\n\t\tfor (Element dlReferenceElement : dlReferenceElements) {\n\t\t\tString dlReferencePath = dlReferenceElement.attributeValue(\"path\");\n\n\t\t\tDLFileEntry fileEntry = (DLFileEntry)context.getZipEntryAsObject(\n\t\t\t\tdlReferencePath);\n\n\t\t\tif (fileEntry == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlong fileEntryId = MapUtil.getLong(\n\t\t\t\tfileEntryPKs, fileEntry.getFileEntryId(),\n\t\t\t\tfileEntry.getFileEntryId());\n\n\t\t\tfileEntry = DLFileEntryUtil.fetchByPrimaryKey(fileEntryId);\n\n\t\t\tif (fileEntry == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString dlReference = \"[$dl-reference=\" + dlReferencePath + \"$]\";\n\n\t\t\tStringBundler sb = new StringBundler(6);\n\n\t\t\tsb.append(\"/documents/\");\n\t\t\tsb.append(context.getScopeGroupId());\n\t\t\tsb.append(StringPool.SLASH);\n\t\t\tsb.append(fileEntry.getFolderId());\n\t\t\tsb.append(StringPool.SLASH);\n\t\t\tsb.append(\n\t\t\t\tHttpUtil.encodeURL(HtmlUtil.unescape(fileEntry.getTitle())));\n\n\t\t\tcontent = StringUtil.replace(content, dlReference, sb.toString());\n\t\t}\n\n\t\treturn content;\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String exportDLFileEntries(\n\t\tPortletDataContext context, Element foldersEl, Element fileEntriesEl,\n\t\tElement fileRanksEl, Element entityEl, String content) {\n\n\t\tStringBuilder sb = new StringBuilder(content);\n\n\t\tint beginPos = content.length();\n\t\tint currentLocation = -1;\n\n\t\twhile (true) {\n\t\t\tcurrentLocation = content.lastIndexOf(\n\t\t\t\t\"/c/document_library/get_file?\", beginPos);\n\n\t\t\tif (currentLocation == -1) {\n\t\t\t\tcurrentLocation = content.lastIndexOf(\"/documents/\", beginPos);\n\t\t\t}\n\n\t\t\tif (currentLocation == -1) {\n\t\t\t\treturn sb.toString();\n\t\t\t}\n\n\t\t\tbeginPos = currentLocation;\n\n\t\t\tint endPos1 = content.indexOf(StringPool.APOSTROPHE, beginPos);\n\t\t\tint endPos2 = content.indexOf(StringPool.CLOSE_BRACKET, beginPos);\n\t\t\tint endPos3 = content.indexOf(\n\t\t\t\tStringPool.CLOSE_PARENTHESIS, beginPos);\n\t\t\tint endPos4 = content.indexOf(StringPool.LESS_THAN, beginPos);\n\t\t\tint endPos5 = content.indexOf(StringPool.QUOTE, beginPos);\n\t\t\tint endPos6 = content.indexOf(StringPool.SPACE, beginPos);\n\n\t\t\tint endPos = endPos1;\n\n\t\t\tif ((endPos == -1) || ((endPos2 != -1) && (endPos2 < endPos))) {\n\t\t\t\tendPos = endPos2;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos3 != -1) && (endPos3 < endPos))) {\n\t\t\t\tendPos = endPos3;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos4 != -1) && (endPos4 < endPos))) {\n\t\t\t\tendPos = endPos4;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos5 != -1) && (endPos5 < endPos))) {\n\t\t\t\tendPos = endPos5;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos6 != -1) && (endPos6 < endPos))) {\n\t\t\t\tendPos = endPos6;\n\t\t\t}\n\n\t\t\tif ((beginPos == -1) || (endPos == -1)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tString oldParameters = content.substring(beginPos, endPos);\n\n\t\t\t\twhile (oldParameters.contains(StringPool.AMPERSAND_ENCODED)) {\n\t\t\t\t\toldParameters = oldParameters.replace(\n\t\t\t\t\t\tStringPool.AMPERSAND_ENCODED, StringPool.AMPERSAND);\n\t\t\t\t}\n\n\t\t\t\tMap<String, String> map = new HashMap<String, String>();\n\n\t\t\t\tif (oldParameters.startsWith(\"/documents/\")) {\n\t\t\t\t\tString[] pathArray = oldParameters.split(StringPool.SLASH);\n\n\t\t\t\t\tmap.put(\"groupId\", pathArray[2]);\n\n\t\t\t\t\tif (pathArray.length == 4) {\n\t\t\t\t\t\tmap.put(\"uuid\", pathArray[3]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (pathArray.length > 4) {\n\t\t\t\t\t\tmap.put(\"folderId\", pathArray[3]);\n\t\t\t\t\t\tmap.put(\"name\", pathArray[4]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\toldParameters = oldParameters.substring(\n\t\t\t\t\t\toldParameters.indexOf(StringPool.QUESTION) + 1);\n\n\t\t\t\t\tmap = MapUtil.toLinkedHashMap(\n\t\t\t\t\t\toldParameters.split(StringPool.AMPERSAND),\n\t\t\t\t\t\tStringPool.EQUAL);\n\t\t\t\t}\n\n\t\t\t\tDLFileEntry fileEntry = null;\n\n\t\t\t\tif (map.containsKey(\"uuid\")) {\n\t\t\t\t\tString uuid = map.get(\"uuid\");\n\n\t\t\t\t\tString groupIdString = map.get(\"groupId\");\n\n\t\t\t\t\tlong groupId = GetterUtil.getLong(groupIdString);\n\n\t\t\t\t\tif (groupIdString.equals(\"@group_id@\")) {\n\t\t\t\t\t\tgroupId = context.getScopeGroupId();\n\t\t\t\t\t}\n\n\t\t\t\t\tfileEntry = DLFileEntryLocalServiceUtil.\n\t\t\t\t\t\tgetFileEntryByUuidAndGroupId(uuid, groupId);\n\t\t\t\t}\n\t\t\t\telse if (map.containsKey(\"folderId\")) {\n\t\t\t\t\tlong folderId = GetterUtil.getLong(map.get(\"folderId\"));\n\t\t\t\t\tString name = map.get(\"name\");\n\n\t\t\t\t\tString groupIdString = map.get(\"groupId\");\n\n\t\t\t\t\tlong groupId = GetterUtil.getLong(groupIdString);\n\n\t\t\t\t\tif (groupIdString.equals(\"@group_id@\")) {\n\t\t\t\t\t\tgroupId = context.getScopeGroupId();\n\t\t\t\t\t}\n\n\t\t\t\t\tfileEntry = DLFileEntryLocalServiceUtil.getFileEntryByTitle(\n\t\t\t\t\t\tgroupId, folderId, name);\n\t\t\t\t}\n\n\t\t\t\tif (fileEntry == null) {\n\t\t\t\t\tbeginPos--;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tString path = DLPortletDataHandlerImpl.getFileEntryPath(\n\t\t\t\t\tcontext, fileEntry);\n\n\t\t\t\tElement dlReferenceEl = entityEl.addElement(\"dl-reference\");\n\n\t\t\t\tdlReferenceEl.addAttribute(\"path\", path);\n\n\t\t\t\tDLPortletDataHandlerImpl.exportFileEntry(\n\t\t\t\t\tcontext, foldersEl, fileEntriesEl, fileRanksEl, fileEntry);\n\n\t\t\t\tString dlReference = \"[$dl-reference=\" + path + \"$]\";\n\n\t\t\t\tsb.replace(beginPos, endPos, dlReference);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbeginPos--;\n\t\t}\n\n\t\treturn sb.toString();\n\t}","id":54086,"modified_method":"protected static String exportDLFileEntries(\n\t\tPortletDataContext context, Element foldersElement,\n\t\tElement fileEntriesElement, Element fileRanksElement,\n\t\tElement entityElement, String content) {\n\n\t\tStringBuilder sb = new StringBuilder(content);\n\n\t\tint beginPos = content.length();\n\t\tint currentLocation = -1;\n\n\t\twhile (true) {\n\t\t\tcurrentLocation = content.lastIndexOf(\n\t\t\t\t\"/c/document_library/get_file?\", beginPos);\n\n\t\t\tif (currentLocation == -1) {\n\t\t\t\tcurrentLocation = content.lastIndexOf(\"/documents/\", beginPos);\n\t\t\t}\n\n\t\t\tif (currentLocation == -1) {\n\t\t\t\treturn sb.toString();\n\t\t\t}\n\n\t\t\tbeginPos = currentLocation;\n\n\t\t\tint endPos1 = content.indexOf(StringPool.APOSTROPHE, beginPos);\n\t\t\tint endPos2 = content.indexOf(StringPool.CLOSE_BRACKET, beginPos);\n\t\t\tint endPos3 = content.indexOf(\n\t\t\t\tStringPool.CLOSE_PARENTHESIS, beginPos);\n\t\t\tint endPos4 = content.indexOf(StringPool.LESS_THAN, beginPos);\n\t\t\tint endPos5 = content.indexOf(StringPool.QUOTE, beginPos);\n\t\t\tint endPos6 = content.indexOf(StringPool.SPACE, beginPos);\n\n\t\t\tint endPos = endPos1;\n\n\t\t\tif ((endPos == -1) || ((endPos2 != -1) && (endPos2 < endPos))) {\n\t\t\t\tendPos = endPos2;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos3 != -1) && (endPos3 < endPos))) {\n\t\t\t\tendPos = endPos3;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos4 != -1) && (endPos4 < endPos))) {\n\t\t\t\tendPos = endPos4;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos5 != -1) && (endPos5 < endPos))) {\n\t\t\t\tendPos = endPos5;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos6 != -1) && (endPos6 < endPos))) {\n\t\t\t\tendPos = endPos6;\n\t\t\t}\n\n\t\t\tif ((beginPos == -1) || (endPos == -1)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tString oldParameters = content.substring(beginPos, endPos);\n\n\t\t\t\twhile (oldParameters.contains(StringPool.AMPERSAND_ENCODED)) {\n\t\t\t\t\toldParameters = oldParameters.replace(\n\t\t\t\t\t\tStringPool.AMPERSAND_ENCODED, StringPool.AMPERSAND);\n\t\t\t\t}\n\n\t\t\t\tMap<String, String> map = new HashMap<String, String>();\n\n\t\t\t\tif (oldParameters.startsWith(\"/documents/\")) {\n\t\t\t\t\tString[] pathArray = oldParameters.split(StringPool.SLASH);\n\n\t\t\t\t\tmap.put(\"groupId\", pathArray[2]);\n\n\t\t\t\t\tif (pathArray.length == 4) {\n\t\t\t\t\t\tmap.put(\"uuid\", pathArray[3]);\n\t\t\t\t\t}\n\t\t\t\t\telse if (pathArray.length > 4) {\n\t\t\t\t\t\tmap.put(\"folderId\", pathArray[3]);\n\t\t\t\t\t\tmap.put(\"name\", pathArray[4]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\toldParameters = oldParameters.substring(\n\t\t\t\t\t\toldParameters.indexOf(StringPool.QUESTION) + 1);\n\n\t\t\t\t\tmap = MapUtil.toLinkedHashMap(\n\t\t\t\t\t\toldParameters.split(StringPool.AMPERSAND),\n\t\t\t\t\t\tStringPool.EQUAL);\n\t\t\t\t}\n\n\t\t\t\tDLFileEntry fileEntry = null;\n\n\t\t\t\tif (map.containsKey(\"uuid\")) {\n\t\t\t\t\tString uuid = map.get(\"uuid\");\n\n\t\t\t\t\tString groupIdString = map.get(\"groupId\");\n\n\t\t\t\t\tlong groupId = GetterUtil.getLong(groupIdString);\n\n\t\t\t\t\tif (groupIdString.equals(\"@group_id@\")) {\n\t\t\t\t\t\tgroupId = context.getScopeGroupId();\n\t\t\t\t\t}\n\n\t\t\t\t\tfileEntry = DLFileEntryLocalServiceUtil.\n\t\t\t\t\t\tgetFileEntryByUuidAndGroupId(uuid, groupId);\n\t\t\t\t}\n\t\t\t\telse if (map.containsKey(\"folderId\")) {\n\t\t\t\t\tlong folderId = GetterUtil.getLong(map.get(\"folderId\"));\n\t\t\t\t\tString name = map.get(\"name\");\n\n\t\t\t\t\tString groupIdString = map.get(\"groupId\");\n\n\t\t\t\t\tlong groupId = GetterUtil.getLong(groupIdString);\n\n\t\t\t\t\tif (groupIdString.equals(\"@group_id@\")) {\n\t\t\t\t\t\tgroupId = context.getScopeGroupId();\n\t\t\t\t\t}\n\n\t\t\t\t\tfileEntry = DLFileEntryLocalServiceUtil.getFileEntryByTitle(\n\t\t\t\t\t\tgroupId, folderId, name);\n\t\t\t\t}\n\n\t\t\t\tif (fileEntry == null) {\n\t\t\t\t\tbeginPos--;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tString path = DLPortletDataHandlerImpl.getFileEntryPath(\n\t\t\t\t\tcontext, fileEntry);\n\n\t\t\t\tElement dlReferenceElement = entityElement.addElement(\n\t\t\t\t\t\"dl-reference\");\n\n\t\t\t\tdlReferenceElement.addAttribute(\"path\", path);\n\n\t\t\t\tDLPortletDataHandlerImpl.exportFileEntry(\n\t\t\t\t\tcontext, foldersElement, fileEntriesElement,\n\t\t\t\t\tfileRanksElement, fileEntry);\n\n\t\t\t\tString dlReference = \"[$dl-reference=\" + path + \"$]\";\n\n\t\t\t\tsb.replace(beginPos, endPos, dlReference);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbeginPos--;\n\t\t}\n\n\t\treturn sb.toString();\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static String getArticleSmallImagePath(\n\t\t\tPortletDataContext context, JournalArticle article)\n\t\tthrows PortalException, SystemException {\n\n\t\tStringBundler sb = new StringBundler(6);\n\n\t\tsb.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsb.append(\"/articles/\");\n\t\tsb.append(article.getUuid());\n\t\tsb.append(\"/thumbnail\");\n\t\tsb.append(StringPool.PERIOD);\n\t\tsb.append(article.getSmallImageType());\n\n\t\treturn sb.toString();\n\t}","id":54087,"modified_method":"protected static String getArticleSmallImagePath(\n\t\t\tPortletDataContext context, JournalArticle article)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(6);\n\n\t\tsb.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsb.append(\"/articles/\");\n\t\tsb.append(article.getUuid());\n\t\tsb.append(\"/thumbnail\");\n\t\tsb.append(StringPool.PERIOD);\n\t\tsb.append(article.getSmallImageType());\n\n\t\treturn sb.toString();\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static String getTemplateSmallImagePath(\n\t\t\tPortletDataContext context, JournalTemplate template)\n\t\tthrows PortalException, SystemException {\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsb.append(\"/templates/thumbnail-\");\n\t\tsb.append(template.getUuid());\n\t\tsb.append(StringPool.PERIOD);\n\t\tsb.append(template.getSmallImageType());\n\n\t\treturn sb.toString();\n\t}","id":54088,"modified_method":"protected static String getTemplateSmallImagePath(\n\t\t\tPortletDataContext context, JournalTemplate template)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(context.getPortletPath(PortletKeys.JOURNAL));\n\t\tsb.append(\"/templates/thumbnail-\");\n\t\tsb.append(template.getUuid());\n\t\tsb.append(StringPool.PERIOD);\n\t\tsb.append(template.getSmallImageType());\n\n\t\treturn sb.toString();\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void importFeed(\n\t\t\tPortletDataContext context, Element feedEl)\n\t\tthrows Exception {\n\n\t\tString path = feedEl.attributeValue(\"path\");\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJournalFeed feed = (JournalFeed)context.getZipEntryAsObject(path);\n\n\t\tlong userId = context.getUserId(feed.getUserUuid());\n\t\tlong groupId = context.getScopeGroupId();\n\n\t\tString feedId = feed.getFeedId();\n\t\tboolean autoFeedId = false;\n\n\t\tif ((Validator.isNumber(feedId)) ||\n\t\t\t(JournalFeedUtil.fetchByG_F(groupId, feedId) != null)) {\n\n\t\t\tautoFeedId = true;\n\t\t}\n\n\t\tMap<String, String> structureIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalStructure.class);\n\n\t\tString parentStructureId = MapUtil.getString(\n\t\t\tstructureIds, feed.getStructureId(), feed.getStructureId());\n\n\t\tMap<String, String> templateIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalTemplate.class);\n\n\t\tString parentTemplateId = MapUtil.getString(\n\t\t\ttemplateIds, feed.getTemplateId(), feed.getTemplateId());\n\t\tString parentRenderTemplateId = MapUtil.getString(\n\t\t\ttemplateIds, feed.getRendererTemplateId(),\n\t\t\tfeed.getRendererTemplateId());\n\n\t\tJournalCreationStrategy creationStrategy =\n\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\tlong authorId = creationStrategy.getAuthorUserId(context, feed);\n\n\t\tif (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\tuserId = authorId;\n\t\t}\n\n\t\tboolean addCommunityPermissions =\n\t\t\tcreationStrategy.addCommunityPermissions(context, feed);\n\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\tcontext, feed);\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddCommunityPermissions(addCommunityPermissions);\n\t\tserviceContext.setAddGuestPermissions(addGuestPermissions);\n\t\tserviceContext.setCreateDate(feed.getCreateDate());\n\t\tserviceContext.setModifiedDate(feed.getModifiedDate());\n\n\t\tJournalFeed existingFeed = null;\n\n\t\tif (context.isDataStrategyMirror()) {\n\t\t\texistingFeed = JournalFeedUtil.fetchByUUID_G(\n\t\t\t\tfeed.getUuid(), groupId);\n\n\t\t\tif (existingFeed == null) {\n\t\t\t\tserviceContext.setUuid(feed.getUuid());\n\n\t\t\t\texistingFeed = JournalFeedLocalServiceUtil.addFeed(\n\t\t\t\t\tuserId, groupId, feedId, autoFeedId, feed.getName(),\n\t\t\t\t\tfeed.getDescription(), feed.getType(), parentStructureId,\n\t\t\t\t\tparentTemplateId, parentRenderTemplateId, feed.getDelta(),\n\t\t\t\t\tfeed.getOrderByCol(), feed.getOrderByType(),\n\t\t\t\t\tfeed.getTargetLayoutFriendlyUrl(),\n\t\t\t\t\tfeed.getTargetPortletId(), feed.getContentField(),\n\t\t\t\t\tfeed.getFeedType(), feed.getFeedVersion(),\n\t\t\t\t\tserviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingFeed = JournalFeedLocalServiceUtil.updateFeed(\n\t\t\t\t\texistingFeed.getGroupId(), existingFeed.getFeedId(),\n\t\t\t\t\tfeed.getName(), feed.getDescription(), feed.getType(),\n\t\t\t\t\tparentStructureId, parentTemplateId, parentRenderTemplateId,\n\t\t\t\t\tfeed.getDelta(), feed.getOrderByCol(),\n\t\t\t\t\tfeed.getOrderByType(), feed.getTargetLayoutFriendlyUrl(),\n\t\t\t\t\tfeed.getTargetPortletId(), feed.getContentField(),\n\t\t\t\t\tfeed.getFeedType(), feed.getFeedVersion(), serviceContext);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\texistingFeed = JournalFeedLocalServiceUtil.addFeed(\n\t\t\t\tuserId, groupId, feedId, autoFeedId, feed.getName(),\n\t\t\t\tfeed.getDescription(), feed.getType(), parentStructureId,\n\t\t\t\tparentTemplateId, parentRenderTemplateId, feed.getDelta(),\n\t\t\t\tfeed.getOrderByCol(), feed.getOrderByType(),\n\t\t\t\tfeed.getTargetLayoutFriendlyUrl(), feed.getTargetPortletId(),\n\t\t\t\tfeed.getContentField(), feed.getFeedType(),\n\t\t\t\tfeed.getFeedVersion(), serviceContext);\n\t\t}\n\n\t\tMap<String, String> feedIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalFeed.class);\n\n\t\tfeedIds.put(feedId, existingFeed.getFeedId());\n\n\t\tcontext.importPermissions(\n\t\t\tJournalFeed.class, feed.getId(), existingFeed.getId());\n\n\t\tif (!feedId.equals(existingFeed.getFeedId())) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"A feed with the ID \" + feedId + \" already \" +\n\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\texistingFeed.getFeedId());\n\t\t\t}\n\t\t}\n\t}","id":54089,"modified_method":"protected static void importFeed(\n\t\t\tPortletDataContext context, Element feedElement)\n\t\tthrows Exception {\n\n\t\tString path = feedElement.attributeValue(\"path\");\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJournalFeed feed = (JournalFeed)context.getZipEntryAsObject(path);\n\n\t\tlong userId = context.getUserId(feed.getUserUuid());\n\n\t\tString feedId = feed.getFeedId();\n\t\tboolean autoFeedId = false;\n\n\t\tif ((Validator.isNumber(feedId)) ||\n\t\t\t(JournalFeedUtil.fetchByG_F(\n\t\t\t\tcontext.getScopeGroupId(), feedId) != null)) {\n\n\t\t\tautoFeedId = true;\n\t\t}\n\n\t\tMap<String, String> structureIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalStructure.class);\n\n\t\tString parentStructureId = MapUtil.getString(\n\t\t\tstructureIds, feed.getStructureId(), feed.getStructureId());\n\n\t\tMap<String, String> templateIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalTemplate.class);\n\n\t\tString parentTemplateId = MapUtil.getString(\n\t\t\ttemplateIds, feed.getTemplateId(), feed.getTemplateId());\n\t\tString parentRenderTemplateId = MapUtil.getString(\n\t\t\ttemplateIds, feed.getRendererTemplateId(),\n\t\t\tfeed.getRendererTemplateId());\n\n\t\tJournalCreationStrategy creationStrategy =\n\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\tlong authorId = creationStrategy.getAuthorUserId(context, feed);\n\n\t\tif (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\tuserId = authorId;\n\t\t}\n\n\t\tboolean addCommunityPermissions =\n\t\t\tcreationStrategy.addCommunityPermissions(context, feed);\n\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\tcontext, feed);\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddCommunityPermissions(addCommunityPermissions);\n\t\tserviceContext.setAddGuestPermissions(addGuestPermissions);\n\t\tserviceContext.setCreateDate(feed.getCreateDate());\n\t\tserviceContext.setModifiedDate(feed.getModifiedDate());\n\n\t\tJournalFeed existingFeed = null;\n\n\t\tif (context.isDataStrategyMirror()) {\n\t\t\texistingFeed = JournalFeedUtil.fetchByUUID_G(\n\t\t\t\tfeed.getUuid(), context.getScopeGroupId());\n\n\t\t\tif (existingFeed == null) {\n\t\t\t\tserviceContext.setUuid(feed.getUuid());\n\n\t\t\t\texistingFeed = JournalFeedLocalServiceUtil.addFeed(\n\t\t\t\t\tuserId, context.getScopeGroupId(), feedId, autoFeedId,\n\t\t\t\t\tfeed.getName(), feed.getDescription(), feed.getType(),\n\t\t\t\t\tparentStructureId, parentTemplateId, parentRenderTemplateId,\n\t\t\t\t\tfeed.getDelta(), feed.getOrderByCol(),\n\t\t\t\t\tfeed.getOrderByType(), feed.getTargetLayoutFriendlyUrl(),\n\t\t\t\t\tfeed.getTargetPortletId(), feed.getContentField(),\n\t\t\t\t\tfeed.getFeedType(), feed.getFeedVersion(),\n\t\t\t\t\tserviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingFeed = JournalFeedLocalServiceUtil.updateFeed(\n\t\t\t\t\texistingFeed.getGroupId(), existingFeed.getFeedId(),\n\t\t\t\t\tfeed.getName(), feed.getDescription(), feed.getType(),\n\t\t\t\t\tparentStructureId, parentTemplateId, parentRenderTemplateId,\n\t\t\t\t\tfeed.getDelta(), feed.getOrderByCol(),\n\t\t\t\t\tfeed.getOrderByType(), feed.getTargetLayoutFriendlyUrl(),\n\t\t\t\t\tfeed.getTargetPortletId(), feed.getContentField(),\n\t\t\t\t\tfeed.getFeedType(), feed.getFeedVersion(), serviceContext);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\texistingFeed = JournalFeedLocalServiceUtil.addFeed(\n\t\t\t\tuserId, context.getScopeGroupId(), feedId, autoFeedId,\n\t\t\t\tfeed.getName(), feed.getDescription(), feed.getType(),\n\t\t\t\tparentStructureId, parentTemplateId, parentRenderTemplateId,\n\t\t\t\tfeed.getDelta(), feed.getOrderByCol(), feed.getOrderByType(),\n\t\t\t\tfeed.getTargetLayoutFriendlyUrl(), feed.getTargetPortletId(),\n\t\t\t\tfeed.getContentField(), feed.getFeedType(),\n\t\t\t\tfeed.getFeedVersion(), serviceContext);\n\t\t}\n\n\t\tMap<String, String> feedIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalFeed.class);\n\n\t\tfeedIds.put(feedId, existingFeed.getFeedId());\n\n\t\tcontext.importPermissions(\n\t\t\tJournalFeed.class, feed.getId(), existingFeed.getId());\n\n\t\tif (!feedId.equals(existingFeed.getFeedId())) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"A feed with the ID \" + feedId + \" already \" +\n\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\texistingFeed.getFeedId());\n\t\t\t}\n\t\t}\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PortletPreferences importData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences preferences, String data)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tcontext.importPermissions(\n\t\t\t\t\"com.liferay.portlet.journal\", context.getSourceGroupId(),\n\t\t\t\tcontext.getScopeGroupId());\n\n\t\t\tDocument doc = SAXReaderUtil.read(data);\n\n\t\t\tElement root = doc.getRootElement();\n\n\t\t\tList<Element> folderEls = root.element(\"dl-folders\").elements(\n\t\t\t\t\"folder\");\n\n\t\t\tfor (Element dlFolderEl : folderEls) {\n\t\t\t\tDLPortletDataHandlerImpl.importFolder(context, dlFolderEl);\n\t\t\t}\n\n\t\t\tList<Element> fileEntryEls = root.element(\n\t\t\t\t\"dl-file-entries\").elements(\"file-entry\");\n\n\t\t\tfor (Element fileEntryEl : fileEntryEls) {\n\t\t\t\tDLPortletDataHandlerImpl.importFileEntry(context, fileEntryEl);\n\t\t\t}\n\n\t\t\tList<Element> fileRankEls = root.element(\"dl-file-ranks\").elements(\n\t\t\t\t\"file-rank\");\n\n\t\t\tfor (Element fileRankEl : fileRankEls) {\n\t\t\t\tDLPortletDataHandlerImpl.importFileRank(context, fileRankEl);\n\t\t\t}\n\n\t\t\tfolderEls = root.element(\"ig-folders\").elements(\"folder\");\n\n\t\t\tfor (Element folderEl : folderEls) {\n\t\t\t\tIGPortletDataHandlerImpl.importFolder(context, folderEl);\n\t\t\t}\n\n\t\t\tList<Element> imageEls = root.element(\"ig-images\").elements(\n\t\t\t\t\"image\");\n\n\t\t\tfor (Element imageEl : imageEls) {\n\t\t\t\tIGPortletDataHandlerImpl.importImage(context, imageEl);\n\t\t\t}\n\n\t\t\tList<Element> structureEls = root.element(\"structures\").elements(\n\t\t\t\t\"structure\");\n\n\t\t\tfor (Element structureEl : structureEls) {\n\t\t\t\timportStructure(context, structureEl);\n\t\t\t}\n\n\t\t\tList<Element> templateEls = root.element(\"templates\").elements(\n\t\t\t\t\"template\");\n\n\t\t\tfor (Element templateEl : templateEls) {\n\t\t\t\timportTemplate(context, templateEl);\n\t\t\t}\n\n\t\t\tList<Element> feedEls = root.element(\"feeds\").elements(\"feed\");\n\n\t\t\tfor (Element feedEl : feedEls) {\n\t\t\t\timportFeed(context, feedEl);\n\t\t\t}\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"articles\")) {\n\t\t\t\tList<Element> articleEls = root.element(\"articles\").elements(\n\t\t\t\t\t\"article\");\n\n\t\t\t\tfor (Element articleEl : articleEls) {\n\t\t\t\t\timportArticle(context, articleEl);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn preferences;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":54090,"modified_method":"protected PortletPreferences doImportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences preferences, String data)\n\t\tthrows Exception {\n\n\t\tcontext.importPermissions(\n\t\t\t\"com.liferay.portlet.journal\", context.getSourceGroupId(),\n\t\t\tcontext.getScopeGroupId());\n\n\t\tDocument document = SAXReaderUtil.read(data);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tElement dlFoldersElement = rootElement.element(\"dl-folders\");\n\n\t\tList<Element> dlFolderElements = dlFoldersElement.elements(\"folder\");\n\n\t\tfor (Element dlFolderElement : dlFolderElements) {\n\t\t\tDLPortletDataHandlerImpl.importFolder(context, dlFolderElement);\n\t\t}\n\n\t\tElement dlFileEntriesElement = rootElement.element(\"dl-file-entries\");\n\n\t\tList<Element> dlFileEntryElements = dlFileEntriesElement.elements(\n\t\t\t\"file-entry\");\n\n\t\tfor (Element dlFileEntryElement : dlFileEntryElements) {\n\t\t\tDLPortletDataHandlerImpl.importFileEntry(\n\t\t\t\tcontext, dlFileEntryElement);\n\t\t}\n\n\t\tElement dlFileRanksElement = rootElement.element(\"dl-file-ranks\");\n\n\t\tList<Element> dlFileRankElements = dlFileRanksElement.elements(\n\t\t\t\"file-rank\");\n\n\t\tfor (Element dlFileRankElement : dlFileRankElements) {\n\t\t\tDLPortletDataHandlerImpl.importFileRank(context, dlFileRankElement);\n\t\t}\n\n\t\tElement igFoldersElement = rootElement.element(\"ig-folders\");\n\n\t\tList<Element> igFolderElements = igFoldersElement.elements(\"folder\");\n\n\t\tfor (Element igFolderElement : igFolderElements) {\n\t\t\tIGPortletDataHandlerImpl.importFolder(context, igFolderElement);\n\t\t}\n\n\t\tElement igImagesElement = rootElement.element(\"ig-images\");\n\n\t\tList<Element> igImageElements = igImagesElement.elements(\"image\");\n\n\t\tfor (Element igImageElement : igImageElements) {\n\t\t\tIGPortletDataHandlerImpl.importImage(context, igImageElement);\n\t\t}\n\n\t\tElement structuresElement = rootElement.element(\"structures\");\n\n\t\tList<Element> structureElements = structuresElement.elements(\n\t\t\t\"structure\");\n\n\t\tfor (Element structureElement : structureElements) {\n\t\t\timportStructure(context, structureElement);\n\t\t}\n\n\t\tElement templatesElement = rootElement.element(\"templates\");\n\n\t\tList<Element> templateElements = templatesElement.elements(\"template\");\n\n\t\tfor (Element templateElement : templateElements) {\n\t\t\timportTemplate(context, templateElement);\n\t\t}\n\n\t\tElement feedsElement = rootElement.element(\"feeds\");\n\n\t\tList<Element> feedElements = feedsElement.elements(\"feed\");\n\n\t\tfor (Element feedElement : feedElements) {\n\t\t\timportFeed(context, feedElement);\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"articles\")) {\n\t\t\tElement articlesElement = rootElement.element(\"articles\");\n\n\t\t\tList<Element> articleElements = articlesElement.elements(\"article\");\n\n\t\t\tfor (Element articleElement : articleElements) {\n\t\t\t\timportArticle(context, articleElement);\n\t\t\t}\n\t\t}\n\n\t\treturn preferences;\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static void importStructure(\n\t\t\tPortletDataContext context,\tElement structureEl)\n\t\tthrows Exception {\n\n\t\tString path = structureEl.attributeValue(\"path\");\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJournalStructure structure =\n\t\t\t(JournalStructure)context.getZipEntryAsObject(path);\n\n\t\tlong userId = context.getUserId(structure.getUserUuid());\n\t\tlong groupId = context.getScopeGroupId();\n\n\t\tString structureId = structure.getStructureId();\n\t\tboolean autoStructureId = false;\n\n\t\tif ((Validator.isNumber(structureId)) ||\n\t\t\t(JournalStructureUtil.fetchByG_S(groupId, structureId) != null)) {\n\n\t\t\tautoStructureId = true;\n\t\t}\n\n\t\tJournalCreationStrategy creationStrategy =\n\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\tlong authorId = creationStrategy.getAuthorUserId(context, structure);\n\n\t\tif (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\tuserId = authorId;\n\t\t}\n\n\t\tboolean addCommunityPermissions =\n\t\t\tcreationStrategy.addCommunityPermissions(context, structure);\n\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\tcontext, structure);\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddCommunityPermissions(addCommunityPermissions);\n\t\tserviceContext.setAddGuestPermissions(addGuestPermissions);\n\t\tserviceContext.setCreateDate(structure.getCreateDate());\n\t\tserviceContext.setModifiedDate(structure.getModifiedDate());\n\n\t\tJournalStructure existingStructure = null;\n\n\t\tif (context.isDataStrategyMirror()) {\n\t\t\texistingStructure = JournalStructureUtil.fetchByUUID_G(\n\t\t\t\tstructure.getUuid(), groupId);\n\n\t\t\tif (existingStructure == null) {\n\t\t\t\tserviceContext.setUuid(structure.getUuid());\n\n\t\t\t\texistingStructure =\n\t\t\t\t\tJournalStructureLocalServiceUtil.addStructure(\n\t\t\t\t\t\tuserId, groupId, structureId, autoStructureId,\n\t\t\t\t\t\tstructure.getParentStructureId(), structure.getName(),\n\t\t\t\t\t\tstructure.getDescription(), structure.getXsd(),\n\t\t\t\t\t\tserviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingStructure =\n\t\t\t\t\tJournalStructureLocalServiceUtil.updateStructure(\n\t\t\t\t\t\texistingStructure.getGroupId(),\n\t\t\t\t\t\texistingStructure.getStructureId(),\n\t\t\t\t\t\tstructure.getParentStructureId(), structure.getName(),\n\t\t\t\t\t\tstructure.getDescription(), structure.getXsd(),\n\t\t\t\t\t\tserviceContext);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\texistingStructure = JournalStructureLocalServiceUtil.addStructure(\n\t\t\t\tuserId, groupId, structureId, autoStructureId,\n\t\t\t\tstructure.getParentStructureId(), structure.getName(),\n\t\t\t\tstructure.getDescription(), structure.getXsd(), serviceContext);\n\t\t}\n\n\t\tMap<String, String> structureIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalStructure.class);\n\n\t\tstructureIds.put(structureId, existingStructure.getStructureId());\n\n\t\tcontext.importPermissions(\n\t\t\tJournalStructure.class, structure.getId(),\n\t\t\texistingStructure.getId());\n\n\t\tif (!structureId.equals(existingStructure.getStructureId())) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"A structure with the ID \" + structureId + \" already \" +\n\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\texistingStructure.getStructureId());\n\t\t\t}\n\t\t}\n\t}","id":54091,"modified_method":"protected static void importStructure(\n\t\t\tPortletDataContext context,\tElement structureElement)\n\t\tthrows Exception {\n\n\t\tString path = structureElement.attributeValue(\"path\");\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tJournalStructure structure =\n\t\t\t(JournalStructure)context.getZipEntryAsObject(path);\n\n\t\tlong userId = context.getUserId(structure.getUserUuid());\n\n\t\tString structureId = structure.getStructureId();\n\t\tboolean autoStructureId = false;\n\n\t\tif ((Validator.isNumber(structureId)) ||\n\t\t\t(JournalStructureUtil.fetchByG_S(\n\t\t\t\tcontext.getScopeGroupId(), structureId) != null)) {\n\n\t\t\tautoStructureId = true;\n\t\t}\n\n\t\tJournalCreationStrategy creationStrategy =\n\t\t\tJournalCreationStrategyFactory.getInstance();\n\n\t\tlong authorId = creationStrategy.getAuthorUserId(context, structure);\n\n\t\tif (authorId != JournalCreationStrategy.USE_DEFAULT_USER_ID_STRATEGY) {\n\t\t\tuserId = authorId;\n\t\t}\n\n\t\tboolean addCommunityPermissions =\n\t\t\tcreationStrategy.addCommunityPermissions(context, structure);\n\t\tboolean addGuestPermissions = creationStrategy.addGuestPermissions(\n\t\t\tcontext, structure);\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddCommunityPermissions(addCommunityPermissions);\n\t\tserviceContext.setAddGuestPermissions(addGuestPermissions);\n\t\tserviceContext.setCreateDate(structure.getCreateDate());\n\t\tserviceContext.setModifiedDate(structure.getModifiedDate());\n\n\t\tJournalStructure existingStructure = null;\n\n\t\tif (context.isDataStrategyMirror()) {\n\t\t\texistingStructure = JournalStructureUtil.fetchByUUID_G(\n\t\t\t\tstructure.getUuid(), context.getScopeGroupId());\n\n\t\t\tif (existingStructure == null) {\n\t\t\t\tserviceContext.setUuid(structure.getUuid());\n\n\t\t\t\texistingStructure =\n\t\t\t\t\tJournalStructureLocalServiceUtil.addStructure(\n\t\t\t\t\t\tuserId, context.getScopeGroupId(), structureId,\n\t\t\t\t\t\tautoStructureId, structure.getParentStructureId(),\n\t\t\t\t\t\tstructure.getName(), structure.getDescription(),\n\t\t\t\t\t\tstructure.getXsd(), serviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\texistingStructure =\n\t\t\t\t\tJournalStructureLocalServiceUtil.updateStructure(\n\t\t\t\t\t\texistingStructure.getGroupId(),\n\t\t\t\t\t\texistingStructure.getStructureId(),\n\t\t\t\t\t\tstructure.getParentStructureId(), structure.getName(),\n\t\t\t\t\t\tstructure.getDescription(), structure.getXsd(),\n\t\t\t\t\t\tserviceContext);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\texistingStructure = JournalStructureLocalServiceUtil.addStructure(\n\t\t\t\tuserId, context.getScopeGroupId(), structureId, autoStructureId,\n\t\t\t\tstructure.getParentStructureId(), structure.getName(),\n\t\t\t\tstructure.getDescription(), structure.getXsd(), serviceContext);\n\t\t}\n\n\t\tMap<String, String> structureIds =\n\t\t\t(Map<String, String>)context.getNewPrimaryKeysMap(\n\t\t\t\tJournalStructure.class);\n\n\t\tstructureIds.put(structureId, existingStructure.getStructureId());\n\n\t\tcontext.importPermissions(\n\t\t\tJournalStructure.class, structure.getId(),\n\t\t\texistingStructure.getId());\n\n\t\tif (!structureId.equals(existingStructure.getStructureId())) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"A structure with the ID \" + structureId + \" already \" +\n\t\t\t\t\t\t\"exists. The new generated ID is \" +\n\t\t\t\t\t\t\texistingStructure.getStructureId());\n\t\t\t}\n\t\t}\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void exportArticle(\n\t\t\tPortletDataContext context, Element articlesEl, Element dlFoldersEl,\n\t\t\tElement dlFileEntriesEl, Element dlFileRanksEl, Element igFoldersEl,\n\t\t\tElement igImagesEl, JournalArticle article)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!context.isWithinDateRange(article.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (article.getStatus() != WorkflowConstants.STATUS_APPROVED) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getArticlePath(context, article);\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clone this article to make sure changes to its content are never\n\t\t// persisted\n\n\t\tarticle = (JournalArticle)article.clone();\n\n\t\tElement articleEl = articlesEl.addElement(\"article\");\n\n\t\tarticleEl.addAttribute(\"path\", path);\n\n\t\tImage smallImage = ImageUtil.fetchByPrimaryKey(\n\t\t\tarticle.getSmallImageId());\n\n\t\tif (article.isSmallImage() && (smallImage != null)) {\n\t\t\tString smallImagePath = getArticleSmallImagePath(context, article);\n\n\t\t\tarticleEl.addAttribute(\"small-image-path\", smallImagePath);\n\n\t\t\tarticle.setSmallImageType(smallImage.getType());\n\n\t\t\tcontext.addZipEntry(smallImagePath, smallImage.getTextObj());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"images\")) {\n\t\t\tString imagePath = getArticleImagePath(context, article);\n\n\t\t\tarticleEl.addAttribute(\"image-path\", imagePath);\n\n\t\t\tList<JournalArticleImage> articleImages =\n\t\t\t\tJournalArticleImageUtil.findByG_A_V(\n\t\t\t\t\tarticle.getGroupId(), article.getArticleId(),\n\t\t\t\t\tarticle.getVersion());\n\n\t\t\tfor (JournalArticleImage articleImage : articleImages) {\n\t\t\t\ttry {\n\t\t\t\t\tImage image = ImageUtil.findByPrimaryKey(\n\t\t\t\t\t\tarticleImage.getArticleImageId());\n\n\t\t\t\t\tString articleImagePath = getArticleImagePath(\n\t\t\t\t\t\tcontext, article, articleImage, image);\n\n\t\t\t\t\tif (!context.isPathNotProcessed(articleImagePath)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.addZipEntry(articleImagePath, image.getTextObj());\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchImageException nsie) {\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcontext.addPermissions(\n\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"categories\")) {\n\t\t\tcontext.addAssetCategories(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"comments\")) {\n\t\t\tcontext.addComments(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\tcontext.addRatingsEntries(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\tcontext.addAssetTags(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"embedded-assets\")) {\n\t\t\tString content = article.getContent();\n\n\t\t\tcontent = exportDLFileEntries(\n\t\t\t\tcontext, dlFoldersEl, dlFileEntriesEl, dlFileRanksEl, articleEl,\n\t\t\t\tcontent);\n\t\t\tcontent = exportIGImages(\n\t\t\t\tcontext, igFoldersEl, igImagesEl, articleEl, content);\n\t\t\tcontent = exportLayoutFriendlyURLs(context, content);\n\n\t\t\tarticle.setContent(content);\n\t\t}\n\n\t\tarticle.setUserUuid(article.getUserUuid());\n\t\tarticle.setStatusByUserUuid(article.getStatusByUserUuid());\n\n\t\tcontext.addZipEntry(path, article);\n\t}","id":54092,"modified_method":"protected static void exportArticle(\n\t\t\tPortletDataContext context, Element articlesElement,\n\t\t\tElement dlFoldersElement, Element dlFileEntriesElement,\n\t\t\tElement dlFileRanksElement, Element igFoldersElement,\n\t\t\tElement igImagesElement, JournalArticle article)\n\t\tthrows Exception {\n\n\t\tif (!context.isWithinDateRange(article.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (article.getStatus() != WorkflowConstants.STATUS_APPROVED) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getArticlePath(context, article);\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clone this article to make sure changes to its content are never\n\t\t// persisted\n\n\t\tarticle = (JournalArticle)article.clone();\n\n\t\tElement articleElement = articlesElement.addElement(\"article\");\n\n\t\tarticleElement.addAttribute(\"path\", path);\n\n\t\tImage smallImage = ImageUtil.fetchByPrimaryKey(\n\t\t\tarticle.getSmallImageId());\n\n\t\tif (article.isSmallImage() && (smallImage != null)) {\n\t\t\tString smallImagePath = getArticleSmallImagePath(context, article);\n\n\t\t\tarticleElement.addAttribute(\"small-image-path\", smallImagePath);\n\n\t\t\tarticle.setSmallImageType(smallImage.getType());\n\n\t\t\tcontext.addZipEntry(smallImagePath, smallImage.getTextObj());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"images\")) {\n\t\t\tString imagePath = getArticleImagePath(context, article);\n\n\t\t\tarticleElement.addAttribute(\"image-path\", imagePath);\n\n\t\t\tList<JournalArticleImage> articleImages =\n\t\t\t\tJournalArticleImageUtil.findByG_A_V(\n\t\t\t\t\tarticle.getGroupId(), article.getArticleId(),\n\t\t\t\t\tarticle.getVersion());\n\n\t\t\tfor (JournalArticleImage articleImage : articleImages) {\n\t\t\t\tImage image = null;\n\n\t\t\t\ttry {\n\t\t\t\t\timage = ImageUtil.findByPrimaryKey(\n\t\t\t\t\t\tarticleImage.getArticleImageId());\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchImageException nsie) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tString articleImagePath = getArticleImagePath(\n\t\t\t\t\tcontext, article, articleImage, image);\n\n\t\t\t\tif (!context.isPathNotProcessed(articleImagePath)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tcontext.addZipEntry(articleImagePath, image.getTextObj());\n\t\t\t}\n\t\t}\n\n\t\tcontext.addPermissions(\n\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"categories\")) {\n\t\t\tcontext.addAssetCategories(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"comments\")) {\n\t\t\tcontext.addComments(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"ratings\")) {\n\t\t\tcontext.addRatingsEntries(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"tags\")) {\n\t\t\tcontext.addAssetTags(\n\t\t\t\tJournalArticle.class, article.getResourcePrimKey());\n\t\t}\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"embedded-assets\")) {\n\t\t\tString content = article.getContent();\n\n\t\t\tcontent = exportDLFileEntries(\n\t\t\t\tcontext, dlFoldersElement, dlFileEntriesElement,\n\t\t\t\tdlFileRanksElement, articleElement, content);\n\t\t\tcontent = exportIGImages(\n\t\t\t\tcontext, igFoldersElement, igImagesElement, articleElement,\n\t\t\t\tcontent);\n\t\t\tcontent = exportLayoutFriendlyURLs(context, content);\n\n\t\t\tarticle.setContent(content);\n\t\t}\n\n\t\tarticle.setUserUuid(article.getUserUuid());\n\t\tarticle.setStatusByUserUuid(article.getStatusByUserUuid());\n\n\t\tcontext.addZipEntry(path, article);\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String importIGImages(\n\t\t\tPortletDataContext context, Element parentEl, String content)\n\t\tthrows SystemException {\n\n\t\tMap<Long, Long> imagePKs =\n\t\t\t(Map<Long, Long>)context.getNewPrimaryKeysMap(IGImage.class);\n\n\t\tList<Element> igReferenceEls = parentEl.elements(\"ig-reference\");\n\n\t\tfor (Element igReferenceEl : igReferenceEls) {\n\t\t\tString igReferencePath = igReferenceEl.attributeValue(\"path\");\n\n\t\t\tIGImage image = (IGImage)context.getZipEntryAsObject(\n\t\t\t\tigReferencePath);\n\n\t\t\tif (image == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlong imageId = MapUtil.getLong(\n\t\t\t\timagePKs, image.getImageId(), image.getImageId());\n\n\t\t\timage = IGImageUtil.fetchByPrimaryKey(imageId);\n\n\t\t\tif (image == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString igReference = \"[$ig-reference=\" + igReferencePath + \"$]\";\n\n\t\t\tStringBundler sb = new StringBundler(6);\n\n\t\t\tsb.append(\"/image/image_gallery?uuid=\");\n\t\t\tsb.append(image.getUuid());\n\t\t\tsb.append(\"&groupId=\");\n\t\t\tsb.append(context.getScopeGroupId());\n\t\t\tsb.append(\"&t=\");\n\t\t\tsb.append(System.currentTimeMillis());\n\n\t\t\tcontent = StringUtil.replace(content, igReference, sb.toString());\n\t\t}\n\n\t\treturn content;\n\t}","id":54093,"modified_method":"protected static String importIGImages(\n\t\t\tPortletDataContext context, Element parentElement, String content)\n\t\tthrows Exception {\n\n\t\tMap<Long, Long> imagePKs =\n\t\t\t(Map<Long, Long>)context.getNewPrimaryKeysMap(IGImage.class);\n\n\t\tList<Element> igReferenceElements = parentElement.elements(\n\t\t\t\"ig-reference\");\n\n\t\tfor (Element igReferenceElement : igReferenceElements) {\n\t\t\tString igReferencePath = igReferenceElement.attributeValue(\"path\");\n\n\t\t\tIGImage image = (IGImage)context.getZipEntryAsObject(\n\t\t\t\tigReferencePath);\n\n\t\t\tif (image == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlong imageId = MapUtil.getLong(\n\t\t\t\timagePKs, image.getImageId(), image.getImageId());\n\n\t\t\timage = IGImageUtil.fetchByPrimaryKey(imageId);\n\n\t\t\tif (image == null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString igReference = \"[$ig-reference=\" + igReferencePath + \"$]\";\n\n\t\t\tStringBundler sb = new StringBundler(6);\n\n\t\t\tsb.append(\"/image/image_gallery?uuid=\");\n\t\t\tsb.append(image.getUuid());\n\t\t\tsb.append(\"&groupId=\");\n\t\t\tsb.append(context.getScopeGroupId());\n\t\t\tsb.append(\"&t=\");\n\t\t\tsb.append(System.currentTimeMillis());\n\n\t\t\tcontent = StringUtil.replace(content, igReference, sb.toString());\n\t\t}\n\n\t\treturn content;\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String exportIGImages(\n\t\tPortletDataContext context, Element foldersEl, Element imagesEl,\n\t\tElement entityEl, String content) {\n\n\t\tStringBuilder sb = new StringBuilder(content);\n\n\t\tint beginPos = content.length();\n\n\t\twhile (true) {\n\t\t\tbeginPos = content.lastIndexOf(\"/image/image_gallery?\", beginPos);\n\n\t\t\tif (beginPos == -1) {\n\t\t\t\treturn sb.toString();\n\t\t\t}\n\n\t\t\tint endPos1 = content.indexOf(StringPool.APOSTROPHE, beginPos);\n\t\t\tint endPos2 = content.indexOf(StringPool.CLOSE_BRACKET, beginPos);\n\t\t\tint endPos3 = content.indexOf(\n\t\t\t\tStringPool.CLOSE_PARENTHESIS, beginPos);\n\t\t\tint endPos4 = content.indexOf(StringPool.LESS_THAN, beginPos);\n\t\t\tint endPos5 = content.indexOf(StringPool.QUOTE, beginPos);\n\t\t\tint endPos6 = content.indexOf(StringPool.SPACE, beginPos);\n\n\t\t\tint endPos = endPos1;\n\n\t\t\tif ((endPos == -1) || ((endPos2 != -1) && (endPos2 < endPos))) {\n\t\t\t\tendPos = endPos2;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos3 != -1) && (endPos3 < endPos))) {\n\t\t\t\tendPos = endPos3;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos4 != -1) && (endPos4 < endPos))) {\n\t\t\t\tendPos = endPos4;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos5 != -1) && (endPos5 < endPos))) {\n\t\t\t\tendPos = endPos5;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos6 != -1) && (endPos6 < endPos))) {\n\t\t\t\tendPos = endPos6;\n\t\t\t}\n\n\t\t\tif ((beginPos == -1) || (endPos == -1)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tString oldParameters = content.substring(beginPos, endPos);\n\n\t\t\t\toldParameters = oldParameters.substring(\n\t\t\t\t\toldParameters.indexOf(StringPool.QUESTION) + 1);\n\n\t\t\t\twhile (oldParameters.contains(StringPool.AMPERSAND_ENCODED)) {\n\t\t\t\t\toldParameters = oldParameters.replace(\n\t\t\t\t\t\tStringPool.AMPERSAND_ENCODED, StringPool.AMPERSAND);\n\t\t\t\t}\n\n\t\t\t\tMap<String, String> map = MapUtil.toLinkedHashMap(\n\t\t\t\t\toldParameters.split(StringPool.AMPERSAND),\n\t\t\t\t\tStringPool.EQUAL);\n\n\t\t\t\tIGImage image = null;\n\n\t\t\t\tif (map.containsKey(\"uuid\")) {\n\t\t\t\t\tString uuid = map.get(\"uuid\");\n\n\t\t\t\t\tString groupIdString = map.get(\"groupId\");\n\n\t\t\t\t\tlong groupId = GetterUtil.getLong(groupIdString);\n\n\t\t\t\t\tif (groupIdString.equals(\"@group_id@\")) {\n\t\t\t\t\t\tgroupId = context.getScopeGroupId();\n\t\t\t\t\t}\n\n\t\t\t\t\timage = IGImageLocalServiceUtil.getImageByUuidAndGroupId(\n\t\t\t\t\t\tuuid, groupId);\n\t\t\t\t}\n\t\t\t\telse if (map.containsKey(\"image_id\") ||\n\t\t\t\t\t\t map.containsKey(\"img_id\") ||\n\t\t\t\t\t\t map.containsKey(\"i_id\")) {\n\n\t\t\t\t\tlong imageId = GetterUtil.getLong(map.get(\"image_id\"));\n\n\t\t\t\t\tif (imageId <= 0) {\n\t\t\t\t\t\timageId = GetterUtil.getLong(map.get(\"img_id\"));\n\n\t\t\t\t\t\tif (imageId <= 0) {\n\t\t\t\t\t\t\timageId = GetterUtil.getLong(map.get(\"i_id\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\timage = IGImageLocalServiceUtil.getImageByLargeImageId(\n\t\t\t\t\t\t\timageId);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t\timage = IGImageLocalServiceUtil.getImageBySmallImageId(\n\t\t\t\t\t\t\timageId);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (image == null) {\n\t\t\t\t\tbeginPos--;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tString path = IGPortletDataHandlerImpl.getImagePath(\n\t\t\t\t\tcontext, image);\n\n\t\t\t\tElement igReferenceEl = entityEl.addElement(\"ig-reference\");\n\n\t\t\t\tigReferenceEl.addAttribute(\"path\", path);\n\n\t\t\t\tIGPortletDataHandlerImpl.exportImage(\n\t\t\t\t\tcontext, foldersEl, imagesEl, image);\n\n\t\t\t\tString igReference = \"[$ig-reference=\" + path + \"$]\";\n\n\t\t\t\tsb.replace(beginPos, endPos, igReference);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbeginPos--;\n\t\t}\n\n\t\treturn sb.toString();\n\t}","id":54094,"modified_method":"protected static String exportIGImages(\n\t\tPortletDataContext context, Element foldersElement,\n\t\tElement imagesElement, Element entityElement, String content) {\n\n\t\tStringBuilder sb = new StringBuilder(content);\n\n\t\tint beginPos = content.length();\n\n\t\twhile (true) {\n\t\t\tbeginPos = content.lastIndexOf(\"/image/image_gallery?\", beginPos);\n\n\t\t\tif (beginPos == -1) {\n\t\t\t\treturn sb.toString();\n\t\t\t}\n\n\t\t\tint endPos1 = content.indexOf(StringPool.APOSTROPHE, beginPos);\n\t\t\tint endPos2 = content.indexOf(StringPool.CLOSE_BRACKET, beginPos);\n\t\t\tint endPos3 = content.indexOf(\n\t\t\t\tStringPool.CLOSE_PARENTHESIS, beginPos);\n\t\t\tint endPos4 = content.indexOf(StringPool.LESS_THAN, beginPos);\n\t\t\tint endPos5 = content.indexOf(StringPool.QUOTE, beginPos);\n\t\t\tint endPos6 = content.indexOf(StringPool.SPACE, beginPos);\n\n\t\t\tint endPos = endPos1;\n\n\t\t\tif ((endPos == -1) || ((endPos2 != -1) && (endPos2 < endPos))) {\n\t\t\t\tendPos = endPos2;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos3 != -1) && (endPos3 < endPos))) {\n\t\t\t\tendPos = endPos3;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos4 != -1) && (endPos4 < endPos))) {\n\t\t\t\tendPos = endPos4;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos5 != -1) && (endPos5 < endPos))) {\n\t\t\t\tendPos = endPos5;\n\t\t\t}\n\n\t\t\tif ((endPos == -1) || ((endPos6 != -1) && (endPos6 < endPos))) {\n\t\t\t\tendPos = endPos6;\n\t\t\t}\n\n\t\t\tif ((beginPos == -1) || (endPos == -1)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tString oldParameters = content.substring(beginPos, endPos);\n\n\t\t\t\toldParameters = oldParameters.substring(\n\t\t\t\t\toldParameters.indexOf(StringPool.QUESTION) + 1);\n\n\t\t\t\twhile (oldParameters.contains(StringPool.AMPERSAND_ENCODED)) {\n\t\t\t\t\toldParameters = oldParameters.replace(\n\t\t\t\t\t\tStringPool.AMPERSAND_ENCODED, StringPool.AMPERSAND);\n\t\t\t\t}\n\n\t\t\t\tMap<String, String> map = MapUtil.toLinkedHashMap(\n\t\t\t\t\toldParameters.split(StringPool.AMPERSAND),\n\t\t\t\t\tStringPool.EQUAL);\n\n\t\t\t\tIGImage image = null;\n\n\t\t\t\tif (map.containsKey(\"uuid\")) {\n\t\t\t\t\tString uuid = map.get(\"uuid\");\n\n\t\t\t\t\tString groupIdString = map.get(\"groupId\");\n\n\t\t\t\t\tlong groupId = GetterUtil.getLong(groupIdString);\n\n\t\t\t\t\tif (groupIdString.equals(\"@group_id@\")) {\n\t\t\t\t\t\tgroupId = context.getScopeGroupId();\n\t\t\t\t\t}\n\n\t\t\t\t\timage = IGImageLocalServiceUtil.getImageByUuidAndGroupId(\n\t\t\t\t\t\tuuid, groupId);\n\t\t\t\t}\n\t\t\t\telse if (map.containsKey(\"image_id\") ||\n\t\t\t\t\t\t map.containsKey(\"img_id\") ||\n\t\t\t\t\t\t map.containsKey(\"i_id\")) {\n\n\t\t\t\t\tlong imageId = GetterUtil.getLong(map.get(\"image_id\"));\n\n\t\t\t\t\tif (imageId <= 0) {\n\t\t\t\t\t\timageId = GetterUtil.getLong(map.get(\"img_id\"));\n\n\t\t\t\t\t\tif (imageId <= 0) {\n\t\t\t\t\t\t\timageId = GetterUtil.getLong(map.get(\"i_id\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\timage = IGImageLocalServiceUtil.getImageByLargeImageId(\n\t\t\t\t\t\t\timageId);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t\timage = IGImageLocalServiceUtil.getImageBySmallImageId(\n\t\t\t\t\t\t\timageId);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (image == null) {\n\t\t\t\t\tbeginPos--;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tString path = IGPortletDataHandlerImpl.getImagePath(\n\t\t\t\t\tcontext, image);\n\n\t\t\t\tElement igReferenceElement = entityElement.addElement(\n\t\t\t\t\t\"ig-reference\");\n\n\t\t\t\tigReferenceElement.addAttribute(\"path\", path);\n\n\t\t\t\tIGPortletDataHandlerImpl.exportImage(\n\t\t\t\t\tcontext, foldersElement, imagesElement, image);\n\n\t\t\t\tString igReference = \"[$ig-reference=\" + path + \"$]\";\n\n\t\t\t\tsb.replace(beginPos, endPos, igReference);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbeginPos--;\n\t\t}\n\n\t\treturn sb.toString();\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String exportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences preferences)\n\t\tthrows PortletDataException {\n\n\t\ttry {\n\t\t\tlong groupId = context.getScopeGroupId();\n\n\t\t\tcontext.addPermissions(\"com.liferay.portlet.journal\", groupId);\n\n\t\t\tDocument doc = SAXReaderUtil.createDocument();\n\n\t\t\tElement root = doc.addElement(\"journal-data\");\n\n\t\t\troot.addAttribute(\"group-id\", String.valueOf(groupId));\n\n\t\t\tElement structuresEl = root.addElement(\"structures\");\n\n\t\t\tList<JournalStructure> structures =\n\t\t\t\tJournalStructureUtil.findByGroupId(groupId);\n\n\t\t\tfor (JournalStructure structure : structures) {\n\t\t\t\texportStructure(context, structuresEl, structure);\n\t\t\t}\n\n\t\t\tElement templatesEl = root.addElement(\"templates\");\n\t\t\tElement dlFoldersEl = root.addElement(\"dl-folders\");\n\t\t\tElement dlFilesEl = root.addElement(\"dl-file-entries\");\n\t\t\tElement dlFileRanksEl = root.addElement(\"dl-file-ranks\");\n\t\t\tElement igFoldersEl = root.addElement(\"ig-folders\");\n\t\t\tElement igImagesEl = root.addElement(\"ig-images\");\n\n\t\t\tList<JournalTemplate> templates = JournalTemplateUtil.findByGroupId(\n\t\t\t\tgroupId);\n\n\t\t\tfor (JournalTemplate template : templates) {\n\t\t\t\texportTemplate(\n\t\t\t\t\tcontext, templatesEl, dlFoldersEl, dlFilesEl, dlFileRanksEl,\n\t\t\t\t\tigFoldersEl, igImagesEl, template);\n\t\t\t}\n\n\t\t\tElement feedsEl = root.addElement(\"feeds\");\n\n\t\t\tList<JournalFeed> feeds = JournalFeedUtil.findByGroupId(groupId);\n\n\t\t\tfor (JournalFeed feed : feeds) {\n\t\t\t\tif (context.isWithinDateRange(feed.getModifiedDate())) {\n\t\t\t\t\texportFeed(context, feedsEl, feed);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tElement articlesEl = root.addElement(\"articles\");\n\n\t\t\tif (context.getBooleanParameter(_NAMESPACE, \"articles\")) {\n\t\t\t\tList<JournalArticle> articles =\n\t\t\t\t\tJournalArticleUtil.findByG_ST(\n\t\t\t\t\t\tgroupId, WorkflowConstants.STATUS_APPROVED,\n\t\t\t\t\t\tQueryUtil.ALL_POS, QueryUtil.ALL_POS,\n\t\t\t\t\t\tnew ArticleIDComparator(true));\n\n\t\t\t\tfor (JournalArticle article : articles) {\n\t\t\t\t\texportArticle(\n\t\t\t\t\t\tcontext, articlesEl, dlFoldersEl, dlFilesEl,\n\t\t\t\t\t\tdlFileRanksEl, igFoldersEl, igImagesEl, article);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn doc.formattedString();\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new PortletDataException(e);\n\t\t}\n\t}","id":54095,"modified_method":"protected String doExportData(\n\t\t\tPortletDataContext context, String portletId,\n\t\t\tPortletPreferences preferences)\n\t\tthrows Exception {\n\n\t\tcontext.addPermissions(\n\t\t\t\"com.liferay.portlet.journal\", context.getScopeGroupId());\n\n\t\tDocument document = SAXReaderUtil.createDocument();\n\n\t\tElement rootElement = document.addElement(\"journal-data\");\n\n\t\trootElement.addAttribute(\n\t\t\t\"group-id\", String.valueOf(context.getScopeGroupId()));\n\n\t\tElement structuresElement = rootElement.addElement(\"structures\");\n\n\t\tList<JournalStructure> structures =\n\t\t\tJournalStructureUtil.findByGroupId(context.getScopeGroupId());\n\n\t\tfor (JournalStructure structure : structures) {\n\t\t\texportStructure(context, structuresElement, structure);\n\t\t}\n\n\t\tElement templatesElement = rootElement.addElement(\"templates\");\n\t\tElement dlFoldersElement = rootElement.addElement(\"dl-folders\");\n\t\tElement dlFilesElement = rootElement.addElement(\"dl-file-entries\");\n\t\tElement dlFileRanksElement = rootElement.addElement(\"dl-file-ranks\");\n\t\tElement igFoldersElement = rootElement.addElement(\"ig-folders\");\n\t\tElement igImagesElement = rootElement.addElement(\"ig-images\");\n\n\t\tList<JournalTemplate> templates = JournalTemplateUtil.findByGroupId(\n\t\t\tcontext.getScopeGroupId());\n\n\t\tfor (JournalTemplate template : templates) {\n\t\t\texportTemplate(\n\t\t\t\tcontext, templatesElement, dlFoldersElement, dlFilesElement,\n\t\t\t\tdlFileRanksElement, igFoldersElement, igImagesElement,\n\t\t\t\ttemplate);\n\t\t}\n\n\t\tElement feedsElement = rootElement.addElement(\"feeds\");\n\n\t\tList<JournalFeed> feeds = JournalFeedUtil.findByGroupId(\n\t\t\tcontext.getScopeGroupId());\n\n\t\tfor (JournalFeed feed : feeds) {\n\t\t\tif (context.isWithinDateRange(feed.getModifiedDate())) {\n\t\t\t\texportFeed(context, feedsElement, feed);\n\t\t\t}\n\t\t}\n\n\t\tElement articlesElement = rootElement.addElement(\"articles\");\n\n\t\tif (context.getBooleanParameter(_NAMESPACE, \"articles\")) {\n\t\t\tList<JournalArticle> articles = JournalArticleUtil.findByG_ST(\n\t\t\t\tcontext.getScopeGroupId(), WorkflowConstants.STATUS_APPROVED,\n\t\t\t\tQueryUtil.ALL_POS, QueryUtil.ALL_POS,\n\t\t\t\tnew ArticleIDComparator(true));\n\n\t\t\tfor (JournalArticle article : articles) {\n\t\t\t\texportArticle(\n\t\t\t\t\tcontext, articlesElement, dlFoldersElement, dlFilesElement,\n\t\t\t\t\tdlFileRanksElement, igFoldersElement, igImagesElement,\n\t\t\t\t\tarticle);\n\t\t\t}\n\t\t}\n\n\t\treturn document.formattedString();\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static void exportFeed(\n\t\t\tPortletDataContext context, Element feedsEl, JournalFeed feed)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (!context.isWithinDateRange(feed.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getFeedPath(context, feed);\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tElement feedEl = feedsEl.addElement(\"feed\");\n\n\t\tfeedEl.addAttribute(\"path\", path);\n\n\t\tfeed.setUserUuid(feed.getUserUuid());\n\n\t\tcontext.addPermissions(JournalFeed.class, feed.getId());\n\n\t\tcontext.addZipEntry(path, feed);\n\t}","id":54096,"modified_method":"protected static void exportFeed(\n\t\t\tPortletDataContext context, Element feedsElement, JournalFeed feed)\n\t\tthrows Exception {\n\n\t\tif (!context.isWithinDateRange(feed.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getFeedPath(context, feed);\n\n\t\tif (!context.isPathNotProcessed(path)) {\n\t\t\treturn;\n\t\t}\n\n\t\tElement feedElement = feedsElement.addElement(\"feed\");\n\n\t\tfeedElement.addAttribute(\"path\", path);\n\n\t\tfeed.setUserUuid(feed.getUserUuid());\n\n\t\tcontext.addPermissions(JournalFeed.class, feed.getId());\n\n\t\tcontext.addZipEntry(path, feed);\n\t}","commit_id":"f5a77067499c5d08e72fde7a359d3159a5c4519d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void deleteThreads(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString deleteThreadIds =\n\t\t\tParamUtil.getString(actionRequest, \"threadIds\");\n\n\t\tif (Validator.isNotNull(deleteThreadIds)) {\n\t\t\tlong[] threadIds = StringUtil.split(deleteThreadIds, 0L);\n\n\t\t\tfor (int i = 0; i < threadIds.length; i++) {\n\t\t\t\tMBThreadServiceUtil.deleteThread(threadIds[i]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlong threadId = ParamUtil.getLong(actionRequest, \"threadId\");\n\n\t\t\tMBThreadServiceUtil.deleteThread(threadId);\n\t\t}\n\t}","id":54097,"modified_method":"protected void deleteThreads(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tlong threadId = ParamUtil.getLong(actionRequest, \"threadId\");\n\n\t\tif (threadId > 0) {\n\t\t\tMBThreadServiceUtil.deleteThread(threadId);\n\t\t}\n\t\telse {\n\t\t\tlong[] deleteThreadIds = StringUtil.split(\n\t\t\t\tParamUtil.getString(actionRequest, \"deleteThreadIds\"), 0L);\n\n\t\t\tfor (int i = 0; i < deleteThreadIds.length; i++) {\n\t\t\t\tMBThreadServiceUtil.deleteThread(deleteThreadIds[i]);\n\t\t\t}\n\t\t}\n\t}","commit_id":"389374cc2f2ebdbad9b2961eaf069d85e90e7f0f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void deleteCategories(ActionRequest actionRequest)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong groupId = themeDisplay.getScopeGroupId();\n\n\t\tString deleteCategoryIds =\n\t\t\tParamUtil.getString(actionRequest, \"deleteCategoryIds\");\n\n\t\tif (Validator.isNotNull(deleteCategoryIds)) {\n\t\t\tlong[] categoryIds = StringUtil.split(deleteCategoryIds, 0L);\n\n\t\t\tfor (int i = 0; i < categoryIds.length; i++) {\n\t\t\t\tMBCategoryServiceUtil.deleteCategory(groupId, categoryIds[i]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlong categoryId = ParamUtil.getLong(actionRequest, \"mbCategoryId\");\n\n\t\t\tMBCategoryServiceUtil.deleteCategory(groupId, categoryId);\n\t\t}\n\t}","id":54098,"modified_method":"protected void deleteCategories(ActionRequest actionRequest)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong categoryId = ParamUtil.getLong(actionRequest, \"mbCategoryId\");\n\n\t\tif (categoryId > 0) {\n\t\t\tMBCategoryServiceUtil.deleteCategory(\n\t\t\t\tthemeDisplay.getScopeGroupId(), categoryId);\n\t\t}\n\t\telse {\n\t\t\tlong[] deleteCategoryIds = StringUtil.split(\n\t\t\t\tParamUtil.getString(actionRequest, \"deleteCategoryIds\"), 0L);\n\n\t\t\tfor (int i = 0; i < deleteCategoryIds.length; i++) {\n\t\t\t\tMBCategoryServiceUtil.deleteCategory(\n\t\t\t\t\tthemeDisplay.getScopeGroupId(), deleteCategoryIds[i]);\n\t\t\t}\n\t\t}\n\t}","commit_id":"389374cc2f2ebdbad9b2961eaf069d85e90e7f0f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void unsubscribeCategory(ActionRequest actionRequest)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong groupId = themeDisplay.getScopeGroupId();\n\t\tlong categoryId = ParamUtil.getLong(actionRequest, \"mbCategoryId\");\n\n\t\tMBCategoryServiceUtil.unsubscribeCategory(groupId, categoryId);\n\t}","id":54099,"modified_method":"protected void unsubscribeCategory(ActionRequest actionRequest)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong categoryId = ParamUtil.getLong(actionRequest, \"mbCategoryId\");\n\n\t\tMBCategoryServiceUtil.unsubscribeCategory(\n\t\t\tthemeDisplay.getScopeGroupId(), categoryId);\n\t}","commit_id":"389374cc2f2ebdbad9b2961eaf069d85e90e7f0f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void subscribeCategory(ActionRequest actionRequest)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong groupId = themeDisplay.getScopeGroupId();\n\t\tlong categoryId = ParamUtil.getLong(actionRequest, \"mbCategoryId\");\n\n\t\tMBCategoryServiceUtil.subscribeCategory(groupId, categoryId);\n\t}","id":54100,"modified_method":"protected void subscribeCategory(ActionRequest actionRequest)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong categoryId = ParamUtil.getLong(actionRequest, \"mbCategoryId\");\n\n\t\tMBCategoryServiceUtil.subscribeCategory(\n\t\t\tthemeDisplay.getScopeGroupId(), categoryId);\n\t}","commit_id":"389374cc2f2ebdbad9b2961eaf069d85e90e7f0f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void unlockThreads(ActionRequest actionRequest) throws Exception {\n\t\tString unlockThreadIds =\n\t\t\tParamUtil.getString(actionRequest, \"threadIds\");\n\n\t\tif (Validator.isNotNull(unlockThreadIds)) {\n\t\t\tlong[] threadIds = StringUtil.split(unlockThreadIds, 0L);\n\n\t\t\tfor (int i = 0; i < threadIds.length; i++) {\n\t\t\t\tMBThreadServiceUtil.unlockThread(threadIds[i]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlong threadId = ParamUtil.getLong(actionRequest, \"threadId\");\n\n\t\t\tMBThreadServiceUtil.unlockThread(threadId);\n\t\t}\n\t}","id":54101,"modified_method":"protected void unlockThreads(ActionRequest actionRequest) throws Exception {\n\t\tlong threadId = ParamUtil.getLong(actionRequest, \"threadId\");\n\n\t\tif (threadId > 0) {\n\t\t\tMBThreadServiceUtil.unlockThread(threadId);\n\t\t}\n\t\telse {\n\t\t\tlong[] threadIds = StringUtil.split(\n\t\t\t\tParamUtil.getString(actionRequest, \"threadIds\"), 0L);\n\n\t\t\tfor (int i = 0; i < threadIds.length; i++) {\n\t\t\t\tMBThreadServiceUtil.unlockThread(threadIds[i]);\n\t\t\t}\n\t\t}\n\t}","commit_id":"389374cc2f2ebdbad9b2961eaf069d85e90e7f0f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void lockThreads(ActionRequest actionRequest) throws Exception {\n\t\tString lockThreadIds =\n\t\t\tParamUtil.getString(actionRequest, \"threadIds\");\n\n\t\tif (Validator.isNotNull(lockThreadIds)) {\n\t\t\tlong[] threadIds = StringUtil.split(lockThreadIds, 0L);\n\n\t\t\tfor (int i = 0; i < threadIds.length; i++) {\n\t\t\t\tMBThreadServiceUtil.lockThread(threadIds[i]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlong threadId = ParamUtil.getLong(actionRequest, \"threadId\");\n\n\t\t\tMBThreadServiceUtil.lockThread(threadId);\n\t\t}\n\t}","id":54102,"modified_method":"protected void lockThreads(ActionRequest actionRequest) throws Exception {\n\t\tlong threadId = ParamUtil.getLong(actionRequest, \"threadId\");\n\n\t\tif (threadId > 0) {\n\t\t\tMBThreadServiceUtil.lockThread(threadId);\n\t\t}\n\t\telse {\n\t\t\tlong[] threadIds = StringUtil.split(\n\t\t\t\tParamUtil.getString(actionRequest, \"threadIds\"), 0L);\n\n\t\t\tfor (int i = 0; i < threadIds.length; i++) {\n\t\t\t\tMBThreadServiceUtil.lockThread(threadIds[i]);\n\t\t\t}\n\t\t}\n\t}","commit_id":"389374cc2f2ebdbad9b2961eaf069d85e90e7f0f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void serveGetFolderChildren(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)resourceRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong repositoryId = ParamUtil.getLong(resourceRequest, \"repositoryId\");\n\t\tlong folderId = ParamUtil.getLong(resourceRequest, \"folderId\");\n\n\t\tList<Folder> folders = DLAppServiceUtil.getFolders(\n\t\t\trepositoryId, folderId);\n\n\t\tfolders = ListUtil.sort(\n\t\t\tfolders, new RepositoryModelNameComparator(true));\n\n\t\tJSONArray jsonArray = JSONFactoryUtil.createJSONArray();\n\n\t\tfor (Folder folder : folders) {\n\t\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\t\tjsonObject.put(\"entryId\", folder.getFolderId());\n\t\t\tjsonObject.put(\"label\", folder.getName());\n\t\t\tjsonObject.put(\"leaf\", false);\n\t\t\tjsonObject.put(\"type\", \"editor\");\n\n\t\t\tjsonArray.put(jsonObject);\n\t\t}\n\n\t\tboolean getFileEntries = ParamUtil.getBoolean(\n\t\t\tresourceRequest, \"getFileEntries\");\n\n\t\tif (getFileEntries) {\n\t\t\tPermissionChecker permissionChecker =\n\t\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\t\tlong groupId = themeDisplay.getScopeGroupId();\n\n\t\t\tboolean publishGadgetPermission = GadgetPermission.contains(\n\t\t\t\tpermissionChecker, groupId, ActionKeys.PUBLISH_GADGET);\n\n\t\t\tList<FileEntry> fileEntries = DLAppServiceUtil.getFileEntries(\n\t\t\t\trepositoryId, folderId);\n\n\t\t\tfileEntries = ListUtil.sort(\n\t\t\t\tfileEntries, new RepositoryModelNameComparator(true));\n\n\t\t\tfor (FileEntry fileEntry : fileEntries) {\n\t\t\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\t\t\tjsonObject.put(\"entryId\", fileEntry.getFileEntryId());\n\n\t\t\t\tString portalURL = PortalUtil.getPortalURL(themeDisplay);\n\n\t\t\t\tString fileEntryURL = ShindigUtil.getFileEntryURL(\n\t\t\t\t\tportalURL, fileEntry.getFileEntryId());\n\n\t\t\t\tjsonObject.put(\"fileEntryURL\", fileEntryURL);\n\n\t\t\t\tlong gadgetId = 0;\n\n\t\t\t\ttry {\n\t\t\t\t\tGadget gadget = GadgetLocalServiceUtil.getGadget(\n\t\t\t\t\t\tthemeDisplay.getCompanyId(), fileEntryURL);\n\n\t\t\t\t\tgadgetId = gadget.getGadgetId();\n\t\t\t\t}\n\t\t\t\tcatch (Exception e) {\n\t\t\t\t}\n\n\t\t\t\tjsonObject.put(\"gadgetId\", gadgetId);\n\n\t\t\t\tjsonObject.put(\"label\", fileEntry.getTitle());\n\t\t\t\tjsonObject.put(\"leaf\", true);\n\n\t\t\t\tJSONObject jsonPermissions =\n\t\t\t\t\tJSONFactoryUtil.createJSONObject();\n\n\t\t\t\tjsonPermissions.put(\n\t\t\t\t\t\"publishGadgetPermission\", publishGadgetPermission);\n\n\t\t\t\tif (gadgetId > 0) {\n\t\t\t\t\tboolean unpublishPermission = GadgetPermission.contains(\n\t\t\t\t\t\tpermissionChecker, groupId, gadgetId,\n\t\t\t\t\t\tActionKeys.DELETE);\n\n\t\t\t\t\tjsonPermissions.put(\n\t\t\t\t\t\t\"unpublishPermission\", unpublishPermission);\n\t\t\t\t}\n\n\t\t\t\tjsonObject.put(\"permissions\", jsonPermissions);\n\n\t\t\t\tjsonObject.put(\"type\", \"editor\");\n\n\t\t\t\tjsonArray.put(jsonObject);\n\t\t\t}\n\t\t}\n\n\t\twriteJSON(resourceRequest, resourceResponse, jsonArray.toString());\n\t}","id":54103,"modified_method":"protected void serveGetFolderChildren(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)resourceRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong repositoryId = ParamUtil.getLong(resourceRequest, \"repositoryId\");\n\t\tlong folderId = ParamUtil.getLong(resourceRequest, \"folderId\");\n\n\t\tList<Folder> folders = DLAppServiceUtil.getFolders(\n\t\t\trepositoryId, folderId);\n\n\t\tfolders = ListUtil.sort(\n\t\t\tfolders, new RepositoryModelNameComparator(true));\n\n\t\tJSONArray jsonArray = JSONFactoryUtil.createJSONArray();\n\n\t\tfor (Folder folder : folders) {\n\t\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\t\tjsonObject.put(\"entryId\", folder.getFolderId());\n\t\t\tjsonObject.put(\"label\", folder.getName());\n\t\t\tjsonObject.put(\"leaf\", false);\n\t\t\tjsonObject.put(\"type\", \"editor\");\n\n\t\t\tjsonArray.put(jsonObject);\n\t\t}\n\n\t\tboolean getFileEntries = ParamUtil.getBoolean(\n\t\t\tresourceRequest, \"getFileEntries\");\n\n\t\tif (getFileEntries) {\n\t\t\tPermissionChecker permissionChecker =\n\t\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\t\tboolean publishGadgetPermission = GadgetPermission.contains(\n\t\t\t\tpermissionChecker, themeDisplay.getScopeGroupId(),\n\t\t\t\tActionKeys.PUBLISH_GADGET);\n\n\t\t\tList<FileEntry> fileEntries = DLAppServiceUtil.getFileEntries(\n\t\t\t\trepositoryId, folderId);\n\n\t\t\tfileEntries = ListUtil.sort(\n\t\t\t\tfileEntries, new RepositoryModelNameComparator(true));\n\n\t\t\tfor (FileEntry fileEntry : fileEntries) {\n\t\t\t\tJSONObject jsonObject = JSONFactoryUtil.createJSONObject();\n\n\t\t\t\tjsonObject.put(\"entryId\", fileEntry.getFileEntryId());\n\n\t\t\t\tString portalURL = PortalUtil.getPortalURL(themeDisplay);\n\n\t\t\t\tString fileEntryURL = ShindigUtil.getFileEntryURL(\n\t\t\t\t\tportalURL, fileEntry.getFileEntryId());\n\n\t\t\t\tjsonObject.put(\"fileEntryURL\", fileEntryURL);\n\n\t\t\t\tlong gadgetId = 0;\n\n\t\t\t\ttry {\n\t\t\t\t\tGadget gadget = GadgetLocalServiceUtil.getGadget(\n\t\t\t\t\t\tthemeDisplay.getCompanyId(), fileEntryURL);\n\n\t\t\t\t\tgadgetId = gadget.getGadgetId();\n\t\t\t\t}\n\t\t\t\tcatch (Exception e) {\n\t\t\t\t}\n\n\t\t\t\tjsonObject.put(\"gadgetId\", gadgetId);\n\n\t\t\t\tjsonObject.put(\"label\", fileEntry.getTitle());\n\t\t\t\tjsonObject.put(\"leaf\", true);\n\n\t\t\t\tJSONObject jsonPermissions =\n\t\t\t\t\tJSONFactoryUtil.createJSONObject();\n\n\t\t\t\tjsonPermissions.put(\n\t\t\t\t\t\"publishGadgetPermission\", publishGadgetPermission);\n\n\t\t\t\tif (gadgetId > 0) {\n\t\t\t\t\tboolean unpublishPermission = GadgetPermission.contains(\n\t\t\t\t\t\tpermissionChecker, themeDisplay.getScopeGroupId(),\n\t\t\t\t\t\tgadgetId, ActionKeys.DELETE);\n\n\t\t\t\t\tjsonPermissions.put(\n\t\t\t\t\t\t\"unpublishPermission\", unpublishPermission);\n\t\t\t\t}\n\n\t\t\t\tjsonObject.put(\"permissions\", jsonPermissions);\n\n\t\t\t\tjsonObject.put(\"type\", \"editor\");\n\n\t\t\t\tjsonArray.put(jsonObject);\n\t\t\t}\n\t\t}\n\n\t\twriteJSON(resourceRequest, resourceResponse, jsonArray.toString());\n\t}","commit_id":"f587726c2279d57e5eef4f00e571392c59df6ca7","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void updateGadget(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tlong groupId = themeDisplay.getScopeGroupId();\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tif (cmd.equals(Constants.ADD)) {\n\t\t\tGadgetPermission.check(\n\t\t\t\tpermissionChecker, groupId, ActionKeys.PUBLISH_GADGET);\n\n\t\t\tGadget gadget = doAddGadget(actionRequest, actionResponse);\n\n\t\t\tlong gadgetId = gadget.getGadgetId();\n\n\t\t\tString publishGadgetRedirect = ParamUtil.getString(\n\t\t\t\tactionRequest, \"publishGadgetRedirect\");\n\n\t\t\tboolean deletePermission = GadgetPermission.contains(\n\t\t\t\tpermissionChecker, groupId, gadgetId, ActionKeys.DELETE);\n\n\t\t\tpublishGadgetRedirect = HttpUtil.addParameter(\n\t\t\t\tpublishGadgetRedirect, \"deletePermission\", deletePermission);\n\n\t\t\tpublishGadgetRedirect = HttpUtil.addParameter(\n\t\t\t\tpublishGadgetRedirect, \"gadgetId\", gadgetId);\n\n\t\t\tactionResponse.sendRedirect(publishGadgetRedirect);\n\t\t}\n\t\telse {\n\t\t\tlong gadgetId = ParamUtil.getLong(actionRequest, \"gadgetId\");\n\n\t\t\tGadgetPermission.check(\n\t\t\t\tpermissionChecker, groupId, gadgetId, ActionKeys.UPDATE);\n\n\t\t\tdoUpdateGadget(actionRequest, actionResponse);\n\t\t}\n\t}","id":54104,"modified_method":"public void updateGadget(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tlong groupId = themeDisplay.getScopeGroupId();\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tif (cmd.equals(Constants.ADD)) {\n\t\t\tGadgetPermission.check(\n\t\t\t\tpermissionChecker, groupId, ActionKeys.PUBLISH_GADGET);\n\n\t\t\tGadget gadget = doAddGadget(actionRequest, actionResponse);\n\n\t\t\tString publishGadgetRedirect = ParamUtil.getString(\n\t\t\t\tactionRequest, \"publishGadgetRedirect\");\n\n\t\t\tboolean deletePermission = GadgetPermission.contains(\n\t\t\t\tpermissionChecker, groupId, gadget.getGadgetId(),\n\t\t\t\tActionKeys.DELETE);\n\n\t\t\tpublishGadgetRedirect = HttpUtil.addParameter(\n\t\t\t\tpublishGadgetRedirect, \"deletePermission\", deletePermission);\n\n\t\t\tpublishGadgetRedirect = HttpUtil.addParameter(\n\t\t\t\tpublishGadgetRedirect, \"gadgetId\", gadget.getGadgetId());\n\n\t\t\tactionResponse.sendRedirect(publishGadgetRedirect);\n\t\t}\n\t\telse {\n\t\t\tlong gadgetId = ParamUtil.getLong(actionRequest, \"gadgetId\");\n\n\t\t\tGadgetPermission.check(\n\t\t\t\tpermissionChecker, groupId, gadgetId, ActionKeys.UPDATE);\n\n\t\t\tdoUpdateGadget(actionRequest, actionResponse);\n\t\t}\n\t}","commit_id":"f587726c2279d57e5eef4f00e571392c59df6ca7","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"/**\n     * GROUPS\n     * The PowerApiHeader is used for Rate Limiting\n     */\n    private void setGroups() {\n        if (groups != null) {\n\n            List<String> groupIds = new ArrayList<String>();\n            for(Group group : groups.getGroup()) {\n                groupIds.add(group.getId());\n            }\n\n            filterDirector.requestHeaderManager().putHeader(PowerApiHeader.GROUPS.toString(), groupIds.toArray()[0].toString() + quality);\n        }\n    }","id":54105,"modified_method":"/**\n     * GROUPS\n     * The PowerApiHeader is used for Rate Limiting\n     */\n    private void setGroups() {\n        if (groups != null) {\n\n            List<String> groupIds = new ArrayList<String>();\n            for(Group group : groups.getGroup()) {\n                groupIds.add(group.getId());\n                filterDirector.requestHeaderManager().appendHeader(PowerApiHeader.GROUPS.toString(), group.getId()+quality);\n            }\n        }\n    }","commit_id":"2c30d1b35d2f338fad8fbd2b283081b7101a05de","url":"https://github.com/rackerlabs/repose"},{"original_method":"/**\n     * GROUPS\n     * The PowerApiHeader is used for Rate Limiting\n     */\n    private void setGroups() {\n        if (groups != null) {\n\n            List<String> groupIds = new ArrayList<String>();\n            for(Group group : groups.getGroup()) {\n                groupIds.add(group.getId());\n            }\n\n            filterDirector.requestHeaderManager().putHeader(PowerApiHeader.GROUPS.toString(), groupIds.toArray()[0].toString() + quality);\n        }\n    }","id":54106,"modified_method":"/**\n     * GROUPS\n     * The PowerApiHeader is used for Rate Limiting\n     */\n    private void setGroups() {\n        if (groups != null) {\n\n            List<String> groupIds = new ArrayList<String>();\n            for(Group group : groups.getGroup()) {\n                groupIds.add(group.getId());\n                filterDirector.requestHeaderManager().appendHeader(PowerApiHeader.GROUPS.toString(), group.getId()+quality);\n            }\n        }\n    }","commit_id":"cf0ed7fda15b54b2e03f496126bca66413a385fb","url":"https://github.com/rackerlabs/repose"},{"original_method":"/**\n    * USER\n    * The PowerApiHeader is used for Rate Limiting\n    * The OpenStackServiceHeader is used for an OpenStack service\n    */\n   private void setUser() {\n      filterDirector.requestHeaderManager().appendToHeader(request, PowerApiHeader.USER.toString(), cachableToken.getUsername() + QUALITY);\n\n      filterDirector.requestHeaderManager().putHeader(OpenStackServiceHeader.USER_NAME.toString(), cachableToken.getUsername());\n      filterDirector.requestHeaderManager().putHeader(OpenStackServiceHeader.USER_ID.toString(), cachableToken.getUserId());\n   }","id":54107,"modified_method":"/**\n    * USER\n    * The PowerApiHeader is used for Rate Limiting\n    * The OpenStackServiceHeader is used for an OpenStack service\n    */\n   private void setUser() {\n      filterDirector.requestHeaderManager().appendHeader(PowerApiHeader.USER.toString(), cachableToken.getUsername() + QUALITY);\n\n      filterDirector.requestHeaderManager().putHeader(OpenStackServiceHeader.USER_NAME.toString(), cachableToken.getUsername());\n      filterDirector.requestHeaderManager().putHeader(OpenStackServiceHeader.USER_ID.toString(), cachableToken.getUserId());\n   }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"public AuthenticationHeaderManager(String authToken, AuthToken token, Boolean isDelegatable, FilterDirector filterDirector, String tenantId, List<AuthGroup> groups, HttpServletRequest request) {\n      this.authToken = authToken;\n      this.cachableToken = token;\n      this.isDelegatable = isDelegatable;\n      this.filterDirector = filterDirector;\n      this.tenantId = tenantId;\n      this.validToken = token != null && token.getTokenId() != null;\n      this.groups = groups;\n      this.request = request;\n   }","id":54108,"modified_method":"public AuthenticationHeaderManager(String authToken, AuthToken token, Boolean isDelegatable, FilterDirector filterDirector, String tenantId, List<AuthGroup> groups) {\n      this.authToken = authToken;\n      this.cachableToken = token;\n      this.isDelegatable = isDelegatable;\n      this.filterDirector = filterDirector;\n      this.tenantId = tenantId;\n      this.validToken = token != null && token.getTokenId() != null;\n      this.groups = groups;\n   }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"/**\n    * GROUPS\n    * The PowerApiHeader is used for Rate Limiting\n    */\n   private void setGroups() {\n      List<String> groupIds = new ArrayList<String>();\n      for (AuthGroup group : groups) {\n         groupIds.add(group.getId());\n         filterDirector.requestHeaderManager().appendHeader(PowerApiHeader.GROUPS.toString(), group.getId() + QUALITY);\n      }\n   }","id":54109,"modified_method":"/**\n    * GROUPS\n    * The PowerApiHeader is used for Rate Limiting\n    */\n   private void setGroups() {\n      for (AuthGroup group : groups) {\n         filterDirector.requestHeaderManager().appendHeader(PowerApiHeader.GROUPS.toString(), group.getId() + QUALITY);\n      }\n   }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"private void getGroupsListIds() {\n\n      int groupCount = groups.size();\n\n      String[] groupsArray = new String[groupCount];\n\n      for (int i = 0; i < groupCount; i++) {\n         groupsArray[i] = groups.get(i).getId() + QUALITY;\n      }\n\n      filterDirector.requestHeaderManager().putHeader(PowerApiHeader.GROUPS.toString(), groupsArray);\n   }","id":54110,"modified_method":"private void getGroupsListIds() {      \n      for (AuthGroup group : groups) {\n         filterDirector.requestHeaderManager().appendHeader(PowerApiHeader.GROUPS.toString(), group.getId() + QUALITY);\n      }\n   }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"public AuthenticationHeaderManager(boolean validToken, RackspaceAuth cfg, FilterDirector filterDirector, String accountUsername, List<AuthGroup> groups, HttpServletRequest request) {\n      this.validToken = validToken;\n      this.isDelegatable = cfg.isDelegable();\n      this.keystone = cfg.isKeystoneActive();\n      this.userRoles = cfg.getUserRoles();\n      this.filterDirector = filterDirector;\n      this.accountUsername = accountUsername;\n      this.groups = groups;\n      this.request = request;\n   }","id":54111,"modified_method":"public AuthenticationHeaderManager(boolean validToken, RackspaceAuth cfg, FilterDirector filterDirector, String accountUsername, List<AuthGroup> groups) {\n      this.validToken = validToken;\n      this.isDelegatable = cfg.isDelegable();\n      this.keystone = cfg.isKeystoneActive();\n      this.userRoles = cfg.getUserRoles();\n      this.filterDirector = filterDirector;\n      this.accountUsername = accountUsername;\n      this.groups = groups;\n   }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n   public AuthToken validateToken(String tenant, String userToken) {\n      headers.put(AUTH_TOKEN_HEADER, getAdminToken());\n      OpenStackToken token = null;\n      \n      final ServiceClientResponse<AuthenticateResponse> serviceResponse = serviceClient.get(targetHostUri + \"/tokens/\" + userToken, headers, \"belongsTo\", tenant);\n\n      switch (HttpStatusCode.fromInt(serviceResponse.getStatusCode())) {\n         case OK:\n            final AuthenticateResponse authenticateResponse = openStackCoreResponseUnmarshaller.unmarshall(serviceResponse.getData(), AuthenticateResponse.class);\n            token = new OpenStackToken(tenant, authenticateResponse);\n            break;\n            \n         case NOT_FOUND: // User's token is bad\n            LOG.warn(\"Unable to validate token for tenant.  Invalid token. \" + serviceResponse.getStatusCode());\n            break;\n            \n         case UNAUTHORIZED: // Admin token is bad most likely\n            LOG.warn(\"Unable to validate token for tenant.  Has the admin token expired? \" + serviceResponse.getStatusCode());\n            break;\n\n         case INTERNAL_SERVER_ERROR: // Internal server error from auth\n            LOG.warn(\"Internal server error from auth. \" + serviceResponse.getStatusCode());\n            break;\n      }\n\n      return token;\n   }","id":54112,"modified_method":"@Override\n   public AuthToken validateToken(String tenant, String userToken) {\n      final Map<String, String> headers = new HashMap<String, String>();\n\n      headers.put(ACCEPT_HEADER, MediaType.APPLICATION_XML);\n      headers.put(AUTH_TOKEN_HEADER, getAdminToken());\n\n      OpenStackToken token = null;\n\n      final ServiceClientResponse<AuthenticateResponse> serviceResponse = serviceClient.get(targetHostUri + \"/tokens/\" + userToken, headers, \"belongsTo\", tenant);\n\n      switch (HttpStatusCode.fromInt(serviceResponse.getStatusCode())) {\n         case OK:\n            final AuthenticateResponse authenticateResponse = openStackCoreResponseUnmarshaller.unmarshall(serviceResponse.getData(), AuthenticateResponse.class);\n            token = new OpenStackToken(tenant, authenticateResponse);\n            break;\n            \n         case NOT_FOUND: // User's token is bad\n            LOG.warn(\"Unable to validate token for tenant.  Invalid token. \" + serviceResponse.getStatusCode());\n            break;\n            \n         case UNAUTHORIZED: // Admin token is bad most likely\n            LOG.warn(\"Unable to validate token for tenant.  Has the admin token expired? \" + serviceResponse.getStatusCode());\n            break;\n\n         case INTERNAL_SERVER_ERROR: // Internal server error from auth\n            LOG.warn(\"Internal server error from auth. \" + serviceResponse.getStatusCode());\n            break;\n      }\n\n      return token;\n   }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n   public List<Endpoint> getEndpointsForToken(String userToken) {\n      headers.put(AUTH_TOKEN_HEADER, getAdminToken());\n\n      final ServiceClientResponse<EndpointList> endpointListResponse = serviceClient.get(targetHostUri + \"/tokens/\" + userToken + \"/endpoints\", headers);\n      List<Endpoint> endpointList = null;\n\n      switch (HttpStatusCode.fromInt(endpointListResponse.getStatusCode())) {\n         case OK:\n            final EndpointList unmarshalledEndpoints = openStackCoreResponseUnmarshaller.unmarshall(endpointListResponse.getData(), EndpointList.class);\n\n            if (unmarshalledEndpoints != null) {\n               endpointList = unmarshalledEndpoints.getEndpoint();\n            }\n            \n            break;\n            \n         default:\n            LOG.warn(\"Unable to get endpoints for token. Status code: \" + endpointListResponse.getStatusCode());\n            break;\n      }\n\n      return endpointList;\n   }","id":54113,"modified_method":"@Override\n   public List<Endpoint> getEndpointsForToken(String userToken) {\n      final Map<String, String> headers = new HashMap<String, String>();\n\n      headers.put(ACCEPT_HEADER, MediaType.APPLICATION_XML);\n      headers.put(AUTH_TOKEN_HEADER, getAdminToken());\n\n      final ServiceClientResponse<EndpointList> endpointListResponse = serviceClient.get(targetHostUri + \"/tokens/\" + userToken + \"/endpoints\", headers);\n      List<Endpoint> endpointList = null;\n\n      switch (HttpStatusCode.fromInt(endpointListResponse.getStatusCode())) {\n         case OK:\n            final EndpointList unmarshalledEndpoints = openStackCoreResponseUnmarshaller.unmarshall(endpointListResponse.getData(), EndpointList.class);\n\n            if (unmarshalledEndpoints != null) {\n               endpointList = unmarshalledEndpoints.getEndpoint();\n            }\n            \n            break;\n            \n         default:\n            LOG.warn(\"Unable to get endpoints for token. Status code: \" + endpointListResponse.getStatusCode());\n            break;\n      }\n\n      return endpointList;\n   }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"public AuthenticationServiceClient(String targetHostUri, String username, String password,\n                                      ResponseUnmarshaller openStackCoreResponseUnmarshaller,\n                                      ResponseUnmarshaller openStackGroupsResponseUnmarshaller) {\n      this.openStackCoreResponseUnmarshaller = openStackCoreResponseUnmarshaller;\n      this.openStackGroupsResponseUnmarshaller = openStackGroupsResponseUnmarshaller;\n      this.serviceClient = new ServiceClient(null);\n      this.targetHostUri = targetHostUri;\n\n      ObjectFactory objectFactory = new ObjectFactory();\n      PasswordCredentialsRequiredUsername credentials = new PasswordCredentialsRequiredUsername();\n      credentials.setUsername(username);\n      credentials.setPassword(password);\n\n      JAXBElement jaxbCredentials = objectFactory.createPasswordCredentials(credentials);\n\n      AuthenticationRequest request = new AuthenticationRequest();\n      request.setCredential(jaxbCredentials);\n\n      this.jaxbRequest = objectFactory.createAuth(request);\n\n      this.headers.put(ACCEPT_HEADER, MediaType.APPLICATION_XML);\n   }","id":54114,"modified_method":"public AuthenticationServiceClient(String targetHostUri, String username, String password,\n                                      ResponseUnmarshaller openStackCoreResponseUnmarshaller,\n                                      ResponseUnmarshaller openStackGroupsResponseUnmarshaller) {\n      this.openStackCoreResponseUnmarshaller = openStackCoreResponseUnmarshaller;\n      this.openStackGroupsResponseUnmarshaller = openStackGroupsResponseUnmarshaller;\n      this.serviceClient = new ServiceClient(null);\n      this.targetHostUri = targetHostUri;\n\n      ObjectFactory objectFactory = new ObjectFactory();\n      PasswordCredentialsRequiredUsername credentials = new PasswordCredentialsRequiredUsername();\n      credentials.setUsername(username);\n      credentials.setPassword(password);\n\n      JAXBElement jaxbCredentials = objectFactory.createPasswordCredentials(credentials);\n\n      AuthenticationRequest request = new AuthenticationRequest();\n      request.setCredential(jaxbCredentials);\n\n      this.jaxbRequest = objectFactory.createAuth(request);\n   }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n   public List<AuthGroup> getGroups(String userId) {\n      headers.put(AUTH_TOKEN_HEADER, getAdminToken());\n\n      final ServiceClientResponse<Groups> serviceResponse = serviceClient.get(targetHostUri + \"/users/\" + userId + \"/RAX-KSGRP\", headers);\n      final List<AuthGroup> authGroups = new ArrayList<AuthGroup>();\n\n      switch (HttpStatusCode.fromInt(serviceResponse.getStatusCode())) {\n         case OK:\n            Groups groups = openStackGroupsResponseUnmarshaller.unmarshall(serviceResponse.getData(), Groups.class);\n            for (Group group : groups.getGroup()) {\n               final AuthGroup authGroup = new OpenStackGroup(group);\n               authGroups.add(authGroup);\n            }\n            break;\n            \n         default:\n            LOG.warn(\"Unable to get groups for user id: \" + userId + \" Status code: \" + serviceResponse.getStatusCode());\n            break;\n            \n      }\n\n      return authGroups;\n   }","id":54115,"modified_method":"@Override\n   public List<AuthGroup> getGroups(String userId) {\n      final Map<String, String> headers = new HashMap<String, String>();\n\n      headers.put(ACCEPT_HEADER, MediaType.APPLICATION_XML);\n      headers.put(AUTH_TOKEN_HEADER, getAdminToken());\n\n      final ServiceClientResponse<Groups> serviceResponse = serviceClient.get(targetHostUri + \"/users/\" + userId + \"/RAX-KSGRP\", headers);\n      final List<AuthGroup> authGroups = new ArrayList<AuthGroup>();\n\n      switch (HttpStatusCode.fromInt(serviceResponse.getStatusCode())) {\n         case OK:\n            Groups groups = openStackGroupsResponseUnmarshaller.unmarshall(serviceResponse.getData(), Groups.class);\n            for (Group group : groups.getGroup()) {\n               final AuthGroup authGroup = new OpenStackGroup(group);\n               authGroups.add(authGroup);\n            }\n            break;\n            \n         default:\n            LOG.warn(\"Unable to get groups for user id: \" + userId + \" Status code: \" + serviceResponse.getStatusCode());\n            break;\n            \n      }\n\n      return authGroups;\n   }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n   public FilterDirector authenticate(HttpServletRequest request) {\n      final FilterDirector filterDirector = new FilterDirectorImpl();\n      filterDirector.setResponseStatus(HttpStatusCode.UNAUTHORIZED);\n      filterDirector.setFilterAction(FilterAction.RETURN);\n\n      final String authToken = request.getHeader(CommonHttpHeader.AUTH_TOKEN.toString());\n      StringBuilder accountString = new StringBuilder(request.getRequestURI());\n      if(includeQueryParams && request.getQueryString()!=null){\n          accountString.append(\"?\").append(request.getQueryString());\n          \n      }\n      final ExtractorResult<Object> account = keyedRegexExtractor.extract(accountString.toString());\n      AuthToken user = null;\n\n      if ((!StringUtilities.isBlank(authToken) && account != null)) {\n         user = checkUserCache(account.getResult(), authToken);\n\n         if (user == null) {\n            try {\n               user = authenticationService.validateToken(account.getResult(), authToken);\n               cacheUserInfo(user);\n            } catch (ClientHandlerException ex) {\n               LOG.error(\"Failure communicating with the auth service: \" + ex.getMessage(), ex);\n               filterDirector.setResponseStatus(HttpStatusCode.INTERNAL_SERVER_ERROR);\n            } catch (Exception ex) {\n               LOG.error(\"Failure in auth: \" + ex.getMessage(), ex);\n               filterDirector.setResponseStatus(HttpStatusCode.INTERNAL_SERVER_ERROR);\n            }\n         }\n      }\n\n      List<AuthGroup> groups = new ArrayList<AuthGroup>();\n      if (user != null) {\n         groups = authenticationService.getGroups(user.getUserId());\n      }\n\n      final AuthenticationHeaderManager headerManager = new AuthenticationHeaderManager(authToken, user, delegable, filterDirector, account == null ? \"\" : account.getResult(), groups, request);\n      headerManager.setFilterDirectorValues();\n\n      return filterDirector;\n   }","id":54116,"modified_method":"@Override\n   public FilterDirector authenticate(HttpServletRequest request) {\n      final FilterDirector filterDirector = new FilterDirectorImpl();\n      filterDirector.setResponseStatus(HttpStatusCode.UNAUTHORIZED);\n      filterDirector.setFilterAction(FilterAction.RETURN);\n\n      final String authToken = request.getHeader(CommonHttpHeader.AUTH_TOKEN.toString());\n      StringBuilder accountString = new StringBuilder(request.getRequestURI());\n      if(includeQueryParams && request.getQueryString()!=null){\n          accountString.append(\"?\").append(request.getQueryString());\n          \n      }\n      final ExtractorResult<Object> account = keyedRegexExtractor.extract(accountString.toString());\n      AuthToken user = null;\n\n      if ((!StringUtilities.isBlank(authToken) && account != null)) {\n         user = checkUserCache(account.getResult(), authToken);\n\n         if (user == null) {\n            try {\n               user = authenticationService.validateToken(account.getResult(), authToken);\n               cacheUserInfo(user);\n            } catch (ClientHandlerException ex) {\n               LOG.error(\"Failure communicating with the auth service: \" + ex.getMessage(), ex);\n               filterDirector.setResponseStatus(HttpStatusCode.INTERNAL_SERVER_ERROR);\n            } catch (Exception ex) {\n               LOG.error(\"Failure in auth: \" + ex.getMessage(), ex);\n               filterDirector.setResponseStatus(HttpStatusCode.INTERNAL_SERVER_ERROR);\n            }\n         }\n      }\n\n      List<AuthGroup> groups = new ArrayList<AuthGroup>();\n      if (user != null) {\n         groups = authenticationService.getGroups(user.getUserId());\n      }\n\n      final AuthenticationHeaderManager headerManager = new AuthenticationHeaderManager(authToken, user, delegable, filterDirector, account == null ? \"\" : account.getResult(), groups);\n      headerManager.setFilterDirectorValues();\n\n      return filterDirector;\n   }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public FilterDirector handleResponse(HttpServletRequest request, ReadableHttpServletResponse response) {\n        FilterDirector myDirector = new FilterDirectorImpl();\n        myDirector.setResponseStatusCode(response.getStatus());\n        /// The WWW Authenticate header can be used to communicate to the client\n        // (since we are a proxy) how to correctly authenticate itself\n        final String wwwAuthenticateHeader = response.getHeader(CommonHttpHeader.WWW_AUTHENTICATE.toString());\n\n        switch (myDirector.getResponseStatus()) {\n            // NOTE: We should only mutate the WWW-Authenticate header on a\n            // 401 (unauthorized) or 403 (forbidden) response from the origin service\n            case UNAUTHORIZED:\n            case FORBIDDEN:\n                updateHttpResponse(myDirector, wwwAuthenticateHeader);\n                break;\n            case NOT_IMPLEMENTED:\n                if ((!StringUtilities.isBlank(wwwAuthenticateHeader) && wwwAuthenticateHeader.contains(\"Delegated\"))) {\n                    myDirector.setResponseStatus(HttpStatusCode.INTERNAL_SERVER_ERROR);\n                    LOG.error(\"Repose authentication component is configured as delegetable but origin service does not support delegated mode.\");\n                } else {\n                    myDirector.setResponseStatus(HttpStatusCode.NOT_IMPLEMENTED);\n                }\n                break;\n        }\n\n        return myDirector;\n    }","id":54117,"modified_method":"@Override\n    public FilterDirector handleResponse(HttpServletRequest request, ReadableHttpServletResponse response) {\n        return new ResponseHandler(response, getWWWAuthenticateHeaderContents()).handle();\n    }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public FilterDirector authenticate(HttpServletRequest request) {\n        final FilterDirector filterDirector = new FilterDirectorImpl();\n        filterDirector.setResponseStatus(HttpStatusCode.UNAUTHORIZED);\n        filterDirector.setFilterAction(FilterAction.RETURN);\n\n        final String authToken = request.getHeader(CommonHttpHeader.AUTH_TOKEN.toString());\n\n        StringBuilder accountString = new StringBuilder(request.getRequestURI());\n        if (includeQueryParams && request.getQueryString() != null) {\n            accountString.append(\"?\").append(request.getQueryString());\n\n        }\n\n        final ExtractorResult<String> extractedResult = keyedRegexExtractor.extract(accountString.toString());\n\n        AuthToken token = null;\n\n        if ((!StringUtilities.isBlank(authToken) && extractedResult != null)) {\n            token = checkUserCache(extractedResult.getResult(), authToken);\n\n            if (token == null) {\n                try {\n                    token = authenticationService.validateToken(extractedResult, authToken);\n                    cacheUserInfo(token);\n                } catch (Exception ex) {\n                    LOG.error(\"Failure in auth: \" + ex.getMessage(), ex);\n                    filterDirector.setResponseStatus(HttpStatusCode.INTERNAL_SERVER_ERROR);\n                }\n            }\n        }\n\n        List<AuthGroup> groups = new ArrayList<AuthGroup>();\n        if (token != null) {\n            groups = authenticationService.getGroups(token.getUserId());\n        }\n\n        final AuthenticationHeaderManager headerManager = new AuthenticationHeaderManager(token != null, cfg, filterDirector, extractedResult == null ? \"\" : extractedResult.getResult(), groups, request);\n        headerManager.setFilterDirectorValues();\n\n        return filterDirector;\n    }","id":54118,"modified_method":"@Override\n    public FilterDirector authenticate(HttpServletRequest request) {\n        final FilterDirector filterDirector = new FilterDirectorImpl();\n        filterDirector.setResponseStatus(HttpStatusCode.UNAUTHORIZED);\n        filterDirector.setFilterAction(FilterAction.RETURN);\n\n        final String authToken = request.getHeader(CommonHttpHeader.AUTH_TOKEN.toString());\n\n        StringBuilder accountString = new StringBuilder(request.getRequestURI());\n        if (includeQueryParams && request.getQueryString() != null) {\n            accountString.append(\"?\").append(request.getQueryString());\n\n        }\n\n        final ExtractorResult<String> extractedResult = keyedRegexExtractor.extract(accountString.toString());\n\n        AuthToken token = null;\n\n        if ((!StringUtilities.isBlank(authToken) && extractedResult != null)) {\n            token = checkUserCache(extractedResult.getResult(), authToken);\n\n            if (token == null) {\n                try {\n                    token = authenticationService.validateToken(extractedResult, authToken);\n                    cacheUserInfo(token);\n                } catch (Exception ex) {\n                    LOG.error(\"Failure in auth: \" + ex.getMessage(), ex);\n                    filterDirector.setResponseStatus(HttpStatusCode.INTERNAL_SERVER_ERROR);\n                }\n            }\n        }\n\n        List<AuthGroup> groups = new ArrayList<AuthGroup>();\n        if (token != null) {\n            groups = authenticationService.getGroups(token.getUserId());\n        }\n\n        final AuthenticationHeaderManager headerManager = new AuthenticationHeaderManager(token != null, cfg, filterDirector, extractedResult == null ? \"\" : extractedResult.getResult(), groups);\n        headerManager.setFilterDirectorValues();\n\n        return filterDirector;\n    }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"public static void configureInstance(ContextAdapterProvider adapterProvider, ServletContext ctx, Context namingContext) {\n      synchronized (lock) {\n         if (instance == null && adapterProvider != null) {\n            LOG.debug(\"Configuring ContextAdapterProvider: \" + adapterProvider.getClass().getName());\n            instance = new ServletContextHelper(adapterProvider);\n            instance.setPowerApiContext(ctx, namingContext);\n         }\n      }\n   }","id":54119,"modified_method":"public static void configureInstance(ContextAdapterProvider adapterProvider, ServletContext ctx, Context namingContext) {\n      synchronized (LOCK) {\n         if (instance == null && adapterProvider != null) {\n            LOG.debug(\"Configuring ContextAdapterProvider: \" + adapterProvider.getClass().getName());\n            instance = new ServletContextHelper(adapterProvider);\n            instance.setPowerApiContext(ctx, namingContext);\n         }\n      }\n   }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"public static ServletContextHelper getInstance() {\n      synchronized (lock) {\n         return instance;\n      }\n   }","id":54120,"modified_method":"public static ServletContextHelper getInstance() {\n      synchronized (LOCK) {\n         return instance;\n      }\n   }","commit_id":"d8ffdc3e60a6050f5e99d3e8d2e4832b8582bf5a","url":"https://github.com/rackerlabs/repose"},{"original_method":"public void setKeyObj(Key keyObj) {\n\t\t_keyObj = keyObj;\n\n\t\tsuper.setKey(Base64.objectToString(keyObj));\n\t}","id":54121,"modified_method":"public void setKeyObj(Key keyObj) {\n\t\t_keyObj = keyObj;\n\t}","commit_id":"d4f672d5b535662390b1a5384351ee92d3c105b6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public Company checkCompany(String webId, String mx, String shardName)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Company\n\n\t\tDate now = new Date();\n\n\t\tCompany company = companyPersistence.fetchByWebId(webId);\n\n\t\tif (company == null) {\n\t\t\tString virtualHostname = webId;\n\n\t\t\tif (webId.equals(PropsValues.COMPANY_DEFAULT_WEB_ID)) {\n\t\t\t\tvirtualHostname = _DEFAULT_VIRTUAL_HOST;\n\t\t\t}\n\n\t\t\tString homeURL = null;\n\t\t\tString name = webId;\n\t\t\tString legalName = null;\n\t\t\tString legalId = null;\n\t\t\tString legalType = null;\n\t\t\tString sicCode = null;\n\t\t\tString tickerSymbol = null;\n\t\t\tString industry = null;\n\t\t\tString type = null;\n\t\t\tString size = null;\n\n\t\t\tlong companyId = counterLocalService.increment();\n\n\t\t\tcompany = companyPersistence.create(companyId);\n\n\t\t\ttry {\n\t\t\t\tcompany.setKeyObj(Encryptor.generateKey());\n\t\t\t}\n\t\t\tcatch (EncryptorException ee) {\n\t\t\t\tthrow new SystemException(ee);\n\t\t\t}\n\n\t\t\tcompany.setWebId(webId);\n\t\t\tcompany.setMx(mx);\n\t\t\tcompany.setActive(true);\n\n\t\t\tcompanyPersistence.update(company, false);\n\n\t\t\t// Shard\n\n\t\t\tshardLocalService.addShard(\n\t\t\t\tCompany.class.getName(), companyId, shardName);\n\n\t\t\t// Company\n\n\t\t\tupdateCompany(\n\t\t\t\tcompanyId, virtualHostname, mx, homeURL, name, legalName,\n\t\t\t\tlegalId, legalType, sicCode, tickerSymbol, industry, type,\n\t\t\t\tsize);\n\n\t\t\t// Virtual host\n\n\t\t\tupdateVirtualHost(companyId, virtualHostname);\n\n\t\t\t// Demo settings\n\n\t\t\tif (webId.equals(\"liferay.net\")) {\n\t\t\t\tcompany = companyPersistence.findByWebId(webId);\n\n\t\t\t\tupdateVirtualHost(companyId, \"demo.liferay.net\");\n\n\t\t\t\tupdateSecurity(\n\t\t\t\t\tcompanyId, CompanyConstants.AUTH_TYPE_EA, true, true, true,\n\t\t\t\t\ttrue, false, true);\n\n\t\t\t\tPortletPreferences preferences = PrefsPropsUtil.getPreferences(\n\t\t\t\t\tcompanyId);\n\n\t\t\t\ttry {\n\t\t\t\t\tpreferences.setValue(\n\t\t\t\t\t\tPropsKeys.ADMIN_EMAIL_FROM_NAME, \"Liferay Demo\");\n\t\t\t\t\tpreferences.setValue(\n\t\t\t\t\t\tPropsKeys.ADMIN_EMAIL_FROM_ADDRESS, \"test@liferay.net\");\n\n\t\t\t\t\tpreferences.store();\n\t\t\t\t}\n\t\t\t\tcatch (IOException ioe) {\n\t\t\t\t\tthrow new SystemException(ioe);\n\t\t\t\t}\n\t\t\t\tcatch (PortletException pe) {\n\t\t\t\t\tthrow new SystemException(pe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ttry {\n\t\t\t\tshardLocalService.getShard(\n\t\t\t\t\tCompany.class.getName(), company.getCompanyId());\n\t\t\t}\n\t\t\tcatch (NoSuchShardException nsse) {\n\t\t\t\tshardLocalService.addShard(\n\t\t\t\t\tCompany.class.getName(), company.getCompanyId(), shardName);\n\t\t\t}\n\t\t}\n\n\t\tlong companyId = company.getCompanyId();\n\n\t\t// Key\n\n\t\tcheckCompanyKey(companyId);\n\n\t\t// Default user\n\n\t\tUser defaultUser = null;\n\n\t\ttry {\n\t\t\tdefaultUser = userLocalService.getDefaultUser(companyId);\n\n\t\t\tif (!defaultUser.isAgreedToTermsOfUse()) {\n\t\t\t\tdefaultUser.setAgreedToTermsOfUse(true);\n\n\t\t\t\tuserPersistence.update(defaultUser, false);\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchUserException nsue) {\n\t\t\tlong userId = counterLocalService.increment();\n\n\t\t\tdefaultUser = userPersistence.create(userId);\n\n\t\t\tdefaultUser.setCompanyId(companyId);\n\t\t\tdefaultUser.setCreateDate(now);\n\t\t\tdefaultUser.setModifiedDate(now);\n\t\t\tdefaultUser.setDefaultUser(true);\n\t\t\tdefaultUser.setContactId(counterLocalService.increment());\n\t\t\tdefaultUser.setPassword(\"password\");\n\t\t\tdefaultUser.setScreenName(String.valueOf(defaultUser.getUserId()));\n\t\t\tdefaultUser.setEmailAddress(\"default@\" + company.getMx());\n\t\t\tdefaultUser.setLanguageId(LocaleUtil.getDefault().toString());\n\t\t\tdefaultUser.setTimeZoneId(TimeZoneUtil.getDefault().getID());\n\t\t\tdefaultUser.setGreeting(\n\t\t\t\tLanguageUtil.format(\n\t\t\t\t\tdefaultUser.getLocale(), \"welcome-x\", StringPool.BLANK,\n\t\t\t\t\tfalse));\n\t\t\tdefaultUser.setLoginDate(now);\n\t\t\tdefaultUser.setFailedLoginAttempts(0);\n\t\t\tdefaultUser.setAgreedToTermsOfUse(true);\n\t\t\tdefaultUser.setStatus(WorkflowConstants.STATUS_APPROVED);\n\n\t\t\tuserPersistence.update(defaultUser, false);\n\n\t\t\t// Contact\n\n\t\t\tContact defaultContact = contactPersistence.create(\n\t\t\t\tdefaultUser.getContactId());\n\n\t\t\tdefaultContact.setCompanyId(defaultUser.getCompanyId());\n\t\t\tdefaultContact.setUserId(defaultUser.getUserId());\n\t\t\tdefaultContact.setUserName(StringPool.BLANK);\n\t\t\tdefaultContact.setCreateDate(now);\n\t\t\tdefaultContact.setModifiedDate(now);\n\t\t\tdefaultContact.setAccountId(company.getAccountId());\n\t\t\tdefaultContact.setParentContactId(\n\t\t\t\tContactConstants.DEFAULT_PARENT_CONTACT_ID);\n\t\t\tdefaultContact.setFirstName(StringPool.BLANK);\n\t\t\tdefaultContact.setMiddleName(StringPool.BLANK);\n\t\t\tdefaultContact.setLastName(StringPool.BLANK);\n\t\t\tdefaultContact.setMale(true);\n\t\t\tdefaultContact.setBirthday(now);\n\n\t\t\tcontactPersistence.update(defaultContact, false);\n\t\t}\n\n\t\t// System roles\n\n\t\troleLocalService.checkSystemRoles(companyId);\n\n\t\t// System groups\n\n\t\tgroupLocalService.checkSystemGroups(companyId);\n\n\t\t// Company group\n\n\t\tgroupLocalService.checkCompanyGroup(companyId);\n\n\t\t// Default password policy\n\n\t\tpasswordPolicyLocalService.checkDefaultPasswordPolicy(companyId);\n\n\t\t// Default user must have the Guest role\n\n\t\tRole guestRole = roleLocalService.getRole(\n\t\t\tcompanyId, RoleConstants.GUEST);\n\n\t\troleLocalService.setUserRoles(\n\t\t\tdefaultUser.getUserId(), new long[] {guestRole.getRoleId()});\n\n\t\t// Default admin\n\n\t\tif (userPersistence.countByCompanyId(companyId) == 1) {\n\t\t\tlong creatorUserId = 0;\n\t\t\tboolean autoPassword = false;\n\t\t\tString password1 = PropsValues.DEFAULT_ADMIN_PASSWORD;\n\t\t\tString password2 = password1;\n\t\t\tboolean autoScreenName = false;\n\t\t\tString screenName = PropsValues.DEFAULT_ADMIN_SCREEN_NAME;\n\n\t\t\tString emailAddress = null;\n\n\t\t\tif (companyPersistence.countAll() == 1) {\n\t\t\t\temailAddress = PropsValues.DEFAULT_ADMIN_EMAIL_ADDRESS;\n\t\t\t}\n\n\t\t\tif (Validator.isNull(emailAddress)) {\n\t\t\t\temailAddress =\n\t\t\t\t\tPropsValues.DEFAULT_ADMIN_EMAIL_ADDRESS_PREFIX + \"@\" + mx;\n\t\t\t}\n\n\t\t\tlong facebookId = 0;\n\t\t\tString openId = StringPool.BLANK;\n\t\t\tLocale locale = defaultUser.getLocale();\n\t\t\tString firstName = PropsValues.DEFAULT_ADMIN_FIRST_NAME;\n\t\t\tString middleName = PropsValues.DEFAULT_ADMIN_MIDDLE_NAME;\n\t\t\tString lastName = PropsValues.DEFAULT_ADMIN_LAST_NAME;\n\t\t\tint prefixId = 0;\n\t\t\tint suffixId = 0;\n\t\t\tboolean male = true;\n\t\t\tint birthdayMonth = Calendar.JANUARY;\n\t\t\tint birthdayDay = 1;\n\t\t\tint birthdayYear = 1970;\n\t\t\tString jobTitle = StringPool.BLANK;\n\n\t\t\tGroup guestGroup = groupLocalService.getGroup(\n\t\t\t\tcompanyId, GroupConstants.GUEST);\n\n\t\t\tlong[] groupIds = new long[] {guestGroup.getGroupId()};\n\n\t\t\tlong[] organizationIds = null;\n\n\t\t\tRole adminRole = roleLocalService.getRole(\n\t\t\t\tcompanyId, RoleConstants.ADMINISTRATOR);\n\n\t\t\tRole powerUserRole = roleLocalService.getRole(\n\t\t\t\tcompanyId, RoleConstants.POWER_USER);\n\n\t\t\tlong[] roleIds = new long[] {\n\t\t\t\tadminRole.getRoleId(), powerUserRole.getRoleId()\n\t\t\t};\n\n\t\t\tlong[] userGroupIds = null;\n\t\t\tboolean sendEmail = false;\n\t\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\t\tUser defaultAdminUser = userLocalService.addUser(\n\t\t\t\tcreatorUserId, companyId, autoPassword, password1, password2,\n\t\t\t\tautoScreenName, screenName, emailAddress, facebookId, openId,\n\t\t\t\tlocale, firstName, middleName, lastName, prefixId, suffixId,\n\t\t\t\tmale, birthdayMonth, birthdayDay, birthdayYear, jobTitle,\n\t\t\t\tgroupIds, organizationIds, roleIds, userGroupIds, sendEmail,\n\t\t\t\tserviceContext);\n\n\t\t\tuserLocalService.updateEmailAddressVerified(\n\t\t\t\tdefaultAdminUser.getUserId(), true);\n\n\t\t\tuserLocalService.updateLastLogin(\n\t\t\t\tdefaultAdminUser.getUserId(), defaultAdminUser.getLoginIP());\n\n\t\t\tuserLocalService.updatePasswordReset(\n\t\t\t\tdefaultAdminUser.getUserId(), false);\n\t\t}\n\n\t\t// Portlets\n\n\t\tportletLocalService.checkPortlets(companyId);\n\n\t\treturn company;\n\t}","id":54122,"modified_method":"public Company checkCompany(String webId, String mx, String shardName)\n\t\tthrows PortalException, SystemException {\n\n\t\t// Company\n\n\t\tDate now = new Date();\n\n\t\tCompany company = companyPersistence.fetchByWebId(webId);\n\n\t\tif (company == null) {\n\t\t\tString virtualHostname = webId;\n\n\t\t\tif (webId.equals(PropsValues.COMPANY_DEFAULT_WEB_ID)) {\n\t\t\t\tvirtualHostname = _DEFAULT_VIRTUAL_HOST;\n\t\t\t}\n\n\t\t\tString homeURL = null;\n\t\t\tString name = webId;\n\t\t\tString legalName = null;\n\t\t\tString legalId = null;\n\t\t\tString legalType = null;\n\t\t\tString sicCode = null;\n\t\t\tString tickerSymbol = null;\n\t\t\tString industry = null;\n\t\t\tString type = null;\n\t\t\tString size = null;\n\n\t\t\tlong companyId = counterLocalService.increment();\n\n\t\t\tcompany = companyPersistence.create(companyId);\n\n\t\t\ttry {\n\t\t\t\tcompany.setKey(Base64.objectToString(Encryptor.generateKey()));\n\t\t\t}\n\t\t\tcatch (EncryptorException ee) {\n\t\t\t\tthrow new SystemException(ee);\n\t\t\t}\n\n\t\t\tcompany.setWebId(webId);\n\t\t\tcompany.setMx(mx);\n\t\t\tcompany.setActive(true);\n\n\t\t\tcompanyPersistence.update(company, false);\n\n\t\t\t// Shard\n\n\t\t\tshardLocalService.addShard(\n\t\t\t\tCompany.class.getName(), companyId, shardName);\n\n\t\t\t// Company\n\n\t\t\tupdateCompany(\n\t\t\t\tcompanyId, virtualHostname, mx, homeURL, name, legalName,\n\t\t\t\tlegalId, legalType, sicCode, tickerSymbol, industry, type,\n\t\t\t\tsize);\n\n\t\t\t// Virtual host\n\n\t\t\tupdateVirtualHost(companyId, virtualHostname);\n\n\t\t\t// Demo settings\n\n\t\t\tif (webId.equals(\"liferay.net\")) {\n\t\t\t\tcompany = companyPersistence.findByWebId(webId);\n\n\t\t\t\tupdateVirtualHost(companyId, \"demo.liferay.net\");\n\n\t\t\t\tupdateSecurity(\n\t\t\t\t\tcompanyId, CompanyConstants.AUTH_TYPE_EA, true, true, true,\n\t\t\t\t\ttrue, false, true);\n\n\t\t\t\tPortletPreferences preferences = PrefsPropsUtil.getPreferences(\n\t\t\t\t\tcompanyId);\n\n\t\t\t\ttry {\n\t\t\t\t\tpreferences.setValue(\n\t\t\t\t\t\tPropsKeys.ADMIN_EMAIL_FROM_NAME, \"Liferay Demo\");\n\t\t\t\t\tpreferences.setValue(\n\t\t\t\t\t\tPropsKeys.ADMIN_EMAIL_FROM_ADDRESS, \"test@liferay.net\");\n\n\t\t\t\t\tpreferences.store();\n\t\t\t\t}\n\t\t\t\tcatch (IOException ioe) {\n\t\t\t\t\tthrow new SystemException(ioe);\n\t\t\t\t}\n\t\t\t\tcatch (PortletException pe) {\n\t\t\t\t\tthrow new SystemException(pe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\ttry {\n\t\t\t\tshardLocalService.getShard(\n\t\t\t\t\tCompany.class.getName(), company.getCompanyId());\n\t\t\t}\n\t\t\tcatch (NoSuchShardException nsse) {\n\t\t\t\tshardLocalService.addShard(\n\t\t\t\t\tCompany.class.getName(), company.getCompanyId(), shardName);\n\t\t\t}\n\t\t}\n\n\t\tlong companyId = company.getCompanyId();\n\n\t\t// Key\n\n\t\tcheckCompanyKey(companyId);\n\n\t\t// Default user\n\n\t\tUser defaultUser = null;\n\n\t\ttry {\n\t\t\tdefaultUser = userLocalService.getDefaultUser(companyId);\n\n\t\t\tif (!defaultUser.isAgreedToTermsOfUse()) {\n\t\t\t\tdefaultUser.setAgreedToTermsOfUse(true);\n\n\t\t\t\tuserPersistence.update(defaultUser, false);\n\t\t\t}\n\t\t}\n\t\tcatch (NoSuchUserException nsue) {\n\t\t\tlong userId = counterLocalService.increment();\n\n\t\t\tdefaultUser = userPersistence.create(userId);\n\n\t\t\tdefaultUser.setCompanyId(companyId);\n\t\t\tdefaultUser.setCreateDate(now);\n\t\t\tdefaultUser.setModifiedDate(now);\n\t\t\tdefaultUser.setDefaultUser(true);\n\t\t\tdefaultUser.setContactId(counterLocalService.increment());\n\t\t\tdefaultUser.setPassword(\"password\");\n\t\t\tdefaultUser.setScreenName(String.valueOf(defaultUser.getUserId()));\n\t\t\tdefaultUser.setEmailAddress(\"default@\" + company.getMx());\n\t\t\tdefaultUser.setLanguageId(LocaleUtil.getDefault().toString());\n\t\t\tdefaultUser.setTimeZoneId(TimeZoneUtil.getDefault().getID());\n\t\t\tdefaultUser.setGreeting(\n\t\t\t\tLanguageUtil.format(\n\t\t\t\t\tdefaultUser.getLocale(), \"welcome-x\", StringPool.BLANK,\n\t\t\t\t\tfalse));\n\t\t\tdefaultUser.setLoginDate(now);\n\t\t\tdefaultUser.setFailedLoginAttempts(0);\n\t\t\tdefaultUser.setAgreedToTermsOfUse(true);\n\t\t\tdefaultUser.setStatus(WorkflowConstants.STATUS_APPROVED);\n\n\t\t\tuserPersistence.update(defaultUser, false);\n\n\t\t\t// Contact\n\n\t\t\tContact defaultContact = contactPersistence.create(\n\t\t\t\tdefaultUser.getContactId());\n\n\t\t\tdefaultContact.setCompanyId(defaultUser.getCompanyId());\n\t\t\tdefaultContact.setUserId(defaultUser.getUserId());\n\t\t\tdefaultContact.setUserName(StringPool.BLANK);\n\t\t\tdefaultContact.setCreateDate(now);\n\t\t\tdefaultContact.setModifiedDate(now);\n\t\t\tdefaultContact.setAccountId(company.getAccountId());\n\t\t\tdefaultContact.setParentContactId(\n\t\t\t\tContactConstants.DEFAULT_PARENT_CONTACT_ID);\n\t\t\tdefaultContact.setFirstName(StringPool.BLANK);\n\t\t\tdefaultContact.setMiddleName(StringPool.BLANK);\n\t\t\tdefaultContact.setLastName(StringPool.BLANK);\n\t\t\tdefaultContact.setMale(true);\n\t\t\tdefaultContact.setBirthday(now);\n\n\t\t\tcontactPersistence.update(defaultContact, false);\n\t\t}\n\n\t\t// System roles\n\n\t\troleLocalService.checkSystemRoles(companyId);\n\n\t\t// System groups\n\n\t\tgroupLocalService.checkSystemGroups(companyId);\n\n\t\t// Company group\n\n\t\tgroupLocalService.checkCompanyGroup(companyId);\n\n\t\t// Default password policy\n\n\t\tpasswordPolicyLocalService.checkDefaultPasswordPolicy(companyId);\n\n\t\t// Default user must have the Guest role\n\n\t\tRole guestRole = roleLocalService.getRole(\n\t\t\tcompanyId, RoleConstants.GUEST);\n\n\t\troleLocalService.setUserRoles(\n\t\t\tdefaultUser.getUserId(), new long[] {guestRole.getRoleId()});\n\n\t\t// Default admin\n\n\t\tif (userPersistence.countByCompanyId(companyId) == 1) {\n\t\t\tlong creatorUserId = 0;\n\t\t\tboolean autoPassword = false;\n\t\t\tString password1 = PropsValues.DEFAULT_ADMIN_PASSWORD;\n\t\t\tString password2 = password1;\n\t\t\tboolean autoScreenName = false;\n\t\t\tString screenName = PropsValues.DEFAULT_ADMIN_SCREEN_NAME;\n\n\t\t\tString emailAddress = null;\n\n\t\t\tif (companyPersistence.countAll() == 1) {\n\t\t\t\temailAddress = PropsValues.DEFAULT_ADMIN_EMAIL_ADDRESS;\n\t\t\t}\n\n\t\t\tif (Validator.isNull(emailAddress)) {\n\t\t\t\temailAddress =\n\t\t\t\t\tPropsValues.DEFAULT_ADMIN_EMAIL_ADDRESS_PREFIX + \"@\" + mx;\n\t\t\t}\n\n\t\t\tlong facebookId = 0;\n\t\t\tString openId = StringPool.BLANK;\n\t\t\tLocale locale = defaultUser.getLocale();\n\t\t\tString firstName = PropsValues.DEFAULT_ADMIN_FIRST_NAME;\n\t\t\tString middleName = PropsValues.DEFAULT_ADMIN_MIDDLE_NAME;\n\t\t\tString lastName = PropsValues.DEFAULT_ADMIN_LAST_NAME;\n\t\t\tint prefixId = 0;\n\t\t\tint suffixId = 0;\n\t\t\tboolean male = true;\n\t\t\tint birthdayMonth = Calendar.JANUARY;\n\t\t\tint birthdayDay = 1;\n\t\t\tint birthdayYear = 1970;\n\t\t\tString jobTitle = StringPool.BLANK;\n\n\t\t\tGroup guestGroup = groupLocalService.getGroup(\n\t\t\t\tcompanyId, GroupConstants.GUEST);\n\n\t\t\tlong[] groupIds = new long[] {guestGroup.getGroupId()};\n\n\t\t\tlong[] organizationIds = null;\n\n\t\t\tRole adminRole = roleLocalService.getRole(\n\t\t\t\tcompanyId, RoleConstants.ADMINISTRATOR);\n\n\t\t\tRole powerUserRole = roleLocalService.getRole(\n\t\t\t\tcompanyId, RoleConstants.POWER_USER);\n\n\t\t\tlong[] roleIds = new long[] {\n\t\t\t\tadminRole.getRoleId(), powerUserRole.getRoleId()\n\t\t\t};\n\n\t\t\tlong[] userGroupIds = null;\n\t\t\tboolean sendEmail = false;\n\t\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\t\tUser defaultAdminUser = userLocalService.addUser(\n\t\t\t\tcreatorUserId, companyId, autoPassword, password1, password2,\n\t\t\t\tautoScreenName, screenName, emailAddress, facebookId, openId,\n\t\t\t\tlocale, firstName, middleName, lastName, prefixId, suffixId,\n\t\t\t\tmale, birthdayMonth, birthdayDay, birthdayYear, jobTitle,\n\t\t\t\tgroupIds, organizationIds, roleIds, userGroupIds, sendEmail,\n\t\t\t\tserviceContext);\n\n\t\t\tuserLocalService.updateEmailAddressVerified(\n\t\t\t\tdefaultAdminUser.getUserId(), true);\n\n\t\t\tuserLocalService.updateLastLogin(\n\t\t\t\tdefaultAdminUser.getUserId(), defaultAdminUser.getLoginIP());\n\n\t\t\tuserLocalService.updatePasswordReset(\n\t\t\t\tdefaultAdminUser.getUserId(), false);\n\t\t}\n\n\t\t// Portlets\n\n\t\tportletLocalService.checkPortlets(companyId);\n\n\t\treturn company;\n\t}","commit_id":"d4f672d5b535662390b1a5384351ee92d3c105b6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void checkCompanyKey(long companyId)\n\t\tthrows PortalException, SystemException {\n\n\t\tCompany company = companyPersistence.findByPrimaryKey(companyId);\n\n\t\tif ((Validator.isNull(company.getKey())) &&\n\t\t\t(company.getKeyObj() == null)) {\n\n\t\t\ttry {\n\t\t\t\tcompany.setKeyObj(Encryptor.generateKey());\n\t\t\t}\n\t\t\tcatch (EncryptorException ee) {\n\t\t\t\tthrow new SystemException(ee);\n\t\t\t}\n\n\t\t\tcompanyPersistence.update(company, false);\n\t\t}\n\t}","id":54123,"modified_method":"public void checkCompanyKey(long companyId)\n\t\tthrows PortalException, SystemException {\n\n\t\tCompany company = companyPersistence.findByPrimaryKey(companyId);\n\n\t\tif ((Validator.isNull(company.getKey())) &&\n\t\t\t(company.getKeyObj() == null)) {\n\n\t\t\ttry {\n\t\t\t\tcompany.setKey(Base64.objectToString(Encryptor.generateKey()));\n\t\t\t}\n\t\t\tcatch (EncryptorException ee) {\n\t\t\t\tthrow new SystemException(ee);\n\t\t\t}\n\n\t\t\tcompanyPersistence.update(company, false);\n\t\t}\n\t}","commit_id":"d4f672d5b535662390b1a5384351ee92d3c105b6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tString keyAlgorithm = Encryptor.KEY_ALGORITHM;\n\n\t\tif (keyAlgorithm.equals(\"DES\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tList<Company> companies = CompanyLocalServiceUtil.getCompanies();\n\n\t\tfor (Company company : companies) {\n\t\t\tupgradeKey(company);\n\t\t}\n\t}","id":54124,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tString keyAlgorithm = Encryptor.KEY_ALGORITHM;\n\n\t\tif (keyAlgorithm.equals(\"DES\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tConnection con = null;\n\t\tPreparedStatement ps = null;\n\t\tResultSet rs = null;\n\n\t\ttry {\n\t\t\tcon = DataAccess.getUpgradeOptimizedConnection();\n\n\t\t\tps = con.prepareStatement(\"select companyId, key_ from Company\");\n\n\t\t\trs = ps.executeQuery();\n\n\t\t\twhile (rs.next()) {\n\t\t\t\tlong companyId = rs.getLong(\"companyId\");\n\t\t\t\tString key = rs.getString(\"key_\");\n\n\t\t\t\tupgradeKey(companyId, key);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tDataAccess.cleanUp(con, ps, rs);\n\t\t}\n\t}","commit_id":"736c46dfaed0fb4bfa29b67eadc14ce2a4cf2e93","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void actionPerformed(ActionEvent e) {\n// Functionality moved to MergeMapsChooser Dialog and LWMergeMap 1/26/2007\n/*        try {\n            ArrayList<ConnectivityMatrix> list = new ArrayList();\n            LWMap referenceMap = null;\n            Iterator<LWMap> i =   VUE.getLeftTabbedPane().getAllMaps();\n            while(i.hasNext()) {\n                LWMap map = i.next();\n                if(referenceMap == null)\n                    referenceMap = map;\n                list.add(new ConnectivityMatrix(map));\n//                System.out.println(\"Map:\"+map.getLabel());\n            }\n            VoteAggregate voteAggregate = new VoteAggregate(list);\n//            System.out.println(voteAggregate);\n            LWMap aggregate = new LWMergeMap(\"Vote Aggregate\");\n            Iterator children = referenceMap.getNodeIterator();\n            while(children.hasNext()) {\n                LWComponent comp = (LWComponent)children.next();\n              //  System.out.print(\"Label: \"+comp.getLabel()+\" vote:\"+voteAggregate.isNodeVoteAboveThreshold(comp.getLabel()));\n                if(voteAggregate.isNodeVoteAboveThreshold(comp.getLabel())) {\n                    LWNode node = (LWNode)comp.duplicate();\n                   aggregate.addNode(node);\n               }\n            }\n            Iterator children1 = aggregate.getNodeIterator();\n            while(children1.hasNext()) {\n                LWNode node1 = (LWNode)children1.next();\n//                System.out.println(\"Processing node: \"+node1.getLabel());\n                Iterator children2 = aggregate.getNodeIterator();\n                while(children2.hasNext()) {\n                    LWNode node2 = (LWNode)children2.next();\n                    if(node2 != node1) {\n                        int c = voteAggregate.getConnection(node1.getLabel(),node2.getLabel());\n                        if(c >0) {\n                            aggregate.addLink(new LWLink(node1,node2));\n//                            System.out.println(\"Adding Link between: \"+node1.getLabel()+ \" and \"+ node2.getLabel());\n                        }\n                    }\n                }\n            }\n            VUE.displayMap(aggregate);\n            \n        } catch(Exception ex) {\n            ex.printStackTrace();\n        }*/\n        \n        MergeMapsChooser mmc = new MergeMapsChooser();\n        tufts.vue.gui.DockWindow w = tufts.vue.gui.GUI.createDockWindow(\"Merge Maps\",mmc);\n        mmc.setDockWindow(w);\n        w.setLocation(200,200);\n        w.pack();\n        w.setVisible(true);\n                \n    }","id":54125,"modified_method":"public void actionPerformed(ActionEvent e) {\n// Functionality moved to MergeMapsChooser Dialog and LWMergeMap 1/26/2007\n/*        try {\n            ArrayList<ConnectivityMatrix> list = new ArrayList();\n            LWMap referenceMap = null;\n            Iterator<LWMap> i =   VUE.getLeftTabbedPane().getAllMaps();\n            while(i.hasNext()) {\n                LWMap map = i.next();\n                if(referenceMap == null)\n                    referenceMap = map;\n                list.add(new ConnectivityMatrix(map));\n//                System.out.println(\"Map:\"+map.getLabel());\n            }\n            VoteAggregate voteAggregate = new VoteAggregate(list);\n//            System.out.println(voteAggregate);\n            LWMap aggregate = new LWMergeMap(\"Vote Aggregate\");\n            Iterator children = referenceMap.getNodeIterator();\n            while(children.hasNext()) {\n                LWComponent comp = (LWComponent)children.next();\n              //  System.out.print(\"Label: \"+comp.getLabel()+\" vote:\"+voteAggregate.isNodeVoteAboveThreshold(comp.getLabel()));\n                if(voteAggregate.isNodeVoteAboveThreshold(comp.getLabel())) {\n                    LWNode node = (LWNode)comp.duplicate();\n                   aggregate.addNode(node);\n               }\n            }\n            Iterator children1 = aggregate.getNodeIterator();\n            while(children1.hasNext()) {\n                LWNode node1 = (LWNode)children1.next();\n//                System.out.println(\"Processing node: \"+node1.getLabel());\n                Iterator children2 = aggregate.getNodeIterator();\n                while(children2.hasNext()) {\n                    LWNode node2 = (LWNode)children2.next();\n                    if(node2 != node1) {\n                        int c = voteAggregate.getConnection(node1.getLabel(),node2.getLabel());\n                        if(c >0) {\n                            aggregate.addLink(new LWLink(node1,node2));\n//                            System.out.println(\"Adding Link between: \"+node1.getLabel()+ \" and \"+ node2.getLabel());\n                        }\n                    }\n                }\n            }\n            VUE.displayMap(aggregate);\n            \n        } catch(Exception ex) {\n            ex.printStackTrace();\n        }*/\n        \n        tufts.vue.gui.DockWindow w = MergeMapsChooser.getDockWindow();\n        \n        if(w==null)\n        {\n           MergeMapsChooser mmc = new MergeMapsChooser();\n           w = tufts.vue.gui.GUI.createDockWindow(\"Merge Maps\",mmc);\n           MergeMapsChooser.setDockWindow(w);  \n        }\n        \n        if(!w.isVisible())\n        {\n          w.setLocation(200,200);\n          w.pack();\n          w.setVisible(true);\n        }\n                \n    }","commit_id":"2a3a0ad699912746d20d7913432b5e33582f7337","url":"https://github.com/VUE/VUE"},{"original_method":"public static String getTitle()\n    {\n        return \"Merge Map #\" + (++maps);\n    }","id":54126,"modified_method":"public static String getTitle()\n    {\n        return \"Merge Map\" + (++maps) + \"*\";\n    }","commit_id":"2a3a0ad699912746d20d7913432b5e33582f7337","url":"https://github.com/VUE/VUE"},{"original_method":"public void adjustColor(int index)\n    {\n       if(!check.isSelected())\n       {\n         setBackground(lightGray);\n         check.setBackground(lightGray);\n       }\n       else\n       {\n          if(index%2==0)\n          {\n             setBackground(lightBlue);\n             check.setBackground(lightBlue);\n          }\n          else\n          {\n             setBackground(Color.WHITE);\n             check.setBackground(Color.WHITE);\n          }\n       }\n    }","id":54127,"modified_method":"public void adjustColor(int index)\n    {\n       if(!check.isSelected())\n       {\n        // disable until also setting VueButton correctly\n        // as well resolving issue of interior of checkbox\n        // setBackground(lightGray);\n        // check.setBackground(lightGray);\n       }\n       else\n       {\n          if(index%2==0)\n          {\n             setBackground(lightBlue);\n             check.setBackground(lightBlue);\n          }\n          else\n          {\n             setBackground(Color.WHITE);\n             check.setBackground(Color.WHITE);\n          }\n       }\n    }","commit_id":"2a3a0ad699912746d20d7913432b5e33582f7337","url":"https://github.com/VUE/VUE"},{"original_method":"public MapListElementPanel(LWMap map) {\n        \n        setMap(map);\n        String text = getMap().getLabel();\n        check = new JCheckBox();\n        JLabel fileName = new JLabel(text);\n        remove = new tufts.vue.gui.VueButton(\"delete\");\n        \n        check.setSelected(true);\n        \n        GridBagLayout gridBag = new GridBagLayout();\n        GridBagConstraints c = new GridBagConstraints();\n        setLayout(gridBag);\n        c.fill = GridBagConstraints.HORIZONTAL;\n        c.weightx = 0.0;\n        gridBag.setConstraints(check,c);\n        add(check);\n        c.weightx = 1.0;\n        gridBag.setConstraints(fileName,c);\n        add(fileName);\n        c.weightx = 0.0;\n        gridBag.setConstraints(remove,c);\n        add(remove);\n        \n        check.addActionListener(this);\n        remove.addActionListener(this);\n    }","id":54128,"modified_method":"public MapListElementPanel(LWMap map) {\n        \n        type = MAP;\n        setMap(map);\n        String text = getMap().getLabel();\n        check = new JCheckBox();\n        JLabel fileName = new JLabel(text);\n        remove = new tufts.vue.gui.VueButton(\"delete\");\n        \n        check.setSelected(true);\n        \n        GridBagLayout gridBag = new GridBagLayout();\n        GridBagConstraints c = new GridBagConstraints();\n        setLayout(gridBag);\n        c.fill = GridBagConstraints.HORIZONTAL;\n        c.weightx = 0.0;\n        gridBag.setConstraints(check,c);\n        add(check);\n        c.weightx = 1.0;\n        gridBag.setConstraints(fileName,c);\n        add(fileName);\n        c.weightx = 0.0;\n        gridBag.setConstraints(remove,c);\n        add(remove);\n        \n        check.addActionListener(this);\n        remove.addActionListener(this);\n    }","commit_id":"2a3a0ad699912746d20d7913432b5e33582f7337","url":"https://github.com/VUE/VUE"},{"original_method":"/** Creates a new instance of MapListPanel */\n    public MapListPanel() {\n    }","id":54129,"modified_method":"/** Creates a new instance of MapListPanel */\n    public MapListPanel() {\n        setLayout(new GridLayout(0,1));\n    }","commit_id":"2a3a0ad699912746d20d7913432b5e33582f7337","url":"https://github.com/VUE/VUE"},{"original_method":"public MergeMapsChooser() \n    {\n        VUE.addActiveMapListener(this);\n        setLayout(new BorderLayout());\n        JTabbedPane mTabbedPane = new JTabbedPane();\n        VueResources.initComponent(mTabbedPane,\"tabPane\");\n        \n        setUpSelectPanel();\n        mTabbedPane.addTab(\"Select Maps\",selectPanel);\n        setUpBasePanel();\n        //base panel logic is not yet quite complete below\n        //have to watch for user selection of non active but visible map\n        //mTabbedPane.addTab(\"Base Map\",basePanel);\n        \n        add(BorderLayout.CENTER,mTabbedPane);\n        setActiveMap(VUE.getActiveMap());\n        validate();\n        setVisible(true);\n    }","id":54130,"modified_method":"public MergeMapsChooser() \n    {\n        VUE.addActiveMapListener(this);\n        setLayout(new BorderLayout());\n        JTabbedPane mTabbedPane = new JTabbedPane();\n        VueResources.initComponent(mTabbedPane,\"tabPane\");\n        \n        //setUpSelectPanel();\n        selectPanelHolder = new JPanel();\n        sp = new SelectPanel();\n        if(activeMap != null)\n        {    \n          selectPanels.put(getActiveMap(),sp);\n        }\n        selectPanelHolder.add(sp);\n        mTabbedPane.addTab(\"Select Maps\",selectPanelHolder);\n        setUpBasePanel();\n        mTabbedPane.addTab(\"Base Map\",basePanel);\n        setUpVizPanel();\n        mTabbedPane.addTab(\"Visualization Settings\",vizPanel);\n        \n        add(BorderLayout.CENTER,mTabbedPane);\n        setActiveMap(VUE.getActiveMap());\n        validate();\n        setVisible(true);\n    }","commit_id":"2a3a0ad699912746d20d7913432b5e33582f7337","url":"https://github.com/VUE/VUE"},{"original_method":"public void setUpBasePanel()\n    {\n        basePanel = new JPanel();\n        String baseMessage = \"Select base map:\";\n        JLabel baseLabel = new JLabel(baseMessage);\n        String[] choices = {VUE.getActiveMap().getLabel(),\"other\"};\n        baseChoice = new JComboBox(choices);\n        JLabel helpLabel = new JLabel(VueResources.getIcon(\"helpIcon.raw\"));\n        basePanel.add(baseLabel);\n        basePanel.add(baseChoice);\n        basePanel.add(helpLabel);\n    }","id":54131,"modified_method":"public void setUpBasePanel()\n    {\n        GridBagLayout baseGridBag = new GridBagLayout();\n        GridBagConstraints baseConstraints = new GridBagConstraints();\n        basePanel = new JPanel();\n        basePanel.setLayout(new BoxLayout(basePanel,BoxLayout.Y_AXIS));\n        JPanel baseInnerPanel = new JPanel()\n        {\n            public Dimension getMaximumSize()\n            {\n                 return new Dimension(400,30);\n            }\n        };\n        baseInnerPanel.setLayout(baseGridBag);\n        String baseMessage = \"Select base map:\";\n        JLabel baseLabel = new JLabel(baseMessage);\n        String[] choices = {VUE.getActiveMap().getLabel(),\"other\"};\n        baseChoice = new JComboBox(choices);\n        baseChoice.setRenderer(new MapChoiceCellRenderer());\n        JLabel helpLabel = new JLabel(VueResources.getIcon(\"helpIcon.raw\"));\n        baseGridBag.setConstraints(baseLabel,baseConstraints);\n        baseInnerPanel.add(baseLabel);\n        baseGridBag.setConstraints(baseChoice,baseConstraints);\n        baseInnerPanel.add(baseChoice);\n        baseConstraints.gridwidth = GridBagConstraints.REMAINDER;\n        baseGridBag.setConstraints(helpLabel,baseConstraints);\n        baseInnerPanel.add(helpLabel);\n        basePanel.add(baseInnerPanel);\n        setUpBasePanelBrowse();\n        baseChoice.addActionListener(this);\n        baseBrowseButton.addActionListener(this);\n    }","commit_id":"2a3a0ad699912746d20d7913432b5e33582f7337","url":"https://github.com/VUE/VUE"},{"original_method":"public void actionPerformed(ActionEvent e)\n    {\n        if(e.getSource()==choice)\n        {\n            if(choice.getSelectedIndex()==0)\n            {\n                selectPanel.remove(mapPanel);\n                selectPanel.remove(listScroll);\n                p.pack();\n            }\n            if(choice.getSelectedIndex()==1)\n            {\n                if(mapPanel==null)\n                {\n                    setUpSelectPanelBrowse();\n                }\n                else\n                {\n                    selectPanel.remove(buttonPanel);\n                    selectPanel.add(mapPanel);\n                    selectPanel.add(listScroll);\n                    selectPanel.add(buttonPanel);\n                }\n                p.pack();\n            }\n        }\n        if(e.getSource() == browseButton)\n        {\n            JFileChooser choose = new JFileChooser();\n            choose.showDialog(this,\"Add Map\");\n            selectedFile = choose.getSelectedFile();\n            if(selectedFile != null)\n            {    \n              file.setText(selectedFile.getName());\n              addButton.setEnabled(true);\n            }\n        }\n        if(e.getSource() == addButton)\n        {\n            LWMap map = null;\n            try\n            {        \n              map = ActionUtil.unmarshallMap(selectedFile);\n            }\n            catch(Exception ex)\n            {\n                ex.printStackTrace();\n            }\n            MapListElementPanel mlep = new MapListElementPanel(map);\n            mlep.adjustColor(listPanel.getComponentCount());\n            listPanel.add(mlep);\n            addButton.setEnabled(false);\n            file.setText(\"\");\n            validate();\n        }\n        if(e.getSource() == generateButton)\n        {\n            LWMergeMap map = new LWMergeMap(LWMergeMap.getTitle());\n            //temporary local variable until base map tab is working:\n            LWMap baseMap = VUE.getActiveMap();\n            if(choice.getSelectedItem().equals(ALL_TEXT))\n            {\n               map.addMaps(VUE.getLeftTabbedPane().getAllMaps());  \n            }\n            else if(choice.getSelectedItem().equals(LIST_TEXT))\n            {\n               ArrayList<LWMap> listPanelMaps = new ArrayList<LWMap> ();\n               for(int i=0;i<listPanel.getComponentCount();i++)\n               {\n                   MapListElementPanel mlep = (MapListElementPanel)listPanel.getComponent(i);\n                   if(mlep.isActive())\n                   {\n                     listPanelMaps.add(mlep.getMap());\n                   }\n               }\n               map.addMaps(listPanelMaps.iterator());\n               //also temporary until get base map tab working\n               if(listPanel.getComponentCount()>0)\n               {\n                   baseMap = ((MapListElementPanel)listPanel.getComponent(1)).getMap();\n               }\n            }\n            map.setSelectionText((String)choice.getSelectedItem());\n            //TBD (see above): change this to reflect base tab\n            map.setBaseMap(baseMap);\n            map.mergeMaps();\n            VUE.displayMap(map);\n        }\n    }","id":54132,"modified_method":"public void actionPerformed(ActionEvent e)\n    {\n        if(p==null)\n            return;\n        /*if(e.getSource()==choice)\n        {\n            if(choice.getSelectedIndex()==0)\n            {\n                selectPanel.remove(mapPanel);\n                selectPanel.remove(listScroll);\n                p.pack();\n            }\n            if(choice.getSelectedIndex()==1)\n            {\n                if(mapPanel==null)\n                {\n                    setUpSelectPanelBrowse();\n                }\n                else\n                {\n                    selectPanel.remove(buttonPanel);\n                    selectPanel.add(mapPanel);\n                    selectPanel.add(listScroll);\n                    selectPanel.add(buttonPanel);\n                }\n                p.pack();\n            }\n        }*/\n        /*if(e.getSource() == browseButton)\n        {\n            JFileChooser choose = new JFileChooser();\n            choose.showDialog(this,\"Add Map\");\n            selectedFile = choose.getSelectedFile();\n            if(selectedFile != null)\n            {    \n              file.setText(selectedFile.getName());\n              addButton.setEnabled(true);\n            }\n        }*/\n        /*if(e.getSource() == addButton)\n        {\n            LWMap map = null;\n            try\n            {        \n              map = ActionUtil.unmarshallMap(selectedFile);\n            }\n            catch(Exception ex)\n            {\n                ex.printStackTrace();\n            }\n            MapListElementPanel mlep = new MapListElementPanel(map);\n            mlep.adjustColor(listPanel.getComponentCount());\n            listPanel.add(mlep);\n            addButton.setEnabled(false);\n            file.setText(\"\");\n            validate();\n        }*/\n        if(e.getSource()==baseChoice)\n        {\n          // comment back in to see focus error (and to enable browse to base map)  \n          /*  if(baseChoice.getSelectedItem().equals(\"other\"));\n            {    \n              if(baseBrowsePanel==null)\n              {\n                  setUpBasePanelBrowse();\n              }\n              //basePanel.add(baseBrowsePanel);\n              //basePanel.revalidate();\n              //basePanel.repaint();\n              if(p!=null)\n              {\n                p.pack();\n              }\n            }\n            if(!baseChoice.getSelectedItem().equals(\"other\"))\n            {\n              //basePanel.remove(baseBrowsePanel);\n              //basePanel.revalidate();\n              //basePanel.repaint();\n              if(p!=null)\n              {\n                p.pack();\n              }\n            }*/\n        }\n        if(e.getSource() == baseBrowseButton)\n        {\n            JFileChooser choose = new JFileChooser();\n            choose.showDialog(this,\"SetBase Map\");\n            File selectedBaseFile = choose.getSelectedFile();\n            if(selectedBaseFile != null)\n            {    \n              baseFileField.setText(selectedBaseFile.getName());\n              try\n              {        \n                baseMap = ActionUtil.unmarshallMap(selectedFile);\n              }\n              catch(Exception ex)\n              {\n                ex.printStackTrace();\n              } \n            }\n        }\n        /*if(e.getSource() == generateButton)\n        {\n            //mapList.clear();\n            LWMergeMap map = new LWMergeMap(LWMergeMap.getTitle());\n            //fail safe default value for base map is active map\n            if(baseMap == null)\n            {\n              baseMap = VUE.getActiveMap();\n            }\n            Object baseMapObject = baseChoice.getSelectedItem();\n            if(baseMapObject instanceof LWMap)\n                baseMap = (LWMap)baseMapObject;\n            if(choice.getSelectedItem().equals(ALL_TEXT))\n            {\n               Iterator <LWMap> i = VUE.getLeftTabbedPane().getAllMaps();\n               while(i.hasNext())\n               {\n                   mapList.add(i.next());\n               }\n               map.setSelectChoice(\"all\");\n            }\n            else if(choice.getSelectedItem().equals(LIST_TEXT))\n            {\n               ArrayList<LWMap> listPanelMaps = new ArrayList<LWMap> ();\n               ArrayList<File> mapFileList = new ArrayList<File> ();\n               ArrayList<Boolean> activeFileList = new ArrayList<Boolean> ();\n               for(int i=0;i<listPanel.getComponentCount();i++)\n               {\n                   MapListElementPanel mlep = (MapListElementPanel)listPanel.getComponent(i);\n                   if(mlep.isActive())\n                   {\n                     listPanelMaps.add(mlep.getMap());\n                   }\n                   mapFileList.add(mlep.getMap().getFile());\n                   activeFileList.add(new Boolean(mlep.isActive())); \n               }\n               mapList.addAll(listPanelMaps);\n               map.setMapFileList(mapFileList);\n               map.setActiveMapList(activeFileList);\n               map.setSelectChoice(\"list\");\n            }\n\n            map.setNodeThresholdSliderValue(nodeThresholdSlider.getValue());\n            map.setLinkThresholdSliderValue(linkThresholdSlider.getValue());\n            mergeMaps(map);\n            VUE.displayMap(map);\n        } */\n    }","commit_id":"2a3a0ad699912746d20d7913432b5e33582f7337","url":"https://github.com/VUE/VUE"},{"original_method":"public void setUpSelectPanelBrowse()\n    {\n        String mapMessage = \"Maps:\";\n        JLabel mapLabel = new JLabel(mapMessage);\n        file = new JTextField(15);\n        browseButton = new JButton(\"Browse\");\n        addButton = new JButton(\"Add\");\n        addButton.setEnabled(false);\n        \n        mapPanel = new JPanel();\n                \n        mapPanel.add(mapLabel);\n        mapPanel.add(file);\n        mapPanel.add(browseButton);\n        mapPanel.add(addButton);\n        \n        listPanel = new MapListPanel();\n        //listPanel.setLayout(new javax.swing.BoxLayout(listPanel,javax.swing.BoxLayout.Y_AXIS));\n        listPanel.setLayout(new java.awt.GridLayout(0,1));\n        listScroll = new JScrollPane(listPanel);    \n    }","id":54133,"modified_method":"public void setUpBasePanelBrowse()\n    {\n        baseBrowsePanel = new JPanel();\n        GridBagLayout baseBrowseGridBag = new GridBagLayout();\n        baseBrowsePanel.setLayout(baseBrowseGridBag);\n        GridBagConstraints baseBrowseConstraints = new GridBagConstraints();\n        JLabel basePanelMapLabel = new JLabel(\"Map:\"); \n        baseBrowseConstraints.fill = GridBagConstraints.HORIZONTAL;\n        baseBrowseGridBag.setConstraints(basePanelMapLabel,baseBrowseConstraints);\n        baseBrowsePanel.add(basePanelMapLabel);\n        baseFileField = new JTextField();\n        baseBrowseConstraints.weightx = 1.0;\n        baseBrowseGridBag.setConstraints(baseFileField,baseBrowseConstraints);\n        baseBrowsePanel.add(baseFileField);\n        baseBrowseButton = new JButton(\"Browse\");\n        baseBrowseConstraints.weightx = 0.0;\n        baseBrowseGridBag.setConstraints(baseBrowseButton,baseBrowseConstraints);\n        baseBrowsePanel.add(baseBrowseButton);\n    }","commit_id":"2a3a0ad699912746d20d7913432b5e33582f7337","url":"https://github.com/VUE/VUE"},{"original_method":"public void refreshBaseChoices()\n    {\n        String otherString = \"other\";\n        boolean otherSelected = false;\n        if(baseChoice.getSelectedItem() != null && baseChoice.getSelectedItem().equals(\"other\"))\n        {\n            otherSelected = true;\n        }\n        baseChoice.removeAllItems();   \n        baseChoice.addItem(getActiveMap().getLabel());        \n        baseChoice.addItem(otherString);\n        java.util.Iterator<LWMap> i = VUE.getLeftTabbedPane().getAllMaps();\n        while(i.hasNext()) \n        {\n           LWMap map = i.next();\n           String id = map.getID();\n           String actid = getActiveMap().getID();\n           LWMap am = getActiveMap();\n           if(map!=am)\n               baseChoice.addItem(map.getLabel());\n           else\n               System.out.println(\"refresh base choices:\" + map);\n        }\n        if(otherSelected)\n        {\n            baseChoice.setSelectedItem(otherString);\n        }\n        basePanel.validate();\n    }","id":54134,"modified_method":"public void refreshBaseChoices()\n    {\n        String otherString = \"other\";\n        boolean otherSelected = false;\n        if( baseChoice.getSelectedItem() != null && baseChoice.getSelectedItem().equals(\"other\") )\n        {\n            otherSelected = true;\n        }\n        Object currentSelection = null;\n        if(baseChoice != null && !otherSelected)\n        {\n            currentSelection = baseChoice.getSelectedItem();\n        }\n        baseChoice.removeAllItems();\n        LWMap activeMap = getActiveMap();\n        if(!(activeMap instanceof LWMergeMap))\n        {\n          baseChoice.addItem(activeMap);\n        }\n        baseChoice.addItem(otherString);\n        java.util.Iterator<LWMap> i = VUE.getLeftTabbedPane().getAllMaps();\n        while(i.hasNext()) \n        {\n           LWMap map = i.next();\n           if(map!=activeMap && !(map instanceof LWMergeMap))\n           {\n               baseChoice.addItem(map);\n           }\n        }\n        /*if(otherSelected)\n        {\n            baseChoice.setSelectedItem(otherString);\n        }\n        else\n        if(activeMap instanceof LWMergeMap)\n        {\n            baseChoice.setSelectedItem(((LWMergeMap)activeMap).getBaseMap());\n        }\n        else\n        {\n            baseChoice.setSelectedIndex(0);\n        }*/\n        \n    }","commit_id":"2a3a0ad699912746d20d7913432b5e33582f7337","url":"https://github.com/VUE/VUE"},{"original_method":"public void setActiveMap(LWMap map)\n    {\n        activeMap = map;\n        refreshBaseChoices();\n    }","id":54135,"modified_method":"public void setActiveMap(LWMap map)\n    {\n        /*String selectString = \"Select\";\n        if(map==null)\n        {\n            baseChoice.removeAllItems();\n            baseChoice.addItem(SelectString);\n            return;\n        }   \n        else\n        {\n            baseChoice.removeItem(selectString);\n        }*/\n        if(map==null)\n        {\n            return;\n        }\n        LWMap previousMap = activeMap;\n        activeMap = map;\n        refreshBaseChoices();\n\n        if(map instanceof LWMergeMap)\n        {\n           refreshSettings((LWMergeMap)map);\n        }\n\n        selectPanelHolder.remove(sp);\n        if(selectPanels.containsKey(activeMap))\n        {\n            sp = (SelectPanel)selectPanels.get(activeMap);\n        }\n        else if(activeMap instanceof LWMergeMap)\n        {\n            if(previousMap!=null)\n            {\n              sp = (SelectPanel)selectPanels.get(previousMap);\n            }\n            else\n            {\n                sp = new SelectPanel();\n            }\n        }\n        else\n        {\n            //selectPanel = new JPanel();\n            //setUpSelectPanel();\n            sp = new SelectPanel();\n        }\n        selectPanelHolder.add(sp);\n        selectPanels.put(activeMap,sp);\n        selectPanelHolder.repaint();\n        if(p!=null)\n        {    \n          p.pack();\n        }\n        \n        System.out.println(\"Merge Maps Chooser: \" + selectPanels.get(activeMap));\n        System.out.println(\"Merge Maps Chooser: \" + selectPanels.size());\n    }","commit_id":"2a3a0ad699912746d20d7913432b5e33582f7337","url":"https://github.com/VUE/VUE"},{"original_method":"public void setUpSelectPanel()\n    {\n        selectPanel = new JPanel();\n        selectPanel.setLayout(new BoxLayout(selectPanel,BoxLayout.Y_AXIS));\n        GridBagLayout gridBag = new GridBagLayout();\n        GridBagConstraints c = new GridBagConstraints();\n        \n        String selectMessage = \"Select Maps to merge:\";\n        final JLabel selectLabel = new JLabel(selectMessage);\n        String [] choices = {ALL_TEXT,LIST_TEXT};\n        choice = new JComboBox(choices);\n        JLabel helpLabel = new JLabel(VueResources.getIcon(\"helpIcon.raw\"));\n        \n        JPanel innerPanel = new JPanel()\n        {\n            public Dimension getMaximumSize()\n            {\n                if(p!=null && selectLabel.getHeight() > 0)\n                 return new Dimension(p.getWidth(),selectLabel.getHeight());\n                else\n                 return new Dimension(400,30);\n            }\n        };\n        innerPanel.setLayout(gridBag);\n        \n        choice.addActionListener(this);        \n        \n        c.weightx = 0.0;\n        c.weighty = 1.0;\n        c.anchor = GridBagConstraints.NORTHWEST;\n        gridBag.setConstraints(selectLabel,c);\n        innerPanel.add(selectLabel);\n        gridBag.setConstraints(choice,c);\n        innerPanel.add(choice);\n        c.gridwidth = GridBagConstraints.REMAINDER;\n        gridBag.setConstraints(helpLabel,c);\n        innerPanel.add(helpLabel);\n        \n        selectPanel.add(innerPanel);\n        \n        setUpSelectPanelBrowse();\n        \n        buttonPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT));\n        generateButton = new JButton(\"Generate Map\");\n        buttonPanel.add(generateButton);\n        selectPanel.add(buttonPanel);\n        \n        browseButton.addActionListener(this);\n        addButton.addActionListener(this);\n        generateButton.addActionListener(this);\n        \n    }","id":54136,"modified_method":"public void setUpVizPanel()\n    {\n        vizPanel = new JPanel();\n        GridBagLayout vizLayout = new GridBagLayout();\n        GridBagConstraints vizConstraints = new GridBagConstraints();\n        vizPanel.setLayout(vizLayout);\n        String[] vizChoices = {\"Vote\",\"Weight\"};\n        JComboBox vizChoice = new JComboBox(vizChoices);\n        vizConstraints.gridwidth = GridBagConstraints.REMAINDER;\n        vizLayout.setConstraints(vizChoice,vizConstraints);\n        vizPanel.add(vizChoice);\n        nodeThresholdSlider = new JSlider(0,100,50);\n        nodeThresholdSlider.setPaintTicks(true);\n        nodeThresholdSlider.setMajorTickSpacing(10);\n        nodeThresholdSlider.setPaintLabels(true);\n        java.util.Dictionary labels = nodeThresholdSlider.getLabelTable();\n        java.util.Enumeration e = labels.elements();\n        while(e.hasMoreElements())\n        {\n            Object label = e.nextElement();\n            if(label instanceof javax.swing.JComponent)\n            {\n                ((javax.swing.JComponent)label).setFont(new Font(\"Courier\",Font.PLAIN,9));\n            }\n        }\n        JLabel nodeLabel = new JLabel(\"Nodes:\");\n        vizConstraints.gridwidth = GridBagConstraints.RELATIVE;\n        vizLayout.setConstraints(nodeLabel,vizConstraints);\n        vizPanel.add(nodeLabel);\n        vizLayout.setConstraints(nodeThresholdSlider,vizConstraints);\n        vizPanel.add(nodeThresholdSlider);\n        percentageDisplay = new JLabel(nodeThresholdSlider.getValue()+ \"%\");\n        nodeThresholdSlider.addChangeListener(this);\n        vizConstraints.gridwidth = GridBagConstraints.REMAINDER;\n        vizLayout.setConstraints(percentageDisplay,vizConstraints);\n        vizPanel.add(percentageDisplay);\n        \n        linkThresholdSlider = new JSlider(0,100,50);\n        linkThresholdSlider.setPaintTicks(true);\n        linkThresholdSlider.setMajorTickSpacing(10);\n        linkThresholdSlider.setPaintLabels(true);\n        java.util.Dictionary linkLabels = linkThresholdSlider.getLabelTable();\n        java.util.Enumeration le = linkLabels.elements();\n        while(le.hasMoreElements())\n        {\n            Object linkLabel = le.nextElement();\n            if(linkLabel instanceof javax.swing.JComponent)\n            {\n                ((javax.swing.JComponent)linkLabel).setFont(new Font(\"Courier\",Font.PLAIN,9));\n            }\n        }\n        JLabel linkPanel = new JLabel(\"Links:\");\n        vizConstraints.gridwidth = GridBagConstraints.RELATIVE;\n        vizLayout.setConstraints(linkPanel,vizConstraints);\n        vizPanel.add(linkPanel);\n        vizLayout.setConstraints(linkThresholdSlider,vizConstraints);\n        vizPanel.add(linkThresholdSlider);\n        linkPercentageDisplay = new JLabel(linkThresholdSlider.getValue()+\"%\");\n        linkThresholdSlider.addChangeListener(this);\n        vizConstraints.gridwidth = GridBagConstraints.REMAINDER;\n        vizLayout.setConstraints(linkPercentageDisplay,vizConstraints);\n        vizPanel.add(linkPercentageDisplay);\n    }","commit_id":"2a3a0ad699912746d20d7913432b5e33582f7337","url":"https://github.com/VUE/VUE"},{"original_method":"public TrayIconPeer createTrayIcon(ImageIcon icon, String tooltip,\r\n            Object popup)\r\n            throws IllegalArgumentException,\r\n            UnsupportedOperationException,\r\n            HeadlessException,\r\n            SecurityException\r\n        {\r\n            return new AWTTrayIconPeer(trayIconClass, (icon == null) ? null\r\n                : icon.getImage(), tooltip, (JPopupMenu) popup);\r\n        }","id":54137,"modified_method":"public TrayIconPeer createTrayIcon(ImageIcon icon, String tooltip,\r\n            Object popup)\r\n            throws IllegalArgumentException,\r\n            UnsupportedOperationException,\r\n            HeadlessException,\r\n            SecurityException\r\n        {\r\n            return new AWTTrayIconPeer(trayIconClass, (icon == null) ? null\r\n                : icon.getImage(), tooltip, popup);\r\n        }","commit_id":"99990c64415629e5af4a3a0f86f8861acfbd9e44","url":"https://github.com/jitsi/jitsi"},{"original_method":"public AWTMouseAdapter(JPopupMenu p)\r\n        {\r\n            this.popup = p;\r\n            \r\n            // Get the MainFrame\r\n            ExportedWindow win = SystrayActivator.getUIService()\r\n                .getExportedWindow(ExportedWindow.MAIN_WINDOW);\r\n            \r\n            /* \r\n             * The JPopupMenu need to have a invoker defined to work correctly.\r\n             * It can be the popup menu itself, but if the mainframe is used,\r\n             * the popup automatically closes when the mainframe loses the focus.\r\n             */\r\n            if (win != null)\r\n            {\r\n                Object source = win.getSource();\r\n\r\n                this.mframe = (source instanceof JFrame) ? (Component) source : null;\r\n            }\r\n            else\r\n                this.mframe = null;\r\n        }","id":54138,"modified_method":"public AWTMouseAdapter(JPopupMenu p)\r\n        {\r\n            hiddenWindow = new JWindow();\r\n            hiddenWindow.setAlwaysOnTop(true);\r\n            \r\n            this.popup = p;\r\n            this.popup.addPopupMenuListener(new PopupMenuListener()\r\n            {\r\n                public void popupMenuWillBecomeVisible(PopupMenuEvent e) {\r\n                }\r\n\r\n                public void popupMenuWillBecomeInvisible(PopupMenuEvent e) {\r\n                    hiddenWindow.setVisible(false);\r\n                    popupVisible = false;\r\n                }\r\n\r\n                public void popupMenuCanceled(PopupMenuEvent e) {\r\n                    hiddenWindow.setVisible(false);\r\n                    popupVisible = false;\r\n                }\r\n            });\r\n        }","commit_id":"99990c64415629e5af4a3a0f86f8861acfbd9e44","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void mouseReleased(MouseEvent e)\r\n        {\r\n            // Trick used here, the isVisible function always return false\r\n            // So we manage this manually\r\n            if (e.getButton() == MouseEvent.BUTTON3 && !popupVisible)\r\n            {\r\n                Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();\r\n                int x = e.getX(), y = e.getY();\r\n                \r\n                // Use a margin to avoid the menu hiding the icon\r\n                if (x < MARGIN)\r\n                    x = MARGIN;\r\n                else if (x > screen.getWidth()-MARGIN)\r\n                    x = (int) screen.getWidth()-MARGIN;\r\n                if (y < MARGIN)\r\n                    y = MARGIN;\r\n                else if (y > screen.getHeight()-MARGIN)\r\n                    y = (int) screen.getWidth()-MARGIN;\r\n                \r\n                popup.setLocation(x, y);\r\n                \r\n                if (mframe != null && mframe.isVisible())\r\n                \tpopup.setInvoker(mframe);\r\n                else\r\n                    popup.setInvoker(popup);\r\n                popup.setVisible(true);\r\n                popupVisible = true;\r\n            }\r\n            else\r\n            {\r\n                popup.setVisible(false);\r\n                popupVisible = false;\r\n            }\r\n        }","id":54139,"modified_method":"public void mouseReleased(MouseEvent e)\r\n        {\r\n            // Trick used here, the isVisible function always return false\r\n            // So we manage this manually\r\n            if (e.getButton() == MouseEvent.BUTTON3 && !popupVisible)\r\n            {\r\n                int x = e.getX(), y = e.getY();\r\n                \r\n                hiddenWindow.setLocation(x, y);\r\n                hiddenWindow.setVisible(true);\r\n                this.popup.show(hiddenWindow, 0, 0);\r\n                hiddenWindow.toFront();\r\n                \r\n                popupVisible = true;\r\n            }\r\n            else\r\n            {\r\n                popup.setVisible(false);\r\n                popupVisible = false;\r\n            }\r\n        }","commit_id":"99990c64415629e5af4a3a0f86f8861acfbd9e44","url":"https://github.com/jitsi/jitsi"},{"original_method":"public AWTTrayIconPeer(Class<?> clazz, Image image, String tooltip,\r\n            JPopupMenu popup)\r\n            throws IllegalArgumentException,\r\n            UnsupportedOperationException,\r\n            HeadlessException,\r\n            SecurityException\r\n        {\r\n            Constructor<?> constructor;\r\n            try\r\n            {\r\n                constructor = clazz.getConstructor(new Class<?>[]\r\n                { Image.class, String.class });\r\n                addActionListener =\r\n                    clazz.getMethod(\"addActionListener\", new Class<?>[]\r\n                    { ActionListener.class });\r\n                addMouseListener =\r\n                    clazz.getMethod(\"addMouseListener\", new Class<?>[]\r\n                    { MouseListener.class });\r\n                messageTypeClass =\r\n                    Class.forName(\"java.awt.TrayIcon$MessageType\");\r\n                displayMessage =\r\n                    clazz.getMethod(\"displayMessage\", new Class<?>[]\r\n                    { String.class, String.class, messageTypeClass });\r\n                setIcon = clazz.getMethod(\"setImage\", new Class<?>[]\r\n                { Image.class });\r\n                setIconAutoSize =\r\n                    clazz.getMethod(\"setImageAutoSize\", new Class<?>[]\r\n                    { boolean.class });\r\n            }\r\n            catch (ClassNotFoundException ex)\r\n            {\r\n                throw new UnsupportedOperationException(ex);\r\n            }\r\n            catch (NoSuchMethodException ex)\r\n            {\r\n                throw new UnsupportedOperationException(ex);\r\n            }\r\n\r\n            try\r\n            {\r\n                impl = constructor.newInstance(new Object[]\r\n                { image, tooltip });\r\n                \r\n                addMouseListener(new AWTMouseAdapter(popup));\r\n            }\r\n            catch (IllegalAccessException ex)\r\n            {\r\n                throw new UnsupportedOperationException(ex);\r\n            }\r\n            catch (InstantiationException ex)\r\n            {\r\n                throw new UnsupportedOperationException(ex);\r\n            }\r\n            catch (InvocationTargetException ex)\r\n            {\r\n                Throwable cause = ex.getCause();\r\n                if (cause == null)\r\n                    throw new UnsupportedOperationException(ex);\r\n                if (cause instanceof IllegalArgumentException)\r\n                    throw (IllegalArgumentException) cause;\r\n                if (cause instanceof UnsupportedOperationException)\r\n                    throw (UnsupportedOperationException) cause;\r\n                if (cause instanceof HeadlessException)\r\n                    throw (HeadlessException) cause;\r\n                if (cause instanceof SecurityException)\r\n                    throw (SecurityException) cause;\r\n                throw new UnsupportedOperationException(cause);\r\n            }\r\n        }","id":54140,"modified_method":"public AWTTrayIconPeer(Class<?> clazz, Image image, String tooltip,\r\n            Object popup)\r\n            throws IllegalArgumentException,\r\n            UnsupportedOperationException,\r\n            HeadlessException,\r\n            SecurityException\r\n        {\r\n            Constructor<?> constructor;\r\n            try\r\n            {\r\n                if (popup instanceof JPopupMenu)\r\n                {\r\n                    constructor = clazz.getConstructor(new Class<?>[]\r\n                        { Image.class, String.class });\r\n                }\r\n                else\r\n                {\r\n                    constructor = clazz.getConstructor(new Class<?>[]\r\n                        { Image.class, String.class, PopupMenu.class });\r\n                }\r\n                addActionListener =\r\n                    clazz.getMethod(\"addActionListener\", new Class<?>[]\r\n                    { ActionListener.class });\r\n                addMouseListener =\r\n                    clazz.getMethod(\"addMouseListener\", new Class<?>[]\r\n                    { MouseListener.class });\r\n                messageTypeClass =\r\n                    Class.forName(\"java.awt.TrayIcon$MessageType\");\r\n                displayMessage =\r\n                    clazz.getMethod(\"displayMessage\", new Class<?>[]\r\n                    { String.class, String.class, messageTypeClass });\r\n                setIcon = clazz.getMethod(\"setImage\", new Class<?>[]\r\n                { Image.class });\r\n                setIconAutoSize =\r\n                    clazz.getMethod(\"setImageAutoSize\", new Class<?>[]\r\n                    { boolean.class });\r\n            }\r\n            catch (ClassNotFoundException ex)\r\n            {\r\n                throw new UnsupportedOperationException(ex);\r\n            }\r\n            catch (NoSuchMethodException ex)\r\n            {\r\n                throw new UnsupportedOperationException(ex);\r\n            }\r\n\r\n            try\r\n            {\r\n                if (popup instanceof JPopupMenu)\r\n                {\r\n                    impl = constructor.newInstance(new Object[] { image, tooltip });\r\n                    addMouseListener(new AWTMouseAdapter((JPopupMenu) popup));\r\n                }\r\n                else\r\n                {\r\n                    impl = constructor.newInstance(new Object[] { image, tooltip, popup });\r\n                }\r\n            }\r\n            catch (IllegalAccessException ex)\r\n            {\r\n                throw new UnsupportedOperationException(ex);\r\n            }\r\n            catch (InstantiationException ex)\r\n            {\r\n                throw new UnsupportedOperationException(ex);\r\n            }\r\n            catch (InvocationTargetException ex)\r\n            {\r\n                Throwable cause = ex.getCause();\r\n                if (cause == null)\r\n                    throw new UnsupportedOperationException(ex);\r\n                if (cause instanceof IllegalArgumentException)\r\n                    throw (IllegalArgumentException) cause;\r\n                if (cause instanceof UnsupportedOperationException)\r\n                    throw (UnsupportedOperationException) cause;\r\n                if (cause instanceof HeadlessException)\r\n                    throw (HeadlessException) cause;\r\n                if (cause instanceof SecurityException)\r\n                    throw (SecurityException) cause;\r\n                throw new UnsupportedOperationException(cause);\r\n            }\r\n        }","commit_id":"99990c64415629e5af4a3a0f86f8861acfbd9e44","url":"https://github.com/jitsi/jitsi"},{"original_method":"private static Object createTrayMenuItem(   String name,\n                                                String textID,\n                                                String iconID,\n                                                ActionListener listener,\n                                                boolean swing)\n    {\n        String text = Resources.getString(textID);\n        \n        JMenuItem menuItem = new JMenuItem(text, Resources.getImage(iconID));\n        menuItem.setName(name);\n        menuItem.addActionListener(listener);\n        return menuItem;\n    }","id":54141,"modified_method":"private static Object createTrayMenuItem(   String name,\n                                                String textID,\n                                                String iconID,\n                                                ActionListener listener,\n                                                boolean swing)\n    {\n        String text = Resources.getString(textID);\n        Object trayMenuItem;\n        if (swing)\n        {\n            JMenuItem menuItem = new JMenuItem(text, Resources.getImage(iconID));\n            menuItem.setName(name);\n            menuItem.addActionListener(listener);\n            trayMenuItem = menuItem;\n        }\n        else\n        {\n            MenuItem menuItem = new MenuItem(text);\n            menuItem.setName(name);\n            menuItem.addActionListener(listener);\n            trayMenuItem = menuItem;\n        }\n        return trayMenuItem;\n    }","commit_id":"99990c64415629e5af4a3a0f86f8861acfbd9e44","url":"https://github.com/jitsi/jitsi"},{"original_method":"public static Object createTrayMenu(SystrayServiceJdicImpl tray,\n                                        boolean swing)\n    {\n    \tswing = true;\n        JPopupMenu trayMenu = new JPopupMenu();\n        ActionListener listener = new ActionListener()\n        {\n            public void actionPerformed(ActionEvent event)\n            {\n                TrayMenuFactory.actionPerformed(event);\n            }\n        };\n\n        add(trayMenu, createTrayMenuItem(\"settings\", \"service.gui.SETTINGS\",\n            \"service.systray.CONFIGURE_ICON\", listener, swing));\n        add(trayMenu, createTrayMenuItem(\"addContact\",\n            \"service.gui.ADD_CONTACT\",\n            \"service.gui.icons.ADD_CONTACT_16x16_ICON\", listener, swing));\n        addSeparator(trayMenu);\n        add(trayMenu, new StatusSubMenu(tray, swing).getMenu());\n        addSeparator(trayMenu);\n        add(trayMenu, createTrayMenuItem(\"service.gui.CLOSE\",\n            \"service.gui.CLOSE\", \"service.systray.CLOSE_MENU_ICON\", listener,\n            swing));\n\n        return trayMenu;\n    }","id":54142,"modified_method":"public static Object createTrayMenu(SystrayServiceJdicImpl tray,\n                                        boolean swing)\n    {\n    \t// Enable swing for java 1.6 except for the mac version\n        if (!swing && !System.getProperty(\"os.name\").startsWith(\"Mac\"))\n            swing = true;\n        \n    \tObject trayMenu = swing ? new JPopupMenu() : new PopupMenu();\n        ActionListener listener = new ActionListener()\n        {\n            public void actionPerformed(ActionEvent event)\n            {\n                TrayMenuFactory.actionPerformed(event);\n            }\n        };\n\n        add(trayMenu, createTrayMenuItem(\"settings\", \"service.gui.SETTINGS\",\n            \"service.systray.CONFIGURE_ICON\", listener, swing));\n        add(trayMenu, createTrayMenuItem(\"addContact\",\n            \"service.gui.ADD_CONTACT\",\n            \"service.gui.icons.ADD_CONTACT_16x16_ICON\", listener, swing));\n        addSeparator(trayMenu);\n        add(trayMenu, new StatusSubMenu(tray, swing).getMenu());\n        addSeparator(trayMenu);\n        add(trayMenu, createTrayMenuItem(\"service.gui.CLOSE\",\n            \"service.gui.CLOSE\", \"service.systray.CLOSE_MENU_ICON\", listener,\n            swing));\n\n        return trayMenu;\n    }","commit_id":"99990c64415629e5af4a3a0f86f8861acfbd9e44","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void mouseReleased(MouseEvent e)\n    {\n        setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n        int selectedIndex = this.locationToIndex(e.getPoint());\n\n        ContactListModel listModel = (ContactListModel) this.getModel();\n\n        Object dest = listModel.getElementAt(selectedIndex);\n        if (draggedElement != null)\n        {\n            if (dest instanceof MetaContact)\n            {\n                MetaContact contactDest = (MetaContact) dest;\n                if (draggedElement.getMetaContact() != contactDest)\n                {\n                    if (draggedElement.getContact() != null)\n                    {\n                        // we move the specified contact\n                        mainFrame.getContactList().moveContact(\n                            draggedElement.getContact(), contactDest);\n                    }\n                    else\n                    {\n                        // we move all contacts from this meta contact\n                        Iterator i = draggedElement.\n                            getMetaContact().getContacts();\n\n                        while(i.hasNext())\n                        {\n                            Contact contact = (Contact) i.next();\n                            mainFrame.getContactList().\n                                moveContact(contact, contactDest);\n                        }\n \n                    }\n                }\n            }\n            else if (dest instanceof MetaContactGroup)\n            {\n                MetaContactGroup contactDest = (MetaContactGroup) dest;\n                if (draggedElement.getContact() != null)\n                {\n                    int i = draggedElement.getMetaContact().getContactCount();\n                    if (i > 1)\n                    {\n                        mainFrame.getContactList().moveContact(\n                            draggedElement.getContact(), contactDest);\n                    }\n                    else if (!contactDest.contains(\n                        draggedElement.getMetaContact()))\n                    {\n                        mainFrame.getContactList().moveContact(\n                            draggedElement.getContact(), contactDest);                        \n                    }\n                }\n                else if (!contactDest.contains(draggedElement.getMetaContact()))\n                {\n                    mainFrame.getContactList().moveMetaContact(\n                        draggedElement.getMetaContact(), contactDest);\n                }\n            }\n        }\n        draggedElement = null;\n    }","id":54143,"modified_method":"/**\n     * If we were performing a drag'n drop operation when the mouse is released,\n     * complete it by moving the <tt>Contact<\/tt> and/or <tt>MetaContact<\/tt> enclosed\n     * by the <tt>draggedElement<\/tt> from that <tt>MetaContact<\/tt>\n     * to the <tt>MetaContactGroup<\/tt> or <tt>MetaContact<\/tt> on which\n     * the drop occurs.\n     */\n    public void mouseReleased(MouseEvent e)\n    {\n        int selectedIndex = this.locationToIndex(e.getPoint());\n\n        ContactListModel listModel = (ContactListModel) this.getModel();\n\n        Object dest = listModel.getElementAt(selectedIndex);\n        if (draggedElement != null)\n        {\n            if (dest instanceof MetaContact)\n            {\n                MetaContact contactDest = (MetaContact) dest;\n                if (draggedElement.getMetaContact() != contactDest)\n                {\n                    if (draggedElement.getContact() != null)\n                    {\n                        // we move the specified contact\n                        mainFrame.getContactList().moveContact(\n                            draggedElement.getContact(), contactDest);\n                    }\n                    else\n                    {\n                        // we move all contacts from this meta contact\n                        Iterator i = draggedElement.\n                            getMetaContact().getContacts();\n\n                        while(i.hasNext())\n                        {\n                            Contact contact = (Contact) i.next();\n                            mainFrame.getContactList().\n                                moveContact(contact, contactDest);\n                        }\n \n                    }\n                }\n            }\n            else if (dest instanceof MetaContactGroup)\n            {\n                MetaContactGroup contactDest = (MetaContactGroup) dest;\n                if (draggedElement.getContact() != null)\n                {\n                    // there is a specific contact moved. if this contact\n                    // has fellow in its meta contact parent, we move only\n                    // this contact. Otherwise we move the whole meta contact\n                    // as this contact is the only one inside it.\n                    if (draggedElement.getMetaContact().getContactCount() > 1)\n                    {\n                        mainFrame.getContactList().moveContact(\n                            draggedElement.getContact(), contactDest);\n                    }\n                    else if (!contactDest.contains(\n                        draggedElement.getMetaContact()))\n                    {\n                        mainFrame.getContactList().moveMetaContact(\n                            draggedElement.getMetaContact(), contactDest);                        \n                    }\n                }\n                else if (!contactDest.contains(draggedElement.getMetaContact()))\n                {\n                    mainFrame.getContactList().moveMetaContact(\n                        draggedElement.getMetaContact(), contactDest);\n                }\n            }\n\n            draggedElement.setVisible(false);\n            draggedElement = null;\n        }\n    }","commit_id":"0342be7f50bba99430ef548926e1b23409674763","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates an instance of the <tt>ContactList<\/tt>.\n     * \n     * @param mainFrame The main application window.\n     */\n    public ContactList(MainFrame mainFrame)\n    {\n        this.mainFrame = mainFrame;\n\n        this.contactList = mainFrame.getContactList();\n\n        this.listModel = new ContactListModel(contactList);\n\n        this.setModel(listModel);\n\n        this.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\n\n        this.getSelectionModel().setSelectionMode(\n            ListSelectionModel.SINGLE_SELECTION);\n\n        this.setCellRenderer(new ContactListCellRenderer(mainFrame));\n\n        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n\n        this.contactList.addMetaContactListListener(this);\n\n        this.addMouseListener(this);\n        this.addMouseMotionListener(this);\n\n        this.addListSelectionListener(new ListSelectionListener()\n        {\n            public void valueChanged(ListSelectionEvent e)\n            {\n                if (!e.getValueIsAdjusting())\n                {\n                    currentlySelectedObject = getSelectedValue();\n                }\n            }\n        });\n\n        this.setShowOffline(ConfigurationManager.isShowOffline());\n       \n        new ContactListRefresh().start();\n    }","id":54144,"modified_method":"/**\n     * Creates an instance of the <tt>ContactList<\/tt>.\n     * \n     * @param mainFrame The main application window.\n     */\n    public ContactList(MainFrame mainFrame)\n    {\n        this.mainFrame = mainFrame;\n\n        this.contactList = mainFrame.getContactList();\n\n        this.listModel = new ContactListModel(contactList);\n\n        this.setModel(listModel);\n\n        this.setBorder(BorderFactory.createEmptyBorder(3, 3, 3, 3));\n\n        this.getSelectionModel().setSelectionMode(\n            ListSelectionModel.SINGLE_SELECTION);\n\n        this.setCellRenderer(new ContactListCellRenderer(mainFrame));\n\n        this.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n\n        this.contactList.addMetaContactListListener(this);\n\n        this.addMouseListener(this);\n        this.addMouseMotionListener(this);\n\n        this.addFocusListener(new FocusAdapter() {\n            public void focusLost(FocusEvent e)\n            {\n                if (draggedElement != null)\n                {\n                    draggedElement.setVisible(false);\n                    draggedElement = null;\n                }\n            }\n        });\n        \n        this.addKeyListener(new KeyAdapter() {\n            public void keyPressed(KeyEvent e) \n            {\n                if (e.getKeyCode() == KeyEvent.VK_ESCAPE)\n                {\n                    if (draggedElement != null)\n                    {\n                        draggedElement.setVisible(false);\n                        draggedElement = null;\n                    }\n                }\n            }\n        });\n            \n        this.addListSelectionListener(new ListSelectionListener()\n        {\n            public void valueChanged(ListSelectionEvent e)\n            {\n                if (!e.getValueIsAdjusting())\n                {\n                    currentlySelectedObject = getSelectedValue();\n                }\n            }\n        });\n\n        this.setShowOffline(ConfigurationManager.isShowOffline());\n       \n        new ContactListRefresh().start();\n    }","commit_id":"0342be7f50bba99430ef548926e1b23409674763","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void mousePressed(MouseEvent e)\n    {\n        // Request the focus in the mContact list when user clicks on it.\n        this.requestFocus();\n\n        draggedElement = null;\n\n        // Select the mContact under the right button click.\n        if ((e.getModifiers() & InputEvent.BUTTON2_MASK) != 0\n            || (e.getModifiers() & InputEvent.BUTTON3_MASK) != 0\n            || (e.isControlDown() && !e.isMetaDown()))\n        {\n            this.setSelectedIndex(locationToIndex(e.getPoint()));\n        }\n\n        int selectedIndex = this.getSelectedIndex();\n        Object selectedValue = this.getSelectedValue();\n\n        ContactListCellRenderer renderer = (ContactListCellRenderer) this\n            .getCellRenderer().getListCellRendererComponent(this,\n                selectedValue, selectedIndex, true, true);\n\n        Point selectedCellPoint = this.indexToLocation(selectedIndex);\n\n        int translatedX = e.getX() - selectedCellPoint.x;\n\n        if (selectedValue instanceof MetaContact)\n        {\n            MetaContact mContact = (MetaContact) selectedValue;\n\n            // get the component under the mouse\n            Component component\n                = this.getHorizontalComponent(renderer, translatedX);\n\n            if (component instanceof JLabel)\n            {\n                draggedElement = new ContactListDraggable(\n                    mContact, null, component);\n            }\n            else if (component instanceof JPanel)\n            {\n                if (component.getName() != null\n                    && component.getName().equals(\"buttonsPanel\"))\n                {\n                    JPanel panel = (JPanel) component;\n\n                    int internalX = translatedX\n                        - (renderer.getWidth() - panel.getWidth() - 2);\n\n                    Component c = getHorizontalComponent(panel, internalX);\n\n                    if (c instanceof ContactProtocolButton)\n                    {\n                        draggedElement = new ContactListDraggable(mContact,\n                            ((ContactProtocolButton) c).getProtocolContact()\n                                , component);\n                    }\n                }\n            }\n            if (draggedElement != null)\n            {\n                Component src = draggedElement.getComponent();\n                Component c = src;\n\n                Image image;\n                if (c instanceof ContactProtocolButton)\n                {\n                    // TODO : how to get the icon in front of a metacontact\n                    // in the contact list ?\n                    image = new BufferedImage(\n                        ((ContactProtocolButton) c).getWidth(),\n                        ((ContactProtocolButton) c).getHeight(),\n                        BufferedImage.TYPE_INT_ARGB);\n                }\n                else\n                {\n                    image = new BufferedImage(c.getWidth(), c.getHeight(),\n                            BufferedImage.TYPE_INT_ARGB);\n                }\n                Graphics g = image.getGraphics();\n                c.paint(g);\n                draggedElement.setImage(image);\n\n                Point p = (Point) e.getPoint().clone();\n                SwingUtilities.convertPointToScreen(p, c);\n                SwingUtilities.convertPointFromScreen(p, this);\n                draggedElement.setLocation(p);\n            }\n        }\n    }","id":54145,"modified_method":"/**\n     * Handle a mouse pressed event over the contact list.\n     *\n     * The main thing done when the mouse is pressed over the contact list is,\n     * simply select the <tt>MetaContact<\/tt> on which the event has occured.\n     *\n     * A <tt>ContactListDraggable<\/tt> object is also built, based on the\n     * element on which the mouse has been pressed. If the user is iniating\n     * a drag'n drop operation, the <tt>ContactListDraggable<\/tt> object will\n     * be monitored in <tt>mouseDragged<\/tt> and the dnd operation will be\n     * completed in <tt>mouseReleased<\/tt>.\n     */\n    public void mousePressed(MouseEvent e)\n    {\n        // Request the focus in the meta contact list when user clicks on it.\n        this.requestFocus();\n\n        draggedElement = null;\n\n        // Select the meta contact under the right button click.\n        if ((e.getModifiers() & InputEvent.BUTTON2_MASK) != 0\n            || (e.getModifiers() & InputEvent.BUTTON3_MASK) != 0\n            || (e.isControlDown() && !e.isMetaDown()))\n        {\n            this.setSelectedIndex(locationToIndex(e.getPoint()));\n        }\n\n        int selectedIndex = this.getSelectedIndex();\n        Object selectedValue = this.getSelectedValue();\n\n        ContactListCellRenderer renderer = (ContactListCellRenderer) this\n            .getCellRenderer().getListCellRendererComponent(this,\n                selectedValue, selectedIndex, true, true);\n\n        Point selectedCellPoint = this.indexToLocation(selectedIndex);\n\n        int translatedX = e.getX() - selectedCellPoint.x;\n\n        if (selectedValue instanceof MetaContact)\n        {\n            MetaContact mContact = (MetaContact) selectedValue;\n\n            // get the component under the mouse\n            Component component\n                = this.getHorizontalComponent(renderer, translatedX);\n\n            if (component instanceof JLabel)\n            {\n                Image image = new BufferedImage(component.getWidth(),\n                    component.getHeight(),\n                    BufferedImage.TYPE_INT_ARGB);\n                \n                Graphics g = image.getGraphics();\n                \n                g.setColor(getBackground());\n                g.fillRect(0, 0, image.getWidth(null), image.getHeight(null));\n                \n                component.paint(image.getGraphics());\n                draggedElement = new ContactListDraggable(  this,\n                                                            mContact,\n                                                            null,\n                                                            image);\n            }\n            else if (component instanceof JPanel)\n            {\n                if (component.getName() != null\n                    && component.getName().equals(\"buttonsPanel\"))\n                {\n                    JPanel panel = (JPanel) component;\n\n                    int internalX = translatedX\n                        - (renderer.getWidth() - panel.getWidth() - 2);\n\n                    Component c = getHorizontalComponent(panel, internalX);\n\n                    if (c instanceof ContactProtocolButton)\n                    {\n                     // we are not dragging a whole metacontact but a specific\n                     // contact inside it\n                     ContactProtocolButton cb = (ContactProtocolButton) c;\n                     draggedElement = new ContactListDraggable(\n                                                     this,\n                                                     mContact,\n                                                     cb.getProtocolContact(),\n                                                     cb.getBgImage());\n                    }\n                }\n            }\n        }\n        \n        if (draggedElement != null)\n        {\n            mainFrame.setGlassPane(draggedElement);\n\n            Point p = (Point) e.getPoint().clone();\n\n            p = SwingUtilities.convertPoint(e.getComponent(), p, draggedElement);\n            draggedElement.setLocation(p);\n        }\n    }","commit_id":"0342be7f50bba99430ef548926e1b23409674763","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void mouseDragged(MouseEvent e)\n    {\n        if (draggedElement != null)\n        {\n            try \n            {\n                setCursor(Cursor.getSystemCustomCursor(\"MoveDrop.32x32\"));\n            }\n            catch (Exception ex)\n            {\n                logger.debug(\"Cursor \\\"MoveDrop.32x32\\\" isn't available \");\n                setCursor(Cursor.getDefaultCursor());\n            }\n\n            Point p = (Point) e.getPoint().clone();\n\n            draggedElement.setLocation(p);\n\n//            TODO: give a more attractive visual feedback for the DnD operation,\n//            by drawing the image provided by draggedElement.getImage() at\n//            coordinates draggedElement.getPoint()\n//            Graphics2D g2 = (Graphics2D) getGraphics();\n//            Image img = draggedElement.getImage();\n//            g2.drawImage(img\n//                , (int)\n//                (draggedElement.getPoint().getX() - img.getWidth(this) / 2)\n//                , (int)\n//                (draggedElement.getPoint().getY() - img.getHeight(this) / 2)\n//                , null);\n        }\n    }","id":54146,"modified_method":"/**\n     * If we are moving a <tt>Contact<\/tt> or <tt>MetaContact<\/tt> we\n     * update the coordinates of the dragged element and paint it at its new\n     * position.\n     */\n    public void mouseDragged(MouseEvent e)\n    {\n        if (draggedElement != null)\n        {\n            if (!draggedElement.isVisible())\n                draggedElement.setVisible(true);\n            Point p = (Point) e.getPoint().clone();\n            p = SwingUtilities.convertPoint(e.getComponent(), p, draggedElement);\n            draggedElement.setLocation(p);\n            draggedElement.repaint();\n        }\n    }","commit_id":"0342be7f50bba99430ef548926e1b23409674763","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void setImage(Image image)\n    {\n        this.image = image;\n    }","id":54147,"modified_method":"/**\n     * An image used to give a visual feedback of the dragging operation by\n     * painting it at the current location of the dragged object.\n     * In case we drag a <tt>MetaContact<\/tt>, this image is simply\n     * made of the <tt>JLabel<tt> containing the <tt>MetaContact<\/tt>. If\n     * we draw only a <tt>Contact<\/tt>, the image will be the protocol icon\n     * associated to that contact.\n     * (eg: a bulb if we are dragging a jabber contact)\n     *\n     * @param image an image representing the dragged object\n     */\n    private void setImage(Image image)\n    {\n        this.image = image;\n    }","commit_id":"0342be7f50bba99430ef548926e1b23409674763","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates a new instance of ContactListDraggable\n     */\n    public ContactListDraggable(MetaContact metaContact, Contact contact,\n            Component component)\n    {\n        setMetaContact(metaContact);\n        setContact(contact);\n        setComponent(component);\n    }","id":54148,"modified_method":"/**\n     * Creates a new instance of ContactListDraggable which is a represantation\n     * of an object currently dragged over the contactlist.\n     *\n     * @param metaContact the <tt>MetaContact<\/tt> which we drag.\n     * @param contact specific <tt>Contact<\/tt> concerned within this\n     *        <tt>MetaContact<\/tt> can be null if we are moving the whole\n     *        <tt>MetaContact<\/tt>.\n     * @param image an image used to give a visual feedback of \n     *        the drag operation.\n     */\n    public ContactListDraggable(ContactList contactList,\n        MetaContact metaContact, Contact contact, Image image)\n    {\n        setOpaque(false);\n        \n        this.contactList = contactList;\n        \n        setMetaContact(metaContact);\n        setContact(contact);\n        setImage(image);\n    }","commit_id":"0342be7f50bba99430ef548926e1b23409674763","url":"https://github.com/jitsi/jitsi"},{"original_method":"private void setContact(Contact contact)\n    {\n        this.contact = contact;\n    }","id":54149,"modified_method":"/**     \n     * Set the <tt>Contact<\/tt> associated with this <tt>ContactListDraggable<\/tt>.\n     * Could be null if we are dragging a whole <tt>MetaContact<\/tt>.\n     * If not null, this <tt>Contact<\/tt> <b>is<\/b> a subcontact of the\n     * <tt>MetaContact<\/tt> involved in the dragging operation\n     * \n     * @param contact the specific <tt>Contact<\/tt> wich we are moving\n     */\n    private void setContact(Contact contact)\n    {\n        this.contact = contact;\n    }","commit_id":"0342be7f50bba99430ef548926e1b23409674763","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void setLocation(Point p)\n    {\n        location = p;\n    }","id":54150,"modified_method":"/**\n     * Updates the location of the object currently dragged over the\n     * <tt>ContactList<\/tt>\n     *\n     * @param point the current coordinates of the dragged object.\n     */\n    public void setLocation(Point point)\n    {\n        location = point;\n    }","commit_id":"0342be7f50bba99430ef548926e1b23409674763","url":"https://github.com/jitsi/jitsi"},{"original_method":"private void setMetaContact(MetaContact metaContact)\n    {\n        this.metaContact = metaContact;\n    }","id":54151,"modified_method":"/**\n     * Set the <tt>MetaContact<\/tt> associated with this\n     * <tt>ContactListDraggable<\/tt>\n     *\n     * @param metaContact the <tt>MetaContact<\/tt> from wich we start dragging\n     */\n    private void setMetaContact(MetaContact metaContact)\n    {\n        this.metaContact = metaContact;\n    }","commit_id":"0342be7f50bba99430ef548926e1b23409674763","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Removes all proto contacts that belong to the specified protocol group.\n     *\n     * @param protoGroup the group whose children we want removed.\n     *\n     * @return true if this <tt>MetaContact<\/tt> was modified and false\n     * otherwise.\n     */\n    boolean removeContactsForGroup(ContactGroup protoGroup)\n    {\n        boolean modified = false;\n        Iterator contactsIter = protoContacts.iterator();\n\n        while(contactsIter.hasNext())\n        {\n            Contact contact = (Contact)contactsIter.next();\n\n            if (contact.getParentContactGroup() == protoGroup)\n            {\n                contactsIter.remove();\n                modified = true;\n            }\n        }\n\n        return modified;\n    }","id":54152,"modified_method":"/**\n     * Removes all proto contacts that belong to the specified protocol group.\n     *\n     * @param protoGroup the group whose children we want removed.\n     *\n     * @return true if this <tt>MetaContact<\/tt> was modified and false\n     * otherwise.\n     */\n    boolean removeContactsForGroup(ContactGroup protoGroup)\n    {\n        boolean modified = false;\n        Iterator contactsIter = protoContacts.iterator();\n\n        while(contactsIter.hasNext())\n        {\n            Contact contact = (Contact)contactsIter.next();\n\n            if (contact.getParentContactGroup() == protoGroup)\n            {\n                contactsIter.remove();\n                modified = true;\n            }\n        }\n\n        // if the default contact has been modified, set it to null\n        if (modified && !protoContacts.contains(defaultContact))\n        {\n            defaultContact = null;\n        }\n\n        return modified;\n    }","commit_id":"0342be7f50bba99430ef548926e1b23409674763","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Removes the specified protocol specific contact from the contacts\n     * encapsulated in this <code>MetaContact<\/code>. The method also updates\n     * the total status field accordingly. And updates its ordered position\n     * in its parent group.\n     *\n     * @param contact the contact to remove\n     */\n    void removeProtoContact(Contact contact)\n    {\n        synchronized (parentGroupModLock)\n        {\n            if (parentGroup != null)\n            {\n                parentGroup.lightRemoveMetaContact(this);\n            }\n            contactsOnline -= contact.getPresenceStatus().isOnline() ? 1 : 0;\n            this.protoContacts.remove(contact);\n\n            if (parentGroup != null)\n            {\n                parentGroup.lightAddMetaContact(this);\n            }\n        }\n    }","id":54153,"modified_method":"/**\n     * Removes the specified protocol specific contact from the contacts\n     * encapsulated in this <code>MetaContact<\/code>. The method also updates\n     * the total status field accordingly. And updates its ordered position\n     * in its parent group. If the display name of this <code>MetaContact<\/code>\n     * was the one of the removed contact, we update it.\n     *\n     * @param contact the contact to remove\n     */\n    void removeProtoContact(Contact contact)\n    {\n        synchronized (parentGroupModLock)\n        {\n            if (parentGroup != null)\n            {\n                parentGroup.lightRemoveMetaContact(this);\n            }\n            contactsOnline -= contact.getPresenceStatus().isOnline() ? 1 : 0;\n            this.protoContacts.remove(contact);\n\n            if (defaultContact == contact)\n            {\n                defaultContact = null;\n            }\n\n            if ((protoContacts.size() > 0)\n                    && displayName.equals(contact.getDisplayName()))\n            {\n                displayName = getDefaultContact().getDisplayName();\n            }\n\n            if (parentGroup != null)\n            {\n                parentGroup.lightAddMetaContact(this);\n            }\n        }\n    }","commit_id":"0342be7f50bba99430ef548926e1b23409674763","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Removes all proto contacts that belong to the specified provider.\n     *\n     * @param provider the provider whose contacts we want removed.\n     *\n     * @return true if this <tt>MetaContact<\/tt> was modified and false\n     * otherwise.\n     */\n    boolean removeContactsForProvider(ProtocolProviderService provider)\n    {\n        boolean modified = false;\n        Iterator contactsIter = protoContacts.iterator();\n\n        while(contactsIter.hasNext())\n        {\n            Contact contact = (Contact)contactsIter.next();\n\n            if (contact.getProtocolProvider() == provider)\n            {\n                contactsIter.remove();\n                modified = true;\n            }\n        }\n\n        return modified;\n    }","id":54154,"modified_method":"/**\n     * Removes all proto contacts that belong to the specified provider.\n     *\n     * @param provider the provider whose contacts we want removed.\n     *\n     * @return true if this <tt>MetaContact<\/tt> was modified and false\n     * otherwise.\n     */\n    boolean removeContactsForProvider(ProtocolProviderService provider)\n    {\n        boolean modified = false;\n        Iterator contactsIter = protoContacts.iterator();\n\n        while(contactsIter.hasNext())\n        {\n            Contact contact = (Contact)contactsIter.next();\n\n            if (contact.getProtocolProvider() == provider)\n            {\n                contactsIter.remove();\n                modified = true;\n            }\n        }\n\n        // if the default contact has been modified, set it to null\n        if (modified && !protoContacts.contains(defaultContact))\n        {\n            defaultContact = null;\n        }\n\n        return modified;\n    }","commit_id":"0342be7f50bba99430ef548926e1b23409674763","url":"https://github.com/jitsi/jitsi"},{"original_method":"private ColorPicker(Disposable parent,\n                      @Nullable Color color,\n                      boolean restoreColors, boolean enableOpacity,\n                      List<ColorPickerListener> listeners, boolean opacityInPercent) {\n    myUpdateQueue = new Alarm(Alarm.ThreadToUse.SWING_THREAD, parent);\n    myRed = createColorField(false);\n    myGreen = createColorField(false);\n    myBlue = createColorField(false);\n    myHex = createColorField(true);\n    setLayout(new BorderLayout());\n    setBorder(BorderFactory.createEmptyBorder(5, 5, 0, 5));\n    myColorWheelPanel = new ColorWheelPanel(this, enableOpacity, opacityInPercent);\n\n    myExternalListeners = listeners;\n    myFormat.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        PropertiesComponent.getInstance().setValue(HSB_PROPERTY, String.valueOf(!isRGBMode()), Boolean.FALSE.toString());\n        myR.setText(isRGBMode() ? \"R:\" : \"H:\");\n        myG.setText(isRGBMode() ? \"G:\" : \"S:\");\n        myR_after.setText(isRGBMode() ? \"\" : \"\\u00B0\");\n        myG.setText(isRGBMode() ? \"G:\" : \"S:\");\n        myG_after.setText(isRGBMode() ? \"\" : \"%\");\n        myB_after.setText(isRGBMode() ? \"\" : \"%\");\n        applyColor(myColor);\n      }\n    });\n\n    myPicker = new ColorPipette(this, getColor());\n    myPicker.setListener(new ColorListener() {\n      @Override\n      public void colorChanged(Color color, Object source) {\n        setColor(color, source);\n      }\n    });\n    try {\n      add(buildTopPanel(true), BorderLayout.NORTH);\n      add(myColorWheelPanel, BorderLayout.CENTER);\n\n      myRecentColorsComponent = new RecentColorsComponent(new ColorListener() {\n        @Override\n        public void colorChanged(Color color, Object source) {\n          setColor(color, source);\n        }\n      }, restoreColors);\n\n      add(myRecentColorsComponent, BorderLayout.SOUTH);\n    }\n    catch (ParseException ignore) {\n    }\n\n    //noinspection UseJBColor\n    Color c = ObjectUtils.notNull(color == null ? myRecentColorsComponent.getMostRecentColor() : color, Color.WHITE);\n    setColor(c, this);\n\n    setSize(300, 350);\n\n    final boolean hsb = PropertiesComponent.getInstance().getBoolean(HSB_PROPERTY, false);\n    if (hsb) {\n      myFormat.setSelectedIndex(1);\n    }\n  }","id":54155,"modified_method":"private ColorPicker(Disposable parent,\n                      @Nullable Color color,\n                      boolean restoreColors, boolean enableOpacity,\n                      List<ColorPickerListener> listeners, boolean opacityInPercent) {\n    myUpdateQueue = new Alarm(Alarm.ThreadToUse.SWING_THREAD, parent);\n    myRed = createColorField(false);\n    myGreen = createColorField(false);\n    myBlue = createColorField(false);\n    myHex = createColorField(true);\n    setLayout(new BorderLayout());\n    setBorder(BorderFactory.createEmptyBorder(5, 5, 0, 5));\n    myColorWheelPanel = new ColorWheelPanel(this, enableOpacity, opacityInPercent);\n\n    myExternalListeners = listeners;\n    myFormat.addActionListener(new ActionListener() {\n      @Override\n      public void actionPerformed(ActionEvent e) {\n        PropertiesComponent.getInstance().setValue(HSB_PROPERTY, String.valueOf(!isRGBMode()), Boolean.FALSE.toString());\n        myR.setText(isRGBMode() ? \"R:\" : \"H:\");\n        myG.setText(isRGBMode() ? \"G:\" : \"S:\");\n        myR_after.setText(isRGBMode() ? \"\" : \"\\u00B0\");\n        myG.setText(isRGBMode() ? \"G:\" : \"S:\");\n        myG_after.setText(isRGBMode() ? \"\" : \"%\");\n        myB_after.setText(isRGBMode() ? \"\" : \"%\");\n        applyColor(myColor);\n      }\n    });\n\n    myPicker = createPipette(new ColorListener() {\n      @Override\n      public void colorChanged(Color color, Object source) {\n        setColor(color, source);\n      }\n    }, parent);\n    try {\n      add(buildTopPanel(true), BorderLayout.NORTH);\n      add(myColorWheelPanel, BorderLayout.CENTER);\n\n      myRecentColorsComponent = new RecentColorsComponent(new ColorListener() {\n        @Override\n        public void colorChanged(Color color, Object source) {\n          setColor(color, source);\n        }\n      }, restoreColors);\n\n      add(myRecentColorsComponent, BorderLayout.SOUTH);\n    }\n    catch (ParseException ignore) {\n    }\n\n    //noinspection UseJBColor\n    Color c = ObjectUtils.notNull(color == null ? myRecentColorsComponent.getMostRecentColor() : color, Color.WHITE);\n    setColor(c, this);\n\n    setSize(300, 350);\n\n    final boolean hsb = PropertiesComponent.getInstance().getBoolean(HSB_PROPERTY, false);\n    if (hsb) {\n      myFormat.setSelectedIndex(1);\n    }\n  }","commit_id":"ed21a2e0b3a2c49b79283e62811f916ff327796e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private JComponent buildTopPanel(boolean enablePipette) throws ParseException {\n    final JPanel result = new JPanel(new BorderLayout());\n\n    final JPanel previewPanel = new JPanel(new BorderLayout());\n    if (enablePipette && ColorPipette.isAvailable()) {\n      final JButton pipette = new JButton();\n      pipette.setUI(new BasicButtonUI());\n      pipette.setRolloverEnabled(true);\n      pipette.setIcon(AllIcons.Ide.Pipette);\n      pipette.setBorder(IdeBorderFactory.createEmptyBorder());\n      pipette.setRolloverIcon(AllIcons.Ide.Pipette_rollover);\n      pipette.setFocusable(false);\n      pipette.addActionListener(new ActionListener() {\n        @Override\n        public void actionPerformed(ActionEvent e) {\n          myPicker.myOldColor = getColor();\n          myPicker.pick();\n          //JBPopupFactory.getInstance().createBalloonBuilder(new JLabel(\"Press ESC button to close pipette\"))\n          //  .setAnimationCycle(2000)\n          //  .setSmallVariant(true)\n          //  .createBalloon().show(new RelativePoint(pipette, new Point(pipette.getWidth() / 2, 0)), Balloon.Position.above);\n        }\n      });\n      previewPanel.add(pipette, BorderLayout.WEST);\n    }\n\n    myPreviewComponent = new ColorPreviewComponent();\n    previewPanel.add(myPreviewComponent, BorderLayout.CENTER);\n\n    result.add(previewPanel, BorderLayout.NORTH);\n\n    final JPanel rgbPanel = new JPanel();\n    rgbPanel.setLayout(new BoxLayout(rgbPanel, BoxLayout.X_AXIS));\n    if (!UIUtil.isUnderAquaLookAndFeel()) {\n      myR_after.setPreferredSize(new Dimension(14, -1));\n      myG_after.setPreferredSize(new Dimension(14, -1));\n      myB_after.setPreferredSize(new Dimension(14, -1));\n    }\n    rgbPanel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));\n    rgbPanel.add(myR);\n    rgbPanel.add(myRed);\n    if (!UIUtil.isUnderAquaLookAndFeel()) rgbPanel.add(myR_after);\n    rgbPanel.add(Box.createHorizontalStrut(2));\n    rgbPanel.add(myG);\n    rgbPanel.add(myGreen);\n    if (!UIUtil.isUnderAquaLookAndFeel()) rgbPanel.add(myG_after);\n    rgbPanel.add(Box.createHorizontalStrut(2));\n    rgbPanel.add(myB);\n    rgbPanel.add(myBlue);\n    if (!UIUtil.isUnderAquaLookAndFeel()) rgbPanel.add(myB_after);\n    rgbPanel.add(Box.createHorizontalStrut(2));\n    rgbPanel.add(myFormat);\n\n    result.add(rgbPanel, BorderLayout.WEST);\n\n    final JPanel hexPanel = new JPanel();\n    hexPanel.setLayout(new BoxLayout(hexPanel, BoxLayout.X_AXIS));\n    hexPanel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));\n    hexPanel.add(new JLabel(\"#\"));\n    hexPanel.add(myHex);\n\n    result.add(hexPanel, BorderLayout.EAST);\n\n    return result;\n  }","id":54156,"modified_method":"private JComponent buildTopPanel(boolean enablePipette) throws ParseException {\n    final JPanel result = new JPanel(new BorderLayout());\n\n    final JPanel previewPanel = new JPanel(new BorderLayout());\n    if (enablePipette && myPicker != null) {\n      final JButton pipette = new JButton();\n      pipette.setUI(new BasicButtonUI());\n      pipette.setRolloverEnabled(true);\n      pipette.setIcon(AllIcons.Ide.Pipette);\n      pipette.setBorder(IdeBorderFactory.createEmptyBorder());\n      pipette.setRolloverIcon(AllIcons.Ide.Pipette_rollover);\n      pipette.setFocusable(false);\n      pipette.addActionListener(new ActionListener() {\n        @Override\n        public void actionPerformed(ActionEvent e) {\n          myPicker.setColor(getColor());\n          myPicker.show();\n        }\n      });\n      previewPanel.add(pipette, BorderLayout.WEST);\n    }\n\n    myPreviewComponent = new ColorPreviewComponent();\n    previewPanel.add(myPreviewComponent, BorderLayout.CENTER);\n\n    result.add(previewPanel, BorderLayout.NORTH);\n\n    final JPanel rgbPanel = new JPanel();\n    rgbPanel.setLayout(new BoxLayout(rgbPanel, BoxLayout.X_AXIS));\n    if (!UIUtil.isUnderAquaLookAndFeel()) {\n      myR_after.setPreferredSize(new Dimension(14, -1));\n      myG_after.setPreferredSize(new Dimension(14, -1));\n      myB_after.setPreferredSize(new Dimension(14, -1));\n    }\n    rgbPanel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));\n    rgbPanel.add(myR);\n    rgbPanel.add(myRed);\n    if (!UIUtil.isUnderAquaLookAndFeel()) rgbPanel.add(myR_after);\n    rgbPanel.add(Box.createHorizontalStrut(2));\n    rgbPanel.add(myG);\n    rgbPanel.add(myGreen);\n    if (!UIUtil.isUnderAquaLookAndFeel()) rgbPanel.add(myG_after);\n    rgbPanel.add(Box.createHorizontalStrut(2));\n    rgbPanel.add(myB);\n    rgbPanel.add(myBlue);\n    if (!UIUtil.isUnderAquaLookAndFeel()) rgbPanel.add(myB_after);\n    rgbPanel.add(Box.createHorizontalStrut(2));\n    rgbPanel.add(myFormat);\n\n    result.add(rgbPanel, BorderLayout.WEST);\n\n    final JPanel hexPanel = new JPanel();\n    hexPanel.setLayout(new BoxLayout(hexPanel, BoxLayout.X_AXIS));\n    hexPanel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));\n    hexPanel.add(new JLabel(\"#\"));\n    hexPanel.add(myHex);\n\n    result.add(hexPanel, BorderLayout.EAST);\n\n    return result;\n  }","commit_id":"ed21a2e0b3a2c49b79283e62811f916ff327796e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player player = game.getPlayer(source.getControllerId());\r\n        if (player != null) {\r\n            Cards cardsToReveal = new CardsImpl(Zone.PICK);\r\n            Cards cardsSoldier = new CardsImpl(Zone.PICK);\r\n            Cards cards2 = new CardsImpl(Zone.PICK);\r\n            int count = Math.min(player.getLibrary().size(), 4);\r\n            for (int i = 0; i < count; i++) {\r\n                Card card = player.getLibrary().removeFromTop(game);\r\n                if (card != null) {\r\n                    cardsToReveal.add(card);\r\n                    game.setZone(card.getId(), Zone.PICK);\r\n                    if (filter.match(card, game)) {\r\n                        cardsSoldier.add(card);\r\n                    } else {\r\n                        cards2.add(card);\r\n                    }\r\n                }\r\n            }\r\n\r\n            Card sourceCard = game.getCard(source.getSourceId());\r\n            if (!cardsToReveal.isEmpty() && sourceCard != null) {\r\n                player.revealCards(sourceCard.getName(), cardsToReveal, game);\r\n            }\r\n\r\n            for (Card card: cardsSoldier.getCards(game)) {\r\n                player.moveCardToHandWithInfo(card, source.getSourceId(), game, Zone.LIBRARY);\r\n            }\r\n\r\n            TargetCard target = new TargetCard(Zone.PICK, new FilterCard(\"card to put on the bottom of your library\"));\r\n            while (player.isInGame() && cards2.size() > 0 && player.choose(Outcome.Detriment, cards2, target, game)) {\r\n                Card card = cards2.get(target.getFirstTarget(), game);\r\n                if (card != null) {\r\n                    cards2.remove(card);\r\n                    card.moveToZone(Zone.LIBRARY, source.getSourceId(), game, false);\r\n                }\r\n                target.clearChosen();\r\n            }\r\n        }\r\n        return true;\r\n    }","id":54157,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Player controller = game.getPlayer(source.getControllerId());\n        MageObject sourceObject = game.getObject(source.getSourceId());\n        if (controller == null || sourceObject == null) {\n            return false;\n        }\n        Cards cards = new CardsImpl();\n        cards.addAll(controller.getLibrary().getTopCards(game, 4));\n        controller.revealCards(sourceObject.getLogName(), cards, game);\n        for (Card card: cards.getCards(game)) {\n            if (filter.match(card, game)) {\n                controller.moveCardToHandWithInfo(card, source.getSourceId(), game, Zone.LIBRARY);\n                cards.remove(card);\n            }\n        }\n        controller.putCardsOnBottomOfLibrary(cards, game, source, true);\n        return true;\n    }","commit_id":"218e044804064f6a2238e1eb0962033144b3f5eb","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player targetPlayer = game.getPlayer(source.getFirstTarget());\r\n        Player player = game.getPlayer(source.getControllerId());\r\n        if (player != null && targetPlayer != null) {\r\n            TargetCardInLibrary target = new TargetCardInLibrary(3, 3, new FilterCard(\"cards to exile\"));\r\n                if (player.searchLibrary(target, game, targetPlayer.getId())) {\r\n                    List<UUID> targets = target.getTargets();\r\n                    for (UUID targetId : targets) {\r\n                        Card card = targetPlayer.getLibrary().remove(targetId, game);\r\n                        if (card != null) {\r\n                        card.moveToExile(null, \"\", source.getSourceId(), game);\r\n                    }\r\n                }\r\n            }\r\n            targetPlayer.shuffleLibrary(game);\r\n            return true;\r\n        }\r\n        return false;\r\n    }","id":54158,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        boolean applied = false;\n        Player targetPlayer = game.getPlayer(source.getFirstTarget());\n        Player player = game.getPlayer(source.getControllerId());\n        if (player != null && targetPlayer != null) {\n            TargetCardInLibrary target = new TargetCardInLibrary(3, 3, new FilterCard());\n            player.searchLibrary(target, game, targetPlayer.getId());\n                for (UUID cardId : target.getTargets()) {\n                    final Card targetCard = game.getCard(cardId);\n                    if (targetCard != null) {\n                        applied |= player.moveCardToExileWithInfo(targetCard, null, null, source.getSourceId(), game, Zone.LIBRARY);\n                    }\n                }\n            targetPlayer.shuffleLibrary(game);\n            }\n            return applied;\n    }","commit_id":"218e044804064f6a2238e1eb0962033144b3f5eb","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player player = game.getPlayer(source.getControllerId());\r\n        if (player != null) {\r\n            Cards cardsToReveal = new CardsImpl(Zone.PICK);\r\n            Cards cardsElf = new CardsImpl(Zone.PICK);\r\n            Cards cards2 = new CardsImpl(Zone.PICK);\r\n            int count = Math.min(player.getLibrary().size(), 4);\r\n            for (int i = 0; i < count; i++) {\r\n                Card card = player.getLibrary().removeFromTop(game);\r\n                if (card != null) {\r\n                    cardsToReveal.add(card);\r\n                    game.setZone(card.getId(), Zone.PICK);\r\n                    if (filter.match(card, game)) {\r\n                        cardsElf.add(card);\r\n                    } else {\r\n                        cards2.add(card);\r\n                    }\r\n                }\r\n            }\r\n\r\n            Card sourceCard = game.getCard(source.getSourceId());\r\n            if (!cardsToReveal.isEmpty() && sourceCard != null) {\r\n                player.revealCards(sourceCard.getName(), cardsToReveal, game);\r\n            }\r\n\r\n            for (Card card: cardsElf.getCards(game)) {\r\n                player.moveCardToHandWithInfo(card, source.getSourceId(), game, Zone.LIBRARY);\r\n            }\r\n\r\n            TargetCard target = new TargetCard(Zone.PICK, new FilterCard(\"card to put on the bottom of your library\"));\r\n            while (player.isInGame() && cards2.size() > 0 && player.choose(Outcome.Detriment, cards2, target, game)) {\r\n                Card card = cards2.get(target.getFirstTarget(), game);\r\n                if (card != null) {\r\n                    cards2.remove(card);\r\n                    card.moveToZone(Zone.LIBRARY, source.getSourceId(), game, false);\r\n                }\r\n                target.clearChosen();\r\n            }\r\n        }\r\n        return true;\r\n    }","id":54159,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Player controller = game.getPlayer(source.getControllerId());\n        MageObject sourceObject = game.getObject(source.getSourceId());\n        if (controller == null || sourceObject == null) {\n            return false;\n        }\n        Cards cards = new CardsImpl();\n        cards.addAll(controller.getLibrary().getTopCards(game, 4));\n        controller.revealCards(sourceObject.getLogName(), cards, game);\n        for (Card card: cards.getCards(game)) {\n            if (filter.match(card, game)) {\n                controller.moveCardToHandWithInfo(card, source.getSourceId(), game, Zone.LIBRARY);\n                cards.remove(card);\n            }\n        }\n        controller.putCardsOnBottomOfLibrary(cards, game, source, true);\n        return true;\n    }","commit_id":"218e044804064f6a2238e1eb0962033144b3f5eb","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        FilterLandPermanent filter = new FilterLandPermanent();\r\n        filter.add(new ControllerPredicate(TargetController.YOU));\r\n\r\n        int amount = new PermanentsOnBattlefieldCount(filter).calculate(game, source, this);\r\n        TargetCardInLibrary target = new TargetCardInLibrary(0, amount, new FilterBasicLandCard());\r\n\r\n        Player player = game.getPlayer(source.getControllerId());\r\n        if (player == null) {\r\n            return false;\r\n        }\r\n\r\n        if (player.searchLibrary(target, game)) {\r\n            for (UUID cardId : target.getTargets()) {\r\n                Card card = player.getLibrary().getCard(cardId, game);\r\n                if (card != null) {\r\n                    if (card.putOntoBattlefield(game, Zone.LIBRARY, source.getSourceId(), source.getControllerId())) {\r\n                        Permanent permanent = game.getPermanent(card.getId());\r\n                        if (permanent != null) {\r\n                            permanent.setTapped(true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        player.shuffleLibrary(game);\r\n        return true;\r\n    }","id":54160,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player controller = game.getPlayer(source.getControllerId());\r\n        if (controller == null) {\r\n            return false;\r\n        }\r\n        FilterLandPermanent filter = new FilterLandPermanent();\r\n        filter.add(new ControllerPredicate(TargetController.YOU));\r\n\r\n        int amount = new PermanentsOnBattlefieldCount(filter).calculate(game, source, this);\r\n        TargetCardInLibrary target = new TargetCardInLibrary(0, amount, new FilterBasicLandCard());\r\n        if (controller.searchLibrary(target, game)) {\r\n            controller.moveCards(new CardsImpl(target.getTargets()).getCards(game), Zone.HAND, source, game, true, false, false, null);\r\n        }\r\n        controller.shuffleLibrary(game);\r\n        return true;\r\n    }","commit_id":"160f14eed19e0b930c6845d46edcfd3dd8ead22c","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Player controller = game.getPlayer(source.getControllerId());\n        MageObject sourceObject = game.getObject(source.getSourceId());\n        Card chosenCard = game.getCard(getTargetPointer().getFirst(game, source));\n        if (chosenCard != null && sourceObject != null && controller != null) {                                   \n            Player owner = game.getPlayer(chosenCard.getOwnerId());\n            if (owner == null) {\n                return false;\n            }\n            \n            // Exile all cards with the same name\n            // Building a card filter with the name\n            FilterCard filterNamedCards = new FilterCard();\n            filterNamedCards.add(new NamePredicate(chosenCard.getName()));                            \n\n            // The cards you're searching for must be found and exiled if they're in the graveyard because it's a public zone.\n            // Finding those cards in the hand and library is optional, because those zones are hidden (even if the hand is temporarily revealed).\n            // search cards in graveyard\n            for (Card checkCard : owner.getGraveyard().getCards(game)) {\n                if (checkCard.getName().equals(chosenCard.getName())) {\n                    controller.moveCardToExileWithInfo(checkCard, null, \"\", source.getSourceId(), game, Zone.GRAVEYARD);\n                }\n            }\n\n            // search cards in hand\n            TargetCardInHand targetCardsHand = new TargetCardInHand(0, Integer.MAX_VALUE, filterNamedCards);\n            controller.chooseTarget(outcome, owner.getGraveyard(), targetCardsHand, source, game);\n            for(UUID cardId:  targetCardsHand.getTargets()) {\n                Card card = game.getCard(cardId);\n                if (card != null) {\n                    controller.moveCardToExileWithInfo(card, null, \"\", source.getSourceId(), game, Zone.HAND);\n                }\n            }\n\n            // search cards in Library\n            TargetCardInLibrary targetCardsLibrary = new TargetCardInLibrary(0, Integer.MAX_VALUE, filterNamedCards);\n            controller.searchLibrary(targetCardsLibrary, game, owner.getId());\n            for(UUID cardId:  targetCardsLibrary.getTargets()) {\n                Card card = game.getCard(cardId);\n                if (card != null) {\n                    controller.moveCardToExileWithInfo(card, null, \"\", source.getSourceId(), game, Zone.LIBRARY);\n                }\n            }\n            owner.shuffleLibrary(game);\n            return true;\n        }\n        return false;\n    }","id":54161,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Player controller = game.getPlayer(source.getControllerId());\n        MageObject sourceObject = game.getObject(source.getSourceId());\n        Card chosenCard = game.getCard(getTargetPointer().getFirst(game, source));\n        if (chosenCard != null && sourceObject != null && controller != null) {                                   \n            Player owner = game.getPlayer(chosenCard.getOwnerId());\n            if (owner == null) {\n                return false;\n            }\n            \n            // Exile all cards with the same name\n            // Building a card filter with the name\n            FilterCard filterNamedCard = new FilterCard();\n            filterNamedCard.add(new NamePredicate(chosenCard.getName()));                            \n\n            // The cards you're searching for must be found and exiled if they're in the graveyard because it's a public zone.\n            // Finding those cards in the hand and library is optional, because those zones are hidden (even if the hand is temporarily revealed).\n            // search cards in graveyard\n            for (Card checkCard : owner.getGraveyard().getCards(game)) {\n                if (checkCard.getName().equals(chosenCard.getName())) {\n                    controller.moveCardToExileWithInfo(checkCard, null, \"\", source.getSourceId(), game, Zone.GRAVEYARD);\n                }\n            }\n\n            // search cards in hand\n            filterNamedCard.setMessage(\"card named \" + chosenCard.getName() + \" in the hand of \" + owner.getName());\n            TargetCardInHand targetCardInHand = new TargetCardInHand(0, Integer.MAX_VALUE, filterNamedCard);\n            if (controller.choose(Outcome.Exile, owner.getHand(), targetCardInHand, game)) {\n                List<UUID> targets = targetCardInHand.getTargets();\n                for (UUID targetId : targets) {\n                    Card targetCard = owner.getHand().get(targetId, game);\n                    if (targetCard != null) {\n                        controller.moveCardToExileWithInfo(targetCard, null, \"\", source.getSourceId(), game, Zone.HAND);                                \n                    }\n                }\n            }\n            \n            // search cards in Library\n            filterNamedCard.setMessage(\"card named \" + chosenCard.getName() + \" in the library of \" + owner.getName());\n            TargetCardInLibrary targetCardInLibrary = new TargetCardInLibrary(0, Integer.MAX_VALUE, filterNamedCard);\n            if (controller.searchLibrary(targetCardInLibrary, game, owner.getId())) {\n                List<UUID> targets = targetCardInLibrary.getTargets();\n                for (UUID targetId : targets) {\n                    Card targetCard = owner.getLibrary().getCard(targetId, game);\n                    if (targetCard != null) {\n                        controller.moveCardToExileWithInfo(targetCard, null, \"\", source.getSourceId(), game, Zone.LIBRARY);                                \n                    }\n                }\n            }\n            owner.shuffleLibrary(game);\n            return true;\n        }\n        return false;\n    }","commit_id":"fa709bfd5e3b14292ab01c615b24d96c4f11262a","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Card card = game.getCard(source.getFirstTarget());\r\n        Player player = game.getPlayer(source.getControllerId());\r\n\r\n        // 6/1/2011 \t\"Any number of cards\" means just that. If you wish, you can choose to\r\n        //              leave some or all of the cards with the same name as the targeted card,\r\n        //              including that card, in the zone they're in.\r\n        if (card != null && player != null) {\r\n            Player targetPlayer = game.getPlayer(card.getOwnerId());\r\n            if (targetPlayer != null) {\r\n                FilterCard filter = new FilterCard(\"card named \" + card.getName());\r\n                filter.add(new NamePredicate(card.getName()));\r\n\r\n                Cards cardsInLibrary = new CardsImpl(Zone.LIBRARY);\r\n                cardsInLibrary.addAll(targetPlayer.getLibrary().getCards(game));\r\n\r\n                // cards in Graveyard\r\n                int cardsCount = targetPlayer.getGraveyard().count(filter, game);\r\n                if (cardsCount > 0) {\r\n                    filter.setMessage(\"card named \" + card.getName() + \" in the graveyard of \" + targetPlayer.getName());\r\n                    TargetCardInGraveyard target = new TargetCardInGraveyard(0, cardsCount, filter);\r\n                    if (player.choose(Outcome.Exile, targetPlayer.getGraveyard(), target, game)) {\r\n                        List<UUID> targets = target.getTargets();\r\n                        for (UUID targetId : targets) {\r\n                            Card targetCard = targetPlayer.getGraveyard().get(targetId, game);\r\n                            if (targetCard != null) {\r\n                                player.moveCardToExileWithInfo(targetCard, null, \"\", source.getSourceId(), game, Zone.GRAVEYARD);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // cards in Hand\r\n                cardsCount = targetPlayer.getHand().count(filter, game);\r\n                if (cardsCount > 0) {\r\n                    filter.setMessage(\"card named \" + card.getName() + \" in the hand of \" + targetPlayer.getName());\r\n                    TargetCardInHand target = new TargetCardInHand(0, cardsCount, filter);\r\n                    if (player.choose(Outcome.Exile, targetPlayer.getHand(), target, game)) {\r\n                        List<UUID> targets = target.getTargets();\r\n                        for (UUID targetId : targets) {\r\n                            Card targetCard = targetPlayer.getHand().get(targetId, game);\r\n                            if (targetCard != null) {\r\n                                player.moveCardToExileWithInfo(targetCard, null, \"\", source.getSourceId(), game, Zone.HAND);                                \r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    player.lookAtCards(targetPlayer.getName() + \" hand\", targetPlayer.getHand(), game);\r\n                }\r\n\r\n                // cards in Library\r\n                cardsCount = cardsInLibrary.count(filter, game);\r\n                if (cardsCount > 0) {\r\n                    filter.setMessage(\"card named \" + card.getName() + \" in the library of \" + targetPlayer.getName());\r\n                    TargetCardInLibrary target = new TargetCardInLibrary(0, cardsCount, filter);\r\n                    if (player.searchLibrary(target, game, targetPlayer.getId())) {\r\n                        List<UUID> targets = target.getTargets();\r\n                        for (UUID targetId : targets) {\r\n                            Card targetCard = targetPlayer.getLibrary().getCard(targetId, game);\r\n                            if (targetCard != null) {\r\n                                player.moveCardToExileWithInfo(targetCard, null, \"\", source.getSourceId(), game, Zone.LIBRARY);                                \r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    player.lookAtCards(targetPlayer.getName() + \" library\", cardsInLibrary, game);\r\n                }\r\n                targetPlayer.shuffleLibrary(game);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }","id":54162,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Card chosenCard = game.getCard(source.getFirstTarget());\r\n        Player controller = game.getPlayer(source.getControllerId());\r\n\r\n        // 6/1/2011 \t\"Any number of cards\" means just that. If you wish, you can choose to\r\n        //              leave some or all of the cards with the same name as the targeted card,\r\n        //              including that card, in the zone they're in.\r\n        if (chosenCard != null && controller != null) {\r\n            Player owner = game.getPlayer(chosenCard.getOwnerId());\r\n            if (owner != null) {\r\n                FilterCard filterNamedCard = new FilterCard(\"card named \" + chosenCard.getName());\r\n                filterNamedCard.add(new NamePredicate(chosenCard.getName()));\r\n\r\n                Cards cardsInLibrary = new CardsImpl(Zone.LIBRARY);\r\n                cardsInLibrary.addAll(owner.getLibrary().getCards(game));\r\n\r\n                // cards in Graveyard\r\n                int cardsCount = owner.getGraveyard().count(filterNamedCard, game);\r\n                if (cardsCount > 0) {\r\n                    filterNamedCard.setMessage(\"card named \" + chosenCard.getName() + \" in the graveyard of \" + owner.getName());\r\n                    TargetCardInGraveyard target = new TargetCardInGraveyard(0, cardsCount, filterNamedCard);\r\n                    if (controller.choose(Outcome.Exile, owner.getGraveyard(), target, game)) {\r\n                        List<UUID> targets = target.getTargets();\r\n                        for (UUID targetId : targets) {\r\n                            Card targetCard = owner.getGraveyard().get(targetId, game);\r\n                            if (targetCard != null) {\r\n                                controller.moveCardToExileWithInfo(targetCard, null, \"\", source.getSourceId(), game, Zone.GRAVEYARD);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // cards in Hand\r\n                filterNamedCard.setMessage(\"card named \" + chosenCard.getName() + \" in the hand of \" + owner.getName());\r\n                TargetCardInHand targetCardInHand = new TargetCardInHand(0, Integer.MAX_VALUE, filterNamedCard);\r\n                if (controller.choose(Outcome.Exile, owner.getHand(), targetCardInHand, game)) {\r\n                    List<UUID> targets = targetCardInHand.getTargets();\r\n                    for (UUID targetId : targets) {\r\n                        Card targetCard = owner.getHand().get(targetId, game);\r\n                        if (targetCard != null) {\r\n                            controller.moveCardToExileWithInfo(targetCard, null, \"\", source.getSourceId(), game, Zone.HAND);                                \r\n                        }\r\n                    }\r\n                }\r\n\r\n                // cards in Library\r\n                filterNamedCard.setMessage(\"card named \" + chosenCard.getName() + \" in the library of \" + owner.getName());\r\n                TargetCardInLibrary targetCardInLibrary = new TargetCardInLibrary(0, Integer.MAX_VALUE, filterNamedCard);\r\n                if (controller.searchLibrary(targetCardInLibrary, game, owner.getId())) {\r\n                    List<UUID> targets = targetCardInLibrary.getTargets();\r\n                    for (UUID targetId : targets) {\r\n                        Card targetCard = owner.getLibrary().getCard(targetId, game);\r\n                        if (targetCard != null) {\r\n                            controller.moveCardToExileWithInfo(targetCard, null, \"\", source.getSourceId(), game, Zone.LIBRARY);                                \r\n                        }\r\n                    }\r\n                }\r\n                owner.shuffleLibrary(game);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }","commit_id":"fa709bfd5e3b14292ab01c615b24d96c4f11262a","url":"https://github.com/magefree/mage"},{"original_method":"void onOk() {\n    String message = NewModuleUtil.check(MPSExtentions.DOT_LANGUAGE, myThis.getLanguageNamespace(), myThis.getLanguagePath());\n    if (message != null) {\n      myThis.getDialog().setError(message);\n      return;\n    }\n\n    myThis.getDialog().dispose();\n    NewModuleUtil.runModuleCreation(myThis.getProject().getProject(), new _FunctionTypes._void_P0_E0() {\n      public void invoke() {\n        Language language = NewModuleUtil.createLanguage(myThis.getLanguageNamespace(), myThis.getLanguagePath(), myThis.getProject());\n\n        if (myThis.myNeedRuntime_hneum8_f0.isSelected()) {\n          Solution runtime = myThis.createRuntimeSolution();\n          SModuleOperations.createModelWithAdjustments(myThis.getLanguageNamespace() + \".runtime\", runtime.getModelRoots().iterator().next());\n        }\n        if (myThis.myNeedSandbox_hneum8_g0.isSelected()) {\n          Solution sandbox = myThis.createSandboxSolution();\n          SModel createdModel = SModuleOperations.createModelWithAdjustments(myThis.getLanguageNamespace() + \".sandbox\", sandbox.getModelRoots().iterator().next()).getSModel();\n          ((SModelInternal) createdModel).addLanguage(language.getModuleReference());\n          for (ModuleReference extendedLanguage : language.getExtendedLanguageRefs()) {\n            ((SModelInternal) createdModel).addLanguage(extendedLanguage);\n          }\n          for (ModuleReference addedLanguage : ((SModelInternal) createdModel).importedLanguages()) {\n            if (ScopeOperations.resolveModule(sandbox.getScope(), addedLanguage, Language.class) == null) {\n              sandbox.addUsedLanguage(addedLanguage);\n            }\n          }\n        }\n\n        myThis.setResult(language);\n      }\n    });\n  }","id":54163,"modified_method":"void onOk() {\n    String message = NewModuleUtil.check(MPSExtentions.DOT_LANGUAGE, myThis.getLanguageNamespace(), myThis.getLanguagePath());\n    if (message != null) {\n      myThis.getDialog().setError(message);\n      return;\n    }\n\n    myThis.getDialog().dispose();\n    NewModuleUtil.runModuleCreation(myThis.getProject().getProject(), new _FunctionTypes._void_P0_E0() {\n      public void invoke() {\n        Language language = NewModuleUtil.createLanguage(myThis.getLanguageNamespace(), myThis.getLanguagePath(), myThis.getProject());\n\n        try {\n          if (myThis.myNeedRuntime_hneum8_f0.isSelected()) {\n            NewModuleUtil.createRuntimeSolution(language, myThis.getLanguagePath(), myThis.getProject());\n          }\n          if (myThis.myNeedSandbox_hneum8_g0.isSelected()) {\n            NewModuleUtil.createSandboxSolution(language, myThis.getLanguagePath(), myThis.getProject());\n          }\n        } catch (IOException e) {\n          // todo: ! \n          LOG.error(\"Cannot create runtime / sandbox module\", e);\n        }\n\n        myThis.setResult(language);\n      }\n    });\n  }","commit_id":"f22e01492691badcc1c5115dd46c87bb2f3cd506","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Deprecated\n  public static Language createNewLanguage(String namespace, IFile descriptorFile, boolean importLangDevDevkit, boolean createMainAspectModels, MPSModuleOwner moduleOwner) {\n    assert !(descriptorFile.exists());\n    LanguageDescriptor descriptor = createNewLanguageDescriptor(namespace, descriptorFile);\n\n    if (importLangDevDevkit) {\n      ModuleReference devkitRef = LanguageDesign_DevKit.MODULE_REFERENCE;\n      descriptor.getUsedDevkits().add(devkitRef);\n    }\n\n    LanguageDescriptorPersistence.saveLanguageDescriptor(descriptorFile, descriptor, MacrosFactory.forModuleFile(descriptorFile));\n    Language language = (Language) ModuleRepositoryFacade.createModule(ModulesMiner.getInstance().loadModuleHandle(descriptorFile), moduleOwner);\n\n    if (createMainAspectModels) {\n      createMainLanguageAspects(language);\n    }\n\n    return language;\n  }","id":54164,"modified_method":"@Deprecated\n  public static Language createNewLanguage(String namespace, IFile descriptorFile, boolean importLangDevDevkit, boolean createMainAspectModels, MPSModuleOwner moduleOwner) {\n    assert !(descriptorFile.exists());\n    LanguageDescriptor descriptor = createNewLanguageDescriptor(namespace, descriptorFile);\n\n    if (importLangDevDevkit) {\n      ModuleReference devkitRef = LanguageDesign_DevKit.MODULE_REFERENCE;\n      descriptor.getUsedDevkits().add(devkitRef);\n    }\n\n    LanguageDescriptorPersistence.saveLanguageDescriptor(descriptorFile, descriptor, MacrosFactory.forModuleFile(descriptorFile));\n    Language language = (Language) ModuleRepositoryFacade.createModule(ModulesMiner.getInstance().loadModuleHandle(descriptorFile), moduleOwner);\n\n    if (createMainAspectModels) {\n      try {\n        createMainLanguageAspects(language);\n      } catch (IOException e) {\n        // todo: ??? \n        throw new RuntimeException(e);\n      }\n    }\n\n    return language;\n  }","commit_id":"f22e01492691badcc1c5115dd46c87bb2f3cd506","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void createMainLanguageAspects(Language language) {\n    assert language.getModelRoots().iterator().hasNext();\n    LanguageAspect.STRUCTURE.createNew(language, false);\n    LanguageAspect.EDITOR.createNew(language, false);\n    LanguageAspect.CONSTRAINTS.createNew(language, false);\n    LanguageAspect.BEHAVIOR.createNew(language, false);\n    LanguageAspect.TYPESYSTEM.createNew(language, false);\n  }","id":54165,"modified_method":"public static void createMainLanguageAspects(Language language) throws IOException {\n    assert language.getModelRoots().iterator().hasNext();\n    LanguageAspect.STRUCTURE.createNew(language).save();\n    LanguageAspect.EDITOR.createNew(language).save();\n    LanguageAspect.CONSTRAINTS.createNew(language).save();\n    LanguageAspect.BEHAVIOR.createNew(language).save();\n    LanguageAspect.TYPESYSTEM.createNew(language).save();\n  }","commit_id":"f22e01492691badcc1c5115dd46c87bb2f3cd506","url":"https://github.com/JetBrains/MPS"},{"original_method":"private int getNamespace(String name) throws Exception {\n    Preconditions.checkArgument(name != null, \"namespace name cannot be null\");\n    HttpResponse response = doGet(String.format(\"%s/namespaces/%s\", Constants.Gateway.API_VERSION, name));\n    return response.getStatusLine().getStatusCode();\n  }","id":54166,"modified_method":"private HttpResponse getNamespace(String name) throws Exception {\n    Preconditions.checkArgument(name != null, \"namespace name cannot be null\");\n    return doGet(String.format(\"%s/namespaces/%s\", Constants.Gateway.API_VERSION, name));\n  }","commit_id":"8f287cd7bfc856dca97cad65145f5278a90f4042","url":"https://github.com/caskdata/cdap"},{"original_method":"private int listAllNamespaces() throws Exception {\n    HttpResponse response = doGet(String.format(\"%s/namespaces\", Constants.Gateway.API_VERSION));\n    return response.getStatusLine().getStatusCode();\n  }","id":54167,"modified_method":"private HttpResponse listAllNamespaces() throws Exception {\n    return doGet(String.format(\"%s/namespaces\", Constants.Gateway.API_VERSION));\n  }","commit_id":"8f287cd7bfc856dca97cad65145f5278a90f4042","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testCreateValidations() throws Exception {\n    // invalid json should error\n    Assert.assertEquals(400, createNamespace(METADATA_INVALID_JSON));\n    Assert.assertEquals(404, getNamespace(NAME));\n\n    // name must be non-null, non-empty\n    Assert.assertEquals(400, createNamespace(METADATA_MISSING_NAME));\n    Assert.assertEquals(400, createNamespace(METADATA_EMPTY_NAME));\n\n    // displayName could be null or empty\n    Assert.assertEquals(200, createNamespace(METADATA_MISSING_DISPLAY_NAME));\n    Assert.assertEquals(200, deleteNamespace(NAME));\n    Assert.assertEquals(200, createNamespace(METADATA_EMPTY_DISPLAY_NAME));\n    Assert.assertEquals(200, deleteNamespace(NAME));\n\n    // description could be null\n    Assert.assertEquals(200, createNamespace(METADATA_MISSING_DESCRIPTION));\n    Assert.assertEquals(200, deleteNamespace(NAME));\n  }","id":54168,"modified_method":"@Test\n  public void testCreateInvalidJson() throws Exception {\n    // invalid json should return 400\n    HttpResponse response = createNamespace(METADATA_INVALID_JSON);\n    assertResponseCode(400, response);\n    // verify\n    response = getNamespace(NAME);\n    assertResponseCode(404, response);\n  }","commit_id":"8f287cd7bfc856dca97cad65145f5278a90f4042","url":"https://github.com/caskdata/cdap"},{"original_method":"private int createNamespace(String metadata) throws Exception {\n    HttpResponse response = doPut(String.format(\"%s/namespaces\", Constants.Gateway.API_VERSION), metadata);\n    return response.getStatusLine().getStatusCode();\n  }","id":54169,"modified_method":"private HttpResponse createNamespace(String metadata) throws Exception {\n    return doPut(String.format(\"%s/namespaces\", Constants.Gateway.API_VERSION), metadata);\n  }","commit_id":"8f287cd7bfc856dca97cad65145f5278a90f4042","url":"https://github.com/caskdata/cdap"},{"original_method":"private int deleteNamespace(String name) throws Exception {\n    HttpResponse response = doDelete(String.format(\"%s/namespaces/%s\", Constants.Gateway.API_VERSION, name));\n    return response.getStatusLine().getStatusCode();\n  }","id":54170,"modified_method":"private HttpResponse deleteNamespace(String name) throws Exception {\n    return doDelete(String.format(\"%s/namespaces/%s\", Constants.Gateway.API_VERSION, name));\n  }","commit_id":"8f287cd7bfc856dca97cad65145f5278a90f4042","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testDeleteNamespace() throws Exception {\n    // test deleting non-existent namespace\n    Assert.assertEquals(404, deleteNamespace(\"doesnotexist\"));\n    // setup - create namespace\n    Assert.assertEquals(200, createNamespace(METADATA_VALID));\n    Assert.assertEquals(200, getNamespace(NAME));\n    // test delete\n    Assert.assertEquals(200, deleteNamespace(NAME));\n  }","id":54171,"modified_method":"@Test\n  public void testDeleteMissingNamespace() throws Exception {\n    // test deleting non-existent namespace\n    HttpResponse response = deleteNamespace(\"doesnotexist\");\n    assertResponseCode(404, response);\n  }","commit_id":"8f287cd7bfc856dca97cad65145f5278a90f4042","url":"https://github.com/caskdata/cdap"},{"original_method":"private int createNamespace(NamespaceMeta metadata) throws Exception {\n    return createNamespace(GSON.toJson(metadata));\n  }","id":54172,"modified_method":"private HttpResponse createNamespace(NamespaceMeta metadata) throws Exception {\n    return createNamespace(GSON.toJson(metadata));\n  }","commit_id":"8f287cd7bfc856dca97cad65145f5278a90f4042","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testServiceSpecification() throws Exception {\n    deploy(AppWithServices.class);\n    HttpResponse response = doGet(\"/v3/namespaces/default/apps/AppWithServices/services/NoOpService\");\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Set<ServiceHttpEndpoint> expectedEndpoints = ImmutableSet.of(new ServiceHttpEndpoint(\"GET\", \"/ping\"),\n                                                                 new ServiceHttpEndpoint(\"POST\", \"/multi\"),\n                                                                 new ServiceHttpEndpoint(\"GET\", \"/multi\"),\n                                                                 new ServiceHttpEndpoint(\"GET\", \"/multi/ping\"));\n\n    GsonBuilder gsonBuidler = new GsonBuilder();\n    gsonBuidler.registerTypeAdapter(ServiceSpecification.class, new ServiceSpecificationCodec());\n    gsonBuidler.registerTypeAdapter(HttpServiceHandlerSpecification.class, new HttpServiceSpecificationCodec());\n    Gson gson = gsonBuidler.create();\n    ServiceSpecification specification = readResponse(response, ServiceSpecification.class, gson);\n\n    Set<ServiceHttpEndpoint> returnedEndpoints = Sets.newHashSet();\n    for (HttpServiceHandlerSpecification httpServiceHandlerSpecification : specification.getHandlers().values()) {\n      returnedEndpoints.addAll(httpServiceHandlerSpecification.getEndpoints());\n    }\n\n    Assert.assertEquals(\"NoOpService\", specification.getName());\n    Assert.assertTrue(returnedEndpoints.equals(expectedEndpoints));\n  }","id":54173,"modified_method":"@Test\n  public void testServiceSpecification() throws Exception {\n    deploy(AppWithServices.class);\n    HttpResponse response = doGet(\"/v3/namespaces/default/apps/AppWithServices/services/NoOpService\");\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Set<ServiceHttpEndpoint> expectedEndpoints = ImmutableSet.of(new ServiceHttpEndpoint(\"GET\", \"/ping\"),\n                                                                 new ServiceHttpEndpoint(\"POST\", \"/multi\"),\n                                                                 new ServiceHttpEndpoint(\"GET\", \"/multi\"),\n                                                                 new ServiceHttpEndpoint(\"GET\", \"/multi/ping\"));\n\n    GsonBuilder gsonBuilder = new GsonBuilder();\n    gsonBuilder.registerTypeAdapter(ServiceSpecification.class, new ServiceSpecificationCodec());\n    gsonBuilder.registerTypeAdapter(HttpServiceHandlerSpecification.class, new HttpServiceSpecificationCodec());\n    Gson gson = gsonBuilder.create();\n    ServiceSpecification specification = readResponse(response, ServiceSpecification.class, gson);\n\n    Set<ServiceHttpEndpoint> returnedEndpoints = new HashSet<>();\n    for (HttpServiceHandlerSpecification httpServiceHandlerSpecification : specification.getHandlers().values()) {\n      returnedEndpoints.addAll(httpServiceHandlerSpecification.getEndpoints());\n    }\n\n    Assert.assertEquals(\"NoOpService\", specification.getName());\n    Assert.assertTrue(returnedEndpoints.equals(expectedEndpoints));\n  }","commit_id":"58646577a2b0e1ad680fd51389d38b63c7f84244","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testServices() throws Exception {\n    HttpResponse response = deploy(AppWithServices.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Program service1 = Id.Program.from(TEST_NAMESPACE1, APP_WITH_SERVICES_APP_ID,\n                                          ProgramType.SERVICE, APP_WITH_SERVICES_SERVICE_NAME);\n    Id.Program service2 = Id.Program.from(TEST_NAMESPACE2, APP_WITH_SERVICES_APP_ID,\n                                          ProgramType.SERVICE, APP_WITH_SERVICES_SERVICE_NAME);\n\n    // start service in wrong namespace\n    startProgram(service1, 404);\n    startProgram(service2);\n\n    // verify instances\n    try {\n      getServiceInstances(TEST_NAMESPACE1, APP_WITH_SERVICES_APP_ID,\n                          APP_WITH_SERVICES_SERVICE_NAME);\n      Assert.fail(\"Should not find service in \" + TEST_NAMESPACE1);\n    } catch (AssertionError e) {\n    }\n    ServiceInstances instances = getServiceInstances(TEST_NAMESPACE2, APP_WITH_SERVICES_APP_ID,\n                                                     APP_WITH_SERVICES_SERVICE_NAME);\n    Assert.assertEquals(1, instances.getRequested());\n    Assert.assertEquals(1, instances.getProvisioned());\n\n    // request 2 additional instances\n    int code = setServiceInstances(TEST_NAMESPACE1, APP_WITH_SERVICES_APP_ID, APP_WITH_SERVICES_SERVICE_NAME, 3);\n    Assert.assertEquals(404, code);\n    code = setServiceInstances(TEST_NAMESPACE2, APP_WITH_SERVICES_APP_ID, APP_WITH_SERVICES_SERVICE_NAME, 3);\n    Assert.assertEquals(200, code);\n\n    // verify that additional instances were provisioned\n    instances = getServiceInstances(TEST_NAMESPACE2, APP_WITH_SERVICES_APP_ID,\n                                                     APP_WITH_SERVICES_SERVICE_NAME);\n    Assert.assertEquals(3, instances.getRequested());\n    Assert.assertEquals(3, instances.getProvisioned());\n\n    // verify that endpoints are not available in the wrong namespace\n    response = callService(TEST_NAMESPACE1, APP_WITH_SERVICES_APP_ID, APP_WITH_SERVICES_SERVICE_NAME, HttpMethod.POST,\n                       \"multi\");\n    code = response.getStatusLine().getStatusCode();\n    Assert.assertEquals(404, code);\n\n    response = callService(TEST_NAMESPACE1, APP_WITH_SERVICES_APP_ID, APP_WITH_SERVICES_SERVICE_NAME, HttpMethod.GET,\n                       \"multi/ping\");\n    code = response.getStatusLine().getStatusCode();\n    Assert.assertEquals(404, code);\n\n    // stop service\n    stopProgram(service1, 404);\n    stopProgram(service2);\n  }","id":54174,"modified_method":"@Test\n  public void testServices() throws Exception {\n    HttpResponse response = deploy(AppWithServices.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Service service1 = Id.Service.from(Id.Namespace.from(TEST_NAMESPACE1), APP_WITH_SERVICES_APP_ID,\n                                          APP_WITH_SERVICES_SERVICE_NAME);\n    Id.Service service2 = Id.Service.from(Id.Namespace.from(TEST_NAMESPACE2), APP_WITH_SERVICES_APP_ID,\n                                          APP_WITH_SERVICES_SERVICE_NAME);\n\n    // start service in wrong namespace\n    startProgram(service1, 404);\n    startProgram(service2);\n\n    // verify instances\n    try {\n      getServiceInstances(service1);\n      Assert.fail(\"Should not find service in \" + TEST_NAMESPACE1);\n    } catch (AssertionError expected) {\n    }\n    ServiceInstances instances = getServiceInstances(service2);\n    Assert.assertEquals(1, instances.getRequested());\n    Assert.assertEquals(1, instances.getProvisioned());\n\n    // request 2 additional instances\n    int code = setServiceInstances(service1, 3);\n    Assert.assertEquals(404, code);\n    code = setServiceInstances(service2, 3);\n    Assert.assertEquals(200, code);\n\n    // verify that additional instances were provisioned\n    instances = getServiceInstances(service2);\n    Assert.assertEquals(3, instances.getRequested());\n    Assert.assertEquals(3, instances.getProvisioned());\n\n    // verify that endpoints are not available in the wrong namespace\n    response = callService(service1, HttpMethod.POST, \"multi\");\n    code = response.getStatusLine().getStatusCode();\n    Assert.assertEquals(404, code);\n\n    response = callService(service1, HttpMethod.GET, \"multi/ping\");\n    code = response.getStatusLine().getStatusCode();\n    Assert.assertEquals(404, code);\n\n    // stop service\n    stopProgram(service1, 404);\n    stopProgram(service2);\n  }","commit_id":"58646577a2b0e1ad680fd51389d38b63c7f84244","url":"https://github.com/caskdata/cdap"},{"original_method":"private int setServiceInstances(String namespace, String app, String service, int instances) throws Exception {\n    String instanceUrl = String.format(\"apps/%s/services/%s/instances\", app, service);\n    String versionedInstanceUrl = getVersionedAPIPath(instanceUrl, Constants.Gateway.API_VERSION_3_TOKEN, namespace);\n    String instancesBody = GSON.toJson(new Instances(instances));\n    return doPut(versionedInstanceUrl, instancesBody).getStatusLine().getStatusCode();\n  }","id":54175,"modified_method":"private int setServiceInstances(Id.Service serviceId, int instances) throws Exception {\n    String instanceUrl = String.format(\"apps/%s/services/%s/instances\", serviceId.getApplicationId(),\n                                       serviceId.getId());\n    String versionedInstanceUrl = getVersionedAPIPath(instanceUrl, Constants.Gateway.API_VERSION_3_TOKEN,\n                                                      serviceId.getNamespaceId());\n    String instancesBody = GSON.toJson(new Instances(instances));\n    return doPut(versionedInstanceUrl, instancesBody).getStatusLine().getStatusCode();\n  }","commit_id":"58646577a2b0e1ad680fd51389d38b63c7f84244","url":"https://github.com/caskdata/cdap"},{"original_method":"private void verifyProgramList(String namespace, String appName,\n                                 final String programType, int expected) throws Exception {\n    HttpResponse response = requestAppDetail(namespace, appName);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String json = EntityUtils.toString(response.getEntity());\n    ApplicationDetail appDetail = GSON.fromJson(json, ApplicationDetail.class);\n    Collection<ProgramRecord> programs = Collections2.filter(appDetail.getPrograms(), new Predicate<ProgramRecord>() {\n      @Override\n      public boolean apply(@Nullable ProgramRecord record) {\n        return programType.equals(record.getType().getCategoryName());\n      }\n    });\n    Assert.assertEquals(expected, programs.size());\n  }","id":54176,"modified_method":"private void verifyProgramList(String namespace, ProgramType programType, int expected) throws Exception {\n    HttpResponse response = requestProgramList(namespace, programType.getCategoryName());\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String json = EntityUtils.toString(response.getEntity());\n    List<Map<String, String>> programs = GSON.fromJson(json, LIST_MAP_STRING_STRING_TYPE);\n    Assert.assertEquals(expected, programs.size());\n  }","commit_id":"58646577a2b0e1ad680fd51389d38b63c7f84244","url":"https://github.com/caskdata/cdap"},{"original_method":"private void verifyProgramList(String namespace, String programType, int expected) throws Exception {\n    HttpResponse response = requestProgramList(namespace, programType);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String json = EntityUtils.toString(response.getEntity());\n    List<Map<String, String>> programs = GSON.fromJson(json, LIST_MAP_STRING_STRING_TYPE);\n    Assert.assertEquals(expected, programs.size());\n  }","id":54177,"modified_method":"private void verifyProgramList(String namespace, String appName,\n                                 final ProgramType programType, int expected) throws Exception {\n    HttpResponse response = requestAppDetail(namespace, appName);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String json = EntityUtils.toString(response.getEntity());\n    ApplicationDetail appDetail = GSON.fromJson(json, ApplicationDetail.class);\n    Collection<ProgramRecord> programs = Collections2.filter(appDetail.getPrograms(), new Predicate<ProgramRecord>() {\n      @Override\n      public boolean apply(@Nullable ProgramRecord record) {\n        return programType.getCategoryName().equals(record.getType().getCategoryName());\n      }\n    });\n    Assert.assertEquals(expected, programs.size());\n  }","commit_id":"58646577a2b0e1ad680fd51389d38b63c7f84244","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Tests for program list calls\n   */\n  @Test\n  public void testProgramList() throws Exception {\n    // test initial state\n    testListInitialState(TEST_NAMESPACE1, ProgramType.FLOW);\n    testListInitialState(TEST_NAMESPACE2, ProgramType.MAPREDUCE);\n    testListInitialState(TEST_NAMESPACE1, ProgramType.WORKFLOW);\n    testListInitialState(TEST_NAMESPACE2, ProgramType.SPARK);\n    testListInitialState(TEST_NAMESPACE1, ProgramType.SERVICE);\n\n    // deploy WordCountApp in namespace1 and verify\n    HttpResponse response = deploy(WordCountApp.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE1);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    // deploy AppWithServices in namespace2 and verify\n    response = deploy(AppWithServices.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    // verify list by namespace\n    verifyProgramList(TEST_NAMESPACE1, ProgramType.FLOW.getCategoryName(), 1);\n    verifyProgramList(TEST_NAMESPACE1, ProgramType.MAPREDUCE.getCategoryName(), 1);\n    verifyProgramList(TEST_NAMESPACE2, ProgramType.SERVICE.getCategoryName(), 1);\n\n    // verify list by app\n    verifyProgramList(TEST_NAMESPACE1, WORDCOUNT_APP_NAME, ProgramType.FLOW.getCategoryName(), 1);\n    verifyProgramList(TEST_NAMESPACE1, WORDCOUNT_APP_NAME, ProgramType.MAPREDUCE.getCategoryName(), 1);\n    verifyProgramList(TEST_NAMESPACE1, WORDCOUNT_APP_NAME, ProgramType.WORKFLOW.getCategoryName(), 0);\n    verifyProgramList(TEST_NAMESPACE2, APP_WITH_SERVICES_APP_ID, ProgramType.SERVICE.getCategoryName(), 1);\n\n    // verify invalid namespace\n    Assert.assertEquals(404, getAppFDetailResponseCode(TEST_NAMESPACE1, APP_WITH_SERVICES_APP_ID,\n                                                       ProgramType.SERVICE.getCategoryName()));\n    // verify invalid app\n    Assert.assertEquals(404, getAppFDetailResponseCode(TEST_NAMESPACE1, \"random\", ProgramType.FLOW.getCategoryName()));\n  }","id":54178,"modified_method":"/**\n   * Tests for program list calls\n   */\n  @Test\n  public void testProgramList() throws Exception {\n    // test initial state\n    testListInitialState(TEST_NAMESPACE1, ProgramType.FLOW);\n    testListInitialState(TEST_NAMESPACE2, ProgramType.MAPREDUCE);\n    testListInitialState(TEST_NAMESPACE1, ProgramType.WORKFLOW);\n    testListInitialState(TEST_NAMESPACE2, ProgramType.SPARK);\n    testListInitialState(TEST_NAMESPACE1, ProgramType.SERVICE);\n\n    // deploy WordCountApp in namespace1 and verify\n    HttpResponse response = deploy(WordCountApp.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE1);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    // deploy AppWithServices in namespace2 and verify\n    response = deploy(AppWithServices.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    // verify list by namespace\n    verifyProgramList(TEST_NAMESPACE1, ProgramType.FLOW, 1);\n    verifyProgramList(TEST_NAMESPACE1, ProgramType.MAPREDUCE, 1);\n    verifyProgramList(TEST_NAMESPACE2, ProgramType.SERVICE, 1);\n\n    // verify list by app\n    verifyProgramList(TEST_NAMESPACE1, WORDCOUNT_APP_NAME, ProgramType.FLOW, 1);\n    verifyProgramList(TEST_NAMESPACE1, WORDCOUNT_APP_NAME, ProgramType.MAPREDUCE, 1);\n    verifyProgramList(TEST_NAMESPACE1, WORDCOUNT_APP_NAME, ProgramType.WORKFLOW, 0);\n    verifyProgramList(TEST_NAMESPACE2, APP_WITH_SERVICES_APP_ID, ProgramType.SERVICE, 1);\n\n    // verify invalid namespace\n    Assert.assertEquals(404, getAppFDetailResponseCode(TEST_NAMESPACE1, APP_WITH_SERVICES_APP_ID,\n                                                       ProgramType.SERVICE.getCategoryName()));\n    // verify invalid app\n    Assert.assertEquals(404, getAppFDetailResponseCode(TEST_NAMESPACE1, \"random\", ProgramType.FLOW.getCategoryName()));\n  }","commit_id":"58646577a2b0e1ad680fd51389d38b63c7f84244","url":"https://github.com/caskdata/cdap"},{"original_method":"private HttpResponse callService(String namespace, String app, String service, HttpMethod method, String endpoint)\n    throws Exception {\n    String serviceUrl = String.format(\"apps/%s/service/%s/methods/%s\", app, service, endpoint);\n    String versionedServiceUrl = getVersionedAPIPath(serviceUrl, Constants.Gateway.API_VERSION_3_TOKEN, namespace);\n    HttpResponse response;\n    if (HttpMethod.GET.equals(method)) {\n      response = doGet(versionedServiceUrl);\n    } else if (HttpMethod.POST.equals(method)) {\n      response = doPost(versionedServiceUrl);\n    } else {\n      throw new IllegalArgumentException(\"Only GET and POST supported right now.\");\n    }\n    return response;\n  }","id":54179,"modified_method":"private HttpResponse callService(Id.Service serviceId, HttpMethod method, String endpoint) throws Exception {\n    String serviceUrl = String.format(\"apps/%s/service/%s/methods/%s\",\n                                      serviceId.getApplicationId(), serviceId.getId(), endpoint);\n    String versionedServiceUrl = getVersionedAPIPath(serviceUrl, Constants.Gateway.API_VERSION_3_TOKEN,\n                                                     serviceId.getNamespaceId());\n    if (HttpMethod.GET.equals(method)) {\n      return doGet(versionedServiceUrl);\n    } else if (HttpMethod.POST.equals(method)) {\n      return doPost(versionedServiceUrl);\n    }\n    throw new IllegalArgumentException(\"Only GET and POST supported right now.\");\n  }","commit_id":"58646577a2b0e1ad680fd51389d38b63c7f84244","url":"https://github.com/caskdata/cdap"},{"original_method":"@Category(XSlowTests.class)\n  @Test\n  public void testProgramStartStopStatus() throws Exception {\n    // deploy, check the status\n    HttpResponse response = deploy(WordCountApp.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE1);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Program wordcountFlow1 =\n      Id.Program.from(TEST_NAMESPACE1, WORDCOUNT_APP_NAME, ProgramType.FLOW, WORDCOUNT_FLOW_NAME);\n    Id.Program wordcountFlow2 =\n      Id.Program.from(TEST_NAMESPACE2, WORDCOUNT_APP_NAME, ProgramType.FLOW, WORDCOUNT_FLOW_NAME);\n\n    // flow is stopped initially\n    Assert.assertEquals(STOPPED, getProgramStatus(wordcountFlow1));\n\n    // start flow in the wrong namespace and verify that it does not start\n    startProgram(wordcountFlow2, 404);\n    Assert.assertEquals(STOPPED, getProgramStatus(wordcountFlow1));\n\n    // start a flow and check the status\n    startProgram(wordcountFlow1);\n    waitState(wordcountFlow1, ProgramRunStatus.RUNNING.toString());\n\n    // stop the flow and check the status\n    stopProgram(wordcountFlow1);\n    waitState(wordcountFlow1, STOPPED);\n\n    // deploy another app in a different namespace and verify\n    response = deploy(DummyAppWithTrackingTable.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Program dummyMR1 = Id.Program.from(TEST_NAMESPACE1, DUMMY_APP_ID, ProgramType.MAPREDUCE, DUMMY_MR_NAME);\n    Id.Program dummyMR2 = Id.Program.from(TEST_NAMESPACE2, DUMMY_APP_ID, ProgramType.MAPREDUCE, DUMMY_MR_NAME);\n\n    // mapreduce is stopped initially\n    Assert.assertEquals(STOPPED, getProgramStatus(dummyMR2));\n\n    // start mapreduce in the wrong namespace and verify it does not start\n    startProgram(dummyMR1, 404);\n    Assert.assertEquals(STOPPED, getProgramStatus(dummyMR2));\n\n    // start map-reduce and verify status\n    startProgram(dummyMR2);\n    waitState(dummyMR2, ProgramRunStatus.RUNNING.toString());\n\n    // stop the mapreduce program and check the status\n    stopProgram(dummyMR2);\n    waitState(dummyMR2, STOPPED);\n\n    // start multiple runs of the map-reduce program\n    startProgram(dummyMR2);\n    startProgram(dummyMR2);\n\n    // verify that more than one map-reduce program runs are running\n    verifyProgramRuns(dummyMR2, \"running\", 1);\n\n    // get run records corresponding to the program runs\n    List<RunRecord> historyRuns = getProgramRuns(dummyMR2, \"running\");\n    Assert.assertTrue(2 == historyRuns.size());\n\n    // stop individual runs of the map-reduce program\n    String runId = historyRuns.get(0).getPid();\n    stopProgram(dummyMR2, 200, runId);\n\n    runId = historyRuns.get(1).getPid();\n    stopProgram(dummyMR2, 200, runId);\n\n    waitState(dummyMR2, STOPPED);\n\n    // deploy an app containing a workflow\n    response = deploy(SleepingWorkflowApp.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Program sleepWorkflow1 =\n      Id.Program.from(TEST_NAMESPACE1, SLEEP_WORKFLOW_APP_ID, ProgramType.WORKFLOW, SLEEP_WORKFLOW_NAME);\n    Id.Program sleepWorkflow2 =\n      Id.Program.from(TEST_NAMESPACE2, SLEEP_WORKFLOW_APP_ID, ProgramType.WORKFLOW, SLEEP_WORKFLOW_NAME);\n\n    // workflow is stopped initially\n    Assert.assertEquals(STOPPED, getProgramStatus(sleepWorkflow2));\n\n    // start workflow in the wrong namespace and verify that it does not start\n    startProgram(sleepWorkflow1, 404);\n    Assert.assertEquals(STOPPED, getProgramStatus(sleepWorkflow2));\n\n    // start workflow and check status\n    startProgram(sleepWorkflow2);\n    waitState(sleepWorkflow2, ProgramRunStatus.RUNNING.toString());\n\n    // workflow will stop itself\n    waitState(sleepWorkflow2, STOPPED);\n\n    // cleanup\n    response = doDelete(getVersionedAPIPath(\"apps/\", Constants.Gateway.API_VERSION_3_TOKEN,\n                                            TEST_NAMESPACE1));\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    response = doDelete(getVersionedAPIPath(\"apps/\", Constants.Gateway.API_VERSION_3_TOKEN,\n                                            TEST_NAMESPACE2));\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n  }","id":54180,"modified_method":"@Category(XSlowTests.class)\n  @Test\n  public void testProgramStartStopStatus() throws Exception {\n    // deploy, check the status\n    HttpResponse response = deploy(WordCountApp.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE1);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Flow wordcountFlow1 = Id.Flow.from(TEST_NAMESPACE1, WORDCOUNT_APP_NAME, WORDCOUNT_FLOW_NAME);\n    Id.Flow wordcountFlow2 = Id.Flow.from(TEST_NAMESPACE2, WORDCOUNT_APP_NAME, WORDCOUNT_FLOW_NAME);\n\n    // flow is stopped initially\n    Assert.assertEquals(STOPPED, getProgramStatus(wordcountFlow1));\n\n    // start flow in the wrong namespace and verify that it does not start\n    startProgram(wordcountFlow2, 404);\n    Assert.assertEquals(STOPPED, getProgramStatus(wordcountFlow1));\n\n    // start a flow and check the status\n    startProgram(wordcountFlow1);\n    waitState(wordcountFlow1, ProgramRunStatus.RUNNING.toString());\n\n    // stop the flow and check the status\n    stopProgram(wordcountFlow1);\n    waitState(wordcountFlow1, STOPPED);\n\n    // deploy another app in a different namespace and verify\n    response = deploy(DummyAppWithTrackingTable.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Program dummyMR1 = Id.Program.from(TEST_NAMESPACE1, DUMMY_APP_ID, ProgramType.MAPREDUCE, DUMMY_MR_NAME);\n    Id.Program dummyMR2 = Id.Program.from(TEST_NAMESPACE2, DUMMY_APP_ID, ProgramType.MAPREDUCE, DUMMY_MR_NAME);\n\n    // mapreduce is stopped initially\n    Assert.assertEquals(STOPPED, getProgramStatus(dummyMR2));\n\n    // start mapreduce in the wrong namespace and verify it does not start\n    startProgram(dummyMR1, 404);\n    Assert.assertEquals(STOPPED, getProgramStatus(dummyMR2));\n\n    // start map-reduce and verify status\n    startProgram(dummyMR2);\n    waitState(dummyMR2, ProgramRunStatus.RUNNING.toString());\n\n    // stop the mapreduce program and check the status\n    stopProgram(dummyMR2);\n    waitState(dummyMR2, STOPPED);\n\n    // start multiple runs of the map-reduce program\n    startProgram(dummyMR2);\n    startProgram(dummyMR2);\n\n    // verify that more than one map-reduce program runs are running\n    verifyProgramRuns(dummyMR2, \"running\", 1);\n\n    // get run records corresponding to the program runs\n    List<RunRecord> historyRuns = getProgramRuns(dummyMR2, \"running\");\n    Assert.assertTrue(2 == historyRuns.size());\n\n    // stop individual runs of the map-reduce program\n    String runId = historyRuns.get(0).getPid();\n    stopProgram(dummyMR2, 200, runId);\n\n    runId = historyRuns.get(1).getPid();\n    stopProgram(dummyMR2, 200, runId);\n\n    waitState(dummyMR2, STOPPED);\n\n    // deploy an app containing a workflow\n    response = deploy(SleepingWorkflowApp.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Program sleepWorkflow1 =\n      Id.Program.from(TEST_NAMESPACE1, SLEEP_WORKFLOW_APP_ID, ProgramType.WORKFLOW, SLEEP_WORKFLOW_NAME);\n    Id.Program sleepWorkflow2 =\n      Id.Program.from(TEST_NAMESPACE2, SLEEP_WORKFLOW_APP_ID, ProgramType.WORKFLOW, SLEEP_WORKFLOW_NAME);\n\n    // workflow is stopped initially\n    Assert.assertEquals(STOPPED, getProgramStatus(sleepWorkflow2));\n\n    // start workflow in the wrong namespace and verify that it does not start\n    startProgram(sleepWorkflow1, 404);\n    Assert.assertEquals(STOPPED, getProgramStatus(sleepWorkflow2));\n\n    // start workflow and check status\n    startProgram(sleepWorkflow2);\n    waitState(sleepWorkflow2, ProgramRunStatus.RUNNING.toString());\n\n    // workflow will stop itself\n    waitState(sleepWorkflow2, STOPPED);\n\n    // cleanup\n    response = doDelete(getVersionedAPIPath(\"apps/\", Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE1));\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    response = doDelete(getVersionedAPIPath(\"apps/\", Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2));\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n  }","commit_id":"58646577a2b0e1ad680fd51389d38b63c7f84244","url":"https://github.com/caskdata/cdap"},{"original_method":"private boolean dequeueOne(QueueName queueName) throws Exception {\n    QueueClientFactory queueClientFactory = AppFabricTestBase.getInjector().getInstance(QueueClientFactory.class);\n    final QueueConsumer consumer = queueClientFactory.createConsumer(queueName,\n                                                                     new ConsumerConfig(1L, 0, 1,\n                                                                                        DequeueStrategy.ROUND_ROBIN,\n                                                                                        null),\n                                                                     1);\n    // doing inside tx\n    TransactionExecutorFactory txExecutorFactory =\n      AppFabricTestBase.getInjector().getInstance(TransactionExecutorFactory.class);\n    return txExecutorFactory.createExecutor(ImmutableList.of((TransactionAware) consumer))\n      .execute(new Callable<Boolean>() {\n        @Override\n        public Boolean call() throws Exception {\n          return !consumer.dequeue(1).isEmpty();\n        }\n      });\n  }","id":54181,"modified_method":"private ServiceInstances getServiceInstances(Id.Service serviceId) throws Exception {\n    String instanceUrl = String.format(\"apps/%s/services/%s/instances\", serviceId.getApplicationId(),\n                                       serviceId.getId());\n    String versionedInstanceUrl = getVersionedAPIPath(instanceUrl, Constants.Gateway.API_VERSION_3_TOKEN,\n                                                      serviceId.getNamespaceId());\n    HttpResponse response = doGet(versionedInstanceUrl);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    return readResponse(response, ServiceInstances.class);\n  }","commit_id":"58646577a2b0e1ad680fd51389d38b63c7f84244","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testFlowRuntimeArgs() throws Exception {\n    HttpResponse response = GatewayFastTestsSuite.deploy(HighPassFilterApp.class, \"HighPassFilterApp\");\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n    //Set flow runtime arg threshold to 30\n    JsonObject json = new JsonObject();\n    json.addProperty(\"threshold\", \"30\");\n    response = GatewayFastTestsSuite.doPut(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/runtimeargs\", json.toString());\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/start\", null);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/services/Count/start\", null);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n\n    //Send two values - 25 and 35; Since threshold is 30, expected count is 1\n    response = GatewayFastTestsSuite.doPost(\"/v3/namespaces/default/streams/inputvalue\", \"25\");\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n    response = GatewayFastTestsSuite.doPost(\"/v3/namespaces/default/streams/inputvalue\", \"35\");\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n\n    // Check the service status. Make sure it is running before querying it\n    waitState(\"services\", \"HighPassFilterApp\", \"Count\", \"RUNNING\");\n\n    // Check the count. Gives it couple trials as it takes time for flow to process and write to the table\n    checkCount(\"1\");\n\n    //Now modify the threshold to 50\n    json.addProperty(\"threshold\", \"50\");\n    response = GatewayFastTestsSuite.doPut(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/runtimeargs\", json.toString());\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n\n    //Stop and start the flow and it should pick up the new threshold value; Verify that by sending 45 and 55\n    //Then count should be 2\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/stop\", null);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n\n    waitState(\"flows\", \"HighPassFilterApp\", \"FilterFlow\", \"STOPPED\");\n\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/start\", null);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n\n    response = GatewayFastTestsSuite.doPost(\"/v3/namespaces/default/streams/inputvalue\", \"45\");\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n    response = GatewayFastTestsSuite.doPost(\"/v3/namespaces/default/streams/inputvalue\", \"55\");\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n\n    // Check the count. Gives it couple trials as it takes time for flow to process and write to the table\n    checkCount(\"2\");\n\n    //Now stop the flow and update the threshold value during the start POST call to 100\n    //Test it by sending 95 and 105 and the count should be 3\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/stop\", null);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n\n    waitState(\"flows\", \"HighPassFilterApp\", \"FilterFlow\", \"STOPPED\");\n\n    json.addProperty(\"threshold\", \"100\");\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/start\", json.toString());\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n\n    response = GatewayFastTestsSuite.doPost(\"/v3/namespaces/default/streams/inputvalue\", \"95\");\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n    response = GatewayFastTestsSuite.doPost(\"/v3/namespaces/default/streams/inputvalue\", \"105\");\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n\n    // Check the count. Gives it couple trials as it takes time for flow to process and write to the table\n    checkCount(\"3\");\n\n    //Stop all flows and services and reset the state of the cdap\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/stop\", null);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/services/Count/stop\", null);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n\n    // Wait for program states. Make sure they are stopped before deletion\n    waitState(\"flows\", \"HighPassFilterApp\", \"FilterFlow\", \"STOPPED\");\n    waitState(\"services\", \"HighPassFilterApp\", \"Count\", \"STOPPED\");\n\n    response = GatewayFastTestsSuite.doDelete(\"/v3/namespaces/default/apps/HighPassFilterApp\");\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n  }","id":54182,"modified_method":"@Test\n  public void testFlowRuntimeArgs() throws Exception {\n    HttpResponse response = GatewayFastTestsSuite.deploy(HighPassFilterApp.class, \"HighPassFilterApp\");\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n    //Set flow runtime arg threshold to 30\n    JsonObject json = new JsonObject();\n    json.addProperty(\"threshold\", \"30\");\n    response = GatewayFastTestsSuite.doPut(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/runtimeargs\", json.toString());\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/start\", null);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/services/Count/start\", null);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n\n    //Send two values - 25 and 35; Since threshold is 30, expected count is 1\n    response = GatewayFastTestsSuite.doPost(\"/v3/namespaces/default/streams/inputvalue\", \"25\");\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n    response = GatewayFastTestsSuite.doPost(\"/v3/namespaces/default/streams/inputvalue\", \"35\");\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n\n    // Check the service status. Make sure it is running before querying it\n    waitState(\"services\", \"HighPassFilterApp\", \"Count\", \"RUNNING\");\n\n    // Check the count. Gives it couple trials as it takes time for flow to process and write to the table\n    checkCount(\"1\");\n\n    //Now modify the threshold to 50\n    json.addProperty(\"threshold\", \"50\");\n    response = GatewayFastTestsSuite.doPut(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/runtimeargs\", json.toString());\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n\n    //Stop and start the flow and it should pick up the new threshold value; Verify that by sending 45 and 55\n    //Then count should be 2\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/stop\", null);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n\n    waitState(\"flows\", \"HighPassFilterApp\", \"FilterFlow\", \"STOPPED\");\n\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/start\", null);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n\n    response = GatewayFastTestsSuite.doPost(\"/v3/namespaces/default/streams/inputvalue\", \"45\");\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n    response = GatewayFastTestsSuite.doPost(\"/v3/namespaces/default/streams/inputvalue\", \"55\");\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n\n    // Check the count. Gives it couple trials as it takes time for flow to process and write to the table\n    checkCount(\"2\");\n\n    //Now stop the flow and update the threshold value during the start POST call to 100\n    //Test it by sending 95 and 105 and the count should be 3\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/stop\", null);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n\n    waitState(\"flows\", \"HighPassFilterApp\", \"FilterFlow\", \"STOPPED\");\n\n    json.addProperty(\"threshold\", \"100\");\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/start\", json.toString());\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n\n    response = GatewayFastTestsSuite.doPost(\"/v3/namespaces/default/streams/inputvalue\", \"95\");\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n    response = GatewayFastTestsSuite.doPost(\"/v3/namespaces/default/streams/inputvalue\", \"105\");\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n\n    // Check the count. Gives it couple trials as it takes time for flow to process and write to the table\n    checkCount(\"3\");\n\n    //Stop all flows and services and reset the state of the cdap\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/flows/FilterFlow/stop\", null);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n    response = GatewayFastTestsSuite.doPost(\n      \"/v3/namespaces/default/apps/HighPassFilterApp/services/Count/stop\", null);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n\n    // Wait for program states. Make sure they are stopped before deletion\n    waitState(\"flows\", \"HighPassFilterApp\", \"FilterFlow\", \"STOPPED\");\n    waitState(\"services\", \"HighPassFilterApp\", \"Count\", \"STOPPED\");\n\n    response = GatewayFastTestsSuite.doDelete(\"/v3/namespaces/default/apps/HighPassFilterApp\");\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n  }","commit_id":"58646577a2b0e1ad680fd51389d38b63c7f84244","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testStreamWrites() throws Exception {\n    HttpResponse response = GatewayFastTestsSuite.deploy(AppWritingtoStream.class, AppWritingtoStream.APPNAME);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n    //Start Flow\n    response = GatewayFastTestsSuite.doPost(String.format(\"/v3/namespaces/default/apps/%s/flows/%s/start\",\n                                                          AppWritingtoStream.APPNAME,\n                                                          AppWritingtoStream.FLOW), null);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n    //Start Worker\n    response = GatewayFastTestsSuite.doPost(String.format(\"/v3/namespaces/default/apps/%s/workers/%s/start\",\n                                                          AppWritingtoStream.APPNAME,\n                                                          AppWritingtoStream.WORKER), null);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n    //Start Service\n    response = GatewayFastTestsSuite.doPost(String.format(\"/v3/namespaces/default/apps/%s/services/%s/start\",\n                                                          AppWritingtoStream.APPNAME,\n                                                          AppWritingtoStream.SERVICE), null);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n\n    waitState(\"flows\", AppWritingtoStream.APPNAME, AppWritingtoStream.FLOW, \"RUNNING\");\n    waitState(\"workers\", AppWritingtoStream.APPNAME, AppWritingtoStream.WORKER, \"RUNNING\");\n    waitState(\"services\", AppWritingtoStream.APPNAME, AppWritingtoStream.SERVICE, \"RUNNING\");\n\n    checkCount(AppWritingtoStream.VALUE);\n\n    //Stop Flow\n    response = GatewayFastTestsSuite.doPost(String.format(\"/v3/namespaces/default/apps/%s/flows/%s/stop\",\n                                                          AppWritingtoStream.APPNAME,\n                                                          AppWritingtoStream.FLOW), null);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n    //Stop Worker\n    response = GatewayFastTestsSuite.doPost(String.format(\"/v3/namespaces/default/apps/%s/workers/%s/stop\",\n                                                          AppWritingtoStream.APPNAME,\n                                                          AppWritingtoStream.WORKER), null);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n    //Stop Service\n    response = GatewayFastTestsSuite.doPost(String.format(\"/v3/namespaces/default/apps/%s/services/%s/stop\",\n                                                          AppWritingtoStream.APPNAME,\n                                                          AppWritingtoStream.SERVICE), null);\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n\n    waitState(\"flows\", AppWritingtoStream.APPNAME, AppWritingtoStream.FLOW, \"STOPPED\");\n    waitState(\"workers\", AppWritingtoStream.APPNAME, AppWritingtoStream.WORKER, \"STOPPED\");\n    waitState(\"services\", AppWritingtoStream.APPNAME, AppWritingtoStream.SERVICE, \"STOPPED\");\n\n    response = GatewayFastTestsSuite.doDelete(String.format(\"/v3/namespaces/default/apps/%s\",\n                                                            AppWritingtoStream.APPNAME));\n    Assert.assertEquals(response.getStatusLine().getStatusCode(), HttpResponseStatus.OK.getCode());\n  }","id":54183,"modified_method":"@Test\n  public void testStreamWrites() throws Exception {\n    HttpResponse response = GatewayFastTestsSuite.deploy(AppWritingtoStream.class, AppWritingtoStream.APPNAME);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n    //Start Flow\n    response = GatewayFastTestsSuite.doPost(String.format(\"/v3/namespaces/default/apps/%s/flows/%s/start\",\n                                                          AppWritingtoStream.APPNAME,\n                                                          AppWritingtoStream.FLOW), null);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n    //Start Worker\n    response = GatewayFastTestsSuite.doPost(String.format(\"/v3/namespaces/default/apps/%s/workers/%s/start\",\n                                                          AppWritingtoStream.APPNAME,\n                                                          AppWritingtoStream.WORKER), null);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n    //Start Service\n    response = GatewayFastTestsSuite.doPost(String.format(\"/v3/namespaces/default/apps/%s/services/%s/start\",\n                                                          AppWritingtoStream.APPNAME,\n                                                          AppWritingtoStream.SERVICE), null);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n\n    waitState(\"flows\", AppWritingtoStream.APPNAME, AppWritingtoStream.FLOW, \"RUNNING\");\n    waitState(\"workers\", AppWritingtoStream.APPNAME, AppWritingtoStream.WORKER, \"RUNNING\");\n    waitState(\"services\", AppWritingtoStream.APPNAME, AppWritingtoStream.SERVICE, \"RUNNING\");\n\n    checkCount(AppWritingtoStream.VALUE);\n\n    //Stop Flow\n    response = GatewayFastTestsSuite.doPost(String.format(\"/v3/namespaces/default/apps/%s/flows/%s/stop\",\n                                                          AppWritingtoStream.APPNAME,\n                                                          AppWritingtoStream.FLOW), null);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n    //Stop Worker\n    response = GatewayFastTestsSuite.doPost(String.format(\"/v3/namespaces/default/apps/%s/workers/%s/stop\",\n                                                          AppWritingtoStream.APPNAME,\n                                                          AppWritingtoStream.WORKER), null);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n    //Stop Service\n    response = GatewayFastTestsSuite.doPost(String.format(\"/v3/namespaces/default/apps/%s/services/%s/stop\",\n                                                          AppWritingtoStream.APPNAME,\n                                                          AppWritingtoStream.SERVICE), null);\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n\n    waitState(\"flows\", AppWritingtoStream.APPNAME, AppWritingtoStream.FLOW, \"STOPPED\");\n    waitState(\"workers\", AppWritingtoStream.APPNAME, AppWritingtoStream.WORKER, \"STOPPED\");\n    waitState(\"services\", AppWritingtoStream.APPNAME, AppWritingtoStream.SERVICE, \"STOPPED\");\n\n    response = GatewayFastTestsSuite.doDelete(String.format(\"/v3/namespaces/default/apps/%s\",\n                                                            AppWritingtoStream.APPNAME));\n    Assert.assertEquals(HttpResponseStatus.OK.getCode(), response.getStatusLine().getStatusCode());\n  }","commit_id":"58646577a2b0e1ad680fd51389d38b63c7f84244","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    public void configure() {\n      setName(\"ConcurrentWorkflow\");\n      setDescription(\"Workflow configured to run concurrently.\");\n      addAction(new SleepAction());\n    }","id":54184,"modified_method":"@Override\n    public void configure() {\n      setName(\"ConcurrentWorkflow\");\n      setDescription(\"Workflow configured to run concurrently.\");\n      addAction(new SimpleAction());\n    }","commit_id":"71784eb04be22ef721d3d049caecd5d5668c09dd","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void configure() {\n    setName(\"ConcurrentWorkflowApp\");\n    setDescription(\"Application with concurrently running Workflow instances\");\n    addWorkflow(new ConcurrentWorkflow());\n\n    // Schedule Workflow\n    scheduleWorkflow(Schedules.createTimeSchedule(\"concurrentWorkflowSchedule1\", \"\", \"* * * * *\"),\n                     \"ConcurrentWorkflow\");\n    scheduleWorkflow(Schedules.createTimeSchedule(\"concurrentWorkflowSchedule2\", \"\", \"* * * * *\"),\n                     \"ConcurrentWorkflow\");\n  }","id":54185,"modified_method":"@Override\n  public void configure() {\n    setName(\"ConcurrentWorkflowApp\");\n    setDescription(\"Application with concurrently running Workflow instances\");\n    addWorkflow(new ConcurrentWorkflow());\n\n    // Schedule Workflow\n    Map<String, String> schedule1Properties = Maps.newHashMap();\n    schedule1Properties.put(\"schedule.name\", \"concurrentWorkflowSchedule1\");\n    scheduleWorkflow(Schedules.createTimeSchedule(\"concurrentWorkflowSchedule1\", \"\", \"* * * * *\"),\n                     \"ConcurrentWorkflow\", schedule1Properties);\n\n    Map<String, String> schedule2Properties = Maps.newHashMap();\n    schedule2Properties.put(\"schedule.name\", \"concurrentWorkflowSchedule2\");\n    scheduleWorkflow(Schedules.createTimeSchedule(\"concurrentWorkflowSchedule2\", \"\", \"* * * * *\"),\n                     \"ConcurrentWorkflow\", schedule2Properties);\n  }","commit_id":"71784eb04be22ef721d3d049caecd5d5668c09dd","url":"https://github.com/caskdata/cdap"},{"original_method":"@Category(XSlowTests.class)\n  @Test\n  public void testMultipleWorkflowInstances() throws Exception {\n    String appWithConcurrentWorkflow = \"ConcurrentWorkflowApp\";\n    String appWithConcurrentWorkflowSchedule1 = \"concurrentWorkflowSchedule1\";\n    String appWithConcurrentWorkflowSchedule2 = \"concurrentWorkflowSchedule2\";\n    String concurrentWorkflowName = \"ConcurrentWorkflow\";\n\n    // create app in default namespace so that v2 and v3 api can be tested in the same test\n    String defaultNamespace = \"default\";\n    HttpResponse response = deploy(ConcurrentWorkflowApp.class, Constants.Gateway.API_VERSION_3_TOKEN,\n                                   defaultNamespace);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Assert.assertEquals(200, resumeSchedule(defaultNamespace, appWithConcurrentWorkflow,\n                                            appWithConcurrentWorkflowSchedule1));\n    Assert.assertEquals(200, resumeSchedule(defaultNamespace, appWithConcurrentWorkflow,\n                                            appWithConcurrentWorkflowSchedule2));\n\n    Map<String, String> propMap = Maps.newHashMap();\n    propMap.put(ProgramOptionConstants.CONCURRENT_RUNS_ENABLED, \"true\");\n    PreferencesStore store = getInjector().getInstance(PreferencesStore.class);\n    store.setProperties(defaultNamespace, appWithConcurrentWorkflow, ProgramType.WORKFLOW.getCategoryName(),\n                        concurrentWorkflowName, propMap);\n\n    Id.Program programId = Id.Program.from(defaultNamespace, appWithConcurrentWorkflow, ProgramType.WORKFLOW,\n                                           concurrentWorkflowName);\n\n    List<Map<String, String>> historyRuns = verifyAndGetWorkflowRuns(programId, \"RUNNING\", 1);\n\n    // Suspend ConcurrentWorkflow schedules\n    List<ScheduleSpecification> schedules = getSchedules(defaultNamespace, appWithConcurrentWorkflow,\n                                                         concurrentWorkflowName);\n\n    for (ScheduleSpecification spec : schedules) {\n      Assert.assertEquals(200, suspendSchedule(defaultNamespace, appWithConcurrentWorkflow,\n                                               spec.getSchedule().getName()));\n    }\n\n    response = getWorkflowCurrentStatus(programId, historyRuns.get(0).get(\"runid\"));\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String json = EntityUtils.toString(response.getEntity());\n    List<WorkflowActionNode> nodes = GSON.fromJson(json, LIST_WORKFLOWACTIONNODE_TYPE);\n    Assert.assertEquals(1, nodes.size());\n    Assert.assertEquals(\"SleepAction\", nodes.get(0).getProgram().getProgramName());\n\n    response = getWorkflowCurrentStatus(programId, historyRuns.get(1).get(\"runid\"));\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    json = EntityUtils.toString(response.getEntity());\n    nodes = GSON.fromJson(json, LIST_WORKFLOWACTIONNODE_TYPE);\n    Assert.assertEquals(1, nodes.size());\n    Assert.assertEquals(\"SleepAction\", nodes.get(0).getProgram().getProgramName());\n\n    // delete the application\n    String deleteURL = getVersionedAPIPath(\"apps/\" + appWithConcurrentWorkflow, Constants.Gateway\n      .API_VERSION_3_TOKEN, defaultNamespace);\n    deleteApplication(60, deleteURL, 200);\n  }","id":54186,"modified_method":"@Category(XSlowTests.class)\n  @Test\n  public void testMultipleWorkflowInstances() throws Exception {\n    String appWithConcurrentWorkflow = \"ConcurrentWorkflowApp\";\n    String appWithConcurrentWorkflowSchedule1 = \"concurrentWorkflowSchedule1\";\n    String appWithConcurrentWorkflowSchedule2 = \"concurrentWorkflowSchedule2\";\n    String concurrentWorkflowName = \"ConcurrentWorkflow\";\n\n    // Files used to synchronize between this test and workflow execution\n    File schedule1File = new File(tmpFolder.newFolder() + \"/concurrentWorkflowSchedule1.file\");\n    File schedule2File = new File(tmpFolder.newFolder() + \"/concurrentWorkflowSchedule2.file\");\n    File simpleActionDoneFile = new File(tmpFolder.newFolder() + \"/simpleaction.file.done\");\n\n    // create app in default namespace so that v2 and v3 api can be tested in the same test\n    String defaultNamespace = \"default\";\n    HttpResponse response = deploy(ConcurrentWorkflowApp.class, Constants.Gateway.API_VERSION_3_TOKEN,\n                                   defaultNamespace);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Program programId = Id.Program.from(defaultNamespace, appWithConcurrentWorkflow, ProgramType.WORKFLOW,\n                                           concurrentWorkflowName);\n\n\n    Map<String, String> propMap = ImmutableMap.of(ProgramOptionConstants.CONCURRENT_RUNS_ENABLED, \"true\",\n                                                           \"concurrentWorkflowSchedule1.file\",\n                                                           schedule1File.getAbsolutePath(),\n                                                           \"concurrentWorkflowSchedule2.file\",\n                                                           schedule2File.getAbsolutePath(),\n                                                           \"done.file\", simpleActionDoneFile.getAbsolutePath());\n\n    PreferencesStore store = getInjector().getInstance(PreferencesStore.class);\n    store.setProperties(defaultNamespace, appWithConcurrentWorkflow, ProgramType.WORKFLOW.getCategoryName(),\n                        concurrentWorkflowName, propMap);\n\n    Assert.assertEquals(200, resumeSchedule(defaultNamespace, appWithConcurrentWorkflow,\n                                            appWithConcurrentWorkflowSchedule1));\n    Assert.assertEquals(200, resumeSchedule(defaultNamespace, appWithConcurrentWorkflow,\n                                            appWithConcurrentWorkflowSchedule2));\n\n    while (!(schedule1File.exists() && schedule2File.exists())) {\n      TimeUnit.MILLISECONDS.sleep(50);\n    }\n\n    List<Map<String, String>> historyRuns = getWorkflowRuns(programId, \"running\");\n    Assert.assertTrue(historyRuns.size() >= 2);\n\n    // Suspend ConcurrentWorkflow schedules\n    List<ScheduleSpecification> schedules = getSchedules(defaultNamespace, appWithConcurrentWorkflow,\n                                                         concurrentWorkflowName);\n\n    for (ScheduleSpecification spec : schedules) {\n      Assert.assertEquals(200, suspendSchedule(defaultNamespace, appWithConcurrentWorkflow,\n                                               spec.getSchedule().getName()));\n    }\n\n    response = getWorkflowCurrentStatus(programId, historyRuns.get(0).get(\"runid\"));\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    String json = EntityUtils.toString(response.getEntity());\n    List<WorkflowActionNode> nodes = GSON.fromJson(json, LIST_WORKFLOWACTIONNODE_TYPE);\n    Assert.assertEquals(1, nodes.size());\n    Assert.assertEquals(\"SimpleAction\", nodes.get(0).getProgram().getProgramName());\n\n    response = getWorkflowCurrentStatus(programId, historyRuns.get(1).get(\"runid\"));\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n    json = EntityUtils.toString(response.getEntity());\n    nodes = GSON.fromJson(json, LIST_WORKFLOWACTIONNODE_TYPE);\n    Assert.assertEquals(1, nodes.size());\n    Assert.assertEquals(\"SimpleAction\", nodes.get(0).getProgram().getProgramName());\n\n    simpleActionDoneFile.createNewFile();\n\n    // delete the application\n    String deleteURL = getVersionedAPIPath(\"apps/\" + appWithConcurrentWorkflow, Constants.Gateway\n      .API_VERSION_3_TOKEN, defaultNamespace);\n    deleteApplication(60, deleteURL, 200);\n  }","commit_id":"71784eb04be22ef721d3d049caecd5d5668c09dd","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testWorkflowPauseResume() throws Exception {\n    String pauseResumeWorkflowApp = \"PauseResumeWorkflowApp\";\n    String pauseResumeWorkflow = \"PauseResumeWorkflow\";\n\n    // Files used to synchronize between this test and workflow execution\n    File firstSimpleActionFile = new File(tmpFolder.newFolder() + \"/firstsimpleaction.file\");\n    File firstSimpleActionDoneFile = new File(tmpFolder.newFolder() + \"/firstsimpleaction.file.done\");\n\n    File forkedSimpleActionFile = new File(tmpFolder.newFolder() + \"/forkedsimpleaction.file\");\n    File forkedSimpleActionDoneFile = new File(tmpFolder.newFolder() + \"/forkedsimpleaction.file.done\");\n\n    File anotherForkedSimpleActionFile = new File(tmpFolder.newFolder() + \"/anotherforkedsimpleaction.file\");\n    File anotherForkedSimpleActionDoneFile = new File(tmpFolder.newFolder() + \"/anotherforkedsimpleaction.file.done\");\n\n    File lastSimpleActionFile = new File(tmpFolder.newFolder() + \"/lastsimpleaction.file\");\n    File lastSimpleActionDoneFile = new File(tmpFolder.newFolder() + \"/lastsimpleaction.file.done\");\n\n    HttpResponse response = deploy(PauseResumeWorklowApp.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Program programId = Id.Program.from(TEST_NAMESPACE2, pauseResumeWorkflowApp, ProgramType.WORKFLOW,\n                                           pauseResumeWorkflow);\n\n    Map<String, String> runtimeArguments = Maps.newHashMap();\n    runtimeArguments.put(\"first.simple.action.file\", firstSimpleActionFile.getAbsolutePath());\n    runtimeArguments.put(\"first.simple.action.donefile\", firstSimpleActionDoneFile.getAbsolutePath());\n    runtimeArguments.put(\"forked.simple.action.file\", forkedSimpleActionFile.getAbsolutePath());\n    runtimeArguments.put(\"forked.simple.action.donefile\", forkedSimpleActionDoneFile.getAbsolutePath());\n    runtimeArguments.put(\"anotherforked.simple.action.file\", anotherForkedSimpleActionFile.getAbsolutePath());\n    runtimeArguments.put(\"anotherforked.simple.action.donefile\", anotherForkedSimpleActionDoneFile.getAbsolutePath());\n    runtimeArguments.put(\"last.simple.action.file\", lastSimpleActionFile.getAbsolutePath());\n    runtimeArguments.put(\"last.simple.action.donefile\", lastSimpleActionDoneFile.getAbsolutePath());\n\n    setAndTestRuntimeArgs(programId, runtimeArguments);\n\n    // Start the Workflow\n    startProgram(programId, 200);\n\n    // Workflow should be running\n    waitState(programId, \"RUNNING\");\n\n    // Get runid for the running Workflow\n    List<Map<String, String>> historyRuns = verifyAndGetWorkflowRuns(programId, \"running\");\n    Assert.assertTrue(historyRuns.size() == 1);\n    String runId = historyRuns.get(0).get(\"runid\");\n\n    while (!firstSimpleActionFile.exists()) {\n      TimeUnit.SECONDS.sleep(1);\n    }\n\n    // Only one Workflow node should be running\n    verifyRunningProgramCount(programId, runId, 1);\n\n    // Suspend the Workflow\n    suspendWorkflow(programId, runId, 200);\n\n    // Workflow status hould be SUSPENDED\n    waitState(programId, \"SUSPENDED\");\n\n    // Meta store information for this Workflow should reflect suspended run\n    verifyAndGetWorkflowRuns(programId, \"suspended\");\n\n    // Suspending the already suspended Workflow should give CONFLICT\n    suspendWorkflow(programId, runId, 409);\n\n    // Signal the FirstSimpleAction in the Workflow to continue\n    firstSimpleActionDoneFile.createNewFile();\n\n    // Even if the Workflow is suspended, currently executing action will complete and currently running nodes\n    // should be zero\n    verifyRunningProgramCount(programId, runId, 0);\n\n    // Verify that Workflow is still suspended\n    verifyAndGetWorkflowRuns(programId, \"suspended\");\n\n    // Resume the execution of the Workflow\n    resumeWorkflow(programId, runId, 200);\n\n    // Workflow should be running\n    waitState(programId, \"RUNNING\");\n\n    verifyAndGetWorkflowRuns(programId, \"running\");\n\n    // Resume on already running Workflow should give conflict\n    resumeWorkflow(programId, runId, 409);\n\n    // Wait till fork execution in the Workflow starts\n    while (!forkedSimpleActionFile.exists() && !anotherForkedSimpleActionFile.exists()) {\n      TimeUnit.SECONDS.sleep(1);\n    }\n\n    // Workflow should have 2 nodes running because of the fork\n    verifyRunningProgramCount(programId, runId, 2);\n\n    // Suspend the Workflow\n    suspendWorkflow(programId, runId, 200);\n\n    // Status of the Workflow should be suspended\n    waitState(programId, \"SUSPENDED\");\n\n    // Store should reflect the suspended status of the Workflow\n    verifyAndGetWorkflowRuns(programId, \"suspended\");\n\n    // Allow currently executing actions to complete\n    forkedSimpleActionDoneFile.createNewFile();\n    anotherForkedSimpleActionDoneFile.createNewFile();\n\n    // Workflow should have zero actions running\n    verifyRunningProgramCount(programId, runId, 0);\n\n    verifyAndGetWorkflowRuns(programId, \"suspended\");\n\n    Assert.assertTrue(!lastSimpleActionFile.exists());\n\n    resumeWorkflow(programId, runId, 200);\n\n    waitState(programId, \"RUNNING\");\n\n    while (!lastSimpleActionFile.exists()) {\n      TimeUnit.SECONDS.sleep(1);\n    }\n\n    verifyRunningProgramCount(programId, runId, 1);\n\n    lastSimpleActionDoneFile.createNewFile();\n\n    verifyAndGetWorkflowRuns(programId, \"completed\");\n\n    waitState(programId, \"STOPPED\");\n  }","id":54187,"modified_method":"@Test\n  public void testWorkflowPauseResume() throws Exception {\n    String pauseResumeWorkflowApp = \"PauseResumeWorkflowApp\";\n    String pauseResumeWorkflow = \"PauseResumeWorkflow\";\n\n    // Files used to synchronize between this test and workflow execution\n    File firstSimpleActionFile = new File(tmpFolder.newFolder() + \"/firstsimpleaction.file\");\n    File firstSimpleActionDoneFile = new File(tmpFolder.newFolder() + \"/firstsimpleaction.file.done\");\n\n    File forkedSimpleActionFile = new File(tmpFolder.newFolder() + \"/forkedsimpleaction.file\");\n    File forkedSimpleActionDoneFile = new File(tmpFolder.newFolder() + \"/forkedsimpleaction.file.done\");\n\n    File anotherForkedSimpleActionFile = new File(tmpFolder.newFolder() + \"/anotherforkedsimpleaction.file\");\n    File anotherForkedSimpleActionDoneFile = new File(tmpFolder.newFolder() + \"/anotherforkedsimpleaction.file.done\");\n\n    File lastSimpleActionFile = new File(tmpFolder.newFolder() + \"/lastsimpleaction.file\");\n    File lastSimpleActionDoneFile = new File(tmpFolder.newFolder() + \"/lastsimpleaction.file.done\");\n\n    HttpResponse response = deploy(PauseResumeWorklowApp.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Program programId = Id.Program.from(TEST_NAMESPACE2, pauseResumeWorkflowApp, ProgramType.WORKFLOW,\n                                           pauseResumeWorkflow);\n\n    Map<String, String> runtimeArguments = Maps.newHashMap();\n    runtimeArguments.put(\"first.simple.action.file\", firstSimpleActionFile.getAbsolutePath());\n    runtimeArguments.put(\"first.simple.action.donefile\", firstSimpleActionDoneFile.getAbsolutePath());\n    runtimeArguments.put(\"forked.simple.action.file\", forkedSimpleActionFile.getAbsolutePath());\n    runtimeArguments.put(\"forked.simple.action.donefile\", forkedSimpleActionDoneFile.getAbsolutePath());\n    runtimeArguments.put(\"anotherforked.simple.action.file\", anotherForkedSimpleActionFile.getAbsolutePath());\n    runtimeArguments.put(\"anotherforked.simple.action.donefile\", anotherForkedSimpleActionDoneFile.getAbsolutePath());\n    runtimeArguments.put(\"last.simple.action.file\", lastSimpleActionFile.getAbsolutePath());\n    runtimeArguments.put(\"last.simple.action.donefile\", lastSimpleActionDoneFile.getAbsolutePath());\n\n    setAndTestRuntimeArgs(programId, runtimeArguments);\n\n    // Start the Workflow\n    startProgram(programId, 200);\n\n    // Workflow should be running\n    waitState(programId, \"RUNNING\");\n\n    // Get runid for the running Workflow\n    List<Map<String, String>> historyRuns = getWorkflowRuns(programId, \"running\");\n    Assert.assertTrue(historyRuns.size() == 1);\n    String runId = historyRuns.get(0).get(\"runid\");\n\n    while (!firstSimpleActionFile.exists()) {\n      TimeUnit.MILLISECONDS.sleep(50);\n    }\n\n    // Only one Workflow node should be running\n    verifyRunningProgramCount(programId, runId, 1);\n\n    // Suspend the Workflow\n    suspendWorkflow(programId, runId, 200);\n\n    // Workflow status hould be SUSPENDED\n    waitState(programId, \"SUSPENDED\");\n\n    // Meta store information for this Workflow should reflect suspended run\n    verifyAndGetWorkflowRuns(programId, \"suspended\");\n\n    // Suspending the already suspended Workflow should give CONFLICT\n    suspendWorkflow(programId, runId, 409);\n\n    // Signal the FirstSimpleAction in the Workflow to continue\n    firstSimpleActionDoneFile.createNewFile();\n\n    // Even if the Workflow is suspended, currently executing action will complete and currently running nodes\n    // should be zero\n    verifyRunningProgramCount(programId, runId, 0);\n\n    // Verify that Workflow is still suspended\n    verifyAndGetWorkflowRuns(programId, \"suspended\");\n\n    // Resume the execution of the Workflow\n    resumeWorkflow(programId, runId, 200);\n\n    // Workflow should be running\n    waitState(programId, \"RUNNING\");\n\n    verifyAndGetWorkflowRuns(programId, \"running\");\n\n    // Resume on already running Workflow should give conflict\n    resumeWorkflow(programId, runId, 409);\n\n    // Wait till fork execution in the Workflow starts\n    while (!(forkedSimpleActionFile.exists() && anotherForkedSimpleActionFile.exists())) {\n      TimeUnit.MILLISECONDS.sleep(50);\n    }\n\n    // Workflow should have 2 nodes running because of the fork\n    verifyRunningProgramCount(programId, runId, 2);\n\n    // Suspend the Workflow\n    suspendWorkflow(programId, runId, 200);\n\n    // Status of the Workflow should be suspended\n    waitState(programId, \"SUSPENDED\");\n\n    // Store should reflect the suspended status of the Workflow\n    verifyAndGetWorkflowRuns(programId, \"suspended\");\n\n    // Allow currently executing actions to complete\n    forkedSimpleActionDoneFile.createNewFile();\n    anotherForkedSimpleActionDoneFile.createNewFile();\n\n    // Workflow should have zero actions running\n    verifyRunningProgramCount(programId, runId, 0);\n\n    verifyAndGetWorkflowRuns(programId, \"suspended\");\n\n    Assert.assertTrue(!lastSimpleActionFile.exists());\n\n    resumeWorkflow(programId, runId, 200);\n\n    waitState(programId, \"RUNNING\");\n\n    while (!lastSimpleActionFile.exists()) {\n      TimeUnit.SECONDS.sleep(1);\n    }\n\n    verifyRunningProgramCount(programId, runId, 1);\n\n    lastSimpleActionDoneFile.createNewFile();\n\n    verifyAndGetWorkflowRuns(programId, \"completed\");\n\n    waitState(programId, \"STOPPED\");\n  }","commit_id":"71784eb04be22ef721d3d049caecd5d5668c09dd","url":"https://github.com/caskdata/cdap"},{"original_method":"private void verifyRunningProgramCount(final Id.Program program, final String runId, final int expected)\n    throws Exception {\n    Tasks.waitFor(true, new Callable<Boolean>() {\n      @Override\n      public Boolean call() throws Exception {\n        return runningProgramCountMatches(program, runId, expected);\n      }\n    }, 10, TimeUnit.SECONDS, 50, TimeUnit.MILLISECONDS);\n  }","id":54188,"modified_method":"private void verifyRunningProgramCount(final Id.Program program, final String runId, final int expected)\n    throws Exception {\n    Tasks.waitFor(expected, new Callable<Integer>() {\n      @Override\n      public Integer call() throws Exception {\n        return runningProgramCount(program, runId);\n      }\n    }, 10, TimeUnit.SECONDS, 50, TimeUnit.MILLISECONDS);\n  }","commit_id":"71784eb04be22ef721d3d049caecd5d5668c09dd","url":"https://github.com/caskdata/cdap"},{"original_method":"private boolean runningProgramCountMatches(Id.Program program, String runId, int expectedCount) throws Exception {\n    String path = String.format(\"apps/%s/workflows/%s/%s/current\", program.getApplicationId(), program.getId(), runId);\n    HttpResponse response = doGet(getVersionedAPIPath(path, program.getNamespaceId()));\n    if (response.getStatusLine().getStatusCode() == 200) {\n      String json = EntityUtils.toString(response.getEntity());\n      List<WorkflowActionNode> output = GSON.fromJson(json, LIST_WORKFLOWACTIONNODE_TYPE);\n      if (output.size() == expectedCount) {\n        return true;\n      }\n    }\n    return false;\n  }","id":54189,"modified_method":"private Integer runningProgramCount(Id.Program program, String runId) throws Exception {\n    String path = String.format(\"apps/%s/workflows/%s/%s/current\", program.getApplicationId(), program.getId(), runId);\n    HttpResponse response = doGet(getVersionedAPIPath(path, program.getNamespaceId()));\n    if (response.getStatusLine().getStatusCode() == 200) {\n      String json = EntityUtils.toString(response.getEntity());\n      List<WorkflowActionNode> output = GSON.fromJson(json, LIST_WORKFLOWACTIONNODE_TYPE);\n      return output.size();\n    }\n    return null;\n  }","commit_id":"71784eb04be22ef721d3d049caecd5d5668c09dd","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testWorkflowSchedules() throws Exception {\n    // Steps for the test:\n    // 1. Deploy the app\n    // 2. Verify the schedules\n    // 3. Verify the history after waiting a while\n    // 4. Suspend the schedule\n    // 5. Verify there are no runs after the suspend by looking at the history\n    // 6. Resume the schedule\n    // 7. Verify there are runs after the resume by looking at the history\n\n    String appName = \"AppWithSchedule\";\n    String workflowName = \"SampleWorkflow\";\n    String sampleSchedule = \"SampleSchedule\";\n\n    // deploy app with schedule in namespace 2\n    HttpResponse response = deploy(AppWithSchedule.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Program programId = Id.Program.from(TEST_NAMESPACE2, appName, ProgramType.WORKFLOW,\n                                           workflowName);\n\n    Map<String, String> runtimeArguments = Maps.newHashMap();\n    runtimeArguments.put(\"someKey\", \"someWorkflowValue\");\n    runtimeArguments.put(\"workflowKey\", \"workflowValue\");\n\n    setAndTestRuntimeArgs(programId, runtimeArguments);\n\n    Assert.assertEquals(200,\n                        resumeSchedule(TEST_NAMESPACE2, appName, sampleSchedule));\n\n    // get schedules\n    List<ScheduleSpecification> schedules = getSchedules(TEST_NAMESPACE2, appName,\n                                                         workflowName);\n    Assert.assertEquals(1, schedules.size());\n    String scheduleName = schedules.get(0).getSchedule().getName();\n    Assert.assertNotNull(scheduleName);\n    Assert.assertFalse(scheduleName.isEmpty());\n\n    long current = System.currentTimeMillis();\n    Long nextRunTime = getNextScheduledRunTime(programId, scheduleName);\n    Assert.assertNotNull(nextRunTime);\n    Assert.assertTrue(nextRunTime > current);\n\n    verifyAndGetWorkflowRuns(programId, \"completed\");\n\n    //Check schedule status\n    String statusURL = getStatusURL(TEST_NAMESPACE2, appName, scheduleName);\n    scheduleStatusCheck(5, statusURL, \"SCHEDULED\");\n\n    Assert.assertEquals(200, suspendSchedule(TEST_NAMESPACE2, appName, scheduleName));\n    //check paused state\n    scheduleStatusCheck(5, statusURL, \"SUSPENDED\");\n\n    TimeUnit.SECONDS.sleep(2); //wait till any running jobs just before suspend call completes.\n\n    int workflowRuns = verifyAndGetWorkflowRuns(programId, \"completed\").size();\n\n    //Sleep for some time and verify there are no more scheduled jobs after the suspend.\n    TimeUnit.SECONDS.sleep(10);\n\n    int workflowRunsAfterSuspend = verifyAndGetWorkflowRuns(programId, \"completed\").size();\n    Assert.assertEquals(workflowRuns, workflowRunsAfterSuspend);\n\n    Assert.assertEquals(200, resumeSchedule(TEST_NAMESPACE2, appName, scheduleName));\n\n    verifyAndGetWorkflowRuns(programId, \"completed\", workflowRunsAfterSuspend);\n\n    //check scheduled state\n    scheduleStatusCheck(5, statusURL, \"SCHEDULED\");\n\n    //Check status of a non existing schedule\n    String invalid = getStatusURL(TEST_NAMESPACE2, appName, \"invalid\");\n    scheduleStatusCheck(5, invalid, \"NOT_FOUND\");\n\n    Assert.assertEquals(200, suspendSchedule(TEST_NAMESPACE2, appName, scheduleName));\n\n    //check paused state\n    scheduleStatusCheck(5, statusURL, \"SUSPENDED\");\n\n    //Schedule operations using invalid namespace\n    String inValidNamespaceURL = getStatusURL(TEST_NAMESPACE1, appName, scheduleName);\n    scheduleStatusCheck(5, inValidNamespaceURL, \"NOT_FOUND\");\n    Assert.assertEquals(404, suspendSchedule(TEST_NAMESPACE1, appName, scheduleName));\n    Assert.assertEquals(404, resumeSchedule(TEST_NAMESPACE1, appName, scheduleName));\n\n    TimeUnit.SECONDS.sleep(2); //wait till any running jobs just before suspend call completes.\n  }","id":54190,"modified_method":"@Test\n  public void testWorkflowSchedules() throws Exception {\n    // Steps for the test:\n    // 1. Deploy the app\n    // 2. Verify the schedules\n    // 3. Verify the history after waiting a while\n    // 4. Suspend the schedule\n    // 5. Verify there are no runs after the suspend by looking at the history\n    // 6. Resume the schedule\n    // 7. Verify there are runs after the resume by looking at the history\n\n    String appName = \"AppWithSchedule\";\n    String workflowName = \"SampleWorkflow\";\n    String sampleSchedule = \"SampleSchedule\";\n\n    // deploy app with schedule in namespace 2\n    HttpResponse response = deploy(AppWithSchedule.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Program programId = Id.Program.from(TEST_NAMESPACE2, appName, ProgramType.WORKFLOW,\n                                           workflowName);\n\n    Map<String, String> runtimeArguments = Maps.newHashMap();\n    runtimeArguments.put(\"someKey\", \"someWorkflowValue\");\n    runtimeArguments.put(\"workflowKey\", \"workflowValue\");\n\n    setAndTestRuntimeArgs(programId, runtimeArguments);\n\n    Assert.assertEquals(200,\n                        resumeSchedule(TEST_NAMESPACE2, appName, sampleSchedule));\n\n    // get schedules\n    List<ScheduleSpecification> schedules = getSchedules(TEST_NAMESPACE2, appName,\n                                                         workflowName);\n    Assert.assertEquals(1, schedules.size());\n    String scheduleName = schedules.get(0).getSchedule().getName();\n    Assert.assertNotNull(scheduleName);\n    Assert.assertFalse(scheduleName.isEmpty());\n\n    long current = System.currentTimeMillis();\n    Long nextRunTime = getNextScheduledRunTime(programId, scheduleName);\n    Assert.assertNotNull(nextRunTime);\n    Assert.assertTrue(nextRunTime > current);\n\n    verifyAndGetWorkflowRuns(programId, \"completed\");\n\n    //Check schedule status\n    String statusURL = getStatusURL(TEST_NAMESPACE2, appName, scheduleName);\n    scheduleStatusCheck(5, statusURL, \"SCHEDULED\");\n\n    Assert.assertEquals(200, suspendSchedule(TEST_NAMESPACE2, appName, scheduleName));\n    //check paused state\n    scheduleStatusCheck(5, statusURL, \"SUSPENDED\");\n\n    TimeUnit.SECONDS.sleep(2); //wait till any running jobs just before suspend call completes.\n\n    int workflowRuns = getWorkflowRuns(programId, \"completed\").size();\n\n    //Sleep for some time and verify there are no more scheduled jobs after the suspend.\n    TimeUnit.SECONDS.sleep(10);\n\n    int workflowRunsAfterSuspend = getWorkflowRuns(programId, \"completed\").size();\n    Assert.assertEquals(workflowRuns, workflowRunsAfterSuspend);\n\n    Assert.assertEquals(200, resumeSchedule(TEST_NAMESPACE2, appName, scheduleName));\n\n    verifyWorkflowRuns(programId, \"completed\", workflowRunsAfterSuspend);\n\n    //check scheduled state\n    scheduleStatusCheck(5, statusURL, \"SCHEDULED\");\n\n    //Check status of a non existing schedule\n    String invalid = getStatusURL(TEST_NAMESPACE2, appName, \"invalid\");\n    scheduleStatusCheck(5, invalid, \"NOT_FOUND\");\n\n    Assert.assertEquals(200, suspendSchedule(TEST_NAMESPACE2, appName, scheduleName));\n\n    //check paused state\n    scheduleStatusCheck(5, statusURL, \"SUSPENDED\");\n\n    //Schedule operations using invalid namespace\n    String inValidNamespaceURL = getStatusURL(TEST_NAMESPACE1, appName, scheduleName);\n    scheduleStatusCheck(5, inValidNamespaceURL, \"NOT_FOUND\");\n    Assert.assertEquals(404, suspendSchedule(TEST_NAMESPACE1, appName, scheduleName));\n    Assert.assertEquals(404, resumeSchedule(TEST_NAMESPACE1, appName, scheduleName));\n\n    TimeUnit.SECONDS.sleep(2); //wait till any running jobs just before suspend call completes.\n  }","commit_id":"71784eb04be22ef721d3d049caecd5d5668c09dd","url":"https://github.com/caskdata/cdap"},{"original_method":"private List<Map<String, String>> verifyAndGetWorkflowRuns(Id.Program program, String status) throws Exception {\n    return verifyAndGetWorkflowRuns(program, status, 0);\n  }","id":54191,"modified_method":"private void verifyAndGetWorkflowRuns(final Id.Program program, final String status) throws Exception {\n    verifyWorkflowRuns(program, status, 0);\n  }","commit_id":"71784eb04be22ef721d3d049caecd5d5668c09dd","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n  public void testWorkflowForkApp() throws Exception {\n    String workflowAppWithFork = \"WorkflowAppWithFork\";\n    String workflowWithFork = \"WorkflowWithFork\";\n\n    File doneFile = new File(tmpFolder.newFolder() + \"/testWorkflowForkApp.done\");\n    File oneActionFile = new File(tmpFolder.newFolder() + \"/oneAction.done\");\n    File anotherActionFile = new File(tmpFolder.newFolder() + \"/anotherAction.done\");\n\n    HttpResponse response = deploy(WorkflowAppWithFork.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Program programId = Id.Program.from(TEST_NAMESPACE2, workflowAppWithFork, ProgramType.WORKFLOW,\n                                           workflowWithFork);\n\n    Map<String, String> runtimeArguments = ImmutableMap.of(\"done.file\", doneFile.getAbsolutePath(),\n                                                           \"oneaction.file\", oneActionFile.getAbsolutePath(),\n                                                           \"anotheraction.file\", anotherActionFile.getAbsolutePath());\n\n    setAndTestRuntimeArgs(programId, runtimeArguments);\n\n    startProgram(programId, 200);\n\n    List<Map<String, String>> historyRuns = verifyAndGetWorkflowRuns(programId, \"running\");\n    Assert.assertTrue(historyRuns.size() == 1);\n\n    String runId = historyRuns.get(0).get(\"runid\");\n\n    while (!oneActionFile.exists() && !anotherActionFile.exists()) {\n      TimeUnit.SECONDS.sleep(1);\n    }\n\n    verifyRunningProgramCount(programId, runId, 2);\n\n    stopProgram(programId, 200);\n\n    response = getWorkflowCurrentStatus(programId, runId);\n    Assert.assertEquals(404, response.getStatusLine().getStatusCode());\n\n    verifyAndGetWorkflowRuns(programId, \"killed\");\n\n    oneActionFile.delete();\n    anotherActionFile.delete();\n\n    startProgram(programId, 200);\n\n    historyRuns = verifyAndGetWorkflowRuns(programId, \"running\");\n    Assert.assertTrue(historyRuns.size() == 1);\n    runId = historyRuns.get(0).get(\"runid\");\n\n    while (!oneActionFile.exists() && !anotherActionFile.exists()) {\n      TimeUnit.SECONDS.sleep(1);\n    }\n\n    verifyRunningProgramCount(programId, runId, 2);\n\n    // Signal the Workflow that execution can be continued by creating temp file\n    doneFile.createNewFile();\n\n    verifyAndGetWorkflowRuns(programId, \"completed\");\n  }","id":54192,"modified_method":"@Test\n  public void testWorkflowForkApp() throws Exception {\n    String workflowAppWithFork = \"WorkflowAppWithFork\";\n    String workflowWithFork = \"WorkflowWithFork\";\n\n    File doneFile = new File(tmpFolder.newFolder() + \"/testWorkflowForkApp.done\");\n    File oneActionFile = new File(tmpFolder.newFolder() + \"/oneAction.done\");\n    File anotherActionFile = new File(tmpFolder.newFolder() + \"/anotherAction.done\");\n\n    HttpResponse response = deploy(WorkflowAppWithFork.class, Constants.Gateway.API_VERSION_3_TOKEN, TEST_NAMESPACE2);\n    Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n\n    Id.Program programId = Id.Program.from(TEST_NAMESPACE2, workflowAppWithFork, ProgramType.WORKFLOW,\n                                           workflowWithFork);\n\n    Map<String, String> runtimeArguments = ImmutableMap.of(\"done.file\", doneFile.getAbsolutePath(),\n                                                           \"oneaction.file\", oneActionFile.getAbsolutePath(),\n                                                           \"anotheraction.file\", anotherActionFile.getAbsolutePath());\n\n    setAndTestRuntimeArgs(programId, runtimeArguments);\n\n    startProgram(programId, 200);\n\n    waitState(programId, \"RUNNING\");\n\n    List<Map<String, String>> historyRuns = getWorkflowRuns(programId, \"running\");\n    Assert.assertTrue(historyRuns.size() == 1);\n\n    String runId = historyRuns.get(0).get(\"runid\");\n\n    while (!(oneActionFile.exists() && anotherActionFile.exists())) {\n      TimeUnit.MILLISECONDS.sleep(50);\n    }\n\n    verifyRunningProgramCount(programId, runId, 2);\n\n    stopProgram(programId, 200);\n\n    response = getWorkflowCurrentStatus(programId, runId);\n    Assert.assertEquals(404, response.getStatusLine().getStatusCode());\n\n    verifyAndGetWorkflowRuns(programId, \"killed\");\n\n    oneActionFile.delete();\n    anotherActionFile.delete();\n\n    startProgram(programId, 200);\n\n    waitState(programId, \"RUNNING\");\n\n    historyRuns = getWorkflowRuns(programId, \"running\");\n    Assert.assertTrue(historyRuns.size() == 1);\n    runId = historyRuns.get(0).get(\"runid\");\n\n    while (!(oneActionFile.exists() && anotherActionFile.exists())) {\n      TimeUnit.MILLISECONDS.sleep(50);\n    }\n\n    verifyRunningProgramCount(programId, runId, 2);\n\n    // Signal the Workflow that execution can be continued by creating temp file\n    doneFile.createNewFile();\n\n    verifyAndGetWorkflowRuns(programId, \"completed\");\n  }","commit_id":"71784eb04be22ef721d3d049caecd5d5668c09dd","url":"https://github.com/caskdata/cdap"},{"original_method":"private List<Map<String, String>> verifyAndGetWorkflowRuns(Id.Program program, String status, int expected)\n    throws Exception {\n    String path = String.format(\"apps/%s/workflows/%s/runs?status=%s\", program.getApplicationId(), program.getId(),\n                                status);\n    int trial = 0, retries = 60;\n    int workflowRuns = 0;\n    List<Map<String, String>> history = Lists.newArrayList();\n    String json;\n    HttpResponse response;\n    while (trial++ < retries) {\n      response = doGet(getVersionedAPIPath(path, program.getNamespaceId()));\n      Assert.assertEquals(200, response.getStatusLine().getStatusCode());\n      json = EntityUtils.toString(response.getEntity());\n      history = new Gson().fromJson(json, LIST_MAP_STRING_STRING_TYPE);\n      workflowRuns = history.size();\n      if (workflowRuns > expected) {\n        break;\n      }\n      TimeUnit.SECONDS.sleep(1);\n    }\n    Assert.assertTrue(workflowRuns > expected);\n    return history;\n  }","id":54193,"modified_method":"private void verifyWorkflowRuns(final Id.Program program, final String status, final int expected)\n    throws Exception {\n    Tasks.waitFor(true, new Callable<Boolean>() {\n      @Override\n      public Boolean call() throws Exception {\n        return getWorkflowRuns(program, status).size() > expected;\n      }\n    }, 60, TimeUnit.SECONDS, 50, TimeUnit.MILLISECONDS);\n  }","commit_id":"71784eb04be22ef721d3d049caecd5d5668c09dd","url":"https://github.com/caskdata/cdap"},{"original_method":"@Test\n    @Slow\n    public void testFullRollingRestart() throws Exception {\n        startNode(\"node1\");\n        client(\"node1\").admin().indices().prepareCreate(\"test\").execute().actionGet();\n\n        for (int i = 0; i < 1000; i++) {\n            client(\"node1\").prepareIndex(\"test\", \"type1\", Long.toString(i))\n                    .setSource(MapBuilder.<String, Object>newMapBuilder().put(\"test\", \"value\" + i).map()).execute().actionGet();\n        }\n        client(\"node1\").admin().indices().prepareFlush().execute().actionGet();\n        for (int i = 1000; i < 2000; i++) {\n            client(\"node1\").prepareIndex(\"test\", \"type1\", Long.toString(i))\n                    .setSource(MapBuilder.<String, Object>newMapBuilder().put(\"test\", \"value\" + i).map()).execute().actionGet();\n        }\n\n        // now start adding nodes\n        startNode(\"node2\");\n        startNode(\"node3\");\n\n        // make sure the cluster state is green, and all has been recovered\n        assertThat(client(\"node1\").admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout(\"1m\").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes(\"3\").execute().actionGet().isTimedOut(), equalTo(false));\n\n        // now start adding nodes\n        startNode(\"node4\");\n        startNode(\"node5\");\n\n        // make sure the cluster state is green, and all has been recovered\n        assertThat(client(\"node1\").admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout(\"1m\").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes(\"5\").execute().actionGet().isTimedOut(), equalTo(false));\n\n        client(\"node1\").admin().indices().prepareRefresh().execute().actionGet();\n        for (int i = 0; i < 10; i++) {\n            assertThat(client(\"node1\").prepareCount().setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(2000l));\n        }\n\n        // now start shutting nodes down\n        closeNode(\"node1\");\n        // make sure the cluster state is green, and all has been recovered\n        assertThat(client(\"node5\").admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout(\"1m\").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes(\"4\").execute().actionGet().isTimedOut(), equalTo(false));\n        closeNode(\"node2\");\n        // make sure the cluster state is green, and all has been recovered\n        assertThat(client(\"node5\").admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout(\"1m\").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes(\"3\").execute().actionGet().isTimedOut(), equalTo(false));\n\n\n        client(\"node5\").admin().indices().prepareRefresh().execute().actionGet();\n        for (int i = 0; i < 10; i++) {\n            assertThat(client(\"node5\").prepareCount().setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(2000l));\n        }\n\n        closeNode(\"node3\");\n        // make sure the cluster state is green, and all has been recovered\n        assertThat(client(\"node5\").admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout(\"1m\").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes(\"2\").execute().actionGet().isTimedOut(), equalTo(false));\n        closeNode(\"node4\");\n\n        // make sure the cluster state is green, and all has been recovered\n        assertThat(client(\"node5\").admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout(\"1m\").setWaitForYellowStatus().setWaitForRelocatingShards(0).setWaitForNodes(\"1\").execute().actionGet().isTimedOut(), equalTo(false));\n\n        client(\"node5\").admin().indices().prepareRefresh().execute().actionGet();\n        for (int i = 0; i < 10; i++) {\n            assertThat(client(\"node5\").prepareCount().setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(2000l));\n        }\n    }","id":54194,"modified_method":"@Test\n    @Slow\n    public void testFullRollingRestart() throws Exception {\n        cluster().startNode();\n        client().admin().indices().prepareCreate(\"test\").execute().actionGet();\n    \n        for (int i = 0; i < 1000; i++) {\n            client().prepareIndex(\"test\", \"type1\", Long.toString(i))\n                    .setSource(MapBuilder.<String, Object>newMapBuilder().put(\"test\", \"value\" + i).map()).execute().actionGet();\n        }\n        client().admin().indices().prepareFlush().execute().actionGet();\n        for (int i = 1000; i < 2000; i++) {\n            client().prepareIndex(\"test\", \"type1\", Long.toString(i))\n                    .setSource(MapBuilder.<String, Object>newMapBuilder().put(\"test\", \"value\" + i).map()).execute().actionGet();\n        }\n\n        // now start adding nodes\n        cluster().startNode();\n        cluster().startNode();\n\n        // make sure the cluster state is green, and all has been recovered\n        assertThat(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout(\"1m\").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes(\"3\").execute().actionGet().isTimedOut(), equalTo(false));\n\n        // now start adding nodes\n        cluster().startNode();\n        cluster().startNode();\n\n        // make sure the cluster state is green, and all has been recovered\n        assertThat(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout(\"1m\").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes(\"5\").execute().actionGet().isTimedOut(), equalTo(false));\n\n        client().admin().indices().prepareRefresh().execute().actionGet();\n        for (int i = 0; i < 10; i++) {\n            assertThat(client().prepareCount().setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(2000l));\n        }\n\n        // now start shutting nodes down\n        cluster().stopRandomNode();\n        // make sure the cluster state is green, and all has been recovered\n        assertThat(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout(\"1m\").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes(\"4\").execute().actionGet().isTimedOut(), equalTo(false));\n        cluster().stopRandomNode();\n        // make sure the cluster state is green, and all has been recovered\n        assertThat(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout(\"1m\").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes(\"3\").execute().actionGet().isTimedOut(), equalTo(false));\n\n\n        client().admin().indices().prepareRefresh().execute().actionGet();\n        for (int i = 0; i < 10; i++) {\n            assertThat(client().prepareCount().setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(2000l));\n        }\n\n        cluster().stopRandomNode();\n        // make sure the cluster state is green, and all has been recovered\n        assertThat(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout(\"1m\").setWaitForGreenStatus().setWaitForRelocatingShards(0).setWaitForNodes(\"2\").execute().actionGet().isTimedOut(), equalTo(false));\n        cluster().stopRandomNode();\n\n        // make sure the cluster state is green, and all has been recovered\n        assertThat(client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setTimeout(\"1m\").setWaitForYellowStatus().setWaitForRelocatingShards(0).setWaitForNodes(\"1\").execute().actionGet().isTimedOut(), equalTo(false));\n\n        client().admin().indices().prepareRefresh().execute().actionGet();\n        for (int i = 0; i < 10; i++) {\n            assertThat(client().prepareCount().setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(2000l));\n        }\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@SuppressWarnings({\"ConstantConditions\", \"unchecked\"})\n    @Test\n    @BadApple\n    public void testIndexShardLifecycleLeak() throws Exception {\n        Node node = startNode(\"node1\");\n\n        node.client().admin().indices().prepareCreate(\"test\")\n                .setSettings(ImmutableSettings.builder().put(\"index.number_of_shards\", 1).put(\"index.number_of_replicas\", 0))\n                .execute().actionGet();\n\n        node.client().admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n\n        IndicesService indicesService = ((InternalNode) node).injector().getInstance(IndicesService.class);\n        IndexService indexService = indicesService.indexServiceSafe(\"test\");\n        Injector indexInjector = indexService.injector();\n        IndexShard shard = indexService.shardSafe(0);\n        Injector shardInjector = indexService.shardInjector(0);\n\n        performCommonOperations(node);\n\n        List<WeakReference> indexReferences = new ArrayList<WeakReference>();\n        List<WeakReference> shardReferences = new ArrayList<WeakReference>();\n\n        // TODO if we could iterate over the already created classes on the injector, we can just add them here to the list\n        // for now, we simple add some classes that make sense\n\n        // add index references\n        indexReferences.add(new WeakReference(indexService));\n        indexReferences.add(new WeakReference(indexInjector));\n        indexReferences.add(new WeakReference(indexService.mapperService()));\n        for (DocumentMapper documentMapper : indexService.mapperService()) {\n            indexReferences.add(new WeakReference(documentMapper));\n        }\n        indexReferences.add(new WeakReference(indexService.aliasesService()));\n        indexReferences.add(new WeakReference(indexService.analysisService()));\n        indexReferences.add(new WeakReference(indexService.fieldData()));\n        indexReferences.add(new WeakReference(indexService.queryParserService()));\n\n\n        // add shard references\n        shardReferences.add(new WeakReference(shard));\n        shardReferences.add(new WeakReference(shardInjector));\n\n        indexService = null;\n        indexInjector = null;\n        shard = null;\n        shardInjector = null;\n\n        node.client().admin().indices().prepareDelete().execute().actionGet();\n\n        for (int i = 0; i < 100; i++) {\n            System.gc();\n            int indexNotCleared = 0;\n            for (WeakReference indexReference : indexReferences) {\n                if (indexReference.get() != null) {\n                    indexNotCleared++;\n                }\n            }\n            int shardNotCleared = 0;\n            for (WeakReference shardReference : shardReferences) {\n                if (shardReference.get() != null) {\n                    shardNotCleared++;\n                }\n            }\n            logger.info(\"round {}, indices {}/{}, shards {}/{}\", i, indexNotCleared, indexReferences.size(), shardNotCleared, shardReferences.size());\n            if (indexNotCleared == 0 && shardNotCleared == 0) {\n                break;\n            }\n        }\n\n        //Thread.sleep(1000000);\n\n        for (WeakReference indexReference : indexReferences) {\n            assertThat(\"dangling index reference: \" + indexReference.get(), indexReference.get(), nullValue());\n        }\n\n        for (WeakReference shardReference : shardReferences) {\n            assertThat(\"dangling shard reference: \" + shardReference.get(), shardReference.get(), nullValue());\n        }\n    }","id":54195,"modified_method":"@SuppressWarnings({\"ConstantConditions\", \"unchecked\"})\n    @Test\n    @BadApple\n    public void testIndexShardLifecycleLeak() throws Exception {\n\n        client().admin().indices().prepareCreate(\"test\")\n                .setSettings(ImmutableSettings.builder().put(\"index.number_of_shards\", 1).put(\"index.number_of_replicas\", 0))\n                .execute().actionGet();\n\n        client().admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n\n        IndicesService indicesService = cluster().getInstance(IndicesService.class);\n        IndexService indexService = indicesService.indexServiceSafe(\"test\");\n        Injector indexInjector = indexService.injector();\n        IndexShard shard = indexService.shardSafe(0);\n        Injector shardInjector = indexService.shardInjector(0);\n\n        performCommonOperations();\n\n        List<WeakReference> indexReferences = new ArrayList<WeakReference>();\n        List<WeakReference> shardReferences = new ArrayList<WeakReference>();\n\n        // TODO if we could iterate over the already created classes on the injector, we can just add them here to the list\n        // for now, we simple add some classes that make sense\n\n        // add index references\n        indexReferences.add(new WeakReference(indexService));\n        indexReferences.add(new WeakReference(indexInjector));\n        indexReferences.add(new WeakReference(indexService.mapperService()));\n        for (DocumentMapper documentMapper : indexService.mapperService()) {\n            indexReferences.add(new WeakReference(documentMapper));\n        }\n        indexReferences.add(new WeakReference(indexService.aliasesService()));\n        indexReferences.add(new WeakReference(indexService.analysisService()));\n        indexReferences.add(new WeakReference(indexService.fieldData()));\n        indexReferences.add(new WeakReference(indexService.queryParserService()));\n\n\n        // add shard references\n        shardReferences.add(new WeakReference(shard));\n        shardReferences.add(new WeakReference(shardInjector));\n\n        indexService = null;\n        indexInjector = null;\n        shard = null;\n        shardInjector = null;\n\n        client().admin().indices().prepareDelete().execute().actionGet();\n\n        for (int i = 0; i < 100; i++) {\n            System.gc();\n            int indexNotCleared = 0;\n            for (WeakReference indexReference : indexReferences) {\n                if (indexReference.get() != null) {\n                    indexNotCleared++;\n                }\n            }\n            int shardNotCleared = 0;\n            for (WeakReference shardReference : shardReferences) {\n                if (shardReference.get() != null) {\n                    shardNotCleared++;\n                }\n            }\n            logger.info(\"round {}, indices {}/{}, shards {}/{}\", i, indexNotCleared, indexReferences.size(), shardNotCleared, shardReferences.size());\n            if (indexNotCleared == 0 && shardNotCleared == 0) {\n                break;\n            }\n        }\n\n        //Thread.sleep(1000000);\n\n        for (WeakReference indexReference : indexReferences) {\n            assertThat(\"dangling index reference: \" + indexReference.get(), indexReference.get(), nullValue());\n        }\n\n        for (WeakReference shardReference : shardReferences) {\n            assertThat(\"dangling shard reference: \" + shardReference.get(), shardReference.get(), nullValue());\n        }\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void performCommonOperations(Node node) {\n        node.client().prepareIndex(\"test\", \"type\", \"1\").setSource(\"field1\", \"value\", \"field2\", 2, \"field3\", 3.0f).execute().actionGet();\n        node.client().admin().indices().prepareRefresh().execute().actionGet();\n        node.client().prepareSearch(\"test\").setQuery(QueryBuilders.queryString(\"field1:value\")).execute().actionGet();\n        node.client().prepareSearch(\"test\").setQuery(QueryBuilders.termQuery(\"field1\", \"value\")).execute().actionGet();\n    }","id":54196,"modified_method":"private void performCommonOperations() {\n        client().prepareIndex(\"test\", \"type\", \"1\").setSource(\"field1\", \"value\", \"field2\", 2, \"field3\", 3.0f).execute().actionGet();\n        client().admin().indices().prepareRefresh().execute().actionGet();\n        client().prepareSearch(\"test\").setQuery(QueryBuilders.queryString(\"field1:value\")).execute().actionGet();\n        client().prepareSearch(\"test\").setQuery(QueryBuilders.termQuery(\"field1\", \"value\")).execute().actionGet();\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void shardsCleanup() throws Exception {\n        logger.info(\"--> creating index [test] with one shard and on replica\");\n        client().admin().indices().create(createIndexRequest(\"test\")\n                .settings(settingsBuilder().put(\"index.numberOfReplicas\", 1).put(\"index.numberOfShards\", 1))).actionGet();\n\n        logger.info(\"--> running cluster_health\");\n        ClusterHealthResponse clusterHealth = client().admin().cluster().health(clusterHealthRequest().waitForGreenStatus()).actionGet();\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n\n\n        logger.info(\"--> making sure that shard and it's replica are allocated on server1 and server2\");\n        assertThat(shardDirectory(\"server1\", \"test\", 0).exists(), equalTo(true));\n        assertThat(shardDirectory(\"server2\", \"test\", 0).exists(), equalTo(true));\n\n        logger.info(\"--> starting node server3\");\n        startNode(\"server3\");\n\n        logger.info(\"--> making sure that shard is not allocated on server3\");\n        assertThat(waitForShardDeletion(\"server3\", \"test\", 0), equalTo(false));\n\n        File server2Shard = shardDirectory(\"server2\", \"test\", 0);\n        logger.info(\"--> stopping node server2\");\n        closeNode(\"server2\");\n        assertThat(server2Shard.exists(), equalTo(true));\n\n        logger.info(\"--> running cluster_health\");\n        clusterHealth = client().admin().cluster().health(clusterHealthRequest().waitForGreenStatus().waitForNodes(\"2\")).actionGet();\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n\n        logger.info(\"--> making sure that shard and it's replica exist on server1, server2 and server3\");\n        assertThat(shardDirectory(\"server1\", \"test\", 0).exists(), equalTo(true));\n        assertThat(server2Shard.exists(), equalTo(true));\n        assertThat(shardDirectory(\"server3\", \"test\", 0).exists(), equalTo(true));\n\n        logger.info(\"--> starting node server2\");\n        startNode(\"server2\");\n\n        logger.info(\"--> running cluster_health\");\n        clusterHealth = client(\"server2\").admin().cluster().health(clusterHealthRequest().waitForGreenStatus()).actionGet();\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n\n        logger.info(\"--> making sure that shard and it's replica are allocated on server1 and server3 but not on server2\");\n        assertThat(shardDirectory(\"server1\", \"test\", 0).exists(), equalTo(true));\n        assertThat(shardDirectory(\"server3\", \"test\", 0).exists(), equalTo(true));\n        assertThat(waitForShardDeletion(\"server2\", \"test\", 0), equalTo(false));\n    }","id":54197,"modified_method":"@Test\n    public void shardsCleanup() throws Exception {\n        final String node_1 = cluster().startNode(SETTINGS);\n        final String node_2 = cluster().startNode(SETTINGS);\n        logger.info(\"--> creating index [test] with one shard and on replica\");\n        client().admin().indices().create(createIndexRequest(\"test\")\n                .settings(settingsBuilder().put(\"index.numberOfReplicas\", 1).put(\"index.numberOfShards\", 1))).actionGet();\n\n        logger.info(\"--> running cluster_health\");\n        ClusterHealthResponse clusterHealth = client().admin().cluster().health(clusterHealthRequest().waitForGreenStatus()).actionGet();\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n\n\n        logger.info(\"--> making sure that shard and it's replica are allocated on node_1 and node_2\");\n        assertThat(shardDirectory(node_1, \"test\", 0).exists(), equalTo(true));\n        assertThat(shardDirectory(node_2, \"test\", 0).exists(), equalTo(true));\n\n        logger.info(\"--> starting node server3\");\n        String node_3 = cluster().startNode(SETTINGS);\n\n        logger.info(\"--> making sure that shard is not allocated on server3\");\n        assertThat(waitForShardDeletion(node_3, \"test\", 0), equalTo(false));\n\n        File server2Shard = shardDirectory(node_2, \"test\", 0);\n        logger.info(\"--> stopping node node_2\");\n        cluster().stopRandomNode(new Predicate<Settings>() {\n            \n            public boolean apply(Settings settings) {\n                return settings.get(\"name\").equals(node_2);\n            }\n        });\n        assertThat(server2Shard.exists(), equalTo(true));\n\n        logger.info(\"--> running cluster_health\");\n        clusterHealth = client().admin().cluster().health(clusterHealthRequest().waitForGreenStatus().waitForNodes(\"2\")).actionGet();\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n\n        logger.info(\"--> making sure that shard and it's replica exist on server1, server2 and server3\");\n        assertThat(shardDirectory(node_1, \"test\", 0).exists(), equalTo(true));\n        assertThat(server2Shard.exists(), equalTo(true));\n        assertThat(shardDirectory(node_3, \"test\", 0).exists(), equalTo(true));\n\n        logger.info(\"--> starting node node_4\");\n        final String node_4 = cluster().startNode(SETTINGS);\n\n        logger.info(\"--> running cluster_health\");\n        clusterHealth = client().admin().cluster().health(clusterHealthRequest().waitForGreenStatus()).actionGet();\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        logger.info(\"--> done cluster_health, status \" + clusterHealth.getStatus());\n\n        logger.info(\"--> making sure that shard and it's replica are allocated on server1 and server3 but not on server2\");\n        assertThat(shardDirectory(node_1, \"test\", 0).exists(), equalTo(true));\n        assertThat(shardDirectory(node_3, \"test\", 0).exists(), equalTo(true));\n        assertThat(waitForShardDeletion(node_4, \"test\", 0), equalTo(false));\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private File shardDirectory(String server, String index, int shard) {\n        InternalNode node = ((InternalNode) node(server));\n        NodeEnvironment env = node.injector().getInstance(NodeEnvironment.class);\n        return env.shardLocations(new ShardId(index, shard))[0];\n    }","id":54198,"modified_method":"private File shardDirectory(String server, String index, int shard) {\n        NodeEnvironment env = cluster().getInstance(NodeEnvironment.class, server);\n        return env.shardLocations(new ShardId(index, shard))[0];\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@After\n    public void after() {\n        deletePluginsFolder();\n        closeAllNodes();\n    }","id":54199,"modified_method":"@After\n    public void afterTest() {\n        deletePluginsFolder();\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testLocalPluginWithoutFolders() throws Exception {\n        //When we don't have folders at all in the top-level, but only files, we don't modify anything\n        String pluginName = \"plugin-test\";\n        URL url = PluginManagerTests.class.getResource(\"plugin_without_folders.zip\");\n        downloadAndExtract(pluginName, \"file://\" + url.getFile());\n\n        Node node = startNode();\n\n        assertPluginLoaded(pluginName);\n        assertPluginAvailable(node, pluginName);\n    }","id":54200,"modified_method":"@Test\n    public void testLocalPluginWithoutFolders() throws Exception {\n        //When we don't have folders at all in the top-level, but only files, we don't modify anything\n        String pluginName = \"plugin-test\";\n        URL url = PluginManagerTests.class.getResource(\"plugin_without_folders.zip\");\n        downloadAndExtract(pluginName, \"file://\" + url.getFile());\n\n        String nodeName = cluster().startNode(SETTINGS);\n\n        assertPluginLoaded(pluginName);\n        assertPluginAvailable(nodeName, pluginName);\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testLocalPluginInstallSingleFolder() throws Exception {\n        //When we have only a folder in top-level (no files either) we remove that folder while extracting\n        String pluginName = \"plugin-test\";\n        URL url = PluginManagerTests.class.getResource(\"plugin_single_folder.zip\");\n        downloadAndExtract(pluginName, \"file://\" + url.getFile());\n\n        Node node = startNode();\n\n        assertPluginLoaded(pluginName);\n        assertPluginAvailable(node, pluginName);\n    }","id":54201,"modified_method":"@Test\n    public void testLocalPluginInstallSingleFolder() throws Exception {\n        //When we have only a folder in top-level (no files either) we remove that folder while extracting\n        String pluginName = \"plugin-test\";\n        URL url = PluginManagerTests.class.getResource(\"plugin_single_folder.zip\");\n        downloadAndExtract(pluginName, \"file://\" + url.getFile());\n        \n        String nodeName = cluster().startNode(SETTINGS);\n\n        assertPluginLoaded(pluginName);\n        assertPluginAvailable(nodeName, pluginName);\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Before\n    public void before() {\n        deletePluginsFolder();\n    }","id":54202,"modified_method":"@Before\n    public void beforeTest() {\n        deletePluginsFolder();\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testLocalPluginFolderAndFile() throws Exception {\n        //When we have a single top-level folder but also files in the top-level, we don't modify anything\n        String pluginName = \"plugin-test\";\n        URL url = PluginManagerTests.class.getResource(\"plugin_folder_file.zip\");\n        downloadAndExtract(pluginName, \"file://\" + url.getFile());\n\n        Node node = startNode();\n\n        assertPluginLoaded(pluginName);\n        assertPluginAvailable(node, pluginName);\n    }","id":54203,"modified_method":"@Test\n    public void testLocalPluginFolderAndFile() throws Exception {\n        //When we have a single top-level folder but also files in the top-level, we don't modify anything\n        String pluginName = \"plugin-test\";\n        URL url = PluginManagerTests.class.getResource(\"plugin_folder_file.zip\");\n        downloadAndExtract(pluginName, \"file://\" + url.getFile());\n\n        String nodeName = cluster().startNode(SETTINGS);\n\n        assertPluginLoaded(pluginName);\n        assertPluginAvailable(nodeName, pluginName);\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testLocalPluginInstallSiteFolder() throws Exception {\n        //When we have only a folder in top-level (no files either) but it's called _site, we make it work\n        //we can either remove the folder while extracting and then re-add it manually or just leave it as it is\n        String pluginName = \"plugin-test\";\n        URL url = PluginManagerTests.class.getResource(\"plugin_folder_site.zip\");\n        downloadAndExtract(pluginName, \"file://\" + url.getFile());\n\n        Node node = startNode();\n\n        assertPluginLoaded(pluginName);\n        assertPluginAvailable(node, pluginName);\n    }","id":54204,"modified_method":"@Test\n    public void testLocalPluginInstallSiteFolder() throws Exception {\n        //When we have only a folder in top-level (no files either) but it's called _site, we make it work\n        //we can either remove the folder while extracting and then re-add it manually or just leave it as it is\n        String pluginName = \"plugin-test\";\n        URL url = PluginManagerTests.class.getResource(\"plugin_folder_site.zip\");\n        downloadAndExtract(pluginName, \"file://\" + url.getFile());\n\n        String nodeName = cluster().startNode(SETTINGS);\n\n        assertPluginLoaded(pluginName);\n        assertPluginAvailable(nodeName, pluginName);\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void assertPluginAvailable(Node node, String pluginName) {\n        HttpServerTransport httpServerTransport = ((InternalNode) node).injector().getInstance(HttpServerTransport.class);\n        HttpClient httpClient = new HttpClient(httpServerTransport.boundAddress().publishAddress());\n        //checking that the http connector is working properly\n        HttpClientResponse response = httpClient.request(\"\");\n        assertThat(response.errorCode(), equalTo(RestStatus.OK.getStatus()));\n        assertThat(response.response(), containsString(NODE_NAME));\n        //checking now that the plugin is available\n        response = httpClient.request(\"_plugin/\" + pluginName + \"/\");\n        assertThat(response.errorCode(), equalTo(RestStatus.OK.getStatus()));\n    }","id":54205,"modified_method":"private void assertPluginAvailable(String nodeName, String pluginName) {\n        HttpServerTransport httpServerTransport = cluster().getInstance(HttpServerTransport.class);\n        HttpClient httpClient = new HttpClient(httpServerTransport.boundAddress().publishAddress());\n        //checking that the http connector is working properly\n        HttpClientResponse response = httpClient.request(\"\");\n        assertThat(response.errorCode(), equalTo(RestStatus.OK.getStatus()));\n        assertThat(response.response(), containsString(nodeName));\n        //checking now that the plugin is available\n        response = httpClient.request(\"_plugin/\" + pluginName + \"/\");\n        assertThat(response.errorCode(), equalTo(RestStatus.OK.getStatus()));\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testAvailableSpaceDetection() {\n        File dataRoot = environment.dataFiles()[0];\n        startNode(\"node1\", settingsBuilder().putArray(\"path.data\", new File(dataRoot, \"data1\").getAbsolutePath(), new File(dataRoot, \"data2\").getAbsolutePath()));\n        for (String store : STORE_TYPES) {\n            createIndexWithStoreType(\"node1\", \"test\", store, StrictDistributor.class.getCanonicalName());\n        }\n    }","id":54206,"modified_method":"@Test\n    public void testAvailableSpaceDetection() {\n        File dataRoot = cluster().getInstance(Environment.class).dataFiles()[0];\n        cluster().stopRandomNode();\n        cluster().startNode(settingsBuilder().putArray(\"path.data\", new File(dataRoot, \"data1\").getAbsolutePath(), new File(dataRoot, \"data2\").getAbsolutePath()));\n        for (String store : STORE_TYPES) {\n            createIndexWithStoreType(\"test\", store, StrictDistributor.class.getCanonicalName());\n        }\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private Directory getStoreDirectory(String nodeId, String index, int shardId) {\n        IndicesService indicesService = ((InternalNode) node(nodeId)).injector().getInstance(IndicesService.class);\n        InternalIndexShard indexShard = (InternalIndexShard) (indicesService.indexService(index).shard(shardId));\n        return indexShard.store().directory();\n    }","id":54207,"modified_method":"private Directory getStoreDirectory(String index, int shardId) {\n        IndicesService indicesService = cluster().getInstance(IndicesService.class);\n        InternalIndexShard indexShard = (InternalIndexShard) (indicesService.indexService(index).shard(shardId));\n        return indexShard.store().directory();\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testDirectoryToString() throws IOException {\n        File dataRoot = environment.dataFiles()[0];\n        String dataPath1 = new File(dataRoot, \"data1\").getCanonicalPath();\n        String dataPath2 = new File(dataRoot, \"data2\").getCanonicalPath();\n        startNode(\"node1\", settingsBuilder().putArray(\"path.data\", dataPath1, dataPath2));\n\n        createIndexWithStoreType(\"node1\", \"test\", \"niofs\", \"least_used\");\n        String storeString = getStoreDirectory(\"node1\", \"test\", 0).toString();\n        logger.info(storeString);\n        assertThat(storeString, startsWith(\"store(least_used[rate_limited(niofs(\" + dataPath1));\n        assertThat(storeString, containsString(\"), rate_limited(niofs(\" + dataPath2));\n        assertThat(storeString, endsWith(\", type=MERGE, rate=20.0)])\"));\n\n        createIndexWithStoreType(\"node1\", \"test\", \"niofs\", \"random\");\n        storeString = getStoreDirectory(\"node1\", \"test\", 0).toString();\n        logger.info(storeString);\n        assertThat(storeString, startsWith(\"store(random[rate_limited(niofs(\" + dataPath1));\n        assertThat(storeString, containsString(\"), rate_limited(niofs(\" + dataPath2));\n        assertThat(storeString, endsWith(\", type=MERGE, rate=20.0)])\"));\n\n        createIndexWithStoreType(\"node1\", \"test\", \"mmapfs\", \"least_used\");\n        storeString = getStoreDirectory(\"node1\", \"test\", 0).toString();\n        logger.info(storeString);\n        assertThat(storeString, startsWith(\"store(least_used[rate_limited(mmapfs(\" + dataPath1));\n        assertThat(storeString, containsString(\"), rate_limited(mmapfs(\" + dataPath2));\n        assertThat(storeString, endsWith(\", type=MERGE, rate=20.0)])\"));\n\n        createIndexWithStoreType(\"node1\", \"test\", \"simplefs\", \"least_used\");\n        storeString = getStoreDirectory(\"node1\", \"test\", 0).toString();\n        logger.info(storeString);\n        assertThat(storeString, startsWith(\"store(least_used[rate_limited(simplefs(\" + dataPath1));\n        assertThat(storeString, containsString(\"), rate_limited(simplefs(\" + dataPath2));\n        assertThat(storeString, endsWith(\", type=MERGE, rate=20.0)])\"));\n\n        createIndexWithStoreType(\"node1\", \"test\", \"memory\", \"least_used\");\n        storeString = getStoreDirectory(\"node1\", \"test\", 0).toString();\n        logger.info(storeString);\n        assertThat(storeString, equalTo(\"store(least_used[byte_buffer])\"));\n\n        createIndexWithoutRateLimitingStoreType(\"node1\", \"test\", \"niofs\", \"least_used\");\n        storeString = getStoreDirectory(\"node1\", \"test\", 0).toString();\n        logger.info(storeString);\n        assertThat(storeString, startsWith(\"store(least_used[niofs(\" + dataPath1));\n        assertThat(storeString, containsString(\"), niofs(\" + dataPath2));\n        assertThat(storeString, endsWith(\")])\"));\n    }","id":54208,"modified_method":"@Test\n    public void testDirectoryToString() throws IOException {\n        File dataRoot = cluster().getInstance(Environment.class).dataFiles()[0];\n        String dataPath1 = new File(dataRoot, \"data1\").getCanonicalPath();\n        String dataPath2 = new File(dataRoot, \"data2\").getCanonicalPath();\n        cluster().stopRandomNode();\n        cluster().startNode(settingsBuilder().putArray(\"path.data\", dataPath1, dataPath2));\n\n        createIndexWithStoreType(\"test\", \"niofs\", \"least_used\");\n        String storeString = getStoreDirectory(\"test\", 0).toString();\n        logger.info(storeString);\n        assertThat(storeString, startsWith(\"store(least_used[rate_limited(niofs(\" + dataPath1));\n        assertThat(storeString, containsString(\"), rate_limited(niofs(\" + dataPath2));\n        assertThat(storeString, endsWith(\", type=MERGE, rate=20.0)])\"));\n\n        createIndexWithStoreType(\"test\", \"niofs\", \"random\");\n        storeString = getStoreDirectory(\"test\", 0).toString();\n        logger.info(storeString);\n        assertThat(storeString, startsWith(\"store(random[rate_limited(niofs(\" + dataPath1));\n        assertThat(storeString, containsString(\"), rate_limited(niofs(\" + dataPath2));\n        assertThat(storeString, endsWith(\", type=MERGE, rate=20.0)])\"));\n\n        createIndexWithStoreType(\"test\", \"mmapfs\", \"least_used\");\n        storeString = getStoreDirectory(\"test\", 0).toString();\n        logger.info(storeString);\n        assertThat(storeString, startsWith(\"store(least_used[rate_limited(mmapfs(\" + dataPath1));\n        assertThat(storeString, containsString(\"), rate_limited(mmapfs(\" + dataPath2));\n        assertThat(storeString, endsWith(\", type=MERGE, rate=20.0)])\"));\n\n        createIndexWithStoreType(\"test\", \"simplefs\", \"least_used\");\n        storeString = getStoreDirectory(\"test\", 0).toString();\n        logger.info(storeString);\n        assertThat(storeString, startsWith(\"store(least_used[rate_limited(simplefs(\" + dataPath1));\n        assertThat(storeString, containsString(\"), rate_limited(simplefs(\" + dataPath2));\n        assertThat(storeString, endsWith(\", type=MERGE, rate=20.0)])\"));\n\n        createIndexWithStoreType(\"test\", \"memory\", \"least_used\");\n        storeString = getStoreDirectory(\"test\", 0).toString();\n        logger.info(storeString);\n        assertThat(storeString, equalTo(\"store(least_used[byte_buffer])\"));\n\n        createIndexWithoutRateLimitingStoreType(\"test\", \"niofs\", \"least_used\");\n        storeString = getStoreDirectory(\"test\", 0).toString();\n        logger.info(storeString);\n        assertThat(storeString, startsWith(\"store(least_used[niofs(\" + dataPath1));\n        assertThat(storeString, containsString(\"), niofs(\" + dataPath2));\n        assertThat(storeString, endsWith(\")])\"));\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void createIndexWithStoreType(String nodeId, String index, String storeType, String distributor) {\n        try {\n            client(nodeId).admin().indices().prepareDelete(index).execute().actionGet();\n        } catch (IndexMissingException ex) {\n            // Ignore\n        }\n        client(nodeId).admin().indices().prepareCreate(index)\n                .setSettings(settingsBuilder()\n                        .put(\"index.store.distributor\", distributor)\n                        .put(\"index.store.type\", storeType)\n                        .put(\"index.number_of_replicas\", 0)\n                        .put(\"index.number_of_shards\", 1)\n                )\n                .execute().actionGet();\n        assertThat(client(\"node1\").admin().cluster().prepareHealth(\"test\").setWaitForGreenStatus().execute().actionGet().isTimedOut(), equalTo(false));\n    }","id":54209,"modified_method":"private void createIndexWithStoreType(String index, String storeType, String distributor) {\n        wipeIndex(index);\n        client().admin().indices().prepareCreate(index)\n                .setSettings(settingsBuilder()\n                        .put(\"index.store.distributor\", distributor)\n                        .put(\"index.store.type\", storeType)\n                        .put(\"index.number_of_replicas\", 0)\n                        .put(\"index.number_of_shards\", 1)\n                )\n                .execute().actionGet();\n        assertThat(client().admin().cluster().prepareHealth(\"test\").setWaitForGreenStatus().execute().actionGet().isTimedOut(), equalTo(false));\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void createIndexWithoutRateLimitingStoreType(String nodeId, String index, String storeType, String distributor) {\n        try {\n            client(nodeId).admin().indices().prepareDelete(index).execute().actionGet();\n        } catch (IndexMissingException ex) {\n            // Ignore\n        }\n        client(nodeId).admin().indices().prepareCreate(index)\n                .setSettings(settingsBuilder()\n                        .put(\"index.store.distributor\", distributor)\n                        .put(\"index.store.type\", storeType)\n                        .put(\"index.store.throttle.type\", \"none\")\n                        .put(\"index.number_of_replicas\", 0)\n                        .put(\"index.number_of_shards\", 1)\n                )\n                .execute().actionGet();\n        assertThat(client(\"node1\").admin().cluster().prepareHealth(\"test\").setWaitForGreenStatus().execute().actionGet().isTimedOut(), equalTo(false));\n    }","id":54210,"modified_method":"private void createIndexWithoutRateLimitingStoreType(String index, String storeType, String distributor) {\n        wipeIndex(index);\n        client().admin().indices().prepareCreate(index)\n                .setSettings(settingsBuilder()\n                        .put(\"index.store.distributor\", distributor)\n                        .put(\"index.store.type\", storeType)\n                        .put(\"index.store.throttle.type\", \"none\")\n                        .put(\"index.number_of_replicas\", 0)\n                        .put(\"index.number_of_shards\", 1)\n                )\n                .execute().actionGet();\n        assertThat(client().admin().cluster().prepareHealth(\"test\").setWaitForGreenStatus().execute().actionGet().isTimedOut(), equalTo(false));\n    }","commit_id":"ac5120e722adb4d785ea770756259f2d072d33e5","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    @Slow\n    public void testLoadingPercolateQueriesDuringCloseAndOpen() throws Exception {\n        Settings settings = settingsBuilder()\n                .put(\"gateway.type\", \"local\").build();\n        logger.info(\"--> starting 2 nodes\");\n        startNode(\"node1\", settings);\n        startNode(\"node2\", settings);\n\n        Client client = client(\"node1\");\n        client.admin().indices().prepareDelete().execute().actionGet();\n        ensureGreen(client);\n\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(settingsBuilder().put(\"index.number_of_shards\", 2))\n                .execute().actionGet();\n        ensureGreen(client);\n\n        logger.info(\"--> Add dummy docs\");\n        client.prepareIndex(\"test\", \"type1\", \"1\").setSource(\"field1\", 0).execute().actionGet();\n        client.prepareIndex(\"test\", \"type2\", \"1\").setSource(\"field1\", \"0\").execute().actionGet();\n\n        logger.info(\"--> register a queries\");\n        for (int i = 1; i <= 100; i++) {\n            client.prepareIndex(\"test\", \"_percolator\", Integer.toString(i))\n                    .setSource(jsonBuilder().startObject()\n                            .field(\"query\", rangeQuery(\"field1\").from(0).to(i))\n                                    // The type must be set now, because two fields with the same name exist in different types.\n                                    // Setting the type to `type1`, makes sure that the range query gets parsed to a Lucene NumericRangeQuery.\n                            .field(\"type\", \"type1\")\n                            .endObject())\n                    .execute().actionGet();\n        }\n\n        logger.info(\"--> Percolate doc with field1=95\");\n        PercolateResponse response = client.preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\").field(\"field1\", 95).endObject().endObject())\n                .execute().actionGet();\n        assertThat(response.getMatches(), arrayWithSize(6));\n        assertThat(convertFromTextArray(response.getMatches(), \"test\"), arrayContainingInAnyOrder(\"95\", \"96\", \"97\", \"98\", \"99\", \"100\"));\n\n        logger.info(\"--> Close and open index to trigger percolate queries loading...\");\n        client.admin().indices().prepareClose(\"test\").execute().actionGet();\n        ensureGreen(client);\n        client.admin().indices().prepareOpen(\"test\").execute().actionGet();\n        ensureGreen(client);\n\n        logger.info(\"--> Percolate doc with field1=100\");\n        response = client.preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\").field(\"field1\", 100).endObject().endObject())\n                .execute().actionGet();\n        assertThat(response.getMatches(), arrayWithSize(1));\n        assertThat(response.getMatches()[0].getId().string(), equalTo(\"100\"));\n    }","id":54211,"modified_method":"@Test\n    @Slow\n    public void testLoadingPercolateQueriesDuringCloseAndOpen() throws Exception {\n        Settings settings = settingsBuilder()\n                .put(super.getSettings())\n                .put(\"gateway.type\", \"local\")\n                .build();\n        logger.info(\"--> Starting 2 nodes\");\n        cluster().startNode(settings);\n        cluster().startNode(settings);\n\n        client().admin().indices().prepareDelete().execute().actionGet();\n        ensureGreen();\n\n        client().admin().indices().prepareCreate(\"test\")\n                .setSettings(settingsBuilder().put(\"index.number_of_shards\", 2))\n                .execute().actionGet();\n        ensureGreen();\n\n        logger.info(\"--> Add dummy docs\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(\"field1\", 0).execute().actionGet();\n        client().prepareIndex(\"test\", \"type2\", \"1\").setSource(\"field1\", \"0\").execute().actionGet();\n\n        logger.info(\"--> register a queries\");\n        for (int i = 1; i <= 100; i++) {\n            client().prepareIndex(\"test\", \"_percolator\", Integer.toString(i))\n                    .setSource(jsonBuilder().startObject()\n                            .field(\"query\", rangeQuery(\"field1\").from(0).to(i))\n                                    // The type must be set now, because two fields with the same name exist in different types.\n                                    // Setting the type to `type1`, makes sure that the range query gets parsed to a Lucene NumericRangeQuery.\n                            .field(\"type\", \"type1\")\n                            .endObject())\n                    .execute().actionGet();\n        }\n\n        logger.info(\"--> Percolate doc with field1=95\");\n        PercolateResponse response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\").field(\"field1\", 95).endObject().endObject())\n                .execute().actionGet();\n        assertThat(response.getMatches(), arrayWithSize(6));\n        assertThat(convertFromTextArray(response.getMatches(), \"test\"), arrayContainingInAnyOrder(\"95\", \"96\", \"97\", \"98\", \"99\", \"100\"));\n\n        logger.info(\"--> Close and open index to trigger percolate queries loading...\");\n        client().admin().indices().prepareClose(\"test\").execute().actionGet();\n        ensureGreen();\n        client().admin().indices().prepareOpen(\"test\").execute().actionGet();\n        ensureGreen();\n\n        logger.info(\"--> Percolate doc with field1=100\");\n        response = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\").field(\"field1\", 100).endObject().endObject())\n                .execute().actionGet();\n        assertThat(response.getMatches(), arrayWithSize(1));\n        assertThat(response.getMatches()[0].getId().string(), equalTo(\"100\"));\n    }","commit_id":"8eab51047f0345fb59297a45618e9c4a78b61fde","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    @Slow\n    public void testRestartNodePercolator1() throws Exception {\n        logger.info(\"--> cleaning nodes\");\n        buildNode(\"node1\");\n        cleanAndCloseNodes();\n\n        logger.info(\"--> starting 1 nodes\");\n        startNode(\"node1\");\n\n        Client client = client(\"node1\");\n        client.admin().indices().prepareCreate(\"test\").setSettings(settingsBuilder().put(\"index.number_of_shards\", 1)).execute().actionGet();\n\n        logger.info(\"--> register a query\");\n        client.prepareIndex(\"test\", \"_percolator\", \"kuku\")\n                .setSource(jsonBuilder().startObject()\n                        .field(\"color\", \"blue\")\n                        .field(\"query\", termQuery(\"field1\", \"value1\"))\n                        .endObject())\n                .setRefresh(true)\n                .execute().actionGet();\n\n        PercolateResponse percolate = client.preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\")\n                        .field(\"field1\", \"value1\")\n                        .endObject().endObject())\n                .execute().actionGet();\n        assertThat(percolate.getMatches(), arrayWithSize(1));\n\n        client.close();\n        closeNode(\"node1\");\n\n        startNode(\"node1\");\n        client = client(\"node1\");\n\n        logger.info(\"Running Cluster Health (wait for the shards to startup)\");\n        ClusterHealthResponse clusterHealth = client(\"node1\").admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForActiveShards(1)).actionGet();\n        logger.info(\"Done Cluster Health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.YELLOW));\n\n        percolate = client.preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\")\n                        .field(\"field1\", \"value1\")\n                        .endObject().endObject())\n                .execute().actionGet();\n        assertThat(percolate.getMatches(), arrayWithSize(1));\n    }","id":54212,"modified_method":"@Test\n    @Slow\n    public void testRestartNodePercolator1() throws Exception {\n        Settings settings = settingsBuilder()\n                .put(super.getSettings())\n                .put(\"gateway.type\", \"local\")\n                .build();\n        cluster().startNode(settings);\n        client().admin().indices().prepareCreate(\"test\").setSettings(\n                settingsBuilder().put(\"index.number_of_shards\", 1).put()\n        ).execute().actionGet();\n\n        logger.info(\"--> register a query\");\n        client().prepareIndex(\"test\", \"_percolator\", \"kuku\")\n                .setSource(jsonBuilder().startObject()\n                        .field(\"color\", \"blue\")\n                        .field(\"query\", termQuery(\"field1\", \"value1\"))\n                        .endObject())\n                .setRefresh(true)\n                .execute().actionGet();\n\n        PercolateResponse percolate = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\")\n                        .field(\"field1\", \"value1\")\n                        .endObject().endObject())\n                .execute().actionGet();\n        assertThat(percolate.getMatches(), arrayWithSize(1));\n\n        cluster().restartAllNodes();\n\n        logger.info(\"Running Cluster Health (wait for the shards to startup)\");\n        ClusterHealthResponse clusterHealth = client().admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForActiveShards(1)).actionGet();\n        logger.info(\"Done Cluster Health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.YELLOW));\n\n        percolate = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\")\n                        .field(\"field1\", \"value1\")\n                        .endObject().endObject())\n                .execute().actionGet();\n        assertThat(percolate.getMatches(), arrayWithSize(1));\n    }","commit_id":"8eab51047f0345fb59297a45618e9c4a78b61fde","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    @Slow\n    public void testRestartNodePercolator2() throws Exception {\n        logger.info(\"--> cleaning nodes\");\n        buildNode(\"node1\");\n        cleanAndCloseNodes();\n\n        logger.info(\"--> starting 1 nodes\");\n        startNode(\"node1\");\n\n        Client client = client(\"node1\");\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(settingsBuilder().put(\"index.number_of_shards\", 1)).execute().actionGet();\n\n        logger.info(\"--> register a query\");\n        client.prepareIndex(\"test\", \"_percolator\", \"kuku\")\n                .setSource(jsonBuilder().startObject()\n                        .field(\"color\", \"blue\")\n                        .field(\"query\", termQuery(\"field1\", \"value1\"))\n                        .endObject())\n                .setRefresh(true)\n                .execute().actionGet();\n\n        assertThat(client.prepareCount().setTypes(\"_percolator\").setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n\n        PercolateResponse percolate = client.preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\")\n                        .field(\"field1\", \"value1\")\n                        .endObject().endObject())\n                .execute().actionGet();\n        assertThat(percolate.getMatches(), arrayWithSize(1));\n\n        client.close();\n        closeNode(\"node1\");\n\n        startNode(\"node1\");\n        client = client(\"node1\");\n\n        logger.info(\"Running Cluster Health (wait for the shards to startup)\");\n        ClusterHealthResponse clusterHealth = client(\"node1\").admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForActiveShards(1)).actionGet();\n        logger.info(\"Done Cluster Health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.YELLOW));\n\n        assertThat(client.prepareCount().setTypes(\"_percolator\").setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n\n        DeleteIndexResponse actionGet = client.admin().indices().prepareDelete(\"test\").execute().actionGet();\n        assertThat(actionGet.isAcknowledged(), equalTo(true));\n        client.admin().indices().prepareCreate(\"test\").setSettings(settingsBuilder().put(\"index.number_of_shards\", 1)).execute().actionGet();\n        clusterHealth = client(\"node1\").admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForActiveShards(1)).actionGet();\n        logger.info(\"Done Cluster Health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.YELLOW));\n        assertThat(client.prepareCount().setTypes(\"_percolator\").setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(0l));\n\n        percolate = client.preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\")\n                        .field(\"field1\", \"value1\")\n                        .endObject().endObject())\n                .execute().actionGet();\n        assertThat(percolate.getMatches(), emptyArray());\n\n        logger.info(\"--> register a query\");\n        client.prepareIndex(\"test\", \"_percolator\", \"kuku\")\n                .setSource(jsonBuilder().startObject()\n                        .field(\"color\", \"blue\")\n                        .field(\"query\", termQuery(\"field1\", \"value1\"))\n                        .endObject())\n                .setRefresh(true)\n                .execute().actionGet();\n\n        assertThat(client.prepareCount().setTypes(\"_percolator\").setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n\n        percolate = client.preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\")\n                        .field(\"field1\", \"value1\")\n                        .endObject().endObject())\n                .execute().actionGet();\n        assertThat(percolate.getMatches(), arrayWithSize(1));\n    }","id":54213,"modified_method":"@Test\n    @Slow\n    public void testRestartNodePercolator2() throws Exception {\n        Settings settings = settingsBuilder()\n                .put(super.getSettings())\n                .put(\"gateway.type\", \"local\")\n                .build();\n        cluster().startNode(settings);\n        client().admin().indices().prepareCreate(\"test\")\n        .setSettings(settingsBuilder().put(\"index.number_of_shards\", 1)).execute().actionGet();\n\n        logger.info(\"--> register a query\");\n        client().prepareIndex(\"test\", \"_percolator\", \"kuku\")\n                .setSource(jsonBuilder().startObject()\n                        .field(\"color\", \"blue\")\n                        .field(\"query\", termQuery(\"field1\", \"value1\"))\n                        .endObject())\n                .setRefresh(true)\n                .execute().actionGet();\n\n        assertThat(client().prepareCount().setTypes(\"_percolator\").setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n\n        PercolateResponse percolate = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\")\n                        .field(\"field1\", \"value1\")\n                        .endObject().endObject())\n                .execute().actionGet();\n        assertThat(percolate.getMatches(), arrayWithSize(1));\n\n        cluster().restartAllNodes();\n\n        logger.info(\"Running Cluster Health (wait for the shards to startup)\");\n        ClusterHealthResponse clusterHealth = client().admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForActiveShards(1)).actionGet();\n        logger.info(\"Done Cluster Health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.YELLOW));\n\n        assertThat(client().prepareCount().setTypes(\"_percolator\").setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n\n        DeleteIndexResponse actionGet = client().admin().indices().prepareDelete(\"test\").execute().actionGet();\n        assertThat(actionGet.isAcknowledged(), equalTo(true));\n        client().admin().indices().prepareCreate(\"test\").setSettings(settingsBuilder().put(\"index.number_of_shards\", 1)).execute().actionGet();\n        clusterHealth = client().admin().cluster().health(clusterHealthRequest().waitForYellowStatus().waitForActiveShards(1)).actionGet();\n        logger.info(\"Done Cluster Health, status \" + clusterHealth.getStatus());\n        assertThat(clusterHealth.isTimedOut(), equalTo(false));\n        assertThat(clusterHealth.getStatus(), equalTo(ClusterHealthStatus.YELLOW));\n        assertThat(client().prepareCount().setTypes(\"_percolator\").setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(0l));\n\n        percolate = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\")\n                        .field(\"field1\", \"value1\")\n                        .endObject().endObject())\n                .execute().actionGet();\n        assertThat(percolate.getMatches(), emptyArray());\n\n        logger.info(\"--> register a query\");\n        client().prepareIndex(\"test\", \"_percolator\", \"kuku\")\n                .setSource(jsonBuilder().startObject()\n                        .field(\"color\", \"blue\")\n                        .field(\"query\", termQuery(\"field1\", \"value1\"))\n                        .endObject())\n                .setRefresh(true)\n                .execute().actionGet();\n\n        assertThat(client().prepareCount().setTypes(\"_percolator\").setQuery(matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n\n        percolate = client().preparePercolate()\n                .setIndices(\"test\").setDocumentType(\"type1\")\n                .setSource(jsonBuilder().startObject().startObject(\"doc\")\n                        .field(\"field1\", \"value1\")\n                        .endObject().endObject())\n                .execute().actionGet();\n        assertThat(percolate.getMatches(), arrayWithSize(1));\n    }","commit_id":"8eab51047f0345fb59297a45618e9c4a78b61fde","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void percolatorRecovery(final boolean multiPercolate) throws Exception {\n        Settings settings = settingsBuilder()\n                .put(\"gateway.type\", \"none\").build();\n        logger.info(\"--> starting 3 nodes\");\n        startNode(\"node1\", settings);\n        startNode(\"node2\", settings);\n        startNode(\"node3\", settings);\n\n        final Client client = client(\"node1\");\n        client.admin().indices().prepareDelete().execute().actionGet();\n        ensureGreen(client);\n\n        client.admin().indices().prepareCreate(\"test\")\n                .setSettings(settingsBuilder()\n                        .put(\"index.number_of_shards\", 2)\n                        .put(\"index.number_of_replicas\", 2)\n                )\n                .execute().actionGet();\n        ensureGreen(client);\n\n        final int numQueries = randomIntBetween(50, 100);\n        logger.info(\"--> register a queries\");\n        for (int i = 0; i < numQueries; i++) {\n            client.prepareIndex(\"test\", \"_percolator\", Integer.toString(i))\n                    .setSource(jsonBuilder().startObject().field(\"query\", matchAllQuery()).endObject())\n                    .execute().actionGet();\n        }\n\n        client.prepareIndex(\"test\", \"type\", \"1\")\n                .setSource(jsonBuilder().startObject().field(\"field\", \"a\"))\n                .execute().actionGet();\n\n        final AtomicBoolean run = new AtomicBoolean(true);\n        final CountDownLatch done = new CountDownLatch(1);\n        final AtomicReference<Throwable> error = new AtomicReference<Throwable>();\n        Runnable r = new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    XContentBuilder doc = jsonBuilder().startObject().field(\"field\", \"a\").endObject();\n                    while (run.get()) {\n                        NodesInfoResponse nodesInfoResponse = client.admin().cluster().prepareNodesInfo()\n                                .execute().actionGet();\n                        String node2Id = null;\n                        String node3Id = null;\n                        for (NodeInfo nodeInfo : nodesInfoResponse) {\n                            if (\"node2\".equals(nodeInfo.getNode().getName())) {\n                                node2Id = nodeInfo.getNode().id();\n                            } else if (\"node3\".equals(nodeInfo.getNode().getName())) {\n                                node3Id = nodeInfo.getNode().id();\n                            }\n                        }\n\n                        String preference;\n                        if (node2Id == null && node3Id == null) {\n                            preference = \"_local\";\n                        } else if (node2Id == null || node3Id == null) {\n                            if (node2Id != null) {\n                                preference = \"_prefer_node:\" + node2Id;\n                            } else {\n                                preference = \"_prefer_node:\" + node3Id;\n                            }\n                        } else {\n                            preference = \"_prefer_node:\" + (randomBoolean() ? node2Id : node3Id);\n                        }\n\n                        if (multiPercolate) {\n                            MultiPercolateRequestBuilder builder = client\n                                    .prepareMultiPercolate();\n                            int numPercolateRequest = randomIntBetween(50, 100);\n\n                            for (int i = 0; i < numPercolateRequest; i++) {\n                                if (randomBoolean()) {\n                                    builder.add(\n                                            client.preparePercolate()\n                                                    .setPreference(preference)\n                                                    .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"1\"))\n                                                    .setIndices(\"test\").setDocumentType(\"type\")\n                                    );\n                                } else {\n                                    builder.add(\n                                            client.preparePercolate()\n                                                    .setPreference(preference)\n                                                    .setIndices(\"test\").setDocumentType(\"type\")\n                                                    .setPercolateDoc(docBuilder().setDoc(doc)));\n                                }\n                            }\n\n                            MultiPercolateResponse response = builder.execute().actionGet();\n                            assertThat(response.items().length, equalTo(numPercolateRequest));\n                            for (MultiPercolateResponse.Item item : response) {\n                                assertThat(item.isFailure(), equalTo(false));\n                                assertNoFailures(item.getResponse());\n                                assertThat(item.getResponse().getSuccessfulShards(), equalTo(item.getResponse().getTotalShards()));\n                                assertThat(item.getResponse().getCount(), equalTo((long) numQueries));\n                                assertThat(item.getResponse().getMatches().length, equalTo(numQueries));\n                            }\n                        } else {\n                            PercolateResponse response;\n                            if (randomBoolean()) {\n                                response = client.preparePercolate()\n                                        .setIndices(\"test\").setDocumentType(\"type\")\n                                        .setPercolateDoc(docBuilder().setDoc(doc))\n                                        .setPreference(preference)\n                                        .execute().actionGet();\n                            } else {\n                                response = client.preparePercolate()\n                                        .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"1\"))\n                                        .setIndices(\"test\").setDocumentType(\"type\")\n                                        .setPreference(preference)\n                                        .execute().actionGet();\n                            }\n                            assertNoFailures(response);\n                            assertThat(response.getSuccessfulShards(), equalTo(response.getTotalShards()));\n                            assertThat(response.getCount(), equalTo((long) numQueries));\n                            assertThat(response.getMatches().length, equalTo(numQueries));\n                        }\n                    }\n                } catch (Throwable t) {\n                    logger.info(\"Error in percolate thread...\", t);\n                    run.set(false);\n                    error.set(t);\n                } finally {\n                    done.countDown();\n                }\n            }\n        };\n        new Thread(r).start();\n\n        try {\n            // 1 index, 2 primaries, 2 replicas per primary\n            for (int i = 0; i < 4; i++) {\n                closeNode(\"node3\");\n                client.admin().cluster().prepareHealth(\"test\")\n                        .setWaitForEvents(Priority.LANGUID)\n                        .setTimeout(TimeValue.timeValueMinutes(2))\n                        .setWaitForYellowStatus()\n                        .setWaitForActiveShards(4) // 2 nodes, so 4 shards (2 primaries, 2 replicas)\n                        .execute().actionGet();\n                assertThat(error.get(), nullValue());\n                closeNode(\"node2\");\n                client.admin().cluster().prepareHealth(\"test\")\n                        .setWaitForEvents(Priority.LANGUID)\n                        .setTimeout(TimeValue.timeValueMinutes(2))\n                        .setWaitForYellowStatus()\n                        .setWaitForActiveShards(2) // 1 node, so 2 shards (2 primaries, 0 replicas)\n                        .execute().actionGet();\n                assertThat(error.get(), nullValue());\n                startNode(\"node3\");\n                client.admin().cluster().prepareHealth(\"test\")\n                        .setWaitForEvents(Priority.LANGUID)\n                        .setTimeout(TimeValue.timeValueMinutes(2))\n                        .setWaitForYellowStatus()\n                        .setWaitForActiveShards(4)  // 2 nodes, so 4 shards (2 primaries, 2 replicas)\n                        .execute().actionGet();\n                assertThat(error.get(), nullValue());\n                startNode(\"node2\");\n                client.admin().cluster().prepareHealth(\"test\")\n                        .setWaitForEvents(Priority.LANGUID)\n                        .setTimeout(TimeValue.timeValueMinutes(2))\n                        .setWaitForGreenStatus() // We're confirm the shard settings, so green instead of yellow\n                        .setWaitForActiveShards(6) // 3 nodes, so 6 shards (2 primaries, 4 replicas)\n                        .execute().actionGet();\n                assertThat(error.get(), nullValue());\n            }\n        } finally {\n            run.set(false);\n        }\n        done.await();\n        assertThat(error.get(), nullValue());\n    }","id":54214,"modified_method":"private void percolatorRecovery(final boolean multiPercolate) throws Exception {\n        logger.info(\"--> ensuring exactly 2 nodes\");\n        cluster().ensureAtLeastNumNodes(2);\n        cluster().ensureAtMostNumNodes(2);\n        logger.info(\"--> Adding 3th node\");\n        cluster().startNode(settingsBuilder().put(\"node.stay\", true));\n\n        client().admin().indices().prepareDelete().execute().actionGet();\n        ensureGreen();\n\n        client().admin().indices().prepareCreate(\"test\")\n                .setSettings(settingsBuilder()\n                        .put(\"index.number_of_shards\", 2)\n                        .put(\"index.number_of_replicas\", 2)\n                )\n                .execute().actionGet();\n        ensureGreen();\n\n        final Client client = cluster().client(new Predicate<Settings>() {\n            @Override\n            public boolean apply(Settings input) {\n                return input.getAsBoolean(\"node.stay\", false);\n            }\n        });\n        final int numQueries = randomIntBetween(50, 100);\n        logger.info(\"--> register a queries\");\n        for (int i = 0; i < numQueries; i++) {\n            client.prepareIndex(\"test\", \"_percolator\", Integer.toString(i))\n                    .setSource(jsonBuilder().startObject().field(\"query\", matchAllQuery()).endObject())\n                    .execute().actionGet();\n        }\n\n        client.prepareIndex(\"test\", \"type\", \"1\")\n                .setSource(jsonBuilder().startObject().field(\"field\", \"a\"))\n                .execute().actionGet();\n\n        final AtomicBoolean run = new AtomicBoolean(true);\n        final CountDownLatch done = new CountDownLatch(1);\n        final AtomicReference<Throwable> error = new AtomicReference<Throwable>();\n        Runnable r = new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    XContentBuilder doc = jsonBuilder().startObject().field(\"field\", \"a\").endObject();\n                    while (run.get()) {\n                        NodesInfoResponse nodesInfoResponse = client.admin().cluster().prepareNodesInfo()\n                                .execute().actionGet();\n                        String node2Id = null;\n                        String node3Id = null;\n                        for (NodeInfo nodeInfo : nodesInfoResponse) {\n                            if (\"node2\".equals(nodeInfo.getNode().getName())) {\n                                node2Id = nodeInfo.getNode().id();\n                            } else if (\"node3\".equals(nodeInfo.getNode().getName())) {\n                                node3Id = nodeInfo.getNode().id();\n                            }\n                        }\n\n                        String preference;\n                        if (node2Id == null && node3Id == null) {\n                            preference = \"_local\";\n                        } else if (node2Id == null || node3Id == null) {\n                            if (node2Id != null) {\n                                preference = \"_prefer_node:\" + node2Id;\n                            } else {\n                                preference = \"_prefer_node:\" + node3Id;\n                            }\n                        } else {\n                            preference = \"_prefer_node:\" + (randomBoolean() ? node2Id : node3Id);\n                        }\n\n                        if (multiPercolate) {\n                            MultiPercolateRequestBuilder builder = client\n                                    .prepareMultiPercolate();\n                            int numPercolateRequest = randomIntBetween(50, 100);\n\n                            for (int i = 0; i < numPercolateRequest; i++) {\n                                if (randomBoolean()) {\n                                    builder.add(\n                                            client.preparePercolate()\n                                                    .setPreference(preference)\n                                                    .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"1\"))\n                                                    .setIndices(\"test\").setDocumentType(\"type\")\n                                    );\n                                } else {\n                                    builder.add(\n                                            client.preparePercolate()\n                                                    .setPreference(preference)\n                                                    .setIndices(\"test\").setDocumentType(\"type\")\n                                                    .setPercolateDoc(docBuilder().setDoc(doc)));\n                                }\n                            }\n\n                            MultiPercolateResponse response = builder.execute().actionGet();\n                            assertThat(response.items().length, equalTo(numPercolateRequest));\n                            for (MultiPercolateResponse.Item item : response) {\n                                assertThat(item.isFailure(), equalTo(false));\n                                assertNoFailures(item.getResponse());\n                                assertThat(item.getResponse().getSuccessfulShards(), equalTo(item.getResponse().getTotalShards()));\n                                assertThat(item.getResponse().getCount(), equalTo((long) numQueries));\n                                assertThat(item.getResponse().getMatches().length, equalTo(numQueries));\n                            }\n                        } else {\n                            PercolateResponse response;\n                            if (randomBoolean()) {\n                                response = client.preparePercolate()\n                                        .setIndices(\"test\").setDocumentType(\"type\")\n                                        .setPercolateDoc(docBuilder().setDoc(doc))\n                                        .setPreference(preference)\n                                        .execute().actionGet();\n                            } else {\n                                response = client.preparePercolate()\n                                        .setGetRequest(Requests.getRequest(\"test\").type(\"type\").id(\"1\"))\n                                        .setIndices(\"test\").setDocumentType(\"type\")\n                                        .setPreference(preference)\n                                        .execute().actionGet();\n                            }\n                            assertNoFailures(response);\n                            assertThat(response.getSuccessfulShards(), equalTo(response.getTotalShards()));\n                            assertThat(response.getCount(), equalTo((long) numQueries));\n                            assertThat(response.getMatches().length, equalTo(numQueries));\n                        }\n                    }\n                } catch (Throwable t) {\n                    logger.info(\"Error in percolate thread...\", t);\n                    run.set(false);\n                    error.set(t);\n                } finally {\n                    done.countDown();\n                }\n            }\n        };\n        new Thread(r).start();\n\n        Predicate<Settings> nodePredicate = new Predicate<Settings>() {\n            @Override\n            public boolean apply(Settings input) {\n                return !input.getAsBoolean(\"node.stay\", false);\n            }\n        };\n        try {\n            // 1 index, 2 primaries, 2 replicas per primary\n            for (int i = 0; i < 4; i++) {\n                cluster().stopRandomNode(nodePredicate);\n                client.admin().cluster().prepareHealth(\"test\")\n                        .setWaitForEvents(Priority.LANGUID)\n                        .setTimeout(TimeValue.timeValueMinutes(2))\n                        .setWaitForYellowStatus()\n                        .setWaitForActiveShards(4) // 2 nodes, so 4 shards (2 primaries, 2 replicas)\n                        .execute().actionGet();\n                assertThat(error.get(), nullValue());\n                cluster().stopRandomNode(nodePredicate);\n                client.admin().cluster().prepareHealth(\"test\")\n                        .setWaitForEvents(Priority.LANGUID)\n                        .setTimeout(TimeValue.timeValueMinutes(2))\n                        .setWaitForYellowStatus()\n                        .setWaitForActiveShards(2) // 1 node, so 2 shards (2 primaries, 0 replicas)\n                        .execute().actionGet();\n                assertThat(error.get(), nullValue());\n                cluster().startNode();\n                client.admin().cluster().prepareHealth(\"test\")\n                        .setWaitForEvents(Priority.LANGUID)\n                        .setTimeout(TimeValue.timeValueMinutes(2))\n                        .setWaitForYellowStatus()\n                        .setWaitForActiveShards(4)  // 2 nodes, so 4 shards (2 primaries, 2 replicas)\n                        .execute().actionGet();\n                assertThat(error.get(), nullValue());\n                cluster().startNode();\n                client.admin().cluster().prepareHealth(\"test\")\n                        .setWaitForEvents(Priority.LANGUID)\n                        .setTimeout(TimeValue.timeValueMinutes(2))\n                        .setWaitForGreenStatus() // We're confirm the shard settings, so green instead of yellow\n                        .setWaitForActiveShards(6) // 3 nodes, so 6 shards (2 primaries, 4 replicas)\n                        .execute().actionGet();\n                assertThat(error.get(), nullValue());\n            }\n        } finally {\n            run.set(false);\n        }\n        done.await();\n        assertThat(error.get(), nullValue());\n    }","commit_id":"8eab51047f0345fb59297a45618e9c4a78b61fde","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void perform(@Nullable final Throwable currentFailure) {\n            Throwable lastFailure = this.lastFailure;\n            if (lastFailure == null || TransportActions.isReadOverrideException(currentFailure)) {\n                lastFailure = currentFailure;\n                this.lastFailure = currentFailure;\n            }\n            final ShardRouting shardRouting = shardIt.nextOrNull();\n            if (shardRouting == null) {\n                Throwable failure = lastFailure;\n                if (failure == null) {\n                    failure = new NoShardAvailableActionException(shardIt.shardId());\n                } else {\n                    if (logger.isDebugEnabled()) {\n                        logger.debug(\"{}: failed to execute [{}]\", failure, shardIt.shardId(), request);\n                    }\n                }\n                listener.onFailure(failure);\n                return;\n            }\n\n            if (shardRouting.currentNodeId().equals(nodes.localNodeId())) {\n                try {\n                    if (request.operationThreaded()) {\n                        request.beforeLocalFork();\n                        threadPool.executor(executor).execute(new Runnable() {\n                            @Override\n                            public void run() {\n                                try {\n                                    Response response = shardOperation(request, shardRouting.id());\n                                    listener.onResponse(response);\n                                } catch (Throwable e) {\n                                    onFailure(shardRouting, e);\n                                }\n                            }\n                        });\n                    } else {\n                        final Response response = shardOperation(request, shardRouting.id());\n                        listener.onResponse(response);\n                    }\n                } catch (Throwable e) {\n                    onFailure(shardRouting, e);\n                }\n            } else {\n                DiscoveryNode node = nodes.get(shardRouting.currentNodeId());\n                transportService.sendRequest(node, transportShardAction, new ShardSingleOperationRequest(request, shardRouting.id()), new BaseTransportResponseHandler<Response>() {\n\n                    @Override\n                    public Response newInstance() {\n                        return newResponse();\n                    }\n\n                    @Override\n                    public String executor() {\n                        return ThreadPool.Names.SAME;\n                    }\n\n                    @Override\n                    public void handleResponse(final Response response) {\n                        listener.onResponse(response);\n                    }\n\n                    @Override\n                    public void handleException(TransportException exp) {\n                        onFailure(shardRouting, exp);\n                    }\n                });\n            }\n        }","id":54215,"modified_method":"private void perform(@Nullable final Throwable currentFailure) {\n            Throwable lastFailure = this.lastFailure;\n            if (lastFailure == null || TransportActions.isReadOverrideException(currentFailure)) {\n                lastFailure = currentFailure;\n                this.lastFailure = currentFailure;\n            }\n            final ShardRouting shardRouting = shardIt.nextOrNull();\n            if (shardRouting == null) {\n                Throwable failure = lastFailure;\n                if (failure == null) {\n                    failure = new NoShardAvailableActionException(shardIt.shardId());\n                } else {\n                    if (logger.isDebugEnabled()) {\n                        logger.debug(\"{}: failed to execute [{}]\", failure, shardIt.shardId(), request);\n                    }\n                }\n                listener.onFailure(failure);\n                return;\n            }\n\n            if (shardRouting.currentNodeId().equals(nodes.localNodeId())) {\n                try {\n                    if (request.operationThreaded()) {\n                        request.beforeLocalFork();\n                        threadPool.executor(executor).execute(new Runnable() {\n                            @Override\n                            public void run() {\n                                try {\n                                    Response response = shardOperation(request, shardRouting.id());\n                                    listener.onResponse(response);\n                                } catch (Throwable e) {\n                                    onFailure(shardRouting, e);\n                                }\n                            }\n                        });\n                    } else {\n                        final Response response = shardOperation(request, shardRouting.id());\n                        listener.onResponse(response);\n                    }\n                } catch (Throwable e) {\n                    onFailure(shardRouting, e);\n                }\n            } else {\n                DiscoveryNode node = nodes.get(shardRouting.currentNodeId());\n                if (node == null) {\n                    onFailure(shardRouting, new NoShardAvailableActionException(shardIt.shardId()));\n                } else {\n                    transportService.sendRequest(node, transportShardAction, new ShardSingleOperationRequest(request, shardRouting.id()), new BaseTransportResponseHandler<Response>() {\n\n                        @Override\n                        public Response newInstance() {\n                            return newResponse();\n                        }\n\n                        @Override\n                        public String executor() {\n                            return ThreadPool.Names.SAME;\n                        }\n\n                        @Override\n                        public void handleResponse(final Response response) {\n                            listener.onResponse(response);\n                        }\n\n                        @Override\n                        public void handleException(TransportException exp) {\n                            onFailure(shardRouting, exp);\n                        }\n                    });\n                }\n            }\n        }","commit_id":"8eab51047f0345fb59297a45618e9c4a78b61fde","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public boolean hasModifierProperty(@NotNull @NonNls String modifier) {\n    final PsiElement parent = getParent();\n    if (parent instanceof GrVariableDeclaration &&\n        parent.getParent() instanceof GrTypeDefinitionBody &&\n        !hasExplicitVisibilityModifiers()) { //properties are backed by private fields\n      PsiElement pParent = parent.getParent().getParent();\n      if (!(pParent instanceof PsiClass) || !((PsiClass)pParent).isInterface()) {\n        if (modifier.equals(GrModifier.PRIVATE)) return true;\n        if (modifier.equals(GrModifier.PROTECTED)) return false;\n        if (modifier.equals(GrModifier.PUBLIC)) return false;\n      }\n      else {\n        if (modifier.equals(GrModifier.STATIC)) return true;\n        if (modifier.equals(GrModifier.FINAL)) return true;\n      }\n    }\n\n    if (hasExplicitModifier(modifier)) {\n      return true;\n    }\n\n    if (modifier.equals(GrModifier.PUBLIC)) {\n      //groovy type definitions and methods are public by default\n      return !hasExplicitModifier(GrModifier.PRIVATE) && !hasExplicitModifier(GrModifier.PROTECTED);\n    }\n\n    if (parent instanceof GrTypeDefinition && modifier.equals(GrModifier.ABSTRACT)) {\n      return ((GrTypeDefinition)parent).isInterface();\n    }\n\n    if (!(parent instanceof GrTypeDefinition)) {\n      //check how type def annotations influence on members annotation\n      ASTNode classDefNode = TreeUtil.findParent(getNode(), GroovyElementTypes.CLASS_DEFINITION);\n      if (classDefNode != null) {\n        PsiElement psiClass = classDefNode.getPsi();\n\n        assert psiClass instanceof GrTypeDefinition;\n        GrTypeDefinition typeDefinition = (GrTypeDefinition)psiClass;\n\n        PsiModifierList psiClassModifierList = typeDefinition.getModifierList();\n\n        if (psiClassModifierList != null) {\n          PsiAnnotation[] psiClassAnnotations = psiClassModifierList.getAnnotations();\n\n          for (PsiAnnotation psiClassAnnotation : psiClassAnnotations) {\n            assert psiClassAnnotation instanceof GrAnnotation;\n\n            if (GroovyImmutableAnnotationInspection.IMMUTABLE.equals(psiClassAnnotation.getQualifiedName())) {\n              if (modifier.equals(GrModifier.FINAL)) return true;\n              if (modifier.equals(GrModifier.PRIVATE)) return true;\n            }\n          }\n        }\n      }\n    }\n\n    return false;\n  }","id":54216,"modified_method":"public boolean hasModifierProperty(@NotNull @NonNls String modifier) {\n    final PsiElement parent = getParent();\n    if (parent instanceof GrVariableDeclaration &&\n        parent.getParent() instanceof GrTypeDefinitionBody) {\n      PsiElement pParent = parent.getParent().getParent();\n      if (!hasExplicitVisibilityModifiers()) { //properties are backed by private fields\n        if (!(pParent instanceof PsiClass) || !((PsiClass)pParent).isInterface()) {\n          if (modifier.equals(GrModifier.PRIVATE)) return true;\n          if (modifier.equals(GrModifier.PROTECTED)) return false;\n          if (modifier.equals(GrModifier.PUBLIC)) return false;\n        }\n        else {\n          if (modifier.equals(GrModifier.STATIC)) return true;\n          if (modifier.equals(GrModifier.FINAL)) return true;\n        }\n      }\n      if (pParent instanceof GrTypeDefinition) {\n        PsiModifierList modifierList = ((GrTypeDefinition)pParent).getModifierList();\n        if (modifierList != null && modifierList.findAnnotation(GroovyImmutableAnnotationInspection.IMMUTABLE) != null) {\n          if (modifier.equals(GrModifier.FINAL)) return true;\n        }\n      }\n    }\n\n    if (hasExplicitModifier(modifier)) {\n      return true;\n    }\n\n    if (modifier.equals(GrModifier.PUBLIC)) {\n      //groovy type definitions and methods are public by default\n      return !hasExplicitModifier(GrModifier.PRIVATE) && !hasExplicitModifier(GrModifier.PROTECTED);\n    }\n\n    if (parent instanceof GrTypeDefinition && modifier.equals(GrModifier.ABSTRACT)) {\n      return ((GrTypeDefinition)parent).isInterface();\n    }\n\n    return false;\n  }","commit_id":"d87de64d015537a31214c98c5a8c5e34f61f4650","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void registerExtensions(final String prefix, final IdeaPlugin plugin, final DomExtensionsRegistrar registrar,\n                                         final PsiManager psiManager) {\n    final String pluginId = plugin.getPluginId();\n    for (ExtensionPoints points : plugin.getExtensionPoints()) {\n      for (ExtensionPoint point : points.getExtensionPoints()) {\n        registerExtensionPoint(registrar, point, psiManager, prefix, pluginId);\n      }\n    }\n  }","id":54217,"modified_method":"private static void registerExtensions(final String prefix, final IdeaPlugin plugin, final DomExtensionsRegistrar registrar,\n                                         final PsiManager psiManager) {\n    final String pluginId = StringUtil.notNullize(plugin.getPluginId(), \"com.intellij\");\n    for (ExtensionPoints points : plugin.getExtensionPoints()) {\n      for (ExtensionPoint point : points.getExtensionPoints()) {\n        registerExtensionPoint(registrar, point, psiManager, prefix, pluginId);\n      }\n    }\n  }","commit_id":"7a5ed76cc074e7c69efccd1f208f634b30ccb17f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void registerExtensions(@NotNull final Extensions extensions, @NotNull final DomExtensionsRegistrar registrar) {\n    final XmlElement xmlElement = extensions.getXmlElement();\n    if (xmlElement == null) return;\n    final PsiManager psiManager = xmlElement.getManager();\n\n    IdeaPlugin ideaPlugin = extensions.getParentOfType(IdeaPlugin.class, true);\n\n    if (ideaPlugin == null) return;\n\n    String prefix = extensions.getDefaultExtensionNs().getStringValue();\n    if (prefix == null) prefix = extensions.getXmlns().getStringValue();\n    if (prefix != null) {\n      prefix += \".\";\n    } else {\n      prefix = \"\";\n    }\n\n    registerExtensions(prefix, ideaPlugin, registrar, psiManager);\n    final Collection<String> dependencies = getDependencies(ideaPlugin);\n    for (IdeaPlugin plugin : IdeaPluginConverter.collectAllVisiblePlugins(DomUtil.getFile(extensions))) {\n      final String value = plugin.getPluginId();\n      if (value != null && dependencies.contains(value)) {\n        registerExtensions(prefix, plugin, registrar, psiManager);\n      }\n    }\n\n  }","id":54218,"modified_method":"public void registerExtensions(@NotNull final Extensions extensions, @NotNull final DomExtensionsRegistrar registrar) {\n    final XmlElement xmlElement = extensions.getXmlElement();\n    if (xmlElement == null) return;\n    final PsiManager psiManager = xmlElement.getManager();\n\n    IdeaPlugin ideaPlugin = extensions.getParentOfType(IdeaPlugin.class, true);\n\n    if (ideaPlugin == null) return;\n\n    String prefix = extensions.getDefaultExtensionNs().getStringValue();\n    if (prefix == null) prefix = extensions.getXmlns().getStringValue();\n    if (prefix != null) {\n      prefix += \".\";\n    } else {\n      prefix = \"\";\n    }\n\n    registerExtensions(prefix, ideaPlugin, registrar, psiManager);\n    final Collection<String> dependencies = getDependencies(ideaPlugin);\n    for (IdeaPlugin plugin : IdeaPluginConverter.collectAllVisiblePlugins(DomUtil.getFile(extensions))) {\n      final String value = plugin.getPluginId();\n      // value == null for \"included\" platform plugins like DomPlugin.xml, XmlPlugin.xml, etc.\n      if (value == null || dependencies.contains(value)) {\n        registerExtensions(prefix, plugin, registrar, psiManager);\n      }\n    }\n\n  }","commit_id":"7a5ed76cc074e7c69efccd1f208f634b30ccb17f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void registerField(final DomExtensionsRegistrar registrar, @NotNull final PsiField field) {\n    final PsiAnnotation[] annotations = field.getModifierList().getAnnotations();\n    final PsiConstantEvaluationHelper evalHelper = JavaPsiFacade.getInstance(field.getProject()).getConstantEvaluationHelper();\n    for (PsiAnnotation annotation : annotations) {\n      final String qName = annotation.getQualifiedName();\n      if (qName != null) {\n        if (qName.equals(Attribute.class.getName())) {\n          final PsiAnnotationMemberValue attributeName = annotation.findAttributeValue(\"value\");\n          if (attributeName != null && attributeName instanceof PsiExpression) {\n            final Class<String> type = String.class;\n            PsiExpression expression = (PsiExpression)attributeName;\n            final Object evaluatedExpression = evalHelper.computeConstantExpression(expression, false);\n            if (evaluatedExpression != null) {\n              registrar.registerGenericAttributeValueChildExtension(new XmlName(evaluatedExpression.toString()), type);\n            }\n          }\n        } else if (qName.equals(Tag.class.getName())) {\n          final PsiAnnotationMemberValue attributeName = annotation.findAttributeValue(\"value\");\n          if (attributeName != null && attributeName instanceof PsiExpression) {\n            PsiExpression expression = (PsiExpression)attributeName;\n            final Object evaluatedExpression = evalHelper.computeConstantExpression(expression, false);\n            if (evaluatedExpression != null) {\n              // I guess this actually needs something like registrar.registerGenericTagValueChildExtension...\n              registrar.registerFixedNumberChildExtension(new XmlName(evaluatedExpression.toString()), SimpleTagValue.class);\n            }\n          }\n        }\n      }\n    }\n  }","id":54219,"modified_method":"private static void registerField(final DomExtensionsRegistrar registrar, @NotNull final PsiField field) {\n    final PsiModifierList modifierList = field.getModifierList();\n    if (modifierList == null) return;\n    final PsiConstantEvaluationHelper evalHelper = JavaPsiFacade.getInstance(field.getProject()).getConstantEvaluationHelper();\n    final PsiAnnotation attrAnno = modifierList.findAnnotation(Attribute.class.getName());\n    if (attrAnno != null) {\n      final PsiAnnotationMemberValue attributeName = attrAnno.findAttributeValue(\"value\");\n      if (attributeName != null && attributeName instanceof PsiExpression) {\n        final Class<String> type = String.class;\n        PsiExpression expression = (PsiExpression)attributeName;\n        final Object evaluatedExpression = evalHelper.computeConstantExpression(expression, false);\n        if (evaluatedExpression != null) {\n          registrar.registerGenericAttributeValueChildExtension(new XmlName(evaluatedExpression.toString()), type);\n        }\n      }\n      return;\n    }\n    final PsiAnnotation tagAnno = modifierList.findAnnotation(Tag.class.getName());\n    final PsiAnnotation propAnno = modifierList.findAnnotation(Property.class.getName());\n    final PsiAnnotation absColAnno = modifierList.findAnnotation(AbstractCollection.class.getName());\n    //final PsiAnnotation colAnno = modifierList.findAnnotation(Collection.class.getName()); // todo\n    final String tagName = tagAnno != null? getStringAttribute(tagAnno, \"value\", evalHelper) :\n                           propAnno != null && getBooleanAttribute(propAnno, \"surroundWithTag\", evalHelper)? Constants.OPTION : null;\n    if (tagName != null) {\n      if (absColAnno == null) {\n        registrar.registerFixedNumberChildExtension(new XmlName(tagName), SimpleTagValue.class);\n      }\n      else {\n        registrar.registerFixedNumberChildExtension(new XmlName(tagName), DomElement.class).addExtender(new DomExtender() {\n          @Override\n          public void registerExtensions(@NotNull DomElement domElement, @NotNull DomExtensionsRegistrar registrar) {\n            registerCollectionBinding(field.getType(), registrar, absColAnno, evalHelper);\n          }\n        });\n      }\n    }\n    else if (absColAnno != null) {\n      registerCollectionBinding(field.getType(), registrar, absColAnno, evalHelper);\n    }\n  }","commit_id":"7a5ed76cc074e7c69efccd1f208f634b30ccb17f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public IdeaPlugin fromString(@Nullable @NonNls final String s, final ConvertContext context) {\n    for (IdeaPlugin ideaPlugin : getVariants(context)) {\n      final String otherId = ideaPlugin.getPluginId();\n      if (otherId == null) continue;\n      if (otherId.equals(s)) return ideaPlugin;\n    }\n    return null;\n  }","id":54220,"modified_method":"public IdeaPlugin fromString(@Nullable @NonNls final String s, final ConvertContext context) {\n    for (IdeaPlugin ideaPlugin : getVariants(context)) {\n      final String otherId = ideaPlugin.getPluginId();\n      if (otherId == null) continue;\n      if (otherId.equals(s)) return ideaPlugin;\n      for (PluginModule module : ideaPlugin.getModules()) {\n        final String moduleName = module.getValue().getValue();\n        if (moduleName != null && moduleName.equals(s)) return ideaPlugin;\n      }\n    }\n    return null;\n  }","commit_id":"7a5ed76cc074e7c69efccd1f208f634b30ccb17f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  public Set<String> getAdditionalVariants(@NotNull final ConvertContext context) {\n    return PLATFORM_MODULES;\n  }","id":54221,"modified_method":"@NotNull\n  @Override\n  public Set<String> getAdditionalVariants(@NotNull final ConvertContext context) {\n    final THashSet<String> result = new THashSet<String>();\n    for (IdeaPlugin ideaPlugin : getVariants(context)) {\n      for (PluginModule module : ideaPlugin.getModules()) {\n        ContainerUtil.addIfNotNull(module.getValue().getValue(), result);\n      }\n    }\n    return result;\n  }","commit_id":"7a5ed76cc074e7c69efccd1f208f634b30ccb17f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testDependsHighlighting() throws Throwable {\n    final String root = \"idea_core\";\n    addPluginXml(root, \"<idea-plugin>\\n\" +\n                       \"    <id>com.intellij<\/id>\\n\" +\n                       \"<\/idea-plugin>\");\n    addPluginXml(\"custom\", \"<idea-plugin>\\n\" +\n                           \"    <id>com.intellij.custom<\/id>\\n\" +\n                           \"<\/idea-plugin>\");\n\n    myFixture.configureFromExistingVirtualFile(myFixture.copyFileToProject(getTestName(false) + \".xml\", \"META-INF/plugin.xml\"));\n    myFixture.checkHighlighting(false, false, false);\n  }","id":54222,"modified_method":"public void testDependsHighlighting() throws Throwable {\n    final String root = \"idea_core\";\n    addPluginXml(root, \"<idea-plugin>\\n\" +\n                       \"    <id>com.intellij<\/id>\\n\" +\n                       \"    <module value=\\\"com.intellij.modules.vcs\\\"/>\\n\" +\n                       \"<\/idea-plugin>\");\n    addPluginXml(\"custom\", \"<idea-plugin>\\n\" +\n                           \"    <id>com.intellij.custom<\/id>\\n\" +\n                           \"<\/idea-plugin>\");\n\n    myFixture.configureFromExistingVirtualFile(myFixture.copyFileToProject(getTestName(false) + \".xml\", \"META-INF/plugin.xml\"));\n    myFixture.checkHighlighting(false, false, false);\n  }","commit_id":"7a5ed76cc074e7c69efccd1f208f634b30ccb17f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static SNode call_getConcreteType_8008512149545161843(SNode thisNode, SNode typeVariableReference, SNode coercedClt, SNode methodClassifier) {\n    List<SNode> parameters = SLinkOperations.getTargets(coercedClt, \"parameter\", true);\n    if (ListSequence.fromList(parameters).isEmpty()) {\n      return _quotation_createNode_fq0410_a0a1a2();\n    }\n    SNode concreteType;\n    if (SNodeOperations.getParent(SLinkOperations.getTarget(typeVariableReference, \"typeVariableDeclaration\", false)) == methodClassifier) {\n      concreteType = SNodeOperations.copyNode(ListSequence.fromList(parameters).getElement(SNodeOperations.getIndexInParent(SLinkOperations.getTarget(typeVariableReference, \"typeVariableDeclaration\", false))));\n    } else {\n      concreteType = _quotation_createNode_fq0410_a0a0a3a2();\n    }\n    return concreteType;\n  }","id":54223,"modified_method":"public static SNode call_getConcreteType_8008512149545161843(SNode thisNode, SNode typeVariableReference, SNode coercedClt, SNode methodClassifier) {\n    List<SNode> parameters = SLinkOperations.getTargets(coercedClt, \"parameter\", true);\n    if (ListSequence.fromList(parameters).isEmpty()) {\n      return _quotation_createNode_fq0410_a0a1a2();\n    }\n    SNode concreteType;\n    int index = SNodeOperations.getIndexInParent(SLinkOperations.getTarget(typeVariableReference, \"typeVariableDeclaration\", false));\n    if (SNodeOperations.getParent(SLinkOperations.getTarget(typeVariableReference, \"typeVariableDeclaration\", false)) == methodClassifier && ListSequence.fromList(parameters).count() > index) {\n      concreteType = SNodeOperations.copyNode(ListSequence.fromList(parameters).getElement(index));\n    } else {\n      concreteType = _quotation_createNode_fq0410_a0a0a4a2();\n    }\n    return concreteType;\n  }","commit_id":"0f1513055f0e98362db28071d5c834137aeafcbc","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_fq0410_a0a0a3a2() {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_1 = null;\n    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_1.setReference(\"classifier\", SReference.create(\"classifier\", quotedNode_1, facade.createModelReference(\"f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)\"), facade.createNodeId(\"~Object\")));\n    return quotedNode_1;\n  }","id":54224,"modified_method":"private static SNode _quotation_createNode_fq0410_a0a0a4a2() {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_1 = null;\n    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_1.setReference(\"classifier\", SReference.create(\"classifier\", quotedNode_1, facade.createModelReference(\"f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)\"), facade.createNodeId(\"~Object\")));\n    return quotedNode_1;\n  }","commit_id":"0f1513055f0e98362db28071d5c834137aeafcbc","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode getConcreteClassifierType(SNode typeWithVars, SNode classifierSubtype) {\n    SNode result = SNodeOperations.copyNode(typeWithVars);\n    List<SNode> varRefs = SNodeOperations.getDescendants(result, \"jetbrains.mps.baseLanguage.structure.TypeVariableReference\", false, new String[]{});\n    List<SNode> params = ListSequence.fromList(SLinkOperations.getTargets(classifierSubtype, \"parameter\", true)).toListSequence();\n    if ((int) ListSequence.fromList(params).count() == (int) ListSequence.fromList(varRefs).count()) {\n      for (SNode varRef : varRefs) {\n        SNodeOperations.replaceWithAnother(varRef, SNodeOperations.copyNode(ListSequence.fromList(params).getElement(SNodeOperations.getIndexInParent(SLinkOperations.getTarget(varRef, \"typeVariableDeclaration\", false)))));\n      }\n    } else {\n      for (SNode varRef : varRefs) {\n        SNodeOperations.replaceWithAnother(varRef, TypeVariableDeclaration_Behavior.call_getConcreteUpperBound_4346214032091509920(SLinkOperations.getTarget(varRef, \"typeVariableDeclaration\", false)));\n      }\n    }\n    return result;\n  }","id":54225,"modified_method":"public static SNode getConcreteClassifierType(SNode typeWithVars, SNode classifierSubtype) {\n    SNode result = SNodeOperations.copyNode(typeWithVars);\n    List<SNode> varRefs = SNodeOperations.getDescendants(result, \"jetbrains.mps.baseLanguage.structure.TypeVariableReference\", false, new String[]{});\n    List<SNode> params = ListSequence.fromList(SLinkOperations.getTargets(classifierSubtype, \"parameter\", true)).toListSequence();\n    for (SNode varRef : varRefs) {\n      int index = SNodeOperations.getIndexInParent(SLinkOperations.getTarget(varRef, \"typeVariableDeclaration\", false));\n      if (index < ListSequence.fromList(params).count()) {\n        SNodeOperations.replaceWithAnother(varRef, SNodeOperations.copyNode(ListSequence.fromList(params).getElement(index)));\n      } else {\n        SNodeOperations.replaceWithAnother(varRef, TypeVariableDeclaration_Behavior.call_getConcreteUpperBound_4346214032091509920(SLinkOperations.getTarget(varRef, \"typeVariableDeclaration\", false)));\n      }\n    }\n    return result;\n  }","commit_id":"ead7378178c666c40b7b9dfa60ff2ea54cb8532d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode processMethodToImplement(SNode enclosingClassifier, SNode method) {\n    SNode declaringClassifier = SNodeOperations.getAncestor(method, \"jetbrains.mps.baseLanguage.structure.Classifier\", false, false);\n    SNode result = SNodeOperations.copyNode(method);\n    Set<SNode> initialClassifierTypes = SetSequence.fromSet(new HashSet<SNode>());\n    if (SNodeOperations.isInstanceOf(enclosingClassifier, \"jetbrains.mps.baseLanguage.structure.ClassConcept\")) {\n      SNode classConcept = SNodeOperations.cast(enclosingClassifier, \"jetbrains.mps.baseLanguage.structure.ClassConcept\");\n      SNode superclass = SLinkOperations.getTarget(classConcept, \"superclass\", true);\n      if ((superclass != null)) {\n        SetSequence.fromSet(initialClassifierTypes).addElement(superclass);\n      }\n      for (SNode intfc : SLinkOperations.getTargets(classConcept, \"implementedInterface\", true)) {\n        SetSequence.fromSet(initialClassifierTypes).addElement(intfc);\n      }\n    }\n    if (SNodeOperations.isInstanceOf(enclosingClassifier, \"jetbrains.mps.baseLanguage.structure.Interface\")) {\n      SNode interfaceConcept = SNodeOperations.cast(enclosingClassifier, \"jetbrains.mps.baseLanguage.structure.Interface\");\n      for (SNode intfc : SLinkOperations.getTargets(interfaceConcept, \"extendedInterface\", true)) {\n        SetSequence.fromSet(initialClassifierTypes).addElement(intfc);\n      }\n    }\n    SNode concreteSuperClassifierType = getConcreteSuperClassifierType(initialClassifierTypes, declaringClassifier);\n    Set<SNode> types = SetSequence.fromSet(new HashSet<SNode>());\n    SetSequence.fromSet(types).addElement(SLinkOperations.getTarget(result, \"returnType\", true));\n    for (SNode param : SLinkOperations.getTargets(result, \"parameter\", true)) {\n      SetSequence.fromSet(types).addElement(SLinkOperations.getTarget(param, \"type\", true));\n    }\n    List<SNode> params = SLinkOperations.getTargets(concreteSuperClassifierType, \"parameter\", true);\n    for (SNode typeToModify : types) {\n      for (SNode varRef : SNodeOperations.getDescendants(typeToModify, \"jetbrains.mps.baseLanguage.structure.TypeVariableReference\", true, new String[]{})) {\n        // maybe a var from method\n        SNode typeVariableDeclaration = SLinkOperations.getTarget(varRef, \"typeVariableDeclaration\", false);\n        if (SNodeOperations.getParent(typeVariableDeclaration) != result) {\n          SNodeOperations.replaceWithAnother(varRef, SNodeOperations.copyNode(ListSequence.fromList(params).getElement(SNodeOperations.getIndexInParent(typeVariableDeclaration))));\n        }\n      }\n    }\n    return result;\n  }","id":54226,"modified_method":"public static SNode processMethodToImplement(SNode enclosingClassifier, SNode method) {\n    SNode declaringClassifier = SNodeOperations.getAncestor(method, \"jetbrains.mps.baseLanguage.structure.Classifier\", false, false);\n    SNode result = SNodeOperations.copyNode(method);\n    Set<SNode> initialClassifierTypes = SetSequence.fromSet(new HashSet<SNode>());\n    if (SNodeOperations.isInstanceOf(enclosingClassifier, \"jetbrains.mps.baseLanguage.structure.ClassConcept\")) {\n      SNode classConcept = SNodeOperations.cast(enclosingClassifier, \"jetbrains.mps.baseLanguage.structure.ClassConcept\");\n      SNode superclass = SLinkOperations.getTarget(classConcept, \"superclass\", true);\n      if ((superclass != null)) {\n        SetSequence.fromSet(initialClassifierTypes).addElement(superclass);\n      }\n      for (SNode intfc : SLinkOperations.getTargets(classConcept, \"implementedInterface\", true)) {\n        SetSequence.fromSet(initialClassifierTypes).addElement(intfc);\n      }\n    }\n    if (SNodeOperations.isInstanceOf(enclosingClassifier, \"jetbrains.mps.baseLanguage.structure.Interface\")) {\n      SNode interfaceConcept = SNodeOperations.cast(enclosingClassifier, \"jetbrains.mps.baseLanguage.structure.Interface\");\n      for (SNode intfc : SLinkOperations.getTargets(interfaceConcept, \"extendedInterface\", true)) {\n        SetSequence.fromSet(initialClassifierTypes).addElement(intfc);\n      }\n    }\n    SNode concreteSuperClassifierType = getConcreteSuperClassifierType(initialClassifierTypes, declaringClassifier);\n    Set<SNode> types = SetSequence.fromSet(new HashSet<SNode>());\n    SetSequence.fromSet(types).addElement(SLinkOperations.getTarget(result, \"returnType\", true));\n    for (SNode param : SLinkOperations.getTargets(result, \"parameter\", true)) {\n      SetSequence.fromSet(types).addElement(SLinkOperations.getTarget(param, \"type\", true));\n    }\n    List<SNode> params = SLinkOperations.getTargets(concreteSuperClassifierType, \"parameter\", true);\n    for (SNode typeToModify : types) {\n      for (SNode varRef : SNodeOperations.getDescendants(typeToModify, \"jetbrains.mps.baseLanguage.structure.TypeVariableReference\", true, new String[]{})) {\n        // maybe a var from method\n        SNode typeVariableDeclaration = SLinkOperations.getTarget(varRef, \"typeVariableDeclaration\", false);\n        if (SNodeOperations.getParent(typeVariableDeclaration) != result) {\n          int index = SNodeOperations.getIndexInParent(typeVariableDeclaration);\n          if (ListSequence.fromList(params).count() > index) {\n            SNodeOperations.replaceWithAnother(varRef, SNodeOperations.copyNode(ListSequence.fromList(params).getElement(index)));\n          } else {\n            SNodeOperations.replaceWithAnother(varRef, new _Quotations.QuotationClass_118().createNode());\n          }\n        }\n      }\n    }\n    return result;\n  }","commit_id":"81652b0fe73cd0109baf66ea60e84bdefc7e2e16","url":"https://github.com/JetBrains/MPS"},{"original_method":"@InferenceMethod\n  public static void inference_matchConcreteTypesWithTypeVariables(final TypeCheckingContext typeCheckingContext, SNode genericClassifier, SNode instanceType, Map<SNode, List<SNode>> mmap) {\n    if ((genericClassifier != null) && mmap != null && !(MapSequence.fromMap(mmap).isEmpty())) {\n      List<SNode> params = ListSequence.fromList(new ArrayList<SNode>());\n      for (SNode tvd : SLinkOperations.getTargets(genericClassifier, \"typeVariableDeclaration\", true)) {\n        List<SNode> nodes = MapSequence.fromMap(mmap).get(tvd);\n        final SNode p_typevar_1228174472023 = typeCheckingContext.createNewRuntimeTypesVariable();\n        if (nodes != null) {\n          SNode tvar = ListSequence.fromList(nodes).first();\n          if (TRACE_METHOD_TYPES) {\n            System.out.println(\"-2- \" + BaseConcept_Behavior.call_getPresentation_1213877396640(SNodeOperations.cast(tvar, \"jetbrains.mps.lang.core.structure.BaseConcept\")) + \" :==: \" + BaseConcept_Behavior.call_getPresentation_1213877396640(SNodeOperations.cast(ListSequence.fromList(nodes).first(), \"jetbrains.mps.lang.core.structure.BaseConcept\")));\n          }\n          {\n            SNode _nodeToCheck_1029348928467 = null;\n            BaseIntentionProvider intentionProvider = null;\n            typeCheckingContext.createEquation((SNode)tvar, (SNode)typeCheckingContext.getEquationManager().getRepresentator(p_typevar_1228174472023), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"1228174300650\", intentionProvider);\n          }\n        }\n        ListSequence.fromList(params).addElement(typeCheckingContext.getEquationManager().getRepresentator(p_typevar_1228174472023));\n      }\n      {\n        SNode _nodeToCheck_1029348928467 = null;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createLessThanInequation((SNode)instanceType, (SNode)new _Quotations.QuotationClass_123().createNode(params, genericClassifier, typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"7790104442347402833\", false, 0, intentionProvider);\n      }\n    }\n  }","id":54227,"modified_method":"@InferenceMethod\n  public static void inference_matchConcreteTypesWithTypeVariables(final TypeCheckingContext typeCheckingContext, SNode genericClassifier, SNode instanceType, Map<SNode, List<SNode>> mmap) {\n    if ((genericClassifier != null) && mmap != null && !(MapSequence.fromMap(mmap).isEmpty())) {\n      List<SNode> params = ListSequence.fromList(new ArrayList<SNode>());\n      for (SNode tvd : SLinkOperations.getTargets(genericClassifier, \"typeVariableDeclaration\", true)) {\n        List<SNode> nodes = MapSequence.fromMap(mmap).get(tvd);\n        final SNode p_typevar_1228174472023 = typeCheckingContext.createNewRuntimeTypesVariable();\n        if (nodes != null) {\n          SNode tvar = ListSequence.fromList(nodes).first();\n          if (TRACE_METHOD_TYPES) {\n            System.out.println(\"-2- \" + BaseConcept_Behavior.call_getPresentation_1213877396640(SNodeOperations.cast(tvar, \"jetbrains.mps.lang.core.structure.BaseConcept\")) + \" :==: \" + BaseConcept_Behavior.call_getPresentation_1213877396640(SNodeOperations.cast(ListSequence.fromList(nodes).first(), \"jetbrains.mps.lang.core.structure.BaseConcept\")));\n          }\n          {\n            SNode _nodeToCheck_1029348928467 = null;\n            BaseIntentionProvider intentionProvider = null;\n            typeCheckingContext.createEquation((SNode)tvar, (SNode)typeCheckingContext.getEquationManager().getRepresentator(p_typevar_1228174472023), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"1228174300650\", intentionProvider);\n          }\n        }\n        ListSequence.fromList(params).addElement(typeCheckingContext.getEquationManager().getRepresentator(p_typevar_1228174472023));\n      }\n      {\n        SNode _nodeToCheck_1029348928467 = null;\n        BaseIntentionProvider intentionProvider = null;\n        typeCheckingContext.createLessThanInequation((SNode)instanceType, (SNode)new _Quotations.QuotationClass_124().createNode(params, genericClassifier, typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"7790104442347402833\", false, 0, intentionProvider);\n      }\n    }\n  }","commit_id":"81652b0fe73cd0109baf66ea60e84bdefc7e2e16","url":"https://github.com/JetBrains/MPS"},{"original_method":"public TypesystemDescriptor() {\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_andExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BaseAssignmentExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_Switch_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_TernaryOperator_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_BooleanConst_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ArrayCreatorWithInitializer_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ArrayAccess_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_CastExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_equalsExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_notEqualsExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_thisExpr_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ForeachStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BaseVariableDeclaration_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_VarRef_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_WhileStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_StringLiteral_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ThrowStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_CatchClause_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_GenericNewExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_NullLiteral_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_BaseMethodDeclaration_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ReturnStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_IfStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ClassifierClassExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_AssertStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_NotExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ParenthesizedExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_OrExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_EnumConstantDeclaration_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_EnumConstantReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_InstanceOfExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_IntegerLiteral_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_FloatingPointConstant_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_PlusExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_RemExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_MinusExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_DivExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_MulExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ClosureParameterReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ConceptFunctionParameter_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_DoWhileStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ConceptFunction_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ArrayLiteral_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_AnnotationInstanceExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_AnnotationInstanceValue_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_AnonymousClass_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_AnonymousClassCreator_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_DotExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_FieldReferenceOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new check_BreakStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new check_ContinueStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CharConstant_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_PropertyReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_Property_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ValueParameter_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_InstanceMethodCallOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ElsifClause_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ArrayLengthOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ArrayCreator_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_IMethodCall_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ClassCreator_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_IOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BinaryBitwiseOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_EnumValuesExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_EnumValueOfExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_NPEEqualsExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_NPENotEqualsExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BaseStringOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_StringBooleanOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_SubstringExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TrimOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BitwiseNotExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TupleExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TupleMemberAccessOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_VarVariableReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_VarVariableDeclaration_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BinaryCompareOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_AbstractUnaryNumberOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_LongLiteral_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_FloatingPointFloatConstant_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_UnaryMinus_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_AsExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_VariableDeclaration_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BaseVariableReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ClassifierType_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_BaseMethodDeclaration_UnreachableStatements_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ConceptFunctionParameter_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ThisExpression_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ConceptFunction_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_InstanceInitializer_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new checkThrowsOfMethodIsCaught_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new checkThrowedByThrowIsCaught_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_VariableArityType_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_parametersCount_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_StringLiteral_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new typeof_ClassConcept_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_StaticInitializer_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_StringTypeClassifierType_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_AntiquotationContents_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_AbstractMethodsInClass_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_LocalStaticMethodCall_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new NonFinalVariablesInAnonymousClass_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ExpressionStatement_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new FieldIsNeverUsed_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new NonFinalParametersInAnonymousClass_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_EnumConstantHasConstructorDeclaration_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ConstructorInvocationStatementHasConstructor_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_StaticMethodScope_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new checkAbstractClassCreators_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_HasSuperConstructorCall_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new voidArraysAreIllegal_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new CheckBianryOpeartionPriority_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ThisExpression_ClassConceptSpecified_InGenerator_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_CorrectScope_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_NonStaticInnerClassCreation_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_InnerClassesCantHaveStaticInnerClasses_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new CheckExcessTypeCasts_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_DuplicateMethods_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ClassDoesNotExtendFinalClass_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ForeachWithErasure_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_DuplicatedConstructors_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new checkUnnecessaryInstanceof_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_AnonymousClassHasConstructorDeclaration_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_AnonymousClassHasArgumentsInGoodRole_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new subtyping_classifier_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new boolean_extends_Boolean_1_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new Boolean_extends_boolean_2_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new Boolean_extends_primitive_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new byte_extends_short_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new short_extends_int_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new int_extends_long_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new char_extends_int_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new PrimitiveSubtyping_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new long_extends_integral_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new long_extends_float_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new float_extends_double_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new double_extends_floatingPoint_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new subtyping_arrayType_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new char_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new byte_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new double_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new int_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new float_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new long_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new short_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new char_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new double_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new byte_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new float_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new int_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new long_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new short_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new ObjectArraySupertypes_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new PrimitiveArraySupertypes_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new anonymousClassExtendsItsClassifier_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new supertypes_of_typeVariableReference_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new wildCard_is_Object_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new java_lang_String_extends_string_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new string_extends_java_lang_String_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new Class_Void_weak_supertypeof_void_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      ComparisonRule_Runtime comparisonRule = new interfaces_are_comparable_ComparisonRule();\n      this.myComparisonRules.add(comparisonRule);\n    }\n    {\n      ComparisonRule_Runtime comparisonRule = new any_type_comparable_to_wildcard_type_ComparisonRule();\n      this.myComparisonRules.add(comparisonRule);\n    }\n    {\n      ComparisonRule_Runtime comparisonRule = new any_type_comparable_with_nulltype_ComparisonRule();\n      this.myComparisonRules.add(comparisonRule);\n    }\n    {\n      InequationReplacementRule_Runtime eliminationRule = new any_type_subtypeof_wildcard_type_InequationReplacementRule();\n      this.myInequationReplacementRules.add(eliminationRule);\n    }\n    {\n      InequationReplacementRule_Runtime eliminationRule = new any_type_supertypeof_nulltype_InequationReplacementRule();\n      this.myInequationReplacementRules.add(eliminationRule);\n    }\n    {\n      InequationReplacementRule_Runtime eliminationRule = new subtypesOfUpperBoundType_InequationReplacementRule();\n      this.myInequationReplacementRules.add(eliminationRule);\n    }\n    {\n      InequationReplacementRule_Runtime eliminationRule = new subtypesOfClassifierTypeWWildcards_InequationReplacementRule();\n      this.myInequationReplacementRules.add(eliminationRule);\n    }\n    {\n      InequationReplacementRule_Runtime eliminationRule = new replace_Tuples_InequationReplacementRule();\n      this.myInequationReplacementRules.add(eliminationRule);\n    }\n    {\n      InequationReplacementRule_Runtime eliminationRule = new any_type_supertypeof_bottom_InequationReplacementRule();\n      this.myInequationReplacementRules.add(eliminationRule);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_102().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_103().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.PlusExpression\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          if (SNodeOperations.isInstanceOf(leftOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\") || SNodeOperations.isInstanceOf(rightOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\")) {\n            return null;\n          } else {\n            return Queries.getBinaryOperationType(leftOperandType, rightOperandType);\n          }\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_102().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_103().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.MinusExpression\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          if (SNodeOperations.isInstanceOf(leftOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\") || SNodeOperations.isInstanceOf(rightOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\")) {\n            return null;\n          } else {\n            return Queries.getBinaryOperationType(leftOperandType, rightOperandType);\n          }\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_102().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_103().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.DivExpression\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          if (SNodeOperations.isInstanceOf(leftOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\") || SNodeOperations.isInstanceOf(rightOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\")) {\n            return null;\n          } else {\n            return Queries.getBinaryOperationType(leftOperandType, rightOperandType);\n          }\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_102().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_103().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.MulExpression\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          if (SNodeOperations.isInstanceOf(leftOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\") || SNodeOperations.isInstanceOf(rightOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\")) {\n            return null;\n          } else {\n            return Queries.getBinaryOperationType(leftOperandType, rightOperandType);\n          }\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_102().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_103().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.RemExpression\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          if (SNodeOperations.isInstanceOf(leftOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\") || SNodeOperations.isInstanceOf(rightOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\")) {\n            return null;\n          } else {\n            return Queries.getBinaryOperationType(leftOperandType, rightOperandType);\n          }\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_102().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_103().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.BinaryBitwiseOperation\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          if (SNodeOperations.isInstanceOf(leftOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\") || SNodeOperations.isInstanceOf(rightOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\")) {\n            return null;\n          } else {\n            return Queries.getBinaryOperationType(leftOperandType, rightOperandType);\n          }\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_105().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_106().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.BinaryCompareOperation\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          return new _Quotations.QuotationClass_107().createNode();\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_113().createNode(), \"descriptor\", false);\n          this.myRightOperandType = new _Quotations.QuotationClass_114().createNode();\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.UnaryMinus\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          return leftOperandType;\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOpsProvider_OneTypeSpecified provider = new OverloadedOpsProvider_OneTypeSpecified() {\n        {\n          this.myOperandType = new _Quotations.QuotationClass_121().createNode();\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.PlusExpression\";\n          this.myTypeIsExact = false;\n          this.myIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          return new _Quotations.QuotationClass_122().createNode();\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      IDependency_Runtime dependency_Runtime = new AbstractDependency_Runtime() {\n        public String getSourceConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration\";\n        }\n\n        public SNode getSourceNode(SNode targetNode) {\n          if (\"initializer\".equals(targetNode.getRole_())) {\n            return SNodeOperations.getParent(targetNode);\n          }\n          return null;\n        }\n\n        public String getTargetConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.Expression\";\n        }\n      };\n      this.myDependencies.add(dependency_Runtime);\n    }\n    {\n      IDependency_Runtime dependency_Runtime = new AbstractDependency_Runtime() {\n        public String getSourceConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.GenericNewExpression\";\n        }\n\n        public SNode getSourceNode(SNode targetNode) {\n          if (targetNode.getRole_().equals(\"creator\")) {\n            return SNodeOperations.getParent(targetNode);\n          }\n          return null;\n        }\n\n        public String getTargetConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.AbstractCreator\";\n        }\n      };\n      this.myDependencies.add(dependency_Runtime);\n    }\n    {\n      IDependency_Runtime dependency_Runtime = new AbstractDependency_Runtime() {\n        public String getSourceConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.Expression\";\n        }\n\n        public Set<SNode> getSourceNodes(SNode targetNode) {\n          SNode instanceMethodDeclaration = SLinkOperations.getTarget(targetNode, \"baseMethodDeclaration\", false);\n          List<SNode> declarations = SLinkOperations.getTargets(instanceMethodDeclaration, \"typeVariableDeclaration\", true);\n          Set<SNode> result = SetSequence.fromSet(new HashSet<SNode>());\n          if (ListSequence.fromList(declarations).isNotEmpty()) {\n            {\n              SNode param;\n              SNode arg;\n              Iterator<SNode> param_iterator = ListSequence.fromList(SLinkOperations.getTargets(instanceMethodDeclaration, \"parameter\", true)).iterator();\n              Iterator<SNode> arg_iterator = ListSequence.fromList(SLinkOperations.getTargets(targetNode, \"actualArgument\", true)).iterator();\n              while (true) {\n                if (!(param_iterator.hasNext())) {\n                  break;\n                }\n                if (!(arg_iterator.hasNext())) {\n                  break;\n                }\n                param = param_iterator.next();\n                arg = arg_iterator.next();\n                for (SNode tvr : SNodeOperations.getDescendants(SLinkOperations.getTarget(param, \"type\", true), \"jetbrains.mps.baseLanguage.structure.TypeVariableReference\", true, new String[]{})) {\n                  SNode variableDeclaration = SLinkOperations.getTarget(tvr, \"typeVariableDeclaration\", false);\n                  if (ListSequence.fromList(declarations).contains(variableDeclaration)) {\n                    SetSequence.fromSet(result).addElement(arg);\n                  }\n                }\n              }\n            }\n          }\n          return result;\n        }\n\n        public String getTargetConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n        }\n      };\n      this.myDependencies.add(dependency_Runtime);\n    }\n    {\n      IDependency_Runtime dependency_Runtime = new AbstractDependency_Runtime() {\n        public String getSourceConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.VariableDeclaration\";\n        }\n\n        public SNode getSourceNode(SNode targetNode) {\n          if (\"initializer\".equals(targetNode.getRole_())) {\n            return SNodeOperations.getParent(targetNode);\n          }\n          return null;\n        }\n\n        public String getTargetConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.Expression\";\n        }\n      };\n      this.myDependencies.add(dependency_Runtime);\n    }\n  }","id":54228,"modified_method":"public TypesystemDescriptor() {\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_andExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BaseAssignmentExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_Switch_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_TernaryOperator_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_BooleanConst_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ArrayCreatorWithInitializer_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ArrayAccess_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_CastExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_equalsExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_notEqualsExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_thisExpr_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ForeachStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BaseVariableDeclaration_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_VarRef_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_WhileStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_StringLiteral_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ThrowStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_CatchClause_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_GenericNewExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_NullLiteral_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_BaseMethodDeclaration_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ReturnStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_IfStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ClassifierClassExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_AssertStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_NotExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ParenthesizedExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_OrExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_EnumConstantDeclaration_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_EnumConstantReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_InstanceOfExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_IntegerLiteral_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_FloatingPointConstant_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_PlusExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_RemExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_MinusExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_DivExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_MulExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ClosureParameterReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ConceptFunctionParameter_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_DoWhileStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeOf_ConceptFunction_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ArrayLiteral_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_AnnotationInstanceExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_AnnotationInstanceValue_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_AnonymousClass_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_AnonymousClassCreator_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_DotExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_FieldReferenceOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new check_BreakStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new check_ContinueStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CharConstant_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_PropertyReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_Property_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ValueParameter_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_InstanceMethodCallOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ElsifClause_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ArrayLengthOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ArrayCreator_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_IMethodCall_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ClassCreator_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_IOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BinaryBitwiseOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_EnumValuesExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_EnumValueOfExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_NPEEqualsExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_NPENotEqualsExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BaseStringOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_StringBooleanOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_SubstringExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TrimOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BitwiseNotExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TupleExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TupleMemberAccessOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_VarVariableReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_VarVariableDeclaration_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BinaryCompareOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_AbstractUnaryNumberOperation_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_LongLiteral_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_FloatingPointFloatConstant_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_UnaryMinus_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_AsExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_VariableDeclaration_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BaseVariableReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ClassifierType_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_BaseMethodDeclaration_UnreachableStatements_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ConceptFunctionParameter_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ThisExpression_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ConceptFunction_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_InstanceInitializer_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new checkThrowsOfMethodIsCaught_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new checkThrowedByThrowIsCaught_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_VariableArityType_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_parametersCount_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_StringLiteral_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new typeof_ClassConcept_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_StaticInitializer_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_StringTypeClassifierType_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_AntiquotationContents_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_AbstractMethodsInClass_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_LocalStaticMethodCall_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new NonFinalVariablesInAnonymousClass_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ExpressionStatement_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new FieldIsNeverUsed_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new NonFinalParametersInAnonymousClass_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_EnumConstantHasConstructorDeclaration_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ConstructorInvocationStatementHasConstructor_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_StaticMethodScope_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new checkAbstractClassCreators_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_HasSuperConstructorCall_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new voidArraysAreIllegal_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new CheckBianryOpeartionPriority_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ThisExpression_ClassConceptSpecified_InGenerator_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_CorrectScope_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_NonStaticInnerClassCreation_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_InnerClassesCantHaveStaticInnerClasses_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new CheckExcessTypeCasts_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_DuplicateMethods_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ClassDoesNotExtendFinalClass_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ForeachWithErasure_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_DuplicatedConstructors_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new checkUnnecessaryInstanceof_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_AnonymousClassHasConstructorDeclaration_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_AnonymousClassHasArgumentsInGoodRole_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new subtyping_classifier_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new boolean_extends_Boolean_1_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new Boolean_extends_boolean_2_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new Boolean_extends_primitive_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new byte_extends_short_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new short_extends_int_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new int_extends_long_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new char_extends_int_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new PrimitiveSubtyping_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new long_extends_integral_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new long_extends_float_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new float_extends_double_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new double_extends_floatingPoint_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new subtyping_arrayType_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new char_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new byte_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new double_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new int_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new float_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new long_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new short_boxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new char_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new double_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new byte_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new float_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new int_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new long_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new short_unboxing_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new ObjectArraySupertypes_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new PrimitiveArraySupertypes_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new anonymousClassExtendsItsClassifier_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new supertypes_of_typeVariableReference_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new wildCard_is_Object_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new java_lang_String_extends_string_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new string_extends_java_lang_String_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      SubtypingRule_Runtime subtypingRule = new Class_Void_weak_supertypeof_void_SubtypingRule();\n      this.mySubtypingRules.add(subtypingRule);\n    }\n    {\n      ComparisonRule_Runtime comparisonRule = new interfaces_are_comparable_ComparisonRule();\n      this.myComparisonRules.add(comparisonRule);\n    }\n    {\n      ComparisonRule_Runtime comparisonRule = new any_type_comparable_to_wildcard_type_ComparisonRule();\n      this.myComparisonRules.add(comparisonRule);\n    }\n    {\n      ComparisonRule_Runtime comparisonRule = new any_type_comparable_with_nulltype_ComparisonRule();\n      this.myComparisonRules.add(comparisonRule);\n    }\n    {\n      InequationReplacementRule_Runtime eliminationRule = new any_type_subtypeof_wildcard_type_InequationReplacementRule();\n      this.myInequationReplacementRules.add(eliminationRule);\n    }\n    {\n      InequationReplacementRule_Runtime eliminationRule = new any_type_supertypeof_nulltype_InequationReplacementRule();\n      this.myInequationReplacementRules.add(eliminationRule);\n    }\n    {\n      InequationReplacementRule_Runtime eliminationRule = new subtypesOfUpperBoundType_InequationReplacementRule();\n      this.myInequationReplacementRules.add(eliminationRule);\n    }\n    {\n      InequationReplacementRule_Runtime eliminationRule = new subtypesOfClassifierTypeWWildcards_InequationReplacementRule();\n      this.myInequationReplacementRules.add(eliminationRule);\n    }\n    {\n      InequationReplacementRule_Runtime eliminationRule = new replace_Tuples_InequationReplacementRule();\n      this.myInequationReplacementRules.add(eliminationRule);\n    }\n    {\n      InequationReplacementRule_Runtime eliminationRule = new any_type_supertypeof_bottom_InequationReplacementRule();\n      this.myInequationReplacementRules.add(eliminationRule);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_102().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_103().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.PlusExpression\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          if (SNodeOperations.isInstanceOf(leftOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\") || SNodeOperations.isInstanceOf(rightOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\")) {\n            return null;\n          } else {\n            return Queries.getBinaryOperationType(leftOperandType, rightOperandType);\n          }\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_102().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_103().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.MinusExpression\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          if (SNodeOperations.isInstanceOf(leftOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\") || SNodeOperations.isInstanceOf(rightOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\")) {\n            return null;\n          } else {\n            return Queries.getBinaryOperationType(leftOperandType, rightOperandType);\n          }\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_102().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_103().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.DivExpression\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          if (SNodeOperations.isInstanceOf(leftOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\") || SNodeOperations.isInstanceOf(rightOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\")) {\n            return null;\n          } else {\n            return Queries.getBinaryOperationType(leftOperandType, rightOperandType);\n          }\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_102().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_103().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.MulExpression\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          if (SNodeOperations.isInstanceOf(leftOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\") || SNodeOperations.isInstanceOf(rightOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\")) {\n            return null;\n          } else {\n            return Queries.getBinaryOperationType(leftOperandType, rightOperandType);\n          }\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_102().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_103().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.RemExpression\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          if (SNodeOperations.isInstanceOf(leftOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\") || SNodeOperations.isInstanceOf(rightOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\")) {\n            return null;\n          } else {\n            return Queries.getBinaryOperationType(leftOperandType, rightOperandType);\n          }\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_102().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_103().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.BinaryBitwiseOperation\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          if (SNodeOperations.isInstanceOf(leftOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\") || SNodeOperations.isInstanceOf(rightOperandType, \"jetbrains.mps.baseLanguage.structure.NullType\")) {\n            return null;\n          } else {\n            return Queries.getBinaryOperationType(leftOperandType, rightOperandType);\n          }\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_105().createNode(), \"descriptor\", false);\n          this.myRightOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_106().createNode(), \"descriptor\", false);\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.BinaryCompareOperation\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          return new _Quotations.QuotationClass_107().createNode();\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOperationsTypesProvider provider = new OverloadedOperationsTypesProvider() {\n        {\n          this.myLeftOperandType = SLinkOperations.getTarget(new _Quotations.QuotationClass_113().createNode(), \"descriptor\", false);\n          this.myRightOperandType = new _Quotations.QuotationClass_114().createNode();\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.UnaryMinus\";\n          this.myLeftTypeIsExact = false;\n          this.myRightTypeIsExact = false;\n          this.myRightIsStrong = false;\n          this.myLeftIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          return leftOperandType;\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      OverloadedOpsProvider_OneTypeSpecified provider = new OverloadedOpsProvider_OneTypeSpecified() {\n        {\n          this.myOperandType = new _Quotations.QuotationClass_122().createNode();\n          this.myOperationConceptFQName = \"jetbrains.mps.baseLanguage.structure.PlusExpression\";\n          this.myTypeIsExact = false;\n          this.myIsStrong = false;\n        }\n\n        public SNode getOperationType(SNode operation, SNode leftOperandType, SNode rightOperandType) {\n          return new _Quotations.QuotationClass_123().createNode();\n        }\n      };\n      this.myOverloadedOperationsTypesProviders.add(provider);\n    }\n    {\n      IDependency_Runtime dependency_Runtime = new AbstractDependency_Runtime() {\n        public String getSourceConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration\";\n        }\n\n        public SNode getSourceNode(SNode targetNode) {\n          if (\"initializer\".equals(targetNode.getRole_())) {\n            return SNodeOperations.getParent(targetNode);\n          }\n          return null;\n        }\n\n        public String getTargetConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.Expression\";\n        }\n      };\n      this.myDependencies.add(dependency_Runtime);\n    }\n    {\n      IDependency_Runtime dependency_Runtime = new AbstractDependency_Runtime() {\n        public String getSourceConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.GenericNewExpression\";\n        }\n\n        public SNode getSourceNode(SNode targetNode) {\n          if (targetNode.getRole_().equals(\"creator\")) {\n            return SNodeOperations.getParent(targetNode);\n          }\n          return null;\n        }\n\n        public String getTargetConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.AbstractCreator\";\n        }\n      };\n      this.myDependencies.add(dependency_Runtime);\n    }\n    {\n      IDependency_Runtime dependency_Runtime = new AbstractDependency_Runtime() {\n        public String getSourceConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.Expression\";\n        }\n\n        public Set<SNode> getSourceNodes(SNode targetNode) {\n          SNode instanceMethodDeclaration = SLinkOperations.getTarget(targetNode, \"baseMethodDeclaration\", false);\n          List<SNode> declarations = SLinkOperations.getTargets(instanceMethodDeclaration, \"typeVariableDeclaration\", true);\n          Set<SNode> result = SetSequence.fromSet(new HashSet<SNode>());\n          if (ListSequence.fromList(declarations).isNotEmpty()) {\n            {\n              SNode param;\n              SNode arg;\n              Iterator<SNode> param_iterator = ListSequence.fromList(SLinkOperations.getTargets(instanceMethodDeclaration, \"parameter\", true)).iterator();\n              Iterator<SNode> arg_iterator = ListSequence.fromList(SLinkOperations.getTargets(targetNode, \"actualArgument\", true)).iterator();\n              while (true) {\n                if (!(param_iterator.hasNext())) {\n                  break;\n                }\n                if (!(arg_iterator.hasNext())) {\n                  break;\n                }\n                param = param_iterator.next();\n                arg = arg_iterator.next();\n                for (SNode tvr : SNodeOperations.getDescendants(SLinkOperations.getTarget(param, \"type\", true), \"jetbrains.mps.baseLanguage.structure.TypeVariableReference\", true, new String[]{})) {\n                  SNode variableDeclaration = SLinkOperations.getTarget(tvr, \"typeVariableDeclaration\", false);\n                  if (ListSequence.fromList(declarations).contains(variableDeclaration)) {\n                    SetSequence.fromSet(result).addElement(arg);\n                  }\n                }\n              }\n            }\n          }\n          return result;\n        }\n\n        public String getTargetConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n        }\n      };\n      this.myDependencies.add(dependency_Runtime);\n    }\n    {\n      IDependency_Runtime dependency_Runtime = new AbstractDependency_Runtime() {\n        public String getSourceConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.VariableDeclaration\";\n        }\n\n        public SNode getSourceNode(SNode targetNode) {\n          if (\"initializer\".equals(targetNode.getRole_())) {\n            return SNodeOperations.getParent(targetNode);\n          }\n          return null;\n        }\n\n        public String getTargetConceptFQName() {\n          return \"jetbrains.mps.baseLanguage.structure.Expression\";\n        }\n      };\n      this.myDependencies.add(dependency_Runtime);\n    }\n  }","commit_id":"81652b0fe73cd0109baf66ea60e84bdefc7e2e16","url":"https://github.com/JetBrains/MPS"},{"original_method":"public List<SNode> getSubOrSuperTypes(SNode typeVariableReference, TypeCheckingContext typeCheckingContext) {\n    SNode typeVariableDeclaration = SLinkOperations.getTarget(typeVariableReference, \"typeVariableDeclaration\", false);\n    List<SNode> supertypes = new ArrayList<SNode>();\n    if ((SLinkOperations.getTarget(typeVariableDeclaration, \"bound\", true) != null)) {\n      ListSequence.fromList(supertypes).addElement(SLinkOperations.getTarget(typeVariableDeclaration, \"bound\", true));\n    }\n    for (SNode bound : SLinkOperations.getTargets(typeVariableDeclaration, \"auxBounds\", true)) {\n      ListSequence.fromList(supertypes).addElement(bound);\n    }\n    if (ListSequence.fromList(supertypes).isEmpty()) {\n      ListSequence.fromList(supertypes).addElement(new _Quotations.QuotationClass_120().createNode(typeCheckingContext));\n    }\n    return supertypes;\n  }","id":54229,"modified_method":"public List<SNode> getSubOrSuperTypes(SNode typeVariableReference, TypeCheckingContext typeCheckingContext) {\n    SNode typeVariableDeclaration = SLinkOperations.getTarget(typeVariableReference, \"typeVariableDeclaration\", false);\n    List<SNode> supertypes = new ArrayList<SNode>();\n    if ((SLinkOperations.getTarget(typeVariableDeclaration, \"bound\", true) != null)) {\n      ListSequence.fromList(supertypes).addElement(SLinkOperations.getTarget(typeVariableDeclaration, \"bound\", true));\n    }\n    for (SNode bound : SLinkOperations.getTargets(typeVariableDeclaration, \"auxBounds\", true)) {\n      ListSequence.fromList(supertypes).addElement(bound);\n    }\n    if (ListSequence.fromList(supertypes).isEmpty()) {\n      ListSequence.fromList(supertypes).addElement(new _Quotations.QuotationClass_121().createNode(typeCheckingContext));\n    }\n    return supertypes;\n  }","commit_id":"81652b0fe73cd0109baf66ea60e84bdefc7e2e16","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode operation, final TypeCheckingContext typeCheckingContext) {\n    {\n      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(operation, \"expression\", true);\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createLessThanInequation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"5885703495931979623\", true), (SNode)SLinkOperations.getTarget(new _Quotations.QuotationClass_119().createNode(typeCheckingContext), \"descriptor\", false), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"5885703495931979621\", false, 0, intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = operation;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"1239715051378\", true), (SNode)typeCheckingContext.typeOf(SLinkOperations.getTarget(operation, \"expression\", true), \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"1239715051381\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"1239715051376\", intentionProvider);\n    }\n  }","id":54230,"modified_method":"public void applyRule(final SNode operation, final TypeCheckingContext typeCheckingContext) {\n    {\n      SNode _nodeToCheck_1029348928467 = SLinkOperations.getTarget(operation, \"expression\", true);\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createLessThanInequation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"5885703495931979623\", true), (SNode)SLinkOperations.getTarget(new _Quotations.QuotationClass_120().createNode(typeCheckingContext), \"descriptor\", false), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"5885703495931979621\", false, 0, intentionProvider);\n    }\n    {\n      SNode _nodeToCheck_1029348928467 = operation;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"1239715051378\", true), (SNode)typeCheckingContext.typeOf(SLinkOperations.getTarget(operation, \"expression\", true), \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"1239715051381\", true), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"1239715051376\", intentionProvider);\n    }\n  }","commit_id":"81652b0fe73cd0109baf66ea60e84bdefc7e2e16","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode floatConstant, final TypeCheckingContext typeCheckingContext) {\n    {\n      SNode _nodeToCheck_1029348928467 = floatConstant;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"5279705229678487854\", true), (SNode)new _Quotations.QuotationClass_118().createNode(typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"5279705229678487852\", intentionProvider);\n    }\n  }","id":54231,"modified_method":"public void applyRule(final SNode floatConstant, final TypeCheckingContext typeCheckingContext) {\n    {\n      SNode _nodeToCheck_1029348928467 = floatConstant;\n      BaseIntentionProvider intentionProvider = null;\n      typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"5279705229678487854\", true), (SNode)new _Quotations.QuotationClass_119().createNode(typeCheckingContext), _nodeToCheck_1029348928467, null, \"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)\", \"5279705229678487852\", intentionProvider);\n    }\n  }","commit_id":"81652b0fe73cd0109baf66ea60e84bdefc7e2e16","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode getConcreteClassifierType(SNode typeWithVars, SNode classifierSubtype) {\n    SNode result = SNodeOperations.copyNode(typeWithVars);\n    List<SNode> varRefs = SNodeOperations.getDescendants(result, \"jetbrains.mps.baseLanguage.structure.TypeVariableReference\", false, new String[]{});\n    List<SNode> params = ListSequence.fromList(SLinkOperations.getTargets(classifierSubtype, \"parameter\", true)).toListSequence();\n    if ((int) ListSequence.fromList(params).count() == (int) ListSequence.fromList(varRefs).count()) {\n      for (SNode varRef : varRefs) {\n        SNodeOperations.replaceWithAnother(varRef, SNodeOperations.copyNode(ListSequence.fromList(params).getElement(SNodeOperations.getIndexInParent(SLinkOperations.getTarget(varRef, \"typeVariableDeclaration\", false)))));\n      }\n    } else {\n      for (SNode varRef : varRefs) {\n        SNodeOperations.replaceWithAnother(varRef, TypeVariableDeclaration_Behavior.call_getConcreteUpperBound_4346214032091509920(SLinkOperations.getTarget(varRef, \"typeVariableDeclaration\", false)));\n      }\n    }\n    return result;\n  }","id":54232,"modified_method":"public static SNode getConcreteClassifierType(SNode typeWithVars, SNode classifierSubtype) {\n    SNode result = SNodeOperations.copyNode(typeWithVars);\n    List<SNode> varRefs = SNodeOperations.getDescendants(result, \"jetbrains.mps.baseLanguage.structure.TypeVariableReference\", false, new String[]{});\n    List<SNode> params = ListSequence.fromList(SLinkOperations.getTargets(classifierSubtype, \"parameter\", true)).toListSequence();\n    for (SNode varRef : varRefs) {\n      int index = SNodeOperations.getIndexInParent(SLinkOperations.getTarget(varRef, \"typeVariableDeclaration\", false));\n      if (index < ListSequence.fromList(params).count()) {\n        SNodeOperations.replaceWithAnother(varRef, SNodeOperations.copyNode(ListSequence.fromList(params).getElement(index)));\n      } else {\n        SNodeOperations.replaceWithAnother(varRef, TypeVariableDeclaration_Behavior.call_getConcreteUpperBound_4346214032091509920(SLinkOperations.getTarget(varRef, \"typeVariableDeclaration\", false)));\n      }\n    }\n    return result;\n  }","commit_id":"95ccb51f6b665a49384bbca51dad2cb287a59ecc","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode getConcreteSuperClassifierType(List<SNode> frontier, SNode classifier) {\n    SNode concreteMethodClassifierType = null;\n    while (!(ListSequence.fromList(frontier).isEmpty())) {\n      SNode currentType = ListSequence.fromList(frontier).removeElementAt(0);\n      SNode currentClassifier = SLinkOperations.getTarget(currentType, \"classifier\", false);\n      if (currentClassifier == classifier) {\n        concreteMethodClassifierType = currentType;\n        break;\n      }\n      if (SNodeOperations.isInstanceOf(currentClassifier, \"jetbrains.mps.baseLanguage.structure.ClassConcept\")) {\n        SNode classConcept = SNodeOperations.cast(currentClassifier, \"jetbrains.mps.baseLanguage.structure.ClassConcept\");\n        SNode superclass = SLinkOperations.getTarget(classConcept, \"superclass\", true);\n        if ((superclass != null)) {\n          ListSequence.fromList(frontier).addElement(getConcreteClassifierType(superclass, currentType));\n        }\n        for (SNode intfc : SLinkOperations.getTargets(classConcept, \"implementedInterface\", true)) {\n          ListSequence.fromList(frontier).addElement(getConcreteClassifierType(intfc, currentType));\n        }\n      }\n      if (SNodeOperations.isInstanceOf(currentClassifier, \"jetbrains.mps.baseLanguage.structure.Interface\")) {\n        SNode interfaceConcept = SNodeOperations.cast(currentClassifier, \"jetbrains.mps.baseLanguage.structure.Interface\");\n        for (SNode intfc : SLinkOperations.getTargets(interfaceConcept, \"extendedInterface\", true)) {\n          ListSequence.fromList(frontier).addElement(getConcreteClassifierType(intfc, currentType));\n        }\n      }\n    }\n    return concreteMethodClassifierType;\n  }","id":54233,"modified_method":"public static SNode getConcreteSuperClassifierType(List<SNode> frontier, SNode classifier) {\n    SNode concreteMethodClassifierType = null;\n    Collections.reverse(frontier);\n    while (!(ListSequence.fromList(frontier).isEmpty())) {\n      SNode currentType = ListSequence.fromList(frontier).removeElementAt(0);\n      SNode currentClassifier = SLinkOperations.getTarget(currentType, \"classifier\", false);\n      if (currentClassifier == classifier) {\n        concreteMethodClassifierType = currentType;\n        break;\n      }\n      if (SNodeOperations.isInstanceOf(currentClassifier, \"jetbrains.mps.baseLanguage.structure.ClassConcept\")) {\n        SNode classConcept = SNodeOperations.cast(currentClassifier, \"jetbrains.mps.baseLanguage.structure.ClassConcept\");\n        SNode superclass = SLinkOperations.getTarget(classConcept, \"superclass\", true);\n        if ((superclass != null)) {\n          ListSequence.fromList(frontier).addElement(getConcreteClassifierType(superclass, currentType));\n        }\n        for (SNode intfc : SLinkOperations.getTargets(classConcept, \"implementedInterface\", true)) {\n          ListSequence.fromList(frontier).addElement(getConcreteClassifierType(intfc, currentType));\n        }\n      }\n      if (SNodeOperations.isInstanceOf(currentClassifier, \"jetbrains.mps.baseLanguage.structure.Interface\")) {\n        SNode interfaceConcept = SNodeOperations.cast(currentClassifier, \"jetbrains.mps.baseLanguage.structure.Interface\");\n        for (SNode intfc : SLinkOperations.getTargets(interfaceConcept, \"extendedInterface\", true)) {\n          ListSequence.fromList(frontier).addElement(getConcreteClassifierType(intfc, currentType));\n        }\n      }\n    }\n    return concreteMethodClassifierType;\n  }","commit_id":"95ccb51f6b665a49384bbca51dad2cb287a59ecc","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void createAddAttributeFix(@NotNull final XmlAttribute attribute, final HighlightInfo highlightInfo) {\n    final String name = attribute.getName();\n    if (!JSRefactoringUtil.isValidIdentifier(name, attribute.getProject())) {\n      return;\n    }\n\n    final XmlElementDescriptor descriptor = attribute.getParent().getDescriptor();\n    final PsiElement declaration = descriptor instanceof ClassBackedElementDescriptor ? descriptor.getDeclaration() : null;\n    final VirtualFile virtualFile = declaration == null ? null : declaration.getContainingFile().getVirtualFile();\n    if (virtualFile == null ||\n        ProjectRootManager.getInstance(declaration.getProject()).getFileIndex().getSourceRootForFile(virtualFile) == null) {\n      return;\n    }\n\n    // todo declaration can be XmlFile (other MXML)\n    if (declaration instanceof JSClass) {\n      final FixAndIntentionAction fix1 = new CreateFieldByMxmlAttributeFix(name, attribute.getValue());\n      fix1.registerElementRefForFix(attribute, null);\n\n      //final FixAndIntentionAction fix2 = new CreateJSPropertyAccessorIntentionAction(name, false);\n      //fix2.registerElementRefForFix(attribute, null);\n\n      QuickFixAction.registerQuickFixAction(highlightInfo, fix1);\n      //QuickFixAction.registerQuickFixAction(highlightInfo, fix1);\n    }\n  }","id":54234,"modified_method":"public void createAddAttributeFix(@NotNull final XmlAttribute attribute, final HighlightInfo highlightInfo) {\n    final String name = attribute.getName();\n    if (!JSRefactoringUtil.isValidIdentifier(name, attribute.getProject())) {\n      return;\n    }\n\n    final XmlElementDescriptor descriptor = attribute.getParent().getDescriptor();\n    final PsiElement declaration = descriptor instanceof ClassBackedElementDescriptor ? descriptor.getDeclaration() : null;\n    final VirtualFile virtualFile = declaration == null ? null : declaration.getContainingFile().getVirtualFile();\n    if (virtualFile == null ||\n        ProjectRootManager.getInstance(declaration.getProject()).getFileIndex().getSourceRootForFile(virtualFile) == null) {\n      return;\n    }\n\n    // todo declaration can be XmlFile (other MXML)\n    if (declaration instanceof JSClass) {\n      final String attributeValue = attribute.getValue();\n\n      final FixAndIntentionAction fix1 = new CreateFieldByMxmlAttributeFix(name, attributeValue);\n      fix1.registerElementRefForFix(attribute, null);\n\n      final FixAndIntentionAction fix2 = new CreateSetterByMxmlAttributeFix(name, attributeValue);\n      fix2.registerElementRefForFix(attribute, null);\n\n      QuickFixAction.registerQuickFixAction(highlightInfo, fix1);\n      QuickFixAction.registerQuickFixAction(highlightInfo, fix2);\n    }\n  }","commit_id":"fbfa24b853ae5b660b13e50ee270cdfa7547507a","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public String getText() {\n    return MessageFormat.format(\"Create \" + (myToCreateGetter ? \"getter\" : \"setter\") + \" for ''{0}''\",\n                                             new Object[]{myField.getName()});\n  }","id":54235,"modified_method":"public String getText() {\n    String what = \"\";\n    if (myCreateGetter) {\n      what += \"getter\";\n    }\n    if (myCreateSetter) {\n      if (myCreateGetter) what += \" and \";\n      what += \"setter\";\n    }\n    return MessageFormat.format(\"Create {0} for ''{1}''\", new Object[]{what, myField.getName()});\n  }","commit_id":"7cff63658cbc40f5c4b6b33cf7eabd784d91832b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void invoke(Project project, Editor editor, PsiFile file) throws IncorrectOperationException {\n    PsiClass aClass = myField.getContainingClass();\n    if (myToCreateGetter) {\n        aClass.add(PropertyUtil.generateGetterPrototype(myField));\n      } else {\n        aClass.add(PropertyUtil.generateSetterPrototype(myField));\n      }\n  }","id":54236,"modified_method":"public void invoke(Project project, Editor editor, PsiFile file) throws IncorrectOperationException {\n    PsiClass aClass = myField.getContainingClass();\n    if (myCreateGetter) {\n      aClass.add(PropertyUtil.generateGetterPrototype(myField));\n    }\n    if (myCreateSetter) {\n      aClass.add(PropertyUtil.generateSetterPrototype(myField));\n    }\n  }","commit_id":"7cff63658cbc40f5c4b6b33cf7eabd784d91832b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public CreateGetterOrSetterAction(boolean toCreateGetter, PsiField field) {\n    myToCreateGetter = toCreateGetter;\n    myField = field;\n    Project project = field.getProject();\n    myPropertyName = PropertyUtil.suggestPropertyName(project, field);\n  }","id":54237,"modified_method":"public CreateGetterOrSetterAction(boolean createGetter, boolean createSetter, PsiField field) {\n    myCreateGetter = createGetter;\n    myCreateSetter = createSetter;\n    myField = field;\n    Project project = field.getProject();\n    myPropertyName = PropertyUtil.suggestPropertyName(project, field);\n  }","commit_id":"7cff63658cbc40f5c4b6b33cf7eabd784d91832b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isAvailable(Project project, Editor editor, PsiFile file) {\n    if (!myField.isValid()) return false;\n    PsiClass aClass = myField.getContainingClass();\n    if (aClass != null) {\n      if (myToCreateGetter) {\n        return PropertyUtil.findPropertyGetter(aClass, myPropertyName, myField.hasModifierProperty(PsiModifier.STATIC), false) == null;\n      } else {\n        return PropertyUtil.findPropertySetter(aClass, myPropertyName, myField.hasModifierProperty(PsiModifier.STATIC), false) == null;\n      }\n    }\n\n    return false;\n  }","id":54238,"modified_method":"public boolean isAvailable(Project project, Editor editor, PsiFile file) {\n    if (!myField.isValid()) return false;\n    PsiClass aClass = myField.getContainingClass();\n    if (aClass == null) {\n      return false;\n    }\n    if (myCreateGetter && PropertyUtil.findPropertyGetter(aClass, myPropertyName, myField.hasModifierProperty(PsiModifier.STATIC), false) != null) {\n      return false;\n    }\n    if (myCreateSetter && PropertyUtil.findPropertySetter(aClass, myPropertyName, myField.hasModifierProperty(PsiModifier.STATIC), false) != null) {\n      return false;\n    }\n    return true;\n  }","commit_id":"7cff63658cbc40f5c4b6b33cf7eabd784d91832b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private HighlightInfo processField(PsiField field) {\n    if (field.hasModifierProperty(PsiModifier.PRIVATE)) {\n      PsiIdentifier identifier = field.getNameIdentifier();\n\n      int count = myRefCountHolder.getRefCount(field);\n      if (count == 0) {\n        if (isSerialVersionUIDField(field)) return null;\n        String message = MessageFormat.format(PRIVATE_FIELD_IS_NOT_USED, new Object[]{identifier.getText()});\n        final HighlightInfo highlightInfo = createUnusedSymbolInfo(identifier, message);\n        QuickFixAction.registerQuickFixAction(highlightInfo, new RemoveUnusedVariableFix(field));\n        QuickFixAction.registerQuickFixAction(highlightInfo, new CreateGetterOrSetterAction(true, field));\n        QuickFixAction.registerQuickFixAction(highlightInfo, new CreateGetterOrSetterAction(false, field));\n        return highlightInfo;\n      }\n\n      count = myRefCountHolder.getReadRefCount(field);\n      if (count == 0) {\n        String message = MessageFormat.format(PRIVATE_FIELD_IS_NOT_USED_FOR_READING, new Object[]{identifier.getText()});\n        final HighlightInfo highlightInfo = createUnusedSymbolInfo(identifier, message);\n        QuickFixAction.registerQuickFixAction(highlightInfo, new RemoveUnusedVariableFix(field));\n        QuickFixAction.registerQuickFixAction(highlightInfo, new CreateGetterOrSetterAction(true, field));\n        return highlightInfo;\n      }\n\n      if (!field.hasInitializer()) {\n        count = myRefCountHolder.getWriteRefCount(field);\n        if (count == 0) {\n          if (!assignedByUIForm(field)) {\n            String message = MessageFormat.format(PRIVATE_FIELD_IS_NOT_ASSIGNED, new Object[]{identifier.getText()});\n            HighlightInfo info = createUnusedSymbolInfo(identifier, message);\n            QuickFixAction.registerQuickFixAction(info, new CreateGetterOrSetterAction(false, field));\n            return info;\n          }\n        }\n      }\n      else {\n        if (assignedByUIForm(field)) {\n          String message = MessageFormat.format(FIELD_IS_OVERWRITTEN, new Object[]{identifier.getText()});\n          return HighlightInfo.createHighlightInfo(HighlightInfoType.WARNING, field.getInitializer(), message);\n        }\n      }\n    }\n\n    return null;\n  }","id":54239,"modified_method":"private HighlightInfo processField(PsiField field) {\n    if (field.hasModifierProperty(PsiModifier.PRIVATE)) {\n      PsiIdentifier identifier = field.getNameIdentifier();\n\n      int count = myRefCountHolder.getRefCount(field);\n      if (count == 0) {\n        if (isSerialVersionUIDField(field)) return null;\n        String message = MessageFormat.format(PRIVATE_FIELD_IS_NOT_USED, new Object[]{identifier.getText()});\n        final HighlightInfo highlightInfo = createUnusedSymbolInfo(identifier, message);\n        QuickFixAction.registerQuickFixAction(highlightInfo, new RemoveUnusedVariableFix(field));\n        QuickFixAction.registerQuickFixAction(highlightInfo, new CreateGetterOrSetterAction(true, false, field));\n        QuickFixAction.registerQuickFixAction(highlightInfo, new CreateGetterOrSetterAction(false, true, field));\n        QuickFixAction.registerQuickFixAction(highlightInfo, new CreateGetterOrSetterAction(true, true, field));\n        return highlightInfo;\n      }\n\n      count = myRefCountHolder.getReadRefCount(field);\n      if (count == 0) {\n        String message = MessageFormat.format(PRIVATE_FIELD_IS_NOT_USED_FOR_READING, new Object[]{identifier.getText()});\n        final HighlightInfo highlightInfo = createUnusedSymbolInfo(identifier, message);\n        QuickFixAction.registerQuickFixAction(highlightInfo, new RemoveUnusedVariableFix(field));\n        QuickFixAction.registerQuickFixAction(highlightInfo, new CreateGetterOrSetterAction(true, false, field));\n        return highlightInfo;\n      }\n\n      if (!field.hasInitializer()) {\n        count = myRefCountHolder.getWriteRefCount(field);\n        if (count == 0) {\n          if (!assignedByUIForm(field)) {\n            String message = MessageFormat.format(PRIVATE_FIELD_IS_NOT_ASSIGNED, new Object[]{identifier.getText()});\n            HighlightInfo info = createUnusedSymbolInfo(identifier, message);\n            QuickFixAction.registerQuickFixAction(info, new CreateGetterOrSetterAction(false, true, field));\n            return info;\n          }\n        }\n      }\n      else {\n        if (assignedByUIForm(field)) {\n          String message = MessageFormat.format(FIELD_IS_OVERWRITTEN, new Object[]{identifier.getText()});\n          return HighlightInfo.createHighlightInfo(HighlightInfoType.WARNING, field.getInitializer(), message);\n        }\n      }\n    }\n\n    return null;\n  }","commit_id":"7cff63658cbc40f5c4b6b33cf7eabd784d91832b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isRBraceToken(HighlighterIterator iterator, CharSequence fileText, FileType fileType) {\n      final IElementType tokenType = getToken(iterator);\n\n      if (tokenType == JavaTokenType.RPARENTH ||\n          tokenType == JavaTokenType.RBRACE ||\n          tokenType == JavaTokenType.RBRACKET ||\n          tokenType == XmlTokenType.XML_EMPTY_ELEMENT_END ||\n          tokenType == XmlTokenType.XML_ATTRIBUTE_VALUE_END_DELIMITER ||\n          tokenType == JspTokenType.JSP_SCRIPTLET_END ||\n          tokenType == JspTokenType.JSP_EXPRESSION_END ||\n          tokenType == JspTokenType.JSP_DECLARATION_END ||\n          tokenType == JspTokenType.JSP_DIRECTIVE_END ||\n          tokenType == ELTokenType.JSP_EL_RBRACKET ||\n          tokenType == ELTokenType.JSP_EL_RPARENTH ||\n          tokenType == JavaDocTokenType.DOC_INLINE_TAG_END) {\n        return true;\n      }\n      else if (tokenType == XmlTokenType.XML_TAG_END) {\n        boolean result = findEndTagStart(iterator);\n        if (!result && (fileType == StdFileTypes.HTML || fileType == StdFileTypes.JSP)) {\n          result = isEndOfSingleHtmlTag(fileText, iterator);\n        }\n\n        return result;\n      }\n      else {\n        return false;\n      }\n    }","id":54240,"modified_method":"public boolean isRBraceToken(HighlighterIterator iterator, CharSequence fileText, FileType fileType) {\n      final IElementType tokenType = getToken(iterator);\n\n      if (tokenType == JavaTokenType.RPARENTH ||\n          tokenType == JavaTokenType.RBRACE ||\n          tokenType == JavaTokenType.RBRACKET ||\n          tokenType == XmlTokenType.XML_EMPTY_ELEMENT_END ||\n          tokenType == XmlTokenType.XML_ATTRIBUTE_VALUE_END_DELIMITER ||\n          tokenType == JspTokenType.JSP_SCRIPTLET_END ||\n          tokenType == JspTokenType.JSP_EXPRESSION_END ||\n          tokenType == JspTokenType.JSP_DECLARATION_END ||\n          tokenType == JspTokenType.JSP_DIRECTIVE_END ||\n          tokenType == ELTokenType.JSP_EL_RBRACKET ||\n          tokenType == ELTokenType.JSP_EL_RPARENTH ||\n          tokenType == JavaDocTokenType.DOC_INLINE_TAG_END) {\n        return true;\n      }\n      else if (tokenType == XmlTokenType.XML_TAG_END) {\n        final boolean result = findEndTagStart(iterator);\n        \n        if (fileType == StdFileTypes.HTML || fileType == StdFileTypes.JSP) {\n          final String tagName = getTagName(fileText, iterator);\n          \n          if (tagName != null && HtmlUtil.isSingleHtmlTag(tagName)) {\n            return !result;\n          }\n        }\n\n        return result;\n      }\n      else {\n        return false;\n      }\n    }","commit_id":"9ae9cb930128b7633b83d87cd900bfe218d01cbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean checkTagIsClosed(XmlTag tag) {\n    PsiElement[] children = tag.getChildren();\n    String name = tag.getName();\n\n    boolean insideEndTag = false;\n    XmlToken startTagNameToken = null;\n\n    for (PsiElement child : children) {\n      if (child instanceof XmlToken) {\n        XmlToken xmlToken = (XmlToken)child;\n        if (xmlToken.getTokenType() == XmlTokenType.XML_EMPTY_ELEMENT_END) return true;\n        if (xmlToken.getTokenType() == XmlTokenType.XML_END_TAG_START) {\n          insideEndTag = true;\n        }\n\n        if (xmlToken.getTokenType() == XmlTokenType.XML_NAME) {\n          if (insideEndTag) {\n            String text = xmlToken.getText();\n            if (tag instanceof HtmlTag) {\n              text = text.toLowerCase();\n              name = name.toLowerCase();\n            }\n\n            if (text.equals(name)) return true;\n\n            HighlightInfo highlightInfo = HighlightInfo.createHighlightInfo(\n              HighlightInfoType.ERROR,\n              xmlToken,\n              \"Wrong closing tag name\");\n            myResult.add(highlightInfo);\n            IntentionAction intentionAction = new RenameTagBeginOrEndIntentionAction(tag, name, false);\n            IntentionAction intentionAction2 = new RenameTagBeginOrEndIntentionAction(tag, text, true);\n\n            QuickFixAction.registerQuickFixAction(highlightInfo, intentionAction, null);\n            QuickFixAction.registerQuickFixAction(highlightInfo, startTagNameToken.getTextRange(), intentionAction2, null);\n\n            return false;\n          }\n          else {\n            startTagNameToken = xmlToken;\n          }\n        }\n      }\n    }\n\n    if (tag instanceof HtmlTag &&\n        ( HtmlUtil.isOptionalEndForHtmlTag(name) ||\n          HtmlUtil.isSingleHtmlTag(name)\n        )\n       ) {\n      return true;\n    }\n    return false;\n  }","id":54241,"modified_method":"private boolean checkTagIsClosed(XmlTag tag) {\n    PsiElement[] children = tag.getChildren();\n    String name = tag.getName();\n\n    boolean insideEndTag = false;\n    XmlToken startTagNameToken = null;\n\n    for (PsiElement child : children) {\n      if (child instanceof XmlToken) {\n        final XmlToken xmlToken = (XmlToken)child;\n        if (xmlToken.getTokenType() == XmlTokenType.XML_EMPTY_ELEMENT_END) return true;\n        if (xmlToken.getTokenType() == XmlTokenType.XML_END_TAG_START) {\n          insideEndTag = true;\n        }\n\n        if (xmlToken.getTokenType() == XmlTokenType.XML_NAME) {\n          if (insideEndTag) {\n            String text = xmlToken.getText();\n            if (tag instanceof HtmlTag) {\n              text = text.toLowerCase();\n              name = name.toLowerCase();\n            }\n\n            boolean isExtraHtmlTagEnd = false;\n            if (text.equals(name)) {\n              isExtraHtmlTagEnd = (tag instanceof HtmlTag && HtmlUtil.isSingleHtmlTag(name));\n              if (!isExtraHtmlTagEnd) return true;\n            }\n\n            HighlightInfo highlightInfo = HighlightInfo.createHighlightInfo(\n              (isExtraHtmlTagEnd)?HighlightInfoType.WARNING:HighlightInfoType.ERROR,\n              xmlToken,\n              (isExtraHtmlTagEnd)?\"Extra closing tag for empty element\":\"Wrong closing tag name\");\n            myResult.add(highlightInfo);\n            \n            if (isExtraHtmlTagEnd) {\n              QuickFixAction.registerQuickFixAction(highlightInfo, new IntentionAction() {\n                public String getText() {\n                  return \"Remove Extra Closing Tag\";\n                }\n\n                public String getFamilyName() {\n                  return \"Remove Extra Closing Tag\";\n                }\n\n                public boolean isAvailable(Project project, Editor editor, PsiFile file) {\n                  return true;\n                }\n\n                public void invoke(Project project, Editor editor, PsiFile file) throws IncorrectOperationException {\n                  if (!CodeInsightUtil.prepareFileForWrite(file)) return;\n                  \n                  XmlToken tagEndStart = xmlToken;\n                  while(tagEndStart.getTokenType() != XmlTokenType.XML_END_TAG_START) {\n                    final PsiElement prevSibling = tagEndStart.getPrevSibling();\n                    if (!(prevSibling instanceof XmlToken)) break;\n                    tagEndStart = (XmlToken)prevSibling;\n                  }\n\n                  final PsiElement parent = tagEndStart.getParent();\n                  parent.deleteChildRange(tagEndStart,parent.getLastChild());\n                }\n\n                public boolean startInWriteAction() {\n                  return true;\n                }\n              }, null);\n            } else {\n              IntentionAction intentionAction = new RenameTagBeginOrEndIntentionAction(tag, name, false);\n              IntentionAction intentionAction2 = new RenameTagBeginOrEndIntentionAction(tag, text, true);\n  \n              QuickFixAction.registerQuickFixAction(highlightInfo, intentionAction, null);\n              QuickFixAction.registerQuickFixAction(highlightInfo, startTagNameToken.getTextRange(), intentionAction2, null);\n            }\n\n            return false;\n          }\n          else {\n            startTagNameToken = xmlToken;\n          }\n        }\n      }\n    }\n\n    if (tag instanceof HtmlTag &&\n        ( HtmlUtil.isOptionalEndForHtmlTag(name) ||\n          HtmlUtil.isSingleHtmlTag(name)\n        )\n       ) {\n      return true;\n    }\n    return false;\n  }","commit_id":"9ae9cb930128b7633b83d87cd900bfe218d01cbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ExecCommand readInput(Exchange exchange, ExecEndpoint endpoint) {\r\n        ObjectHelper.notNull(exchange, \"exchange\");\r\n        ObjectHelper.notNull(endpoint, \"endpoint\");\r\n\r\n        String cmd = getAndRemoveHeader(exchange.getIn(), EXEC_COMMAND_EXECUTABLE, endpoint.getExecutable(), String.class);\r\n        String args = getAndRemoveHeader(exchange.getIn(), EXEC_COMMAND_ARGS, endpoint.getArgs(), String.class);\r\n        String dir = getAndRemoveHeader(exchange.getIn(), EXEC_COMMAND_WORKING_DIR, endpoint.getWorkingDir(), String.class);\r\n        long timeout = getAndRemoveHeader(exchange.getIn(), EXEC_COMMAND_TIMEOUT, endpoint.getTimeout(), Long.class);\r\n        String outFilePath = getAndRemoveHeader(exchange.getIn(), EXEC_COMMAND_OUT_FILE, endpoint.getOutFile(), String.class);\r\n        InputStream input = exchange.getIn().getBody(InputStream.class);\r\n\r\n        List<String> argsList = splitToWhiteSpaceSeparatedTokens(args);\r\n        File outFile = outFilePath == null ? null : new File(outFilePath);\r\n        return new ExecCommand(cmd, argsList, dir, timeout, input, outFile);\r\n    }","id":54242,"modified_method":"@SuppressWarnings(\"unchecked\")\r\n    public ExecCommand readInput(Exchange exchange, ExecEndpoint endpoint) {\r\n        ObjectHelper.notNull(exchange, \"exchange\");\r\n        ObjectHelper.notNull(endpoint, \"endpoint\");\r\n\r\n        String cmd = getAndRemoveHeader(exchange.getIn(), EXEC_COMMAND_EXECUTABLE, endpoint.getExecutable(), String.class);\r\n        List<String> argsList = getAndRemoveHeader(exchange.getIn(), EXEC_COMMAND_ARGS, null, List.class);\r\n        String dir = getAndRemoveHeader(exchange.getIn(), EXEC_COMMAND_WORKING_DIR, endpoint.getWorkingDir(), String.class);\r\n        long timeout = getAndRemoveHeader(exchange.getIn(), EXEC_COMMAND_TIMEOUT, endpoint.getTimeout(), Long.class);\r\n        String outFilePath = getAndRemoveHeader(exchange.getIn(), EXEC_COMMAND_OUT_FILE, endpoint.getOutFile(), String.class);\r\n        InputStream input = exchange.getIn().getBody(InputStream.class);\r\n\r\n        if (argsList == null) {\r\n            // do the URI parsing, only if the arguments are not set\r\n            argsList = splitToWhiteSpaceSeparatedTokens(endpoint.getArgs());\r\n        }\r\n\r\n        File outFile = outFilePath == null ? null : new File(outFilePath);\r\n        return new ExecCommand(cmd, argsList, dir, timeout, input, outFile);\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"/**\r\n     * Transforms an exec command to a {@link CommandLine}\r\n     * \r\n     * @param execCommand\r\n     * @return a {@link CommandLine} object\r\n     */\r\n    protected CommandLine toCommandLine(ExecCommand execCommand) {\r\n        CommandLine cl = new CommandLine(execCommand.getExecutable());\r\n        List<String> args = execCommand.getArgs();\r\n        for (String arg : args) {\r\n            // do not handle quoting here, it is already quoted\r\n            cl.addArgument(arg, false);\r\n        }\r\n        return cl;\r\n    }","id":54243,"modified_method":"/**\r\n     * Transforms an {@link ExecCommand} to a {@link CommandLine}. No quoting fo\r\n     * the arguments is used.\r\n     * \r\n     * @param execCommand a not-null <code>ExecCommand<\/code> instance.\r\n     * @return a {@link CommandLine} object.\r\n     */\r\n    protected CommandLine toCommandLine(ExecCommand execCommand) {\r\n        notNull(execCommand, \"execCommand\");\r\n        CommandLine cl = new CommandLine(execCommand.getExecutable());\r\n        List<String> args = execCommand.getArgs();\r\n        for (String arg : args) {\r\n            // do not handle quoting here, it is already quoted\r\n            cl.addArgument(arg, false);\r\n        }\r\n        return cl;\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"public ExecResult execute(ExecCommand command) {\r\n        ObjectHelper.notNull(command, \"command\");\r\n\r\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\r\n        ByteArrayOutputStream err = new ByteArrayOutputStream();\r\n\r\n        ExecResult result = new ExecResult(command);\r\n\r\n        DefaultExecutor executor = prepareDefaultExecutor(command);\r\n        // handle error and output of the process and write them to the given\r\n        // out stream\r\n        PumpStreamHandler handler = new PumpStreamHandler(out, err, command.getInput());\r\n        executor.setStreamHandler(handler);\r\n\r\n        CommandLine cl = toCommandLine(command);\r\n\r\n        try {\r\n            int exitValue = executor.execute(cl);\r\n\r\n            result.setExitValue(exitValue);\r\n            result.setStdout(new ByteArrayInputStream(out.toByteArray()));\r\n            result.setStderr(new ByteArrayInputStream(err.toByteArray()));\r\n            return result;\r\n\r\n        } catch (ExecuteException ee) {\r\n            LOG.error(\"ExecuteExeption while executing \" + command.toString());\r\n            throw new ExecException(\"Failed to execute command \" + command, ee);\r\n        } catch (IOException ioe) {\r\n            // invalid working dir\r\n            LOG.error(\"IOException while executing \" + command.toString());\r\n            throw new ExecException(\"Unable to execute command \" + command, ioe);\r\n        } finally {\r\n            // the inputStream must be closed after the execution\r\n            IOUtils.closeQuietly(command.getInput());\r\n        }\r\n    }","id":54244,"modified_method":"public ExecResult execute(ExecCommand command) {\r\n        notNull(command, \"command\");\r\n\r\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\r\n        ByteArrayOutputStream err = new ByteArrayOutputStream();\r\n\r\n        DefaultExecutor executor = prepareDefaultExecutor(command);\r\n        // handle error and output of the process and write them to the given\r\n        // out stream\r\n        PumpStreamHandler handler = new PumpStreamHandler(out, err, command.getInput());\r\n        executor.setStreamHandler(handler);\r\n\r\n        CommandLine cl = toCommandLine(command);\r\n\r\n        try {\r\n            int exitValue = executor.execute(cl);\r\n            // if the size is zero, we have no output, so construct the result\r\n            // with null (required by ExecResult)\r\n            InputStream stdout = out.size() == 0 ? null : new ByteArrayInputStream(out.toByteArray());\r\n            InputStream stderr = err.size() == 0 ? null : new ByteArrayInputStream(err.toByteArray());\r\n            ExecResult result = new ExecResult(command, stdout, stderr, exitValue);\r\n            return result;\r\n\r\n        } catch (ExecuteException ee) {\r\n            LOG.error(\"ExecuteExeption while executing \" + command.toString());\r\n            throw new ExecException(\"Failed to execute command \" + command, ee);\r\n        } catch (IOException ioe) {\r\n            // invalid working dir\r\n            LOG.error(\"IOException while executing \" + command.toString());\r\n            throw new ExecException(\"Unable to execute command \" + command, ioe);\r\n        } finally {\r\n            // the inputStream must be closed after the execution\r\n            IOUtils.closeQuietly(command.getInput());\r\n        }\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"public ExecResult execute(ExecCommand command) {\r\n\r\n        lastCommandResult = new ExecResult(command);\r\n        lastCommandResult.setStdout(new ByteArrayInputStream(STD_OUT_VALUE.getBytes()));\r\n        lastCommandResult.setExitValue(0);\r\n        return lastCommandResult;\r\n    }","id":54245,"modified_method":"public ExecResult execute(ExecCommand command) {\r\n\r\n        lastCommandResult = new ExecResult(command, new ByteArrayInputStream(STD_OUT_VALUE.getBytes()), null, 0);\r\n        return lastCommandResult;\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"/**\r\n     * Sets the arguments of the executable application\r\n     * \r\n     * @param args Returns <code>null<\/code> value if no arguments are\r\n     *            configured in the endpoint URI\r\n     */\r\n    public void setArgs(String args) {\r\n        this.args = args;\r\n    }","id":54246,"modified_method":"/**\r\n     * Sets the arguments of the executable application\r\n     * \r\n     * @param args Returns <code>null<\/code> value if no arguments are\r\n     *            configured in the endpoint URI\r\n     * @see #getArgs()\r\n     * @see ExecBinding#EXEC_COMMAND_ARGS\r\n     */\r\n    public void setArgs(String args) {\r\n        this.args = args;\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"/**\r\n     * @return the arguments of the executable application, as configured from\r\n     *         the endpoint URI\r\n     * @see ExecBinding#EXEC_COMMAND_ARGS\r\n     */\r\n    public String getArgs() {\r\n        return args;\r\n    }","id":54247,"modified_method":"/**\r\n     * The arguments may be one or many whitespace-separated tokens, that can be\r\n     * quoted with \", e.g. <code>args=\"arg 1\" arg2\"<\/code> will use two arguments\r\n     * <code>arg 1<\/code> and <code>arg2<\/code>. To include the quotes use\r\n     * <code>\"\"<\/code><br>\r\n     * , e.g. <code>args=\"\"arg 1\"\" arg2<\/code> will use the arguments\r\n     * <code>\"arg 1\"<\/code> and <code>arg2<\/code>.\r\n     * \r\n     * @return the arguments of the executable application, as configured from\r\n     *         the endpoint URI.\r\n     * @see ExecBinding#EXEC_COMMAND_ARGS\r\n     * @see ExecParseUtils#splitToWhiteSpaceSeparatedTokens(String)\r\n     */\r\n    public String getArgs() {\r\n        return args;\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"@Test\r\n    @DirtiesContext\r\n    public void testCreateEndpointEscapedCommand() throws Exception {\r\n        String executable = \"\\\"C:/Program Files/test/text.exe\\\"\";\r\n        String uri = \"exec:\" + executable;\r\n\r\n        ExecEndpoint endpoint = createExecEndpoint(uri);\r\n\r\n        assertNull(endpoint.getArgs());\r\n        assertNull(endpoint.getWorkingDir());\r\n        assertNotNull(endpoint.getCommandExecutor());\r\n\r\n        assertEquals(executable, endpoint.getExecutable());\r\n    }","id":54248,"modified_method":"@Test\r\n    @DirtiesContext\r\n    public void testCreateEndpointEscapedCommand() throws Exception {\r\n        String executable = \"C:/Program Files/test/text.exe\";\r\n        String uri = \"exec:\" + executable;\r\n\r\n        ExecEndpoint endpoint = createExecEndpoint(uri);\r\n\r\n        assertNull(endpoint.getArgs());\r\n        assertNull(endpoint.getWorkingDir());\r\n        assertNotNull(endpoint.getCommandExecutor());\r\n\r\n        assertEquals(executable, endpoint.getExecutable());\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"protected Exchange sendExchange(final Object commandArgument, final long timeout, final String body) {\r\n        final String classpath = \"\\\"\" + System.getProperty(\"java.class.path\") + \"\\\"\";\r\n        final String javaAbsolutePath = buildJavaExecutablePath();\r\n\r\n        return producerTemplate.send(new Processor() {\r\n            public void process(Exchange exchange) throws Exception {\r\n                exchange.getIn().setBody(body);\r\n                exchange.getIn().setHeader(EXEC_COMMAND_EXECUTABLE, javaAbsolutePath);\r\n                exchange.getIn().setHeader(EXEC_COMMAND_TIMEOUT, timeout);\r\n                exchange.getIn().setHeader(EXEC_COMMAND_ARGS, \"-cp\" + classpath + \" \" + EXECUTABLE_PROGRAM_ARG + \" \" + commandArgument.toString());\r\n            }\r\n        });\r\n    }","id":54249,"modified_method":"protected Exchange sendExchange(final Object commandArgument, final long timeout, final String body) {\r\n        final List<String> args = buildArgs(commandArgument);\r\n        final String javaAbsolutePath = buildJavaExecutablePath();\r\n        \r\n        return producerTemplate.send(new Processor() {\r\n            public void process(Exchange exchange) throws Exception {\r\n                exchange.getIn().setBody(body);\r\n                exchange.getIn().setHeader(EXEC_COMMAND_EXECUTABLE, javaAbsolutePath);\r\n                exchange.getIn().setHeader(EXEC_COMMAND_TIMEOUT, timeout);\r\n                exchange.getIn().setHeader(EXEC_COMMAND_ARGS, args);\r\n            }\r\n        });\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"/**\r\n     * Splits the input line string by {@link #WHITESPACE}. Supports quoting the\r\n     * white-spaces with a {@link #QUOTE_CHAR}. A quote itself can also be\r\n     * quoted with another #{@link #QUOTE_CHAR}. More than two quotes in a\r\n     * sequence is not allowed<br>\r\n     * E.g. The string\r\n     * <code>\"arg 1\"  arg2<code> will return the tokens <code>arg 1<\/code>,\r\n     * <code>arg2<\/code><br>\r\n     * The string\r\n     * <code>\"\"arg 1\"\"  \"arg2\" arg 3<code> will return the tokens <code>\"arg 1\"<\/code>\r\n     * , <code>arg2<\/code>,<code>arg<\/code> and <code>3<\/code> <br>\r\n     * \r\n     * @param input\r\n     * @return a list of {@link #WHITESPACE} separated tokens\r\n     */\r\n    public static List<String> splitToWhiteSpaceSeparatedTokens(String input) {\r\n        if (input == null) {\r\n            return new ArrayList<String>();\r\n        }\r\n        StringTokenizer tokenizer = new StringTokenizer(input.trim(), QUOTE_CHAR + WHITESPACE, true);\r\n        List<String> args = new ArrayList<String>();\r\n\r\n        StringBuilder quotedText = new StringBuilder();\r\n\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            if (QUOTE_CHAR.equals(token)) {\r\n                // if we have a quote, add the next tokens to the quoted text\r\n                // until the quoting has finished\r\n                quotedText.append(QUOTE_CHAR);\r\n                String buffer = quotedText.toString();\r\n                if (isSingleQuoted(buffer) || isDoubleQuoted(buffer)) {\r\n                    args.add(buffer.substring(1, buffer.length() - 1));\r\n                    quotedText = new StringBuilder();\r\n                }\r\n            } else if (WHITESPACE.equals(token)) {\r\n                // a white space, if in quote, add the white space, otherwise\r\n                // skip it\r\n                if (quotedText.length() > 0) {\r\n                    quotedText.append(WHITESPACE);\r\n                }\r\n            } else {\r\n                if (quotedText.length() > 0) {\r\n                    quotedText.append(token);\r\n                } else {\r\n                    args.add(token);\r\n                }\r\n            }\r\n        }\r\n        if (quotedText.length() > 0) {\r\n            throw new IllegalArgumentException(\"Invalid quoting found in args \" + quotedText);\r\n        }\r\n        return args;\r\n    }","id":54250,"modified_method":"/**\r\n     * Splits the input line string by {@link #WHITESPACE}. Supports quoting the\r\n     * white-spaces with a {@link #QUOTE_CHAR}. A quote itself can also be\r\n     * enclosed within #{@link #QUOTE_CHAR}#{@link #QUOTE_CHAR}. More than two\r\n     * double-quotes in a sequence is not allowed. Nested quotes are not\r\n     * allowed.<br>\r\n     * E.g. The string\r\n     * <code>\"arg 1\"  arg2<code> will return the tokens <code>arg 1<\/code>,\r\n     * <code>arg2<\/code><br>\r\n     * The string\r\n     * <code>\"\"arg 1\"\"  \"arg2\" arg 3<code> will return the tokens <code>\"arg 1\"<\/code>\r\n     * , <code>arg2<\/code>,<code>arg<\/code> and <code>3<\/code> <br>\r\n     * \r\n     * @param input the input to split.\r\n     * @return a not-null list of tokens\r\n     */\r\n    public static List<String> splitToWhiteSpaceSeparatedTokens(String input) {\r\n        if (input == null) {\r\n            return new ArrayList<String>();\r\n        }\r\n        StringTokenizer tokenizer = new StringTokenizer(input.trim(), QUOTE_CHAR + WHITESPACE, true);\r\n        List<String> tokens = new ArrayList<String>();\r\n\r\n        StringBuilder quotedText = new StringBuilder();\r\n\r\n        while (tokenizer.hasMoreTokens()) {\r\n            String token = tokenizer.nextToken();\r\n            if (QUOTE_CHAR.equals(token)) {\r\n                // if we have a quote, add the next tokens to the quoted text\r\n                // until the quoting has finished\r\n                quotedText.append(QUOTE_CHAR);\r\n                String buffer = quotedText.toString();\r\n                if (isSingleQuoted(buffer) || isDoubleQuoted(buffer)) {\r\n                    tokens.add(buffer.substring(1, buffer.length() - 1));\r\n                    quotedText = new StringBuilder();\r\n                }\r\n            } else if (WHITESPACE.equals(token)) {\r\n                // a white space, if in quote, add the white space, otherwise\r\n                // skip it\r\n                if (quotedText.length() > 0) {\r\n                    quotedText.append(WHITESPACE);\r\n                }\r\n            } else {\r\n                if (quotedText.length() > 0) {\r\n                    quotedText.append(token);\r\n                } else {\r\n                    tokens.add(token);\r\n                }\r\n            }\r\n        }\r\n        if (quotedText.length() > 0) {\r\n            throw new IllegalArgumentException(\"Invalid quoting found in args \" + quotedText);\r\n        }\r\n        return tokens;\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"/**\r\n     * Tests if the input is enclosed within {@link #QUOTE_CHAR} characters\r\n     * \r\n     * @param input a not null String\r\n     * @return\r\n     */\r\n    protected static boolean isSingleQuoted(String input) {\r\n        if (input == null || input.trim().length() == 0) {\r\n            return false;\r\n        }\r\n        return input.matches(\"(^\" + QUOTE_CHAR + \"{1}([^\" + QUOTE_CHAR + \"]+)\" + QUOTE_CHAR + \"{1})\");\r\n    }","id":54251,"modified_method":"/**\r\n     * Tests if the input is enclosed within {@link #QUOTE_CHAR} characters\r\n     * \r\n     * @param input a not null String\r\n     * @return true if the regular expression is matched\r\n     */\r\n    protected static boolean isSingleQuoted(String input) {\r\n        if (input == null || input.trim().length() == 0) {\r\n            return false;\r\n        }\r\n        return input.matches(\"(^\" + QUOTE_CHAR + \"{1}([^\" + QUOTE_CHAR + \"]+)\" + QUOTE_CHAR + \"{1})\");\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"public void process(Exchange exchange) throws Exception {\r\n        ExecCommand execCommand = getBinding().readInput(exchange, endpoint);\r\n\r\n        if (log.isInfoEnabled()) {\r\n            log.info(\"Executing \" + execCommand);\r\n        }\r\n        ExecResult result = endpoint.getCommandExecutor().execute(execCommand);\r\n        ObjectHelper.notNull(result, \"The command executor must return a not-null result\");\r\n        log(result);\r\n        getBinding().writeOutput(exchange, result);\r\n    }","id":54252,"modified_method":"public void process(Exchange exchange) throws Exception {\r\n        ExecCommand execCommand = getBinding().readInput(exchange, endpoint);\r\n\r\n        if (log.isInfoEnabled()) {\r\n            log.info(\"Executing \" + execCommand);\r\n        }\r\n        ExecResult result = endpoint.getCommandExecutor().execute(execCommand);\r\n        ObjectHelper.notNull(result, \"The command executor must return a not-null result\");\r\n        if (log.isInfoEnabled()) {\r\n            log.info(\"The command \" + execCommand + \" had exit value \" + result.getExitValue());\r\n        } else if (log.isErrorEnabled() && result.getExitValue() != 0) {\r\n            log.error(\"The command \" + execCommand + \" returned exit value \" + result.getExitValue());\r\n        }\r\n        getBinding().writeOutput(exchange, result);\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"@Test\r\n    @DirtiesContext\r\n    public void testOverrideArgs() {\r\n        final String[] args = {\"-version\", \"\\\"classpath:c:/program files/test/\\\"\"};\r\n        producerTemplate.send(new Processor() {\r\n\r\n            public void process(Exchange exchange) throws Exception {\r\n                exchange.getIn().setBody(\"noinput\");\r\n                exchange.getIn().setHeader(EXEC_COMMAND_ARGS, args[0] + \" \" + args[1]);\r\n            }\r\n        });\r\n        List<String> commandArgs = execCommandExecutorMock.lastCommandResult.getCommand().getArgs();\r\n\r\n        assertEquals(args[0], commandArgs.get(0));\r\n        String secondArgEscaped = args[1].substring(1, args[1].length() - 1);\r\n        assertEquals(secondArgEscaped, commandArgs.get(1));\r\n    }","id":54253,"modified_method":"/**\r\n     * Tests that the args are set literally.\r\n     */\r\n    @Test\r\n    @DirtiesContext\r\n    public void testOverrideArgs() {\r\n        final String[] args = {\"-version\", \"classpath:c:/program files/test/\"};\r\n        producerTemplate.send(new Processor() {\r\n\r\n            public void process(Exchange exchange) throws Exception {\r\n                exchange.getIn().setBody(\"noinput\");\r\n                exchange.getIn().setHeader(EXEC_COMMAND_ARGS, Arrays.asList(args));\r\n            }\r\n        });\r\n        List<String> commandArgs = execCommandExecutorMock.lastCommandResult.getCommand().getArgs();\r\n\r\n        assertEquals(args[0], commandArgs.get(0));\r\n        assertEquals(args[1], commandArgs.get(1));\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"public ExecResult(ExecCommand command) {\r\n        this.command = command;\r\n        this.stdout = new ByteArrayInputStream(new byte[0]);\r\n        this.stderr = new ByteArrayInputStream(new byte[0]);\r\n    }","id":54254,"modified_method":"/**\r\n     * Creates a <code>ExecResult<\/code> instance.\r\n     * \r\n     * @param command A not-null reference of {@link ExecCommand}, that produced\r\n     *            the result.\r\n     * @param stdout InputStream with the stdout of the command executable. If\r\n     *            there was no stdout, the value must be <code>null<\/code>.\r\n     * @param stderr InputStream with the stderr of the command executable. If\r\n     *            there was no stderr, the value must be <code>null<\/code>.\r\n     * @param exitValue the exit value of the command executable.\r\n     */\r\n    public ExecResult(ExecCommand command, InputStream stdout, InputStream stderr, int exitValue) {\r\n        notNull(command, \"command\");\r\n        this.command = command;\r\n\r\n        this.stdout = stdout;\r\n        this.stderr = stderr;\r\n        this.exitValue = exitValue;\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"/**\r\n     * If the ExecResult contains out file,\r\n     * <code>InputStream<code> with the output of the <code>execResult<\/code>.\r\n     * If there is {@link ExecCommand#getOutFile()}, its content is preferred to\r\n     * {@link ExecResult#getStdout()}\r\n     * \r\n     * @param execResult ExecResult object.\r\n     * @return InputStream object\r\n     * @throws FileNotFoundException if the {@link ExecResult#getOutFile()} is\r\n     *             not <code>null<\/code>, but can not be found\r\n     */\r\n    public static InputStream toInputStream(ExecResult execResult) throws FileNotFoundException {\r\n        if (execResult == null) {\r\n            LOG.error(\"Unable to convert a null exec result!\");\r\n            return null;\r\n        }\r\n        InputStream resultVal = execResult.getStdout();\r\n        // prefer generic file conversion\r\n        if (execResult.getCommand().getOutFile() != null) {\r\n            resultVal = new FileInputStream(execResult.getCommand().getOutFile());\r\n        }\r\n        return resultVal;\r\n    }","id":54255,"modified_method":"/**\r\n     * If the ExecResult contains out file,\r\n     * <code>InputStream<code> with the output of the <code>execResult<\/code>.\r\n     * If there is {@link ExecCommand#getOutFile()}, its content is preferred to\r\n     * {@link ExecResult#getStdout()}. Returns <code>null<\/code> if the stdout\r\n     * is null, or if the <code>execResult<\/code> is <code>null<\/code>.\r\n     * \r\n     * @param execResult ExecResult object.\r\n     * @return InputStream object if the output of the executable.\r\n     * @throws FileNotFoundException if the {@link ExecCommand#getOutFile()} is\r\n     *             not <code>null<\/code>, but can not be found\r\n     */\r\n    public static InputStream toInputStream(ExecResult execResult) throws FileNotFoundException {\r\n        if (execResult == null) {\r\n            LOG.warn(\"Received a null ExecResult instance to convert!\");\r\n            return null;\r\n        }\r\n        // prefer generic file conversion\r\n        if (execResult.getCommand().getOutFile() != null) {\r\n            return new FileInputStream(execResult.getCommand().getOutFile());\r\n        } else {\r\n            if (execResult.getStdout() == null) {\r\n                LOG.warn(\"Received null stdout of the ExecResult for conversion!\");\r\n            }\r\n            return execResult.getStdout();\r\n        }\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"@Converter\r\n    public static byte[] convertToByteArray(ExecResult result, Exchange exchange) throws FileNotFoundException {\r\n        return convertTo(byte[].class, exchange, result);\r\n    }","id":54256,"modified_method":"@Converter\r\n    public static byte[] convertToByteArray(ExecResult result, Exchange exchange) throws FileNotFoundException, IOException {\r\n        return IOUtils.toByteArray(toInputStream(result));\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"/**\r\n     * TODO <b>the test is ignored for now to prevent accidental build\r\n     * failures.<\/b> Java 1.5 does not offer a method to check if a file is\r\n     * executable there is only a canRead method, which is not enough to\r\n     * guarantee that the script can be executed. <br>\r\n     * \r\n     * @throws Exception\r\n     */\r\n    @Test\r\n    @DirtiesContext\r\n    @Ignore\r\n    public void testExecuteScript() throws Exception {\r\n        File scriptFile = getExecScriptFileOrNull(\"exec-test-script\");\r\n        if (scriptFile != null) {\r\n            String classpathArg = getClasspathArg();\r\n            Exchange exchange = executeScript(scriptFile, NO_TIMEOUT, classpathArg, PRINT_IN_STDOUT);\r\n            if (exchange != null) {\r\n                String out = (String)exchange.getIn().getHeader(EXEC_STDOUT);\r\n                String err = (String)exchange.getIn().getHeader(EXEC_STDERR);\r\n\r\n                assertNotNull(out);\r\n                assertTrue(out.contains(PRINT_IN_STDOUT));\r\n                assertNull(err);\r\n            }\r\n        } else {\r\n            String os = System.getProperty(\"os.name\");\r\n            logger.warn(\"Executing batch scripts is not tested on \" + os);\r\n        }\r\n    }","id":54257,"modified_method":"/**\r\n     * TODO <b>the test is ignored for now to prevent accidental build\r\n     * failures.<\/b> Java 1.5 does not offer a method to check if a file is\r\n     * executable there is only a canRead method, which is not enough to\r\n     * guarantee that the script can be executed. <br>\r\n     * \r\n     * @throws Exception\r\n     */\r\n    @Test\r\n    @DirtiesContext\r\n    @Ignore\r\n    public void testExecuteScript() throws Exception {\r\n        File scriptFile = getExecScriptFileOrNull(\"exec-test-script\");\r\n        if (scriptFile != null) {\r\n            String classpathArg = getClasspathArg();\r\n            Exchange exchange = executeScript(scriptFile, NO_TIMEOUT, classpathArg, PRINT_IN_STDOUT);\r\n            if (exchange != null) {\r\n                String out = (String)exchange.getIn().getBody(String.class);\r\n                String err = (String)exchange.getIn().getHeader(EXEC_STDERR);\r\n\r\n                assertNotNull(out);\r\n                assertTrue(out.contains(PRINT_IN_STDOUT));\r\n                assertNull(err);\r\n            }\r\n        } else {\r\n            String os = System.getProperty(\"os.name\");\r\n            logger.warn(\"Executing batch scripts is not tested on \" + os);\r\n        }\r\n    }","commit_id":"093e8d88867d135710da36972813b27589c6e38e","url":"https://github.com/apache/camel"},{"original_method":"public List<String> getEffectiveJvmArgs() {\n        return jvmOptions.getAllJvmArgsWithoutSystemProperties();\n    }","id":54258,"modified_method":"public List<String> getEffectiveJvmArgs() {\n        List<String> jvmArgs = jvmOptions.getAllJvmArgsWithoutSystemProperties();\n\n        // GRADLE-2099 - forward on the default platform encoding to the daemon.\n        //\n        // The \u201cfile.encoding\u201d system property is not part of the JVM standard, but both the\n        // Sun and IBM JVMs support this system property. We should at some point abstract this\n        // behind the Jvm class though.\n        //\n        // We also need a more sophisticated mechanism because the default charset of the client\n        // may not necessarily be the desired charset of the daemon.\n        jvmArgs.add(String.format(\"-Dfile.encoding=%s\", Charset.defaultCharset().name()));\n\n        return jvmArgs;\n    }","commit_id":"a9117fc9cc96ff2930e6a93bd8176897985838dd","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    protected List<String> getAllArgs() {\n        List<String> originalArgs = super.getAllArgs();\n\n        List<String> args = new ArrayList<String>();\n        args.add(\"--daemon\");\n        args.add(\"-Dorg.gradle.daemon.idletimeout=\" + (5 * 60 * 1000));\n        if (daemonBaseDir != null) {\n            args.add(\"-Dorg.gradle.daemon.registry.base=\" + daemonBaseDir.getAbsolutePath());\n        } else {\n            String customDaemonRegistryDir = System.getProperty(DAEMON_REGISTRY_SYS_PROP);\n            if (customDaemonRegistryDir != null && !distribution.isUsingIsolatedDaemons()) {\n                args.add(\"-Dorg.gradle.daemon.registry.base=\" + customDaemonRegistryDir);\n            }\n        }\n        \n        args.addAll(originalArgs);\n\n        // TODO - clean this up. It's a workaround to provide some way for the client of this executer to\n        // specify that no jvm args should be provided\n        if(!args.remove(\"-Dorg.gradle.jvmargs=\")){\n            args.add(0, \"-Dorg.gradle.jvmargs=-ea -XX:MaxPermSize=256m\");\n        }\n\n        return args;\n    }","id":54259,"modified_method":"@Override\n    protected List<String> getAllArgs() {\n        List<String> originalArgs = super.getAllArgs();\n\n        List<String> args = new ArrayList<String>();\n        args.add(\"--daemon\");\n        args.add(\"-Dorg.gradle.daemon.idletimeout=\" + (5 * 60 * 1000));\n\n        String daemonRegistryBase = getDaemonRegistryBase();\n        if (daemonRegistryBase != null) {\n            args.add(\"-Dorg.gradle.daemon.registry.base=\" + daemonRegistryBase);\n            configureJvmArgs(args, daemonRegistryBase);\n        } else {\n            configureJvmArgs(args, distribution.getUserHomeDir().getAbsolutePath());\n        }\n        \n        args.addAll(originalArgs);\n\n        return args;\n    }","commit_id":"95707b31f8604c27e5b1a71bbe8dc85a4d4a222a","url":"https://github.com/gradle/gradle"},{"original_method":"public List<String> getEffectiveJvmArgs() {\n        List<String> jvmArgs = jvmOptions.getAllJvmArgsWithoutSystemProperties();\n        if (!jvmArgs.contains(\"-XX:+HeapDumpOnOutOfMemoryError\")) {\n            jvmArgs.add(\"-XX:+HeapDumpOnOutOfMemoryError\");\n            String heapDumpPath = new DaemonDir(baseDir).getVersionedDir().getAbsolutePath();\n            jvmArgs.add(\"-XX:HeapDumpPath=\\\"\" + heapDumpPath + \"\\\"\");\n        }\n        return jvmArgs;\n    }","id":54260,"modified_method":"public List<String> getEffectiveJvmArgs() {\n        return jvmOptions.getAllJvmArgsWithoutSystemProperties();\n    }","commit_id":"95707b31f8604c27e5b1a71bbe8dc85a4d4a222a","url":"https://github.com/gradle/gradle"},{"original_method":"public DaemonParameters() {\n        jvmOptions.setAllJvmArgs(new LinkedList<String>(DEFAULT_JVM_ARGS));\n    }","id":54261,"modified_method":"public DaemonParameters() {\n        jvmOptions.setAllJvmArgs(getDefaultJvmArgs());\n    }","commit_id":"95707b31f8604c27e5b1a71bbe8dc85a4d4a222a","url":"https://github.com/gradle/gradle"},{"original_method":"public InjectorForJavaDescriptorResolver(\n        @NotNull Project project,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptor moduleDescriptor,\n        @NotNull BuiltinsScopeExtensionMode builtinsScopeExtensionMode\n    ) {\n        this.project = project;\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.builtinsScopeExtensionMode = builtinsScopeExtensionMode;\n        this.javaBridgeConfiguration = new JavaBridgeConfiguration();\n        this.javaSemanticServices = new JavaSemanticServices();\n        this.javaDescriptorResolver = new JavaDescriptorResolver();\n        this.psiClassFinder = new PsiClassFinderImpl();\n        this.javaTypeTransformer = new JavaTypeTransformer();\n        this.javaClassResolver = new JavaClassResolver();\n        this.javaAnnotationResolver = new JavaAnnotationResolver();\n        this.javaCompileTimeConstResolver = new JavaCompileTimeConstResolver();\n        this.javaClassObjectResolver = new JavaClassObjectResolver();\n        this.javaNamespaceResolver = new JavaNamespaceResolver();\n        this.javaDescriptorSignatureResolver = new JavaDescriptorSignatureResolver();\n        this.javaConstructorResolver = new JavaConstructorResolver();\n        this.javaValueParameterResolver = new JavaValueParameterResolver();\n        this.javaFunctionResolver = new JavaFunctionResolver();\n        this.javaInnerClassResolver = new JavaInnerClassResolver();\n        this.javaPropertiesResolver = new JavaPropertiesResolver();\n\n        javaBridgeConfiguration.setBuiltinsScopeExtensionMode(builtinsScopeExtensionMode);\n        javaBridgeConfiguration.setJavaSemanticServices(javaSemanticServices);\n        javaBridgeConfiguration.setProject(project);\n\n        this.javaSemanticServices.setDescriptorResolver(javaDescriptorResolver);\n        this.javaSemanticServices.setPsiClassFinder(psiClassFinder);\n        this.javaSemanticServices.setTrace(bindingTrace);\n        this.javaSemanticServices.setTypeTransformer(javaTypeTransformer);\n\n        this.javaDescriptorResolver.setClassResolver(javaClassResolver);\n        this.javaDescriptorResolver.setConstructorResolver(javaConstructorResolver);\n        this.javaDescriptorResolver.setFunctionResolver(javaFunctionResolver);\n        this.javaDescriptorResolver.setInnerClassResolver(javaInnerClassResolver);\n        this.javaDescriptorResolver.setNamespaceResolver(javaNamespaceResolver);\n        this.javaDescriptorResolver.setPropertiesResolver(javaPropertiesResolver);\n\n        this.psiClassFinder.setProject(project);\n\n        javaTypeTransformer.setJavaSemanticServices(javaSemanticServices);\n        javaTypeTransformer.setResolver(javaDescriptorResolver);\n\n        javaClassResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaClassResolver.setClassObjectResolver(javaClassObjectResolver);\n        javaClassResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        javaClassResolver.setNamespaceResolver(javaNamespaceResolver);\n        javaClassResolver.setPsiClassFinder(psiClassFinder);\n        javaClassResolver.setSemanticServices(javaSemanticServices);\n        javaClassResolver.setSignatureResolver(javaDescriptorSignatureResolver);\n        javaClassResolver.setTrace(bindingTrace);\n        javaClassResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaAnnotationResolver.setClassResolver(javaClassResolver);\n        javaAnnotationResolver.setCompileTimeConstResolver(javaCompileTimeConstResolver);\n\n        javaCompileTimeConstResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaCompileTimeConstResolver.setClassResolver(javaClassResolver);\n\n        javaClassObjectResolver.setClassResolver(javaClassResolver);\n        javaClassObjectResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        javaClassObjectResolver.setSemanticServices(javaSemanticServices);\n        javaClassObjectResolver.setTrace(bindingTrace);\n\n        javaNamespaceResolver.setJavaSemanticServices(javaSemanticServices);\n        javaNamespaceResolver.setPsiClassFinder(psiClassFinder);\n        javaNamespaceResolver.setTrace(bindingTrace);\n\n        javaDescriptorSignatureResolver.setJavaSemanticServices(javaSemanticServices);\n\n        javaConstructorResolver.setTrace(bindingTrace);\n        javaConstructorResolver.setTypeTransformer(javaTypeTransformer);\n        javaConstructorResolver.setValueParameterResolver(javaValueParameterResolver);\n\n        javaValueParameterResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaFunctionResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaFunctionResolver.setParameterResolver(javaValueParameterResolver);\n        javaFunctionResolver.setSignatureResolver(javaDescriptorSignatureResolver);\n        javaFunctionResolver.setTrace(bindingTrace);\n        javaFunctionResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaInnerClassResolver.setClassResolver(javaClassResolver);\n\n        javaPropertiesResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaPropertiesResolver.setClassResolver(javaClassResolver);\n        javaPropertiesResolver.setJavaDescriptorSignatureResolver(javaDescriptorSignatureResolver);\n        javaPropertiesResolver.setSemanticServices(javaSemanticServices);\n        javaPropertiesResolver.setTrace(bindingTrace);\n\n        javaBridgeConfiguration.init();\n\n        psiClassFinder.initialize();\n\n    }","id":54262,"modified_method":"public InjectorForJavaDescriptorResolver(\n        @NotNull Project project,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptor moduleDescriptor,\n        @NotNull BuiltinsScopeExtensionMode builtinsScopeExtensionMode\n    ) {\n        this.project = project;\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.builtinsScopeExtensionMode = builtinsScopeExtensionMode;\n        this.javaBridgeConfiguration = new JavaBridgeConfiguration();\n        this.javaSemanticServices = new JavaSemanticServices();\n        this.javaDescriptorResolver = new JavaDescriptorResolver();\n        this.psiClassFinder = new PsiClassFinderImpl();\n        this.javaTypeTransformer = new JavaTypeTransformer();\n        this.javaClassResolver = new JavaClassResolver();\n        this.javaAnnotationResolver = new JavaAnnotationResolver();\n        this.javaCompileTimeConstResolver = new JavaCompileTimeConstResolver();\n        this.javaClassObjectResolver = new JavaClassObjectResolver();\n        this.javaSupertypesResolver = new JavaSupertypesResolver();\n        this.javaNamespaceResolver = new JavaNamespaceResolver();\n        this.javaDescriptorSignatureResolver = new JavaDescriptorSignatureResolver();\n        this.javaConstructorResolver = new JavaConstructorResolver();\n        this.javaValueParameterResolver = new JavaValueParameterResolver();\n        this.javaFunctionResolver = new JavaFunctionResolver();\n        this.javaInnerClassResolver = new JavaInnerClassResolver();\n        this.javaPropertiesResolver = new JavaPropertiesResolver();\n\n        javaBridgeConfiguration.setBuiltinsScopeExtensionMode(builtinsScopeExtensionMode);\n        javaBridgeConfiguration.setJavaSemanticServices(javaSemanticServices);\n        javaBridgeConfiguration.setProject(project);\n\n        this.javaSemanticServices.setDescriptorResolver(javaDescriptorResolver);\n        this.javaSemanticServices.setPsiClassFinder(psiClassFinder);\n        this.javaSemanticServices.setTrace(bindingTrace);\n        this.javaSemanticServices.setTypeTransformer(javaTypeTransformer);\n\n        this.javaDescriptorResolver.setClassResolver(javaClassResolver);\n        this.javaDescriptorResolver.setConstructorResolver(javaConstructorResolver);\n        this.javaDescriptorResolver.setFunctionResolver(javaFunctionResolver);\n        this.javaDescriptorResolver.setInnerClassResolver(javaInnerClassResolver);\n        this.javaDescriptorResolver.setNamespaceResolver(javaNamespaceResolver);\n        this.javaDescriptorResolver.setPropertiesResolver(javaPropertiesResolver);\n\n        this.psiClassFinder.setProject(project);\n\n        javaTypeTransformer.setJavaSemanticServices(javaSemanticServices);\n        javaTypeTransformer.setResolver(javaDescriptorResolver);\n\n        javaClassResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaClassResolver.setClassObjectResolver(javaClassObjectResolver);\n        javaClassResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        javaClassResolver.setNamespaceResolver(javaNamespaceResolver);\n        javaClassResolver.setPsiClassFinder(psiClassFinder);\n        javaClassResolver.setSemanticServices(javaSemanticServices);\n        javaClassResolver.setSignatureResolver(javaDescriptorSignatureResolver);\n        javaClassResolver.setSupertypesResolver(javaSupertypesResolver);\n        javaClassResolver.setTrace(bindingTrace);\n\n        javaAnnotationResolver.setClassResolver(javaClassResolver);\n        javaAnnotationResolver.setCompileTimeConstResolver(javaCompileTimeConstResolver);\n\n        javaCompileTimeConstResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaCompileTimeConstResolver.setClassResolver(javaClassResolver);\n\n        javaClassObjectResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        javaClassObjectResolver.setSemanticServices(javaSemanticServices);\n        javaClassObjectResolver.setSupertypesResolver(javaSupertypesResolver);\n        javaClassObjectResolver.setTrace(bindingTrace);\n\n        javaSupertypesResolver.setClassResolver(javaClassResolver);\n        javaSupertypesResolver.setSemanticServices(javaSemanticServices);\n        javaSupertypesResolver.setTrace(bindingTrace);\n        javaSupertypesResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaNamespaceResolver.setJavaSemanticServices(javaSemanticServices);\n        javaNamespaceResolver.setPsiClassFinder(psiClassFinder);\n        javaNamespaceResolver.setTrace(bindingTrace);\n\n        javaDescriptorSignatureResolver.setJavaSemanticServices(javaSemanticServices);\n\n        javaConstructorResolver.setTrace(bindingTrace);\n        javaConstructorResolver.setTypeTransformer(javaTypeTransformer);\n        javaConstructorResolver.setValueParameterResolver(javaValueParameterResolver);\n\n        javaValueParameterResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaFunctionResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaFunctionResolver.setParameterResolver(javaValueParameterResolver);\n        javaFunctionResolver.setSignatureResolver(javaDescriptorSignatureResolver);\n        javaFunctionResolver.setTrace(bindingTrace);\n        javaFunctionResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaInnerClassResolver.setClassResolver(javaClassResolver);\n\n        javaPropertiesResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaPropertiesResolver.setClassResolver(javaClassResolver);\n        javaPropertiesResolver.setJavaDescriptorSignatureResolver(javaDescriptorSignatureResolver);\n        javaPropertiesResolver.setSemanticServices(javaSemanticServices);\n        javaPropertiesResolver.setTrace(bindingTrace);\n\n        javaBridgeConfiguration.init();\n\n        psiClassFinder.initialize();\n\n    }","commit_id":"b82e85b676491489cbf3f4e83a4d40ec47d6153f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public InjectorForJavaSemanticServices(\n        @NotNull BuiltinsScopeExtensionMode builtinsScopeExtensionMode,\n        @NotNull Project project\n    ) {\n        this.javaSemanticServices = new JavaSemanticServices();\n        this.javaDescriptorResolver = new JavaDescriptorResolver();\n        this.bindingTrace = new org.jetbrains.jet.lang.resolve.BindingTraceContext();\n        this.javaBridgeConfiguration = new JavaBridgeConfiguration();\n        this.psiClassFinder = new PsiClassFinderImpl();\n        this.moduleDescriptor = new org.jetbrains.jet.lang.descriptors.ModuleDescriptor(org.jetbrains.jet.lang.resolve.name.Name.special(\"<dummy>\"));\n        this.builtinsScopeExtensionMode = builtinsScopeExtensionMode;\n        this.project = project;\n        this.javaTypeTransformer = new JavaTypeTransformer();\n        this.javaClassResolver = new JavaClassResolver();\n        this.javaAnnotationResolver = new JavaAnnotationResolver();\n        this.javaCompileTimeConstResolver = new JavaCompileTimeConstResolver();\n        this.javaClassObjectResolver = new JavaClassObjectResolver();\n        this.javaNamespaceResolver = new JavaNamespaceResolver();\n        this.javaDescriptorSignatureResolver = new JavaDescriptorSignatureResolver();\n        this.javaConstructorResolver = new JavaConstructorResolver();\n        this.javaValueParameterResolver = new JavaValueParameterResolver();\n        this.javaFunctionResolver = new JavaFunctionResolver();\n        this.javaInnerClassResolver = new JavaInnerClassResolver();\n        this.javaPropertiesResolver = new JavaPropertiesResolver();\n\n        this.javaSemanticServices.setDescriptorResolver(javaDescriptorResolver);\n        this.javaSemanticServices.setPsiClassFinder(psiClassFinder);\n        this.javaSemanticServices.setTrace(bindingTrace);\n        this.javaSemanticServices.setTypeTransformer(javaTypeTransformer);\n\n        this.javaDescriptorResolver.setClassResolver(javaClassResolver);\n        this.javaDescriptorResolver.setConstructorResolver(javaConstructorResolver);\n        this.javaDescriptorResolver.setFunctionResolver(javaFunctionResolver);\n        this.javaDescriptorResolver.setInnerClassResolver(javaInnerClassResolver);\n        this.javaDescriptorResolver.setNamespaceResolver(javaNamespaceResolver);\n        this.javaDescriptorResolver.setPropertiesResolver(javaPropertiesResolver);\n\n        javaBridgeConfiguration.setBuiltinsScopeExtensionMode(builtinsScopeExtensionMode);\n        javaBridgeConfiguration.setJavaSemanticServices(javaSemanticServices);\n        javaBridgeConfiguration.setProject(project);\n\n        this.psiClassFinder.setProject(project);\n\n        javaTypeTransformer.setJavaSemanticServices(javaSemanticServices);\n        javaTypeTransformer.setResolver(javaDescriptorResolver);\n\n        javaClassResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaClassResolver.setClassObjectResolver(javaClassObjectResolver);\n        javaClassResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        javaClassResolver.setNamespaceResolver(javaNamespaceResolver);\n        javaClassResolver.setPsiClassFinder(psiClassFinder);\n        javaClassResolver.setSemanticServices(javaSemanticServices);\n        javaClassResolver.setSignatureResolver(javaDescriptorSignatureResolver);\n        javaClassResolver.setTrace(bindingTrace);\n        javaClassResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaAnnotationResolver.setClassResolver(javaClassResolver);\n        javaAnnotationResolver.setCompileTimeConstResolver(javaCompileTimeConstResolver);\n\n        javaCompileTimeConstResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaCompileTimeConstResolver.setClassResolver(javaClassResolver);\n\n        javaClassObjectResolver.setClassResolver(javaClassResolver);\n        javaClassObjectResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        javaClassObjectResolver.setSemanticServices(javaSemanticServices);\n        javaClassObjectResolver.setTrace(bindingTrace);\n\n        javaNamespaceResolver.setJavaSemanticServices(javaSemanticServices);\n        javaNamespaceResolver.setPsiClassFinder(psiClassFinder);\n        javaNamespaceResolver.setTrace(bindingTrace);\n\n        javaDescriptorSignatureResolver.setJavaSemanticServices(javaSemanticServices);\n\n        javaConstructorResolver.setTrace(bindingTrace);\n        javaConstructorResolver.setTypeTransformer(javaTypeTransformer);\n        javaConstructorResolver.setValueParameterResolver(javaValueParameterResolver);\n\n        javaValueParameterResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaFunctionResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaFunctionResolver.setParameterResolver(javaValueParameterResolver);\n        javaFunctionResolver.setSignatureResolver(javaDescriptorSignatureResolver);\n        javaFunctionResolver.setTrace(bindingTrace);\n        javaFunctionResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaInnerClassResolver.setClassResolver(javaClassResolver);\n\n        javaPropertiesResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaPropertiesResolver.setClassResolver(javaClassResolver);\n        javaPropertiesResolver.setJavaDescriptorSignatureResolver(javaDescriptorSignatureResolver);\n        javaPropertiesResolver.setSemanticServices(javaSemanticServices);\n        javaPropertiesResolver.setTrace(bindingTrace);\n\n        javaBridgeConfiguration.init();\n\n        psiClassFinder.initialize();\n\n    }","id":54263,"modified_method":"public InjectorForJavaSemanticServices(\n        @NotNull BuiltinsScopeExtensionMode builtinsScopeExtensionMode,\n        @NotNull Project project\n    ) {\n        this.javaSemanticServices = new JavaSemanticServices();\n        this.javaDescriptorResolver = new JavaDescriptorResolver();\n        this.bindingTrace = new org.jetbrains.jet.lang.resolve.BindingTraceContext();\n        this.javaBridgeConfiguration = new JavaBridgeConfiguration();\n        this.psiClassFinder = new PsiClassFinderImpl();\n        this.moduleDescriptor = new org.jetbrains.jet.lang.descriptors.ModuleDescriptor(org.jetbrains.jet.lang.resolve.name.Name.special(\"<dummy>\"));\n        this.builtinsScopeExtensionMode = builtinsScopeExtensionMode;\n        this.project = project;\n        this.javaTypeTransformer = new JavaTypeTransformer();\n        this.javaClassResolver = new JavaClassResolver();\n        this.javaAnnotationResolver = new JavaAnnotationResolver();\n        this.javaCompileTimeConstResolver = new JavaCompileTimeConstResolver();\n        this.javaClassObjectResolver = new JavaClassObjectResolver();\n        this.javaSupertypesResolver = new JavaSupertypesResolver();\n        this.javaNamespaceResolver = new JavaNamespaceResolver();\n        this.javaDescriptorSignatureResolver = new JavaDescriptorSignatureResolver();\n        this.javaConstructorResolver = new JavaConstructorResolver();\n        this.javaValueParameterResolver = new JavaValueParameterResolver();\n        this.javaFunctionResolver = new JavaFunctionResolver();\n        this.javaInnerClassResolver = new JavaInnerClassResolver();\n        this.javaPropertiesResolver = new JavaPropertiesResolver();\n\n        this.javaSemanticServices.setDescriptorResolver(javaDescriptorResolver);\n        this.javaSemanticServices.setPsiClassFinder(psiClassFinder);\n        this.javaSemanticServices.setTrace(bindingTrace);\n        this.javaSemanticServices.setTypeTransformer(javaTypeTransformer);\n\n        this.javaDescriptorResolver.setClassResolver(javaClassResolver);\n        this.javaDescriptorResolver.setConstructorResolver(javaConstructorResolver);\n        this.javaDescriptorResolver.setFunctionResolver(javaFunctionResolver);\n        this.javaDescriptorResolver.setInnerClassResolver(javaInnerClassResolver);\n        this.javaDescriptorResolver.setNamespaceResolver(javaNamespaceResolver);\n        this.javaDescriptorResolver.setPropertiesResolver(javaPropertiesResolver);\n\n        javaBridgeConfiguration.setBuiltinsScopeExtensionMode(builtinsScopeExtensionMode);\n        javaBridgeConfiguration.setJavaSemanticServices(javaSemanticServices);\n        javaBridgeConfiguration.setProject(project);\n\n        this.psiClassFinder.setProject(project);\n\n        javaTypeTransformer.setJavaSemanticServices(javaSemanticServices);\n        javaTypeTransformer.setResolver(javaDescriptorResolver);\n\n        javaClassResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaClassResolver.setClassObjectResolver(javaClassObjectResolver);\n        javaClassResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        javaClassResolver.setNamespaceResolver(javaNamespaceResolver);\n        javaClassResolver.setPsiClassFinder(psiClassFinder);\n        javaClassResolver.setSemanticServices(javaSemanticServices);\n        javaClassResolver.setSignatureResolver(javaDescriptorSignatureResolver);\n        javaClassResolver.setSupertypesResolver(javaSupertypesResolver);\n        javaClassResolver.setTrace(bindingTrace);\n\n        javaAnnotationResolver.setClassResolver(javaClassResolver);\n        javaAnnotationResolver.setCompileTimeConstResolver(javaCompileTimeConstResolver);\n\n        javaCompileTimeConstResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaCompileTimeConstResolver.setClassResolver(javaClassResolver);\n\n        javaClassObjectResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        javaClassObjectResolver.setSemanticServices(javaSemanticServices);\n        javaClassObjectResolver.setSupertypesResolver(javaSupertypesResolver);\n        javaClassObjectResolver.setTrace(bindingTrace);\n\n        javaSupertypesResolver.setClassResolver(javaClassResolver);\n        javaSupertypesResolver.setSemanticServices(javaSemanticServices);\n        javaSupertypesResolver.setTrace(bindingTrace);\n        javaSupertypesResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaNamespaceResolver.setJavaSemanticServices(javaSemanticServices);\n        javaNamespaceResolver.setPsiClassFinder(psiClassFinder);\n        javaNamespaceResolver.setTrace(bindingTrace);\n\n        javaDescriptorSignatureResolver.setJavaSemanticServices(javaSemanticServices);\n\n        javaConstructorResolver.setTrace(bindingTrace);\n        javaConstructorResolver.setTypeTransformer(javaTypeTransformer);\n        javaConstructorResolver.setValueParameterResolver(javaValueParameterResolver);\n\n        javaValueParameterResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaFunctionResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaFunctionResolver.setParameterResolver(javaValueParameterResolver);\n        javaFunctionResolver.setSignatureResolver(javaDescriptorSignatureResolver);\n        javaFunctionResolver.setTrace(bindingTrace);\n        javaFunctionResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaInnerClassResolver.setClassResolver(javaClassResolver);\n\n        javaPropertiesResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaPropertiesResolver.setClassResolver(javaClassResolver);\n        javaPropertiesResolver.setJavaDescriptorSignatureResolver(javaDescriptorSignatureResolver);\n        javaPropertiesResolver.setSemanticServices(javaSemanticServices);\n        javaPropertiesResolver.setTrace(bindingTrace);\n\n        javaBridgeConfiguration.init();\n\n        psiClassFinder.initialize();\n\n    }","commit_id":"b82e85b676491489cbf3f4e83a4d40ec47d6153f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public InjectorForTopDownAnalyzerForJvm(\n        @NotNull Project project,\n        @NotNull TopDownAnalysisParameters topDownAnalysisParameters,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptor moduleDescriptor,\n        @NotNull BuiltinsScopeExtensionMode builtinsScopeExtensionMode\n    ) {\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.topDownAnalysisContext = new TopDownAnalysisContext();\n        this.bodyResolver = new BodyResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.descriptorResolver = new DescriptorResolver();\n        this.project = project;\n        this.topDownAnalysisParameters = topDownAnalysisParameters;\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.builtinsScopeExtensionMode = builtinsScopeExtensionMode;\n        this.moduleConfiguration = new JavaBridgeConfiguration();\n        this.javaDescriptorResolver = new JavaDescriptorResolver();\n        this.psiClassFinder = new PsiClassFinderImpl();\n        this.namespaceFactory = new NamespaceFactoryImpl();\n        this.declarationResolver = new DeclarationResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.expressionTypingServices = new ExpressionTypingServices();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.overloadingConflictResolver = new OverloadingConflictResolver();\n        this.importsResolver = new ImportsResolver();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n        this.javaSemanticServices = new JavaSemanticServices();\n        this.javaTypeTransformer = new JavaTypeTransformer();\n        this.javaClassResolver = new JavaClassResolver();\n        this.javaAnnotationResolver = new JavaAnnotationResolver();\n        this.javaCompileTimeConstResolver = new JavaCompileTimeConstResolver();\n        this.javaClassObjectResolver = new JavaClassObjectResolver();\n        this.javaNamespaceResolver = new JavaNamespaceResolver();\n        this.javaDescriptorSignatureResolver = new JavaDescriptorSignatureResolver();\n        this.javaConstructorResolver = new JavaConstructorResolver();\n        this.javaValueParameterResolver = new JavaValueParameterResolver();\n        this.javaFunctionResolver = new JavaFunctionResolver();\n        this.javaInnerClassResolver = new JavaInnerClassResolver();\n        this.javaPropertiesResolver = new JavaPropertiesResolver();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setContext(topDownAnalysisContext);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setNamespaceFactory(namespaceFactory);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        this.topDownAnalysisContext.setTopDownAnalysisParameters(topDownAnalysisParameters);\n\n        this.bodyResolver.setCallResolver(callResolver);\n        this.bodyResolver.setContext(topDownAnalysisContext);\n        this.bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        this.bodyResolver.setDeclarationsChecker(declarationsChecker);\n        this.bodyResolver.setDescriptorResolver(descriptorResolver);\n        this.bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        this.bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        this.bodyResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.bodyResolver.setTrace(bindingTrace);\n\n        this.controlFlowAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.controlFlowAnalyzer.setTrace(bindingTrace);\n\n        this.declarationsChecker.setTrace(bindingTrace);\n\n        this.descriptorResolver.setAnnotationResolver(annotationResolver);\n        this.descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        this.descriptorResolver.setTypeResolver(typeResolver);\n\n        this.moduleConfiguration.setBuiltinsScopeExtensionMode(builtinsScopeExtensionMode);\n        this.moduleConfiguration.setJavaSemanticServices(javaSemanticServices);\n        this.moduleConfiguration.setProject(project);\n\n        javaDescriptorResolver.setClassResolver(javaClassResolver);\n        javaDescriptorResolver.setConstructorResolver(javaConstructorResolver);\n        javaDescriptorResolver.setFunctionResolver(javaFunctionResolver);\n        javaDescriptorResolver.setInnerClassResolver(javaInnerClassResolver);\n        javaDescriptorResolver.setNamespaceResolver(javaNamespaceResolver);\n        javaDescriptorResolver.setPropertiesResolver(javaPropertiesResolver);\n\n        psiClassFinder.setProject(project);\n\n        this.namespaceFactory.setConfiguration(moduleConfiguration);\n        this.namespaceFactory.setModuleDescriptor(moduleDescriptor);\n        this.namespaceFactory.setTrace(bindingTrace);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setContext(topDownAnalysisContext);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setExpressionTypingServices(expressionTypingServices);\n\n        callResolver.setDescriptorResolver(descriptorResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setOverloadingConflictResolver(overloadingConflictResolver);\n        callResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setDescriptorResolver(descriptorResolver);\n        typeResolver.setModuleConfiguration(moduleConfiguration);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        importsResolver.setConfiguration(moduleConfiguration);\n        importsResolver.setContext(topDownAnalysisContext);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        scriptHeaderResolver.setContext(topDownAnalysisContext);\n        scriptHeaderResolver.setDependencyClassByQualifiedNameResolver(javaDescriptorResolver);\n        scriptHeaderResolver.setNamespaceFactory(namespaceFactory);\n        scriptHeaderResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        overloadResolver.setContext(topDownAnalysisContext);\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setContext(topDownAnalysisContext);\n        overrideResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setContext(topDownAnalysisContext);\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setNamespaceFactory(namespaceFactory);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n        scriptBodyResolver.setContext(topDownAnalysisContext);\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n        scriptBodyResolver.setTrace(bindingTrace);\n\n        javaSemanticServices.setDescriptorResolver(javaDescriptorResolver);\n        javaSemanticServices.setPsiClassFinder(psiClassFinder);\n        javaSemanticServices.setTrace(bindingTrace);\n        javaSemanticServices.setTypeTransformer(javaTypeTransformer);\n\n        javaTypeTransformer.setJavaSemanticServices(javaSemanticServices);\n        javaTypeTransformer.setResolver(javaDescriptorResolver);\n\n        javaClassResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaClassResolver.setClassObjectResolver(javaClassObjectResolver);\n        javaClassResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        javaClassResolver.setNamespaceResolver(javaNamespaceResolver);\n        javaClassResolver.setPsiClassFinder(psiClassFinder);\n        javaClassResolver.setSemanticServices(javaSemanticServices);\n        javaClassResolver.setSignatureResolver(javaDescriptorSignatureResolver);\n        javaClassResolver.setTrace(bindingTrace);\n        javaClassResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaAnnotationResolver.setClassResolver(javaClassResolver);\n        javaAnnotationResolver.setCompileTimeConstResolver(javaCompileTimeConstResolver);\n\n        javaCompileTimeConstResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaCompileTimeConstResolver.setClassResolver(javaClassResolver);\n\n        javaClassObjectResolver.setClassResolver(javaClassResolver);\n        javaClassObjectResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        javaClassObjectResolver.setSemanticServices(javaSemanticServices);\n        javaClassObjectResolver.setTrace(bindingTrace);\n\n        javaNamespaceResolver.setJavaSemanticServices(javaSemanticServices);\n        javaNamespaceResolver.setPsiClassFinder(psiClassFinder);\n        javaNamespaceResolver.setTrace(bindingTrace);\n\n        javaDescriptorSignatureResolver.setJavaSemanticServices(javaSemanticServices);\n\n        javaConstructorResolver.setTrace(bindingTrace);\n        javaConstructorResolver.setTypeTransformer(javaTypeTransformer);\n        javaConstructorResolver.setValueParameterResolver(javaValueParameterResolver);\n\n        javaValueParameterResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaFunctionResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaFunctionResolver.setParameterResolver(javaValueParameterResolver);\n        javaFunctionResolver.setSignatureResolver(javaDescriptorSignatureResolver);\n        javaFunctionResolver.setTrace(bindingTrace);\n        javaFunctionResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaInnerClassResolver.setClassResolver(javaClassResolver);\n\n        javaPropertiesResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaPropertiesResolver.setClassResolver(javaClassResolver);\n        javaPropertiesResolver.setJavaDescriptorSignatureResolver(javaDescriptorSignatureResolver);\n        javaPropertiesResolver.setSemanticServices(javaSemanticServices);\n        javaPropertiesResolver.setTrace(bindingTrace);\n\n        moduleConfiguration.init();\n\n        psiClassFinder.initialize();\n\n    }","id":54264,"modified_method":"public InjectorForTopDownAnalyzerForJvm(\n        @NotNull Project project,\n        @NotNull TopDownAnalysisParameters topDownAnalysisParameters,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptor moduleDescriptor,\n        @NotNull BuiltinsScopeExtensionMode builtinsScopeExtensionMode\n    ) {\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.topDownAnalysisContext = new TopDownAnalysisContext();\n        this.bodyResolver = new BodyResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.descriptorResolver = new DescriptorResolver();\n        this.project = project;\n        this.topDownAnalysisParameters = topDownAnalysisParameters;\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.builtinsScopeExtensionMode = builtinsScopeExtensionMode;\n        this.moduleConfiguration = new JavaBridgeConfiguration();\n        this.javaDescriptorResolver = new JavaDescriptorResolver();\n        this.psiClassFinder = new PsiClassFinderImpl();\n        this.namespaceFactory = new NamespaceFactoryImpl();\n        this.declarationResolver = new DeclarationResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.expressionTypingServices = new ExpressionTypingServices();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.overloadingConflictResolver = new OverloadingConflictResolver();\n        this.importsResolver = new ImportsResolver();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n        this.javaSemanticServices = new JavaSemanticServices();\n        this.javaTypeTransformer = new JavaTypeTransformer();\n        this.javaClassResolver = new JavaClassResolver();\n        this.javaAnnotationResolver = new JavaAnnotationResolver();\n        this.javaCompileTimeConstResolver = new JavaCompileTimeConstResolver();\n        this.javaClassObjectResolver = new JavaClassObjectResolver();\n        this.javaSupertypesResolver = new JavaSupertypesResolver();\n        this.javaNamespaceResolver = new JavaNamespaceResolver();\n        this.javaDescriptorSignatureResolver = new JavaDescriptorSignatureResolver();\n        this.javaConstructorResolver = new JavaConstructorResolver();\n        this.javaValueParameterResolver = new JavaValueParameterResolver();\n        this.javaFunctionResolver = new JavaFunctionResolver();\n        this.javaInnerClassResolver = new JavaInnerClassResolver();\n        this.javaPropertiesResolver = new JavaPropertiesResolver();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setContext(topDownAnalysisContext);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setNamespaceFactory(namespaceFactory);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        this.topDownAnalysisContext.setTopDownAnalysisParameters(topDownAnalysisParameters);\n\n        this.bodyResolver.setCallResolver(callResolver);\n        this.bodyResolver.setContext(topDownAnalysisContext);\n        this.bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        this.bodyResolver.setDeclarationsChecker(declarationsChecker);\n        this.bodyResolver.setDescriptorResolver(descriptorResolver);\n        this.bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        this.bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        this.bodyResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.bodyResolver.setTrace(bindingTrace);\n\n        this.controlFlowAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.controlFlowAnalyzer.setTrace(bindingTrace);\n\n        this.declarationsChecker.setTrace(bindingTrace);\n\n        this.descriptorResolver.setAnnotationResolver(annotationResolver);\n        this.descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        this.descriptorResolver.setTypeResolver(typeResolver);\n\n        this.moduleConfiguration.setBuiltinsScopeExtensionMode(builtinsScopeExtensionMode);\n        this.moduleConfiguration.setJavaSemanticServices(javaSemanticServices);\n        this.moduleConfiguration.setProject(project);\n\n        javaDescriptorResolver.setClassResolver(javaClassResolver);\n        javaDescriptorResolver.setConstructorResolver(javaConstructorResolver);\n        javaDescriptorResolver.setFunctionResolver(javaFunctionResolver);\n        javaDescriptorResolver.setInnerClassResolver(javaInnerClassResolver);\n        javaDescriptorResolver.setNamespaceResolver(javaNamespaceResolver);\n        javaDescriptorResolver.setPropertiesResolver(javaPropertiesResolver);\n\n        psiClassFinder.setProject(project);\n\n        this.namespaceFactory.setConfiguration(moduleConfiguration);\n        this.namespaceFactory.setModuleDescriptor(moduleDescriptor);\n        this.namespaceFactory.setTrace(bindingTrace);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setContext(topDownAnalysisContext);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setExpressionTypingServices(expressionTypingServices);\n\n        callResolver.setDescriptorResolver(descriptorResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setOverloadingConflictResolver(overloadingConflictResolver);\n        callResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setDescriptorResolver(descriptorResolver);\n        typeResolver.setModuleConfiguration(moduleConfiguration);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        importsResolver.setConfiguration(moduleConfiguration);\n        importsResolver.setContext(topDownAnalysisContext);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        scriptHeaderResolver.setContext(topDownAnalysisContext);\n        scriptHeaderResolver.setDependencyClassByQualifiedNameResolver(javaDescriptorResolver);\n        scriptHeaderResolver.setNamespaceFactory(namespaceFactory);\n        scriptHeaderResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        overloadResolver.setContext(topDownAnalysisContext);\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setContext(topDownAnalysisContext);\n        overrideResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setContext(topDownAnalysisContext);\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setNamespaceFactory(namespaceFactory);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n        scriptBodyResolver.setContext(topDownAnalysisContext);\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n        scriptBodyResolver.setTrace(bindingTrace);\n\n        javaSemanticServices.setDescriptorResolver(javaDescriptorResolver);\n        javaSemanticServices.setPsiClassFinder(psiClassFinder);\n        javaSemanticServices.setTrace(bindingTrace);\n        javaSemanticServices.setTypeTransformer(javaTypeTransformer);\n\n        javaTypeTransformer.setJavaSemanticServices(javaSemanticServices);\n        javaTypeTransformer.setResolver(javaDescriptorResolver);\n\n        javaClassResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaClassResolver.setClassObjectResolver(javaClassObjectResolver);\n        javaClassResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        javaClassResolver.setNamespaceResolver(javaNamespaceResolver);\n        javaClassResolver.setPsiClassFinder(psiClassFinder);\n        javaClassResolver.setSemanticServices(javaSemanticServices);\n        javaClassResolver.setSignatureResolver(javaDescriptorSignatureResolver);\n        javaClassResolver.setSupertypesResolver(javaSupertypesResolver);\n        javaClassResolver.setTrace(bindingTrace);\n\n        javaAnnotationResolver.setClassResolver(javaClassResolver);\n        javaAnnotationResolver.setCompileTimeConstResolver(javaCompileTimeConstResolver);\n\n        javaCompileTimeConstResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaCompileTimeConstResolver.setClassResolver(javaClassResolver);\n\n        javaClassObjectResolver.setJavaDescriptorResolver(javaDescriptorResolver);\n        javaClassObjectResolver.setSemanticServices(javaSemanticServices);\n        javaClassObjectResolver.setSupertypesResolver(javaSupertypesResolver);\n        javaClassObjectResolver.setTrace(bindingTrace);\n\n        javaSupertypesResolver.setClassResolver(javaClassResolver);\n        javaSupertypesResolver.setSemanticServices(javaSemanticServices);\n        javaSupertypesResolver.setTrace(bindingTrace);\n        javaSupertypesResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaNamespaceResolver.setJavaSemanticServices(javaSemanticServices);\n        javaNamespaceResolver.setPsiClassFinder(psiClassFinder);\n        javaNamespaceResolver.setTrace(bindingTrace);\n\n        javaDescriptorSignatureResolver.setJavaSemanticServices(javaSemanticServices);\n\n        javaConstructorResolver.setTrace(bindingTrace);\n        javaConstructorResolver.setTypeTransformer(javaTypeTransformer);\n        javaConstructorResolver.setValueParameterResolver(javaValueParameterResolver);\n\n        javaValueParameterResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaFunctionResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaFunctionResolver.setParameterResolver(javaValueParameterResolver);\n        javaFunctionResolver.setSignatureResolver(javaDescriptorSignatureResolver);\n        javaFunctionResolver.setTrace(bindingTrace);\n        javaFunctionResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaInnerClassResolver.setClassResolver(javaClassResolver);\n\n        javaPropertiesResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaPropertiesResolver.setClassResolver(javaClassResolver);\n        javaPropertiesResolver.setJavaDescriptorSignatureResolver(javaDescriptorSignatureResolver);\n        javaPropertiesResolver.setSemanticServices(javaSemanticServices);\n        javaPropertiesResolver.setTrace(bindingTrace);\n\n        moduleConfiguration.init();\n\n        psiClassFinder.initialize();\n\n    }","commit_id":"b82e85b676491489cbf3f4e83a4d40ec47d6153f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Inject\n    public void setClassResolver(JavaClassResolver classResolver) {\n        this.classResolver = classResolver;\n    }","id":54265,"modified_method":"@Inject\n    public void setSupertypesResolver(JavaSupertypesResolver supertypesResolver) {\n        this.supertypesResolver = supertypesResolver;\n    }","commit_id":"b82e85b676491489cbf3f4e83a4d40ec47d6153f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Nullable\n    public ResolverClassData createClassObjectDescriptor(\n            @NotNull ClassDescriptor containing,\n            @NotNull PsiClass psiClass\n    ) {\n        DescriptorResolverUtils.checkPsiClassIsNotJet(psiClass);\n\n        if (psiClass.isEnum()) {\n            return createClassObjectDescriptorForEnum(containing, psiClass).getResolverBinaryClassData();\n        }\n\n        if (!DescriptorResolverUtils.isKotlinClass(psiClass)) {\n            return null;\n        }\n\n        // If there's at least one inner enum, we need to create a class object (to put this enum into)\n        for (PsiClass innerClass : psiClass.getInnerClasses()) {\n            if (DescriptorResolverUtils.isInnerEnum(innerClass, containing)) {\n                return createSyntheticClassObject(containing, psiClass).getResolverBinaryClassData();\n            }\n        }\n\n        PsiClass classObjectPsiClass = getInnerClassClassObject(psiClass);\n        if (classObjectPsiClass == null) {\n            return null;\n        }\n\n        final String qualifiedName = classObjectPsiClass.getQualifiedName();\n        assert qualifiedName != null;\n        FqName fqName = new FqName(qualifiedName);\n        ResolverClassData classData = new ClassDescriptorFromJvmBytecode(\n                containing, ClassKind.CLASS_OBJECT, classObjectPsiClass, fqName, javaDescriptorResolver)\n                .getResolverBinaryClassData();\n\n        ClassDescriptorFromJvmBytecode classObjectDescriptor = classData.getClassDescriptor();\n        classObjectDescriptor.setSupertypes(classResolver.getSupertypes(new PsiClassWrapper(classObjectPsiClass), classData,\n                                                                        new ArrayList<TypeParameterDescriptor>(0)));\n        setUpClassObjectDescriptor(containing, fqName, classData, getClassObjectName(containing.getName()));\n        return classObjectDescriptor.getResolverBinaryClassData();\n    }","id":54266,"modified_method":"@Nullable\n    public ResolverClassData createClassObjectDescriptor(\n            @NotNull ClassDescriptor containing,\n            @NotNull PsiClass psiClass\n    ) {\n        DescriptorResolverUtils.checkPsiClassIsNotJet(psiClass);\n\n        if (psiClass.isEnum()) {\n            return createClassObjectDescriptorForEnum(containing, psiClass).getResolverBinaryClassData();\n        }\n\n        if (!DescriptorResolverUtils.isKotlinClass(psiClass)) {\n            return null;\n        }\n\n        // If there's at least one inner enum, we need to create a class object (to put this enum into)\n        for (PsiClass innerClass : psiClass.getInnerClasses()) {\n            if (DescriptorResolverUtils.isInnerEnum(innerClass, containing)) {\n                return createSyntheticClassObject(containing, psiClass).getResolverBinaryClassData();\n            }\n        }\n\n        PsiClass classObjectPsiClass = getInnerClassClassObject(psiClass);\n        if (classObjectPsiClass == null) {\n            return null;\n        }\n\n        final String qualifiedName = classObjectPsiClass.getQualifiedName();\n        assert qualifiedName != null;\n        FqName fqName = new FqName(qualifiedName);\n        ResolverClassData classData = new ClassDescriptorFromJvmBytecode(\n                containing, ClassKind.CLASS_OBJECT, classObjectPsiClass, fqName, javaDescriptorResolver)\n                .getResolverBinaryClassData();\n\n        ClassDescriptorFromJvmBytecode classObjectDescriptor = classData.getClassDescriptor();\n        classObjectDescriptor.setSupertypes(supertypesResolver.getSupertypes(new PsiClassWrapper(classObjectPsiClass), classData,\n                                                                             new ArrayList<TypeParameterDescriptor>(0)));\n        setUpClassObjectDescriptor(containing, fqName, classData, getClassObjectName(containing.getName()));\n        return classObjectDescriptor.getResolverBinaryClassData();\n    }","commit_id":"b82e85b676491489cbf3f4e83a4d40ec47d6153f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    private ResolverClassData doCreateClassDescriptor(\n            @NotNull FqName fqName,\n            @NotNull PsiClass psiClass,\n            @NotNull List<Runnable> taskList,\n            @NotNull ClassOrNamespaceDescriptor containingDeclaration\n    ) {\n        JetClassAnnotation jetClassAnnotation = JetClassAnnotation.get(psiClass);\n        ClassKind kind = getClassKind(psiClass, jetClassAnnotation);\n        ClassDescriptorFromJvmBytecode classDescriptor\n                = new ClassDescriptorFromJvmBytecode(containingDeclaration, kind, psiClass, fqName, javaDescriptorResolver);\n\n        ResolverClassData classData = classDescriptor.getResolverBinaryClassData();\n        classDescriptorCache.put(fqName, classData);\n        classDescriptor.setName(Name.identifier(psiClass.getName()));\n\n        List<JavaDescriptorSignatureResolver.TypeParameterDescriptorInitialization> typeParameterDescriptorInitializations\n                = signatureResolver.createUninitializedClassTypeParameters(psiClass, classData);\n\n        classDescriptor.setTypeParameterDescriptors(getTypeParametersDescriptors(typeParameterDescriptorInitializations));\n        List<JetType> supertypes = Lists.newArrayList();\n        classDescriptor.setSupertypes(supertypes);\n        classDescriptor.setVisibility(DescriptorResolverUtils.resolveVisibility(psiClass, jetClassAnnotation));\n        classDescriptor.setModality(resolveModality(psiClass, classData));\n        classDescriptor.createTypeConstructor();\n        classDescriptor.setScopeForMemberLookup(new JavaClassMembersScope(semanticServices, classData));\n\n        String context = \"class \" + psiClass.getQualifiedName();\n        signatureResolver.initializeTypeParameters(typeParameterDescriptorInitializations, classDescriptor, context);\n\n        // TODO: ugly hack: tests crash if initializeTypeParameters called with class containing proper supertypes\n        List<TypeParameterDescriptor> classTypeParameters = classDescriptor.getTypeConstructor().getParameters();\n        supertypes.addAll(getSupertypes(new PsiClassWrapper(psiClass), classData, classTypeParameters));\n\n        ResolverClassData classObjectData = classObjectResolver.createClassObjectDescriptor(classDescriptor, psiClass);\n        classDescriptorCache.put(DescriptorResolverUtils.getFqNameForClassObject(psiClass), classObjectData);\n        if (classObjectData != null) {\n            ClassDescriptorFromJvmBytecode classObjectDescriptor = classObjectData.getClassDescriptor();\n            classDescriptor.getBuilder().setClassObjectDescriptor(classObjectDescriptor);\n        }\n\n        classDescriptor.setAnnotations(annotationResolver.resolveAnnotations(psiClass, taskList));\n\n        trace.record(BindingContext.CLASS, psiClass, classDescriptor);\n\n        return classData;\n    }","id":54267,"modified_method":"@NotNull\n    private ResolverClassData doCreateClassDescriptor(\n            @NotNull FqName fqName,\n            @NotNull PsiClass psiClass,\n            @NotNull List<Runnable> taskList,\n            @NotNull ClassOrNamespaceDescriptor containingDeclaration\n    ) {\n        JetClassAnnotation jetClassAnnotation = JetClassAnnotation.get(psiClass);\n        ClassKind kind = getClassKind(psiClass, jetClassAnnotation);\n        ClassDescriptorFromJvmBytecode classDescriptor\n                = new ClassDescriptorFromJvmBytecode(containingDeclaration, kind, psiClass, fqName, javaDescriptorResolver);\n\n        ResolverClassData classData = classDescriptor.getResolverBinaryClassData();\n        classDescriptorCache.put(fqName, classData);\n        classDescriptor.setName(Name.identifier(psiClass.getName()));\n\n        List<JavaDescriptorSignatureResolver.TypeParameterDescriptorInitialization> typeParameterDescriptorInitializations\n                = signatureResolver.createUninitializedClassTypeParameters(psiClass, classData);\n\n        classDescriptor.setTypeParameterDescriptors(getTypeParametersDescriptors(typeParameterDescriptorInitializations));\n        List<JetType> supertypes = Lists.newArrayList();\n        classDescriptor.setSupertypes(supertypes);\n        classDescriptor.setVisibility(DescriptorResolverUtils.resolveVisibility(psiClass, jetClassAnnotation));\n        classDescriptor.setModality(resolveModality(psiClass, classData));\n        classDescriptor.createTypeConstructor();\n        classDescriptor.setScopeForMemberLookup(new JavaClassMembersScope(semanticServices, classData));\n\n        String context = \"class \" + psiClass.getQualifiedName();\n        signatureResolver.initializeTypeParameters(typeParameterDescriptorInitializations, classDescriptor, context);\n\n        // TODO: ugly hack: tests crash if initializeTypeParameters called with class containing proper supertypes\n        List<TypeParameterDescriptor> classTypeParameters = classDescriptor.getTypeConstructor().getParameters();\n        supertypes.addAll(supertypesResolver.getSupertypes(new PsiClassWrapper(psiClass), classData, classTypeParameters));\n\n        ResolverClassData classObjectData = classObjectResolver.createClassObjectDescriptor(classDescriptor, psiClass);\n        classDescriptorCache.put(DescriptorResolverUtils.getFqNameForClassObject(psiClass), classObjectData);\n        if (classObjectData != null) {\n            ClassDescriptorFromJvmBytecode classObjectDescriptor = classObjectData.getClassDescriptor();\n            classDescriptor.getBuilder().setClassObjectDescriptor(classObjectDescriptor);\n        }\n\n        classDescriptor.setAnnotations(annotationResolver.resolveAnnotations(psiClass, taskList));\n\n        trace.record(BindingContext.CLASS, psiClass, classDescriptor);\n\n        return classData;\n    }","commit_id":"b82e85b676491489cbf3f4e83a4d40ec47d6153f","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void parseDelegationSpecifier() {\n        PsiBuilder.Marker specifier = mark();\n        parseAttributeList();\n\n        PsiBuilder.Marker delegator = mark();\n        parseTypeRef(); // TODO: Error recovery!!!\n        if (at(BY_KEYWORD)) {\n            advance(); // BY_KEYWORD\n            parseExpression();\n            delegator.done(DELEGATOR_BY);\n        }\n        else if (at(LPAR)) {\n            parseValueParameterList();\n            delegator.done(DELEGATOR_SUPER_CALL);\n        }\n        else {\n            delegator.done(DELEGATOR_SUPER_CLASS);\n        }\n\n        specifier.done(DELEGATION_SPECIFIER);\n    }","id":54268,"modified_method":"private void parseDelegationSpecifier() {\n        PsiBuilder.Marker specifier = mark();\n        parseAttributeList();\n\n        PsiBuilder.Marker delegator = mark();\n        if (at(LPAR)) {\n            error(\"Expecting type name\");\n        }\n        else {\n            parseTypeRef();\n        }\n\n        if (at(BY_KEYWORD)) {\n            advance(); // BY_KEYWORD\n            parseExpression();\n            delegator.done(DELEGATOR_BY);\n        }\n        else if (at(LPAR)) {\n            parseValueArgumentList();\n            delegator.done(DELEGATOR_SUPER_CALL);\n        }\n        else {\n            delegator.done(DELEGATOR_SUPER_CLASS);\n        }\n\n        specifier.done(DELEGATION_SPECIFIER);\n    }","commit_id":"c1edd25802d11cf7a6c23e1d97d5ff162e3b57f0","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void parseDelegationSpecifierList() {\n        PsiBuilder.Marker list = mark();\n\n        while (true) {\n            parseDelegationSpecifier();\n            if (!at(COMMA)) break;\n            advance(); // COMMA\n        }\n\n        list.done(DELEGATION_SPECIFIER_LIST);\n    }","id":54269,"modified_method":"private void parseDelegationSpecifierList() {\n        PsiBuilder.Marker list = mark();\n\n        while (true) {\n            if (at(COMMA)) {\n                errorAndAdvance(\"Expecting a delegation specifier\");\n                continue;\n            }\n            parseDelegationSpecifier();\n            if (!at(COMMA)) break;\n            advance(); // COMMA\n        }\n\n        list.done(DELEGATION_SPECIFIER_LIST);\n    }","commit_id":"c1edd25802d11cf7a6c23e1d97d5ff162e3b57f0","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void parseTopLevelObject() {\n        PsiBuilder.Marker decl = mark();\n        parseModifierList();\n\n        JetToken keywordToken = tt();\n        JetNodeType declType = null;\n        if (keywordToken == NAMESPACE_KEYWORD) {\n            declType = parseNamespaceBlock();\n        }\n        else if (keywordToken == CLASS_KEYWORD) {\n            declType = parseClass();\n        }\n        else if (keywordToken == EXTENSION_KEYWORD) {\n            declType = parseExtension();\n        }\n        else if (keywordToken == FUN_KEYWORD) {\n            declType = parseFunction();\n        }\n        else if (keywordToken == VAL_KEYWORD || keywordToken == VAR_KEYWORD) {\n            declType = parseProperty();\n        }\n        else if (keywordToken == TYPE_KEYWORD) {\n            declType = parseTypedef();\n        }\n\n        if (declType == null) {\n            errorAndAdvance(\"Expecting namespace or top level declaration\");\n            decl.drop();\n        }\n        else {\n            decl.done(declType);\n        }\n    }","id":54270,"modified_method":"private void parseTopLevelObject() {\n        PsiBuilder.Marker decl = mark();\n        parseModifierList();\n\n        JetToken keywordToken = tt();\n        JetNodeType declType = null;\n        if (keywordToken == NAMESPACE_KEYWORD) {\n            declType = parseNamespaceBlock();\n        }\n        else if (keywordToken == CLASS_KEYWORD) {\n            declType = parseClass();\n        }\n        else if (keywordToken == EXTENSION_KEYWORD) {\n            declType = parseExtension();\n        }\n        else if (keywordToken == FUN_KEYWORD) {\n            declType = parseFunction();\n        }\n        else if (keywordToken == VAL_KEYWORD || keywordToken == VAR_KEYWORD) {\n            declType = parseProperty();\n        }\n        else if (keywordToken == TYPE_KEYWORD) {\n            declType = parseTypedef();\n        }\n        else if (keywordToken == DECOMPOSER_KEYWORD) {\n            declType = parseDecomposer();\n        }\n\n        if (declType == null) {\n            errorAndAdvance(\"Expecting namespace or top level declaration\");\n            decl.drop();\n        }\n        else {\n            decl.done(declType);\n        }\n    }","commit_id":"c1edd25802d11cf7a6c23e1d97d5ff162e3b57f0","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void parseValueArgument() {\n        PsiBuilder.Marker argument = mark();\n        if (at(IDENTIFIER) && lookahead(1) == EQ) {\n             advance(); // IDENTIFIER\n             advance(); // EQ\n        }\n        if (at(OUT_KEYWORD) || at(REF_KEYWORD)) advance(); // REF or OUT\n        parseExpression();\n        argument.done(VALUE_ARGUMENT);\n    }","id":54271,"modified_method":"private void parseValueArgument() {\n        PsiBuilder.Marker argument = mark();\n        JetNodeType type = VALUE_ARGUMENT;\n        if (at(IDENTIFIER) && lookahead(1) == EQ) {\n            advance(); // IDENTIFIER\n            advance(); // EQ\n            type = NAMED_ARGUMENT;\n        }\n        if (at(OUT_KEYWORD) || at(REF_KEYWORD)) advance(); // REF or OUT\n        parseExpression();\n        argument.done(type);\n    }","commit_id":"c1edd25802d11cf7a6c23e1d97d5ff162e3b57f0","url":"https://github.com/JetBrains/kotlin"},{"original_method":"List<JCStatement> transform(Tree.ForStatement stmt) {\n        Name tempForFailVariable = currentForFailVariable;\n        \n        at(stmt);\n        List<JCStatement> outer = List.<JCStatement> nil();\n        if (stmt.getElseClause() != null) {\n            // boolean $doforelse$X = true;\n            JCVariableDecl failtest_decl = make().VarDef(make().Modifiers(0), names().fromString(aliasName(\"doforelse\")), make().TypeIdent(TypeTags.BOOLEAN), make().Literal(TypeTags.BOOLEAN, 1));\n            outer = outer.append(failtest_decl);\n            \n            currentForFailVariable = failtest_decl.getName();\n        } else {\n            currentForFailVariable = null;\n        }\n\n        ForIterator iterDecl = stmt.getForClause().getForIterator();\n        Variable variable;\n        Variable variable2;\n        if (iterDecl instanceof ValueIterator) {\n            variable = ((ValueIterator) iterDecl).getVariable();\n            variable2 = null;\n        } else if (iterDecl instanceof KeyValueIterator) {\n            variable = ((KeyValueIterator) iterDecl).getKeyVariable();\n            variable2 = ((KeyValueIterator) iterDecl).getValueVariable();\n        } else {\n            throw new RuntimeException(\"Unknown ForIterator\");\n        }\n        \n        String loop_var_name = variable.getIdentifier().getText();\n        ProducedType sequenceElementType = typeFact().getIteratedType(iterDecl.getSpecifierExpression().getExpression().getTypeModel());\n        ProducedType iter_type = typeFact().getIteratorType(sequenceElementType);\n        JCExpression iter_type_expr = makeJavaType(iter_type, CeylonTransformer.TYPE_ARGUMENT);\n        ProducedType item_type = actualType(variable);\n        JCExpression item_type_expr = makeJavaType(item_type);\n        List<JCAnnotation> annots = makeJavaTypeAnnotations(variable.getDeclarationModel());\n\n        // ceylon.language.Iterator<T> $V$iter$X = ITERABLE.iterator();\n        JCExpression containment = expressionGen().transformExpression(iterDecl.getSpecifierExpression().getExpression(), BoxingStrategy.UNBOXED);\n        JCVariableDecl iter_decl = at(stmt).VarDef(make().Modifiers(0), names().fromString(aliasName(loop_var_name + \"$iter\")), iter_type_expr, at(stmt).Apply(null, makeSelect(containment, \"getIterator\"), List.<JCExpression> nil()));\n        JCIdent iter_id = at(stmt).Ident(iter_decl.getName());\n        \n        // final U n = $V$iter$X.getHead();\n        // or\n        // final U n = $V$iter$X.getHead().getKey();\n        JCExpression iter_head = at(stmt).Apply(null, makeSelect(iter_id, Util.getGetterName(\"head\")), List.<JCExpression> nil());\n        JCExpression loop_var_init;\n        if (variable2 == null) {\n            loop_var_init = iter_head;\n        } else {\n            loop_var_init = at(stmt).Apply(null, makeSelect(iter_head, Util.getGetterName(\"key\")), List.<JCExpression> nil());\n        }\n        JCVariableDecl item_decl = at(stmt).VarDef(make().Modifiers(FINAL, annots), names().fromString(loop_var_name), item_type_expr, unboxType(loop_var_init, item_type));\n        List<JCStatement> for_loop = List.<JCStatement> of(item_decl);\n\n        if (variable2 != null) {\n            // final V n = $V$iter$X.getHead().getElement();\n            JCExpression loop_var_init2 = at(stmt).Apply(null, makeSelect(at(stmt).Apply(null, makeSelect(iter_id, Util.getGetterName(\"head\")), List.<JCExpression> nil()), Util.getGetterName(\"item\")), List.<JCExpression> nil());\n            String loop_var_name2 = variable2.getIdentifier().getText();\n            ProducedType item_type2 = actualType(variable2);\n            JCExpression item_type_expr2 = makeJavaType(item_type2);\n            JCVariableDecl item_decl2 = at(stmt).VarDef(make().Modifiers(FINAL, annots), names().fromString(loop_var_name2), item_type_expr2, unboxType(loop_var_init2, item_type2));\n            for_loop = for_loop.append(item_decl2);\n        }\n\n        // The user-supplied contents of the loop\n        for_loop = for_loop.appendList(transformStmts(stmt.getForClause().getBlock().getStatements()));\n\n        // $V$iter$X = $V$iter$X.getTail();\n        JCExpression step = at(stmt).Assign(iter_id, at(stmt).Apply(null, makeSelect(iter_id, Util.getGetterName(\"tail\")), List.<JCExpression> nil()));\n        \n        // $i$iter$1.getHead() != null;\n        JCExpression cond = at(stmt).Binary(JCTree.NE, iter_head, makeNull());\n        \n        // for (.ceylon.language.Iterator<T> $V$iter$X = ITERABLE.iterator(); $V$iter$X.getHead() != null; $V$iter$X = $V$iter$X.getTail()) {\n        outer = outer.append(at(stmt).ForLoop(\n            List.<JCStatement>of(iter_decl), \n\t        cond, \n\t        List.<JCExpressionStatement>of(at(stmt).Exec(step)), \n\t        at(stmt).Block(0, for_loop)));\n\n        if (stmt.getElseClause() != null) {\n            // The user-supplied contents of fail block\n            List<JCStatement> failblock = transformStmts(stmt.getElseClause().getBlock().getStatements());\n            \n            // if ($doforelse$X) ...\n            JCIdent failtest_id = at(stmt).Ident(currentForFailVariable);\n            outer = outer.append(at(stmt).If(failtest_id, at(stmt).Block(0, failblock), null));\n        }\n        currentForFailVariable = tempForFailVariable;\n\n        return outer;\n    }","id":54272,"modified_method":"List<JCStatement> transform(Tree.ForStatement stmt) {\n        Name tempForFailVariable = currentForFailVariable;\n        \n        at(stmt);\n        List<JCStatement> outer = List.<JCStatement> nil();\n        if (stmt.getElseClause() != null) {\n            // boolean $doforelse$X = true;\n            JCVariableDecl failtest_decl = make().VarDef(make().Modifiers(0), names().fromString(aliasName(\"doforelse\")), make().TypeIdent(TypeTags.BOOLEAN), make().Literal(TypeTags.BOOLEAN, 1));\n            outer = outer.append(failtest_decl);\n            \n            currentForFailVariable = failtest_decl.getName();\n        } else {\n            currentForFailVariable = null;\n        }\n\n        ForIterator iterDecl = stmt.getForClause().getForIterator();\n        Variable variable;\n        Variable variable2;\n        if (iterDecl instanceof ValueIterator) {\n            variable = ((ValueIterator) iterDecl).getVariable();\n            variable2 = null;\n        } else if (iterDecl instanceof KeyValueIterator) {\n            variable = ((KeyValueIterator) iterDecl).getKeyVariable();\n            variable2 = ((KeyValueIterator) iterDecl).getValueVariable();\n        } else {\n            throw new RuntimeException(\"Unknown ForIterator\");\n        }\n        \n        String loop_var_name = variable.getIdentifier().getText();\n        ProducedType sequenceElementType = typeFact().getIteratedType(iterDecl.getSpecifierExpression().getExpression().getTypeModel());\n        ProducedType iter_type = typeFact().getIteratorType(sequenceElementType);\n        JCExpression iter_type_expr = makeJavaType(iter_type, CeylonTransformer.TYPE_ARGUMENT);\n        ProducedType item_type = actualType(variable);\n        JCExpression item_type_expr = makeJavaType(item_type);\n        List<JCAnnotation> annots = makeJavaTypeAnnotations(variable.getDeclarationModel());\n\n        // ceylon.language.Iterator<T> $V$iter$X = ITERABLE.iterator();\n        JCExpression containment = expressionGen().transformExpression(iterDecl.getSpecifierExpression().getExpression(), BoxingStrategy.UNBOXED);\n        JCVariableDecl iter_decl = at(stmt).VarDef(make().Modifiers(0), names().fromString(aliasName(loop_var_name + \"$iter\")), iter_type_expr, at(stmt).Apply(null, makeSelect(containment, \"getIterator\"), List.<JCExpression> nil()));\n        JCIdent iter_id = at(stmt).Ident(iter_decl.getName());\n        \n        // final U n = $V$iter$X.getHead();\n        // or\n        // final U n = $V$iter$X.getHead().getKey();\n        JCExpression iter_head = at(stmt).Apply(null, makeSelect(iter_id, Util.getGetterName(\"head\")), List.<JCExpression> nil());\n        JCExpression loop_var_init;\n        if (variable2 == null) {\n            loop_var_init = iter_head;\n        } else {\n            loop_var_init = at(stmt).Apply(null, makeSelect(iter_head, Util.getGetterName(\"key\")), List.<JCExpression> nil());\n        }\n        JCVariableDecl item_decl = at(stmt).VarDef(make().Modifiers(FINAL, annots), names().fromString(loop_var_name), item_type_expr, unboxType(loop_var_init, item_type));\n        List<JCStatement> for_loop = List.<JCStatement> of(item_decl);\n\n        if (variable2 != null) {\n            // final V n = $V$iter$X.getHead().getElement();\n            JCExpression loop_var_init2 = at(stmt).Apply(null, makeSelect(at(stmt).Apply(null, makeSelect(iter_id, Util.getGetterName(\"head\")), List.<JCExpression> nil()), Util.getGetterName(\"item\")), List.<JCExpression> nil());\n            String loop_var_name2 = variable2.getIdentifier().getText();\n            ProducedType item_type2 = actualType(variable2);\n            JCExpression item_type_expr2 = makeJavaType(item_type2);\n            JCVariableDecl item_decl2 = at(stmt).VarDef(make().Modifiers(FINAL, annots), names().fromString(loop_var_name2), item_type_expr2, unboxType(loop_var_init2, item_type2));\n            for_loop = for_loop.append(item_decl2);\n        }\n\n        // The user-supplied contents of the loop\n        for_loop = for_loop.appendList(transformStmts(stmt.getForClause().getBlock().getStatements()));\n\n        // $V$iter$X = $V$iter$X.getTail();\n        JCExpression step = at(stmt).Assign(iter_id, at(stmt).Apply(null, makeSelect(iter_id, Util.getGetterName(\"tail\")), List.<JCExpression> nil()));\n        \n        // $i$iter$1.getHead() != null;\n        // Watch out that we can't reuse tree bits in different locations, otherwise we break javac, since\n        // it will later on tag each tree bit while walking it and expects each node to be unique\n        // See https://github.com/ceylon/ceylon-compiler/issues/151\n        JCExpression iter_head2 = at(stmt).Apply(null, makeSelect(iter_id, Util.getGetterName(\"head\")), List.<JCExpression> nil());\n        JCExpression cond = at(stmt).Binary(JCTree.NE, iter_head2, makeNull());\n        \n        // for (.ceylon.language.Iterator<T> $V$iter$X = ITERABLE.iterator(); $V$iter$X.getHead() != null; $V$iter$X = $V$iter$X.getTail()) {\n        outer = outer.append(at(stmt).ForLoop(\n            List.<JCStatement>of(iter_decl), \n\t        cond, \n\t        List.<JCExpressionStatement>of(at(stmt).Exec(step)), \n\t        at(stmt).Block(0, for_loop)));\n\n        if (stmt.getElseClause() != null) {\n            // The user-supplied contents of fail block\n            List<JCStatement> failblock = transformStmts(stmt.getElseClause().getBlock().getStatements());\n            \n            // if ($doforelse$X) ...\n            JCIdent failtest_id = at(stmt).Ident(currentForFailVariable);\n            outer = outer.append(at(stmt).If(failtest_id, at(stmt).Block(0, failblock), null));\n        }\n        currentForFailVariable = tempForFailVariable;\n\n        return outer;\n    }","commit_id":"bbaf099fb3804aa925a6f255eb51b8ce53b20925","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"@Nullable\n    private ASTNode getAliasNameNode() {\n        boolean asPassed = false;\n        ASTNode childNode = getNode().getFirstChildNode();\n        while (childNode != null) {\n            IElementType tt = childNode.getElementType();\n            if (tt == JetTokens.AS_KEYWORD) asPassed = true;\n            if (asPassed && tt == JetTokens.IDENTIFIER) {\n                return childNode;\n            }\n\n            childNode = childNode.getTreeNext();\n        }\n        return null;\n    }","id":54273,"modified_method":"@Nullable\n    public ASTNode getAliasNameNode() {\n        boolean asPassed = false;\n        ASTNode childNode = getNode().getFirstChildNode();\n        while (childNode != null) {\n            IElementType tt = childNode.getElementType();\n            if (tt == JetTokens.AS_KEYWORD) asPassed = true;\n            if (asPassed && tt == JetTokens.IDENTIFIER) {\n                return childNode;\n            }\n\n            childNode = childNode.getTreeNext();\n        }\n        return null;\n    }","commit_id":"f71d2584e6680dcd824f4272ea87ac4d34c27646","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public boolean isAllUnder() {\n        return getNode().findChildByType(JetTokens.MAP) != null;\n    }","id":54274,"modified_method":"public boolean isAllUnder() {\n        return getNode().findChildByType(JetTokens.MUL) != null;\n    }","commit_id":"f71d2584e6680dcd824f4272ea87ac4d34c27646","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    public String getImportedName() {\n        StringBuilder answer = new StringBuilder();\n        ASTNode childNode = getNode().getFirstChildNode();\n        while (childNode != null) {\n            IElementType tt = childNode.getElementType();\n            if (tt == JetTokens.MAP || tt == JetTokens.AS_KEYWORD) break;\n            if (tt == JetTokens.IDENTIFIER || tt == JetTokens.DOT) {\n                answer.append(childNode.getText());\n            }\n            childNode = childNode.getTreeNext();\n        }\n        return answer.toString();\n    }","id":54275,"modified_method":"@Nullable @IfNotParsed\n    public JetReferenceExpression getImportedName() {\n        return (JetReferenceExpression) findChildByType(JetNodeTypes.REFERENCE_EXPRESSION);\n    }","commit_id":"f71d2584e6680dcd824f4272ea87ac4d34c27646","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void parseImportDirective() {\n        assert _at(IMPORT_KEYWORD);\n        PsiBuilder.Marker importDirective = mark();\n        advance(); // IMPORT_KEYWORD\n\n        expect(IDENTIFIER, \"Expecting qualified name\", TokenSet.create(DOT, MAP));\n        while (at(DOT)) {\n            advance(); // DOT\n            if (at(IDENTIFIER)) {\n                advance(); // IDENTIFIER\n            }\n            else if (at(MUL)) {\n                advance(); // MUL\n                handleUselessRename();\n                break;\n            }\n            else {\n                errorWithRecovery(\"Qualified name must be a '.'-separated identifier list\", TokenSet.create(AS_KEYWORD, DOT, MAP, SEMICOLON));\n            }\n        }\n        if (at(MAP)) {\n            advance(); // MAP\n            handleUselessRename();\n        }\n        else if (at(AS_KEYWORD)) {\n            advance(); // AS_KEYWORD\n            expect(IDENTIFIER, \"Expecting identifier\", TokenSet.create(SEMICOLON));\n        }\n        consumeIf(SEMICOLON);\n        importDirective.done(IMPORT_DIRECTIVE);\n    }","id":54276,"modified_method":"private void parseImportDirective() {\n        assert _at(IMPORT_KEYWORD);\n        PsiBuilder.Marker importDirective = mark();\n        advance(); // IMPORT_KEYWORD\n\n\n        PsiBuilder.Marker reference = mark();\n\n        if (at(NAMESPACE_KEYWORD)) {\n            advance(); // NAMESPACE_KEYWORD\n            expect(DOT, \"Expecting '.'\", TokenSet.create(IDENTIFIER, MUL, SEMICOLON));\n        }\n\n        expect(IDENTIFIER, \"Expecting qualified name\", TokenSet.create(DOT, AS_KEYWORD));\n        while (at(DOT) && lookahead(1) != MUL) {\n            PsiBuilder.Marker precede = reference.precede();\n            reference.done(REFERENCE_EXPRESSION);\n            reference = precede;\n            advance(); // DOT\n            expect(IDENTIFIER,  \"Qualified name must be a '.'-separated identifier list\", TokenSet.create(AS_KEYWORD, DOT, SEMICOLON));\n        }\n        reference.done(REFERENCE_EXPRESSION);\n\n        if (at(DOT)) {\n            advance(); // DOT\n            assert _at(MUL);\n            advance(); // MUL\n            handleUselessRename();\n        }\n        if (at(AS_KEYWORD)) {\n            advance(); // AS_KEYWORD\n            expect(IDENTIFIER, \"Expecting identifier\", TokenSet.create(SEMICOLON));\n        }\n        consumeIf(SEMICOLON);\n        importDirective.done(IMPORT_DIRECTIVE);\n    }","commit_id":"f71d2584e6680dcd824f4272ea87ac4d34c27646","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public PsiReference getReference() {\n        return new PsiReference() {\n            @Override\n            public PsiElement getElement() {\n                return findChildByType(REFERENCE_TOKENS);\n            }\n\n            @Override\n            public TextRange getRangeInElement() {\n                return new TextRange(0, getElement().getTextLength());\n            }\n\n            @Override\n            public PsiElement resolve() {\n                PsiElement element = getElement();\n                while (element != null && false == element instanceof JetFile) {\n                    element = element.getParent();\n                }\n                JetFile file = (JetFile) element;\n                BindingContext bindingContext = AnalyzingUtils.analyzeFile(file, ErrorHandler.DO_NOTHING);\n                return bindingContext.resolveToDeclarationPsiElement(JetReferenceExpression.this);\n            }\n\n            @NotNull\n            @Override\n            public String getCanonicalText() {\n                return getReferencedName();\n            }\n\n            @Override\n            public PsiElement handleElementRename(String newElementName) throws IncorrectOperationException {\n                throw new IncorrectOperationException();\n            }\n\n            @Override\n            public PsiElement bindToElement(@NotNull PsiElement element) throws IncorrectOperationException {\n                throw new IncorrectOperationException();\n            }\n\n            @Override\n            public boolean isReferenceTo(PsiElement element) {\n                return false;\n            }\n\n            @NotNull\n            @Override\n            public Object[] getVariants() {\n                return EMPTY_ARRAY;\n            }\n\n            @Override\n            public boolean isSoft() {\n                return false;\n            }\n        };\n    }","id":54277,"modified_method":"@Override\n    public PsiReference getReference() {\n        if (getReferencedName() == null) return null;\n        return new PsiReference() {\n            @Override\n            public PsiElement getElement() {\n                return findChildByType(REFERENCE_TOKENS);\n            }\n\n            @Override\n            public TextRange getRangeInElement() {\n                return new TextRange(0, getElement().getTextLength());\n            }\n\n            @Override\n            public PsiElement resolve() {\n                PsiElement element = getElement();\n                while (element != null && false == element instanceof JetFile) {\n                    element = element.getParent();\n                }\n                JetFile file = (JetFile) element;\n                BindingContext bindingContext = AnalyzingUtils.analyzeFile(file, ErrorHandler.DO_NOTHING);\n                return bindingContext.resolveToDeclarationPsiElement(JetReferenceExpression.this);\n            }\n\n            @NotNull\n            @Override\n            public String getCanonicalText() {\n                return getReferencedName();\n            }\n\n            @Override\n            public PsiElement handleElementRename(String newElementName) throws IncorrectOperationException {\n                throw new IncorrectOperationException();\n            }\n\n            @Override\n            public PsiElement bindToElement(@NotNull PsiElement element) throws IncorrectOperationException {\n                throw new IncorrectOperationException();\n            }\n\n            @Override\n            public boolean isReferenceTo(PsiElement element) {\n                return false;\n            }\n\n            @NotNull\n            @Override\n            public Object[] getVariants() {\n                return EMPTY_ARRAY;\n            }\n\n            @Override\n            public boolean isSoft() {\n                return false;\n            }\n        };\n    }","commit_id":"f71d2584e6680dcd824f4272ea87ac4d34c27646","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public String getReferencedName() {\n        return getNode().findChildByType(REFERENCE_TOKENS).getText();\n    }","id":54278,"modified_method":"@Nullable @IfNotParsed\n    public String getReferencedName() {\n        ASTNode node = getNode().findChildByType(REFERENCE_TOKENS);\n        return node == null ? null : node.getText();\n    }","commit_id":"f71d2584e6680dcd824f4272ea87ac4d34c27646","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[212];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","id":54279,"modified_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[210];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"f71d2584e6680dcd824f4272ea87ac4d34c27646","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[212];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","id":54280,"modified_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[210];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"f71d2584e6680dcd824f4272ea87ac4d34c27646","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[212];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","id":54281,"modified_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[210];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"f71d2584e6680dcd824f4272ea87ac4d34c27646","url":"https://github.com/JetBrains/kotlin"},{"original_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public IElementType advance() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    CharSequence zzBufferL = zzBuffer;\n    char[] zzBufferArrayL = zzBufferArray;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n\n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n\n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++]:zzBufferL.charAt(zzCurrentPosL++);\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++]:zzBufferL.charAt(zzCurrentPosL++);\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 3: \n          { return JetTokens.IDENTIFIER;\n          }\n        case 92: break;\n        case 66: \n          { return JetTokens.FOR_KEYWORD ;\n          }\n        case 93: break;\n        case 88: \n          { return JetTokens.RETURN_KEYWORD ;\n          }\n        case 94: break;\n        case 74: \n          { return JetTokens.NULL_KEYWORD ;\n          }\n        case 95: break;\n        case 15: \n          { return JetTokens.LT        ;\n          }\n        case 96: break;\n        case 48: \n          { return JetTokens.DO_KEYWORD ;\n          }\n        case 97: break;\n        case 14: \n          { return JetTokens.PLUS      ;\n          }\n        case 98: break;\n        case 29: \n          { return JetTokens.LONG_LITERAL;\n          }\n        case 99: break;\n        case 63: \n          { return JetTokens.RAW_STRING_LITERAL;\n          }\n        case 100: break;\n        case 52: \n          { return JetTokens.PLUSEQ    ;\n          }\n        case 101: break;\n        case 27: \n          { return JetTokens.COMMA     ;\n          }\n        case 102: break;\n        case 16: \n          { return JetTokens.GT        ;\n          }\n        case 103: break;\n        case 4: \n          { return JetTokens.WHITE_SPACE;\n          }\n        case 104: break;\n        case 86: \n          { return JetTokens.TYPEOF_KEYWORD ;\n          }\n        case 105: break;\n        case 25: \n          { return JetTokens.RPAR      ;\n          }\n        case 106: break;\n        case 50: \n          { return JetTokens.DOUBLE_ARROW;\n          }\n        case 107: break;\n        case 76: \n          { return JetTokens.TRUE_KEYWORD ;\n          }\n        case 108: break;\n        case 31: \n          { return JetTokens.FIELD_IDENTIFIER;\n          }\n        case 109: break;\n        case 56: \n          { return JetTokens.ANDAND    ;\n          }\n        case 110: break;\n        case 62: \n          { return JetTokens.DOC_COMMENT;\n          }\n        case 111: break;\n        case 30: \n          { return JetTokens.FLOAT_LITERAL;\n          }\n        case 112: break;\n        case 34: \n          { return JetTokens.EOL_COMMENT;\n          }\n        case 113: break;\n        case 79: \n          { return JetTokens.WHEN_KEYWORD ;\n          }\n        case 114: break;\n        case 18: \n          { return JetTokens.COLON     ;\n          }\n        case 115: break;\n        case 54: \n          { return JetTokens.LTEQ      ;\n          }\n        case 116: break;\n        case 43: \n          { return JetTokens.ARROW     ;\n          }\n        case 117: break;\n        case 20: \n          { return JetTokens.LBRACKET  ;\n          }\n        case 118: break;\n        case 61: \n          { yypushback(2); return JetTokens.INTEGER_LITERAL;\n          }\n        case 119: break;\n        case 10: \n          { return JetTokens.CHARACTER_LITERAL;\n          }\n        case 120: break;\n        case 68: \n          { return JetTokens.VAR_KEYWORD ;\n          }\n        case 121: break;\n        case 55: \n          { return JetTokens.GTEQ      ;\n          }\n        case 122: break;\n        case 2: \n          { return JetTokens.INTEGER_LITERAL;\n          }\n        case 123: break;\n        case 23: \n          { return JetTokens.RBRACE    ;\n          }\n        case 124: break;\n        case 81: \n          { return JetTokens.CLASS_KEYWORD ;\n          }\n        case 125: break;\n        case 13: \n          { return JetTokens.EXCL      ;\n          }\n        case 126: break;\n        case 65: \n          { return JetTokens.TRY_KEYWORD ;\n          }\n        case 127: break;\n        case 51: \n          { return JetTokens.EXCLEQ    ;\n          }\n        case 128: break;\n        case 42: \n          { return JetTokens.MINUSEQ   ;\n          }\n        case 129: break;\n        case 82: \n          { return JetTokens.THROW_KEYWORD ;\n          }\n        case 130: break;\n        case 85: \n          { return JetTokens.WHILE_KEYWORD ;\n          }\n        case 131: break;\n        case 41: \n          { return JetTokens.MINUSMINUS;\n          }\n        case 132: break;\n        case 89: \n          { return JetTokens.CONTINUE_KEYWORD ;\n          }\n        case 133: break;\n        case 33: \n          { return JetTokens.ATAT      ;\n          }\n        case 134: break;\n        case 71: \n          { return JetTokens.NOT_IN;\n          }\n        case 135: break;\n        case 6: \n          { return JetTokens.DIV       ;\n          }\n        case 136: break;\n        case 59: \n          { return JetTokens.ELVIS     ;\n          }\n        case 137: break;\n        case 32: \n          { return JetTokens.LABEL_IDENTIFIER;\n          }\n        case 138: break;\n        case 17: \n          { return JetTokens.QUEST     ;\n          }\n        case 139: break;\n        case 57: \n          { return JetTokens.OROR      ;\n          }\n        case 140: break;\n        case 19: \n          { return JetTokens.PERC      ;\n          }\n        case 141: break;\n        case 73: \n          { return JetTokens.EXCLEQEQEQ;\n          }\n        case 142: break;\n        case 60: \n          { return JetTokens.PERCEQ    ;\n          }\n        case 143: break;\n        case 39: \n          { return JetTokens.RANGE     ;\n          }\n        case 144: break;\n        case 1: \n          { return TokenType.BAD_CHARACTER;\n          }\n        case 145: break;\n        case 58: \n          { return JetTokens.SAFE_ACCESS;\n          }\n        case 146: break;\n        case 90: \n          { return JetTokens.NAMESPACE_KEYWORD ;\n          }\n        case 147: break;\n        case 72: \n          { return JetTokens.NOT_IS;\n          }\n        case 148: break;\n        case 7: \n          { return JetTokens.MUL       ;\n          }\n        case 149: break;\n        case 21: \n          { return JetTokens.RBRACKET  ;\n          }\n        case 150: break;\n        case 53: \n          { return JetTokens.PLUSPLUS  ;\n          }\n        case 151: break;\n        case 78: \n          { return JetTokens.THIS_KEYWORD ;\n          }\n        case 152: break;\n        case 8: \n          { return JetTokens.DOT       ;\n          }\n        case 153: break;\n        case 26: \n          { return JetTokens.SEMICOLON ;\n          }\n        case 154: break;\n        case 47: \n          { return JetTokens.IF_KEYWORD ;\n          }\n        case 155: break;\n        case 12: \n          { return JetTokens.EQ        ;\n          }\n        case 156: break;\n        case 5: \n          { return JetTokens.AT        ;\n          }\n        case 157: break;\n        case 24: \n          { return JetTokens.LPAR      ;\n          }\n        case 158: break;\n        case 9: \n          { return JetTokens.MINUS     ;\n          }\n        case 159: break;\n        case 83: \n          { return JetTokens.FALSE_KEYWORD ;\n          }\n        case 160: break;\n        case 77: \n          { return JetTokens.TYPE_KEYWORD ;\n          }\n        case 161: break;\n        case 67: \n          { return JetTokens.FUN_KEYWORD ;\n          }\n        case 162: break;\n        case 46: \n          { return JetTokens.IS_KEYWORD ;\n          }\n        case 163: break;\n        case 36: \n          { return JetTokens.DIVEQ     ;\n          }\n        case 164: break;\n        case 91: \n          { return JetTokens.EXTENSION_KEYWORD ;\n          }\n        case 165: break;\n        case 75: \n          { return JetTokens.ELSE_KEYWORD ;\n          }\n        case 166: break;\n        case 44: \n          { return JetTokens.AS_KEYWORD ;\n          }\n        case 167: break;\n        case 45: \n          { return JetTokens.IN_KEYWORD ;\n          }\n        case 168: break;\n        case 49: \n          { return JetTokens.EQEQ      ;\n          }\n        case 169: break;\n        case 69: \n          { return JetTokens.VAL_KEYWORD ;\n          }\n        case 170: break;\n        case 70: \n          { return JetTokens.EQEQEQ    ;\n          }\n        case 171: break;\n        case 80: \n          { return JetTokens.CAPITALIZED_THIS_KEYWORD ;\n          }\n        case 172: break;\n        case 64: \n          { return JetTokens.NEW_KEYWORD ;\n          }\n        case 173: break;\n        case 37: \n          { return JetTokens.MULTEQ    ;\n          }\n        case 174: break;\n        case 11: \n          { return JetTokens.STRING_LITERAL;\n          }\n        case 175: break;\n        case 22: \n          { return JetTokens.LBRACE    ;\n          }\n        case 176: break;\n        case 87: \n          { return JetTokens.OBJECT_KEYWORD ;\n          }\n        case 177: break;\n        case 84: \n          { return JetTokens.BREAK_KEYWORD ;\n          }\n        case 178: break;\n        case 35: \n          { return JetTokens.BLOCK_COMMENT;\n          }\n        case 179: break;\n        case 40: \n          { return JetTokens.FILTER    ;\n          }\n        case 180: break;\n        case 28: \n          { return JetTokens.HASH      ;\n          }\n        case 181: break;\n        case 38: \n          { return JetTokens.MAP       ;\n          }\n        case 182: break;\n        default:\n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            zzDoEOF();\n            return null;\n          }\n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","id":54282,"modified_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public IElementType advance() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    CharSequence zzBufferL = zzBuffer;\n    char[] zzBufferArrayL = zzBufferArray;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n\n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n\n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++]:zzBufferL.charAt(zzCurrentPosL++);\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferArrayL != null ? zzBufferArrayL[zzCurrentPosL++]:zzBufferL.charAt(zzCurrentPosL++);\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 3: \n          { return JetTokens.IDENTIFIER;\n          }\n        case 90: break;\n        case 64: \n          { return JetTokens.FOR_KEYWORD ;\n          }\n        case 91: break;\n        case 86: \n          { return JetTokens.RETURN_KEYWORD ;\n          }\n        case 92: break;\n        case 72: \n          { return JetTokens.NULL_KEYWORD ;\n          }\n        case 93: break;\n        case 15: \n          { return JetTokens.LT        ;\n          }\n        case 94: break;\n        case 46: \n          { return JetTokens.DO_KEYWORD ;\n          }\n        case 95: break;\n        case 14: \n          { return JetTokens.PLUS      ;\n          }\n        case 96: break;\n        case 29: \n          { return JetTokens.LONG_LITERAL;\n          }\n        case 97: break;\n        case 61: \n          { return JetTokens.RAW_STRING_LITERAL;\n          }\n        case 98: break;\n        case 50: \n          { return JetTokens.PLUSEQ    ;\n          }\n        case 99: break;\n        case 27: \n          { return JetTokens.COMMA     ;\n          }\n        case 100: break;\n        case 16: \n          { return JetTokens.GT        ;\n          }\n        case 101: break;\n        case 4: \n          { return JetTokens.WHITE_SPACE;\n          }\n        case 102: break;\n        case 84: \n          { return JetTokens.TYPEOF_KEYWORD ;\n          }\n        case 103: break;\n        case 25: \n          { return JetTokens.RPAR      ;\n          }\n        case 104: break;\n        case 48: \n          { return JetTokens.DOUBLE_ARROW;\n          }\n        case 105: break;\n        case 74: \n          { return JetTokens.TRUE_KEYWORD ;\n          }\n        case 106: break;\n        case 31: \n          { return JetTokens.FIELD_IDENTIFIER;\n          }\n        case 107: break;\n        case 54: \n          { return JetTokens.ANDAND    ;\n          }\n        case 108: break;\n        case 60: \n          { return JetTokens.DOC_COMMENT;\n          }\n        case 109: break;\n        case 30: \n          { return JetTokens.FLOAT_LITERAL;\n          }\n        case 110: break;\n        case 34: \n          { return JetTokens.EOL_COMMENT;\n          }\n        case 111: break;\n        case 77: \n          { return JetTokens.WHEN_KEYWORD ;\n          }\n        case 112: break;\n        case 18: \n          { return JetTokens.COLON     ;\n          }\n        case 113: break;\n        case 52: \n          { return JetTokens.LTEQ      ;\n          }\n        case 114: break;\n        case 41: \n          { return JetTokens.ARROW     ;\n          }\n        case 115: break;\n        case 20: \n          { return JetTokens.LBRACKET  ;\n          }\n        case 116: break;\n        case 59: \n          { yypushback(2); return JetTokens.INTEGER_LITERAL;\n          }\n        case 117: break;\n        case 10: \n          { return JetTokens.CHARACTER_LITERAL;\n          }\n        case 118: break;\n        case 66: \n          { return JetTokens.VAR_KEYWORD ;\n          }\n        case 119: break;\n        case 53: \n          { return JetTokens.GTEQ      ;\n          }\n        case 120: break;\n        case 2: \n          { return JetTokens.INTEGER_LITERAL;\n          }\n        case 121: break;\n        case 23: \n          { return JetTokens.RBRACE    ;\n          }\n        case 122: break;\n        case 79: \n          { return JetTokens.CLASS_KEYWORD ;\n          }\n        case 123: break;\n        case 13: \n          { return JetTokens.EXCL      ;\n          }\n        case 124: break;\n        case 63: \n          { return JetTokens.TRY_KEYWORD ;\n          }\n        case 125: break;\n        case 49: \n          { return JetTokens.EXCLEQ    ;\n          }\n        case 126: break;\n        case 40: \n          { return JetTokens.MINUSEQ   ;\n          }\n        case 127: break;\n        case 80: \n          { return JetTokens.THROW_KEYWORD ;\n          }\n        case 128: break;\n        case 83: \n          { return JetTokens.WHILE_KEYWORD ;\n          }\n        case 129: break;\n        case 39: \n          { return JetTokens.MINUSMINUS;\n          }\n        case 130: break;\n        case 87: \n          { return JetTokens.CONTINUE_KEYWORD ;\n          }\n        case 131: break;\n        case 33: \n          { return JetTokens.ATAT      ;\n          }\n        case 132: break;\n        case 69: \n          { return JetTokens.NOT_IN;\n          }\n        case 133: break;\n        case 6: \n          { return JetTokens.DIV       ;\n          }\n        case 134: break;\n        case 57: \n          { return JetTokens.ELVIS     ;\n          }\n        case 135: break;\n        case 32: \n          { return JetTokens.LABEL_IDENTIFIER;\n          }\n        case 136: break;\n        case 17: \n          { return JetTokens.QUEST     ;\n          }\n        case 137: break;\n        case 55: \n          { return JetTokens.OROR      ;\n          }\n        case 138: break;\n        case 19: \n          { return JetTokens.PERC      ;\n          }\n        case 139: break;\n        case 71: \n          { return JetTokens.EXCLEQEQEQ;\n          }\n        case 140: break;\n        case 58: \n          { return JetTokens.PERCEQ    ;\n          }\n        case 141: break;\n        case 38: \n          { return JetTokens.RANGE     ;\n          }\n        case 142: break;\n        case 1: \n          { return TokenType.BAD_CHARACTER;\n          }\n        case 143: break;\n        case 56: \n          { return JetTokens.SAFE_ACCESS;\n          }\n        case 144: break;\n        case 88: \n          { return JetTokens.NAMESPACE_KEYWORD ;\n          }\n        case 145: break;\n        case 70: \n          { return JetTokens.NOT_IS;\n          }\n        case 146: break;\n        case 7: \n          { return JetTokens.MUL       ;\n          }\n        case 147: break;\n        case 21: \n          { return JetTokens.RBRACKET  ;\n          }\n        case 148: break;\n        case 51: \n          { return JetTokens.PLUSPLUS  ;\n          }\n        case 149: break;\n        case 76: \n          { return JetTokens.THIS_KEYWORD ;\n          }\n        case 150: break;\n        case 8: \n          { return JetTokens.DOT       ;\n          }\n        case 151: break;\n        case 26: \n          { return JetTokens.SEMICOLON ;\n          }\n        case 152: break;\n        case 45: \n          { return JetTokens.IF_KEYWORD ;\n          }\n        case 153: break;\n        case 12: \n          { return JetTokens.EQ        ;\n          }\n        case 154: break;\n        case 5: \n          { return JetTokens.AT        ;\n          }\n        case 155: break;\n        case 24: \n          { return JetTokens.LPAR      ;\n          }\n        case 156: break;\n        case 9: \n          { return JetTokens.MINUS     ;\n          }\n        case 157: break;\n        case 81: \n          { return JetTokens.FALSE_KEYWORD ;\n          }\n        case 158: break;\n        case 75: \n          { return JetTokens.TYPE_KEYWORD ;\n          }\n        case 159: break;\n        case 65: \n          { return JetTokens.FUN_KEYWORD ;\n          }\n        case 160: break;\n        case 44: \n          { return JetTokens.IS_KEYWORD ;\n          }\n        case 161: break;\n        case 36: \n          { return JetTokens.DIVEQ     ;\n          }\n        case 162: break;\n        case 89: \n          { return JetTokens.EXTENSION_KEYWORD ;\n          }\n        case 163: break;\n        case 73: \n          { return JetTokens.ELSE_KEYWORD ;\n          }\n        case 164: break;\n        case 42: \n          { return JetTokens.AS_KEYWORD ;\n          }\n        case 165: break;\n        case 43: \n          { return JetTokens.IN_KEYWORD ;\n          }\n        case 166: break;\n        case 47: \n          { return JetTokens.EQEQ      ;\n          }\n        case 167: break;\n        case 67: \n          { return JetTokens.VAL_KEYWORD ;\n          }\n        case 168: break;\n        case 68: \n          { return JetTokens.EQEQEQ    ;\n          }\n        case 169: break;\n        case 78: \n          { return JetTokens.CAPITALIZED_THIS_KEYWORD ;\n          }\n        case 170: break;\n        case 62: \n          { return JetTokens.NEW_KEYWORD ;\n          }\n        case 171: break;\n        case 37: \n          { return JetTokens.MULTEQ    ;\n          }\n        case 172: break;\n        case 11: \n          { return JetTokens.STRING_LITERAL;\n          }\n        case 173: break;\n        case 22: \n          { return JetTokens.LBRACE    ;\n          }\n        case 174: break;\n        case 85: \n          { return JetTokens.OBJECT_KEYWORD ;\n          }\n        case 175: break;\n        case 82: \n          { return JetTokens.BREAK_KEYWORD ;\n          }\n        case 176: break;\n        case 35: \n          { return JetTokens.BLOCK_COMMENT;\n          }\n        case 177: break;\n        case 28: \n          { return JetTokens.HASH      ;\n          }\n        case 178: break;\n        default:\n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            zzDoEOF();\n            return null;\n          }\n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","commit_id":"f71d2584e6680dcd824f4272ea87ac4d34c27646","url":"https://github.com/JetBrains/kotlin"},{"original_method":"/** {@inheritDoc} */\n    public void bind(final Name name, Object object) throws NamingException {\n        final Name absoluteName = getAbsoluteName(name);\n\n        object = NamingManager.getStateToBind(object, absoluteName, this, environment);\n\n        if(object instanceof Referenceable) {\n            object = asReferenceable(object).getReference();\n        }\n        String className = object.getClass().getName();\n        if(object instanceof Reference) {\n            className = asReference(object).getClassName();\n        }\n        try {\n            namingStore.bind(this, absoluteName, object, className);\n        } catch(CannotProceedException cpe) {\n            final Context continuationContext = NamingManager.getContinuationContext(cpe);\n            continuationContext.bind(cpe.getRemainingName(), object);\n        }\n    }","id":54283,"modified_method":"/** {@inheritDoc} */\n    public void bind(final Name name, Object object) throws NamingException {\n        final Name absoluteName = getAbsoluteName(name);\n\n        object = NamingManager.getStateToBind(object, absoluteName, this, environment);\n\n        if(object instanceof Referenceable) {\n            object = asReferenceable(object).getReference();\n        }\n        String className = object.getClass().getName();\n        if(object instanceof Reference) {\n            final Reference reference = asReference(object);\n            className = reference.getClassName();\n            object = getReferenceBindObject(reference);\n        }\n        try {\n            namingStore.bind(this, absoluteName, object, className);\n        } catch(CannotProceedException cpe) {\n            final Context continuationContext = NamingManager.getContinuationContext(cpe);\n            continuationContext.bind(cpe.getRemainingName(), object);\n        }\n    }","commit_id":"a5b582aecaf36cda29b39edfa0d44c0800e36c1a","url":"https://github.com/wildfly/wildfly"},{"original_method":"/** {@inheritDoc} */\n    public void rebind(final Name name, Object object) throws NamingException {\n        final Name absoluteName = getAbsoluteName(name);\n        object = NamingManager.getStateToBind(object, absoluteName, this, environment);\n\n        if(object instanceof Referenceable) {\n            object = asReferenceable(object).getReference();\n        }\n        String className = object.getClass().getName();\n        if(object instanceof Reference) {\n            className = asReference(object).getClassName();\n        }\n        try {\n            namingStore.rebind(this, absoluteName, object, className);\n        } catch(CannotProceedException cpe) {\n            final Context continuationContext = NamingManager.getContinuationContext(cpe);\n            continuationContext.rebind(cpe.getRemainingName(), object);\n        }\n    }","id":54284,"modified_method":"/** {@inheritDoc} */\n    public void rebind(final Name name, Object object) throws NamingException {\n        final Name absoluteName = getAbsoluteName(name);\n        object = NamingManager.getStateToBind(object, absoluteName, this, environment);\n\n        if(object instanceof Referenceable) {\n            object = asReferenceable(object).getReference();\n        }\n        String className = object.getClass().getName();\n        if(object instanceof Reference) {\n            final Reference reference = asReference(object);\n            className = reference.getClassName();\n            object = getReferenceBindObject(reference);\n        }\n        try {\n            namingStore.rebind(this, absoluteName, object, className);\n        } catch(CannotProceedException cpe) {\n            final Context continuationContext = NamingManager.getContinuationContext(cpe);\n            continuationContext.rebind(cpe.getRemainingName(), object);\n        }\n    }","commit_id":"a5b582aecaf36cda29b39edfa0d44c0800e36c1a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private Object getObjectInstance(final Object object, final Name name, final Hashtable environment) throws NamingException {\n        try {\n            return NamingManager.getObjectInstance(object, name, this, environment);\n        } catch(NamingException e) {\n            throw e;\n        } catch(Throwable t) {\n            throw namingException(\"Could not dereference object\", t);\n        }\n    }","id":54285,"modified_method":"private Object getObjectInstance(final Object object, final Name name, final Hashtable environment) throws NamingException {\n        try {\n            final ObjectFactoryBuilder factoryBuilder = ObjectFactoryBuilder.INSTANCE;\n            final ObjectFactory objectFactory = factoryBuilder.createObjectFactory(object, environment);\n            return objectFactory.getObjectInstance(object, name, this, environment);\n        } catch(NamingException e) {\n            throw e;\n        } catch(Throwable t) {\n            throw namingException(\"Could not dereference object\", t);\n        }\n    }","commit_id":"a5b582aecaf36cda29b39edfa0d44c0800e36c1a","url":"https://github.com/wildfly/wildfly"},{"original_method":"protected <P> void applyUpdate(final UpdateContext updateContext, final UpdateResultHandler<? super Void, P> resultHandler, final P param) {\n        log.info(\"Activating Naming Subsystem\");\n\n        // Setup naming environment\n        System.setProperty(Context.URL_PKG_PREFIXES, PACKAGE_PREFIXES);\n        try {\n            //If we are reusing the JVM. e.g. in tests we should not set this again\n            if (!NamingManager.hasInitialContextFactoryBuilder())\n                NamingManager.setInitialContextFactoryBuilder(new InitialContextFactoryBuilder());\n        } catch (NamingException e) {\n            log.warn(\"Failed to set InitialContextFactoryBuilder\", e);\n        }\n        try {\n            NamingManager.setObjectFactoryBuilder(new ObjectFactoryBuilder());\n        } catch(Throwable t) {\n            log.warn(\"Failed to set ObjectFactoryBuilder\", t);\n        }\n\n        // Create the Naming Service\n        final BatchBuilder builder = updateContext.getBatchBuilder();\n        builder.addService(NamingService.SERVICE_NAME, new NamingService(true));\n\n        // Create java: context service\n        final JavaContextService javaContextService = new JavaContextService();\n        builder.addService(JavaContextService.SERVICE_NAME, javaContextService)\n            .addDependency(NamingService.SERVICE_NAME);\n\n        final ContextService globalContextService = new ContextService(\"global\");\n        builder.addService(JavaContextService.SERVICE_NAME.append(\"global\"), globalContextService)\n             .addDependency(JavaContextService.SERVICE_NAME, Context.class, globalContextService.getParentContextInjector());\n\n        addContextFactory(builder, \"app\");\n        addContextFactory(builder, \"module\");\n        addContextFactory(builder, \"comp\");\n\n        final JndiView jndiView = new JndiView();\n        builder.addService(ServiceName.JBOSS.append(\"naming\", \"jndi\", \"view\"), jndiView)\n            .addOptionalDependency(ServiceName.JBOSS.append(\"mbean\", \"server\"), MBeanServer.class, jndiView.getMBeanServerInjector());\n\n    }","id":54286,"modified_method":"protected <P> void applyUpdate(final UpdateContext updateContext, final UpdateResultHandler<? super Void, P> resultHandler, final P param) {\n        log.info(\"Activating Naming Subsystem\");\n\n        NamingContext.initializeNamingManager();\n\n        // Create the Naming Service\n        final BatchBuilder builder = updateContext.getBatchBuilder();\n        builder.addService(NamingService.SERVICE_NAME, new NamingService(true));\n\n        // Create java: context service\n        final JavaContextService javaContextService = new JavaContextService();\n        builder.addService(JavaContextService.SERVICE_NAME, javaContextService)\n            .addDependency(NamingService.SERVICE_NAME);\n\n        final ContextService globalContextService = new ContextService(\"global\");\n        builder.addService(JavaContextService.SERVICE_NAME.append(\"global\"), globalContextService)\n             .addDependency(JavaContextService.SERVICE_NAME, Context.class, globalContextService.getParentContextInjector());\n\n        addContextFactory(builder, \"app\");\n        addContextFactory(builder, \"module\");\n        addContextFactory(builder, \"comp\");\n\n        final JndiView jndiView = new JndiView();\n        builder.addService(ServiceName.JBOSS.append(\"naming\", \"jndi\", \"view\"), jndiView)\n            .addOptionalDependency(ServiceName.JBOSS.append(\"mbean\", \"server\"), MBeanServer.class, jndiView.getMBeanServerInjector());\n\n    }","commit_id":"a5b582aecaf36cda29b39edfa0d44c0800e36c1a","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Create an object instance.\n     *\n     * @param obj Object containing reference information\n     * @param name The name relative to nameCtx\n     * @param nameCtx The naming context\n     * @param environment The environment information\n     * @return The object\n     * @throws Exception If any error occur\n     */\n    public Object getObjectInstance(final Object obj, final Name name, final Context nameCtx, final  Hashtable<?, ?> environment) throws Exception {\n        // TODO support URL references\n\n        final String factoriesProp = (String)environment.get(Context.OBJECT_FACTORIES);\n        if(factoriesProp != null) {\n            final ClassLoader contextCl = getContextClassLoader();\n            final String[] classes = factoriesProp.split(\":\");\n            for(String className : classes) {\n                try {\n                    final Class<?> factoryClass = contextCl.loadClass(className);\n                    final ObjectFactory objectFactory = ObjectFactory.class.cast(factoryClass.newInstance());\n                    final Object result = objectFactory.getObjectInstance(obj, name, nameCtx, environment);\n                    if(result != null) {\n                        return result;\n                    }\n                } catch(Throwable ignored) {\n                }\n            }\n        }\n        return obj;\n    }","id":54287,"modified_method":"/**\n     * Create an object instance.\n     *\n     * @param ref Object containing reference information\n     * @param name The name relative to nameCtx\n     * @param nameCtx The naming context\n     * @param environment The environment information\n     * @return The object\n     * @throws Exception If any error occur\n     */\n    public Object getObjectInstance(final Object ref, final Name name, final Context nameCtx, final Hashtable<?, ?> environment) throws Exception {\n        ClassLoader classLoader;\n        if(ref instanceof ReferenceWithClassLoader) {\n            classLoader = ReferenceWithClassLoader.class.cast(ref).getBindingLoader();\n        } else {\n            classLoader = getClassLoader();\n        }\n        Object result = getObjectInstanceFromFactories(ref, name, nameCtx, environment, classLoader);\n        if(result == null) {\n            result = ref;\n        }\n        return result;\n    }","commit_id":"a5b582aecaf36cda29b39edfa0d44c0800e36c1a","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Create an object factory.  If the object parameter is a reference it will attempt to create an {@link javax.naming.spi.ObjectFactory}\n     * from the reference.  If the parameter is not a reference, or the reference does not create an {@link javax.naming.spi.ObjectFactory}\n     * it will return {@code this} as the {@link javax.naming.spi.ObjectFactory} to use.\n     *\n     * @param obj The object bound in the naming context\n     * @param environment The environment information\n     * @return The object factory the object resolves to\n     * @throws NamingException If any problems occur\n     */\n    public ObjectFactory createObjectFactory(final Object obj, Hashtable<?, ?> environment) throws NamingException {\n        if (obj instanceof Reference) {\n            return factoryFromReference(asReference(obj), environment);\n        }\n        return this;\n    }","id":54288,"modified_method":"/**\n     * Create an object factory.  If the object parameter is a reference it will attempt to create an {@link javax.naming.spi.ObjectFactory}\n     * from the reference.  If the parameter is not a reference, or the reference does not create an {@link javax.naming.spi.ObjectFactory}\n     * it will return {@code this} as the {@link javax.naming.spi.ObjectFactory} to use.\n     *\n     * @param obj The object bound in the naming context\n     * @param environment The environment information\n     * @return The object factory the object resolves to\n     * @throws NamingException If any problems occur\n     */\n    public ObjectFactory createObjectFactory(final Object obj, Hashtable<?, ?> environment) throws NamingException {\n        try {\n            if (obj instanceof Reference) {\n                return factoryFromReference(asReference(obj), environment);\n            }\n        } catch(Throwable ignored) {\n        }\n        return this;\n    }","commit_id":"a5b582aecaf36cda29b39edfa0d44c0800e36c1a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private ObjectFactory factoryFromReference(final Reference reference, final Hashtable<?, ?> environment) throws NamingException {\n        if (reference instanceof ModularReference) {\n            return factoryFromModularReference(ModularReference.class.cast(reference));\n        }\n        final ClassLoader contextCl = getContextClassLoader();\n        Class<?> factoryClass = null;\n        try {\n            factoryClass = contextCl.loadClass(reference.getFactoryClassName());\n            return ObjectFactory.class.cast(factoryClass.newInstance());\n        } catch (Throwable ignored) {\n        }\n        return this;\n    }","id":54289,"modified_method":"private ObjectFactory factoryFromReference(final Reference reference, final Hashtable<?, ?> environment) throws Exception {\n        if (reference instanceof ModularReference) {\n            return factoryFromModularReference(ModularReference.class.cast(reference), environment);\n        } else if(reference instanceof ReferenceWithClassLoader) {\n                return factoryFromReferenceClassLoader(ReferenceWithClassLoader.class.cast(reference), environment);\n        }\n        return factoryFromReference(reference, getClassLoader(), environment);\n    }","commit_id":"a5b582aecaf36cda29b39edfa0d44c0800e36c1a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private ObjectFactory factoryFromModularReference(ModularReference modularReference) throws NamingException {\n        try {\n            final Module module = Module.getCurrentModuleLoader().loadModule(modularReference.getModuleIdentifier());\n            final Class<?> factoryClass = module.getClassLoader().loadClass(modularReference.getFactoryClassName());\n            return ObjectFactory.class.cast(factoryClass.newInstance());\n        } catch (Throwable t) {\n            throw namingException(\"Failed to create object factory from modular reference.\", t);\n        }\n    }","id":54290,"modified_method":"private ObjectFactory factoryFromModularReference(ModularReference modularReference, final Hashtable<?, ?> environment) throws Exception {\n        final Module module = Module.getCurrentModuleLoader().loadModule(modularReference.getModuleIdentifier());\n        final ClassLoader classLoader = module.getClassLoader();\n        return factoryFromReference(modularReference, classLoader, environment);\n    }","commit_id":"a5b582aecaf36cda29b39edfa0d44c0800e36c1a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private ClassLoader getContextClassLoader() {\n        return AccessController.doPrivileged(\n            new PrivilegedAction<ClassLoader>() {\n                public ClassLoader run() {\n                    return Thread.currentThread().getContextClassLoader();\n                }\n            }\n        );\n    }","id":54291,"modified_method":"private ClassLoader getClassLoader() {\n        ClassLoader classLoader = SecurityActions.getContextClassLoader();\n        if(classLoader == null) {\n            classLoader = SecurityActions.getCallingClassLoader();\n        }\n        return classLoader;\n    }","commit_id":"a5b582aecaf36cda29b39edfa0d44c0800e36c1a","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void start() throws Exception {\n        //HornetQ needs the proper TCL\n        ClassLoader cl = Thread.currentThread().getContextClassLoader();\n        Thread.currentThread().setContextClassLoader(this.getClass().getClassLoader());\n        try {\n            InitialContext ctx = new InitialContext();\n\n            Module module = Module.forClass(Test.class);\n            Thread.currentThread().setContextClassLoader(module.getClassLoader());\n            System.out.println(ctx.lookup(\"ConnectionFactory\"));\n            System.out.println(ctx.lookup(\"queue/test\"));\n\n            QueueConnectionFactory qcf = (QueueConnectionFactory)ctx.lookup(\"ConnectionFactory\");\n            conn = qcf.createQueueConnection();\n            conn.start();\n            queue = (Queue)ctx.lookup(\"queue/test\");\n            session = conn.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE);\n\n            // Set the async listener\n            QueueReceiver recv = session.createReceiver(queue);\n            recv.setMessageListener(new ExampeMessageListener());\n        } finally {\n            Thread.currentThread().setContextClassLoader(cl);\n        }\n    }","id":54292,"modified_method":"public void start() throws Exception {\n        //HornetQ needs the proper TCL\n        InitialContext ctx = new InitialContext();\n\n        Module module = Module.forClass(Test.class);\n        Thread.currentThread().setContextClassLoader(module.getClassLoader());\n        System.out.println(ctx.lookup(\"ConnectionFactory\"));\n        System.out.println(ctx.lookup(\"queue/test\"));\n\n        QueueConnectionFactory qcf = (QueueConnectionFactory)ctx.lookup(\"ConnectionFactory\");\n        conn = qcf.createQueueConnection();\n        conn.start();\n        queue = (Queue)ctx.lookup(\"queue/test\");\n        session = conn.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE);\n\n        // Set the async listener\n        QueueReceiver recv = session.createReceiver(queue);\n        recv.setMessageListener(new ExampeMessageListener());\n    }","commit_id":"a5b582aecaf36cda29b39edfa0d44c0800e36c1a","url":"https://github.com/wildfly/wildfly"},{"original_method":"/** {@inheritDoc} */\n    public void rebind(final Name name, Object object) throws NamingException {\n        final Name absoluteName = getAbsoluteName(name);\n        object = NamingManager.getStateToBind(object, absoluteName, this, environment);\n\n        if(object instanceof Referenceable) {\n            object = asReferenceable(object).getReference();\n        }\n        String className = object.getClass().getName();\n        if(object instanceof Reference) {\n            final Reference reference = asReference(object);\n            className = reference.getClassName();\n            object = getReferenceBindObject(reference);\n        }\n        try {\n            namingStore.rebind(this, absoluteName, object, className);\n        } catch(CannotProceedException cpe) {\n            final Context continuationContext = NamingManager.getContinuationContext(cpe);\n            continuationContext.rebind(cpe.getRemainingName(), object);\n        }\n    }","id":54293,"modified_method":"/** {@inheritDoc} */\n    public void rebind(final Name name, Object object) throws NamingException {\n        final Name absoluteName = getAbsoluteName(name);\n        object = NamingManager.getStateToBind(object, absoluteName, this, environment);\n\n        if(object instanceof Referenceable) {\n            object = asReferenceable(object).getReference();\n        }\n        String className = object.getClass().getName();\n        if(object instanceof Reference) {\n            className = asReference(object).getClassName();\n        }\n        try {\n            namingStore.rebind(this, absoluteName, object, className);\n        } catch(CannotProceedException cpe) {\n            final Context continuationContext = NamingManager.getContinuationContext(cpe);\n            continuationContext.rebind(cpe.getRemainingName(), object);\n        }\n    }","commit_id":"bb5719b6cebd704836b96b1924b5b05094f9e85f","url":"https://github.com/wildfly/wildfly"},{"original_method":"/** {@inheritDoc} */\n    public void bind(final Name name, Object object) throws NamingException {\n        final Name absoluteName = getAbsoluteName(name);\n\n        object = NamingManager.getStateToBind(object, absoluteName, this, environment);\n\n        if(object instanceof Referenceable) {\n            object = asReferenceable(object).getReference();\n        }\n        String className = object.getClass().getName();\n        if(object instanceof Reference) {\n            final Reference reference = asReference(object);\n            className = reference.getClassName();\n            object = getReferenceBindObject(reference);\n        }\n        try {\n            namingStore.bind(this, absoluteName, object, className);\n        } catch(CannotProceedException cpe) {\n            final Context continuationContext = NamingManager.getContinuationContext(cpe);\n            continuationContext.bind(cpe.getRemainingName(), object);\n        }\n    }","id":54294,"modified_method":"/** {@inheritDoc} */\n    public void bind(final Name name, Object object) throws NamingException {\n        final Name absoluteName = getAbsoluteName(name);\n\n        object = NamingManager.getStateToBind(object, absoluteName, this, environment);\n\n        if(object instanceof Referenceable) {\n            object = asReferenceable(object).getReference();\n        }\n        String className = object.getClass().getName();\n        if(object instanceof Reference) {\n            className = asReference(object).getClassName();\n        }\n        try {\n            namingStore.bind(this, absoluteName, object, className);\n        } catch(CannotProceedException cpe) {\n            final Context continuationContext = NamingManager.getContinuationContext(cpe);\n            continuationContext.bind(cpe.getRemainingName(), object);\n        }\n    }","commit_id":"bb5719b6cebd704836b96b1924b5b05094f9e85f","url":"https://github.com/wildfly/wildfly"},{"original_method":"private ObjectFactory factoryFromReference(final Reference reference, final Hashtable<?, ?> environment) throws Exception {\n        if (reference instanceof ModularReference) {\n            return factoryFromModularReference(ModularReference.class.cast(reference), environment);\n        } else if(reference instanceof ReferenceWithClassLoader) {\n                return factoryFromReferenceClassLoader(ReferenceWithClassLoader.class.cast(reference), environment);\n        }\n        return factoryFromReference(reference, getClassLoader(), environment);\n    }","id":54295,"modified_method":"private ObjectFactory factoryFromReference(final Reference reference, final Hashtable<?, ?> environment) throws Exception {\n        if (reference instanceof ModularReference) {\n            return factoryFromModularReference(ModularReference.class.cast(reference), environment);\n        }\n        return factoryFromReference(reference, SecurityActions.getContextClassLoader(), environment);\n    }","commit_id":"bb5719b6cebd704836b96b1924b5b05094f9e85f","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Create an object instance.\n     *\n     * @param ref Object containing reference information\n     * @param name The name relative to nameCtx\n     * @param nameCtx The naming context\n     * @param environment The environment information\n     * @return The object\n     * @throws Exception If any error occur\n     */\n    public Object getObjectInstance(final Object ref, final Name name, final Context nameCtx, final Hashtable<?, ?> environment) throws Exception {\n        ClassLoader classLoader;\n        if(ref instanceof ReferenceWithClassLoader) {\n            classLoader = ReferenceWithClassLoader.class.cast(ref).getBindingLoader();\n        } else {\n            classLoader = getClassLoader();\n        }\n        Object result = getObjectInstanceFromFactories(ref, name, nameCtx, environment, classLoader);\n        if(result == null) {\n            result = ref;\n        }\n        return result;\n    }","id":54296,"modified_method":"/**\n     * Create an object instance.\n     *\n     * @param ref Object containing reference information\n     * @param name The name relative to nameCtx\n     * @param nameCtx The naming context\n     * @param environment The environment information\n     * @return The object\n     * @throws Exception If any error occur\n     */\n    public Object getObjectInstance(final Object ref, final Name name, final Context nameCtx, final Hashtable<?, ?> environment) throws Exception {\n        final ClassLoader classLoader = SecurityActions.getContextClassLoader();\n        if(classLoader == null) {\n            return ref;\n        }\n        final String factoriesProp = (String)environment.get(Context.OBJECT_FACTORIES);\n        if(factoriesProp != null) {\n            final String[] classes = factoriesProp.split(\":\");\n            for(String className : classes) {\n                try {\n                    final Class<?> factoryClass = classLoader.loadClass(className);\n                    final ObjectFactory objectFactory = ObjectFactory.class.cast(factoryClass.newInstance());\n                    final Object result = objectFactory.getObjectInstance(ref, name, nameCtx, environment);\n                    if(result != null) {\n                        return result;\n                    }\n                } catch(Throwable ignored) {\n                }\n            }\n        }\n        return null;\n    }","commit_id":"bb5719b6cebd704836b96b1924b5b05094f9e85f","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void start() throws Exception {\n        //HornetQ needs the proper TCL\n        InitialContext ctx = new InitialContext();\n\n        Module module = Module.forClass(Test.class);\n        Thread.currentThread().setContextClassLoader(module.getClassLoader());\n        System.out.println(ctx.lookup(\"ConnectionFactory\"));\n        System.out.println(ctx.lookup(\"queue/test\"));\n\n        QueueConnectionFactory qcf = (QueueConnectionFactory)ctx.lookup(\"ConnectionFactory\");\n        conn = qcf.createQueueConnection();\n        conn.start();\n        queue = (Queue)ctx.lookup(\"queue/test\");\n        session = conn.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE);\n\n        // Set the async listener\n        QueueReceiver recv = session.createReceiver(queue);\n        recv.setMessageListener(new ExampeMessageListener());\n    }","id":54297,"modified_method":"public void start() throws Exception {\n        Module module = Module.forClass(Test.class);\n        ClassLoader cl = Thread.currentThread().getContextClassLoader();\n        Thread.currentThread().setContextClassLoader(module.getClassLoader());\n        try {\n            //HornetQ needs the proper TCL\n            InitialContext ctx = new InitialContext();\n\n\n            System.out.println(ctx.lookup(\"ConnectionFactory\"));\n            System.out.println(ctx.lookup(\"queue/test\"));\n\n            QueueConnectionFactory qcf = (QueueConnectionFactory)ctx.lookup(\"ConnectionFactory\");\n            conn = qcf.createQueueConnection();\n            conn.start();\n            queue = (Queue)ctx.lookup(\"queue/test\");\n            session = conn.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE);\n\n            // Set the async listener\n            QueueReceiver recv = session.createReceiver(queue);\n            recv.setMessageListener(new ExampeMessageListener());\n        } finally {\n            Thread.currentThread().setContextClassLoader(cl);\n        }\n    }","commit_id":"bb5719b6cebd704836b96b1924b5b05094f9e85f","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void unbind(String name) {\n        if (name == null || name.isEmpty()) {\n            throw new IllegalArgumentException(\"Cannot unbind null or empty jndi name\");\n        }\n        final JndiBinding jndiBinding = JndiBinding.parse(name);\n        if (jndiBinding == null) {\n            throw new IllegalArgumentException(\"Cannot unbind \" + name + \" since it belongs to a unknown/unsupported jndi name context\");\n        }\n        ServiceController<?> bindingService = container.getService(ContextNames.bindInfoFor(name).getBinderServiceName());\n        if (bindingService == null) {\n            logger.debug(\"Cannot unbind \" + name + \" since no binding exists with that name\");\n            return;\n        }\n        // remove the binding service\n        bindingService.setMode(ServiceController.Mode.REMOVE);\n        logger.info(\"Unbound messaging object from jndi name \" + jndiBinding);\n    }","id":54298,"modified_method":"@Override\n    public void unbind(String name) {\n        if (name == null || name.isEmpty()) {\n            throw new IllegalArgumentException(\"Cannot unbind null or empty jndi name\");\n        }\n        final ContextNames.BindInfo bindInfo = ContextNames.bindInfoFor(name);\n        ServiceController<?> bindingService = container.getService(bindInfo.getBinderServiceName());\n        if (bindingService == null) {\n            logger.debug(\"Cannot unbind \" + name + \" since no binding exists with that name\");\n            return;\n        }\n        // remove the binding service\n        bindingService.setMode(ServiceController.Mode.REMOVE);\n        logger.info(\"Unbound messaging object from jndi name \" + bindInfo.getAbsoluteJndiName());\n    }","commit_id":"79d1bd1e9674885ac40b8a4758f39d793efc5249","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public boolean bind(String name, Object obj) {\n        if (name == null || name.isEmpty()) {\n            throw new IllegalArgumentException(\"Cannot bind a null or empty string as jndi name\");\n        }\n        final ContextNames.BindInfo bindInfo = ContextNames.bindInfoFor(name);\n        final BinderService binderService = new BinderService(bindInfo.getBindName());\n        container.addService(bindInfo.getBinderServiceName(), binderService)\n                 .addDependency(bindInfo.getParentContextServiceName(), NamingStore.class, binderService.getNamingStoreInjector())\n                 .addInjection(binderService.getManagedObjectInjector(), new ValueManagedReferenceFactory(Values.immediateValue(obj)))\n                 .setInitialMode(ServiceController.Mode.ACTIVE)\n                 .install();\n        logger.info(\"Bound messaging object to jndi name \" + name);\n        return true;\n    }","id":54299,"modified_method":"@Override\n    public boolean bind(String name, Object obj) {\n        if (name == null || name.isEmpty()) {\n            throw new IllegalArgumentException(\"Cannot bind a null or empty string as jndi name\");\n        }\n        final ContextNames.BindInfo bindInfo = ContextNames.bindInfoFor(name);\n        final BinderService binderService = new BinderService(bindInfo.getBindName());\n        container.addService(bindInfo.getBinderServiceName(), binderService)\n                .addDependency(bindInfo.getParentContextServiceName(), NamingStore.class, binderService.getNamingStoreInjector())\n                .addInjection(binderService.getManagedObjectInjector(), new ValueManagedReferenceFactory(Values.immediateValue(obj)))\n                .setInitialMode(ServiceController.Mode.ACTIVE)\n                .install();\n        logger.info(\"Bound messaging object to jndi name \" + bindInfo.getAbsoluteJndiName());\n        return true;\n    }","commit_id":"79d1bd1e9674885ac40b8a4758f39d793efc5249","url":"https://github.com/wildfly/wildfly"},{"original_method":"private BindInfo(final ServiceName parentContextServiceName, final String bindName) {\n            this.parentContextServiceName = parentContextServiceName;\n            this.binderServiceName = parentContextServiceName.append(bindName);\n            this.bindName = bindName;\n        }","id":54300,"modified_method":"private BindInfo(final ServiceName parentContextServiceName, final String bindName) {\n            this.parentContextServiceName = parentContextServiceName;\n            this.binderServiceName = parentContextServiceName.append(bindName);\n            this.bindName = bindName;\n\n            this.absoluteJndiName = this.generateAbsoluteJndiName();\n        }","commit_id":"79d1bd1e9674885ac40b8a4758f39d793efc5249","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public boolean bind(String name, Object obj) {\n        if (name == null || name.isEmpty()) {\n            throw MESSAGES.cannotBindJndiName();\n        }\n        final ContextNames.BindInfo bindInfo = ContextNames.bindInfoFor(name);\n        final BinderService binderService = new BinderService(bindInfo.getBindName());\n        container.addService(bindInfo.getBinderServiceName(), binderService)\n                .addDependency(bindInfo.getParentContextServiceName(), ServiceBasedNamingStore.class, binderService.getNamingStoreInjector())\n                .addInjection(binderService.getManagedObjectInjector(), new ValueManagedReferenceFactory(Values.immediateValue(obj)))\n                .setInitialMode(ServiceController.Mode.ACTIVE)\n                .install();\n        ROOT_LOGGER.boundJndiName(bindInfo.getAbsoluteJndiName());\n        return true;\n    }","id":54301,"modified_method":"@Override\n    public boolean bind(String name, Object obj) {\n        if (name == null || name.isEmpty()) {\n            throw MESSAGES.cannotBindJndiName();\n        }\n        installBinderService(container, name, obj);\n        ROOT_LOGGER.boundJndiName(name);\n        return true;\n    }","commit_id":"b95cfeb3577247f0b37aaf5e00c515b5e037d53a","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    protected void performBoottime(final OperationContext context, ModelNode operation, final ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers) throws OperationFailedException {\n        context.addStep(new AbstractDeploymentChainStep() {\n            @Override\n            protected void execute(DeploymentProcessorTarget processorTarget) {\n                processorTarget.addDeploymentProcessor(MessagingExtension.SUBSYSTEM_NAME, Phase.PARSE, Phase.PARSE_MESSAGING_XML_RESOURCES, new MessagingXmlParsingDeploymentUnitProcessor());\n                processorTarget.addDeploymentProcessor(MessagingExtension.SUBSYSTEM_NAME, Phase.INSTALL, Phase.INSTALL_MESSAGING_XML_RESOURCES, new MessagingXmlInstallDeploymentUnitProcessor());\n            }\n        }, OperationContext.Stage.RUNTIME);\n    }","id":54302,"modified_method":"@Override\n    protected void performBoottime(final OperationContext context, ModelNode operation, final ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers) throws OperationFailedException {\n        context.addStep(new AbstractDeploymentChainStep() {\n            @Override\n            protected void execute(DeploymentProcessorTarget processorTarget) {\n                processorTarget.addDeploymentProcessor(MessagingExtension.SUBSYSTEM_NAME, Phase.PARSE, Phase.PARSE_MESSAGING_XML_RESOURCES, new MessagingXmlParsingDeploymentUnitProcessor());\n                processorTarget.addDeploymentProcessor(MessagingExtension.SUBSYSTEM_NAME, Phase.INSTALL, Phase.INSTALL_MESSAGING_XML_RESOURCES, new MessagingXmlInstallDeploymentUnitProcessor());\n                processorTarget.addDeploymentProcessor(MessagingExtension.SUBSYSTEM_NAME, Phase.INSTALL, Phase.INSTALL_JMS_BINDINGS, new MessagingJndiBindingProcessor());\n            }\n        }, OperationContext.Stage.RUNTIME);\n    }","commit_id":"b95cfeb3577247f0b37aaf5e00c515b5e037d53a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private List<ServiceName> createJNDIAliases(final String name, List<String> aliases, ServiceController<ResourceAdapterDeployment> controller) {\n            List<ServiceName> serviceNames = new ArrayList<ServiceName>();\n            for (final String alias : aliases) {\n                final ContextNames.BindInfo aliasBindInfo = ContextNames.bindInfoFor(alias);\n                final BinderService aliasBinderService = new BinderService(alias);\n                aliasBinderService.getManagedObjectInjector().inject(new AliasManagedReferenceFactory(name));\n\n                controller.getServiceContainer()\n                    .addService(aliasBindInfo.getBinderServiceName(), aliasBinderService)\n                    .addDependency(aliasBindInfo.getParentContextServiceName(), ServiceBasedNamingStore.class, aliasBinderService.getNamingStoreInjector())\n                    .addDependency(ContextNames.bindInfoFor(name).getBinderServiceName())\n                    .install();\n                ROOT_LOGGER.boundJndiName(alias);\n            }\n            return serviceNames;\n    }","id":54303,"modified_method":"private List<ServiceName> createJNDIAliases(final String name, List<String> aliases, ServiceController<ResourceAdapterDeployment> controller) {\n        final ServiceName namingStoreServiceName = ContextNames.bindInfoFor(name).getParentContextServiceName();\n            List<ServiceName> serviceNames = new ArrayList<ServiceName>();\n            for (final String alias : aliases) {\n                installAliasBinderService(controller.getServiceContainer(),\n                        namingStoreServiceName,\n                        name,\n                        ContextNames.bindInfoFor(alias).getBinderServiceName(),\n                        alias);\n                ROOT_LOGGER.boundJndiName(alias);\n            }\n            return serviceNames;\n    }","commit_id":"b95cfeb3577247f0b37aaf5e00c515b5e037d53a","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitProcessingException {\n        final DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit();\n        final EEModuleDescription moduleDescription = deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);\n\n        if(moduleDescription == null) {\n            return;\n        }\n\n        // do not alias the default JMS connection factory if there is no entry defined by the messaging subsystem\n        if (phaseContext.getServiceRegistry().getService(ContextNames.bindInfoFor(JBOSS_DEFAULT_JMS_CONNECTION_FACTORY_LOOKUP).getBinderServiceName()) == null) {\n            return;\n        }\n\n        final ServiceTarget serviceTarget = phaseContext.getServiceTarget();\n        if(DeploymentTypeMarker.isType(DeploymentType.WAR, deploymentUnit)) {\n            final ServiceName moduleContextServiceName = ContextNames.contextServiceNameOfModule(moduleDescription.getApplicationName(),moduleDescription.getModuleName());\n            bindAliasService(deploymentUnit, serviceTarget, moduleContextServiceName, JBOSS_DEFAULT_JMS_CONNECTION_FACTORY_LOOKUP);\n        }\n\n        for(ComponentDescription component : moduleDescription.getComponentDescriptions()) {\n            if(component.getNamingMode() == ComponentNamingMode.CREATE) {\n                final ServiceName compContextServiceName = ContextNames.contextServiceNameOfComponent(moduleDescription.getApplicationName(),moduleDescription.getModuleName(),component.getComponentName());\n                bindAliasService(deploymentUnit, serviceTarget, compContextServiceName, JBOSS_DEFAULT_JMS_CONNECTION_FACTORY_LOOKUP);\n            }\n        }\n    }","id":54304,"modified_method":"@Override\n    public void deploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitProcessingException {\n        final DeploymentUnit deploymentUnit = phaseContext.getDeploymentUnit();\n        final EEModuleDescription moduleDescription = deploymentUnit.getAttachment(Attachments.EE_MODULE_DESCRIPTION);\n\n        if(moduleDescription == null) {\n            return;\n        }\n\n        final BindInfo defaultConnectionFactoryBindInfo = ContextNames.bindInfoFor(JBOSS_DEFAULT_JMS_CONNECTION_FACTORY_LOOKUP);\n        final ServiceName serviceName = defaultConnectionFactoryBindInfo.getBinderServiceName();\n\n        // do not alias the default JMS connection factory if there is no entry defined by the messaging subsystem\n        if (phaseContext.getServiceRegistry().getService(serviceName) == null) {\n            return;\n        }\n\n        if (!DeploymentTypeMarker.isType(EAR, deploymentUnit)) {\n            moduleDescription.getBindingConfigurations().add(new BindingConfiguration(DEFAULT_JMS_CONNECTION_FACTORY, new ServiceInjectionSource(serviceName)));\n        }\n\n        for(ComponentDescription component : moduleDescription.getComponentDescriptions()) {\n            if(component.getNamingMode() == ComponentNamingMode.CREATE) {\n                component.getBindingConfigurations().add(new BindingConfiguration(DEFAULT_JMS_CONNECTION_FACTORY, new ServiceInjectionSource(serviceName)));\n            }\n        }\n    }","commit_id":"c34329b780c7edea402818d61a338c41e445db75","url":"https://github.com/wildfly/wildfly"},{"original_method":"public static serverObjects respond(httpHeader header, serverObjects post, serverSwitch env) {\r\n\t// return variable that accumulates replacements\r\n        plasmaSwitchboard switchboard = (plasmaSwitchboard) env;\r\n\tserverObjects prop = new serverObjects();\r\n        \r\n        int showIndexedCount = 40;\r\n        boolean si = false;\r\n        boolean se = false;\r\n        \r\n        \r\n        if (post == null) {\r\n            post = new serverObjects();\r\n            post.put(\"process\", \"0\");\r\n        }\r\n        \r\n        // find process number\r\n        int process;\r\n        try {\r\n            process = Integer.parseInt(post.get(\"process\", \"0\"));\r\n        } catch (NumberFormatException e) {\r\n            process = 0;\r\n        }\r\n        \r\n        // check if authorization is needed and/or given\r\n        if (((process > 0) && (process < 6)) ||\r\n            (post.containsKey(\"clearlist\")) ||\r\n            (post.containsKey(\"deleteentry\"))) {\r\n            String authorization = ((String) header.get(\"Authorization\", \"xxxxxx\"));\r\n            if (authorization.length() != 0) {\r\n                if (! switchboard.userDB.hasAdminRight(authorization)){\r\n                    // force log-in (again, because wrong password was given)\r\n                    prop.put(\"AUTHENTICATE\", \"admin log-in\");\r\n                    return prop;\r\n                }\r\n            }else{\r\n                // force log-in\r\n                prop.put(\"AUTHENTICATE\", \"admin log-in\");\r\n                return prop;\r\n            }\r\n        }\r\n        \r\n        // custom number of lines\r\n        if (post.containsKey(\"count\")) {\r\n            showIndexedCount = Integer.parseInt(post.get(\"count\", \"40\"));\r\n        }\r\n        \r\n        // do the commands\r\n        if (post.containsKey(\"clearlist\")) switchboard.urlPool.loadedURL.clearStack(process);\r\n        if (post.containsKey(\"deleteentry\")) {\r\n                String hash = post.get(\"hash\", null);\r\n                if (hash != null) {\r\n                    // delete from database\r\n                    switchboard.urlPool.loadedURL.remove(hash);\r\n                }\r\n            }\r\n        if (post.containsKey(\"moreIndexed\")) {\r\n            showIndexedCount = Integer.parseInt(post.get(\"showIndexed\", \"40\"));\r\n        }\r\n        if (post.get(\"si\") != null) si = true;\r\n        if (post.get(\"se\") != null) se = true;\r\n        \r\n        // create table\r\n        if (process == 0) {\r\n            prop.put(\"table\", 2);\r\n        } else {\r\n            prop.putAll(switchboard.urlPool.loadedURL.genTableProps(process, showIndexedCount, si, se, \"unknown\", null, \"IndexMonitor.html\", true));\r\n        }\r\n        prop.put(\"process\", process);\r\n\t// return rewrite properties\r\n\treturn prop;\r\n    }","id":54305,"modified_method":"public static serverObjects respond(httpHeader header, serverObjects post, serverSwitch env) {\r\n\t// return variable that accumulates replacements\r\n        plasmaSwitchboard switchboard = (plasmaSwitchboard) env;\r\n\tserverObjects prop = new serverObjects();\r\n        \r\n        int showIndexedCount = 40;\r\n        boolean si = false;\r\n        boolean se = false;\r\n        \r\n        \r\n        if (post == null) {\r\n            post = new serverObjects();\r\n            post.put(\"process\", \"0\");\r\n        }\r\n        \r\n        // find process number\r\n        int process;\r\n        try {\r\n            process = Integer.parseInt(post.get(\"process\", \"0\"));\r\n        } catch (NumberFormatException e) {\r\n            process = 0;\r\n        }\r\n        \r\n        // check if authorization is needed and/or given\r\n        if (((process > 0) && (process < 6)) ||\r\n            (post.containsKey(\"clearlist\")) ||\r\n            (post.containsKey(\"deleteentry\"))) {\r\n            String authorization = ((String) header.get(\"Authorization\", \"xxxxxx\"));\r\n            if (authorization.length() != 0) {\r\n                if (! switchboard.verifyAuthentication(header, true)){\r\n                    // force log-in (again, because wrong password was given)\r\n                    prop.put(\"AUTHENTICATE\", \"admin log-in\");\r\n                    return prop;\r\n                }\r\n            }else{\r\n                // force log-in\r\n                prop.put(\"AUTHENTICATE\", \"admin log-in\");\r\n                return prop;\r\n            }\r\n        }\r\n        \r\n        // custom number of lines\r\n        if (post.containsKey(\"count\")) {\r\n            showIndexedCount = Integer.parseInt(post.get(\"count\", \"40\"));\r\n        }\r\n        \r\n        // do the commands\r\n        if (post.containsKey(\"clearlist\")) switchboard.urlPool.loadedURL.clearStack(process);\r\n        if (post.containsKey(\"deleteentry\")) {\r\n                String hash = post.get(\"hash\", null);\r\n                if (hash != null) {\r\n                    // delete from database\r\n                    switchboard.urlPool.loadedURL.remove(hash);\r\n                }\r\n            }\r\n        if (post.containsKey(\"moreIndexed\")) {\r\n            showIndexedCount = Integer.parseInt(post.get(\"showIndexed\", \"40\"));\r\n        }\r\n        if (post.get(\"si\") != null) si = true;\r\n        if (post.get(\"se\") != null) se = true;\r\n        \r\n        // create table\r\n        if (process == 0) {\r\n            prop.put(\"table\", 2);\r\n        } else {\r\n            prop.putAll(switchboard.urlPool.loadedURL.genTableProps(process, showIndexedCount, si, se, \"unknown\", null, \"IndexMonitor.html\", true));\r\n        }\r\n        prop.put(\"process\", process);\r\n\t// return rewrite properties\r\n\treturn prop;\r\n    }","commit_id":"6822dce57bfbfc990097237ce2545f3b0f672fdf","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public int adminAuthenticated(httpHeader header) {\r\n        String adminAccountBase64MD5 = getConfig(\"adminAccountBase64MD5\", \"\");\r\n        if (adminAccountBase64MD5.length() == 0) return 2; // not necessary\r\n        String authorization = ((String) header.get(httpHeader.AUTHORIZATION, \"xxxxxx\")).trim().substring(6);\r\n        if (authorization.length() == 0) return 1; // no authentication information given\r\n        if ((((String) header.get(\"CLIENTIP\", \"\")).equals(\"localhost\")) && (adminAccountBase64MD5.equals(authorization))) return 3; // soft-authenticated for localhost\r\n        if (adminAccountBase64MD5.equals(serverCodings.encodeMD5Hex(authorization))) return 4; // hard-authenticated, all ok\r\n        userDB.Entry entry = this.userDB.proxyAuth((String)header.get(httpHeader.AUTHORIZATION, \"xxxxxx\"));\r\n        if((entry != null) && (entry.hasAdminRight()))\r\n            return 4;\r\n        return 0; // wrong password\r\n    }","id":54306,"modified_method":"public int adminAuthenticated(httpHeader header) {\r\n        String adminAccountBase64MD5 = getConfig(\"adminAccountBase64MD5\", \"\");\r\n        if (adminAccountBase64MD5.length() == 0) return 2; // not necessary\r\n        String authorization = ((String) header.get(httpHeader.AUTHORIZATION, \"xxxxxx\")).trim().substring(6);\r\n        if (authorization.length() == 0) return 1; // no authentication information given\r\n        if ((((String) header.get(\"CLIENTIP\", \"\")).equals(\"localhost\")) && (adminAccountBase64MD5.equals(authorization))) return 3; // soft-authenticated for localhost\r\n        if (adminAccountBase64MD5.equals(serverCodings.encodeMD5Hex(authorization))) return 4; // hard-authenticated, all ok\r\n        if(userDB.hasAdminRight((String)header.get(httpHeader.AUTHORIZATION, \"xxxxxx\")))\r\n            return 4;\r\n        return 0; // wrong password\r\n    }","commit_id":"6822dce57bfbfc990097237ce2545f3b0f672fdf","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static serverObjects respond(httpHeader header, serverObjects post, serverSwitch env) {\r\n\t// return variable that accumulates replacements\r\n        plasmaSwitchboard switchboard = (plasmaSwitchboard) env;\r\n\tserverObjects prop = new serverObjects();\r\n        \r\n        int showIndexedCount = 40;\r\n        boolean si = false;\r\n        boolean se = false;\r\n        \r\n        \r\n        if (post == null) {\r\n            post = new serverObjects();\r\n            post.put(\"process\", \"0\");\r\n        }\r\n        \r\n        // find process number\r\n        int process;\r\n        try {\r\n            process = Integer.parseInt(post.get(\"process\", \"0\"));\r\n        } catch (NumberFormatException e) {\r\n            process = 0;\r\n        }\r\n        \r\n        // check if authorization is needed and/or given\r\n        if (((process > 0) && (process < 6)) ||\r\n            (post.containsKey(\"clearlist\")) ||\r\n            (post.containsKey(\"deleteentry\"))) {\r\n            String authorization = ((String) header.get(\"Authorization\", \"xxxxxx\")).trim().substring(6);\r\n            userDB.Entry entry = switchboard.userDB.proxyAuth(authorization);\r\n            if (authorization.length() == 0) {\r\n                // force log-in\r\n                prop.put(\"AUTHENTICATE\", \"admin log-in\");\r\n                return prop;\r\n            }\r\n            String adminAccountBase64MD5 = switchboard.getConfig(\"adminAccountBase64MD5\", \"\");\r\n            boolean authenticated = (adminAccountBase64MD5.equals(serverCodings.encodeMD5Hex(authorization)));\r\n            if (!authenticated && !entry.hasAdminRight()) {\r\n                // force log-in (again, because wrong password was given)\r\n                prop.put(\"AUTHENTICATE\", \"admin log-in\");\r\n                return prop;\r\n            }\r\n        }\r\n        \r\n        // custom number of lines\r\n        if (post.containsKey(\"count\")) {\r\n            showIndexedCount = Integer.parseInt(post.get(\"count\", \"40\"));\r\n        }\r\n        \r\n        // do the commands\r\n        if (post.containsKey(\"clearlist\")) switchboard.urlPool.loadedURL.clearStack(process);\r\n        if (post.containsKey(\"deleteentry\")) {\r\n                String hash = post.get(\"hash\", null);\r\n                if (hash != null) {\r\n                    // delete from database\r\n                    switchboard.urlPool.loadedURL.remove(hash);\r\n                }\r\n            }\r\n        if (post.containsKey(\"moreIndexed\")) {\r\n            showIndexedCount = Integer.parseInt(post.get(\"showIndexed\", \"40\"));\r\n        }\r\n        if (post.get(\"si\") != null) si = true;\r\n        if (post.get(\"se\") != null) se = true;\r\n        \r\n        // create table\r\n        if (process == 0) {\r\n            prop.put(\"table\", 2);\r\n        } else {\r\n            prop.putAll(switchboard.urlPool.loadedURL.genTableProps(process, showIndexedCount, si, se, \"unknown\", null, \"IndexMonitor.html\", true));\r\n        }\r\n        prop.put(\"process\", process);\r\n\t// return rewrite properties\r\n\treturn prop;\r\n    }","id":54307,"modified_method":"public static serverObjects respond(httpHeader header, serverObjects post, serverSwitch env) {\r\n\t// return variable that accumulates replacements\r\n        plasmaSwitchboard switchboard = (plasmaSwitchboard) env;\r\n\tserverObjects prop = new serverObjects();\r\n        \r\n        int showIndexedCount = 40;\r\n        boolean si = false;\r\n        boolean se = false;\r\n        \r\n        \r\n        if (post == null) {\r\n            post = new serverObjects();\r\n            post.put(\"process\", \"0\");\r\n        }\r\n        \r\n        // find process number\r\n        int process;\r\n        try {\r\n            process = Integer.parseInt(post.get(\"process\", \"0\"));\r\n        } catch (NumberFormatException e) {\r\n            process = 0;\r\n        }\r\n        \r\n        // check if authorization is needed and/or given\r\n        if (((process > 0) && (process < 6)) ||\r\n            (post.containsKey(\"clearlist\")) ||\r\n            (post.containsKey(\"deleteentry\"))) {\r\n            String authorization = ((String) header.get(\"Authorization\", \"xxxxxx\")).trim().substring(6);\r\n            if (authorization.length() == 0) {\r\n                // force log-in\r\n                prop.put(\"AUTHENTICATE\", \"admin log-in\");\r\n                return prop;\r\n            }else if (switchboard.userDB.hasAdminRight(authorization)) {\r\n                // force log-in (again, because wrong password was given)\r\n                prop.put(\"AUTHENTICATE\", \"admin log-in\");\r\n                return prop;\r\n            }\r\n        }\r\n        \r\n        // custom number of lines\r\n        if (post.containsKey(\"count\")) {\r\n            showIndexedCount = Integer.parseInt(post.get(\"count\", \"40\"));\r\n        }\r\n        \r\n        // do the commands\r\n        if (post.containsKey(\"clearlist\")) switchboard.urlPool.loadedURL.clearStack(process);\r\n        if (post.containsKey(\"deleteentry\")) {\r\n                String hash = post.get(\"hash\", null);\r\n                if (hash != null) {\r\n                    // delete from database\r\n                    switchboard.urlPool.loadedURL.remove(hash);\r\n                }\r\n            }\r\n        if (post.containsKey(\"moreIndexed\")) {\r\n            showIndexedCount = Integer.parseInt(post.get(\"showIndexed\", \"40\"));\r\n        }\r\n        if (post.get(\"si\") != null) si = true;\r\n        if (post.get(\"se\") != null) se = true;\r\n        \r\n        // create table\r\n        if (process == 0) {\r\n            prop.put(\"table\", 2);\r\n        } else {\r\n            prop.putAll(switchboard.urlPool.loadedURL.genTableProps(process, showIndexedCount, si, se, \"unknown\", null, \"IndexMonitor.html\", true));\r\n        }\r\n        prop.put(\"process\", process);\r\n\t// return rewrite properties\r\n\treturn prop;\r\n    }","commit_id":"0f1212feb9e1f8555818896ea8125746351d9c64","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void doResponse(Properties conProp, httpHeader requestHeader, OutputStream out, InputStream body) throws IOException {\r\n        \r\n        this.connectionProperties = conProp;\r\n        \r\n        // getting some connection properties\r\n        String method     = conProp.getProperty(httpHeader.CONNECTION_PROP_METHOD);\r\n        String path       = conProp.getProperty(httpHeader.CONNECTION_PROP_PATH);\r\n        String argsString = conProp.getProperty(httpHeader.CONNECTION_PROP_ARGS); // is null if no args were given\r\n        String httpVersion= conProp.getProperty(httpHeader.CONNECTION_PROP_HTTP_VER);\r\n        \r\n        // check hack attacks in path\r\n        if (path.indexOf(\"..\") >= 0) {\r\n            httpd.sendRespondError(conProp,out,4,403,null,\"Access not allowed\",null);\r\n            return;\r\n        }\r\n        \r\n        // check permission/granted access\r\n        String authorization = (String) requestHeader.get(httpHeader.AUTHORIZATION);\r\n        String adminAccountBase64MD5 = switchboard.getConfig(\"adminAccountBase64MD5\", \"\");\r\n        if ((path.endsWith(\"_p.html\")) && (adminAccountBase64MD5.length() != 0)) {\r\n            // authentication required\r\n\r\n            if (authorization == null) {\r\n                // no authorization given in response. Ask for that\r\n                httpHeader headers = getDefaultHeaders(path);\r\n                headers.put(httpHeader.WWW_AUTHENTICATE,\"Basic realm=\\\"admin log-in\\\"\");\r\n                httpd.sendRespondHeader(conProp,out,httpVersion,401,headers);\r\n                return;\r\n            }\r\n            \r\n            // authorization is given\r\n            userDB.Entry entry = sb.userDB.proxyAuth(authorization);\r\n            if (adminAccountBase64MD5.equals(serverCodings.encodeMD5Hex(authorization.trim().substring(6)))) {\r\n                // Authentication successfull. remove brute-force flag\r\n                serverCore.bfHost.remove(conProp.getProperty(\"CLIENTIP\"));\r\n            } else if(entry != null && entry.hasAdminRight()){\r\n                serverCore.bfHost.remove(conProp.getProperty(\"CLIENTIP\"));\r\n            } else {\r\n                // a wrong authentication was given. Ask again\r\n                String clientIP = conProp.getProperty(\"CLIENTIP\", \"unknown-host\");\r\n                serverLog.logInfo(\"HTTPD\", \"Wrong log-in for account 'admin' in http file handler for path '\" + path + \"' from host '\" + clientIP + \"'\");\r\n                Integer attempts = (Integer) serverCore.bfHost.get(clientIP);\r\n                if (attempts == null)\r\n                    serverCore.bfHost.put(clientIP, new Integer(1));\r\n                else\r\n                    serverCore.bfHost.put(clientIP, new Integer(attempts.intValue() + 1));\r\n\r\n                httpHeader headers = getDefaultHeaders(path);\r\n                headers.put(httpHeader.WWW_AUTHENTICATE,\"Basic realm=\\\"admin log-in\\\"\");\r\n                httpd.sendRespondHeader(conProp,out,httpVersion,401,headers);\r\n            return;\r\n            }\r\n        }\r\n        \r\n        // handle bfHost in case we have authentified correctly\r\n        if ((authorization != null) &&\r\n            (adminAccountBase64MD5.length() != 0) &&\r\n            (adminAccountBase64MD5.equals(serverCodings.encodeMD5Hex(authorization.trim().substring(6))))) {\r\n            // remove brute-force flag\r\n            serverCore.bfHost.remove(conProp.getProperty(httpHeader.CONNECTION_PROP_CLIENTIP));\r\n        }\r\n        \r\n        // parse arguments\r\n        serverObjects args = new serverObjects();\r\n        int argc;\r\n        if (argsString == null) {\r\n            // no args here, maybe a POST with multipart extension\r\n            int length = 0;\r\n            //System.out.println(\"HEADER: \" + requestHeader.toString()); // DEBUG\r\n            if (method.equals(httpHeader.METHOD_POST)) {\r\n\r\n                GZIPInputStream gzipBody = null;\r\n                if (requestHeader.containsKey(httpHeader.CONTENT_LENGTH)) {\r\n                    length = Integer.parseInt((String) requestHeader.get(httpHeader.CONTENT_LENGTH));\r\n                } else if (requestHeader.gzip()) {\r\n                    length = -1;\r\n                    gzipBody = new GZIPInputStream(body);\r\n                }\r\n//                } else {\r\n//                    httpd.sendRespondError(conProp,out,4,403,null,\"bad post values\",null); \r\n//                    return;\r\n//                }\r\n                \r\n                // if its a POST, it can be either multipart or as args in the body\r\n                if ((requestHeader.containsKey(httpHeader.CONTENT_TYPE)) &&\r\n                        (((String) requestHeader.get(httpHeader.CONTENT_TYPE)).toLowerCase().startsWith(\"multipart\"))) {\r\n                    // parse multipart\r\n                    HashMap files = httpd.parseMultipart(requestHeader, args, (gzipBody!=null)?gzipBody:body, length);\r\n                    // integrate these files into the args\r\n                    if (files != null) {\r\n                        Iterator fit = files.entrySet().iterator();\r\n                        Map.Entry entry;\r\n                        while (fit.hasNext()) {\r\n                            entry = (Map.Entry) fit.next();\r\n                            args.put(((String) entry.getKey()) + \"$file\", entry.getValue());\r\n                        }\r\n                    }\r\n                    argc = Integer.parseInt((String) requestHeader.get(\"ARGC\"));\r\n                } else {\r\n                    // parse args in body\r\n                    argc = httpd.parseArgs(args, (gzipBody!=null)?gzipBody:body, length);\r\n                }\r\n            } else {\r\n                // no args\r\n                argsString = null;\r\n                args = null;\r\n                argc = 0;\r\n            }\r\n        } else {\r\n            // simple args in URL (stuff after the \"?\")\r\n            argc = httpd.parseArgs(args, argsString);\r\n        }\r\n        \r\n        // check for cross site scripting - attacks in request arguments\r\n        if (argc > 0) {\r\n            // check all values for occurrences of script values\r\n            Enumeration e = args.elements(); // enumeration of values\r\n            Object val;\r\n            while (e.hasMoreElements()) {\r\n                val = e.nextElement();\r\n                if ((val != null) && (val instanceof String) && (((String) val).indexOf(\"<script\") >= 0)) {\r\n                    // deny request\r\n                    httpd.sendRespondError(conProp,out,4,403,null,\"bad post values\",null);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        \r\n        // we are finished with parsing\r\n        // the result of value hand-over is in args and argc\r\n        if (path.length() == 0) {\r\n            httpd.sendRespondError(conProp,out,4,400,null,\"Bad Request\",null);\r\n            out.flush();\r\n            return;\r\n        }\r\n        File targetClass=null;\r\n        try {\r\n            // locate the file\r\n            if (!(path.startsWith(\"/\"))) path = \"/\" + path; // attach leading slash\r\n            File   targetFile  = getLocalizedFile(path);\r\n            String targetExt   = conProp.getProperty(\"EXT\",\"\");\r\n            targetClass = rewriteClassFile(new File(htDefaultPath, path));\r\n            if (path.endsWith(\"/\")) {\r\n                String testpath;\r\n                // attach default file name\r\n                for (int i = 0; i < defaultFiles.length; i++) {\r\n                    testpath = path + defaultFiles[i];\r\n                    targetFile = getLocalizedFile(testpath);\r\n                    targetClass = rewriteClassFile(new File(htDefaultPath, testpath));\r\n                    if (!(targetFile.exists())){\r\n                        targetFile = new File(htDocsPath, testpath);\r\n                        targetClass = rewriteClassFile(targetFile);\r\n                    }\r\n                    if (targetFile.exists()) {\r\n                        path = testpath;\r\n                        break;\r\n                    }\r\n                }\r\n            }else{\r\n                    //you cannot share a .png/.gif file with a name like a class in htroot.\r\n                    if ( !(targetFile.exists()) && !((path.endsWith(\"png\")||path.endsWith(\"gif\")||path.endsWith(\".stream\"))&&targetClass!=null ) ){\r\n                        targetFile = new File(htDocsPath, path);\r\n                        targetClass = rewriteClassFile(new File(htDocsPath, path));\r\n                    }\r\n                \r\n            }\r\n            \r\n            //File targetClass = rewriteClassFile(targetFile);\r\n            Date targetDate;\r\n            boolean nocache = false;\r\n            \r\n            if ((targetClass != null) && (path.endsWith(\"png\"))) {\r\n                // call an image-servlet to produce an on-the-fly - generated image\r\n                ymagePainter yp = null;\r\n                try {\r\n                    requestHeader.put(\"CLIENTIP\", conProp.getProperty(\"CLIENTIP\"));\r\n                    requestHeader.put(\"PATH\", path);\r\n                    // in case that there are no args given, args = null or empty hashmap\r\n                    yp = (ymagePainter) rewriteMethod(targetClass).invoke(null, new Object[] {requestHeader, args, switchboard});\r\n                } catch (InvocationTargetException e) {\r\n                    this.theLogger.logSevere(\"INTERNAL ERROR: \" + e.toString() + \":\" +\r\n                    e.getMessage() +\r\n                    \" target exception at \" + targetClass + \": \" +\r\n                    e.getTargetException().toString() + \":\" +\r\n                    e.getTargetException().getMessage() +\r\n                    \"; java.awt.graphicsenv='\" + System.getProperty(\"java.awt.graphicsenv\",\"\") + \"'\",e);\r\n                    targetClass = null;\r\n                }\r\n                if (yp == null) {\r\n                    // error with image generation; send file-not-found\r\n                    httpd.sendRespondError(this.connectionProperties,out,3,404,\"File not Found\",null,null);\r\n                } else {\r\n                    // send an image to client\r\n                    targetDate = new Date(System.currentTimeMillis());\r\n                    nocache = true;\r\n                    String mimeType = mimeTable.getProperty(targetExt,\"text/html\");\r\n                    \r\n                    // generate an byte array from the generated image\r\n                    serverByteBuffer baos = new serverByteBuffer();\r\n                    //ymagePNGEncoderJDE jde = new ymagePNGEncoderJDE((ymageMatrixPainter) yp, ymagePNGEncoderJDE.FILTER_NONE, 0);\r\n                    //byte[] result = jde.pngEncode();\r\n                    ImageIO.write(ymagePNGEncoderAWT.toImage((ymageMatrixPainter) yp, true), targetExt, baos);\r\n                    byte[] result = baos.toByteArray();\r\n                    baos.close(); baos = null;\r\n                    \r\n                    // write the array to the client\r\n                    httpd.sendRespondHeader(this.connectionProperties, out, httpVersion, 200, null, mimeType, result.length, targetDate, null, null, null, null, nocache);\r\n                    if (! method.equals(httpHeader.METHOD_HEAD)) {\r\n                        Thread.sleep(200); // see below\r\n                        serverFileUtils.write(result, out);\r\n                    }\r\n                }\r\n            } else if ((targetClass != null) && (path.endsWith(\".stream\"))) {\r\n                // call rewrite-class\r\n                requestHeader.put(\"CLIENTIP\", conProp.getProperty(\"CLIENTIP\"));\r\n                requestHeader.put(\"PATH\", path);\r\n                requestHeader.put(\"INPUTSTREAM\", body);\r\n                requestHeader.put(\"OUTPUTSTREAM\", out);\r\n             \r\n                httpd.sendRespondHeader(this.connectionProperties, out, httpVersion, 200, null);                \r\n                \r\n                // in case that there are no args given, args = null or empty hashmap\r\n                /* serverObjects tp = (serverObjects) */ rewriteMethod(targetClass).invoke(null, new Object[] {requestHeader, args, switchboard});\r\n             \r\n                this.forceConnectionClose();\r\n                return;                \r\n            } else if ((targetFile.exists()) && (targetFile.canRead())) {\r\n                // we have found a file that can be written to the client\r\n                // if this file uses templates, then we use the template\r\n                // re-write - method to create an result\r\n                String mimeType = mimeTable.getProperty(targetExt,\"text/html\");\r\n                byte[] result;\r\n                boolean zipContent = requestHeader.acceptGzip() && httpd.shallTransportZipped(\".\" + conProp.getProperty(\"EXT\",\"\"));\r\n                if (path.endsWith(\"html\") || \r\n                        path.endsWith(\"xml\") || \r\n                        path.endsWith(\"rss\") || \r\n                        path.endsWith(\"csv\") ||\r\n                        path.endsWith(\"pac\")) {\r\n                            \r\n                    targetFile = getLocalizedFile(path);\r\n\t\t\t\t\tif (!(targetFile.exists())) {\r\n\t\t                // try to find that file in the htDocsPath\r\n\t\t\t\t        File trialFile = new File(htDocsPath, path);\r\n\t\t\t\t\t\tif (trialFile.exists()) targetFile = trialFile;\r\n\t\t            }\r\n            \r\n                    \r\n                    // call rewrite-class\r\n                    serverObjects tp = new serverObjects();\r\n                    if (targetClass == null) {\r\n                        targetDate = new Date(targetFile.lastModified());\r\n                    } else {\r\n                        // CGI-class: call the class to create a property for rewriting\r\n                        try {\r\n                            requestHeader.put(\"CLIENTIP\", conProp.getProperty(\"CLIENTIP\"));\r\n                            requestHeader.put(\"PATH\", path);\r\n                            // in case that there are no args given, args = null or empty hashmap\r\n                            tp = (serverObjects) rewriteMethod(targetClass).invoke(null, new Object[] {requestHeader, args, switchboard});\r\n                            // if no args given , then tp will be an empty Hashtable object (not null)\r\n                            if (tp == null) tp = new serverObjects();\r\n                            // check if the servlets requests authentification\r\n                            if (tp.containsKey(\"AUTHENTICATE\")) {\r\n                                // handle brute-force protection\r\n                                if (authorization != null) {\r\n                                    String clientIP = conProp.getProperty(\"CLIENTIP\", \"unknown-host\");\r\n                                    serverLog.logInfo(\"HTTPD\", \"dynamic log-in for account 'admin' in http file handler for path '\" + path + \"' from host '\" + clientIP + \"'\");\r\n                                    Integer attempts = (Integer) serverCore.bfHost.get(clientIP);\r\n                                    if (attempts == null)\r\n                                        serverCore.bfHost.put(clientIP, new Integer(1));\r\n                                    else\r\n                                        serverCore.bfHost.put(clientIP, new Integer(attempts.intValue() + 1));\r\n                                }\r\n                                // send authentication request to browser\r\n                                httpHeader headers = getDefaultHeaders(path);\r\n                                headers.put(httpHeader.WWW_AUTHENTICATE,\"Basic realm=\\\"\" + tp.get(\"AUTHENTICATE\", \"\") + \"\\\"\");\r\n                                httpd.sendRespondHeader(conProp,out,httpVersion,401,headers);\r\n                                return;\r\n                            } else if (tp.containsKey(\"LOCATION\")) {\r\n                                String location = tp.get(\"LOCATION\",\"\");\r\n                                if (location.length() == 0) location = path;\r\n                                \r\n                                httpHeader headers = getDefaultHeaders(path);\r\n                                headers.put(httpHeader.LOCATION,location);\r\n                                httpd.sendRespondHeader(conProp,out,httpVersion,302,headers);\r\n                                return;\r\n                            }\r\n                            // add the application version, the uptime and the client name to every rewrite table\r\n                            tp.put(\"version\", switchboard.getConfig(\"version\", \"\"));\r\n                            tp.put(\"uptime\", ((System.currentTimeMillis() - Long.parseLong(switchboard.getConfig(\"startupTime\",\"0\"))) / 1000) / 60); // uptime in minutes\r\n                            tp.put(\"clientname\", switchboard.getConfig(\"peerName\", \"anomic\"));\r\n                            //System.out.println(\"respond props: \" + ((tp == null) ? \"null\" : tp.toString())); // debug\r\n                        } catch (InvocationTargetException e) {\r\n                            if (e.getCause() instanceof InterruptedException) {\r\n                                throw new InterruptedException(e.getCause().getMessage());\r\n                            }                            \r\n                            \r\n                            this.theLogger.logSevere(\"INTERNAL ERROR: \" + e.toString() + \":\" +\r\n                                    e.getMessage() +\r\n                                    \" target exception at \" + targetClass + \": \" +\r\n                                    e.getTargetException().toString() + \":\" +\r\n                                    e.getTargetException().getMessage(),e);\r\n                            targetClass = null;\r\n                            throw e;\r\n                        }\r\n                        targetDate = new Date(System.currentTimeMillis());\r\n                        nocache = true;\r\n                    }\r\n                    // read templates\r\n                    tp.putAll(templates);\r\n                    \r\n                    // rewrite the file\r\n                    serverByteBuffer o = null;\r\n                    InputStream fis = null;\r\n                    GZIPOutputStream zippedOut = null;\r\n                    try {\r\n                        // do fileCaching here\r\n                        byte[] templateContent = null;\r\n                        if (useTemplateCache) {\r\n                            long fileSize = targetFile.length();\r\n                            if (fileSize <= 512*1024) {\r\n                                SoftReference ref = (SoftReference) templateCache.get(targetFile);\r\n                                if (ref != null) {\r\n                                    templateContent = (byte[]) ref.get();\r\n                                    if (templateContent == null) \r\n                                        templateCache.remove(targetFile);                               \r\n                                }\r\n                                \r\n                                if (templateContent == null) {\r\n                                    // loading the content of the template file into a byte array\r\n                                    templateContent = serverFileUtils.read(targetFile);\r\n                                    \r\n                                    // storing the content into the cache\r\n                                    ref = new SoftReference(templateContent);\r\n                                    templateCache.put(targetFile,ref);\r\n                                    if (this.theLogger.isLoggable(Level.FINEST))\r\n                                        this.theLogger.logFinest(\"Cache MISS for file \" + targetFile);\r\n                                } else {\r\n                                    if (this.theLogger.isLoggable(Level.FINEST))\r\n                                        this.theLogger.logFinest(\"Cache HIT for file \" + targetFile);\r\n                                }\r\n                                \r\n                                // creating an inputstream needed by the template rewrite function\r\n                                fis = new ByteArrayInputStream(templateContent);                            \r\n                                templateContent = null;\r\n                            } else {\r\n                                fis = new BufferedInputStream(new FileInputStream(targetFile));\r\n                            }\r\n                        } else {\r\n                            fis = new BufferedInputStream(new FileInputStream(targetFile));\r\n                        }\r\n\r\n                        o = new serverByteBuffer();\r\n                        if (zipContent) zippedOut = new GZIPOutputStream(o);\r\n                        httpTemplate.writeTemplate(fis, (zipContent) ? (OutputStream)zippedOut: (OutputStream)o, tp, \"-UNRESOLVED_PATTERN-\".getBytes());\r\n                        if (zipContent) {\r\n                            zippedOut.finish();\r\n                            zippedOut.flush();\r\n                            zippedOut.close();\r\n                            zippedOut = null;\r\n                        }\r\n                        result = o.toByteArray();\r\n                        \r\n                        if (this.md5Digest != null) {\r\n                            this.md5Digest.reset();\r\n                            this.md5Digest.update(result);\r\n                            byte[] digest = this.md5Digest.digest();\r\n                            StringBuffer digestString = new StringBuffer();\r\n                            for ( int i = 0; i < digest.length; i++ )\r\n                                digestString.append(Integer.toHexString( digest[i]&0xff));\r\n\r\n                        }                        \r\n                    } finally {\r\n                        if (zippedOut != null) try {zippedOut.close();} catch(Exception e) {}\r\n                        if (o != null) try {o.close(); o = null;} catch(Exception e) {}\r\n                        if (fis != null) try {fis.close(); fis=null;} catch(Exception e) {}\r\n                    }\r\n                    \r\n                } else { // no html                    \r\n                    // write the file to the client\r\n                    targetDate = new Date(targetFile.lastModified());\r\n                    result = (zipContent) ? serverFileUtils.readAndZip(targetFile) : serverFileUtils.read(targetFile);\r\n                    \r\n                    // check mime type again using the result array: these are 'magics'\r\n//                    if (serverByteBuffer.equals(result, 1, \"PNG\".getBytes())) mimeType = mimeTable.getProperty(\"png\",\"text/html\");\r\n//                    else if (serverByteBuffer.equals(result, 0, \"GIF89\".getBytes())) mimeType = mimeTable.getProperty(\"gif\",\"text/html\");\r\n//                    else if (serverByteBuffer.equals(result, 6, \"JFIF\".getBytes())) mimeType = mimeTable.getProperty(\"jpg\",\"text/html\");\r\n                    //System.out.print(\"MAGIC:\"); for (int i = 0; i < 10; i++) System.out.print(Integer.toHexString((int) result[i]) + \",\"); System.out.println();            \r\n                }\r\n                \r\n                // write the array to the client\r\n                httpd.sendRespondHeader(this.connectionProperties, out, httpVersion, 200, null, mimeType, result.length, targetDate, null, null, (zipContent)?\"gzip\":null, null, nocache);\r\n                if (! method.equals(httpHeader.METHOD_HEAD)) {\r\n                    Thread.sleep(200); // this solved the message problem (!!)\r\n                    serverFileUtils.write(result, out);\r\n                }\r\n            } else {\r\n                httpd.sendRespondError(conProp,out,3,404,\"File not Found\",null,null);\r\n                return;\r\n            }\r\n        } catch (Exception e) {     \r\n            try {\r\n                // doing some errorhandling ...\r\n                int httpStatusCode = 400; \r\n                String httpStatusText = null; \r\n                StringBuffer errorMessage = new StringBuffer(); \r\n                Exception errorExc = null;            \r\n                \r\n                String errorMsg = e.getMessage();\r\n                if (\r\n                        (e instanceof InterruptedException) ||\r\n                        ((errorMsg != null) && (errorMsg.startsWith(\"Socket closed\")) && (Thread.currentThread().isInterrupted()))\r\n                   ) {\r\n                    errorMessage.append(\"Interruption detected while processing query.\");\r\n                    httpStatusCode = 503;\r\n                } else {\r\n                    if ((errorMsg != null) && \r\n                        (\r\n                           errorMsg.startsWith(\"Broken pipe\") || \r\n                           errorMsg.startsWith(\"Connection reset\") ||\r\n                           errorMsg.startsWith(\"Software caused connection abort\")                           \r\n                       )) {\r\n                        // client closed the connection, so we just end silently\r\n                        errorMessage.append(\"Client unexpectedly closed connection while processing query.\");\r\n                    } else if ((errorMsg != null) && (errorMsg.startsWith(\"Connection timed out\"))) {\r\n                        errorMessage.append(\"Connection timed out.\");\r\n                    } else {\r\n                        errorMessage.append(\"Unexpected error while processing query.\");\r\n                        httpStatusCode = 500;\r\n                        errorExc = e;\r\n                    }\r\n                }\r\n                \r\n                errorMessage.append(\"\\nSession: \").append(Thread.currentThread().getName())\r\n                            .append(\"\\nQuery:   \").append(path)\r\n                            .append(\"\\nClient:  \").append(conProp.getProperty(httpHeader.CONNECTION_PROP_CLIENTIP,\"unknown\")) \r\n                            .append(\"\\nReason:  \").append(e.toString());    \r\n                \r\n                if (!conProp.containsKey(httpHeader.CONNECTION_PROP_PROXY_RESPOND_HEADER)) {\r\n                    // sending back an error message to the client \r\n                    // if we have not already send an http header\r\n                    httpd.sendRespondError(conProp,out, 4, httpStatusCode, httpStatusText, errorMessage.toString(),errorExc);\r\n                } else {\r\n                    // otherwise we close the connection\r\n                    this.forceConnectionClose();\r\n                }    \r\n                \r\n                // if it is an unexpected error we log it \r\n                if (httpStatusCode == 500) {\r\n                    this.theLogger.logWarning(errorMessage.toString(),e);\r\n                }\r\n                \r\n            } catch (Exception ee) {\r\n                this.forceConnectionClose();\r\n            }            \r\n            \r\n        } finally {\r\n            try {out.flush();}catch (Exception e) {}\r\n            if (!(requestHeader.get(httpHeader.CONNECTION, \"close\").equals(\"keep-alive\"))) {\r\n                // wait a little time until everything closes so that clients can read from the streams/sockets\r\n                try {Thread.sleep(1000);} catch (InterruptedException e) {}\r\n            }\r\n        }\r\n    }","id":54308,"modified_method":"public void doResponse(Properties conProp, httpHeader requestHeader, OutputStream out, InputStream body) throws IOException {\r\n        \r\n        this.connectionProperties = conProp;\r\n        \r\n        // getting some connection properties\r\n        String method     = conProp.getProperty(httpHeader.CONNECTION_PROP_METHOD);\r\n        String path       = conProp.getProperty(httpHeader.CONNECTION_PROP_PATH);\r\n        String argsString = conProp.getProperty(httpHeader.CONNECTION_PROP_ARGS); // is null if no args were given\r\n        String httpVersion= conProp.getProperty(httpHeader.CONNECTION_PROP_HTTP_VER);\r\n        \r\n        // check hack attacks in path\r\n        if (path.indexOf(\"..\") >= 0) {\r\n            httpd.sendRespondError(conProp,out,4,403,null,\"Access not allowed\",null);\r\n            return;\r\n        }\r\n        \r\n        // check permission/granted access\r\n        String authorization = (String) requestHeader.get(httpHeader.AUTHORIZATION);\r\n        String adminAccountBase64MD5 = switchboard.getConfig(\"adminAccountBase64MD5\", \"\");\r\n        if ((path.endsWith(\"_p.html\")) && (adminAccountBase64MD5.length() != 0)) {\r\n            // authentication required\r\n\r\n            if (authorization == null) {\r\n                // no authorization given in response. Ask for that\r\n                httpHeader headers = getDefaultHeaders(path);\r\n                headers.put(httpHeader.WWW_AUTHENTICATE,\"Basic realm=\\\"admin log-in\\\"\");\r\n                httpd.sendRespondHeader(conProp,out,httpVersion,401,headers);\r\n                return;\r\n            }\r\n            \r\n            // authorization is given\r\n            if (sb.userDB.hasAdminRight(authorization)) {\r\n                // Authentication successfull. remove brute-force flag\r\n                serverCore.bfHost.remove(conProp.getProperty(\"CLIENTIP\"));\r\n            } else {\r\n                // a wrong authentication was given. Ask again\r\n                String clientIP = conProp.getProperty(\"CLIENTIP\", \"unknown-host\");\r\n                serverLog.logInfo(\"HTTPD\", \"Wrong log-in for account 'admin' in http file handler for path '\" + path + \"' from host '\" + clientIP + \"'\");\r\n                Integer attempts = (Integer) serverCore.bfHost.get(clientIP);\r\n                if (attempts == null)\r\n                    serverCore.bfHost.put(clientIP, new Integer(1));\r\n                else\r\n                    serverCore.bfHost.put(clientIP, new Integer(attempts.intValue() + 1));\r\n\r\n                httpHeader headers = getDefaultHeaders(path);\r\n                headers.put(httpHeader.WWW_AUTHENTICATE,\"Basic realm=\\\"admin log-in\\\"\");\r\n                httpd.sendRespondHeader(conProp,out,httpVersion,401,headers);\r\n            return;\r\n            }\r\n        }\r\n        \r\n        // handle bfHost in case we have authentified correctly\r\n        if ((authorization != null) &&\r\n            (adminAccountBase64MD5.length() != 0) &&\r\n            (adminAccountBase64MD5.equals(serverCodings.encodeMD5Hex(authorization.trim().substring(6))))) {\r\n            // remove brute-force flag\r\n            serverCore.bfHost.remove(conProp.getProperty(httpHeader.CONNECTION_PROP_CLIENTIP));\r\n        }\r\n        \r\n        // parse arguments\r\n        serverObjects args = new serverObjects();\r\n        int argc;\r\n        if (argsString == null) {\r\n            // no args here, maybe a POST with multipart extension\r\n            int length = 0;\r\n            //System.out.println(\"HEADER: \" + requestHeader.toString()); // DEBUG\r\n            if (method.equals(httpHeader.METHOD_POST)) {\r\n\r\n                GZIPInputStream gzipBody = null;\r\n                if (requestHeader.containsKey(httpHeader.CONTENT_LENGTH)) {\r\n                    length = Integer.parseInt((String) requestHeader.get(httpHeader.CONTENT_LENGTH));\r\n                } else if (requestHeader.gzip()) {\r\n                    length = -1;\r\n                    gzipBody = new GZIPInputStream(body);\r\n                }\r\n//                } else {\r\n//                    httpd.sendRespondError(conProp,out,4,403,null,\"bad post values\",null); \r\n//                    return;\r\n//                }\r\n                \r\n                // if its a POST, it can be either multipart or as args in the body\r\n                if ((requestHeader.containsKey(httpHeader.CONTENT_TYPE)) &&\r\n                        (((String) requestHeader.get(httpHeader.CONTENT_TYPE)).toLowerCase().startsWith(\"multipart\"))) {\r\n                    // parse multipart\r\n                    HashMap files = httpd.parseMultipart(requestHeader, args, (gzipBody!=null)?gzipBody:body, length);\r\n                    // integrate these files into the args\r\n                    if (files != null) {\r\n                        Iterator fit = files.entrySet().iterator();\r\n                        Map.Entry entry;\r\n                        while (fit.hasNext()) {\r\n                            entry = (Map.Entry) fit.next();\r\n                            args.put(((String) entry.getKey()) + \"$file\", entry.getValue());\r\n                        }\r\n                    }\r\n                    argc = Integer.parseInt((String) requestHeader.get(\"ARGC\"));\r\n                } else {\r\n                    // parse args in body\r\n                    argc = httpd.parseArgs(args, (gzipBody!=null)?gzipBody:body, length);\r\n                }\r\n            } else {\r\n                // no args\r\n                argsString = null;\r\n                args = null;\r\n                argc = 0;\r\n            }\r\n        } else {\r\n            // simple args in URL (stuff after the \"?\")\r\n            argc = httpd.parseArgs(args, argsString);\r\n        }\r\n        \r\n        // check for cross site scripting - attacks in request arguments\r\n        if (argc > 0) {\r\n            // check all values for occurrences of script values\r\n            Enumeration e = args.elements(); // enumeration of values\r\n            Object val;\r\n            while (e.hasMoreElements()) {\r\n                val = e.nextElement();\r\n                if ((val != null) && (val instanceof String) && (((String) val).indexOf(\"<script\") >= 0)) {\r\n                    // deny request\r\n                    httpd.sendRespondError(conProp,out,4,403,null,\"bad post values\",null);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        \r\n        // we are finished with parsing\r\n        // the result of value hand-over is in args and argc\r\n        if (path.length() == 0) {\r\n            httpd.sendRespondError(conProp,out,4,400,null,\"Bad Request\",null);\r\n            out.flush();\r\n            return;\r\n        }\r\n        File targetClass=null;\r\n        try {\r\n            // locate the file\r\n            if (!(path.startsWith(\"/\"))) path = \"/\" + path; // attach leading slash\r\n            File   targetFile  = getLocalizedFile(path);\r\n            String targetExt   = conProp.getProperty(\"EXT\",\"\");\r\n            targetClass = rewriteClassFile(new File(htDefaultPath, path));\r\n            if (path.endsWith(\"/\")) {\r\n                String testpath;\r\n                // attach default file name\r\n                for (int i = 0; i < defaultFiles.length; i++) {\r\n                    testpath = path + defaultFiles[i];\r\n                    targetFile = getLocalizedFile(testpath);\r\n                    targetClass = rewriteClassFile(new File(htDefaultPath, testpath));\r\n                    if (!(targetFile.exists())){\r\n                        targetFile = new File(htDocsPath, testpath);\r\n                        targetClass = rewriteClassFile(targetFile);\r\n                    }\r\n                    if (targetFile.exists()) {\r\n                        path = testpath;\r\n                        break;\r\n                    }\r\n                }\r\n            }else{\r\n                    //you cannot share a .png/.gif file with a name like a class in htroot.\r\n                    if ( !(targetFile.exists()) && !((path.endsWith(\"png\")||path.endsWith(\"gif\")||path.endsWith(\".stream\"))&&targetClass!=null ) ){\r\n                        targetFile = new File(htDocsPath, path);\r\n                        targetClass = rewriteClassFile(new File(htDocsPath, path));\r\n                    }\r\n                \r\n            }\r\n            \r\n            //File targetClass = rewriteClassFile(targetFile);\r\n            Date targetDate;\r\n            boolean nocache = false;\r\n            \r\n            if ((targetClass != null) && (path.endsWith(\"png\"))) {\r\n                // call an image-servlet to produce an on-the-fly - generated image\r\n                ymagePainter yp = null;\r\n                try {\r\n                    requestHeader.put(\"CLIENTIP\", conProp.getProperty(\"CLIENTIP\"));\r\n                    requestHeader.put(\"PATH\", path);\r\n                    // in case that there are no args given, args = null or empty hashmap\r\n                    yp = (ymagePainter) rewriteMethod(targetClass).invoke(null, new Object[] {requestHeader, args, switchboard});\r\n                } catch (InvocationTargetException e) {\r\n                    this.theLogger.logSevere(\"INTERNAL ERROR: \" + e.toString() + \":\" +\r\n                    e.getMessage() +\r\n                    \" target exception at \" + targetClass + \": \" +\r\n                    e.getTargetException().toString() + \":\" +\r\n                    e.getTargetException().getMessage() +\r\n                    \"; java.awt.graphicsenv='\" + System.getProperty(\"java.awt.graphicsenv\",\"\") + \"'\",e);\r\n                    targetClass = null;\r\n                }\r\n                if (yp == null) {\r\n                    // error with image generation; send file-not-found\r\n                    httpd.sendRespondError(this.connectionProperties,out,3,404,\"File not Found\",null,null);\r\n                } else {\r\n                    // send an image to client\r\n                    targetDate = new Date(System.currentTimeMillis());\r\n                    nocache = true;\r\n                    String mimeType = mimeTable.getProperty(targetExt,\"text/html\");\r\n                    \r\n                    // generate an byte array from the generated image\r\n                    serverByteBuffer baos = new serverByteBuffer();\r\n                    //ymagePNGEncoderJDE jde = new ymagePNGEncoderJDE((ymageMatrixPainter) yp, ymagePNGEncoderJDE.FILTER_NONE, 0);\r\n                    //byte[] result = jde.pngEncode();\r\n                    ImageIO.write(ymagePNGEncoderAWT.toImage((ymageMatrixPainter) yp, true), targetExt, baos);\r\n                    byte[] result = baos.toByteArray();\r\n                    baos.close(); baos = null;\r\n                    \r\n                    // write the array to the client\r\n                    httpd.sendRespondHeader(this.connectionProperties, out, httpVersion, 200, null, mimeType, result.length, targetDate, null, null, null, null, nocache);\r\n                    if (! method.equals(httpHeader.METHOD_HEAD)) {\r\n                        Thread.sleep(200); // see below\r\n                        serverFileUtils.write(result, out);\r\n                    }\r\n                }\r\n            } else if ((targetClass != null) && (path.endsWith(\".stream\"))) {\r\n                // call rewrite-class\r\n                requestHeader.put(\"CLIENTIP\", conProp.getProperty(\"CLIENTIP\"));\r\n                requestHeader.put(\"PATH\", path);\r\n                requestHeader.put(\"INPUTSTREAM\", body);\r\n                requestHeader.put(\"OUTPUTSTREAM\", out);\r\n             \r\n                httpd.sendRespondHeader(this.connectionProperties, out, httpVersion, 200, null);                \r\n                \r\n                // in case that there are no args given, args = null or empty hashmap\r\n                /* serverObjects tp = (serverObjects) */ rewriteMethod(targetClass).invoke(null, new Object[] {requestHeader, args, switchboard});\r\n             \r\n                this.forceConnectionClose();\r\n                return;                \r\n            } else if ((targetFile.exists()) && (targetFile.canRead())) {\r\n                // we have found a file that can be written to the client\r\n                // if this file uses templates, then we use the template\r\n                // re-write - method to create an result\r\n                String mimeType = mimeTable.getProperty(targetExt,\"text/html\");\r\n                byte[] result;\r\n                boolean zipContent = requestHeader.acceptGzip() && httpd.shallTransportZipped(\".\" + conProp.getProperty(\"EXT\",\"\"));\r\n                if (path.endsWith(\"html\") || \r\n                        path.endsWith(\"xml\") || \r\n                        path.endsWith(\"rss\") || \r\n                        path.endsWith(\"csv\") ||\r\n                        path.endsWith(\"pac\")) {\r\n                            \r\n                    targetFile = getLocalizedFile(path);\r\n\t\t\t\t\tif (!(targetFile.exists())) {\r\n\t\t                // try to find that file in the htDocsPath\r\n\t\t\t\t        File trialFile = new File(htDocsPath, path);\r\n\t\t\t\t\t\tif (trialFile.exists()) targetFile = trialFile;\r\n\t\t            }\r\n            \r\n                    \r\n                    // call rewrite-class\r\n                    serverObjects tp = new serverObjects();\r\n                    if (targetClass == null) {\r\n                        targetDate = new Date(targetFile.lastModified());\r\n                    } else {\r\n                        // CGI-class: call the class to create a property for rewriting\r\n                        try {\r\n                            requestHeader.put(\"CLIENTIP\", conProp.getProperty(\"CLIENTIP\"));\r\n                            requestHeader.put(\"PATH\", path);\r\n                            // in case that there are no args given, args = null or empty hashmap\r\n                            tp = (serverObjects) rewriteMethod(targetClass).invoke(null, new Object[] {requestHeader, args, switchboard});\r\n                            // if no args given , then tp will be an empty Hashtable object (not null)\r\n                            if (tp == null) tp = new serverObjects();\r\n                            // check if the servlets requests authentification\r\n                            if (tp.containsKey(\"AUTHENTICATE\")) {\r\n                                // handle brute-force protection\r\n                                if (authorization != null) {\r\n                                    String clientIP = conProp.getProperty(\"CLIENTIP\", \"unknown-host\");\r\n                                    serverLog.logInfo(\"HTTPD\", \"dynamic log-in for account 'admin' in http file handler for path '\" + path + \"' from host '\" + clientIP + \"'\");\r\n                                    Integer attempts = (Integer) serverCore.bfHost.get(clientIP);\r\n                                    if (attempts == null)\r\n                                        serverCore.bfHost.put(clientIP, new Integer(1));\r\n                                    else\r\n                                        serverCore.bfHost.put(clientIP, new Integer(attempts.intValue() + 1));\r\n                                }\r\n                                // send authentication request to browser\r\n                                httpHeader headers = getDefaultHeaders(path);\r\n                                headers.put(httpHeader.WWW_AUTHENTICATE,\"Basic realm=\\\"\" + tp.get(\"AUTHENTICATE\", \"\") + \"\\\"\");\r\n                                httpd.sendRespondHeader(conProp,out,httpVersion,401,headers);\r\n                                return;\r\n                            } else if (tp.containsKey(\"LOCATION\")) {\r\n                                String location = tp.get(\"LOCATION\",\"\");\r\n                                if (location.length() == 0) location = path;\r\n                                \r\n                                httpHeader headers = getDefaultHeaders(path);\r\n                                headers.put(httpHeader.LOCATION,location);\r\n                                httpd.sendRespondHeader(conProp,out,httpVersion,302,headers);\r\n                                return;\r\n                            }\r\n                            // add the application version, the uptime and the client name to every rewrite table\r\n                            tp.put(\"version\", switchboard.getConfig(\"version\", \"\"));\r\n                            tp.put(\"uptime\", ((System.currentTimeMillis() - Long.parseLong(switchboard.getConfig(\"startupTime\",\"0\"))) / 1000) / 60); // uptime in minutes\r\n                            tp.put(\"clientname\", switchboard.getConfig(\"peerName\", \"anomic\"));\r\n                            //System.out.println(\"respond props: \" + ((tp == null) ? \"null\" : tp.toString())); // debug\r\n                        } catch (InvocationTargetException e) {\r\n                            if (e.getCause() instanceof InterruptedException) {\r\n                                throw new InterruptedException(e.getCause().getMessage());\r\n                            }                            \r\n                            \r\n                            this.theLogger.logSevere(\"INTERNAL ERROR: \" + e.toString() + \":\" +\r\n                                    e.getMessage() +\r\n                                    \" target exception at \" + targetClass + \": \" +\r\n                                    e.getTargetException().toString() + \":\" +\r\n                                    e.getTargetException().getMessage(),e);\r\n                            targetClass = null;\r\n                            throw e;\r\n                        }\r\n                        targetDate = new Date(System.currentTimeMillis());\r\n                        nocache = true;\r\n                    }\r\n                    // read templates\r\n                    tp.putAll(templates);\r\n                    \r\n                    // rewrite the file\r\n                    serverByteBuffer o = null;\r\n                    InputStream fis = null;\r\n                    GZIPOutputStream zippedOut = null;\r\n                    try {\r\n                        // do fileCaching here\r\n                        byte[] templateContent = null;\r\n                        if (useTemplateCache) {\r\n                            long fileSize = targetFile.length();\r\n                            if (fileSize <= 512*1024) {\r\n                                SoftReference ref = (SoftReference) templateCache.get(targetFile);\r\n                                if (ref != null) {\r\n                                    templateContent = (byte[]) ref.get();\r\n                                    if (templateContent == null) \r\n                                        templateCache.remove(targetFile);                               \r\n                                }\r\n                                \r\n                                if (templateContent == null) {\r\n                                    // loading the content of the template file into a byte array\r\n                                    templateContent = serverFileUtils.read(targetFile);\r\n                                    \r\n                                    // storing the content into the cache\r\n                                    ref = new SoftReference(templateContent);\r\n                                    templateCache.put(targetFile,ref);\r\n                                    if (this.theLogger.isLoggable(Level.FINEST))\r\n                                        this.theLogger.logFinest(\"Cache MISS for file \" + targetFile);\r\n                                } else {\r\n                                    if (this.theLogger.isLoggable(Level.FINEST))\r\n                                        this.theLogger.logFinest(\"Cache HIT for file \" + targetFile);\r\n                                }\r\n                                \r\n                                // creating an inputstream needed by the template rewrite function\r\n                                fis = new ByteArrayInputStream(templateContent);                            \r\n                                templateContent = null;\r\n                            } else {\r\n                                fis = new BufferedInputStream(new FileInputStream(targetFile));\r\n                            }\r\n                        } else {\r\n                            fis = new BufferedInputStream(new FileInputStream(targetFile));\r\n                        }\r\n\r\n                        o = new serverByteBuffer();\r\n                        if (zipContent) zippedOut = new GZIPOutputStream(o);\r\n                        httpTemplate.writeTemplate(fis, (zipContent) ? (OutputStream)zippedOut: (OutputStream)o, tp, \"-UNRESOLVED_PATTERN-\".getBytes());\r\n                        if (zipContent) {\r\n                            zippedOut.finish();\r\n                            zippedOut.flush();\r\n                            zippedOut.close();\r\n                            zippedOut = null;\r\n                        }\r\n                        result = o.toByteArray();\r\n                        \r\n                        if (this.md5Digest != null) {\r\n                            this.md5Digest.reset();\r\n                            this.md5Digest.update(result);\r\n                            byte[] digest = this.md5Digest.digest();\r\n                            StringBuffer digestString = new StringBuffer();\r\n                            for ( int i = 0; i < digest.length; i++ )\r\n                                digestString.append(Integer.toHexString( digest[i]&0xff));\r\n\r\n                        }                        \r\n                    } finally {\r\n                        if (zippedOut != null) try {zippedOut.close();} catch(Exception e) {}\r\n                        if (o != null) try {o.close(); o = null;} catch(Exception e) {}\r\n                        if (fis != null) try {fis.close(); fis=null;} catch(Exception e) {}\r\n                    }\r\n                    \r\n                } else { // no html                    \r\n                    // write the file to the client\r\n                    targetDate = new Date(targetFile.lastModified());\r\n                    result = (zipContent) ? serverFileUtils.readAndZip(targetFile) : serverFileUtils.read(targetFile);\r\n                    \r\n                    // check mime type again using the result array: these are 'magics'\r\n//                    if (serverByteBuffer.equals(result, 1, \"PNG\".getBytes())) mimeType = mimeTable.getProperty(\"png\",\"text/html\");\r\n//                    else if (serverByteBuffer.equals(result, 0, \"GIF89\".getBytes())) mimeType = mimeTable.getProperty(\"gif\",\"text/html\");\r\n//                    else if (serverByteBuffer.equals(result, 6, \"JFIF\".getBytes())) mimeType = mimeTable.getProperty(\"jpg\",\"text/html\");\r\n                    //System.out.print(\"MAGIC:\"); for (int i = 0; i < 10; i++) System.out.print(Integer.toHexString((int) result[i]) + \",\"); System.out.println();            \r\n                }\r\n                \r\n                // write the array to the client\r\n                httpd.sendRespondHeader(this.connectionProperties, out, httpVersion, 200, null, mimeType, result.length, targetDate, null, null, (zipContent)?\"gzip\":null, null, nocache);\r\n                if (! method.equals(httpHeader.METHOD_HEAD)) {\r\n                    Thread.sleep(200); // this solved the message problem (!!)\r\n                    serverFileUtils.write(result, out);\r\n                }\r\n            } else {\r\n                httpd.sendRespondError(conProp,out,3,404,\"File not Found\",null,null);\r\n                return;\r\n            }\r\n        } catch (Exception e) {     \r\n            try {\r\n                // doing some errorhandling ...\r\n                int httpStatusCode = 400; \r\n                String httpStatusText = null; \r\n                StringBuffer errorMessage = new StringBuffer(); \r\n                Exception errorExc = null;            \r\n                \r\n                String errorMsg = e.getMessage();\r\n                if (\r\n                        (e instanceof InterruptedException) ||\r\n                        ((errorMsg != null) && (errorMsg.startsWith(\"Socket closed\")) && (Thread.currentThread().isInterrupted()))\r\n                   ) {\r\n                    errorMessage.append(\"Interruption detected while processing query.\");\r\n                    httpStatusCode = 503;\r\n                } else {\r\n                    if ((errorMsg != null) && \r\n                        (\r\n                           errorMsg.startsWith(\"Broken pipe\") || \r\n                           errorMsg.startsWith(\"Connection reset\") ||\r\n                           errorMsg.startsWith(\"Software caused connection abort\")                           \r\n                       )) {\r\n                        // client closed the connection, so we just end silently\r\n                        errorMessage.append(\"Client unexpectedly closed connection while processing query.\");\r\n                    } else if ((errorMsg != null) && (errorMsg.startsWith(\"Connection timed out\"))) {\r\n                        errorMessage.append(\"Connection timed out.\");\r\n                    } else {\r\n                        errorMessage.append(\"Unexpected error while processing query.\");\r\n                        httpStatusCode = 500;\r\n                        errorExc = e;\r\n                    }\r\n                }\r\n                \r\n                errorMessage.append(\"\\nSession: \").append(Thread.currentThread().getName())\r\n                            .append(\"\\nQuery:   \").append(path)\r\n                            .append(\"\\nClient:  \").append(conProp.getProperty(httpHeader.CONNECTION_PROP_CLIENTIP,\"unknown\")) \r\n                            .append(\"\\nReason:  \").append(e.toString());    \r\n                \r\n                if (!conProp.containsKey(httpHeader.CONNECTION_PROP_PROXY_RESPOND_HEADER)) {\r\n                    // sending back an error message to the client \r\n                    // if we have not already send an http header\r\n                    httpd.sendRespondError(conProp,out, 4, httpStatusCode, httpStatusText, errorMessage.toString(),errorExc);\r\n                } else {\r\n                    // otherwise we close the connection\r\n                    this.forceConnectionClose();\r\n                }    \r\n                \r\n                // if it is an unexpected error we log it \r\n                if (httpStatusCode == 500) {\r\n                    this.theLogger.logWarning(errorMessage.toString(),e);\r\n                }\r\n                \r\n            } catch (Exception ee) {\r\n                this.forceConnectionClose();\r\n            }            \r\n            \r\n        } finally {\r\n            try {out.flush();}catch (Exception e) {}\r\n            if (!(requestHeader.get(httpHeader.CONNECTION, \"close\").equals(\"keep-alive\"))) {\r\n                // wait a little time until everything closes so that clients can read from the streams/sockets\r\n                try {Thread.sleep(1000);} catch (InterruptedException e) {}\r\n            }\r\n        }\r\n    }","commit_id":"0f1212feb9e1f8555818896ea8125746351d9c64","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"@Override\r\n  protected final Expr compilePath(final QueryContext ctx, final VarScope scp)\r\n      throws QueryException {\r\n    // merge two axis paths\r\n    if(root instanceof AxisPath) {\r\n      Expr[] st = ((AxisPath) root).steps;\r\n      root = ((AxisPath) root).root;\r\n      for(final Expr s : steps) st = Array.add(st, s);\r\n      steps = st;\r\n      // refresh root context\r\n      ctx.compInfo(OPTMERGE);\r\n      ctx.value = root(ctx);\r\n    }\r\n\r\n    final Step s = voidStep(steps);\r\n    if(s != null) COMPSELF.thrw(info, s);\r\n\r\n    for(int i = 0; i != steps.length; ++i) {\r\n      final Expr e = steps[i].compile(ctx, scp);\r\n      if(!(e instanceof Step)) return e;\r\n      steps[i] = e;\r\n    }\r\n    optSteps(ctx);\r\n\r\n    final Expr path = optimize(ctx, scp);\r\n\r\n    // heuristics: wrap with filter expression if only one result is expected\r\n    return size() != 1 ? path :\r\n      Filter.get(info, this, Pos.get(1, size(), info)).optimize(ctx, scp);\r\n  }","id":54309,"modified_method":"@Override\r\n  protected final Expr compilePath(final QueryContext ctx, final VarScope scp)\r\n      throws QueryException {\r\n    // merge two axis paths\r\n    if(root instanceof AxisPath) {\r\n      Expr[] st = ((AxisPath) root).steps;\r\n      root = ((AxisPath) root).root;\r\n      for(final Expr s : steps) st = Array.add(st, s);\r\n      steps = st;\r\n      // refresh root context\r\n      ctx.compInfo(OPTMERGE);\r\n      ctx.value = root(ctx);\r\n    }\r\n\r\n    final Step s = voidStep(steps);\r\n    if(s != null) COMPSELF.thrw(info, s);\r\n\r\n    for(int i = 0; i != steps.length; ++i) {\r\n      final Expr e = steps[i].compile(ctx, scp);\r\n      if(!(e instanceof Step)) return e;\r\n      steps[i] = e;\r\n    }\r\n    optSteps(ctx);\r\n\r\n    return optimize(ctx, scp);\r\n  }","commit_id":"bb1327837a85fc7320d6a5d3c303aad3316d151b","url":"https://github.com/BaseXdb/basex"},{"original_method":"public boolean maybeSendPacket(long now, Vector<ResendPacketItem> rpiTemp, int[] rpiIntTemp)\n\t                throws BlockedTooLongException {\n\t\tint maxPacketSize = pn.crypto.socket.getMaxPacketSize();\n\n\t\tSessionKey sessionKey = pn.getCurrentKeyTracker();\n\t\tif(sessionKey == null) {\n\t\t\tLogger.warning(this, \"No key for encrypting hash\");\n\t\t\treturn false;\n\t\t}\n\n\t\tNPFPacket packet = createPacket(maxPacketSize - HMAC_LENGTH, pn.getMessageQueue());\n\t\tif(packet == null) return false;\n\n\t\tpacket.setSequenceNumber(getSequenceNumber());\n\n\t\tint paddedLen = packet.getLength() + HMAC_LENGTH;\n\t\tif(pn.crypto.config.paddDataPackets()) {\n\t\t\tint packetLength = paddedLen;\n\t\t\tif(logDEBUG) Logger.debug(this, \"Pre-padding length: \" + packetLength);\n\n\t\t\tif(packetLength < 64) {\n\t\t\t\tpaddedLen = 64 + pn.node.fastWeakRandom.nextInt(32);\n\t\t\t} else {\n\t\t\t\tpaddedLen = ((packetLength + 63) / 64) * 64;\n\t\t\t\tpaddedLen += pn.node.fastWeakRandom.nextInt(64);\n\t\t\t\tif(packetLength <= maxPacketSize && paddedLen > maxPacketSize)\n\t\t\t\t\tpaddedLen = maxPacketSize;\n\t\t\t}\n\t\t}\n\n\t\tbyte[] data = new byte[paddedLen];\n\t\tpacket.toBytes(data, HMAC_LENGTH, pn.node.fastWeakRandom);\n\n\t\tBlockCipher ivCipher = sessionKey.ivCipher;\n\n\t\tbyte[] IV = new byte[ivCipher.getBlockSize() / 8];\n\t\tSystem.arraycopy(sessionKey.ivNonce, 0, IV, 0, IV.length);\n\t\tSystem.arraycopy(data, HMAC_LENGTH, IV, IV.length - 4, 4);\n\n\t\tivCipher.encipher(IV, IV);\n\n\t\tPCFBMode payloadCipher = PCFBMode.create(sessionKey.sessionCipher, IV);\n\t\tpayloadCipher.blockEncipher(data, HMAC_LENGTH, paddedLen - HMAC_LENGTH);\n\n\t\t//Add hash\n\t\tbyte[] text = new byte[paddedLen - HMAC_LENGTH];\n\t\tSystem.arraycopy(data, HMAC_LENGTH, text, 0, text.length);\n\n\t\tbyte[] hash = HMAC.macWithSHA256(sessionKey.hmacKey, text, HMAC_LENGTH);\n\n\t\tSystem.arraycopy(hash, 0, data, 0, HMAC_LENGTH);\n\n\t\ttry {\n\t\t\tif(logMINOR) {\n\t\t\t\tString fragments = null;\n\t\t\t\tfor(MessageFragment frag : packet.getFragments()) {\n\t\t\t\t\tif(fragments == null) fragments = \"\" + frag.messageID;\n\t\t\t\t\telse fragments = fragments + \", \" + frag.messageID;\n\t\t\t\t}\n\n\t\t\t\tLogger.minor(this, \"Sending packet \" + packet.getSequenceNumber() + \" (\"\n\t\t\t\t                + data.length + \" bytes) with fragments \" + fragments + \" and \"\n\t\t\t\t                + packet.getAcks().size() + \" acks\");\n\t\t\t}\n\t\t\tpn.crypto.socket.sendPacket(data, pn.getPeer(), pn.allowLocalAddresses());\n\t\t} catch (LocalAddressException e) {\n\t\t\tLogger.error(this, \"Caught exception while sending packet\", e);\n\t\t\treturn false;\n\t\t}\n\n\t\tif(packet.getFragments().size() != 0) {\n\t\t\tSentPacket sentPacket = new SentPacket(this);\n\t\t\tsentPacket.sent();\n\t\t\tfor(MessageFragment frag : packet.getFragments()) {\n\t\t\t\tsentPacket.addFragment(frag);\n\t\t\t}\n\t\t\tsynchronized(sentPackets) {\n\t\t\t\tsentPackets.put(packet.getSequenceNumber(), sentPacket);\n\t\t\t}\n\t\t}\n\n\t\tpn.sentPacket();\n\t\tpn.reportOutgoingPacket(data, 0, data.length, System.currentTimeMillis());\n\t\tif(PeerNode.shouldThrottle(pn.getPeer(), pn.node)) {\n\t\t\tpn.node.outputThrottle.forceGrab(data.length);\n\t\t}\n\t\tif(packet.getFragments().size() == 0) {\n\t\t\tpn.node.nodeStats.reportNotificationOnlyPacketSent(data.length);\n\t\t}\n\n\t\treturn true;\n\t}","id":54310,"modified_method":"public boolean maybeSendPacket(long now, Vector<ResendPacketItem> rpiTemp, int[] rpiIntTemp)\n\t                throws BlockedTooLongException {\n\t\tint maxPacketSize = pn.crypto.socket.getMaxPacketSize();\n\n\t\tSessionKey sessionKey = pn.getCurrentKeyTracker();\n\t\tif(sessionKey == null) {\n\t\t\tLogger.warning(this, \"No key for encrypting hash\");\n\t\t\treturn false;\n\t\t}\n\n\t\tNPFPacket packet = createPacket(maxPacketSize - HMAC_LENGTH, pn.getMessageQueue());\n\t\tif(packet == null) return false;\n\n\t\tint paddedLen = packet.getLength() + HMAC_LENGTH;\n\t\tif(pn.crypto.config.paddDataPackets()) {\n\t\t\tint packetLength = paddedLen;\n\t\t\tif(logDEBUG) Logger.debug(this, \"Pre-padding length: \" + packetLength);\n\n\t\t\tif(packetLength < 64) {\n\t\t\t\tpaddedLen = 64 + pn.node.fastWeakRandom.nextInt(32);\n\t\t\t} else {\n\t\t\t\tpaddedLen = ((packetLength + 63) / 64) * 64;\n\t\t\t\tpaddedLen += pn.node.fastWeakRandom.nextInt(64);\n\t\t\t\tif(packetLength <= maxPacketSize && paddedLen > maxPacketSize)\n\t\t\t\t\tpaddedLen = maxPacketSize;\n\t\t\t}\n\t\t}\n\n\t\tbyte[] data = new byte[paddedLen];\n\t\tpacket.toBytes(data, HMAC_LENGTH, pn.node.fastWeakRandom);\n\n\t\tBlockCipher ivCipher = sessionKey.ivCipher;\n\n\t\tbyte[] IV = new byte[ivCipher.getBlockSize() / 8];\n\t\tSystem.arraycopy(sessionKey.ivNonce, 0, IV, 0, IV.length);\n\t\tSystem.arraycopy(data, HMAC_LENGTH, IV, IV.length - 4, 4);\n\n\t\tivCipher.encipher(IV, IV);\n\n\t\tPCFBMode payloadCipher = PCFBMode.create(sessionKey.sessionCipher, IV);\n\t\tpayloadCipher.blockEncipher(data, HMAC_LENGTH, paddedLen - HMAC_LENGTH);\n\n\t\t//Add hash\n\t\tbyte[] text = new byte[paddedLen - HMAC_LENGTH];\n\t\tSystem.arraycopy(data, HMAC_LENGTH, text, 0, text.length);\n\n\t\tbyte[] hash = HMAC.macWithSHA256(sessionKey.hmacKey, text, HMAC_LENGTH);\n\n\t\tSystem.arraycopy(hash, 0, data, 0, HMAC_LENGTH);\n\n\t\ttry {\n\t\t\tif(logMINOR) {\n\t\t\t\tString fragments = null;\n\t\t\t\tfor(MessageFragment frag : packet.getFragments()) {\n\t\t\t\t\tif(fragments == null) fragments = \"\" + frag.messageID;\n\t\t\t\t\telse fragments = fragments + \", \" + frag.messageID;\n\t\t\t\t}\n\n\t\t\t\tLogger.minor(this, \"Sending packet \" + packet.getSequenceNumber() + \" (\"\n\t\t\t\t                + data.length + \" bytes) with fragments \" + fragments + \" and \"\n\t\t\t\t                + packet.getAcks().size() + \" acks\");\n\t\t\t}\n\t\t\tpn.crypto.socket.sendPacket(data, pn.getPeer(), pn.allowLocalAddresses());\n\t\t} catch (LocalAddressException e) {\n\t\t\tLogger.error(this, \"Caught exception while sending packet\", e);\n\t\t\treturn false;\n\t\t}\n\n\t\tif(packet.getFragments().size() != 0) {\n\t\t\tSentPacket sentPacket = null;\n\t\t\tsynchronized(sentPackets) {\n\t\t\t\tsentPackets.get(packet.getSequenceNumber());\n\t\t\t}\n\t\t\tif(sentPacket != null) sentPacket.sent();\n\t\t}\n\n\t\tpn.sentPacket();\n\t\tpn.reportOutgoingPacket(data, 0, data.length, System.currentTimeMillis());\n\t\tif(PeerNode.shouldThrottle(pn.getPeer(), pn.node)) {\n\t\t\tpn.node.outputThrottle.forceGrab(data.length);\n\t\t}\n\t\tif(packet.getFragments().size() == 0) {\n\t\t\tpn.node.nodeStats.reportNotificationOnlyPacketSent(data.length);\n\t\t}\n\n\t\treturn true;\n\t}","commit_id":"9952ed2f7b5c658cc1287d8aec98471cbba0c7f0","url":"https://github.com/freenet/fred"},{"original_method":"NPFPacket createPacket(int maxPacketSize, PeerMessageQueue messageQueue) throws BlockedTooLongException {\n\t\t//Mark packets as lost\n\t\tsynchronized(sentPackets) {\n\t\t\tint avgRtt = Math.max(250, averageRTT());\n\t\t\tlong curTime = System.currentTimeMillis();\n\n\t\t\tIterator<Map.Entry<Integer, SentPacket>> it = sentPackets.entrySet().iterator();\n\t\t\twhile(it.hasNext()) {\n\t\t\t\tMap.Entry<Integer, SentPacket> e = it.next();\n\t\t\t\tSentPacket s = e.getValue();\n\t\t\t\tif(s.getSentTime() < (curTime - NUM_RTTS_TO_LOOSE * avgRtt)) {\n\t\t\t\t\tif(logMINOR) {\n\t\t\t\t\t\tLogger.minor(this, \"Assuming packet \" + e.getKey() + \" has been lost. \"\n\t\t\t\t\t\t                + \"Delay \" + (curTime - s.getSentTime()) + \"ms, \"\n\t\t\t\t\t\t                + \"threshold \" + (NUM_RTTS_TO_LOOSE * avgRtt) + \"ms\");\n\t\t\t\t\t}\n\t\t\t\t\ts.lost();\n\t\t\t\t\tit.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tNPFPacket packet = new NPFPacket();\n\n\t\tint numAcks = 0;\n\t\tsynchronized(acks) {\n\t\t\tIterator<Integer> it = acks.iterator();\n\t\t\twhile (it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\tif(!packet.addAck(it.next())) break;\n\t\t\t\t++numAcks;\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\nfragments:\n\t\tfor(int i = 0; i < startedByPrio.size(); i++) {\n\t\t\tHashMap<Integer, MessageWrapper> started = startedByPrio.get(i);\n\n\t\t\t//Try to finish messages that have been started\n\t\t\tsynchronized(started) {\n\t\t\t\tIterator<MessageWrapper> it = started.values().iterator();\n\t\t\t\twhile(it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\t\tMessageWrapper wrapper = it.next();\n\t\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\t\tif(frag == null) continue;\n\t\t\t\t\tpacket.addMessageFragment(frag);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Add messages from the message queue\n\t\t\twhile ((packet.getLength() + 10) < maxPacketSize) { //Fragment header is max 9 bytes, allow min 1 byte data\n\t\t\t\tMessageItem item = null;\n\t\t\t\tsynchronized(messageQueue) {\n\t\t\t\t\titem = messageQueue.grabQueuedMessageItem(i);\n\t\t\t\t}\n\t\t\t\tif(item == null) break;\n\n\t\t\t\tint bufferUsage;\n\t\t\t\tsynchronized(bufferUsageLock) {\n\t\t\t\t\tbufferUsage = usedBufferOtherSide;\n\t\t\t\t}\n\t\t\t\tif((bufferUsage + item.buf.length) > MAX_BUFFER_SIZE) {\n\t\t\t\t\tif(logDEBUG) Logger.debug(this, \"Would excede remote buffer size, requeuing and sending packet. Remote at \" + bufferUsage);\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak fragments;\n\t\t\t\t}\n\n\t\t\t\tint messageID = getMessageID();\n\t\t\t\tif(messageID == -1) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"No availiable message ID, requeuing and sending packet\");\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak fragments;\n\t\t\t\t}\n\n\t\t\t\tMessageWrapper wrapper = new MessageWrapper(item, messageID);\n\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\tif(frag == null) {\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpacket.addMessageFragment(frag);\n\n\t\t\t\t//Priority of the one we grabbed might be higher than i\n\t\t\t\tHashMap<Integer, MessageWrapper> queue = startedByPrio.get(item.getPriority());\n\t\t\t\tsynchronized(queue) {\n\t\t\t\t\tqueue.put(messageID, wrapper);\n\t\t\t\t}\n\n\t\t\t\tsynchronized(bufferUsageLock) {\n\t\t\t\t\tusedBufferOtherSide += item.buf.length;\n\t\t\t\t\tif(logDEBUG) Logger.debug(this, \"Added \" + item.buf.length + \" to remote buffer. Total is now \" + usedBufferOtherSide);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(packet.getLength() == 5) return null;\n\n\t\treturn packet;\n\t}","id":54311,"modified_method":"NPFPacket createPacket(int maxPacketSize, PeerMessageQueue messageQueue) throws BlockedTooLongException {\n\t\t//Mark packets as lost\n\t\tsynchronized(sentPackets) {\n\t\t\tint avgRtt = Math.max(250, averageRTT());\n\t\t\tlong curTime = System.currentTimeMillis();\n\n\t\t\tIterator<Map.Entry<Integer, SentPacket>> it = sentPackets.entrySet().iterator();\n\t\t\twhile(it.hasNext()) {\n\t\t\t\tMap.Entry<Integer, SentPacket> e = it.next();\n\t\t\t\tSentPacket s = e.getValue();\n\t\t\t\tif(s.getSentTime() < (curTime - NUM_RTTS_TO_LOOSE * avgRtt)) {\n\t\t\t\t\tif(logMINOR) {\n\t\t\t\t\t\tLogger.minor(this, \"Assuming packet \" + e.getKey() + \" has been lost. \"\n\t\t\t\t\t\t                + \"Delay \" + (curTime - s.getSentTime()) + \"ms, \"\n\t\t\t\t\t\t                + \"threshold \" + (NUM_RTTS_TO_LOOSE * avgRtt) + \"ms\");\n\t\t\t\t\t}\n\t\t\t\t\ts.lost();\n\t\t\t\t\tit.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tNPFPacket packet = new NPFPacket();\n\n\t\tint numAcks = 0;\n\t\tsynchronized(acks) {\n\t\t\tIterator<Integer> it = acks.iterator();\n\t\t\twhile (it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\tif(!packet.addAck(it.next())) break;\n\t\t\t\t++numAcks;\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\nfragments:\n\t\tfor(int i = 0; i < startedByPrio.size(); i++) {\n\t\t\tHashMap<Integer, MessageWrapper> started = startedByPrio.get(i);\n\n\t\t\t//Try to finish messages that have been started\n\t\t\tsynchronized(started) {\n\t\t\t\tIterator<MessageWrapper> it = started.values().iterator();\n\t\t\t\twhile(it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\t\tMessageWrapper wrapper = it.next();\n\t\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\t\tif(frag == null) continue;\n\t\t\t\t\tpacket.addMessageFragment(frag);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Add messages from the message queue\n\t\t\twhile ((packet.getLength() + 10) < maxPacketSize) { //Fragment header is max 9 bytes, allow min 1 byte data\n\t\t\t\tMessageItem item = null;\n\t\t\t\tsynchronized(messageQueue) {\n\t\t\t\t\titem = messageQueue.grabQueuedMessageItem(i);\n\t\t\t\t}\n\t\t\t\tif(item == null) break;\n\n\t\t\t\tint bufferUsage;\n\t\t\t\tsynchronized(bufferUsageLock) {\n\t\t\t\t\tbufferUsage = usedBufferOtherSide;\n\t\t\t\t}\n\t\t\t\tif((bufferUsage + item.buf.length) > MAX_BUFFER_SIZE) {\n\t\t\t\t\tif(logDEBUG) Logger.debug(this, \"Would excede remote buffer size, requeuing and sending packet. Remote at \" + bufferUsage);\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak fragments;\n\t\t\t\t}\n\n\t\t\t\tint messageID = getMessageID();\n\t\t\t\tif(messageID == -1) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"No availiable message ID, requeuing and sending packet\");\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak fragments;\n\t\t\t\t}\n\n\t\t\t\tMessageWrapper wrapper = new MessageWrapper(item, messageID);\n\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\tif(frag == null) {\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpacket.addMessageFragment(frag);\n\n\t\t\t\t//Priority of the one we grabbed might be higher than i\n\t\t\t\tHashMap<Integer, MessageWrapper> queue = startedByPrio.get(item.getPriority());\n\t\t\t\tsynchronized(queue) {\n\t\t\t\t\tqueue.put(messageID, wrapper);\n\t\t\t\t}\n\n\t\t\t\tsynchronized(bufferUsageLock) {\n\t\t\t\t\tusedBufferOtherSide += item.buf.length;\n\t\t\t\t\tif(logDEBUG) Logger.debug(this, \"Added \" + item.buf.length + \" to remote buffer. Total is now \" + usedBufferOtherSide);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(packet.getLength() == 5) return null;\n\n\t\tint seqNum = getSequenceNumber();\n\t\tpacket.setSequenceNumber(seqNum);\n\n\t\tSentPacket sentPacket = new SentPacket(this);\n\t\tfor(MessageFragment frag : packet.getFragments()) {\n\t\t\tsentPacket.addFragment(frag);\n\t\t}\n\t\tsentPacket.sent();\n\n\t\tsynchronized(sentPackets) {\n\t\t\tsentPackets.put(seqNum, sentPacket);\n\t\t}\n\n\t\treturn packet;\n\t}","commit_id":"9952ed2f7b5c658cc1287d8aec98471cbba0c7f0","url":"https://github.com/freenet/fred"},{"original_method":"public boolean maybeSendPacket(long now, Vector<ResendPacketItem> rpiTemp, int[] rpiIntTemp)\n\t                throws BlockedTooLongException {\n\t\tint maxPacketSize = pn.crypto.socket.getMaxPacketSize();\n\n\t\tSessionKey sessionKey = pn.getCurrentKeyTracker();\n\t\tif(sessionKey == null) {\n\t\t\tLogger.warning(this, \"No key for encrypting hash\");\n\t\t\treturn false;\n\t\t}\n\n\t\tNPFPacket packet = createPacket(maxPacketSize - HMAC_LENGTH, pn.getMessageQueue());\n\t\tif(packet == null) return false;\n\n\t\tint paddedLen = packet.getLength() + HMAC_LENGTH;\n\t\tif(pn.crypto.config.paddDataPackets()) {\n\t\t\tint packetLength = paddedLen;\n\t\t\tif(logDEBUG) Logger.debug(this, \"Pre-padding length: \" + packetLength);\n\n\t\t\tif(packetLength < 64) {\n\t\t\t\tpaddedLen = 64 + pn.paddingGen.nextInt(32);\n\t\t\t} else {\n\t\t\t\tpaddedLen = ((packetLength + 63) / 64) * 64;\n\t\t\t\tif(paddedLen < maxPacketSize) {\n\t\t\t\t\tpaddedLen += pn.paddingGen.nextInt(Math.min(64, maxPacketSize - paddedLen));\n\t\t\t\t} else if((packetLength <= maxPacketSize) && (paddedLen > maxPacketSize)) {\n\t\t\t\t\tpaddedLen = maxPacketSize;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbyte[] data = new byte[paddedLen];\n\t\tpacket.toBytes(data, HMAC_LENGTH, pn.paddingGen);\n\n\t\tBlockCipher ivCipher = sessionKey.ivCipher;\n\n\t\tbyte[] IV = new byte[ivCipher.getBlockSize() / 8];\n\t\tSystem.arraycopy(sessionKey.ivNonce, 0, IV, 0, IV.length);\n\t\tSystem.arraycopy(data, HMAC_LENGTH, IV, IV.length - 4, 4);\n\n\t\tivCipher.encipher(IV, IV);\n\n\t\tPCFBMode payloadCipher = PCFBMode.create(sessionKey.outgoingCipher, IV);\n\t\tpayloadCipher.blockEncipher(data, HMAC_LENGTH, paddedLen - HMAC_LENGTH);\n\n\t\t//Add hash\n\t\tbyte[] text = new byte[paddedLen - HMAC_LENGTH];\n\t\tSystem.arraycopy(data, HMAC_LENGTH, text, 0, text.length);\n\n\t\tbyte[] hash = HMAC.macWithSHA256(sessionKey.hmacKey, text, HMAC_LENGTH);\n\n\t\tSystem.arraycopy(hash, 0, data, 0, HMAC_LENGTH);\n\n\t\ttry {\n\t\t\tif(logMINOR) {\n\t\t\t\tString fragments = null;\n\t\t\t\tfor(MessageFragment frag : packet.getFragments()) {\n\t\t\t\t\tif(fragments == null) fragments = \"\" + frag.messageID;\n\t\t\t\t\telse fragments = fragments + \", \" + frag.messageID;\n\t\t\t\t}\n\n\t\t\t\tLogger.minor(this, \"Sending packet \" + packet.getSequenceNumber() + \" (\"\n\t\t\t\t                + data.length + \" bytes) with fragments \" + fragments + \" and \"\n\t\t\t\t                + packet.getAcks().size() + \" acks\");\n\t\t\t}\n\t\t\tpn.crypto.socket.sendPacket(data, pn.getPeer(), pn.allowLocalAddresses());\n\t\t} catch (LocalAddressException e) {\n\t\t\tLogger.error(this, \"Caught exception while sending packet\", e);\n\t\t\treturn false;\n\t\t}\n\n\t\tif(packet.getFragments().size() != 0) {\n\t\t\tSentPacket sentPacket = null;\n\t\t\tsynchronized(sentPackets) {\n\t\t\t\tsentPacket = sentPackets.get(packet.getSequenceNumber());\n\t\t\t}\n\t\t\tif(sentPacket != null) sentPacket.sent();\n\t\t}\n\n\t\tpn.sentPacket();\n\t\tpn.reportOutgoingPacket(data, 0, data.length, System.currentTimeMillis());\n\t\tif(PeerNode.shouldThrottle(pn.getPeer(), pn.node)) {\n\t\t\tpn.node.outputThrottle.forceGrab(data.length);\n\t\t}\n\t\tif(packet.getFragments().size() == 0) {\n\t\t\tpn.node.nodeStats.reportNotificationOnlyPacketSent(data.length);\n\t\t}\n\n\t\treturn true;\n\t}","id":54312,"modified_method":"public boolean maybeSendPacket(long now, Vector<ResendPacketItem> rpiTemp, int[] rpiIntTemp)\n\t                throws BlockedTooLongException {\n\t\tint maxPacketSize = pn.crypto.socket.getMaxPacketSize();\n\n\t\tSessionKey sessionKey = pn.getCurrentKeyTracker();\n\t\tif(sessionKey == null) {\n\t\t\tLogger.warning(this, \"No key for encrypting hash\");\n\t\t\treturn false;\n\t\t}\n\n\t\tNPFPacket packet = createPacket(maxPacketSize - HMAC_LENGTH, pn.getMessageQueue());\n\t\tif(packet == null) return false;\n\n\t\tint paddedLen = packet.getLength() + HMAC_LENGTH;\n\t\tif(pn.crypto.config.paddDataPackets()) {\n\t\t\tint packetLength = paddedLen;\n\t\t\tif(logDEBUG) Logger.debug(this, \"Pre-padding length: \" + packetLength);\n\n\t\t\tif(packetLength < 64) {\n\t\t\t\tpaddedLen = 64 + pn.paddingGen.nextInt(32);\n\t\t\t} else {\n\t\t\t\tpaddedLen = ((packetLength + 63) / 64) * 64;\n\t\t\t\tif(paddedLen < maxPacketSize) {\n\t\t\t\t\tpaddedLen += pn.paddingGen.nextInt(Math.min(64, maxPacketSize - paddedLen));\n\t\t\t\t} else if((packetLength <= maxPacketSize) && (paddedLen > maxPacketSize)) {\n\t\t\t\t\tpaddedLen = maxPacketSize;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbyte[] data = new byte[paddedLen];\n\t\tpacket.toBytes(data, HMAC_LENGTH, pn.paddingGen);\n\n\t\tBlockCipher ivCipher = sessionKey.ivCipher;\n\n\t\tbyte[] IV = new byte[ivCipher.getBlockSize() / 8];\n\t\tSystem.arraycopy(sessionKey.ivNonce, 0, IV, 0, IV.length);\n\t\tSystem.arraycopy(data, HMAC_LENGTH, IV, IV.length - 4, 4);\n\n\t\tivCipher.encipher(IV, IV);\n\n\t\tPCFBMode payloadCipher = PCFBMode.create(sessionKey.outgoingCipher, IV);\n\t\tpayloadCipher.blockEncipher(data, HMAC_LENGTH, paddedLen - HMAC_LENGTH);\n\n\t\t//Add hash\n\t\tbyte[] text = new byte[paddedLen - HMAC_LENGTH];\n\t\tSystem.arraycopy(data, HMAC_LENGTH, text, 0, text.length);\n\n\t\tbyte[] hash = HMAC.macWithSHA256(sessionKey.hmacKey, text, HMAC_LENGTH);\n\n\t\tSystem.arraycopy(hash, 0, data, 0, HMAC_LENGTH);\n\n\t\ttry {\n\t\t\tif(logMINOR) {\n\t\t\t\tString fragments = null;\n\t\t\t\tfor(MessageFragment frag : packet.getFragments()) {\n\t\t\t\t\tif(fragments == null) fragments = \"\" + frag.messageID;\n\t\t\t\t\telse fragments = fragments + \", \" + frag.messageID;\n\t\t\t\t}\n\n\t\t\t\tLogger.minor(this, \"Sending packet \" + packet.getSequenceNumber() + \" (\"\n\t\t\t\t                + data.length + \" bytes) with fragments \" + fragments + \" and \"\n\t\t\t\t                + packet.getAcks().size() + \" acks\");\n\t\t\t}\n\t\t\tpn.crypto.socket.sendPacket(data, pn.getPeer(), pn.allowLocalAddresses());\n\t\t} catch (LocalAddressException e) {\n\t\t\tLogger.error(this, \"Caught exception while sending packet\", e);\n\t\t\treturn false;\n\t\t}\n\n\t\tif(packet.getFragments().size() > 0) {\n\t\t\tSentPacket sentPacket = null;\n\t\t\tsynchronized(sentPackets) {\n\t\t\t\tsentPacket = sentPackets.get(packet.getSequenceNumber());\n\t\t\t}\n\t\t\tif(sentPacket != null) sentPacket.sent();\n\t\t}\n\n\t\tpn.sentPacket();\n\t\tpn.reportOutgoingPacket(data, 0, data.length, System.currentTimeMillis());\n\t\tif(PeerNode.shouldThrottle(pn.getPeer(), pn.node)) {\n\t\t\tpn.node.outputThrottle.forceGrab(data.length);\n\t\t}\n\t\tif(packet.getFragments().size() == 0) {\n\t\t\tpn.node.nodeStats.reportNotificationOnlyPacketSent(data.length);\n\t\t}\n\n\t\treturn true;\n\t}","commit_id":"4fea758d5b743ce3ba82e5923ab7db06b5c2c874","url":"https://github.com/freenet/fred"},{"original_method":"NPFPacket createPacket(int maxPacketSize, PeerMessageQueue messageQueue) throws BlockedTooLongException {\n\t\t//Mark packets as lost\n\t\tsynchronized(sentPackets) {\n\t\t\tdouble avgRtt = Math.max(250, averageRTT());\n\t\t\tlong curTime = System.currentTimeMillis();\n\n\t\t\tIterator<Map.Entry<Integer, SentPacket>> it = sentPackets.entrySet().iterator();\n\t\t\twhile(it.hasNext()) {\n\t\t\t\tMap.Entry<Integer, SentPacket> e = it.next();\n\t\t\t\tSentPacket s = e.getValue();\n\t\t\t\tif(s.getSentTime() < (curTime - NUM_RTTS_TO_LOOSE * avgRtt)) {\n\t\t\t\t\tif(logMINOR) {\n\t\t\t\t\t\tLogger.minor(this, \"Assuming packet \" + e.getKey() + \" has been lost. \"\n\t\t\t\t\t\t                + \"Delay \" + (curTime - s.getSentTime()) + \"ms, \"\n\t\t\t\t\t\t                + \"threshold \" + (NUM_RTTS_TO_LOOSE * avgRtt) + \"ms\");\n\t\t\t\t\t}\n\t\t\t\t\ts.lost();\n\t\t\t\t\tit.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tNPFPacket packet = new NPFPacket();\n\t\tSentPacket sentPacket = new SentPacket(this);\n\n\t\tint numAcks = 0;\n\t\tsynchronized(acks) {\n\t\t\tIterator<Integer> it = acks.iterator();\n\t\t\twhile (it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\tif(!packet.addAck(it.next())) break;\n\t\t\t\t++numAcks;\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\nfragments:\n\t\tfor(int i = 0; i < startedByPrio.size(); i++) {\n\t\t\tHashMap<Integer, MessageWrapper> started = startedByPrio.get(i);\n\n\t\t\t//Try to finish messages that have been started\n\t\t\tsynchronized(started) {\n\t\t\t\tIterator<MessageWrapper> it = started.values().iterator();\n\t\t\t\twhile(it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\t\tMessageWrapper wrapper = it.next();\n\t\t\t\t\twhile(packet.getLength() < maxPacketSize) {\n\t\t\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\t\t\tif(frag == null) break;\n\t\t\t\t\t\tpacket.addMessageFragment(frag);\n\t\t\t\t\t\tsentPacket.addFragment(frag);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Add messages from the message queue\n\t\t\twhile ((packet.getLength() + 10) < maxPacketSize) { //Fragment header is max 9 bytes, allow min 1 byte data\n\t\t\t\tMessageItem item = null;\n\t\t\t\tsynchronized(messageQueue) {\n\t\t\t\t\titem = messageQueue.grabQueuedMessageItem(i);\n\t\t\t\t}\n\t\t\t\tif(item == null) break;\n\n\t\t\t\tint bufferUsage;\n\t\t\t\tsynchronized(bufferUsageLock) {\n\t\t\t\t\tbufferUsage = usedBufferOtherSide;\n\t\t\t\t}\n\t\t\t\tif((bufferUsage + item.buf.length) > MAX_BUFFER_SIZE) {\n\t\t\t\t\tif(logDEBUG) Logger.debug(this, \"Would excede remote buffer size, requeuing and sending packet. Remote at \" + bufferUsage);\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak fragments;\n\t\t\t\t}\n\n\t\t\t\tint messageID = getMessageID();\n\t\t\t\tif(messageID == -1) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"No availiable message ID, requeuing and sending packet\");\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak fragments;\n\t\t\t\t}\n\n\t\t\t\tMessageWrapper wrapper = new MessageWrapper(item, messageID);\n\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\tif(frag == null) {\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpacket.addMessageFragment(frag);\n\t\t\t\tsentPacket.addFragment(frag);\n\n\t\t\t\t//Priority of the one we grabbed might be higher than i\n\t\t\t\tHashMap<Integer, MessageWrapper> queue = startedByPrio.get(item.getPriority());\n\t\t\t\tsynchronized(queue) {\n\t\t\t\t\tqueue.put(messageID, wrapper);\n\t\t\t\t}\n\n\t\t\t\tsynchronized(bufferUsageLock) {\n\t\t\t\t\tusedBufferOtherSide += item.buf.length;\n\t\t\t\t\tif(logDEBUG) Logger.debug(this, \"Added \" + item.buf.length + \" to remote buffer. Total is now \" + usedBufferOtherSide);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(packet.getLength() == 5) return null;\n\n\t\tint seqNum = allocateSequenceNumber();\n\t\tif(seqNum == -1) return null;\n\t\tpacket.setSequenceNumber(seqNum);\n\n\t\tsentPacket.sent();\n\t\tsynchronized(sentPackets) {\n\t\t\tsentPackets.put(seqNum, sentPacket);\n\t\t}\n\n\t\treturn packet;\n\t}","id":54313,"modified_method":"NPFPacket createPacket(int maxPacketSize, PeerMessageQueue messageQueue) throws BlockedTooLongException {\n\t\t//Mark packets as lost\n\t\tsynchronized(sentPackets) {\n\t\t\tdouble avgRtt = Math.max(250, averageRTT());\n\t\t\tlong curTime = System.currentTimeMillis();\n\n\t\t\tIterator<Map.Entry<Integer, SentPacket>> it = sentPackets.entrySet().iterator();\n\t\t\twhile(it.hasNext()) {\n\t\t\t\tMap.Entry<Integer, SentPacket> e = it.next();\n\t\t\t\tSentPacket s = e.getValue();\n\t\t\t\tif(s.getSentTime() < (curTime - NUM_RTTS_TO_LOOSE * avgRtt)) {\n\t\t\t\t\tif(logMINOR) {\n\t\t\t\t\t\tLogger.minor(this, \"Assuming packet \" + e.getKey() + \" has been lost. \"\n\t\t\t\t\t\t                + \"Delay \" + (curTime - s.getSentTime()) + \"ms, \"\n\t\t\t\t\t\t                + \"threshold \" + (NUM_RTTS_TO_LOOSE * avgRtt) + \"ms\");\n\t\t\t\t\t}\n\t\t\t\t\ts.lost();\n\t\t\t\t\tit.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tNPFPacket packet = new NPFPacket();\n\t\tSentPacket sentPacket = new SentPacket(this);\n\n\t\tint numAcks = 0;\n\t\tsynchronized(acks) {\n\t\t\tIterator<Integer> it = acks.iterator();\n\t\t\twhile (it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\tif(!packet.addAck(it.next())) break;\n\t\t\t\t++numAcks;\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\nfragments:\n\t\tfor(int i = 0; i < startedByPrio.size(); i++) {\n\t\t\tHashMap<Integer, MessageWrapper> started = startedByPrio.get(i);\n\n\t\t\t//Try to finish messages that have been started\n\t\t\tsynchronized(started) {\n\t\t\t\tIterator<MessageWrapper> it = started.values().iterator();\n\t\t\t\twhile(it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\t\tMessageWrapper wrapper = it.next();\n\t\t\t\t\twhile(packet.getLength() < maxPacketSize) {\n\t\t\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\t\t\tif(frag == null) break;\n\t\t\t\t\t\tpacket.addMessageFragment(frag);\n\t\t\t\t\t\tsentPacket.addFragment(frag);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Add messages from the message queue\n\t\t\twhile ((packet.getLength() + 10) < maxPacketSize) { //Fragment header is max 9 bytes, allow min 1 byte data\n\t\t\t\tMessageItem item = null;\n\t\t\t\tsynchronized(messageQueue) {\n\t\t\t\t\titem = messageQueue.grabQueuedMessageItem(i);\n\t\t\t\t}\n\t\t\t\tif(item == null) break;\n\n\t\t\t\tint bufferUsage;\n\t\t\t\tsynchronized(bufferUsageLock) {\n\t\t\t\t\tbufferUsage = usedBufferOtherSide;\n\t\t\t\t}\n\t\t\t\tif((bufferUsage + item.buf.length) > MAX_BUFFER_SIZE) {\n\t\t\t\t\tif(logDEBUG) Logger.debug(this, \"Would excede remote buffer size, requeuing and sending packet. Remote at \" + bufferUsage);\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak fragments;\n\t\t\t\t}\n\n\t\t\t\tint messageID = getMessageID();\n\t\t\t\tif(messageID == -1) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"No availiable message ID, requeuing and sending packet\");\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak fragments;\n\t\t\t\t}\n\n\t\t\t\tMessageWrapper wrapper = new MessageWrapper(item, messageID);\n\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\tif(frag == null) {\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpacket.addMessageFragment(frag);\n\t\t\t\tsentPacket.addFragment(frag);\n\n\t\t\t\t//Priority of the one we grabbed might be higher than i\n\t\t\t\tHashMap<Integer, MessageWrapper> queue = startedByPrio.get(item.getPriority());\n\t\t\t\tsynchronized(queue) {\n\t\t\t\t\tqueue.put(messageID, wrapper);\n\t\t\t\t}\n\n\t\t\t\tsynchronized(bufferUsageLock) {\n\t\t\t\t\tusedBufferOtherSide += item.buf.length;\n\t\t\t\t\tif(logDEBUG) Logger.debug(this, \"Added \" + item.buf.length + \" to remote buffer. Total is now \" + usedBufferOtherSide);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(packet.getLength() == 5) return null;\n\n\t\tint seqNum = allocateSequenceNumber();\n\t\tif(seqNum == -1) return null;\n\t\tpacket.setSequenceNumber(seqNum);\n\n\t\tif(packet.getFragments().size() > 0) {\n\t\t\tsentPacket.sent();\n\t\t\tsynchronized(sentPackets) {\n\t\t\t\tsentPackets.put(seqNum, sentPacket);\n\t\t\t}\n\t\t}\n\n\t\treturn packet;\n\t}","commit_id":"4fea758d5b743ce3ba82e5923ab7db06b5c2c874","url":"https://github.com/freenet/fred"},{"original_method":"public MessageFragment(boolean shortMessage, boolean isFragmented, boolean firstFragment, int messageID,\n\t                int fragmentLength, int messageLength, int fragmentOffset, byte[] fragmentData) {\n\t\tthis.shortMessage = shortMessage;\n\t\tthis.isFragmented = isFragmented;\n\t\tthis.firstFragment = firstFragment;\n\t\tthis.messageID = messageID;\n\t\tthis.fragmentLength = fragmentLength;\n\t\tthis.messageLength = messageLength;\n\t\tthis.fragmentOffset = fragmentOffset;\n\t\tthis.fragmentData = fragmentData;\n\t}","id":54314,"modified_method":"public MessageFragment(boolean shortMessage, boolean isFragmented, boolean firstFragment, int messageID,\n\t                int fragmentLength, int messageLength, int fragmentOffset, byte[] fragmentData,\n\t                MessageWrapper wrapper) {\n\t\tthis.shortMessage = shortMessage;\n\t\tthis.isFragmented = isFragmented;\n\t\tthis.firstFragment = firstFragment;\n\t\tthis.messageID = messageID;\n\t\tthis.fragmentLength = fragmentLength;\n\t\tthis.messageLength = messageLength;\n\t\tthis.fragmentOffset = fragmentOffset;\n\t\tthis.fragmentData = fragmentData;\n\t\tthis.wrapper = wrapper;\n\t}","commit_id":"968704f1672379ae2921a61981dc4749b0c71a3e","url":"https://github.com/freenet/fred"},{"original_method":"public MessageFragment getMessageFragment(int maxLength) {\n\t\tint start = 0;\n\t\tint end = Integer.MAX_VALUE;\n\n\t\tsynchronized(sent) {\n\t                for(int[] range : sent) {\n\t\t\t\tif(range[0] == start) {\n\t\t\t\t\tstart = range[1] + 1;\n\t\t\t\t} else if (range[0] - start > 0) {\n\t\t\t\t\tend = range[0] - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(start >= item.buf.length) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tint dataLength = maxLength\n\t\t                - 2 //Message id + flags\n\t\t                - (isShortMessage ? 1 : 2); //Fragment length\n\n\t\tif(isFragmented(dataLength)) {\n\t\t\tdataLength -= (isShortMessage ? 1 : 3); //Message length / fragment offset\n\t\t}\n\t\t\n\t\tdataLength = Math.min(end - start, dataLength);\n\t\tdataLength = Math.min(item.buf.length - start, dataLength);\n\t\tif(dataLength <= 0) return null;\n\n\t\tbyte[] fragmentData = new byte[dataLength];\n\t\tSystem.arraycopy(item.buf, start, fragmentData, 0, dataLength);\n\n\t\tsent.add(start, start + dataLength - 1);\n\n\t\tboolean isFragmented = !((start == 0) && (dataLength == item.buf.length));\n\t\treturn new MessageFragment(isShortMessage, isFragmented, start == 0, messageID, dataLength,\n\t\t                item.buf.length, start, fragmentData);\n        }","id":54315,"modified_method":"public MessageFragment getMessageFragment(int maxLength) {\n\t\tint start = 0;\n\t\tint end = Integer.MAX_VALUE;\n\n\t\tsynchronized(sent) {\n\t                for(int[] range : sent) {\n\t\t\t\tif(range[0] == start) {\n\t\t\t\t\tstart = range[1] + 1;\n\t\t\t\t} else if (range[0] - start > 0) {\n\t\t\t\t\tend = range[0] - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(start >= item.buf.length) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tint dataLength = maxLength\n\t\t                - 2 //Message id + flags\n\t\t                - (isShortMessage ? 1 : 2); //Fragment length\n\n\t\tif(isFragmented(dataLength)) {\n\t\t\tdataLength -= (isShortMessage ? 1 : 3); //Message length / fragment offset\n\t\t}\n\t\t\n\t\tdataLength = Math.min(end - start, dataLength);\n\t\tdataLength = Math.min(item.buf.length - start, dataLength);\n\t\tif(dataLength <= 0) return null;\n\n\t\tbyte[] fragmentData = new byte[dataLength];\n\t\tSystem.arraycopy(item.buf, start, fragmentData, 0, dataLength);\n\n\t\tsent.add(start, start + dataLength - 1);\n\n\t\tboolean isFragmented = !((start == 0) && (dataLength == item.buf.length));\n\t\treturn new MessageFragment(isShortMessage, isFragmented, start == 0, messageID, dataLength,\n\t\t                item.buf.length, start, fragmentData, this);\n        }","commit_id":"968704f1672379ae2921a61981dc4749b0c71a3e","url":"https://github.com/freenet/fred"},{"original_method":"public static NPFPacket create(byte[] plaintext) {\n\t\tNPFPacket packet = new NPFPacket();\n\t\tint offset = 0;\n\n\t\tif(plaintext.length < (offset + 5)) { //Sequence number + the number of acks\n\t\t\tpacket.error = true;\n\t\t\treturn packet;\n\t\t}\n\n\t\tpacket.sequenceNumber = ((plaintext[offset] & 0xFF) << 24)\n\t\t                | ((plaintext[offset + 1] & 0xFF) << 16)\n\t\t                | ((plaintext[offset + 2] & 0xFF) << 8)\n\t\t                | (plaintext[offset + 3] & 0xFF);\n\t\toffset += 4;\n\n\t\t//Process received acks\n\t\tint numAcks = plaintext[offset++] & 0xFF;\n\t\tif(plaintext.length < (offset + numAcks + (numAcks > 0 ? 3 : 0))) {\n\t\t\tpacket.error = true;\n\t\t\treturn packet;\n\t\t}\n\n\t\tint prevAck = 0;\n\t\tfor(int i = 0; i < numAcks; i++) {\n\t\t\tint ack = 0;\n\t\t\tif(i == 0) {\n\t\t\t\tack = ((plaintext[offset] & 0xFF) << 24)\n\t\t\t\t                | ((plaintext[offset + 1] & 0xFF) << 16)\n\t\t\t\t                | ((plaintext[offset + 2] & 0xFF) << 8)\n\t\t\t\t                | (plaintext[offset + 3] & 0xFF);\n\t\t\t\toffset += 4;\n\t\t\t} else {\n\t\t\t\tack = prevAck + (plaintext[offset++] & 0xFF);\n\t\t\t}\n\t\t\tpacket.acks.add(ack);\n\t\t\tprevAck = ack;\n\t\t}\n\n\t\t//Handle received message fragments\n\t\tif((offset < plaintext.length) && ((plaintext[offset] & 0x10) == 0)) {\n\t\t\tLogger.warning(NPFPacket.class, \"First fragment doen't have full message id\");\n\t\t\tpacket.error = true;\n\t\t\treturn packet;\n\t\t}\n\n\t\tint prevFragmentID = -1;\n\t\twhile(offset < plaintext.length) {\n\t\t\tif(plaintext.length < (offset + 2)) {\n\t\t\t\tpacket.error = true;\n\t\t\t\treturn packet;\n\t\t\t}\n\n\t\t\tboolean shortMessage = (plaintext[offset] & 0x80) != 0;\n\t\t\tboolean isFragmented = (plaintext[offset] & 0x40) != 0;\n\t\t\tboolean firstFragment = (plaintext[offset] & 0x20) != 0;\n\n\t\t\tint messageID = -1;\n\t\t\tif((plaintext[offset] & 0x10) != 0) {\n\t\t\t\tmessageID = ((plaintext[offset] & 0x0F) << 24)\n\t\t\t\t                | ((plaintext[offset + 1] & 0xFF) << 16)\n\t\t\t\t                | ((plaintext[offset + 2] & 0xFF) << 8)\n\t\t\t\t                | (plaintext[offset + 3] & 0xFF);\n\t\t\t\toffset += 4;\n\t\t\t} else {\n\t\t\t\tmessageID = prevFragmentID + (((plaintext[offset] & 0x0F) << 8)\n\t\t\t\t                | (plaintext[offset + 1] & 0xFF));\n\t\t\t\toffset += 2;\n\t\t\t}\n\t\t\tprevFragmentID = messageID;\n\n\t\t\tif(!isFragmented && !firstFragment) {\n\t\t\t\tLogger.warning(NPFPacket.class, \"Received unfragmented message, but the fragment wasn't\"\n\t\t\t\t                + \" the first\");\n\t\t\t\tpacket.error = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tint requiredLength = offset\n\t\t\t                + (shortMessage ? 1 : 2)\n\t\t\t                + (isFragmented ? (shortMessage ? 1 : 3) : 0);\n\t\t\tif(plaintext.length < requiredLength) {\n\t\t\t\tpacket.error = true;\n\t\t\t\treturn packet;\n\t\t\t}\n\n\t\t\tint fragmentLength;\n\t\t\tif(shortMessage) {\n\t\t\t\tfragmentLength = plaintext[offset++] & 0xFF;\n\t\t\t} else {\n\t\t\t\tfragmentLength = ((plaintext[offset] & 0xFF) << 8)\n\t\t\t\t                | (plaintext[offset + 1] & 0xFF);\n\t\t\t\toffset += 2;\n\t\t\t}\n\n\t\t\tint messageLength = -1;\n\t\t\tint fragmentOffset = 0;\n\t\t\tif(isFragmented) {\n\t\t\t\tint value;\n\t\t\t\tif(shortMessage) {\n\t\t\t\t\tvalue = plaintext[offset++] & 0xFF;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = ((plaintext[offset] & 0xFF) << 16)\n\t\t\t\t\t                | ((plaintext[offset + 1] & 0xFF) << 8)\n\t\t\t\t\t\t\t| (plaintext[offset + 2] & 0xFF);\n\t\t\t\t\toffset += 3;\n\t\t\t\t}\n\n\t\t\t\tif(firstFragment) {\n\t\t\t\t\tmessageLength = value;\n\t\t\t\t\tif(messageLength == fragmentLength) {\n\t\t\t\t\t\tLogger.warning(NPFPacket.class, \"Received fragmented message, but fragment contains the entire message\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfragmentOffset = value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmessageLength = fragmentLength;\n\t\t\t}\n\t\t\tbyte[] fragmentData = new byte[fragmentLength];\n\t\t\tif((offset + fragmentLength) > plaintext.length) {\n\t\t\t\tif(logMINOR) Logger.minor(NPFPacket.class, \"Fragment doesn't fit in the received packet\");\n\t\t\t\tpacket.error = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tSystem.arraycopy(plaintext, offset, fragmentData, 0, fragmentLength);\n\t\t\toffset += fragmentLength;\n\n\t\t\tpacket.fragments.add(new MessageFragment(shortMessage, isFragmented, firstFragment,\n\t\t\t                messageID, fragmentLength, messageLength, fragmentOffset, fragmentData));\n\t\t}\n\n\t\treturn packet;\n\t}","id":54316,"modified_method":"public static NPFPacket create(byte[] plaintext) {\n\t\tNPFPacket packet = new NPFPacket();\n\t\tint offset = 0;\n\n\t\tif(plaintext.length < (offset + 5)) { //Sequence number + the number of acks\n\t\t\tpacket.error = true;\n\t\t\treturn packet;\n\t\t}\n\n\t\tpacket.sequenceNumber = ((plaintext[offset] & 0xFF) << 24)\n\t\t                | ((plaintext[offset + 1] & 0xFF) << 16)\n\t\t                | ((plaintext[offset + 2] & 0xFF) << 8)\n\t\t                | (plaintext[offset + 3] & 0xFF);\n\t\toffset += 4;\n\n\t\t//Process received acks\n\t\tint numAcks = plaintext[offset++] & 0xFF;\n\t\tif(plaintext.length < (offset + numAcks + (numAcks > 0 ? 3 : 0))) {\n\t\t\tpacket.error = true;\n\t\t\treturn packet;\n\t\t}\n\n\t\tint prevAck = 0;\n\t\tfor(int i = 0; i < numAcks; i++) {\n\t\t\tint ack = 0;\n\t\t\tif(i == 0) {\n\t\t\t\tack = ((plaintext[offset] & 0xFF) << 24)\n\t\t\t\t                | ((plaintext[offset + 1] & 0xFF) << 16)\n\t\t\t\t                | ((plaintext[offset + 2] & 0xFF) << 8)\n\t\t\t\t                | (plaintext[offset + 3] & 0xFF);\n\t\t\t\toffset += 4;\n\t\t\t} else {\n\t\t\t\tack = prevAck + (plaintext[offset++] & 0xFF);\n\t\t\t}\n\t\t\tpacket.acks.add(ack);\n\t\t\tprevAck = ack;\n\t\t}\n\n\t\t//Handle received message fragments\n\t\tif((offset < plaintext.length) && ((plaintext[offset] & 0x10) == 0)) {\n\t\t\tLogger.warning(NPFPacket.class, \"First fragment doen't have full message id\");\n\t\t\tpacket.error = true;\n\t\t\treturn packet;\n\t\t}\n\n\t\tint prevFragmentID = -1;\n\t\twhile(offset < plaintext.length) {\n\t\t\tif(plaintext.length < (offset + 2)) {\n\t\t\t\tpacket.error = true;\n\t\t\t\treturn packet;\n\t\t\t}\n\n\t\t\tboolean shortMessage = (plaintext[offset] & 0x80) != 0;\n\t\t\tboolean isFragmented = (plaintext[offset] & 0x40) != 0;\n\t\t\tboolean firstFragment = (plaintext[offset] & 0x20) != 0;\n\n\t\t\tint messageID = -1;\n\t\t\tif((plaintext[offset] & 0x10) != 0) {\n\t\t\t\tmessageID = ((plaintext[offset] & 0x0F) << 24)\n\t\t\t\t                | ((plaintext[offset + 1] & 0xFF) << 16)\n\t\t\t\t                | ((plaintext[offset + 2] & 0xFF) << 8)\n\t\t\t\t                | (plaintext[offset + 3] & 0xFF);\n\t\t\t\toffset += 4;\n\t\t\t} else {\n\t\t\t\tmessageID = prevFragmentID + (((plaintext[offset] & 0x0F) << 8)\n\t\t\t\t                | (plaintext[offset + 1] & 0xFF));\n\t\t\t\toffset += 2;\n\t\t\t}\n\t\t\tprevFragmentID = messageID;\n\n\t\t\tif(!isFragmented && !firstFragment) {\n\t\t\t\tLogger.warning(NPFPacket.class, \"Received unfragmented message, but the fragment wasn't\"\n\t\t\t\t                + \" the first\");\n\t\t\t\tpacket.error = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tint requiredLength = offset\n\t\t\t                + (shortMessage ? 1 : 2)\n\t\t\t                + (isFragmented ? (shortMessage ? 1 : 3) : 0);\n\t\t\tif(plaintext.length < requiredLength) {\n\t\t\t\tpacket.error = true;\n\t\t\t\treturn packet;\n\t\t\t}\n\n\t\t\tint fragmentLength;\n\t\t\tif(shortMessage) {\n\t\t\t\tfragmentLength = plaintext[offset++] & 0xFF;\n\t\t\t} else {\n\t\t\t\tfragmentLength = ((plaintext[offset] & 0xFF) << 8)\n\t\t\t\t                | (plaintext[offset + 1] & 0xFF);\n\t\t\t\toffset += 2;\n\t\t\t}\n\n\t\t\tint messageLength = -1;\n\t\t\tint fragmentOffset = 0;\n\t\t\tif(isFragmented) {\n\t\t\t\tint value;\n\t\t\t\tif(shortMessage) {\n\t\t\t\t\tvalue = plaintext[offset++] & 0xFF;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = ((plaintext[offset] & 0xFF) << 16)\n\t\t\t\t\t                | ((plaintext[offset + 1] & 0xFF) << 8)\n\t\t\t\t\t\t\t| (plaintext[offset + 2] & 0xFF);\n\t\t\t\t\toffset += 3;\n\t\t\t\t}\n\n\t\t\t\tif(firstFragment) {\n\t\t\t\t\tmessageLength = value;\n\t\t\t\t\tif(messageLength == fragmentLength) {\n\t\t\t\t\t\tLogger.warning(NPFPacket.class, \"Received fragmented message, but fragment contains the entire message\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfragmentOffset = value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmessageLength = fragmentLength;\n\t\t\t}\n\t\t\tbyte[] fragmentData = new byte[fragmentLength];\n\t\t\tif((offset + fragmentLength) > plaintext.length) {\n\t\t\t\tif(logMINOR) Logger.minor(NPFPacket.class, \"Fragment doesn't fit in the received packet\");\n\t\t\t\tpacket.error = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tSystem.arraycopy(plaintext, offset, fragmentData, 0, fragmentLength);\n\t\t\toffset += fragmentLength;\n\n\t\t\tpacket.fragments.add(new MessageFragment(shortMessage, isFragmented, firstFragment,\n\t\t\t                messageID, fragmentLength, messageLength, fragmentOffset, fragmentData, null));\n\t\t}\n\n\t\treturn packet;\n\t}","commit_id":"968704f1672379ae2921a61981dc4749b0c71a3e","url":"https://github.com/freenet/fred"},{"original_method":"public void testSendCompletePacket() {\n\t\tNPFPacket p = new NPFPacket();\n\t\tp.setSequenceNumber(2130706432);\n\t\tp.addAck(1000000);\n\t\tp.addAck(1000010);\n\t\tp.addAck(1000255);\n\t\tp.addMessageFragment(new MessageFragment(true, false, true, 0, 8, 8, 0,\n\t\t                new byte[] {(byte)0x01, (byte)0x23, (byte)0x45, (byte)0x67, (byte)0x89, (byte)0xAB, (byte)0xCD, (byte)0xEF}));\n\t\tp.addMessageFragment(new MessageFragment(false, true, false, 4095, 14, 1024, 256, new byte[] {\n\t\t                (byte)0xfd, (byte)0x47, (byte)0xc2, (byte)0x30,\n\t\t                (byte)0x41, (byte)0x53, (byte)0x57, (byte)0x56,\n\t\t                (byte)0x0e, (byte)0x56, (byte)0x69, (byte)0xf5,\n\t\t                (byte)0x00, (byte)0x0d}));\n\n\t\tbyte[] correctData = new byte[] {(byte)0x7F, (byte)0x00, (byte)0x00, (byte)0x00, //Sequence number\n\t\t                (byte)0x03, //Number of ack\n\t\t                (byte)0x00, (byte)0x0F, (byte)0x42, (byte)0x40, //First ack\n\t\t                (byte)0x0A, (byte)0xF5, //Acks\n\t\t                //First fragment\n\t\t                (byte)0xB0, (byte)0x00, (byte)0x00, (byte)0x00, //Message id + flags\n\t\t                (byte)0x08, //Fragment length\n\t\t                (byte)0x01, (byte)0x23, (byte)0x45, (byte)0x67, (byte)0x89, (byte)0xAB, (byte)0xCD, (byte)0xEF,\n\t\t                //Second fragment\n\t\t                (byte)0x4F, (byte)0xFF,\n\t\t                (byte)0x00, (byte)0x0e, //Fragment length\n\t\t                (byte)0x00, (byte)0x01, (byte)0x00, //Fragment offset\n\t\t                (byte)0xfd, (byte)0x47, (byte)0xc2, (byte)0x30,\n\t\t                (byte)0x41, (byte)0x53, (byte)0x57, (byte)0x56,\n\t\t                (byte)0x0e, (byte)0x56, (byte)0x69, (byte)0xf5,\n\t\t                (byte)0x00, (byte)0x0d};\n\n\t\tcheckPacket(p, correctData);\n\t}","id":54317,"modified_method":"public void testSendCompletePacket() {\n\t\tNPFPacket p = new NPFPacket();\n\t\tp.setSequenceNumber(2130706432);\n\t\tp.addAck(1000000);\n\t\tp.addAck(1000010);\n\t\tp.addAck(1000255);\n\t\tp.addMessageFragment(new MessageFragment(true, false, true, 0, 8, 8, 0,\n\t\t                new byte[] {(byte)0x01, (byte)0x23, (byte)0x45, (byte)0x67, (byte)0x89, (byte)0xAB, (byte)0xCD, (byte)0xEF}, null));\n\t\tp.addMessageFragment(new MessageFragment(false, true, false, 4095, 14, 1024, 256, new byte[] {\n\t\t                (byte)0xfd, (byte)0x47, (byte)0xc2, (byte)0x30,\n\t\t                (byte)0x41, (byte)0x53, (byte)0x57, (byte)0x56,\n\t\t                (byte)0x0e, (byte)0x56, (byte)0x69, (byte)0xf5,\n\t\t                (byte)0x00, (byte)0x0d}, null));\n\n\t\tbyte[] correctData = new byte[] {(byte)0x7F, (byte)0x00, (byte)0x00, (byte)0x00, //Sequence number\n\t\t                (byte)0x03, //Number of ack\n\t\t                (byte)0x00, (byte)0x0F, (byte)0x42, (byte)0x40, //First ack\n\t\t                (byte)0x0A, (byte)0xF5, //Acks\n\t\t                //First fragment\n\t\t                (byte)0xB0, (byte)0x00, (byte)0x00, (byte)0x00, //Message id + flags\n\t\t                (byte)0x08, //Fragment length\n\t\t                (byte)0x01, (byte)0x23, (byte)0x45, (byte)0x67, (byte)0x89, (byte)0xAB, (byte)0xCD, (byte)0xEF,\n\t\t                //Second fragment\n\t\t                (byte)0x4F, (byte)0xFF,\n\t\t                (byte)0x00, (byte)0x0e, //Fragment length\n\t\t                (byte)0x00, (byte)0x01, (byte)0x00, //Fragment offset\n\t\t                (byte)0xfd, (byte)0x47, (byte)0xc2, (byte)0x30,\n\t\t                (byte)0x41, (byte)0x53, (byte)0x57, (byte)0x56,\n\t\t                (byte)0x0e, (byte)0x56, (byte)0x69, (byte)0xf5,\n\t\t                (byte)0x00, (byte)0x0d};\n\n\t\tcheckPacket(p, correctData);\n\t}","commit_id":"968704f1672379ae2921a61981dc4749b0c71a3e","url":"https://github.com/freenet/fred"},{"original_method":"public void testSendPacketWithFragment() {\n\t\tNPFPacket p = new NPFPacket();\n\t\tp.setSequenceNumber(100);\n\t\tp.addMessageFragment(new MessageFragment(true, false, true, 0, 8, 8, 0,\n\t\t                new byte[] {(byte)0x01, (byte)0x23, (byte)0x45, (byte)0x67, (byte)0x89, (byte)0xAB, (byte)0xCD, (byte)0xEF}));\n\n\t\tbyte[] correctData = new byte[] {(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x64, //Sequence number (100)\n\t\t                (byte)0x00,\n\t\t\t\t(byte)0xB0, (byte)0x00, (byte)0x00, (byte)0x00, //Flags + messageID\n\t\t\t\t(byte)0x08, //Fragment length\n\t\t\t\t(byte)0x01, (byte)0x23, (byte)0x45, (byte)0x67, (byte)0x89, (byte)0xAB, (byte)0xCD, (byte)0xEF};\n\n\t\tcheckPacket(p, correctData);\n\t}","id":54318,"modified_method":"public void testSendPacketWithFragment() {\n\t\tNPFPacket p = new NPFPacket();\n\t\tp.setSequenceNumber(100);\n\t\tp.addMessageFragment(new MessageFragment(true, false, true, 0, 8, 8, 0,\n\t\t                new byte[] {(byte)0x01, (byte)0x23, (byte)0x45, (byte)0x67, (byte)0x89, (byte)0xAB, (byte)0xCD, (byte)0xEF}, null));\n\n\t\tbyte[] correctData = new byte[] {(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x64, //Sequence number (100)\n\t\t                (byte)0x00,\n\t\t\t\t(byte)0xB0, (byte)0x00, (byte)0x00, (byte)0x00, //Flags + messageID\n\t\t\t\t(byte)0x08, //Fragment length\n\t\t\t\t(byte)0x01, (byte)0x23, (byte)0x45, (byte)0x67, (byte)0x89, (byte)0xAB, (byte)0xCD, (byte)0xEF};\n\n\t\tcheckPacket(p, correctData);\n\t}","commit_id":"968704f1672379ae2921a61981dc4749b0c71a3e","url":"https://github.com/freenet/fred"},{"original_method":"private int averageRTT() {\n\t\tint avgRtt = 0;\n\t\tint numRtts = 0;\n\t\tfor(int i = 0; i < lastRtts.length; i++) {\n\t\t\tif(lastRtts[i] < 0) break;\n\t\t\tavgRtt += lastRtts[i];\n\t\t\t++numRtts;\n\t\t}\n\n\t\tif(numRtts == 0) return 250;\n\t\treturn avgRtt / numRtts;\n\t}","id":54319,"modified_method":"public void addFragment(MessageFragment frag) {\n\t\t\tmessages.add(frag.wrapper);\n\t\t\tranges.add(new int[] { frag.fragmentOffset, frag.fragmentOffset + frag.fragmentLength - 1 });\n\t\t}","commit_id":"968704f1672379ae2921a61981dc4749b0c71a3e","url":"https://github.com/freenet/fred"},{"original_method":"public boolean maybeSendPacket(long now, Vector<ResendPacketItem> rpiTemp, int[] rpiIntTemp)\n\t                throws BlockedTooLongException {\n\t\tint maxPacketSize = pn.crypto.socket.getMaxPacketSize();\n\n\t\tSessionKey sessionKey = pn.getCurrentKeyTracker();\n\t\tif(sessionKey == null) {\n\t\t\tLogger.warning(this, \"No key for encrypting hash\");\n\t\t\treturn false;\n\t\t}\n\n\t\tNPFPacket packet = createPacket(maxPacketSize - HMAC_LENGTH, pn.getMessageQueue());\n\t\tif(packet == null) return false;\n\n\t\t//TODO: Do this properly\n\t\tSentPacket sentPacket;\n\t\tsynchronized(sentPackets) {\n\t\t\tsentPacket = sentPackets.get(packet.getSequenceNumber());\n\t\t}\n\t\t\n\t\ttry {\n\t\t\tpacket.setSequenceNumber(sessionKey.packets.allocateOutgoingPacketNumberNeverBlock());\n\t\t} catch(KeyChangedException e) {\n\t\t\treturn false;\n\t\t} catch (WouldBlockException e) {\n\t\t\treturn false;\n\t\t} catch (NotConnectedException e) {\n\t\t\treturn false;\n\t\t}\n\n\t\tbyte[] data = new byte[packet.getLength() + HMAC_LENGTH];\n\t\tpacket.toBytes(data, HMAC_LENGTH);\n\n\t\tBlockCipher ivCipher = sessionKey.ivCipher;\n\n\t\tbyte[] IV = new byte[ivCipher.getBlockSize() / 8];\n\t\tSystem.arraycopy(sessionKey.ivNonce, 0, IV, 0, IV.length);\n\t\tSystem.arraycopy(data, HMAC_LENGTH, IV, IV.length - 4, 4);\n\t\t\n\t\tivCipher.encipher(IV, IV);\n\n\t\tPCFBMode payloadCipher = PCFBMode.create(sessionKey.sessionCipher, IV);\n\t\tpayloadCipher.blockEncipher(data, HMAC_LENGTH, packet.getLength());\n\n\t\t//Add hash\n\t\tbyte[] text = new byte[packet.getLength()];\n\t\tSystem.arraycopy(data, HMAC_LENGTH, text, 0, text.length);\n\n\t\tbyte[] hash = HMAC.macWithSHA256(sessionKey.hmacKey, text, HMAC_LENGTH);\n\n\t\tSystem.arraycopy(hash, 0, data, 0, HMAC_LENGTH);\n\n\t\ttry {\n\t\t\tif(logMINOR) {\n\t\t\t\tString fragments = null;\n\t\t\t\tfor(MessageFragment frag : packet.getFragments()) {\n\t\t\t\t\tif(fragments == null) fragments = \"\" + frag.messageID;\n\t\t\t\t\telse fragments = fragments + \", \" + frag.messageID;\n\t\t\t\t}\n\n\t\t\t\tLogger.minor(this, \"Sending packet \" + packet.getSequenceNumber() + \" (\"\n\t\t\t\t                + data.length + \" bytes) with fragments \" + fragments + \" and \"\n\t\t\t\t                + packet.getAcks().size() + \" acks\");\n\t\t\t}\n\t                pn.crypto.socket.sendPacket(data, pn.getPeer(), pn.allowLocalAddresses());\n\t\t\tif(sentPacket != null) sentPacket.sent();\n                } catch (LocalAddressException e) {\n\t                Logger.error(this, \"Caught exception while sending packet\", e);\n\t\t\tif(sentPacket != null) sentPacket.lost();\n\t\t\tsynchronized(sentPackets) {\n\t\t\t\tsentPackets.remove(packet.getSequenceNumber());\n\t\t\t}\n\t\t\treturn false;\n                }\n\n\t\tpn.sentPacket();\n\t\tpn.reportOutgoingPacket(data, 0, data.length, System.currentTimeMillis());\n\t\tif(PeerNode.shouldThrottle(pn.getPeer(), pn.node)) {\n\t\t\tpn.node.outputThrottle.forceGrab(data.length);\n\t\t}\n\t\tif(packet.getFragments().size() == 0) {\n\t\t\tpn.node.nodeStats.reportNotificationOnlyPacketSent(data.length);\n\t\t}\n\n\t\treturn true;\n\t}","id":54320,"modified_method":"public boolean maybeSendPacket(long now, Vector<ResendPacketItem> rpiTemp, int[] rpiIntTemp)\n\t                throws BlockedTooLongException {\n\t\tint maxPacketSize = pn.crypto.socket.getMaxPacketSize();\n\n\t\tSessionKey sessionKey = pn.getCurrentKeyTracker();\n\t\tif(sessionKey == null) {\n\t\t\tLogger.warning(this, \"No key for encrypting hash\");\n\t\t\treturn false;\n\t\t}\n\n\t\tNPFPacket packet = createPacket(maxPacketSize - HMAC_LENGTH, pn.getMessageQueue());\n\t\tif(packet == null) return false;\n\n\t\ttry {\n\t\t\tpacket.setSequenceNumber(sessionKey.packets.allocateOutgoingPacketNumberNeverBlock());\n\t\t} catch(KeyChangedException e) {\n\t\t\treturn false;\n\t\t} catch (WouldBlockException e) {\n\t\t\treturn false;\n\t\t} catch (NotConnectedException e) {\n\t\t\treturn false;\n\t\t}\n\n\t\tbyte[] data = new byte[packet.getLength() + HMAC_LENGTH];\n\t\tpacket.toBytes(data, HMAC_LENGTH);\n\n\t\tBlockCipher ivCipher = sessionKey.ivCipher;\n\n\t\tbyte[] IV = new byte[ivCipher.getBlockSize() / 8];\n\t\tSystem.arraycopy(sessionKey.ivNonce, 0, IV, 0, IV.length);\n\t\tSystem.arraycopy(data, HMAC_LENGTH, IV, IV.length - 4, 4);\n\t\t\n\t\tivCipher.encipher(IV, IV);\n\n\t\tPCFBMode payloadCipher = PCFBMode.create(sessionKey.sessionCipher, IV);\n\t\tpayloadCipher.blockEncipher(data, HMAC_LENGTH, packet.getLength());\n\n\t\t//Add hash\n\t\tbyte[] text = new byte[packet.getLength()];\n\t\tSystem.arraycopy(data, HMAC_LENGTH, text, 0, text.length);\n\n\t\tbyte[] hash = HMAC.macWithSHA256(sessionKey.hmacKey, text, HMAC_LENGTH);\n\n\t\tSystem.arraycopy(hash, 0, data, 0, HMAC_LENGTH);\n\n\t\ttry {\n\t\t\tif(logMINOR) {\n\t\t\t\tString fragments = null;\n\t\t\t\tfor(MessageFragment frag : packet.getFragments()) {\n\t\t\t\t\tif(fragments == null) fragments = \"\" + frag.messageID;\n\t\t\t\t\telse fragments = fragments + \", \" + frag.messageID;\n\t\t\t\t}\n\n\t\t\t\tLogger.minor(this, \"Sending packet \" + packet.getSequenceNumber() + \" (\"\n\t\t\t\t                + data.length + \" bytes) with fragments \" + fragments + \" and \"\n\t\t\t\t                + packet.getAcks().size() + \" acks\");\n\t\t\t}\n\t                pn.crypto.socket.sendPacket(data, pn.getPeer(), pn.allowLocalAddresses());\n                } catch (LocalAddressException e) {\n\t                Logger.error(this, \"Caught exception while sending packet\", e);\n\t\t\treturn false;\n                }\n\t\t\n\t\tif(packet.getFragments().size() != 0) {\n\t\t\tSentPacket sentPacket = new SentPacket(this);\n\t\t\tsentPacket.sent();\n\t\t\tfor(MessageFragment frag : packet.getFragments()) {\n\t\t\t\tsentPacket.addFragment(frag);\n\t\t\t}\n\t\t\tsynchronized(sentPackets) {\n\t\t\t\tsentPackets.put(packet.getSequenceNumber(), sentPacket);\n\t\t\t}\n\t\t}\n\n\t\tpn.sentPacket();\n\t\tpn.reportOutgoingPacket(data, 0, data.length, System.currentTimeMillis());\n\t\tif(PeerNode.shouldThrottle(pn.getPeer(), pn.node)) {\n\t\t\tpn.node.outputThrottle.forceGrab(data.length);\n\t\t}\n\t\tif(packet.getFragments().size() == 0) {\n\t\t\tpn.node.nodeStats.reportNotificationOnlyPacketSent(data.length);\n\t\t}\n\n\t\treturn true;\n\t}","commit_id":"968704f1672379ae2921a61981dc4749b0c71a3e","url":"https://github.com/freenet/fred"},{"original_method":"NPFPacket createPacket(int maxPacketSize, PeerMessageQueue messageQueue) {\n\t\t//Mark packets as lost\n\t\tsynchronized(sentPackets) {\n\t\t\tint avgRtt = Math.max(250, averageRTT());\n\t\t\tlong curTime = System.currentTimeMillis();\n\n\t\t\tIterator<Map.Entry<Integer, SentPacket>> it = sentPackets.entrySet().iterator();\n\t\t\twhile(it.hasNext()) {\n\t\t\t\tMap.Entry<Integer, SentPacket> e = it.next();\n\t\t\t\tSentPacket s = e.getValue();\n\t\t\t\tif(s.getSentTime() < (curTime - NUM_RTTS_TO_LOOSE * avgRtt)) {\n\t\t\t\t\tif(logMINOR) {\n\t\t\t\t\t\tLogger.minor(this, \"Assuming packet \" + e.getKey() + \" has been lost. \"\n\t\t\t\t\t\t                + \"Delay \" + (curTime - s.getSentTime()) + \"ms, \"\n\t\t\t\t\t\t                + \"threshold \" + (NUM_RTTS_TO_LOOSE * avgRtt) + \"ms\");\n\t\t\t\t\t}\n\t\t\t\t\ts.lost();\n\t\t\t\t\tit.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tSentPacket sentPacket = new SentPacket(this);\n\t\tNPFPacket packet = new NPFPacket();\n\n\t\tint numAcks = 0;\n\t\tsynchronized(acks) {\n\t\t\tIterator<Integer> it = acks.iterator();\n\t\t\twhile (it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\tif(!packet.addAck(it.next())) break;\n\t\t\t\t++numAcks;\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\nfragments:\n\t\tfor(int i = 0; i < startedByPrio.size(); i++) {\n\t\t\tHashMap<Integer, MessageWrapper> started = startedByPrio.get(i);\n\n\t\t\t//Try to finish messages that have been started\n\t\t\tsynchronized(started) {\n\t\t\t\tIterator<MessageWrapper> it = started.values().iterator();\n\t\t\t\twhile(it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\t\tMessageWrapper wrapper = it.next();\n\t\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\t\tif(frag == null) continue;\n\t\t\t\t\tpacket.addMessageFragment(frag);\n\t\t\t\t\tsentPacket.addFragment(wrapper, frag.fragmentOffset, frag.fragmentLength);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Add messages from the message queue\n\t\t\twhile ((packet.getLength() + 10) < maxPacketSize) { //Fragment header is max 9 bytes, allow min 1 byte data\n\t\t\t\tMessageItem item = null;\n\t\t\t\tsynchronized(messageQueue) {\n\t\t\t\t\titem = messageQueue.grabQueuedMessageItem(i);\n\t\t\t\t}\n\t\t\t\tif(item == null) break;\n\n\t\t\t\tint bufferUsage;\n\t\t\t\tsynchronized(bufferUsageLock) {\n\t\t\t\t\tbufferUsage = usedBufferOtherSide;\n\t\t\t\t}\n\t\t\t\tif((bufferUsage + item.buf.length) > MAX_BUFFER_SIZE) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Would excede remote buffer size, requeuing and sending packet. Remote at \" + bufferUsage);\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak fragments;\n\t\t\t\t}\n\n\t\t\t\tint messageID = getMessageID();\n\t\t\t\tif(messageID == -1) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"No availiable message ID, requeuing and sending packet\");\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak fragments;\n\t\t\t\t}\n\n\t\t\t\tMessageWrapper wrapper = new MessageWrapper(item, messageID);\n\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\tif(frag == null) {\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpacket.addMessageFragment(frag);\n\t\t\t\tsentPacket.addFragment(wrapper, frag.fragmentOffset, frag.fragmentLength);\n\n\t\t\t\t//Priority of the one we grabbed might be higher than i\n\t\t\t\tHashMap<Integer, MessageWrapper> queue = startedByPrio.get(item.getPriority());\n\t\t\t\tsynchronized(queue) {\n\t\t\t\t\tqueue.put(messageID, wrapper);\n\t\t\t\t}\n\n\t\t\t\tsynchronized(bufferUsageLock) {\n\t\t\t\t\tusedBufferOtherSide += item.buf.length;\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Added \" + item.buf.length + \" to remote buffer. Total is now \" + usedBufferOtherSide);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(packet.getLength() == 5) return null;\n\n\t\tif(packet.getFragments().size() != 0) {\n\t\t\tsynchronized(sentPackets) {\n\t\t\t\tsentPackets.put(packet.getSequenceNumber(), sentPacket);\n\t\t\t}\n\t\t}\n\n\t\tsentPacket.sent();\n\t\t\n\t\treturn packet;\n\t}","id":54321,"modified_method":"NPFPacket createPacket(int maxPacketSize, PeerMessageQueue messageQueue) {\n\t\t//Mark packets as lost\n\t\tsynchronized(sentPackets) {\n\t\t\tint avgRtt = Math.max(250, averageRTT());\n\t\t\tlong curTime = System.currentTimeMillis();\n\n\t\t\tIterator<Map.Entry<Integer, SentPacket>> it = sentPackets.entrySet().iterator();\n\t\t\twhile(it.hasNext()) {\n\t\t\t\tMap.Entry<Integer, SentPacket> e = it.next();\n\t\t\t\tSentPacket s = e.getValue();\n\t\t\t\tif(s.getSentTime() < (curTime - NUM_RTTS_TO_LOOSE * avgRtt)) {\n\t\t\t\t\tif(logMINOR) {\n\t\t\t\t\t\tLogger.minor(this, \"Assuming packet \" + e.getKey() + \" has been lost. \"\n\t\t\t\t\t\t                + \"Delay \" + (curTime - s.getSentTime()) + \"ms, \"\n\t\t\t\t\t\t                + \"threshold \" + (NUM_RTTS_TO_LOOSE * avgRtt) + \"ms\");\n\t\t\t\t\t}\n\t\t\t\t\ts.lost();\n\t\t\t\t\tit.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tNPFPacket packet = new NPFPacket();\n\n\t\tint numAcks = 0;\n\t\tsynchronized(acks) {\n\t\t\tIterator<Integer> it = acks.iterator();\n\t\t\twhile (it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\tif(!packet.addAck(it.next())) break;\n\t\t\t\t++numAcks;\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\nfragments:\n\t\tfor(int i = 0; i < startedByPrio.size(); i++) {\n\t\t\tHashMap<Integer, MessageWrapper> started = startedByPrio.get(i);\n\n\t\t\t//Try to finish messages that have been started\n\t\t\tsynchronized(started) {\n\t\t\t\tIterator<MessageWrapper> it = started.values().iterator();\n\t\t\t\twhile(it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\t\tMessageWrapper wrapper = it.next();\n\t\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\t\tif(frag == null) continue;\n\t\t\t\t\tpacket.addMessageFragment(frag);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Add messages from the message queue\n\t\t\twhile ((packet.getLength() + 10) < maxPacketSize) { //Fragment header is max 9 bytes, allow min 1 byte data\n\t\t\t\tMessageItem item = null;\n\t\t\t\tsynchronized(messageQueue) {\n\t\t\t\t\titem = messageQueue.grabQueuedMessageItem(i);\n\t\t\t\t}\n\t\t\t\tif(item == null) break;\n\n\t\t\t\tint bufferUsage;\n\t\t\t\tsynchronized(bufferUsageLock) {\n\t\t\t\t\tbufferUsage = usedBufferOtherSide;\n\t\t\t\t}\n\t\t\t\tif((bufferUsage + item.buf.length) > MAX_BUFFER_SIZE) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Would excede remote buffer size, requeuing and sending packet. Remote at \" + bufferUsage);\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak fragments;\n\t\t\t\t}\n\n\t\t\t\tint messageID = getMessageID();\n\t\t\t\tif(messageID == -1) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"No availiable message ID, requeuing and sending packet\");\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak fragments;\n\t\t\t\t}\n\n\t\t\t\tMessageWrapper wrapper = new MessageWrapper(item, messageID);\n\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\tif(frag == null) {\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpacket.addMessageFragment(frag);\n\n\t\t\t\t//Priority of the one we grabbed might be higher than i\n\t\t\t\tHashMap<Integer, MessageWrapper> queue = startedByPrio.get(item.getPriority());\n\t\t\t\tsynchronized(queue) {\n\t\t\t\t\tqueue.put(messageID, wrapper);\n\t\t\t\t}\n\n\t\t\t\tsynchronized(bufferUsageLock) {\n\t\t\t\t\tusedBufferOtherSide += item.buf.length;\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Added \" + item.buf.length + \" to remote buffer. Total is now \" + usedBufferOtherSide);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(packet.getLength() == 5) return null;\n\n\t\treturn packet;\n\t}","commit_id":"968704f1672379ae2921a61981dc4749b0c71a3e","url":"https://github.com/freenet/fred"},{"original_method":"public void testAckOnlyCreation() {\n\t\tNewPacketFormat npf = new NewPacketFormat(null);\n\t\tPeerMessageQueue pmq = new PeerMessageQueue();\n\n\t\tNPFPacket p = null;\n\n\t\t//Packet that should be acked\n\t\tp = new NPFPacket();\n\t\tp.setSequenceNumber(0);\n\t\tp.addMessageFragment(new MessageFragment(true, false, true, 0, 8, 8, 0, new byte[] {(byte) 0x01,\n\t\t                (byte) 0x23, (byte) 0x45, (byte) 0x67, (byte) 0x89, (byte) 0xAB, (byte) 0xCD,\n\t\t                (byte) 0xEF }));\n\t\tassertEquals(1, npf.handleDecryptedPacket(p).size());\n\n\t\tp = npf.createPacket(1400, pmq);\n\t\tassertEquals(1, p.getAcks().size());\n\t}","id":54322,"modified_method":"public void testAckOnlyCreation() {\n\t\tNewPacketFormat npf = new NewPacketFormat(null);\n\t\tPeerMessageQueue pmq = new PeerMessageQueue();\n\n\t\tNPFPacket p = null;\n\n\t\t//Packet that should be acked\n\t\tp = new NPFPacket();\n\t\tp.setSequenceNumber(0);\n\t\tp.addMessageFragment(new MessageFragment(true, false, true, 0, 8, 8, 0, new byte[] {(byte) 0x01,\n\t\t                (byte) 0x23, (byte) 0x45, (byte) 0x67, (byte) 0x89, (byte) 0xAB, (byte) 0xCD,\n\t\t                (byte) 0xEF }, null));\n\t\tassertEquals(1, npf.handleDecryptedPacket(p).size());\n\n\t\tp = npf.createPacket(1400, pmq);\n\t\tassertEquals(1, p.getAcks().size());\n\t}","commit_id":"968704f1672379ae2921a61981dc4749b0c71a3e","url":"https://github.com/freenet/fred"},{"original_method":"public boolean maybeSendPacket(long now, Vector<ResendPacketItem> rpiTemp, int[] rpiIntTemp)\n\t                throws BlockedTooLongException {\n\t\tint maxPacketSize = pn.crypto.socket.getMaxPacketSize();\n\t\tNPFPacket packet = createPacket(maxPacketSize, pn.getMessageQueue());\n\t\tif(packet == null) return false;\n\n\t\t//TODO: Do this properly\n\t\tSentPacket sentPacket;\n\t\tsynchronized(sentPackets) {\n\t\t\tsentPacket = sentPackets.get(packet.getSequenceNumber());\n\t\t}\n\n\t\tbyte[] data = new byte[packet.getLength() + HMAC_LENGTH];\n\t\tpacket.toBytes(data, HMAC_LENGTH);\n\n\t\tSessionKey sessionKey = pn.getCurrentKeyTracker();\n\t\tif(sessionKey == null) {\n\t\t\tLogger.warning(this, \"No key for encrypting hash\");\n\t\t\tsentPacket.lost();\n\t\t\treturn false;\n\t\t}\n\n\t\tPCFBMode payloadCipher = PCFBMode.create(sessionKey.sessionCipher);\n\t\tpayloadCipher.blockEncipher(data, HMAC_LENGTH, packet.getLength());\n\n\t\t//Add hash\n\t\tMessageDigest md = SHA256.getMessageDigest();\n\t\tmd.update(data, HMAC_LENGTH, packet.getLength());\n\t\tbyte[] hash = md.digest();\n\n\t\tPCFBMode hashCipher = PCFBMode.create(sessionKey.sessionCipher);\n\t\thashCipher.blockEncipher(hash, 0, HMAC_LENGTH);\n\n\t\tSystem.arraycopy(hash, 0, data, 0, HMAC_LENGTH);\n\n\t\ttry {\n\t\t\tif(logMINOR) {\n\t\t\t\tString fragments = null;\n\t\t\t\tfor(MessageFragment frag : packet.getFragments()) {\n\t\t\t\t\tif(fragments == null) fragments = \"\" + frag.messageID;\n\t\t\t\t\telse fragments = fragments + \", \" + frag.messageID;\n\t\t\t\t}\n\n\t\t\t\tLogger.minor(this, \"Sending packet \" + packet.getSequenceNumber() + \" (\"\n\t\t\t\t                + data.length + \" bytes) with fragments \" + fragments + \" and \"\n\t\t\t\t                + packet.getAcks().size() + \" acks\");\n\t\t\t}\n\t                pn.crypto.socket.sendPacket(data, pn.getPeer(), pn.allowLocalAddresses());\n\t\t\tsentPacket.sent();\n                } catch (LocalAddressException e) {\n\t                Logger.error(this, \"Caught exception while sending packet\", e);\n\t\t\tsentPacket.lost();\n\t\t\tsynchronized(sentPackets) {\n\t\t\t\tsentPackets.remove(packet.getSequenceNumber());\n\t\t\t}\n\t\t\treturn false;\n                }\n\t\treturn true;\n\t}","id":54323,"modified_method":"public boolean maybeSendPacket(long now, Vector<ResendPacketItem> rpiTemp, int[] rpiIntTemp)\n\t                throws BlockedTooLongException {\n\t\tint maxPacketSize = pn.crypto.socket.getMaxPacketSize();\n\t\tNPFPacket packet = createPacket(maxPacketSize, pn.getMessageQueue());\n\t\tif(packet == null) return false;\n\n\t\t//TODO: Do this properly\n\t\tSentPacket sentPacket;\n\t\tsynchronized(sentPackets) {\n\t\t\tsentPacket = sentPackets.get(packet.getSequenceNumber());\n\t\t}\n\n\t\tbyte[] data = new byte[packet.getLength() + HMAC_LENGTH];\n\t\tpacket.toBytes(data, HMAC_LENGTH);\n\n\t\tSessionKey sessionKey = pn.getCurrentKeyTracker();\n\t\tif(sessionKey == null) {\n\t\t\tLogger.warning(this, \"No key for encrypting hash\");\n\t\t\tif(sentPacket != null) sentPacket.lost();\n\t\t\treturn false;\n\t\t}\n\n\t\tPCFBMode payloadCipher = PCFBMode.create(sessionKey.sessionCipher);\n\t\tpayloadCipher.blockEncipher(data, HMAC_LENGTH, packet.getLength());\n\n\t\t//Add hash\n\t\tMessageDigest md = SHA256.getMessageDigest();\n\t\tmd.update(data, HMAC_LENGTH, packet.getLength());\n\t\tbyte[] hash = md.digest();\n\n\t\tPCFBMode hashCipher = PCFBMode.create(sessionKey.sessionCipher);\n\t\thashCipher.blockEncipher(hash, 0, HMAC_LENGTH);\n\n\t\tSystem.arraycopy(hash, 0, data, 0, HMAC_LENGTH);\n\n\t\ttry {\n\t\t\tif(logMINOR) {\n\t\t\t\tString fragments = null;\n\t\t\t\tfor(MessageFragment frag : packet.getFragments()) {\n\t\t\t\t\tif(fragments == null) fragments = \"\" + frag.messageID;\n\t\t\t\t\telse fragments = fragments + \", \" + frag.messageID;\n\t\t\t\t}\n\n\t\t\t\tLogger.minor(this, \"Sending packet \" + packet.getSequenceNumber() + \" (\"\n\t\t\t\t                + data.length + \" bytes) with fragments \" + fragments + \" and \"\n\t\t\t\t                + packet.getAcks().size() + \" acks\");\n\t\t\t}\n\t                pn.crypto.socket.sendPacket(data, pn.getPeer(), pn.allowLocalAddresses());\n\t\t\tif(sentPacket != null) sentPacket.sent();\n                } catch (LocalAddressException e) {\n\t                Logger.error(this, \"Caught exception while sending packet\", e);\n\t\t\tif(sentPacket != null) sentPacket.lost();\n\t\t\tsynchronized(sentPackets) {\n\t\t\t\tsentPackets.remove(packet.getSequenceNumber());\n\t\t\t}\n\t\t\treturn false;\n                }\n\t\treturn true;\n\t}","commit_id":"36b1bb431c4c1ae9abc30f06d3df983ab11d62af","url":"https://github.com/freenet/fred"},{"original_method":"NPFPacket createPacket(int maxPacketSize, PeerMessageQueue messageQueue) {\n\t\t//Mark packets as lost\n\t\tsynchronized(sentPackets) {\n\t\t\tint maxRtt = maxRTT();\n\t\t\tlong curTime = System.currentTimeMillis();\n\n\t\t\tIterator<Long> it = sentPackets.keySet().iterator();\n\t\t\twhile(it.hasNext()) {\n\t\t\t\tLong l = it.next();\n\t\t\t\tSentPacket s = sentPackets.get(l);\n\t\t\t\tif(s.getSentTime() < (curTime - NUM_RTTS_TO_LOOSE * maxRtt)) {\n\t\t\t\t\tif(logMINOR) {\n\t\t\t\t\t\tLogger.minor(this, \"Assuming packet \" + l + \" has been lost. \"\n\t\t\t\t\t\t                + \"Delay \" + (curTime - s.getSentTime()) + \"ms, \"\n\t\t\t\t\t\t                + \"threshold \" + (NUM_RTTS_TO_LOOSE * maxRtt) + \"ms\");\n\t\t\t\t\t}\n\t\t\t\t\ts.lost();\n\t\t\t\t\tit.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tSentPacket sentPacket = new SentPacket();\n\t\tNPFPacket packet = new NPFPacket();\n\t\tpacket.setSequenceNumber(nextSequenceNumber++);\n\n\t\tint numAcks = 0;\n\t\tsynchronized(acks) {\n\t\t\tlong firstAck = 0;\n\t\t\tIterator<Long> it = acks.iterator();\n\t\t\twhile (it.hasNext() && numAcks < 256 && packet.getLength() < maxPacketSize) {\n\t\t\t\tlong ack = it.next();\n\t\t\t\tif(numAcks == 0) {\n\t\t\t\t\tfirstAck = ack;\n\t\t\t\t} else {\n\t\t\t\t\t// Check that it can be compressed\n\t\t\t\t\tlong compressedAck = ack - firstAck;\n\t\t\t\t\tif((compressedAck < 0) || (compressedAck > 255)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpacket.addAck(ack);\n\t\t\t\t++numAcks;\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\n\t\tfor(int i = 0; i < startedByPrio.size(); i++) {\n\t\t\tHashMap<Integer, MessageWrapper> started = startedByPrio.get(i);\n\n\t\t\t//Try to finish messages that have been started\n\t\t\tsynchronized(started) {\n\t\t\t\tIterator<MessageWrapper> it = started.values().iterator();\n\t\t\t\twhile(it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\t\tMessageWrapper wrapper = it.next();\n\t\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\t\tif(frag == null) continue;\n\t\t\t\t\tpacket.addMessageFragment(frag);\n\t\t\t\t\tsentPacket.addFragment(wrapper, frag.fragmentOffset, frag.fragmentLength);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Add messages from the message queue\n\t\t\twhile ((packet.getLength() + 10) < maxPacketSize) { //Fragment header is max 9 bytes, allow min 1 byte data\n\t\t\t\tMessageItem item = null;\n\t\t\t\tsynchronized(messageQueue) {\n\t\t\t\t\titem = messageQueue.grabQueuedMessageItem(i);\n\t\t\t\t}\n\t\t\t\tif(item == null) break;\n\n\t\t\t\tint messageID = getMessageID();\n\t\t\t\tif(messageID == -1) {\n\t\t\t\t\tLogger.warning(this, \"No availiable message ID, requeuing and sending packet\");\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tMessageWrapper wrapper = new MessageWrapper(item, messageID);\n\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\tif(frag == null) break;\n\t\t\t\tpacket.addMessageFragment(frag);\n\t\t\t\tsentPacket.addFragment(wrapper, frag.fragmentOffset, frag.fragmentLength);\n\n\t\t\t\t//Priority of the one we grabbed might be higher than i\n\t\t\t\tHashMap<Integer, MessageWrapper> queue = startedByPrio.get(item.getPriority());\n\t\t\t\tsynchronized(queue) {\n\t\t\t\t\tqueue.put(messageID, wrapper);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(packet.getLength() == 5) return null;\n\n\t\tsynchronized(sentPackets) {\n\t\t\tsentPackets.put(packet.getSequenceNumber(), sentPacket);\n\t\t}\n\n\t\tsentPacket.sent();\n\t\t\n\t\treturn packet;\n\t}","id":54324,"modified_method":"NPFPacket createPacket(int maxPacketSize, PeerMessageQueue messageQueue) {\n\t\t//Mark packets as lost\n\t\tsynchronized(sentPackets) {\n\t\t\tint maxRtt = maxRTT();\n\t\t\tlong curTime = System.currentTimeMillis();\n\n\t\t\tIterator<Long> it = sentPackets.keySet().iterator();\n\t\t\twhile(it.hasNext()) {\n\t\t\t\tLong l = it.next();\n\t\t\t\tSentPacket s = sentPackets.get(l);\n\t\t\t\tif(s.getSentTime() < (curTime - NUM_RTTS_TO_LOOSE * maxRtt)) {\n\t\t\t\t\tif(logMINOR) {\n\t\t\t\t\t\tLogger.minor(this, \"Assuming packet \" + l + \" has been lost. \"\n\t\t\t\t\t\t                + \"Delay \" + (curTime - s.getSentTime()) + \"ms, \"\n\t\t\t\t\t\t                + \"threshold \" + (NUM_RTTS_TO_LOOSE * maxRtt) + \"ms\");\n\t\t\t\t\t}\n\t\t\t\t\ts.lost();\n\t\t\t\t\tit.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tSentPacket sentPacket = new SentPacket();\n\t\tNPFPacket packet = new NPFPacket();\n\t\tpacket.setSequenceNumber(nextSequenceNumber++);\n\n\t\tint numAcks = 0;\n\t\tsynchronized(acks) {\n\t\t\tlong firstAck = 0;\n\t\t\tIterator<Long> it = acks.iterator();\n\t\t\twhile (it.hasNext() && numAcks < 256 && packet.getLength() < maxPacketSize) {\n\t\t\t\tlong ack = it.next();\n\t\t\t\tif(numAcks == 0) {\n\t\t\t\t\tfirstAck = ack;\n\t\t\t\t} else {\n\t\t\t\t\t// Check that it can be compressed\n\t\t\t\t\tlong compressedAck = ack - firstAck;\n\t\t\t\t\tif((compressedAck < 0) || (compressedAck > 255)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpacket.addAck(ack);\n\t\t\t\t++numAcks;\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\n\t\tfor(int i = 0; i < startedByPrio.size(); i++) {\n\t\t\tHashMap<Integer, MessageWrapper> started = startedByPrio.get(i);\n\n\t\t\t//Try to finish messages that have been started\n\t\t\tsynchronized(started) {\n\t\t\t\tIterator<MessageWrapper> it = started.values().iterator();\n\t\t\t\twhile(it.hasNext() && packet.getLength() < maxPacketSize) {\n\t\t\t\t\tMessageWrapper wrapper = it.next();\n\t\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\t\tif(frag == null) continue;\n\t\t\t\t\tpacket.addMessageFragment(frag);\n\t\t\t\t\tsentPacket.addFragment(wrapper, frag.fragmentOffset, frag.fragmentLength);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Add messages from the message queue\n\t\t\twhile ((packet.getLength() + 10) < maxPacketSize) { //Fragment header is max 9 bytes, allow min 1 byte data\n\t\t\t\tMessageItem item = null;\n\t\t\t\tsynchronized(messageQueue) {\n\t\t\t\t\titem = messageQueue.grabQueuedMessageItem(i);\n\t\t\t\t}\n\t\t\t\tif(item == null) break;\n\n\t\t\t\tint messageID = getMessageID();\n\t\t\t\tif(messageID == -1) {\n\t\t\t\t\tLogger.warning(this, \"No availiable message ID, requeuing and sending packet\");\n\t\t\t\t\tmessageQueue.pushfrontPrioritizedMessageItem(item);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tMessageWrapper wrapper = new MessageWrapper(item, messageID);\n\t\t\t\tMessageFragment frag = wrapper.getMessageFragment(maxPacketSize - packet.getLength());\n\t\t\t\tif(frag == null) break;\n\t\t\t\tpacket.addMessageFragment(frag);\n\t\t\t\tsentPacket.addFragment(wrapper, frag.fragmentOffset, frag.fragmentLength);\n\n\t\t\t\t//Priority of the one we grabbed might be higher than i\n\t\t\t\tHashMap<Integer, MessageWrapper> queue = startedByPrio.get(item.getPriority());\n\t\t\t\tsynchronized(queue) {\n\t\t\t\t\tqueue.put(messageID, wrapper);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(packet.getLength() == 5) return null;\n\n\t\tif(packet.getFragments().size() != 0) {\n\t\t\tsynchronized(sentPackets) {\n\t\t\t\tsentPackets.put(packet.getSequenceNumber(), sentPacket);\n\t\t\t}\n\t\t}\n\n\t\tsentPacket.sent();\n\t\t\n\t\treturn packet;\n\t}","commit_id":"36b1bb431c4c1ae9abc30f06d3df983ab11d62af","url":"https://github.com/freenet/fred"},{"original_method":"public PluginsTableRenderer(IdeaPluginDescriptor pluginDescriptor, boolean showFullInfo) {\n    myPluginDescriptor = pluginDescriptor;\n    myPluginsView = !showFullInfo;\n\n    final Font smallFont;\n    if (SystemInfo.isMac) {\n      smallFont = UIUtil.getLabelFont(UIUtil.FontSize.MINI);\n    } else {\n      smallFont = UIUtil.getLabelFont().deriveFont(Math.max(UIUtil.getLabelFont().getSize() - 2, 10f));\n    }\n    myName.setFont(UIUtil.getLabelFont().deriveFont(UIUtil.getLabelFont().getSize() + 1.0f));\n    myStatus.setFont(smallFont);\n    myCategory.setFont(smallFont);\n    myDownloads.setFont(smallFont);\n    myStatus.setText(\"\");\n    myCategory.setText(\"\");\n    myLastUpdated.setFont(smallFont);\n\n    if (myPluginsView || pluginDescriptor.getDownloads() == null || !(pluginDescriptor instanceof PluginNode)) {\n      myPanel.remove(myRightPanel);\n    }\n    if (myPluginsView) {\n      myInfoPanel.remove(myBottomPanel);\n    }\n\n    myPanel.setBorder(UIUtil.isRetina() ? new EmptyBorder(4, 3, 4, 3) : new EmptyBorder(2, 3, 2, 3));\n  }","id":54325,"modified_method":"public PluginsTableRenderer(IdeaPluginDescriptor pluginDescriptor, boolean showFullInfo) {\n    myPluginDescriptor = pluginDescriptor;\n    myPluginsView = !showFullInfo;\n\n    final Font smallFont;\n    if (SystemInfo.isMac) {\n      smallFont = UIUtil.getLabelFont(UIUtil.FontSize.MINI);\n    } else {\n      smallFont = UIUtil.getLabelFont().deriveFont(Math.max(UIUtil.getLabelFont().getSize() - 2, 10f));\n    }\n    myName.setFont(UIUtil.getLabelFont().deriveFont(UIUtil.getLabelFont().getSize() + 1.0f));\n    myStatus.setFont(smallFont);\n    myCategory.setFont(smallFont);\n    myDownloads.setFont(smallFont);\n    myStatus.setText(\"\");\n    myLastUpdated.setFont(smallFont);\n\n    if (myPluginsView || pluginDescriptor.getDownloads() == null || !(pluginDescriptor instanceof PluginNode)) {\n      myPanel.remove(myRightPanel);\n    }\n    if (myPluginsView) {\n      myInfoPanel.remove(myBottomPanel);\n    }\n\n    myPanel.setBorder(UIUtil.isRetina() ? new EmptyBorder(4, 3, 4, 3) : new EmptyBorder(2, 3, 2, 3));\n  }","commit_id":"82f0743f9e691744134db83345954b557f3b6902","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n    if (myPluginDescriptor != null) {\n      Color fg = UIUtil.getTableForeground(isSelected);\n      Color bg = UIUtil.getTableBackground(isSelected);\n      Color grayedFg = isSelected ? fg : new JBColor(Gray._130, Gray._120);\n\n      myPanel.setBackground(bg);\n\n      myName.setForeground(fg);\n      myCategory.setForeground(grayedFg);\n      myStatus.setForeground(grayedFg);\n      myLastUpdated.setForeground(grayedFg);\n      myDownloads.setForeground(grayedFg);\n\n      myName.clear();\n      myName.setOpaque(false);\n      String pluginName = myPluginDescriptor.getName() + \"  \";\n      Object query = table.getClientProperty(SpeedSearchSupply.SEARCH_QUERY_KEY);\n      if (query instanceof String) {\n        Matcher matcher = NameUtil.buildMatcher(\"*\" + query, NameUtil.MatchingCaseSensitivity.NONE);\n        SimpleTextAttributes attr = new SimpleTextAttributes(UIUtil.getListBackground(isSelected),\n                                                             UIUtil.getListForeground(isSelected),\n                                                             JBColor.RED,\n                                                             SimpleTextAttributes.STYLE_PLAIN);\n        SpeedSearchUtil.appendColoredFragmentForMatcher(pluginName, myName, attr, matcher, UIUtil.getTableBackground(isSelected), true);\n      }\n      else {\n        myName.append(pluginName);\n      }\n\n      String category = myPluginDescriptor.getCategory();\n      if (category != null) {\n        myCategory.setText(category.toUpperCase(Locale.getDefault()));\n      }\n      else if (!myPluginsView) {\n        myCategory.setText(AvailablePluginsManagerMain.N_A);\n      }\n\n      myStatus.setIcon(AllIcons.Nodes.Plugin);\n      if (myPluginDescriptor.isBundled()) {\n        myCategory.setText(StringUtil.join(Arrays.asList(myCategory.getText(), \"[Bundled]\"), \" \"));\n        myStatus.setIcon(AllIcons.Nodes.PluginJB);\n      }\n      String vendor = myPluginDescriptor.getVendor();\n      if (vendor != null && StringUtil.containsIgnoreCase(vendor, \"jetbrains\")) {\n        myStatus.setIcon(AllIcons.Nodes.PluginJB);\n      }\n\n      String downloads = myPluginDescriptor.getDownloads();\n      if (downloads != null && myPluginDescriptor instanceof PluginNode) {\n        if (downloads.length() > 3) {\n          downloads = new DecimalFormat(\"#,###\").format(Integer.parseInt(downloads));\n        }\n        myDownloads.setText(downloads);\n\n        myRating.setRate(((PluginNode)myPluginDescriptor).getRating());\n        myLastUpdated.setText(DateFormatUtil.formatBetweenDates(((PluginNode)myPluginDescriptor).getDate(), System.currentTimeMillis()));\n      }\n\n      // plugin state-dependent rendering\n\n      PluginId pluginId = myPluginDescriptor.getPluginId();\n      IdeaPluginDescriptor installed = PluginManager.getPlugin(pluginId);\n\n      if (installed != null && ((IdeaPluginDescriptorImpl)installed).isDeleted()) {\n        // existing plugin uninstalled (both views)\n        myStatus.setIcon(AllIcons.Nodes.PluginRestart);\n        if (!isSelected) myName.setForeground(FileStatus.DELETED.getColor());\n        myPanel.setToolTipText(IdeBundle.message(\"plugin.manager.uninstalled.tooltip\"));\n      }\n      else if (ourState.wasInstalled(pluginId)) {\n        // new plugin installed (both views)\n        myStatus.setIcon(AllIcons.Nodes.PluginRestart);\n        if (!isSelected) myName.setForeground(FileStatus.ADDED.getColor());\n        myPanel.setToolTipText(IdeBundle.message(\"plugin.manager.installed.tooltip\"));\n      }\n      else if (ourState.wasUpdated(pluginId)) {\n        // existing plugin updated (both views)\n        myStatus.setIcon(AllIcons.Nodes.PluginRestart);\n        if (!isSelected) myName.setForeground(FileStatus.ADDED.getColor());\n        myPanel.setToolTipText(IdeBundle.message(\"plugin.manager.updated.tooltip\"));\n      }\n      else if (ourState.hasNewerVersion(pluginId)) {\n        // existing plugin has a newer version (both views)\n        myStatus.setIcon(AllIcons.Nodes.Pluginobsolete);\n        if (!isSelected) myName.setForeground(FileStatus.MODIFIED.getColor());\n        if (!myPluginsView && installed != null) {\n          myPanel.setToolTipText(IdeBundle.message(\"plugin.manager.new.version.tooltip\", installed.getVersion()));\n        }\n        else {\n          myPanel.setToolTipText(IdeBundle.message(\"plugin.manager.update.available.tooltip\"));\n        }\n      }\n      else if (isIncompatible(myPluginDescriptor, table.getModel())) {\n        // a plugin is incompatible with current installation (both views)\n        if (!isSelected) myName.setForeground(JBColor.RED);\n        myPanel.setToolTipText(whyIncompatible(myPluginDescriptor, table.getModel()));\n      }\n      else if (!myPluginDescriptor.isEnabled() && myPluginsView) {\n        // a plugin is disabled (plugins view only)\n        myStatus.setIcon(IconLoader.getDisabledIcon(myStatus.getIcon()));\n      }\n    }\n\n    return myPanel;\n  }","id":54326,"modified_method":"@Override\n  public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n    if (myPluginDescriptor != null) {\n      Color fg = UIUtil.getTableForeground(isSelected);\n      Color bg = UIUtil.getTableBackground(isSelected);\n      Color grayedFg = isSelected ? fg : new JBColor(Gray._130, Gray._120);\n\n      myPanel.setBackground(bg);\n\n      myName.setForeground(fg);\n      myCategory.setForeground(grayedFg);\n      myStatus.setForeground(grayedFg);\n      myLastUpdated.setForeground(grayedFg);\n      myDownloads.setForeground(grayedFg);\n\n      myName.clear();\n      myName.setOpaque(false);\n      myCategory.clear();\n      myCategory.setOpaque(false);\n      String pluginName = myPluginDescriptor.getName() + \"  \";\n      Object query = table.getClientProperty(SpeedSearchSupply.SEARCH_QUERY_KEY);\n      SimpleTextAttributes attr = new SimpleTextAttributes(UIUtil.getListBackground(isSelected),\n                                                           UIUtil.getListForeground(isSelected),\n                                                           JBColor.RED,\n                                                           SimpleTextAttributes.STYLE_PLAIN);\n      Matcher matcher = NameUtil.buildMatcher(\"*\" + query, NameUtil.MatchingCaseSensitivity.NONE);\n      if (query instanceof String) {\n        SpeedSearchUtil.appendColoredFragmentForMatcher(pluginName, myName, attr, matcher, UIUtil.getTableBackground(isSelected), true);\n      }\n      else {\n        myName.append(pluginName);\n      }\n\n      String category = myPluginDescriptor.getCategory() == null ? null : StringUtil.toUpperCase(myPluginDescriptor.getCategory());\n      if (category != null) {\n        if (query instanceof String) {\n          SpeedSearchUtil.appendColoredFragmentForMatcher(category, myCategory, attr, matcher, UIUtil.getTableBackground(isSelected), true);\n        }\n        else {\n          myCategory.append(category);\n        }\n      }\n      else if (!myPluginsView) {\n        myCategory.append(AvailablePluginsManagerMain.N_A);\n      }\n\n      myStatus.setIcon(AllIcons.Nodes.Plugin);\n      if (myPluginDescriptor.isBundled()) {\n        myCategory.append(\" [Bundled]\");\n        myStatus.setIcon(AllIcons.Nodes.PluginJB);\n      }\n      String vendor = myPluginDescriptor.getVendor();\n      if (vendor != null && StringUtil.containsIgnoreCase(vendor, \"jetbrains\")) {\n        myStatus.setIcon(AllIcons.Nodes.PluginJB);\n      }\n\n      String downloads = myPluginDescriptor.getDownloads();\n      if (downloads != null && myPluginDescriptor instanceof PluginNode) {\n        if (downloads.length() > 3) {\n          downloads = new DecimalFormat(\"#,###\").format(Integer.parseInt(downloads));\n        }\n        myDownloads.setText(downloads);\n\n        myRating.setRate(((PluginNode)myPluginDescriptor).getRating());\n        myLastUpdated.setText(DateFormatUtil.formatBetweenDates(((PluginNode)myPluginDescriptor).getDate(), System.currentTimeMillis()));\n      }\n\n      // plugin state-dependent rendering\n\n      PluginId pluginId = myPluginDescriptor.getPluginId();\n      IdeaPluginDescriptor installed = PluginManager.getPlugin(pluginId);\n\n      if (installed != null && ((IdeaPluginDescriptorImpl)installed).isDeleted()) {\n        // existing plugin uninstalled (both views)\n        myStatus.setIcon(AllIcons.Nodes.PluginRestart);\n        if (!isSelected) myName.setForeground(FileStatus.DELETED.getColor());\n        myPanel.setToolTipText(IdeBundle.message(\"plugin.manager.uninstalled.tooltip\"));\n      }\n      else if (ourState.wasInstalled(pluginId)) {\n        // new plugin installed (both views)\n        myStatus.setIcon(AllIcons.Nodes.PluginRestart);\n        if (!isSelected) myName.setForeground(FileStatus.ADDED.getColor());\n        myPanel.setToolTipText(IdeBundle.message(\"plugin.manager.installed.tooltip\"));\n      }\n      else if (ourState.wasUpdated(pluginId)) {\n        // existing plugin updated (both views)\n        myStatus.setIcon(AllIcons.Nodes.PluginRestart);\n        if (!isSelected) myName.setForeground(FileStatus.ADDED.getColor());\n        myPanel.setToolTipText(IdeBundle.message(\"plugin.manager.updated.tooltip\"));\n      }\n      else if (ourState.hasNewerVersion(pluginId)) {\n        // existing plugin has a newer version (both views)\n        myStatus.setIcon(AllIcons.Nodes.Pluginobsolete);\n        if (!isSelected) myName.setForeground(FileStatus.MODIFIED.getColor());\n        if (!myPluginsView && installed != null) {\n          myPanel.setToolTipText(IdeBundle.message(\"plugin.manager.new.version.tooltip\", installed.getVersion()));\n        }\n        else {\n          myPanel.setToolTipText(IdeBundle.message(\"plugin.manager.update.available.tooltip\"));\n        }\n      }\n      else if (isIncompatible(myPluginDescriptor, table.getModel())) {\n        // a plugin is incompatible with current installation (both views)\n        if (!isSelected) myName.setForeground(JBColor.RED);\n        myPanel.setToolTipText(whyIncompatible(myPluginDescriptor, table.getModel()));\n      }\n      else if (!myPluginDescriptor.isEnabled() && myPluginsView) {\n        // a plugin is disabled (plugins view only)\n        myStatus.setIcon(IconLoader.getDisabledIcon(myStatus.getIcon()));\n      }\n    }\n\n    return myPanel;\n  }","commit_id":"82f0743f9e691744134db83345954b557f3b6902","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Component getListCellRendererComponent(JList list, Object value, int index, boolean sel, boolean focus) {\n    final JPanel panel = new JPanel(new BorderLayout());\n    panel.setOpaque(true);\n\n    final Color bg = sel ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground();\n    final Color fg = sel ? UIUtil.getListSelectionForeground() : UIUtil.getListForeground();\n    panel.setBackground(bg);\n    panel.setForeground(fg);\n\n    SimpleTextAttributes attr = sel ? SELECTED : PLAIN;\n    if (value instanceof InspectionProfileEntry) {\n      final InspectionProfileEntry tool = (InspectionProfileEntry)value;\n      final SimpleColoredComponent c = new SimpleColoredComponent();\n      SpeedSearchUtil.appendColoredFragmentForMatcher(\"  \" + tool.getDisplayName(), c, attr, myMatcher, bg, sel);\n      panel.add(c, BorderLayout.WEST);\n\n      //final JLabel groupLabel = new JLabel(tool.getGroupDisplayName() + \"  \", EMPTY_ICON, LEFT);\n      final SimpleColoredComponent g = new SimpleColoredComponent();\n      SpeedSearchUtil.appendColoredFragmentForMatcher(tool.getGroupDisplayName() + \"  \", g, attr, myMatcher, bg, sel);\n      //groupLabel.setBackground(bg);\n      //groupLabel.setForeground(fg);\n      panel.add(g, BorderLayout.EAST);\n    }\n\n    return panel;\n  }","id":54327,"modified_method":"public Component getListCellRendererComponent(JList list, Object value, int index, boolean sel, boolean focus) {\n    final JPanel panel = new JPanel(new BorderLayout());\n    panel.setOpaque(true);\n\n    final Color bg = sel ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground();\n    final Color fg = sel ? UIUtil.getListSelectionForeground() : UIUtil.getListForeground();\n    panel.setBackground(bg);\n    panel.setForeground(fg);\n\n    SimpleTextAttributes attr = sel ? SELECTED : PLAIN;\n    if (value instanceof InspectionProfileEntry) {\n      final InspectionProfileEntry tool = (InspectionProfileEntry)value;\n      final SimpleColoredComponent c = new SimpleColoredComponent();\n      SpeedSearchUtil.appendColoredFragmentForMatcher(\"  \" + tool.getDisplayName(), c, attr, myMatcher, bg, sel);\n      panel.add(c, BorderLayout.WEST);\n\n      final SimpleColoredComponent group = new SimpleColoredComponent();\n      SpeedSearchUtil.appendColoredFragmentForMatcher(tool.getGroupDisplayName() + \"  \", group, attr, myMatcher, bg, sel);\n      final JPanel right = new JPanel(new BorderLayout());\n      right.setBackground(bg);\n      right.setForeground(fg);\n      right.add(group, BorderLayout.CENTER);\n      final JLabel icon = new JLabel(getIcon(tool));\n      icon.setBackground(bg);\n      icon.setForeground(fg);\n      right.add(icon, BorderLayout.EAST);\n      panel.add(right, BorderLayout.EAST);\n    }\n\n    return panel;\n  }","commit_id":"ebd2fae6fa6d6f5b85ff933e4d90e93ed9c03d90","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Group( String name )\r\n\t{\r\n\t\tsuper( name );\r\n\t}","id":54328,"modified_method":"public Group( String name )\r\n\t{\r\n\t\tsuper( name );\r\n\t\tthis.transform = new Matrix3( );\r\n\t\tthis.tmp = new Matrix3( );\r\n\t\tthis.children = new ArrayList<Actor>( );\r\n\t\tthis.immutableChildren = Collections.unmodifiableList( this.children );\r\n\t\tthis.groups = new ArrayList<Group>( );\r\n\t\tthis.immutableGroups = Collections.unmodifiableList( this.groups );\r\n\t\tthis.namesToActors = new HashMap<String, Actor>( );\r\n\t}","commit_id":"16c0f175dced2b231466764393ef3c1b1c762d1d","url":"https://github.com/libgdx/libgdx"},{"original_method":"/**\r\n\t * Inverts this matrix given that the determinant is != 0\r\n\t * @return this matrix\r\n\t */\r\n\tpublic Matrix3 inv( )\r\n\t{\r\n\t\tfloat det = det( );\r\n\t\tif( det == 0 )\r\n\t\t\tthrow new GdxRuntimeException( \"Can't invert a singular matrix\" );\r\n\t\t\r\n\t\t// TODO insert code... http://stackoverflow.com/questions/983999/simple-3x3-matrix-inverse-code-c\r\n\t\t\r\n\t\treturn this;\r\n\t}","id":54329,"modified_method":"/**\r\n\t * Inverts this matrix given that the determinant is != 0\r\n\t * @return this matrix\r\n\t */\r\n\tpublic Matrix3 inv( )\r\n\t{\r\n\t\tfloat det = det( );\r\n\t\tif( det == 0 )\r\n\t\t\tthrow new GdxRuntimeException( \"Can't invert a singular matrix\" );\r\n\t\t\r\n\t\t// TODO insert code... http://stackoverflow.com/questions/983999/simple-3x3-matrix-inverse-code-c\r\n\t\tthrow new GdxRuntimeException( \"Not implemented yet\" );\r\n\t}","commit_id":"16c0f175dced2b231466764393ef3c1b1c762d1d","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\r\n\tpublic void render( ) \r\n\t{\t\r\n\t\tGdx.graphics.getGL10().glClear( GL10.GL_COLOR_BUFFER_BIT );\t\t\r\n\t\tspriteBatch.begin();\r\n\t\tspriteBatch.draw( texture, 16, 10, 16, 16, 32, 32, 1, 0, 0, 0, texture.getWidth(), texture.getHeight(), Color.WHITE, false, false );\t\t\r\n\t\tspriteBatch.draw( texture, 64, 10, 32, 32, 0, 0, texture.getWidth(), texture.getHeight(), Color.WHITE, false, false );\r\n\t\tspriteBatch.draw( texture, 112, 10, 0, 0, texture.getWidth(), texture.getHeight(), Color.WHITE );\r\n\t\tspriteBatch.draw( texture, sprites, Color.WHITE );\r\n\t\t\r\n\t\tspriteBatch.draw( texture, 16, 58, 16, 16, 32, 32, 1, angle, 0, 0, texture.getWidth(), texture.getHeight(), Color.WHITE, false, false );\r\n\t\tspriteBatch.draw( texture, 64, 58, 16, 16, 32, 32, scale, 0, 0, 0, texture.getWidth(), texture.getHeight(), Color.WHITE, false, false );\r\n\t\tspriteBatch.draw( texture, 112, 58, 16, 16, 32, 32, scale, angle, 0, 0, texture.getWidth(), texture.getHeight(), Color.WHITE, false, false );\r\n\t\t\r\n\t\tspriteBatch.drawText( font, \"Test\", 208, 10, Color.WHITE );\r\n\t\tspriteBatch.end();\t\t\r\n\t\tGdx.graphics.getGL10().glFlush();\r\n\t\t\r\n\t\tGdx.graphics.getGL10().glReadPixels( 16, 10, 1, 1, GL10.GL_RGBA, GL10.GL_UNSIGNED_BYTE, pixelBuffer );\r\n\t\tif( pixelBuffer.get(0) != 0xff00ff00 )\r\n\t\t\tthrow new GdxRuntimeException( \"not pixel perfect!\" );\r\n\t\tGdx.graphics.getGL10().glReadPixels( 47, 10, 1, 1, GL10.GL_RGBA, GL10.GL_UNSIGNED_BYTE, pixelBuffer );\r\n\t\tif( pixelBuffer.get(0) != 0xffff0000 )\r\n\t\t\tthrow new GdxRuntimeException( \"not pixel perfect!\" );\r\n\t\tGdx.graphics.getGL10().glReadPixels( 16, 41, 1, 1, GL10.GL_RGBA, GL10.GL_UNSIGNED_BYTE, pixelBuffer );\r\n\t\tif( pixelBuffer.get(0) != 0xff0000ff )\r\n\t\t\tthrow new GdxRuntimeException( \"not pixel perfect!\" );\r\n\t\t\t\t\r\n\t\tangle += 20 * Gdx.graphics.getDeltaTime();\r\n\t\tscale += vScale * Gdx.graphics.getDeltaTime();\r\n\t\tif( scale > 2 )\r\n\t\t{\r\n\t\t\tvScale = -vScale;\r\n\t\t\tscale = 2;\r\n\t\t}\r\n\t\tif( scale < 0 )\r\n\t\t{\r\n\t\t\tvScale = -vScale;\r\n\t\t\tscale = 0;\r\n\t\t}\r\n\t\t\r\n\t}","id":54330,"modified_method":"@Override\r\n\tpublic void render( ) \r\n\t{\t\r\n\t\tGdx.graphics.getGL10().glClear( GL10.GL_COLOR_BUFFER_BIT );\t\t\r\n\t\tspriteBatch.begin();\r\n\t\tspriteBatch.draw( texture, 16, 10, 16, 16, 32, 32, 1, 0, 0, 0, texture.getWidth(), texture.getHeight(), Color.WHITE, false, false );\t\t\r\n\t\tspriteBatch.draw( texture, 64, 10, 32, 32, 0, 0, texture.getWidth(), texture.getHeight(), Color.WHITE, false, false );\r\n\t\tspriteBatch.draw( texture, 112, 10, 0, 0, texture.getWidth(), texture.getHeight(), Color.WHITE );\r\n\t\tspriteBatch.draw( texture, sprites, Color.WHITE );\r\n\t\t\r\n\t\tspriteBatch.draw( texture, 16, 58, 16, 16, 32, 32, 1, angle, 0, 0, texture.getWidth(), texture.getHeight(), Color.WHITE, false, false );\r\n\t\tspriteBatch.draw( texture, 64, 58, 16, 16, 32, 32, scale, 0, 0, 0, texture.getWidth(), texture.getHeight(), Color.WHITE, false, false );\r\n\t\tspriteBatch.draw( texture, 112, 58, 16, 16, 32, 32, scale, angle, 0, 0, texture.getWidth(), texture.getHeight(), Color.WHITE, false, false );\r\n\t\t\r\n\t\tspriteBatch.drawText( font, \"Test\", 208, 10, Color.WHITE );\r\n\t\tspriteBatch.end();\t\t\r\n\t\tGdx.graphics.getGL10().glFlush();\r\n\t\t\r\n\t\tif( false )\r\n\t\t{\r\n\t\t\tGdx.graphics.getGL10().glReadPixels( 16, 10, 1, 1, GL10.GL_RGBA, GL10.GL_UNSIGNED_BYTE, pixelBuffer );\r\n\t\t\tif( pixelBuffer.get(0) != 0xff00ff00 )\r\n\t\t\t\tthrow new GdxRuntimeException( \"not pixel perfect!\" );\r\n\t\t\tGdx.graphics.getGL10().glReadPixels( 47, 10, 1, 1, GL10.GL_RGBA, GL10.GL_UNSIGNED_BYTE, pixelBuffer );\r\n\t\t\tif( pixelBuffer.get(0) != 0xffff0000 )\r\n\t\t\t\tthrow new GdxRuntimeException( \"not pixel perfect!\" );\r\n\t\t\tGdx.graphics.getGL10().glReadPixels( 16, 41, 1, 1, GL10.GL_RGBA, GL10.GL_UNSIGNED_BYTE, pixelBuffer );\r\n\t\t\tif( pixelBuffer.get(0) != 0xff0000ff )\r\n\t\t\t\tthrow new GdxRuntimeException( \"not pixel perfect!\" );\r\n\t\t}\r\n\t\t\t\t\r\n\t\tangle += 20 * Gdx.graphics.getDeltaTime();\r\n\t\tscale += vScale * Gdx.graphics.getDeltaTime();\r\n\t\tif( scale > 2 )\r\n\t\t{\r\n\t\t\tvScale = -vScale;\r\n\t\t\tscale = 2;\r\n\t\t}\r\n\t\tif( scale < 0 )\r\n\t\t{\r\n\t\t\tvScale = -vScale;\r\n\t\t\tscale = 0;\r\n\t\t}\r\n\t\t\r\n\t}","commit_id":"16c0f175dced2b231466764393ef3c1b1c762d1d","url":"https://github.com/libgdx/libgdx"},{"original_method":"/**\r\n\t * <p>Constructs a new Stage object with the given\r\n\t * dimensions. If the device resolution does not\r\n\t * equal the Stage objects dimensions the stage\r\n\t * object will setup a projection matrix to guarantee\r\n\t * a fixed coordinate system. If stretch is disabled\r\n\t * then the bigger dimension of the Stage will be increased\r\n\t * to accomodate the actual device resolution.<\/p>\r\n\t * \r\n\t * @param width the width of the viewport\r\n\t * @param height the height of the viewport\r\n\t * @param stretch whether to stretch the viewport to the real device resolution\r\n\t */\r\n\tpublic Stage( int width, int height, boolean stretch ) \r\n\t{\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.stretch = stretch;\r\n\t\t\r\n\t\t// TODO implement stretch, adjust width or height\r\n\t\t\r\n\t\tcenterX = width / 2;\r\n\t\tcenterY = height / 2;\r\n\t}","id":54331,"modified_method":"/**\r\n\t * <p>Constructs a new Stage object with the given\r\n\t * dimensions. If the device resolution does not\r\n\t * equal the Stage objects dimensions the stage\r\n\t * object will setup a projection matrix to guarantee\r\n\t * a fixed coordinate system. If stretch is disabled\r\n\t * then the bigger dimension of the Stage will be increased\r\n\t * to accomodate the actual device resolution.<\/p>\r\n\t * \r\n\t * @param width the width of the viewport\r\n\t * @param height the height of the viewport\r\n\t * @param stretch whether to stretch the viewport to the real device resolution\r\n\t */\r\n\tpublic Stage( int width, int height, boolean stretch ) \r\n\t{\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.stretch = stretch;\r\n\t\tthis.root = new Group( \"root\" );\r\n\t\t\r\n\t\t// TODO implement stretch, adjust width or height\r\n\t\t\r\n\t\tcenterX = width / 2;\r\n\t\tcenterY = height / 2;\r\n\t\t\r\n\t\t\r\n\t}","commit_id":"16c0f175dced2b231466764393ef3c1b1c762d1d","url":"https://github.com/libgdx/libgdx"},{"original_method":"/**\n   * Creates a database for the specified file.\n   * @param name name of the database\n   * @param input input stream\n   * @param ctx database context\n   * @return info string\n   * @throws BaseXException database exception\n   */\n  public static synchronized String xml(final String name,\n      final InputStream input, final Context ctx) throws BaseXException {\n\n    if(!ctx.user.perm(User.CREATE))\n      throw new BaseXException(PERMNO, CmdPerm.CREATE);\n\n    BaseXException bxex = null;\n    final Performance p = new Performance();\n    final BufferedInputStream is = new BufferedInputStream(input);\n    final SAXSource sax = new SAXSource(new InputSource(is));\n    ctx.lock.before(true);\n    try {\n      ctx.openDB(xml(new SAXWrapper(sax, ctx.prop), name, ctx));\n    } catch(final IOException ex) {\n      bxex = new BaseXException(ex);\n    }\n    ctx.lock.after(true);\n    if(bxex != null) throw bxex;\n    return Util.info(DBCREATED, name, p);\n  }","id":54332,"modified_method":"/**\n   * Creates a database for the specified file.\n   * @param name name of the database\n   * @param input input stream\n   * @param ctx database context\n   * @return info string\n   * @throws BaseXException database exception\n   */\n  public static synchronized String xml(final String name,\n      final InputStream input, final Context ctx) throws BaseXException {\n\n    final BufferedInputStream is = new BufferedInputStream(input);\n    final SAXSource sax = new SAXSource(new InputSource(is));\n    final SAXWrapper sw = new SAXWrapper(sax, ctx.prop);\n    return xml(name, sw, ctx);\n  }","commit_id":"216b32b0c40aced152e46118733355a21c64e192","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Returns an exception string for a wrong key.\r\n   * @param key property key\r\n   * @param allowed allowed values\r\n   * @return string\r\n   */\r\n  public static String error(final String key, final String... allowed) {\r\n    final TokenBuilder tb = new TokenBuilder();\r\n    tb.addExt(SERVAL, key, allowed[0]);\r\n    for(int a = 1; a < allowed.length; ++a) tb.addExt(SERVAL2, allowed[a]);\r\n    return tb.toString();\r\n  }","id":54333,"modified_method":"/**\r\n   * Returns an exception string for a wrong key.\r\n   * @param key property key\r\n   * @param found found value\r\n   * @param allowed allowed values\r\n   * @return string\r\n   */\r\n  public static String error(final String key, final String found,\r\n      final String... allowed) {\r\n    final TokenBuilder tb = new TokenBuilder();\r\n    tb.addExt(SERVAL, key, allowed[0]);\r\n    for(int a = 1; a < allowed.length; ++a) tb.addExt(SERVAL2, allowed[a]);\r\n    tb.addExt(SERVAL3, found);\r\n    return tb.toString();\r\n  }","commit_id":"216b32b0c40aced152e46118733355a21c64e192","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Retrieves a value from the specified property and checks allowed values.\r\n   * @param key property key\r\n   * @param allowed allowed values\r\n   * @return value\r\n   * @throws IOException I/O exception\r\n   */\r\n  public String check(final Object[] key, final String... allowed)\r\n      throws IOException {\r\n\r\n    final String val = get(key);\r\n    for(final String a : allowed) if(a.equals(val)) return val;\r\n    throw new IOException(error(key[0].toString(), allowed));\r\n  }","id":54334,"modified_method":"/**\r\n   * Retrieves a value from the specified property and checks allowed values.\r\n   * @param key property key\r\n   * @param allowed allowed values\r\n   * @return value\r\n   * @throws IOException I/O exception\r\n   */\r\n  public String check(final Object[] key, final String... allowed)\r\n      throws IOException {\r\n\r\n    final String val = get(key);\r\n    for(final String a : allowed) if(a.equals(val)) return val;\r\n    throw new IOException(error(key[0].toString(), val, allowed));\r\n  }","commit_id":"216b32b0c40aced152e46118733355a21c64e192","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Creates a database.\r\n   * @throws IOException I/O exception\r\n   */\r\n  private void create() throws IOException {\r\n    try {\r\n      final String name = in.readString();\r\n      final WrapInputStream is = new WrapInputStream(in);\r\n      final String info = CreateDB.xml(name, is, context);\r\n      // send {MSG}0 and 0 as success flag\r\n      out.writeString(info);\r\n      out.write(0);\r\n    } catch(final BaseXException ex) {\r\n      // send {MSG}0 and 1 as error flag\r\n      out.writeString(ex.getMessage());\r\n      out.write(1);\r\n    }\r\n    out.flush();\r\n  }","id":54335,"modified_method":"/**\r\n   * Creates a database.\r\n   * @throws IOException I/O exception\r\n   */\r\n  private void create() throws IOException {\r\n    try {\r\n      final String name = in.readString();\r\n      final WrapInputStream is = new WrapInputStream(in);\r\n      final String info = is.curr() == -1 ?\r\n          CreateDB.xml(name, Parser.emptyParser(name), context) :\r\n        CreateDB.xml(name, is, context);\r\n      // send {MSG}0 and 0 as success flag\r\n      out.writeString(info);\r\n      out.write(0);\r\n    } catch(final BaseXException ex) {\r\n      // send {MSG}0 and 1 as error flag\r\n      out.writeString(ex.getMessage());\r\n      out.write(1);\r\n    }\r\n    out.flush();\r\n  }","commit_id":"216b32b0c40aced152e46118733355a21c64e192","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public int read() throws IOException {\r\n    // always return -1 if end of stream was reached\r\n    if(more) {\r\n      final int c = bi.read();\r\n      if(c != 0) return c;\r\n      more = false;\r\n    }\r\n    return -1;\r\n  }","id":54336,"modified_method":"@Override\r\n  public int read() throws IOException {\r\n    final int v = curr;\r\n    if(v == -1) return -1;\r\n    curr = bi.read();\r\n    if(curr == 0) curr = -1;\r\n    return v;\r\n  }","commit_id":"216b32b0c40aced152e46118733355a21c64e192","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Constructor.\r\n   * @param buffer buffer input to be wrapped\r\n   */\r\n  public WrapInputStream(final BufferInput buffer) {\r\n    bi = buffer;\r\n  }","id":54337,"modified_method":"/**\r\n   * Constructor.\r\n   * @param buffer buffer input to be wrapped\r\n   * @throws IOException I/O exception\r\n   */\r\n  public WrapInputStream(final BufferInput buffer) throws IOException {\r\n    bi = buffer;\r\n    read();\r\n  }","commit_id":"216b32b0c40aced152e46118733355a21c64e192","url":"https://github.com/BaseXdb/basex"},{"original_method":"public void storeResource(final Resource res) throws XMLDBException {\r\n    if(res.getContent() instanceof Document) {\r\n      try {\r\n        final Data tmp = CreateDB.xml(new DOCWrapper((Document)res.getContent()), res.getId());\r\n        ctx.data().atts.noStats();\r\n        ctx.data().insert(ctx.data().size, -1, tmp);\r\n        ctx.data().flush();\r\n        tmp.close();\r\n        DropDB.drop(res.getId());\r\n        \r\n      } catch(final IOException ex) {\r\n        throw new XMLDBException(ErrorCodes.INVALID_RESOURCE);\r\n      }\r\n    } else {\r\n    String cont = res.getContent().toString();\r\n    try {\r\n      /*\r\n      Context ctx = new Context();\r\n      new CreateDB(cont, \"tmp\").execute(ctx);\r\n      ctx.data().insert(ctx.data().size, -1, ctx.data());\r\n      ctx.data().flush();\r\n      new DropDB(\"tmp\").execute(ctx);\r\n      */\r\n      final Data tmp = CreateDB.xml(IO.get(cont), res.getId());\r\n      ctx.data().insert(ctx.data().size, -1, tmp);\r\n      ctx.data().flush();\r\n      tmp.close();\r\n      DropDB.drop(res.getId());\r\n      \r\n    } catch(final IOException ex) {\r\n      throw new XMLDBException(ErrorCodes.INVALID_RESOURCE);\r\n    }\r\n    }\r\n  }","id":54338,"modified_method":"public void storeResource(final Resource res) throws XMLDBException {\r\n    final String id = res.getId();\r\n    Data tmp = null;\r\n    try {\r\n      if(res.getContent() instanceof Document) {\r\n        tmp = CreateDB.xml(new DOCWrapper((Document) res.getContent()), id);\r\n      } else {\r\n        tmp = CreateDB.xml(IO.get(res.getContent().toString()), id);\r\n      }\r\n      ctx.data().insert(ctx.data().size, -1, tmp);\r\n      ctx.data().flush();\r\n      tmp.close();\r\n      DropDB.drop(id);\r\n    } catch(final IOException ex) {\r\n      throw new XMLDBException(ErrorCodes.INVALID_RESOURCE);\r\n    }\r\n  }","commit_id":"bd7b0a90302299028ae2b06ad362d34ab9672275","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * If possible, returns an expression which accesses the index.\r\n   * Otherwise, returns the original expression.\r\n   * @param ctx query context\r\n   * @param data data reference\r\n   * @return resulting expression\r\n   * @throws QueryException query exception\r\n   */\r\n  private Expr index(final QueryContext ctx, final Data data)\r\n      throws QueryException {\r\n\r\n    // cache index access costs\r\n    IndexContext ics = null;\r\n    int ips = 0;\r\n    int ms = 0;\r\n\r\n    // check if path can be converted to an index access\r\n    for(int s = 0; s < step.length; ++s) {\r\n      // find cheapest index access\r\n      final Step stp = step[s];\r\n      if(!stp.axis.down) break;\r\n\r\n      // check if resulting index path will be duplicate free\r\n      final boolean d = pathNodes(data, s) == null;\r\n\r\n      // choose cheapest index access\r\n      for(int p = 0; p < stp.pred.length; ++p) {\r\n        final IndexContext ic = new IndexContext(ctx, data, stp, d);\r\n        if(!stp.pred[p].indexAccessible(ic)) continue;\r\n\r\n        if(ic.is == 0) {\r\n          if(ic.not) {\r\n            // not operator... accept all results\r\n            stp.pred[p] = Bln.TRUE;\r\n            continue;\r\n          }\r\n          // no results...\r\n          ctx.compInfo(OPTNOINDEX, this);\r\n          return Empty.SEQ;\r\n        }\r\n        if(ics == null || ics.is > ic.is) {\r\n          ics = ic;\r\n          ips = p;\r\n          ms = s;\r\n        }\r\n      }\r\n    }\r\n\r\n    // no index access possible...\r\n    if(ics == null) return this;\r\n\r\n    // replace expressions for index access\r\n    final Step stp = step[ms];\r\n    final Expr ie = stp.pred[ips].indexEquivalent(ics);\r\n\r\n    if(ics.seq) {\r\n      // do not invert path\r\n      stp.pred[ips] = ie;\r\n    } else {\r\n      Step[] inv = {};\r\n\r\n      // collect remaining predicates\r\n      final Expr[] newPreds = new Expr[stp.pred.length - 1];\r\n      int c = 0;\r\n      for(int p = 0; p != stp.pred.length; ++p) {\r\n        if(p != ips) newPreds[c++] = stp.pred[p];\r\n      }\r\n\r\n      // invert path before index step\r\n      for(int j = ms; j >= 0; j--) {\r\n        final Axis a = step[j].axis.invert();\r\n        if(a == null) break;\r\n\r\n        if(j == 0) {\r\n          if(a != Axis.ANC && a != Axis.ANCORSELF)\r\n            inv = Array.add(inv, Step.get(input, a, new KindTest(Type.DOC)));\r\n        } else {\r\n          final Step prev = step[j - 1];\r\n          inv = Array.add(inv, Step.get(input, a, prev.test, prev.pred));\r\n        }\r\n      }\r\n      final boolean simple = inv.length == 0 && newPreds.length == 0;\r\n\r\n      // create resulting expression\r\n      AxisPath result = null;\r\n      if(ie instanceof AxisPath) {\r\n        result = (AxisPath) ie;\r\n      } else if(ms + 1 < step.length || !simple) {\r\n        result = simple ? new AxisPath(input, ie) :\r\n          new AxisPath(input, ie, Step.get(input, Axis.SELF, Test.NODE));\r\n      } else {\r\n        return ie;\r\n      }\r\n\r\n      // add remaining predicates to last step\r\n      final int sl = result.step.length - 1;\r\n      for(final Expr np : newPreds) {\r\n        result.step[sl] = result.step[sl].addPred(np);\r\n      }\r\n      // add inverted path as predicate to last step\r\n      if(inv.length != 0) result.step[sl] = result.step[sl].addPred(\r\n          AxisPath.get(input, null, inv));\r\n\r\n      // add remaining steps\r\n      for(int s = ms + 1; s < step.length; ++s) {\r\n        result.step = Array.add(result.step, step[s]);\r\n      }\r\n      return result;\r\n    }\r\n    return this;\r\n  }","id":54339,"modified_method":"/**\r\n   * If possible, returns an expression which accesses the index.\r\n   * Otherwise, returns the original expression.\r\n   * @param ctx query context\r\n   * @param data data reference\r\n   * @return resulting expression\r\n   * @throws QueryException query exception\r\n   */\r\n  private Expr index(final QueryContext ctx, final Data data)\r\n      throws QueryException {\r\n\r\n    // cache index access costs\r\n    IndexContext ics = null;\r\n    int ips = 0;\r\n    int ms = 0;\r\n\r\n    // check if path can be converted to an index access\r\n    for(int s = 0; s < step.length; ++s) {\r\n      // find cheapest index access\r\n      final Step stp = step[s];\r\n      if(!stp.axis.down) break;\r\n\r\n      // check if resulting index path will be duplicate free\r\n      final boolean d = pathNodes(data, s) == null;\r\n\r\n      // choose cheapest index access\r\n      for(int p = 0; p < stp.pred.length; ++p) {\r\n        final IndexContext ic = new IndexContext(ctx, data, stp, d);\r\n        if(!stp.pred[p].indexAccessible(ic)) continue;\r\n\r\n        if(ic.is == 0) {\r\n          if(ic.not) {\r\n            // not operator... accept all results\r\n            stp.pred[p] = Bln.TRUE;\r\n            continue;\r\n          }\r\n          // no results...\r\n          ctx.compInfo(OPTNOINDEX, this);\r\n          return Empty.SEQ;\r\n        }\r\n        if(ics == null || ics.is > ic.is) {\r\n          ics = ic;\r\n          ips = p;\r\n          ms = s;\r\n        }\r\n      }\r\n    }\r\n\r\n    // no index access possible...\r\n    if(ics == null) return this;\r\n\r\n    // replace expressions for index access\r\n    final Step stp = step[ms];\r\n    final Expr ie = stp.pred[ips].indexEquivalent(ics);\r\n\r\n    if(ics.seq) {\r\n      // do not invert path\r\n      stp.pred[ips] = ie;\r\n    } else {\r\n      Step[] inv = {};\r\n\r\n      // collect remaining predicates\r\n      final Expr[] newPreds = new Expr[stp.pred.length - 1];\r\n      int c = 0;\r\n      for(int p = 0; p != stp.pred.length; ++p) {\r\n        if(p != ips) newPreds[c++] = stp.pred[p];\r\n      }\r\n\r\n      // invert path before index step\r\n      for(int j = ms; j >= 0; j--) {\r\n        final Axis a = step[j].axis.invert();\r\n        if(a == null) break;\r\n\r\n        if(j == 0) {\r\n          if(a != Axis.ANC && a != Axis.ANCORSELF)\r\n            inv = Array.add(inv, Step.get(input, a, new KindTest(Type.DOC)));\r\n        } else {\r\n          final Step prev = step[j - 1];\r\n          inv = Array.add(inv, Step.get(input, a, prev.test, prev.pred));\r\n        }\r\n      }\r\n      final boolean simple = inv.length == 0 && newPreds.length == 0;\r\n\r\n      // create resulting expression\r\n      AxisPath result = null;\r\n      if(ie instanceof AxisPath) {\r\n        result = (AxisPath) ie;\r\n      } else if(ms + 1 < step.length || !simple) {\r\n        result = simple ? new AxisPath(input, ie) :\r\n          new AxisPath(input, ie, Step.get(input, Axis.SELF, Test.NODE));\r\n      } else {\r\n        return ie;\r\n      }\r\n\r\n      // add remaining predicates to last step\r\n      final int sl = result.step.length - 1;\r\n      result.step[sl] = result.step[sl].addPreds(newPreds);\r\n      // add inverted path as predicate to last step\r\n      if(inv.length != 0) result.step[sl] = result.step[sl].addPreds(\r\n          AxisPath.get(input, null, inv));\r\n\r\n      // add remaining steps\r\n      for(int s = ms + 1; s < step.length; ++s) {\r\n        result.step = Array.add(result.step, step[s]);\r\n      }\r\n      return result;\r\n    }\r\n    return this;\r\n  }","commit_id":"edbc381dd527d6968cac7d9c58187c381b589804","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Adds a predicate to the last step.\r\n   * @param pred predicate to be added\r\n   * @return resulting path instance\r\n   */\r\n  public final AxisPath addPred(final Expr pred) {\r\n    step[step.length - 1] = step[step.length - 1].addPred(pred);\r\n    return get(input, root, step);\r\n  }","id":54340,"modified_method":"/**\r\n   * Adds a predicate to the last step.\r\n   * @param pred predicate to be added\r\n   * @return resulting path instance\r\n   */\r\n  public final AxisPath addPreds(final Expr[] pred) {\r\n    step[step.length - 1] = step[step.length - 1].addPreds(pred);\r\n    return get(input, root, step);\r\n  }","commit_id":"edbc381dd527d6968cac7d9c58187c381b589804","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Opens the specified database; if it does not exist, create a new\r\n   * database instance.\r\n   * @param ctx database context\r\n   * @param path document path\r\n   * @return data reference\r\n   * @throws IOException I/O exception\r\n   */\r\n  public static synchronized Data check(final Context ctx, final String path)\r\n      throws IOException {\r\n\r\n    final IO io = IO.get(path);\r\n    final String name = io.dbname();\r\n    return MetaData.found(path, name, ctx.prop) ? Open.open(name, ctx) :\r\n      CreateDB.xml(io, name, ctx);\r\n  }","id":54341,"modified_method":"/**\r\n   * Opens the specified database; if it does not exist, create a new\r\n   * database instance.\r\n   * @param ctx database context\r\n   * @param path document path\r\n   * @return data reference\r\n   * @throws IOException I/O exception\r\n   */\r\n  public static synchronized Data check(final Context ctx, final String path)\r\n      throws IOException {\r\n\r\n    final IO io = IO.get(path);\r\n    final String name = io.dbname();\r\n\r\n    // if found, an existing database is opened\r\n    return MetaData.found(path, name, ctx.prop) ? Open.open(name, ctx) :\r\n      // if flag is set to true, a new database instance is created on disk\r\n      ctx.prop.is(Prop.FORCECREATE) ? CreateDB.xml(io, name, ctx) :\r\n        // otherwise, a main-memory instance is created\r\n        CreateDB.xml(io, ctx);\r\n  }","commit_id":"edbc381dd527d6968cac7d9c58187c381b589804","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Creates a database instance from the specified parser.\n   * @param parser input parser\n   * @param name name of the database\n   * @param ctx database context\n   * @return database instance\n   * @throws IOException I/O exception\n   */\n  public static synchronized Data xml(final Parser parser, final String name,\n      final Context ctx) throws IOException {\n\n    if(ctx.prop.is(Prop.MAINMEM)) {\n      return MemBuilder.build(parser, ctx.prop, name);\n    }\n    if(ctx.pinned(name)) throw new IOException(Main.info(DBLOCKED, name));\n\n    final Builder builder = new DiskBuilder(parser, ctx.prop);\n    try {\n      final Data data = builder.build(name);\n      if(data.meta.txtindex) data.setIndex(IndexType.TXT,\n        new ValueBuilder(data, true).build());\n      if(data.meta.atvindex) data.setIndex(IndexType.ATV,\n        new ValueBuilder(data, false).build());\n      if(data.meta.ftxindex) data.setIndex(IndexType.FTX,\n        FTBuilder.get(data, data.meta.wildcards).build());\n      data.close();\n    } catch(final IOException ex) {\n      try {\n        builder.close();\n      } catch(final IOException exx) {\n        Main.debug(exx);\n      }\n      throw ex;\n    }\n    return Open.open(name, ctx);\n  }","id":54342,"modified_method":"/**\n   * Creates a database instance from the specified parser.\n   * @param parser input parser\n   * @param name name of the database\n   * @param ctx database context\n   * @return database instance\n   * @throws IOException I/O exception\n   */\n  public static synchronized Data xml(final Parser parser, final String name,\n      final Context ctx) throws IOException {\n\n    // create main-memory database instance\n    if(ctx.prop.is(Prop.MAINMEM))\n      return MemBuilder.build(parser, ctx.prop, name);\n\n    // database is currently locked by another process\n    if(ctx.pinned(name)) throw new IOException(Main.info(DBLOCKED, name));\n\n    // build database and index structures\n    final Builder builder = new DiskBuilder(parser, ctx.prop);\n    try {\n      final Data data = builder.build(name);\n      if(data.meta.txtindex) data.setIndex(IndexType.TXT,\n        new ValueBuilder(data, true).build());\n      if(data.meta.atvindex) data.setIndex(IndexType.ATV,\n        new ValueBuilder(data, false).build());\n      if(data.meta.ftxindex) data.setIndex(IndexType.FTX,\n        FTBuilder.get(data, data.meta.wildcards).build());\n      data.close();\n    } catch(final IOException ex) {\n      try {\n        builder.close();\n      } catch(final IOException exx) {\n        Main.debug(exx);\n      }\n      throw ex;\n    }\n    return Open.open(name, ctx);\n  }","commit_id":"edbc381dd527d6968cac7d9c58187c381b589804","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Creates a main-memory database for the specified parser.\n   * @param parser input parser\n   * @param ctx database context\n   * @return database instance\n   * @throws IOException I/O exception\n   */\n  public static synchronized Data xml(final Parser parser, final Context ctx)\n      throws IOException {\n    return MemBuilder.build(parser, ctx.prop);\n  }","id":54343,"modified_method":"/**\n   * Creates a main-memory database for the specified parser.\n   * @param parser input parser\n   * @param ctx database context\n   * @return database instance\n   * @throws IOException I/O exception\n   */\n  public static synchronized Data xml(final Parser parser, final Context ctx)\n      throws IOException {\n\n    if(!ctx.user.perm(User.CREATE))\n      throw new IOException(Main.info(PERMNO, CmdPerm.CREATE));\n    return MemBuilder.build(parser, ctx.prop);\n  }","commit_id":"edbc381dd527d6968cac7d9c58187c381b589804","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public Expr comp(final QueryContext ctx) throws QueryException {\r\n    final int vs = ctx.vars.size();\r\n\r\n    // optimize for/let clauses\r\n    for(final ForLet f : fl) {\r\n      // disable fast full-text evaluation if score value exists\r\n      final boolean fast = ctx.ftfast;\r\n      ctx.ftfast &= f.simple();\r\n      f.comp(ctx);\r\n      ctx.ftfast = fast;\r\n    }\r\n\r\n    // optimize where clause\r\n    boolean empty = false;\r\n    if(where != null) {\r\n      where = checkUp(where, ctx).comp(ctx).compEbv(ctx);\r\n      if(where.value()) {\r\n        // test is always false: no results\r\n        empty = !where.ebv(ctx, input).bool(input);\r\n        if(!empty) {\r\n          // always true: test can be skipped\r\n          ctx.compInfo(OPTREMOVE, desc(), where);\r\n          where = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(order != null) order.comp(ctx);\r\n    ret = ret.comp(ctx);\r\n\r\n    ctx.vars.reset(vs);\r\n\r\n    // remove FLWOR expression if WHERE clause always returns false\r\n    if(empty) {\r\n      ctx.compInfo(OPTREMOVE, desc(), where);\r\n      return Empty.SEQ;\r\n    }\r\n\r\n    // remove inlined clauses\r\n    for(int f = 0; f != fl.length; ++f) {\r\n      if(fl[f].var.expr() != null) {\r\n        ctx.compInfo(OPTVAR, fl[f].var);\r\n        fl = Array.delete(fl, f--);\r\n      }\r\n    }\r\n\r\n    // no clauses left: simplify expression\r\n    // an optional order clause can be safely ignored\r\n    if(fl.length == 0) {\r\n      // if where is null: where A return B -> if A then B else ()\r\n      // otherwise: return B -> B\r\n      ctx.compInfo(OPTFLWOR);\r\n      return where != null ? new If(input, where, ret, Empty.SEQ) : ret;\r\n    }\r\n\r\n    // remove FLWOR expression if a FOR clause yields an empty sequence\r\n    for(final ForLet f : fl) {\r\n      if(f instanceof For && (f.empty() || f.size() == 0)) {\r\n        ctx.compInfo(OPTFLWOR);\r\n        return Empty.SEQ;\r\n      }\r\n    }\r\n\r\n    // add where clause to most inner FOR clause and remove variable calls\r\n    if(where != null) {\r\n      final ForLet f = fl[fl.length - 1];\r\n      if(f instanceof For && f.simple() && where.removable(f.var)) {\r\n        // convert where clause to predicate(s)\r\n        ctx.compInfo(OPTWHERE);\r\n        Expr w = where.remove(f.var);\r\n        // expression will be wrapped by a boolean function\r\n        // if the result is numeric\r\n        if(w.type().mayBeNum()) w = Fun.create(input, FunDef.BOOLEAN, w);\r\n\r\n        if(f.expr instanceof AxisPath) {\r\n          AxisPath ap = (AxisPath) f.expr;\r\n          if(w instanceof And) {\r\n            for(final Expr e : ((And) w).expr) ap = ap.addPred(e);\r\n          } else {\r\n            ap = ap.addPred(w);\r\n          }\r\n          f.expr = ap;\r\n        } else {\r\n          f.expr = new Filter(input, f.expr, w);\r\n        }\r\n        where = null;\r\n        // recompile expression\r\n        return comp(ctx);\r\n      }\r\n    }\r\n\r\n    // compute number of results to speed up count() operations\r\n    if(where == null) {\r\n      size = ret.size();\r\n      if(size != -1) {\r\n        // multiply loop runs\r\n        for(final ForLet f : fl) {\r\n          final long s = f.size();\r\n          if(s == -1) {\r\n            size = s;\r\n            break;\r\n          }\r\n          size *= s;\r\n        }\r\n      }\r\n    }\r\n    type = new SeqType(ret.type().type, SeqType.Occ.ZM);\r\n    return this;\r\n  }","id":54344,"modified_method":"@Override\r\n  public Expr comp(final QueryContext ctx) throws QueryException {\r\n    // add where clause to most inner FOR clause and remove variable calls\r\n    // this is done first to force index access over other path rewritings\r\n    if(where != null) {\r\n      final ForLet f = fl[fl.length - 1];\r\n      if(f instanceof For && f.simple() && where.removable(f.var)) {\r\n        // convert where clause to predicate(s)\r\n        ctx.compInfo(OPTWHERE);\r\n\r\n        final Expr e = where.remove(f.var);\r\n        final Expr[] pr = e instanceof And ? ((And) e).expr : new Expr[] { e };\r\n\r\n        // expression will be wrapped by a boolean function\r\n        // if the result is numeric\r\n        for(int p = 0; p < pr.length; p++) {\r\n          if(pr[p].type().mayBeNum())\r\n            pr[p] = Fun.create(input, FunDef.BOOLEAN, pr[p]);\r\n        }\r\n\r\n        // attach predicates to axis path, or create a filter\r\n        if(f.expr instanceof AxisPath) {\r\n          f.expr = ((AxisPath) f.expr).addPreds(pr);\r\n        } else {\r\n          f.expr = new Filter(input, f.expr, pr);\r\n        }\r\n        where = null;\r\n      }\r\n    }\r\n\r\n    final int vs = ctx.vars.size();\r\n\r\n    // optimize for/let clauses\r\n    for(final ForLet f : fl) {\r\n      // disable fast full-text evaluation if score value exists\r\n      final boolean fast = ctx.ftfast;\r\n      ctx.ftfast &= f.simple();\r\n      f.comp(ctx);\r\n      ctx.ftfast = fast;\r\n    }\r\n\r\n    // optimize where clause\r\n    boolean empty = false;\r\n    if(where != null) {\r\n      where = checkUp(where, ctx).comp(ctx).compEbv(ctx);\r\n      if(where.value()) {\r\n        // test is always false: no results\r\n        empty = !where.ebv(ctx, input).bool(input);\r\n        if(!empty) {\r\n          // always true: test can be skipped\r\n          ctx.compInfo(OPTREMOVE, desc(), where);\r\n          where = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(order != null) order.comp(ctx);\r\n    ret = ret.comp(ctx);\r\n\r\n    ctx.vars.reset(vs);\r\n\r\n    // remove FLWOR expression if WHERE clause always returns false\r\n    if(empty) {\r\n      ctx.compInfo(OPTREMOVE, desc(), where);\r\n      return Empty.SEQ;\r\n    }\r\n\r\n    // remove inlined variable declarations\r\n    for(int f = 0; f != fl.length; ++f) {\r\n      if(fl[f].var.expr() != null) {\r\n        ctx.compInfo(OPTVAR, fl[f].var);\r\n        fl = Array.delete(fl, f--);\r\n      }\r\n    }\r\n\r\n    // no clauses left: simplify expression\r\n    // an optional order clause can be safely ignored\r\n    if(fl.length == 0) {\r\n      // if where clause exists: where A return B -> if A then B else ()\r\n      // otherwise: return B -> B\r\n      ctx.compInfo(OPTFLWOR);\r\n      return where != null ? new If(input, where, ret, Empty.SEQ) : ret;\r\n    }\r\n\r\n    // remove FLWOR expression if a FOR clause yields an empty sequence\r\n    for(final ForLet f : fl) {\r\n      if(f instanceof For && (f.empty() || f.size() == 0)) {\r\n        ctx.compInfo(OPTFLWOR);\r\n        return Empty.SEQ;\r\n      }\r\n    }\r\n\r\n    // compute number of results to speed up count() operations\r\n    if(where == null) {\r\n      size = ret.size();\r\n      if(size != -1) {\r\n        // multiply loop runs\r\n        for(final ForLet f : fl) {\r\n          final long s = f.size();\r\n          if(s == -1) {\r\n            size = s;\r\n            break;\r\n          }\r\n          size *= s;\r\n        }\r\n      }\r\n    }\r\n    type = new SeqType(ret.type().type, SeqType.Occ.ZM);\r\n    return this;\r\n  }","commit_id":"edbc381dd527d6968cac7d9c58187c381b589804","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public final Expr comp(final QueryContext ctx) throws QueryException {\r\n    root = checkUp(root, ctx).comp(ctx);\r\n\r\n    // convert filters to axis paths\r\n    if(root instanceof AxisPath && !super.uses(Use.POS)) {\r\n      AxisPath path = ((AxisPath) root).copy();\r\n      for(final Expr p : pred) path = path.addPred(p);\r\n      return path.comp(ctx);\r\n    }\r\n\r\n    // return empty root\r\n    if(root.empty()) return optPre(Empty.SEQ, ctx);\r\n\r\n    final Value tmp = ctx.value;\r\n    ctx.value = null;\r\n    final Expr e = super.comp(ctx);\r\n    ctx.value = tmp;\r\n    if(e != this) return e;\r\n\r\n    // no predicates.. return root\r\n    if(pred.length == 0) return root;\r\n    final Expr p = pred[0];\r\n\r\n    // evaluate return type\r\n    final SeqType t = root.type();\r\n    type = new SeqType(t.type, t.zeroOrOne() ? SeqType.Occ.ZO : SeqType.Occ.ZM);\r\n\r\n    // position predicate\r\n    final Pos pos = p instanceof Pos ? (Pos) p : null;\r\n    // last flag\r\n    final boolean last = p instanceof Fun && ((Fun) p).def == FunDef.LAST;\r\n    // use iterative evaluation\r\n    if(pred.length == 1 && (last || pos != null || !uses(Use.POS)))\r\n      return new IterPred(this, pos, last);\r\n\r\n    // faster runtime evaluation of variable counters (array[$pos] ...)\r\n    direct = pred.length == 1 && p.type().num() && !p.uses(Use.CTX);\r\n\r\n    return this;\r\n  }","id":54345,"modified_method":"@Override\r\n  public final Expr comp(final QueryContext ctx) throws QueryException {\r\n    root = checkUp(root, ctx).comp(ctx);\r\n\r\n    // convert filters to axis paths\r\n    if(root instanceof AxisPath && !super.uses(Use.POS))\r\n      return ((AxisPath) root).copy().addPreds(pred).comp(ctx);\r\n\r\n    // return empty root\r\n    if(root.empty()) return optPre(Empty.SEQ, ctx);\r\n\r\n    final Value tmp = ctx.value;\r\n    ctx.value = null;\r\n    final Expr e = super.comp(ctx);\r\n    ctx.value = tmp;\r\n    if(e != this) return e;\r\n\r\n    // no predicates.. return root\r\n    if(pred.length == 0) return root;\r\n    final Expr p = pred[0];\r\n\r\n    // evaluate return type\r\n    final SeqType t = root.type();\r\n    type = new SeqType(t.type, t.zeroOrOne() ? SeqType.Occ.ZO : SeqType.Occ.ZM);\r\n\r\n    // position predicate\r\n    final Pos pos = p instanceof Pos ? (Pos) p : null;\r\n    // last flag\r\n    final boolean last = p instanceof Fun && ((Fun) p).def == FunDef.LAST;\r\n    // use iterative evaluation\r\n    if(pred.length == 1 && (last || pos != null || !uses(Use.POS)))\r\n      return new IterFilter(this, pos, last);\r\n\r\n    // faster runtime evaluation of variable counters (array[$pos] ...)\r\n    direct = pred.length == 1 && p.type().num() && !p.uses(Use.CTX);\r\n\r\n    return this;\r\n  }","commit_id":"edbc381dd527d6968cac7d9c58187c381b589804","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public Iter iter(final QueryContext ctx) throws QueryException {\r\n    if(direct) {\r\n      final Item it = pred[0].ebv(ctx, input);\r\n      final long l = it.itr(input);\r\n      final Expr e = Pos.get(l, l, input);\r\n      return l != it.dbl(input) || e == Bln.FALSE ? Iter.EMPTY :\r\n        new IterPred(this, (Pos) e, false).iter(ctx);\r\n    }\r\n\r\n    final Iter iter = ctx.iter(root);\r\n    final Value cv = ctx.value;\r\n    final long cs = ctx.size;\r\n    final long cp = ctx.pos;\r\n\r\n    // cache results to support last() function\r\n    final ItemIter ir = new ItemIter();\r\n    Item i;\r\n    while((i = iter.next()) != null) ir.add(i);\r\n\r\n    // evaluate predicates\r\n    for(final Expr p : pred) {\r\n      ctx.size = ir.size();\r\n      ctx.pos = 1;\r\n      int c = 0;\r\n      final long sl = ir.size();\r\n      for(int s = 0; s < sl; ++s) {\r\n        ctx.value = ir.item[s];\r\n        if(p.test(ctx, input) != null) ir.item[c++] = ir.item[s];\r\n        ctx.pos++;\r\n      }\r\n      ir.size(c);\r\n    }\r\n    ctx.value = cv;\r\n    ctx.size = cs;\r\n    ctx.pos = cp;\r\n    return ir;\r\n  }","id":54346,"modified_method":"@Override\r\n  public Iter iter(final QueryContext ctx) throws QueryException {\r\n    if(direct) {\r\n      final Item it = pred[0].ebv(ctx, input);\r\n      final long l = it.itr(input);\r\n      final Expr e = Pos.get(l, l, input);\r\n      return l != it.dbl(input) || e == Bln.FALSE ? Iter.EMPTY :\r\n        new IterFilter(this, (Pos) e, false).iter(ctx);\r\n    }\r\n\r\n    final Iter iter = ctx.iter(root);\r\n    final Value cv = ctx.value;\r\n    final long cs = ctx.size;\r\n    final long cp = ctx.pos;\r\n\r\n    // cache results to support last() function\r\n    final ItemIter ir = new ItemIter();\r\n    Item i;\r\n    while((i = iter.next()) != null) ir.add(i);\r\n\r\n    // evaluate predicates\r\n    for(final Expr p : pred) {\r\n      ctx.size = ir.size();\r\n      ctx.pos = 1;\r\n      int c = 0;\r\n      final long sl = ir.size();\r\n      for(int s = 0; s < sl; ++s) {\r\n        ctx.value = ir.item[s];\r\n        if(p.test(ctx, input) != null) ir.item[c++] = ir.item[s];\r\n        ctx.pos++;\r\n      }\r\n      ir.size(c);\r\n    }\r\n    ctx.value = cv;\r\n    ctx.size = cs;\r\n    ctx.pos = cp;\r\n    return ir;\r\n  }","commit_id":"edbc381dd527d6968cac7d9c58187c381b589804","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Adds a predicate to the step.\r\n   * @param p predicate to be added\r\n   * @return resulting step instance\r\n   */\r\n  final Step addPred(final Expr p) {\r\n    pred = Array.add(pred, p);\r\n    return get(input, axis, test, pred);\r\n  }","id":54347,"modified_method":"/**\r\n   * Adds predicates to the step.\r\n   * @param preds predicates to be added\r\n   * @return resulting step instance\r\n   */\r\n  final Step addPreds(final Expr... preds) {\r\n    for(final Expr p : preds) pred = Array.add(pred, p);\r\n    return get(input, axis, test, pred);\r\n  }","commit_id":"edbc381dd527d6968cac7d9c58187c381b589804","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n     * We compress the payload if it is larger than <code>min_size<\/code>. In this case we add a header containing\n     * the original size before compression. Otherwise we add no header.<br/>\n     * Note that we compress either the entire buffer (if offset/length are not used), or a subset (if offset/length\n     * are used)\n     * @param evt\n     */\n    public Object down(Event evt) {\n        if(evt.getType() == Event.MSG) {\n            Message msg=(Message)evt.getArg();\n            int length=msg.getLength(); // takes offset/length (if set) into account\n            if(length >= min_size) {\n                byte[] payload=msg.getRawBuffer(); // here we get the ref so we can avoid copying\n                byte[] compressed_payload=new byte[length];\n                int compressed_size;\n                Deflater deflater=null;\n                try {\n                    deflater=deflater_pool.take();\n                    deflater.reset();\n                    deflater.setInput(payload, msg.getOffset(), length);\n                    deflater.finish();\n                    deflater.deflate(compressed_payload);\n                    compressed_size=deflater.getTotalOut();\n                    byte[] new_payload=new byte[compressed_size];\n                    System.arraycopy(compressed_payload, 0, new_payload, 0, compressed_size);\n                    msg.setBuffer(new_payload);\n                    msg.putHeader(name, new CompressHeader(length));\n                    if(log.isTraceEnabled())\n                        log.trace(\"compressed payload from \" + length + \" bytes to \" + compressed_size + \" bytes\");\n                }\n                catch(InterruptedException e) {\n                    Thread.currentThread().interrupt(); // set interrupt flag again\n                    throw new RuntimeException(e);\n                }\n                finally {\n                    if(deflater != null)\n                        deflater_pool.offer(deflater);\n                }\n            }\n        }\n        return down_prot.down(evt);\n    }","id":54348,"modified_method":"/**\n     * We compress the payload if it is larger than <code>min_size<\/code>. In this case we add a header containing\n     * the original size before compression. Otherwise we add no header.<br/>\n     * Note that we compress either the entire buffer (if offset/length are not used), or a subset (if offset/length\n     * are used)\n     * @param evt\n     */\n    public Object down(Event evt) {\n        if(evt.getType() == Event.MSG) {\n            Message msg=(Message)evt.getArg();\n            int length=msg.getLength(); // takes offset/length (if set) into account\n            if(length >= min_size) {\n                byte[] payload=msg.getRawBuffer(); // here we get the ref so we can avoid copying\n                byte[] compressed_payload=new byte[length];\n                int compressed_size;\n                Deflater deflater=null;\n                try {\n                    deflater=deflater_pool.take();\n                    deflater.reset();\n                    deflater.setInput(payload, msg.getOffset(), length);\n                    deflater.finish();\n                    deflater.deflate(compressed_payload);\n                    compressed_size=deflater.getTotalOut();\n\n                    if ( compressed_size < length ) { // JGRP-1000\n                        byte[] new_payload=new byte[compressed_size];\n                        System.arraycopy(compressed_payload, 0, new_payload, 0, compressed_size);\n                        msg.setBuffer(new_payload);\n                        msg.putHeader(name, new CompressHeader(length));\n                        if(log.isTraceEnabled())\n                            log.trace(\"compressed payload from \" + length + \" bytes to \" + compressed_size + \" bytes\");\n                    }\n                    else {\n                        if(log.isTraceEnabled())\n                            log.trace(\"Skipping compression since the compressed message is larger than the original\");\n                    }\n                }\n                catch(InterruptedException e) {\n                    Thread.currentThread().interrupt(); // set interrupt flag again\n                    throw new RuntimeException(e);\n                }\n                finally {\n                    if(deflater != null)\n                        deflater_pool.offer(deflater);\n                }\n            }\n        }\n        return down_prot.down(evt);\n    }","commit_id":"4d615e8f2615920adeb7ec031c32e53a2153302b","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * We compress the payload if it is larger than <code>min_size<\/code>. In this case we add a header containing\n     * the original size before compression. Otherwise we add no header.<br/>\n     * Note that we compress either the entire buffer (if offset/length are not used), or a subset (if offset/length\n     * are used)\n     * @param evt\n     */\n    public Object down(Event evt) {\n        if(evt.getType() == Event.MSG) {\n            Message msg=(Message)evt.getArg();\n            int length=msg.getLength(); // takes offset/length (if set) into account\n            if(length >= min_size) {\n                byte[] payload=msg.getRawBuffer(); // here we get the ref so we can avoid copying\n                byte[] compressed_payload=new byte[length];\n                int compressed_size;\n                Deflater deflater=null;\n                try {\n                    deflater=deflater_pool.take();\n                    deflater.reset();\n                    deflater.setInput(payload, msg.getOffset(), length);\n                    deflater.finish();\n                    deflater.deflate(compressed_payload);\n                    compressed_size=deflater.getTotalOut();\n                    byte[] new_payload=new byte[compressed_size];\n                    System.arraycopy(compressed_payload, 0, new_payload, 0, compressed_size);\n                    msg.setBuffer(new_payload);\n                    msg.putHeader(name, new CompressHeader(length));\n                    if(log.isTraceEnabled())\n                        log.trace(\"compressed payload from \" + length + \" bytes to \" + compressed_size + \" bytes\");\n                }\n                catch(InterruptedException e) {\n                    Thread.currentThread().interrupt(); // set interrupt flag again\n                    throw new RuntimeException(e);\n                }\n                finally {\n                    if(deflater != null)\n                        deflater_pool.offer(deflater);\n                }\n            }\n        }\n        return down_prot.down(evt);\n    }","id":54349,"modified_method":"/**\n     * We compress the payload if it is larger than <code>min_size<\/code>. In this case we add a header containing\n     * the original size before compression. Otherwise we add no header.<br/>\n     * Note that we compress either the entire buffer (if offset/length are not used), or a subset (if offset/length\n     * are used)\n     * @param evt\n     */\n    public Object down(Event evt) {\n        if(evt.getType() == Event.MSG) {\n            Message msg=(Message)evt.getArg();\n            int length=msg.getLength(); // takes offset/length (if set) into account\n            if(length >= min_size) {\n                byte[] payload=msg.getRawBuffer(); // here we get the ref so we can avoid copying\n                byte[] compressed_payload=new byte[length];\n                int compressed_size;\n                Deflater deflater=null;\n                try {\n                    deflater=deflater_pool.take();\n                    deflater.reset();\n                    deflater.setInput(payload, msg.getOffset(), length);\n                    deflater.finish();\n                    deflater.deflate(compressed_payload);\n                    compressed_size=deflater.getTotalOut();\n\n                    if ( compressed_size < length ) { // JGRP-1000\n                        byte[] new_payload=new byte[compressed_size];\n                        System.arraycopy(compressed_payload, 0, new_payload, 0, compressed_size);\n                        msg.setBuffer(new_payload);\n                        msg.putHeader(name, new CompressHeader(length));\n                        if(log.isTraceEnabled())\n                            log.trace(\"compressed payload from \" + length + \" bytes to \" + compressed_size + \" bytes\");\n                    }\n                    else {\n                        if(log.isTraceEnabled())\n                            log.trace(\"Skipping compression since the compressed message is larger than the original\");\n                    }\n                }\n                catch(InterruptedException e) {\n                    Thread.currentThread().interrupt(); // set interrupt flag again\n                    throw new RuntimeException(e);\n                }\n                finally {\n                    if(deflater != null)\n                        deflater_pool.offer(deflater);\n                }\n            }\n        }\n        return down_prot.down(evt);\n    }","commit_id":"ccae56f59f90a5e6a44216d5e7ffbc854c432c22","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * @param evt\n     */\n    private void handleUpMessage(Event evt) throws Exception\n    {\n        Message msg = (Message) evt.getArg();\n\n        if (msg == null)\n        {\n            if (trace)\n                log.trace(\"null message - passing straight up\");\n            passUp(evt);\n            return;\n        }\n\n        EncryptHeader hdr = (EncryptHeader)msg.getHeader(EncryptHeader.KEY);\n\n        // try and get the encryption header\n        if (hdr == null)\n        {\n            if (log.isTraceEnabled())\n                log.trace(\"dropping message as ENCRYPT header is null  or has not been recognized, msg will not be passed up, \" +\n                        \"headers are \" + msg.getHeaders());\n            return;\n        }\n\n        if (trace)\n            log.trace(\"header received \" + hdr);\n\n\n        // if a normal message try and decrypt it\n        if (hdr.getType() == EncryptHeader.ENCRYPT)\n        {\n            // if msg buffer is empty, and we didn't encrypt the entire message, just pass up\n            if (!hdr.encrypt_entire_msg && ((Message)evt.getArg()).getBuffer() == null) {\n                if (trace)\n                    log.trace(\"passing up message as it has an empty buffer \");\n                passUp(evt);\n                return;\n            }\n\n            // if queueing then pass into queue to be dealt with later\n            if (queue_up){\n                if (trace)\n                    log.trace(\"queueing up message as no session key established: \" + evt.getArg());\n                    upMessageQueue.put(evt);\n            } else{\n                // make sure we pass up any queued messages first\n                // could be more optimised but this can wait\n                // we only need this if not using supplied key\n                if (!suppliedKey) {\n                    drainUpQueue();\n                }\n                // try and decrypt the message\n                Message tmpMsg=decryptMessage(symDecodingCipher, msg);\n                if (tmpMsg != null){\n                    if(trace)\n                        log.trace(\"decrypted message \" + tmpMsg);\n                    passUp(new Event(Event.MSG, tmpMsg));\n                } else {\n                    log.warn(\"Unrecognised cipher discarding message\");\n                }\n            }\n        } else\n        {\n            // check if we had some sort of encrypt control\n            // header if using supplied key we should not\n            // process it\n            if (suppliedKey)\n            {\n                if (log.isWarnEnabled())\n                {\n                    log.warn(\"We received an encrypt header of \"\n                            + hdr.getType() + \" while in configured mode\");\n                }\n            } else{\n                // see what sort of encrypt control message we\n                // have received\n                switch (hdr.getType()){\n                    // if a key request\n                    case EncryptHeader.KEY_REQUEST:\n                        if (log.isInfoEnabled()) {\n                            log.info(\"received a key request from peer\");\n                        }\n\n                        //if a key request send response key back\n                        try {\n                            // extract peer's public key\n                            PublicKey tmpKey = generatePubKey(msg.getBuffer());\n                            // send back the secret key we have\n                            sendSecretKey(getSecretKey(), tmpKey, msg.getSrc());\n                        } catch (Exception e){\n                            log.warn(\"unable to reconstitute peer's public key\");\n                        }\n                        break;\n                    case EncryptHeader.SECRETKEY:\n                        if (log.isInfoEnabled()) {\n                            log.info(\"received a secretkey response from keyserver\");\n                        }\n\n                        try {\n                            SecretKey tmp = decodeKey(msg.getBuffer());\n                            if (tmp == null) {\n                                // unable to understand response\n                                // lets try again\n                                sendKeyRequest();\n                            }else{\n                                // otherwise lets set the reurned key\n                                // as the shared key\n                                setKeys(tmp, hdr.getVersion());\n                                if (log.isInfoEnabled()) {\n                                    log.info(\"Decoded secretkey response\");\n                                }\n                            }\n                        } catch (Exception e){\n                            log.warn(\"unable to process received public key\");\n                        }\n                        break;\n                    default:\n                        log.warn(\"Received ignored encrypt header of \"+hdr.getType());\n                        break;\n                }\n            }\n        }\n    }","id":54350,"modified_method":"/**\n     * @param evt\n     */\n    private void handleUpMessage(Event evt) throws Exception\n    {\n        Message msg = (Message) evt.getArg();\n\n        if (msg == null)\n        {\n            if (trace)\n                log.trace(\"null message - passing straight up\");\n            passUp(evt);\n            return;\n        }\n\n        if(msg.getLength() == 0) {\n            passUp(evt);\n            return;\n        }\n\n        EncryptHeader hdr = (EncryptHeader)msg.getHeader(EncryptHeader.KEY);\n\n        // try and get the encryption header\n        if (hdr == null)\n        {\n            if (log.isTraceEnabled())\n                log.trace(\"dropping message as ENCRYPT header is null  or has not been recognized, msg will not be passed up, \" +\n                        \"headers are \" + msg.getHeaders());\n            return;\n        }\n\n        if (trace)\n            log.trace(\"header received \" + hdr);\n\n\n        // if a normal message try and decrypt it\n        if (hdr.getType() == EncryptHeader.ENCRYPT)\n        {\n            // if msg buffer is empty, and we didn't encrypt the entire message, just pass up\n            if (!hdr.encrypt_entire_msg && ((Message)evt.getArg()).getLength() == 0) {\n                if (trace)\n                    log.trace(\"passing up message as it has an empty buffer \");\n                passUp(evt);\n                return;\n            }\n\n            // if queueing then pass into queue to be dealt with later\n            if (queue_up){\n                if (trace)\n                    log.trace(\"queueing up message as no session key established: \" + evt.getArg());\n                    upMessageQueue.put(evt);\n            } else{\n                // make sure we pass up any queued messages first\n                // could be more optimised but this can wait\n                // we only need this if not using supplied key\n                if (!suppliedKey) {\n                    drainUpQueue();\n                }\n                // try and decrypt the message\n                Message tmpMsg=decryptMessage(symDecodingCipher, msg);\n                if (tmpMsg != null){\n                    if(trace)\n                        log.trace(\"decrypted message \" + tmpMsg);\n                    passUp(new Event(Event.MSG, tmpMsg));\n                } else {\n                    log.warn(\"Unrecognised cipher discarding message\");\n                }\n            }\n        } else\n        {\n            // check if we had some sort of encrypt control\n            // header if using supplied key we should not\n            // process it\n            if (suppliedKey)\n            {\n                if (log.isWarnEnabled())\n                {\n                    log.warn(\"We received an encrypt header of \" + hdr.getType() + \" while in configured mode\");\n                }\n            } else{\n                // see what sort of encrypt control message we\n                // have received\n                switch (hdr.getType()){\n                    // if a key request\n                    case EncryptHeader.KEY_REQUEST:\n                        if (log.isInfoEnabled()) {\n                            log.info(\"received a key request from peer\");\n                        }\n\n                        //if a key request send response key back\n                        try {\n                            // extract peer's public key\n                            PublicKey tmpKey = generatePubKey(msg.getBuffer());\n                            // send back the secret key we have\n                            sendSecretKey(getSecretKey(), tmpKey, msg.getSrc());\n                        } catch (Exception e){\n                            log.warn(\"unable to reconstitute peer's public key\");\n                        }\n                        break;\n                    case EncryptHeader.SECRETKEY:\n                        if (log.isInfoEnabled()) {\n                            log.info(\"received a secretkey response from keyserver\");\n                        }\n\n                        try {\n                            SecretKey tmp = decodeKey(msg.getBuffer());\n                            if (tmp == null) {\n                                // unable to understand response\n                                // lets try again\n                                sendKeyRequest();\n                            }else{\n                                // otherwise lets set the reurned key\n                                // as the shared key\n                                setKeys(tmp, hdr.getVersion());\n                                if (log.isInfoEnabled()) {\n                                    log.info(\"Decoded secretkey response\");\n                                }\n                            }\n                        } catch (Exception e){\n                            log.warn(\"unable to process received public key\");\n                        }\n                        break;\n                    default:\n                        log.warn(\"Received ignored encrypt header of \"+hdr.getType());\n                        break;\n                }\n            }\n        }\n    }","commit_id":"35d93aac94f94e2bb6dc63badfdf61dcd4e6ecd8","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * @param evt\n     * @throws Exception\n     */\n    private void sendDown(Event evt) throws Exception {\n        if (evt.getType() != Event.MSG) {\n            return;\n        }\n        Message msg = (Message) evt.getArg();\n        EncryptHeader hdr=new EncryptHeader(EncryptHeader.ENCRYPT, getSymVersion());\n        hdr.encrypt_entire_msg=this.encrypt_entire_message;\n\n        if(encrypt_entire_message) {\n            byte[] serialized_msg=Util.streamableToByteBuffer(msg);\n            byte[] encrypted_msg=encryptMessage(symEncodingCipher, serialized_msg);\n            Message tmp=msg.copy(false); // we need to preserve headers which may already be present\n            tmp.setBuffer(encrypted_msg);\n            tmp.setSrc(local_addr);\n            tmp.putHeader(EncryptHeader.KEY, hdr);\n            passDown(new Event(Event.MSG, tmp));\n            return;\n        }\n\n\n        // put our encrypt header on the message\n        msg.putHeader(EncryptHeader.KEY, hdr);\n\n        if (msg.getBuffer() != null) {\n            // copy neeeded because same message (object) may be retransmitted -> no double encryption\n            Message msgEncrypted = msg.copy(false);\n            msgEncrypted.setBuffer(encryptMessage(symEncodingCipher, msg.getBuffer()));\n            passDown(new Event(Event.MSG, msgEncrypted));\n            return;\n        }\n\n        if (trace)\n            log.trace(\"buffer is null not encrypting \");\n\n        passDown(evt);\n    }","id":54351,"modified_method":"/**\n     * @param evt\n     * @throws Exception\n     */\n    private void sendDown(Event evt) throws Exception {\n        if (evt.getType() != Event.MSG) {\n            return;\n        }\n\n        Message msg = (Message) evt.getArg();\n        if(msg.getLength() == 0) {\n            passDown(evt);\n            return;\n        }\n\n        EncryptHeader hdr=new EncryptHeader(EncryptHeader.ENCRYPT, getSymVersion());\n        hdr.encrypt_entire_msg=this.encrypt_entire_message;\n\n        if(encrypt_entire_message) {\n            byte[] serialized_msg=Util.streamableToByteBuffer(msg);\n            byte[] encrypted_msg=encryptMessage(symEncodingCipher, serialized_msg);\n            Message tmp=msg.copy(false); // we need to preserve headers which may already be present\n            tmp.setBuffer(encrypted_msg);\n            tmp.setSrc(local_addr);\n            tmp.putHeader(EncryptHeader.KEY, hdr);\n            passDown(new Event(Event.MSG, tmp));\n            return;\n        }\n\n\n        // put our encrypt header on the message\n        msg.putHeader(EncryptHeader.KEY, hdr);\n\n        // copy neeeded because same message (object) may be retransmitted -> no double encryption\n        Message msgEncrypted = msg.copy(false);\n        msgEncrypted.setBuffer(encryptMessage(symEncodingCipher, msg.getBuffer()));\n        passDown(new Event(Event.MSG, msgEncrypted));\n    }","commit_id":"35d93aac94f94e2bb6dc63badfdf61dcd4e6ecd8","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * @param evt\n     */\n    private void handleUpMessage(Event evt) throws Exception\n    {\n        Message msg = (Message) evt.getArg();\n\n        if (msg == null)\n        {\n            if (trace)\n                log.trace(\"null message - passing straight up\");\n            passUp(evt);\n            return;\n        }\n\n        EncryptHeader hdr = (EncryptHeader)msg.getHeader(EncryptHeader.KEY);\n\n        // try and get the encryption header\n        if (hdr == null)\n        {\n            if (log.isTraceEnabled())\n                log.trace(\"dropping message as ENCRYPT header is null  or has not been recognized, msg will not be passed up, \" +\n                        \"headers are \" + msg.getHeaders());\n            return;\n        }\n\n        if (trace)\n            log.trace(\"header received \" + hdr);\n\n\n        // if a normal message try and decrypt it\n        if (hdr.getType() == EncryptHeader.ENCRYPT)\n        {\n            // if msg buffer is empty, and we didn't encrypt the entire message, just pass up\n            if (!hdr.encrypt_entire_msg && ((Message)evt.getArg()).getBuffer() == null) {\n                if (trace)\n                    log.trace(\"passing up message as it has an empty buffer \");\n                passUp(evt);\n                return;\n            }\n\n            // if queueing then pass into queue to be dealt with later\n            if (queue_up){\n                if (trace)\n                    log.trace(\"queueing up message as no session key established: \" + evt.getArg());\n                    upMessageQueue.put(evt);\n            } else{\n                // make sure we pass up any queued messages first\n                // could be more optimised but this can wait\n                // we only need this if not using supplied key\n                if (!suppliedKey) {\n                    drainUpQueue();\n                }\n                // try and decrypt the message\n                Message tmpMsg=decryptMessage(symDecodingCipher, msg);\n                if (tmpMsg != null){\n                    if(trace)\n                        log.trace(\"decrypted message \" + tmpMsg);\n                    passUp(new Event(Event.MSG, tmpMsg));\n                } else {\n                    log.warn(\"Unrecognised cipher discarding message\");\n                }\n            }\n        } else\n        {\n            // check if we had some sort of encrypt control\n            // header if using supplied key we should not\n            // process it\n            if (suppliedKey)\n            {\n                if (log.isWarnEnabled())\n                {\n                    log.warn(\"We received an encrypt header of \"\n                            + hdr.getType() + \" while in configured mode\");\n                }\n            } else{\n                // see what sort of encrypt control message we\n                // have received\n                switch (hdr.getType()){\n                    // if a key request\n                    case EncryptHeader.KEY_REQUEST:\n                        if (log.isInfoEnabled()) {\n                            log.info(\"received a key request from peer\");\n                        }\n\n                        //if a key request send response key back\n                        try {\n                            // extract peer's public key\n                            PublicKey tmpKey = generatePubKey(msg.getBuffer());\n                            // send back the secret key we have\n                            sendSecretKey(getSecretKey(), tmpKey, msg.getSrc());\n                        } catch (Exception e){\n                            log.warn(\"unable to reconstitute peer's public key\");\n                        }\n                        break;\n                    case EncryptHeader.SECRETKEY:\n                        if (log.isInfoEnabled()) {\n                            log.info(\"received a secretkey response from keyserver\");\n                        }\n\n                        try {\n                            SecretKey tmp = decodeKey(msg.getBuffer());\n                            if (tmp == null) {\n                                // unable to understand response\n                                // lets try again\n                                sendKeyRequest();\n                            }else{\n                                // otherwise lets set the reurned key\n                                // as the shared key\n                                setKeys(tmp, hdr.getVersion());\n                                if (log.isInfoEnabled()) {\n                                    log.info(\"Decoded secretkey response\");\n                                }\n                            }\n                        } catch (Exception e){\n                            log.warn(\"unable to process received public key\");\n                        }\n                        break;\n                    default:\n                        log.warn(\"Received ignored encrypt header of \"+hdr.getType());\n                        break;\n                }\n            }\n        }\n    }","id":54352,"modified_method":"/**\n     * @param evt\n     */\n    private void handleUpMessage(Event evt) throws Exception\n    {\n        Message msg = (Message) evt.getArg();\n\n        if (msg == null)\n        {\n            if (trace)\n                log.trace(\"null message - passing straight up\");\n            passUp(evt);\n            return;\n        }\n\n        if(msg.getLength() == 0) {\n            passUp(evt);\n            return;\n        }\n\n        EncryptHeader hdr = (EncryptHeader)msg.getHeader(EncryptHeader.KEY);\n\n        // try and get the encryption header\n        if (hdr == null)\n        {\n            if (log.isTraceEnabled())\n                log.trace(\"dropping message as ENCRYPT header is null  or has not been recognized, msg will not be passed up, \" +\n                        \"headers are \" + msg.getHeaders());\n            return;\n        }\n\n        if (trace)\n            log.trace(\"header received \" + hdr);\n\n\n        // if a normal message try and decrypt it\n        if (hdr.getType() == EncryptHeader.ENCRYPT)\n        {\n            // if msg buffer is empty, and we didn't encrypt the entire message, just pass up\n            if (!hdr.encrypt_entire_msg && ((Message)evt.getArg()).getLength() == 0) {\n                if (trace)\n                    log.trace(\"passing up message as it has an empty buffer \");\n                passUp(evt);\n                return;\n            }\n\n            // if queueing then pass into queue to be dealt with later\n            if (queue_up){\n                if (trace)\n                    log.trace(\"queueing up message as no session key established: \" + evt.getArg());\n                    upMessageQueue.put(evt);\n            } else{\n                // make sure we pass up any queued messages first\n                // could be more optimised but this can wait\n                // we only need this if not using supplied key\n                if (!suppliedKey) {\n                    drainUpQueue();\n                }\n                // try and decrypt the message\n                Message tmpMsg=decryptMessage(symDecodingCipher, msg);\n                if (tmpMsg != null){\n                    if(trace)\n                        log.trace(\"decrypted message \" + tmpMsg);\n                    passUp(new Event(Event.MSG, tmpMsg));\n                } else {\n                    log.warn(\"Unrecognised cipher discarding message\");\n                }\n            }\n        } else\n        {\n            // check if we had some sort of encrypt control\n            // header if using supplied key we should not\n            // process it\n            if (suppliedKey)\n            {\n                if (log.isWarnEnabled())\n                {\n                    log.warn(\"We received an encrypt header of \" + hdr.getType() + \" while in configured mode\");\n                }\n            } else{\n                // see what sort of encrypt control message we\n                // have received\n                switch (hdr.getType()){\n                    // if a key request\n                    case EncryptHeader.KEY_REQUEST:\n                        if (log.isInfoEnabled()) {\n                            log.info(\"received a key request from peer\");\n                        }\n\n                        //if a key request send response key back\n                        try {\n                            // extract peer's public key\n                            PublicKey tmpKey = generatePubKey(msg.getBuffer());\n                            // send back the secret key we have\n                            sendSecretKey(getSecretKey(), tmpKey, msg.getSrc());\n                        } catch (Exception e){\n                            log.warn(\"unable to reconstitute peer's public key\");\n                        }\n                        break;\n                    case EncryptHeader.SECRETKEY:\n                        if (log.isInfoEnabled()) {\n                            log.info(\"received a secretkey response from keyserver\");\n                        }\n\n                        try {\n                            SecretKey tmp = decodeKey(msg.getBuffer());\n                            if (tmp == null) {\n                                // unable to understand response\n                                // lets try again\n                                sendKeyRequest();\n                            }else{\n                                // otherwise lets set the reurned key\n                                // as the shared key\n                                setKeys(tmp, hdr.getVersion());\n                                if (log.isInfoEnabled()) {\n                                    log.info(\"Decoded secretkey response\");\n                                }\n                            }\n                        } catch (Exception e){\n                            log.warn(\"unable to process received public key\");\n                        }\n                        break;\n                    default:\n                        log.warn(\"Received ignored encrypt header of \"+hdr.getType());\n                        break;\n                }\n            }\n        }\n    }","commit_id":"e4e09606f1bf4ad1eeee5b98133fa415c5ddc92a","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * @param evt\n     * @throws Exception\n     */\n    private void sendDown(Event evt) throws Exception {\n        if (evt.getType() != Event.MSG) {\n            return;\n        }\n        Message msg = (Message) evt.getArg();\n        EncryptHeader hdr=new EncryptHeader(EncryptHeader.ENCRYPT, getSymVersion());\n        hdr.encrypt_entire_msg=this.encrypt_entire_message;\n\n        if(encrypt_entire_message) {\n            byte[] serialized_msg=Util.streamableToByteBuffer(msg);\n            byte[] encrypted_msg=encryptMessage(symEncodingCipher, serialized_msg);\n            Message tmp=msg.copy(false); // we need to preserve headers which may already be present\n            tmp.setBuffer(encrypted_msg);\n            tmp.setSrc(local_addr);\n            tmp.putHeader(EncryptHeader.KEY, hdr);\n            passDown(new Event(Event.MSG, tmp));\n            return;\n        }\n\n\n        // put our encrypt header on the message\n        msg.putHeader(EncryptHeader.KEY, hdr);\n\n        if (msg.getBuffer() != null) {\n            // copy neeeded because same message (object) may be retransmitted -> no double encryption\n            Message msgEncrypted = msg.copy(false);\n            msgEncrypted.setBuffer(encryptMessage(symEncodingCipher, msg.getBuffer()));\n            passDown(new Event(Event.MSG, msgEncrypted));\n            return;\n        }\n\n        if (trace)\n            log.trace(\"buffer is null not encrypting \");\n\n        passDown(evt);\n    }","id":54353,"modified_method":"/**\n     * @param evt\n     * @throws Exception\n     */\n    private void sendDown(Event evt) throws Exception {\n        if (evt.getType() != Event.MSG) {\n            return;\n        }\n\n        Message msg = (Message) evt.getArg();\n        if(msg.getLength() == 0) {\n            passDown(evt);\n            return;\n        }\n\n        EncryptHeader hdr=new EncryptHeader(EncryptHeader.ENCRYPT, getSymVersion());\n        hdr.encrypt_entire_msg=this.encrypt_entire_message;\n\n        if(encrypt_entire_message) {\n            byte[] serialized_msg=Util.streamableToByteBuffer(msg);\n            byte[] encrypted_msg=encryptMessage(symEncodingCipher, serialized_msg);\n            Message tmp=msg.copy(false); // we need to preserve headers which may already be present\n            tmp.setBuffer(encrypted_msg);\n            tmp.setSrc(local_addr);\n            tmp.putHeader(EncryptHeader.KEY, hdr);\n            passDown(new Event(Event.MSG, tmp));\n            return;\n        }\n\n\n        // put our encrypt header on the message\n        msg.putHeader(EncryptHeader.KEY, hdr);\n\n        // copy neeeded because same message (object) may be retransmitted -> no double encryption\n        Message msgEncrypted = msg.copy(false);\n        msgEncrypted.setBuffer(encryptMessage(symEncodingCipher, msg.getBuffer()));\n        passDown(new Event(Event.MSG, msgEncrypted));\n    }","commit_id":"e4e09606f1bf4ad1eeee5b98133fa415c5ddc92a","url":"https://github.com/belaban/JGroups"},{"original_method":"private static void findTypeParameterExternalUsages(final PsiTypeParameter typeParameter, final Collection<UsageInfo> usages) {\n    PsiTypeParameterListOwner owner = typeParameter.getOwner();\n    if (owner != null) {\n      final int index = owner.getTypeParameterList().getTypeParameterIndex(typeParameter);\n\n      ReferencesSearch.search(owner).forEach(new Processor<PsiReference>() {\n        public boolean process(final PsiReference reference) {\n          if (reference instanceof PsiJavaCodeReferenceElement) {\n            final PsiReferenceParameterList parameterList = ((PsiJavaCodeReferenceElement)reference).getParameterList();\n            if (parameterList != null) {\n              PsiTypeElement[] typeArgs = parameterList.getTypeParameterElements();\n              if (typeArgs.length > index) {\n                usages.add(new SafeDeleteReferenceJavaDeleteUsageInfo(typeArgs[index], typeParameter, true));\n              }\n            }\n          }\n          return true;\n        }\n      });\n    }\n  }","id":54354,"modified_method":"private static void findTypeParameterExternalUsages(final PsiTypeParameter typeParameter, final Collection<UsageInfo> usages) {\n    PsiTypeParameterListOwner owner = typeParameter.getOwner();\n    if (owner != null) {\n      final PsiTypeParameterList parameterList = owner.getTypeParameterList();\n      if (parameterList != null) {\n        final int paramsCount = parameterList.getTypeParameters().length;\n        final int index = parameterList.getTypeParameterIndex(typeParameter);\n\n        ReferencesSearch.search(owner).forEach(new Processor<PsiReference>() {\n          public boolean process(final PsiReference reference) {\n            if (reference instanceof PsiJavaCodeReferenceElement) {\n              final PsiReferenceParameterList parameterList = ((PsiJavaCodeReferenceElement)reference).getParameterList();\n              if (parameterList != null) {\n                PsiTypeElement[] typeArgs = parameterList.getTypeParameterElements();\n                if (typeArgs.length > index) {\n                  if (typeArgs.length == 1 && paramsCount > 1 && typeArgs[0].getType() instanceof PsiDiamondType) return true;\n                  usages.add(new SafeDeleteReferenceJavaDeleteUsageInfo(typeArgs[index], typeParameter, true));\n                }\n              }\n            }\n            return true;\n          }\n        });\n      }\n    }\n  }","commit_id":"b0d0f28f034df02abd3c9d4c488b177ca950bc59","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isMethodApplicable(PsiMethod method, GroovyPsiElement place) {\n    String name = String.valueOf(myMethod.get(\"name\"));\n    if (name == null || !name.equals(method.getName())) return false;\n\n    List<PsiType> types = new ArrayList<PsiType>();\n    final Object params = myMethod.get(\"params\");\n    if (params instanceof Map) {\n      boolean first = true;\n      for (Object paramName : ((Map)params).keySet()) {\n        Object value = ((Map)params).get(paramName);\n        boolean isNamed = first && value instanceof List;\n        first = false;\n        String typeName = isNamed ? CommonClassNames.JAVA_UTIL_MAP : String.valueOf(value);\n        types.add(convertToPsiType(typeName, place));\n      }\n    }\n    else if (params instanceof List) {\n      for (Object param : ((List)params)) {\n        types.add(convertToPsiType(String.valueOf(param), method.getTypeParameterList()));\n      }\n    }\n    final boolean isConstructor = Boolean.TRUE.equals(myMethod.get(\"constructor\"));\n    final MethodSignature signature = MethodSignatureUtil\n      .createMethodSignature(name, types.toArray(new PsiType[types.size()]), method.getTypeParameters(), PsiSubstitutor.EMPTY, isConstructor);\n    final GrClosureSignature closureSignature = GrClosureSignatureUtil.createSignature(signature);\n\n    if (method instanceof ClsMethodImpl) method = ((ClsMethodImpl)method).getSourceMirrorMethod();\n    final PsiParameter[] parameters = method.getParameterList().getParameters();\n    final PsiType[] typeArray = new PsiType[parameters.length];\n    ContainerUtil.map(parameters, new Function<PsiParameter, PsiType>() {\n      @Override\n      public PsiType fun(PsiParameter parameter) {\n        return parameter.getType();\n      }\n    }, typeArray);\n    return GrClosureSignatureUtil.isSignatureApplicable(closureSignature, typeArray, place);\n  }","id":54355,"modified_method":"public boolean isMethodApplicable(PsiMethod method, GroovyPsiElement place) {\n    String name = String.valueOf(myMethod.get(\"name\"));\n    if (name == null || !name.equals(method.getName())) return false;\n\n    List<PsiType> types = new ArrayList<PsiType>();\n    final Object params = myMethod.get(\"params\");\n    if (params instanceof Map) {\n      boolean first = true;\n      for (Object paramName : ((Map)params).keySet()) {\n        Object value = ((Map)params).get(paramName);\n        boolean isNamed = first && value instanceof List;\n        first = false;\n        String typeName = isNamed ? CommonClassNames.JAVA_UTIL_MAP : String.valueOf(value);\n        types.add(convertToPsiType(typeName, place));\n      }\n    }\n    else if (params instanceof List) {\n      for (Object param : ((List)params)) {\n        PsiTypeParameterList typeParameterList = method.getTypeParameterList();\n        types.add(convertToPsiType(String.valueOf(param), typeParameterList != null ? typeParameterList : method));\n      }\n    }\n    final boolean isConstructor = Boolean.TRUE.equals(myMethod.get(\"constructor\"));\n    final MethodSignature signature = MethodSignatureUtil\n      .createMethodSignature(name, types.toArray(new PsiType[types.size()]), method.getTypeParameters(), PsiSubstitutor.EMPTY, isConstructor);\n    final GrClosureSignature closureSignature = GrClosureSignatureUtil.createSignature(signature);\n\n    if (method instanceof ClsMethodImpl) method = ((ClsMethodImpl)method).getSourceMirrorMethod();\n    final PsiParameter[] parameters = method.getParameterList().getParameters();\n    final PsiType[] typeArray = new PsiType[parameters.length];\n    ContainerUtil.map(parameters, new Function<PsiParameter, PsiType>() {\n      @Override\n      public PsiType fun(PsiParameter parameter) {\n        return parameter.getType();\n      }\n    }, typeArray);\n    return GrClosureSignatureUtil.isSignatureApplicable(closureSignature, typeArray, place);\n  }","commit_id":"49daa9930e1c24817a53b043d6256f1f1e30600d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected List<ClosureParameterInfo> getParameterInfos(InsertionContext context,\n                                                         PsiMethod method,\n                                                         PsiSubstitutor substitutor,\n                                                         Document document,\n                                                         int offset,\n                                                         PsiElement parent) {\n\n    final PsiClass aClass = method.getContainingClass();\n    if (aClass == null) return null;\n\n    PsiType type = JavaPsiFacade.getElementFactory(context.getProject()).createType(aClass);\n\n    final ArrayList<ClosureDescriptor> descriptors = new ArrayList<ClosureDescriptor>();\n    GroovyDslFileIndex.processExecutors(type, ((GrReferenceExpression)parent), new BaseScopeProcessor() {\n      @Override\n      public boolean execute(@NotNull PsiElement element, ResolveState state) {\n        if (element instanceof ClosureDescriptor) {\n          descriptors.add((ClosureDescriptor)element);\n        }\n        return true;\n      }\n    }, ResolveState.initial());\n\n    for (ClosureDescriptor descriptor : descriptors) {\n      if (descriptor.isMethodApplicable(method, (GrReferenceExpression)parent)) {\n        return descriptor.getParameters();\n      }\n    }\n    return null;\n  }","id":54356,"modified_method":"@Override\n  protected List<ClosureParameterInfo> getParameterInfos(InsertionContext context,\n                                                         PsiMethod method,\n                                                         PsiSubstitutor substitutor,\n                                                         Document document,\n                                                         int offset,\n                                                         PsiElement place) {\n    final ArrayList<ClosureDescriptor> descriptors = new ArrayList<ClosureDescriptor>();\n    GrReferenceExpression ref = (GrReferenceExpression)place;\n    PsiType qtype = GrReferenceResolveUtil.getQualifierType(ref);\n    if (qtype == null) return null;\n\n    GrExpression qualifier = ref.getQualifier();\n    if (qualifier != null) {\n      PsiType type = qualifier.getType();\n      if (type == null) return null;\n      processExecutors(qtype, ref, descriptors);\n    }\n    else {\n      PsiElementFactory factory = JavaPsiFacade.getElementFactory(context.getProject());\n      for (PsiElement parent = ref.getParent(); parent != null; parent = parent.getParent()) {\n        if (parent instanceof GrClosableBlock) {\n          processExecutors(TypesUtil.createTypeByFQClassName(GroovyCommonClassNames.GROOVY_LANG_CLOSURE, ref), ref, descriptors);\n        }\n        else if (parent instanceof GrTypeDefinition) {\n          processExecutors(factory.createType(((GrTypeDefinition)parent), PsiType.EMPTY_ARRAY), ref, descriptors);\n        }\n      }\n    }\n\n    for (ClosureDescriptor descriptor : descriptors) {\n      if (descriptor.isMethodApplicable(method, ref)) {\n        return descriptor.getParameters();\n      }\n    }\n    return null;\n  }","commit_id":"49daa9930e1c24817a53b043d6256f1f1e30600d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static MethodSignatureBackedByPsiMethod create(PsiMethod method, PsiSubstitutor substitutor) {\n    final boolean isRaw = PsiUtil.isRawSubstitutor(method, substitutor);\n    PsiTypeParameter[] methodTypeParameters = method.getTypeParameterList().getTypeParameters();\n    final PsiParameter[] parameters = method.getParameterList().getParameters();\n    PsiType[] parameterTypes = new PsiType[parameters.length];\n    for (int i = 0; i < parameterTypes.length; i++) {\n      parameterTypes[i] = parameters[i].getType();\n    }\n\n    if (isRaw) {\n      for (int i = 0; i < methodTypeParameters.length; i++) {\n        substitutor = substitutor.put(methodTypeParameters[i], null);\n      }\n      methodTypeParameters = PsiTypeParameter.EMPTY_ARRAY;\n\n      for (int i = 0; i < parameterTypes.length; i++) {\n        parameterTypes[i] = TypeConversionUtil.erasure(parameterTypes[i]);\n      }\n    }\n    return new MethodSignatureBackedByPsiMethod(method, substitutor, isRaw, parameterTypes, methodTypeParameters);\n  }","id":54357,"modified_method":"public static MethodSignatureBackedByPsiMethod create(PsiMethod method, PsiSubstitutor substitutor) {\n    final boolean isRaw = PsiUtil.isRawSubstitutor(method, substitutor);\n    final PsiTypeParameterList typeParameterList = method.getTypeParameterList();\n    PsiTypeParameter[] methodTypeParameters = typeParameterList != null ? typeParameterList.getTypeParameters() : PsiTypeParameter.EMPTY_ARRAY;\n    final PsiParameter[] parameters = method.getParameterList().getParameters();\n    PsiType[] parameterTypes = new PsiType[parameters.length];\n    for (int i = 0; i < parameterTypes.length; i++) {\n      parameterTypes[i] = parameters[i].getType();\n    }\n\n    if (isRaw) {\n      for (int i = 0; i < methodTypeParameters.length; i++) {\n        substitutor = substitutor.put(methodTypeParameters[i], null);\n      }\n      methodTypeParameters = PsiTypeParameter.EMPTY_ARRAY;\n\n      for (int i = 0; i < parameterTypes.length; i++) {\n        parameterTypes[i] = TypeConversionUtil.erasure(parameterTypes[i]);\n      }\n    }\n    return new MethodSignatureBackedByPsiMethod(method, substitutor, isRaw, parameterTypes, methodTypeParameters);\n  }","commit_id":"1ef0f0d6e88400f960ce75ad1e587ca72a3e7f22","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean satisfiedBy(PsiElement element){\n        if(!(element instanceof PsiExpression)){\n            return false;\n        }\n        if(ErrorUtil.containsError(element)){\n            return false;\n        }\n        final PsiExpression expression = (PsiExpression) element;\n\n        if(element instanceof PsiLiteralExpression ||\n                element instanceof PsiClassObjectAccessExpression){\n            return false;\n        }\n        if(!PsiUtil.isConstantExpression(expression)){\n            return false;\n        }\n        final PsiManager manager= element.getManager();\n        final PsiConstantEvaluationHelper helper =\n                manager.getConstantEvaluationHelper();\n        final Object value = helper.computeConstantExpression(expression);\n        if(value == null)\n        {\n            return false;\n        }\n        final PsiElement parent = element.getParent();\n        if(!(parent instanceof PsiExpression)){\n            return true;\n        }\n        return !PsiUtil.isConstantExpression((PsiExpression) parent);\n    }","id":54358,"modified_method":"public boolean satisfiedBy(PsiElement element){\n        if(!(element instanceof PsiExpression)){\n            return false;\n        }\n\t    // should be unneeded, disabled for performance\n        //if(ErrorUtil.containsError(element)){\n        //    return false;\n        //}\n        if(element instanceof PsiLiteralExpression ||\n                element instanceof PsiClassObjectAccessExpression){\n\t        return false;\n        }\n\t    final PsiExpression expression = (PsiExpression) element;\n\t    final PsiType type = expression.getType();\n\t    if (type == null || type.equalsToText(\"java.lang.String\")){\n\t\t    return false;\n\t    }\n        if(!PsiUtil.isConstantExpression(expression)){\n            return false;\n        }\n        final PsiManager manager= element.getManager();\n        final PsiConstantEvaluationHelper helper =\n                manager.getConstantEvaluationHelper();\n        final Object value = helper.computeConstantExpression(expression);\n        if(value == null){\n\t        return false;\n        }\n        final PsiElement parent = element.getParent();\n\t    return !(parent instanceof PsiExpression &&\n\t\t\t    PsiUtil.isConstantExpression((PsiExpression)parent));\n    }","commit_id":"b97cfdae7dcf5b06e1d419911b937ecc05d39def","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean satisfiedBy(PsiElement element) {\n    if (!(element instanceof PsiBinaryExpression)) {\n      return false;\n    }\n    if (element instanceof PsiLiteralExpression ||\n        element instanceof PsiClassObjectAccessExpression) {\n      return false;\n    }\n    final PsiBinaryExpression expression = (PsiBinaryExpression)element;\n    final PsiExpression rhs = expression.getROperand();\n    if (rhs == null) {\n      return false;\n    }\n    final PsiType type = rhs.getType();\n    if (type == null || type.equalsToText(\"java.lang.String\")) {\n      return false;\n    }\n    if (!PsiUtil.isConstantExpression(expression)) {\n      return false;\n    }\n    try {\n      final Object value =\n        ExpressionUtils.computeConstantExpression(expression, true);\n      if (value == null) {\n        return false;\n      }\n    }\n    catch (ConstantEvaluationOverflowException ignore) {\n      return false;\n    }\n    final PsiElement parent = element.getParent();\n    return !(parent instanceof PsiExpression &&\n             PsiUtil.isConstantExpression((PsiExpression)parent));\n  }","id":54359,"modified_method":"public boolean satisfiedBy(PsiElement element) {\n    if (!(element instanceof PsiPolyadicExpression)) {\n      return false;\n    }\n    if (element instanceof PsiLiteralExpression || element instanceof PsiClassObjectAccessExpression) {\n      return false;\n    }\n    final PsiPolyadicExpression expression = (PsiPolyadicExpression)element;\n    final PsiType expressionType = expression.getType();\n    if (expressionType.equalsToText(\"java.lang.String\")) {\n      // intention disabled for string concatenations because of performance issues on\n      // relatively common large string expressions.\n      return false;\n    }\n    final PsiExpression[] operands = expression.getOperands();\n    for (PsiExpression operand : operands) {\n      if (operand == null) {\n        return false;\n      }\n      final PsiType type = operand.getType();\n      if (type == null || type.equalsToText(\"java.lang.String\")) {\n        return false;\n      }\n    }\n    if (!PsiUtil.isConstantExpression(expression)) {\n      return false;\n    }\n    try {\n      final Object value = ExpressionUtils.computeConstantExpression(expression, true);\n      if (value == null) {\n        return false;\n      }\n    }\n    catch (ConstantEvaluationOverflowException ignore) {\n      return false;\n    }\n    final PsiElement parent = element.getParent();\n    return !(parent instanceof PsiExpression) || !PsiUtil.isConstantExpression((PsiExpression)parent);\n  }","commit_id":"9886c29eade39f5766ddd2defa83eb3c0f9bebf7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void processIntention(@NotNull PsiElement element)\n    throws IncorrectOperationException {\n    final PsiExpression expression = (PsiExpression)element.getParent();\n    assert expression != null;\n    String newExpression = \"\";\n    final Object constantValue;\n    if (expression instanceof PsiBinaryExpression) {\n      final PsiBinaryExpression copy =\n        (PsiBinaryExpression)expression.copy();\n      final PsiExpression lhs = copy.getLOperand();\n      if (lhs instanceof PsiBinaryExpression) {\n        final PsiBinaryExpression lhsBinaryExpression =\n          (PsiBinaryExpression)lhs;\n        newExpression += getLeftSideText(lhsBinaryExpression);\n        final PsiExpression rightSide =\n          lhsBinaryExpression.getROperand();\n        assert rightSide != null;\n        lhs.replace(rightSide);\n      }\n      if (ConcatenationUtils.isConcatenation(expression)) {\n        constantValue = computeConstantStringExpression(copy);\n      }\n      else {\n        constantValue =\n          ExpressionUtils.computeConstantExpression(copy);\n      }\n    }\n    else {\n      constantValue =\n        ExpressionUtils.computeConstantExpression(expression);\n    }\n    if (constantValue instanceof String) {\n      newExpression += '\"' + StringUtil.escapeStringCharacters(\n        constantValue.toString()) + '\"';\n    }\n    else if (constantValue != null) {\n      if (constantValue instanceof Number) {\n        final Number number = (Number)constantValue;\n        if (0 > number.doubleValue()) {\n          newExpression += \" \";\n        }\n      }\n      newExpression += constantValue.toString();\n    }\n    replaceExpression(newExpression, expression);\n  }","id":54360,"modified_method":"@Override\n  public void processIntention(@NotNull PsiElement element) throws IncorrectOperationException {\n    final PsiJavaToken token;\n    if (element instanceof PsiJavaToken) {\n      token = (PsiJavaToken)element;\n    } else {\n      final PsiElement prevSibling = element.getPrevSibling();\n      if (prevSibling instanceof PsiJavaToken) {\n        token = (PsiJavaToken)prevSibling;\n      } else {\n        throw new AssertionError();\n      }\n    }\n    final PsiPolyadicExpression polyadicExpression = (PsiPolyadicExpression)element.getParent();\n    final PsiPolyadicExpression subexpression = ConstantSubexpressionPredicate.getSubexpression(polyadicExpression, token);\n    final Object value = ExpressionUtils.computeConstantExpression(subexpression);\n    final StringBuilder newExpressionText = new StringBuilder();\n    final PsiExpression[] operands = polyadicExpression.getOperands();\n    PsiExpression prevOperand = null;\n    PsiJavaToken prevToken = null;\n    for (PsiExpression operand : operands) {\n      final PsiJavaToken currentToken = polyadicExpression.getTokenBeforeOperand(operand);\n      if (token == currentToken) {\n        if (prevToken != null) {\n          newExpressionText.append(prevToken.getText());\n        }\n        if (newExpressionText.length() > 0) {\n          newExpressionText.append(' ');\n        }\n        if (value instanceof Long) {\n          newExpressionText.append(value).append('L');\n        } else if (value instanceof Double) {\n          final double v = ((Double)value).doubleValue();\n          if (Double.isNaN(v)) {\n            newExpressionText.append(\"java.lang.Double.NaN\");\n          }\n          else if (Double.isInfinite(v)) {\n            if (v > 0.0) {\n              newExpressionText.append(\"java.lang.Double.POSITIVE_INFINITY\");\n            }\n            else {\n              newExpressionText.append(\"java.lang.Double.NEGATIVE_INFINITY\");\n            }\n          }\n          else {\n            newExpressionText.append(Double.toString(v));\n          }\n        }\n        else if (value instanceof Float) {\n          final float v = ((Float)value).floatValue();\n          if (Float.isNaN(v)) {\n            newExpressionText.append(\"java.lang.Float.NaN\");\n          }\n          else if (Float.isInfinite(v)) {\n            if (v > 0.0F) {\n              newExpressionText.append(\"java.lang.Float.POSITIVE_INFINITY\");\n            }\n            else {\n              newExpressionText.append(\"java.lang.Float.NEGATIVE_INFINITY\");\n            }\n          }\n          else {\n            newExpressionText.append(Float.toString(v)).append('f');\n          }\n        } else {\n          newExpressionText.append(value);\n        }\n        prevOperand = null;\n        prevToken = null;\n      } else {\n        if (prevToken != null) {\n          newExpressionText.append(prevToken.getText());\n        }\n        if (prevOperand != null) {\n          newExpressionText.append(prevOperand.getText());\n        }\n        prevOperand = operand;\n        prevToken = currentToken;\n      }\n    }\n    if (prevToken != null) {\n      newExpressionText.append(prevToken.getText());\n    }\n    if (prevOperand != null) {\n      newExpressionText.append(prevOperand.getText());\n    }\n    replaceExpression(newExpressionText.toString(), polyadicExpression);\n  }","commit_id":"9886c29eade39f5766ddd2defa83eb3c0f9bebf7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected String getTextForElement(PsiElement element) {\n    final PsiBinaryExpression binaryExpression =\n      (PsiBinaryExpression)element.getParent();\n    assert binaryExpression != null;\n    final PsiExpression lhs = binaryExpression.getLOperand();\n    final PsiExpression leftSide;\n    if (lhs instanceof PsiBinaryExpression) {\n      final PsiBinaryExpression lhsBinaryExpression =\n        (PsiBinaryExpression)lhs;\n      leftSide = lhsBinaryExpression.getROperand();\n    }\n    else {\n      leftSide = lhs;\n    }\n    final PsiJavaToken operationSign = binaryExpression.getOperationSign();\n    final PsiExpression rhs = binaryExpression.getROperand();\n    assert rhs != null;\n    assert leftSide != null;\n    return IntentionPowerPackBundle.message(\n      \"constant.subexpression.intention.name\", leftSide.getText() +\n                                               ' ' + operationSign.getText() + ' ' + rhs.getText());\n  }","id":54361,"modified_method":"@Override\n  protected String getTextForElement(PsiElement element) {\n    final PsiJavaToken token;\n    if (element instanceof PsiJavaToken) {\n      token = (PsiJavaToken)element;\n    } else {\n      final PsiElement prevSibling = element.getPrevSibling();\n      if (prevSibling instanceof PsiJavaToken) {\n        token = (PsiJavaToken)prevSibling;\n      } else {\n        throw new AssertionError();\n      }\n    }\n    final PsiPolyadicExpression polyadicExpression = (PsiPolyadicExpression)element.getParent();\n    final PsiPolyadicExpression subexpression = ConstantSubexpressionPredicate.getSubexpression(polyadicExpression, token);\n    final String text = HighlightUtil.getPresentableText(subexpression);\n    return IntentionPowerPackBundle.message(\"constant.expression.intention.name\", text);\n  }","commit_id":"9886c29eade39f5766ddd2defa83eb3c0f9bebf7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean satisfiedBy(PsiElement element) {\n    if (!(element instanceof PsiJavaToken) &&\n        !(element.getPrevSibling() instanceof PsiJavaToken)) {\n      return false;\n    }\n    final PsiElement parent = element.getParent();\n    if (!(parent instanceof PsiBinaryExpression)) {\n      return false;\n    }\n    final PsiBinaryExpression binaryExpression =\n      (PsiBinaryExpression)parent;\n    final PsiType type = binaryExpression.getType();\n    if (type == null || type.equalsToText(\"java.lang.String\")) {\n      // handled by JoinConcatenatedStringLiteralsIntention\n      return false;\n    }\n    final PsiBinaryExpression subexpression =\n      getSubexpression(binaryExpression);\n    if (subexpression == null) {\n      return false;\n    }\n    if (binaryExpression.equals(subexpression) &&\n        !isPartOfConstantExpression(binaryExpression)) {\n      // handled by ConstantExpressonIntention\n      return false;\n    }\n    if (!PsiUtil.isConstantExpression(subexpression)) {\n      return false;\n    }\n    final Object value =\n      ExpressionUtils.computeConstantExpression(subexpression);\n    return value != null;\n  }","id":54362,"modified_method":"public boolean satisfiedBy(PsiElement element) {\n    final PsiJavaToken token;\n    if (element instanceof PsiJavaToken) {\n      token = (PsiJavaToken)element;\n    }\n    else {\n      final PsiElement prevSibling = element.getPrevSibling();\n      if (prevSibling instanceof PsiJavaToken) {\n        token = (PsiJavaToken)prevSibling;\n      }\n      else {\n        return false;\n      }\n    }\n\n    final PsiElement parent = element.getParent();\n    if (!(parent instanceof PsiPolyadicExpression)) {\n      return false;\n    }\n    final PsiPolyadicExpression polyadicExpression = (PsiPolyadicExpression)parent;\n    final PsiType type = polyadicExpression.getType();\n    if (type == null || type.equalsToText(\"java.lang.String\")) {\n      // handled by JoinConcatenatedStringLiteralsIntention\n      return false;\n    }\n    final PsiPolyadicExpression subexpression = getSubexpression(polyadicExpression, token);\n    if (subexpression == null) {\n      return false;\n    }\n    if (!isPartOfLargerExpression(polyadicExpression)) {\n      // handled by ConstantExpressionIntention\n      return false;\n    }\n    if (!PsiUtil.isConstantExpression(subexpression)) {\n      return false;\n    }\n    final Object value = ExpressionUtils.computeConstantExpression(subexpression);\n    return value != null;\n  }","commit_id":"9886c29eade39f5766ddd2defa83eb3c0f9bebf7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void highlightElements(\n    @NotNull final Collection<? extends PsiElement> elementCollection,\n    @NotNull final String statusBarText) {\n    if (elementCollection.isEmpty()) {\n      return;\n    }\n    final Application application = ApplicationManager.getApplication();\n    application.invokeLater(new Runnable() {\n      public void run() {\n        final PsiElement[] elements =\n          PsiUtilBase.toPsiElementArray(elementCollection);\n        final PsiElement firstElement = elements[0];\n        if (!firstElement.isValid()) {\n          return;\n        }\n        final Project project = firstElement.getProject();\n        final FileEditorManager editorManager =\n          FileEditorManager.getInstance(project);\n        final EditorColorsManager editorColorsManager =\n          EditorColorsManager.getInstance();\n        final Editor editor = editorManager.getSelectedTextEditor();\n        if (editor == null) {\n          return;\n        }\n        final EditorColorsScheme globalScheme =\n          editorColorsManager.getGlobalScheme();\n        final TextAttributes textattributes =\n          globalScheme.getAttributes(\n            EditorColors.SEARCH_RESULT_ATTRIBUTES);\n        final HighlightManager highlightManager =\n          HighlightManager.getInstance(project);\n        highlightManager.addOccurrenceHighlights(\n          editor, elements, textattributes, true, null);\n        final FindManager findmanager =\n          FindManager.getInstance(project);\n        FindModel findmodel = findmanager.getFindNextModel();\n        if (findmodel == null) {\n          findmodel = findmanager.getFindInFileModel();\n        }\n        findmodel.setSearchHighlighters(true);\n        findmanager.setFindWasPerformed();\n        findmanager.setFindNextModel(findmodel);\n        application.invokeLater(new Runnable() {\n          public void run() {\n            final WindowManager windowManager =\n              WindowManager.getInstance();\n            final StatusBar statusBar =\n              windowManager.getStatusBar(project);\n            statusBar.setInfo(statusBarText);\n          }\n        });\n      }\n    });\n  }","id":54363,"modified_method":"public static void highlightElements(\n    @NotNull final Collection<? extends PsiElement> elementCollection,\n    @NotNull final String statusBarText) {\n    if (elementCollection.isEmpty()) {\n      return;\n    }\n    final Application application = ApplicationManager.getApplication();\n    application.invokeLater(new Runnable() {\n      public void run() {\n        final PsiElement[] elements = PsiUtilCore.toPsiElementArray(elementCollection);\n        final PsiElement firstElement = elements[0];\n        if (!firstElement.isValid()) {\n          return;\n        }\n        final Project project = firstElement.getProject();\n        final FileEditorManager editorManager = FileEditorManager.getInstance(project);\n        final EditorColorsManager editorColorsManager = EditorColorsManager.getInstance();\n        final Editor editor = editorManager.getSelectedTextEditor();\n        if (editor == null) {\n          return;\n        }\n        final EditorColorsScheme globalScheme = editorColorsManager.getGlobalScheme();\n        final TextAttributes textattributes = globalScheme.getAttributes(\n            EditorColors.SEARCH_RESULT_ATTRIBUTES);\n        final HighlightManager highlightManager = HighlightManager.getInstance(project);\n        highlightManager.addOccurrenceHighlights(editor, elements, textattributes, true, null);\n        final FindManager findmanager = FindManager.getInstance(project);\n        FindModel findmodel = findmanager.getFindNextModel();\n        if (findmodel == null) {\n          findmodel = findmanager.getFindInFileModel();\n        }\n        findmodel.setSearchHighlighters(true);\n        findmanager.setFindWasPerformed();\n        findmanager.setFindNextModel(findmodel);\n        application.invokeLater(new Runnable() {\n          public void run() {\n            final WindowManager windowManager = WindowManager.getInstance();\n            final StatusBar statusBar = windowManager.getStatusBar(project);\n            if (statusBar != null) {\n              statusBar.setInfo(statusBarText);\n            }\n          }\n        });\n      }\n    });\n  }","commit_id":"9886c29eade39f5766ddd2defa83eb3c0f9bebf7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean satisfiedBy(PsiElement element){\n        if(!(element instanceof PsiExpression)){\n            return false;\n        }\n        if(ErrorUtil.containsError(element)){\n            return false;\n        }\n\n        if(element instanceof PsiLiteralExpression ||\n                element instanceof PsiClassObjectAccessExpression){\n            return false;\n        }\n        if(!PsiUtil.isConstantExpression((PsiExpression) element)){\n            return false;\n        }\n        final PsiElement parent = element.getParent();\n        if(!(parent instanceof PsiExpression)){\n            return true;\n        }\n        return !PsiUtil.isConstantExpression((PsiExpression) parent);\n    }","id":54364,"modified_method":"public boolean satisfiedBy(PsiElement element){\n        if(!(element instanceof PsiExpression)){\n            return false;\n        }\n        if(ErrorUtil.containsError(element)){\n            return false;\n        }\n        final PsiExpression expression = (PsiExpression) element;\n\n        if(element instanceof PsiLiteralExpression ||\n                element instanceof PsiClassObjectAccessExpression){\n            return false;\n        }\n        if(!PsiUtil.isConstantExpression(expression)){\n            return false;\n        }\n        final PsiManager manager= element.getManager();\n        final PsiConstantEvaluationHelper helper =\n                manager.getConstantEvaluationHelper();\n        final Object value = helper.computeConstantExpression(expression);\n        if(value == null)\n        {\n            return false;\n        }\n        final PsiElement parent = element.getParent();\n        if(!(parent instanceof PsiExpression)){\n            return true;\n        }\n        return !PsiUtil.isConstantExpression((PsiExpression) parent);\n    }","commit_id":"aa6cbf5f4447b8c549210ec41a9ddf65dd456a91","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean satisfiedBy(PsiElement element){\n        if(!(element instanceof PsiJavaToken) &&\n                !(element.getPrevSibling() instanceof PsiJavaToken)){\n            return false;\n        }\n        final PsiElement parent = element.getParent();\n        if(!(parent instanceof PsiBinaryExpression)){\n            return false;\n        }\n        final PsiBinaryExpression binaryExpression = (PsiBinaryExpression) parent;\n        final PsiBinaryExpression subexpression = getSubexpression(binaryExpression);\n\n        if(binaryExpression.equals(subexpression) &&\n                !isPartOfConstantExpression(binaryExpression)){\n            // handled by ConstantExpressonIntention\n            return false;\n        }\n        final PsiType type = binaryExpression.getType();\n        if(type == null || type.equalsToText(\"java.lang.String\")){\n            // handled by JoinConcatenatedStringLiteralsIntention\n            return false;\n        }\n        return PsiUtil.isConstantExpression(subexpression);\n    }","id":54365,"modified_method":"public boolean satisfiedBy(PsiElement element){\n        if(!(element instanceof PsiJavaToken) &&\n                !(element.getPrevSibling() instanceof PsiJavaToken)){\n            return false;\n        }\n        final PsiElement parent = element.getParent();\n        if(!(parent instanceof PsiBinaryExpression)){\n            return false;\n        }\n        final PsiBinaryExpression binaryExpression = (PsiBinaryExpression) parent;\n        final PsiBinaryExpression subexpression = getSubexpression(binaryExpression);\n        if(subexpression == null)\n        {\n            return false;\n        }\n        if(binaryExpression.equals(subexpression) &&\n                !isPartOfConstantExpression(binaryExpression)){\n            // handled by ConstantExpressonIntention\n            return false;\n        }\n        final PsiType type = binaryExpression.getType();\n        if(type == null || type.equalsToText(\"java.lang.String\")){\n            // handled by JoinConcatenatedStringLiteralsIntention\n            return false;\n        }\n        if(!PsiUtil.isConstantExpression(subexpression)){\n            return false;\n        }\n        final PsiManager manager = element.getManager();\n        final PsiConstantEvaluationHelper helper =\n                manager.getConstantEvaluationHelper();\n        final Object value = helper.computeConstantExpression(subexpression);\n        return value != null;\n    }","commit_id":"aa6cbf5f4447b8c549210ec41a9ddf65dd456a91","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Returns the smallest subexpression (if precendence allows it). example:\n     * variable + 2 + 3 normally gets evaluated left to right -> (variable + 2)\n     * + 3 this method returns the right most legal subexpression -> 2 + 3\n     */\n    @Nullable\n    private static PsiBinaryExpression getSubexpression(PsiBinaryExpression expression){\n        final PsiBinaryExpression binaryExpression = (PsiBinaryExpression) expression.copy();\n        final PsiExpression rhs = binaryExpression.getROperand();\n        if(rhs == null){\n            return null;\n        }\n        final PsiExpression lhs = binaryExpression.getLOperand();\n        if(!(lhs instanceof PsiBinaryExpression)){\n            return expression;\n        }\n        final PsiBinaryExpression lhsBinaryExpression = (PsiBinaryExpression) lhs;\n        final PsiExpression leftSide = lhsBinaryExpression.getROperand();\n        try{\n            lhs.replace(leftSide);\n        } catch(IncorrectOperationException e){\n            throw new RuntimeException(e);\n        }\n        return binaryExpression;\n    }","id":54366,"modified_method":"/**\n     * Returns the smallest subexpression (if precendence allows it). example:\n     * variable + 2 + 3 normally gets evaluated left to right -> (variable + 2)\n     * + 3 this method returns the right most legal subexpression -> 2 + 3\n     */\n    @Nullable\n    private static PsiBinaryExpression getSubexpression(PsiBinaryExpression expression){\n        final PsiBinaryExpression binaryExpression = (PsiBinaryExpression) expression.copy();\n        final PsiExpression rhs = binaryExpression.getROperand();\n        if(rhs == null){\n            return null;\n        }\n        final PsiExpression lhs = binaryExpression.getLOperand();\n        if(!(lhs instanceof PsiBinaryExpression)){\n            return expression;\n        }\n        final PsiBinaryExpression lhsBinaryExpression = (PsiBinaryExpression) lhs;\n        final PsiExpression leftSide = lhsBinaryExpression.getROperand();\n        if(leftSide == null)\n        {\n           return null;\n        }\n        try{\n            lhs.replace(leftSide);\n        } catch(IncorrectOperationException ignore){\n            return null;\n        }\n        return binaryExpression;\n    }","commit_id":"aa6cbf5f4447b8c549210ec41a9ddf65dd456a91","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void start() {\n    LogAppenderInitializer logAppenderInitializer = baseInjector.getInstance(LogAppenderInitializer.class);\n    logAppenderInitializer.initialize();\n\n    Services.chainStart(zkClientService, kafkaClientService, metricsCollectionService);\n    serviceStore = baseInjector.getInstance(ServiceStore.class);\n    leaderElection = new LeaderElection(zkClientService, \"/election/\" + serviceName, new ElectionHandler() {\n      @Override\n      public void leader() {\n        Map<String, Integer> instanceCount = getSystemServiceInstances();\n        twillApplication = createTwillApplication(instanceCount);\n        if (twillApplication == null) {\n          throw new IllegalArgumentException(\"TwillApplication cannot be null\");\n        }\n\n        LOG.info(\"Became leader\");\n        Injector injector = baseInjector.createChildInjector();\n\n        twillRunnerService = injector.getInstance(TwillRunnerService.class);\n        twillRunnerService.startAndWait();\n        // app fabric uses twillRunnerService for reporting some AM container metrics and getting live-info for apps,\n        // make sure its started after twill runner is started.\n        appFabricServer = injector.getInstance(AppFabricServer.class);\n        appFabricServer.startAndWait();\n        scheduleSecureStoreUpdate(twillRunnerService);\n        runTwillApps();\n        isLeader.set(true);\n      }\n\n      @Override\n      public void follower() {\n        LOG.info(\"Became follower\");\n\n        dsService.stopAndWait();\n        if (twillRunnerService != null) {\n          twillRunnerService.stopAndWait();\n        }\n        if (appFabricServer != null) {\n          appFabricServer.stopAndWait();\n        }\n        isLeader.set(false);\n      }\n    });\n    leaderElection.start();\n  }","id":54367,"modified_method":"@Override\n  public void start() {\n    LogAppenderInitializer logAppenderInitializer = baseInjector.getInstance(LogAppenderInitializer.class);\n    logAppenderInitializer.initialize();\n\n    Futures.getUnchecked(Services.chainStart(zkClientService, kafkaClientService, metricsCollectionService));\n    serviceStore = baseInjector.getInstance(ServiceStore.class);\n    leaderElection = new LeaderElection(zkClientService, \"/election/\" + serviceName, new ElectionHandler() {\n      @Override\n      public void leader() {\n        Map<String, Integer> instanceCount = getSystemServiceInstances();\n        twillApplication = createTwillApplication(instanceCount);\n        if (twillApplication == null) {\n          throw new IllegalArgumentException(\"TwillApplication cannot be null\");\n        }\n\n        LOG.info(\"Became leader\");\n        Injector injector = baseInjector.createChildInjector();\n\n        twillRunnerService = injector.getInstance(TwillRunnerService.class);\n        twillRunnerService.startAndWait();\n        // app fabric uses twillRunnerService for reporting some AM container metrics and getting live-info for apps,\n        // make sure its started after twill runner is started.\n        appFabricServer = injector.getInstance(AppFabricServer.class);\n        appFabricServer.startAndWait();\n        scheduleSecureStoreUpdate(twillRunnerService);\n        runTwillApps();\n        isLeader.set(true);\n      }\n\n      @Override\n      public void follower() {\n        LOG.info(\"Became follower\");\n\n        dsService.stopAndWait();\n        if (twillRunnerService != null) {\n          twillRunnerService.stopAndWait();\n        }\n        if (appFabricServer != null) {\n          appFabricServer.stopAndWait();\n        }\n        isLeader.set(false);\n      }\n    });\n    leaderElection.start();\n  }","commit_id":"a542525e34565c061b68c722c7a8a2f54a2eee1c","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void run() {\n    runThread = Thread.currentThread();\n\n    LOG.info(\"Starting runnable {}\", name);\n    SettableFuture<String> completionFuture = SettableFuture.create();\n    for (Service service : services) {\n      service.addListener(createServiceListener(service.getClass().getName(), completionFuture),\n          Threads.SAME_THREAD_EXECUTOR);\n    }\n\n    Services.chainStart(services.get(0), services.subList(1, services.size()).toArray(new Service[0]));\n    LOG.info(\"Runnable started {}\", name);\n\n\n    try {\n      // exit as soon as any service completes\n      completionFuture.get();\n    } catch (InterruptedException e) {\n      LOG.debug(\"Waiting on latch interrupted {}\", name);\n      Thread.currentThread().interrupt();\n    } catch (ExecutionException e) {\n      throw Throwables.propagate(e.getCause());\n    }\n\n    List<Service> reverse = Lists.reverse(services);\n    Services.chainStop(reverse.get(0), reverse.subList(1, reverse.size()).toArray(new Service[0]));\n\n    LOG.info(\"Runnable stopped {}\", name);\n  }","id":54368,"modified_method":"@Override\n  public void run() {\n    runThread = Thread.currentThread();\n\n    LOG.info(\"Starting runnable {}\", name);\n    SettableFuture<String> completionFuture = SettableFuture.create();\n    for (Service service : services) {\n      service.addListener(createServiceListener(service.getClass().getName(), completionFuture),\n          Threads.SAME_THREAD_EXECUTOR);\n    }\n\n    Futures.getUnchecked(\n      Services.chainStart(services.get(0), services.subList(1, services.size()).toArray(new Service[0])));\n\n    LOG.info(\"Runnable started {}\", name);\n\n\n    try {\n      // exit as soon as any service completes\n      completionFuture.get();\n    } catch (InterruptedException e) {\n      LOG.debug(\"Waiting on latch interrupted {}\", name);\n      Thread.currentThread().interrupt();\n    } catch (ExecutionException e) {\n      throw Throwables.propagate(e.getCause());\n    }\n\n    List<Service> reverse = Lists.reverse(services);\n    Futures.getUnchecked(\n      Services.chainStop(reverse.get(0), reverse.subList(1, reverse.size()).toArray(new Service[0])));\n\n    LOG.info(\"Runnable stopped {}\", name);\n  }","commit_id":"4762d1dafbb3f5bc546abddb2c8c7a1f1bdcca34","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void stop() {\n    LOG.info(\"Stopping {}\", serviceName);\n    stopFlag = true;\n\n    dsService.stopAndWait();\n    if (isLeader.get() && twillController != null) {\n      twillController.stopAndWait();\n    }\n\n    if (leaderElection != null) {\n      leaderElection.stopAndWait();\n    }\n    Services.chainStop(serviceStore, metricsCollectionService, kafkaClientService, zkClientService);\n\n    try {\n      exploreClient.close();\n    } catch (IOException e) {\n      LOG.error(\"Could not close Explore client\", e);\n      throw Throwables.propagate(e);\n    }\n  }","id":54369,"modified_method":"@Override\n  public void stop() {\n    LOG.info(\"Stopping {}\", serviceName);\n    stopFlag = true;\n\n    dsService.stopAndWait();\n    if (isLeader.get() && twillController != null) {\n      twillController.stopAndWait();\n    }\n\n    if (leaderElection != null) {\n      leaderElection.stopAndWait();\n    }\n    Futures.getUnchecked(Services.chainStop(serviceStore, metricsCollectionService, kafkaClientService,\n                                            zkClientService));\n\n    try {\n      exploreClient.close();\n    } catch (IOException e) {\n      LOG.error(\"Could not close Explore client\", e);\n      throw Throwables.propagate(e);\n    }\n  }","commit_id":"0c66c1f29242260435ad22fd23f742c962f8637f","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void start() {\n    LogAppenderInitializer logAppenderInitializer = baseInjector.getInstance(LogAppenderInitializer.class);\n    logAppenderInitializer.initialize();\n\n    Services.chainStart(zkClientService, kafkaClientService, metricsCollectionService, serviceStore);\n    leaderElection = new LeaderElection(zkClientService, \"/election/\" + serviceName, new ElectionHandler() {\n      @Override\n      public void leader() {\n        Map<String, Integer> instanceCount = getSystemServiceInstances();\n        twillApplication = createTwillApplication(instanceCount);\n        if (twillApplication == null) {\n          throw new IllegalArgumentException(\"TwillApplication cannot be null\");\n        }\n\n        LOG.info(\"Became leader\");\n        Injector injector = baseInjector.createChildInjector();\n\n        twillRunnerService = injector.getInstance(TwillRunnerService.class);\n        twillRunnerService.startAndWait();\n        // app fabric uses twillRunnerService for reporting some AM container metrics and getting live-info for apps,\n        // make sure its started after twill runner is started.\n        appFabricServer = injector.getInstance(AppFabricServer.class);\n        appFabricServer.startAndWait();\n        scheduleSecureStoreUpdate(twillRunnerService);\n        runTwillApps();\n        isLeader.set(true);\n      }\n\n      @Override\n      public void follower() {\n        LOG.info(\"Became follower\");\n\n        dsService.stopAndWait();\n        if (twillRunnerService != null) {\n          twillRunnerService.stopAndWait();\n        }\n        if (appFabricServer != null) {\n          appFabricServer.stopAndWait();\n        }\n        isLeader.set(false);\n      }\n    });\n    leaderElection.start();\n  }","id":54370,"modified_method":"@Override\n  public void start() {\n    LogAppenderInitializer logAppenderInitializer = baseInjector.getInstance(LogAppenderInitializer.class);\n    logAppenderInitializer.initialize();\n\n    Futures.getUnchecked(Services.chainStart(zkClientService, kafkaClientService, metricsCollectionService,\n                                             serviceStore));\n    leaderElection = new LeaderElection(zkClientService, \"/election/\" + serviceName, new ElectionHandler() {\n      @Override\n      public void leader() {\n        Map<String, Integer> instanceCount = getSystemServiceInstances();\n        twillApplication = createTwillApplication(instanceCount);\n        if (twillApplication == null) {\n          throw new IllegalArgumentException(\"TwillApplication cannot be null\");\n        }\n\n        LOG.info(\"Became leader\");\n        Injector injector = baseInjector.createChildInjector();\n\n        twillRunnerService = injector.getInstance(TwillRunnerService.class);\n        twillRunnerService.startAndWait();\n        // app fabric uses twillRunnerService for reporting some AM container metrics and getting live-info for apps,\n        // make sure its started after twill runner is started.\n        appFabricServer = injector.getInstance(AppFabricServer.class);\n        appFabricServer.startAndWait();\n        scheduleSecureStoreUpdate(twillRunnerService);\n        runTwillApps();\n        isLeader.set(true);\n      }\n\n      @Override\n      public void follower() {\n        LOG.info(\"Became follower\");\n\n        dsService.stopAndWait();\n        if (twillRunnerService != null) {\n          twillRunnerService.stopAndWait();\n        }\n        if (appFabricServer != null) {\n          appFabricServer.stopAndWait();\n        }\n        isLeader.set(false);\n      }\n    });\n    leaderElection.start();\n  }","commit_id":"0c66c1f29242260435ad22fd23f742c962f8637f","url":"https://github.com/caskdata/cdap"},{"original_method":"private void trashMessageBoardsAttachments(boolean restore)\n\t\tthrows Exception {\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setScopeGroupId(TestPropsValues.getGroupId());\n\n\t\tUser user = TestPropsValues.getUser();\n\n\t\tMBMessage message = MBMessageLocalServiceUtil.addMessage(\n\t\t\tuser.getUserId(), user.getFullName(), TestPropsValues.getGroupId(),\n\t\t\tMBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID, \"Message Subject\",\n\t\t\t\"Message Body\", MBMessageConstants.DEFAULT_FORMAT,\n\t\t\tgetInputStreamOVPs(\"company_logo.png\"), false, 0, false,\n\t\t\tserviceContext);\n\n\t\tint initialNotInTrashCount = message.getAttachmentsFiles().length;\n\t\tint initialTrashEntriesCount =\n\t\t\tmessage.getDeletedAttachmentsFiles().length;\n\n\t\tString[] existingAttachments = DLStoreUtil.getFileNames(\n\t\t\tmessage.getCompanyId(), CompanyConstants.SYSTEM,\n\t\t\tmessage.getAttachmentsDir());\n\n\t\tList<String> existingFiles = new ArrayList<String>();\n\n\t\tfor (int i = 0; i < existingAttachments.length; i++) {\n\t\t\texistingFiles.add(existingAttachments[i]);\n\t\t}\n\n\t\tmessage = MBMessageLocalServiceUtil.updateMessage(\n\t\t\tuser.getUserId(), message.getMessageId(), \"Message Subject\",\n\t\t\t\"Message Body\", getInputStreamOVPs(\"OSX_Test.docx\"), existingFiles,\n\t\t\t0, false, serviceContext);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount,\n\t\t\tmessage.getDeletedAttachmentsFiles().length);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialNotInTrashCount + 1, message.getAttachmentsFiles().length);\n\n\t\tString fileName = message.getAttachmentsFiles()[0];\n\n\t\tMBMessageLocalServiceUtil.moveMessageAttachmentToTrash(\n\t\t\tmessage.getMessageId(), fileName);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 1,\n\t\t\tmessage.getDeletedAttachmentsFiles().length);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialNotInTrashCount, message.getAttachmentsFiles().length);\n\n\t\tfileName = message.getDeletedAttachmentsFiles()[0];\n\n\t\tif (restore) {\n\t\t\tMBMessageLocalServiceUtil.moveMessageAttachmentFromTrash(\n\t\t\t\tmessage.getMessageId(), fileName);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesCount,\n\t\t\t\tmessage.getDeletedAttachmentsFiles().length);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialNotInTrashCount + 1,\n\t\t\t\tmessage.getAttachmentsFiles().length);\n\t\t}\n\t\telse {\n\t\t\tMBMessageLocalServiceUtil.deleteMessageAttachment(\n\t\t\t\tmessage.getMessageId(), fileName);\n\t\t}\n\t}","id":54371,"modified_method":"private void trashMessageBoardsAttachments(boolean restore)\n\t\tthrows Exception {\n\n\t\tUser user = TestPropsValues.getUser();\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setScopeGroupId(TestPropsValues.getGroupId());\n\n\t\tMBMessage message = MBMessageLocalServiceUtil.addMessage(\n\t\t\tuser.getUserId(), user.getFullName(), TestPropsValues.getGroupId(),\n\t\t\tMBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID, \"Subject\", \"Body\",\n\t\t\tMBMessageConstants.DEFAULT_FORMAT,\n\t\t\tgetInputStreamOVPs(\"company_logo.png\"), false, 0, false,\n\t\t\tserviceContext);\n\n\t\tString[] attachmentsFiles = message.getAttachmentsFiles();\n\n\t\tint initialNotInTrashCount = attachmentsFiles.length;\n\n\t\tString[] deletedAttachmentsFiles = message.getDeletedAttachmentsFiles();\n\n\t\tint initialTrashEntriesCount = deletedAttachmentsFiles.length;\n\n\t\tString[] existingAttachments = DLStoreUtil.getFileNames(\n\t\t\tmessage.getCompanyId(), CompanyConstants.SYSTEM,\n\t\t\tmessage.getAttachmentsDir());\n\n\t\tList<String> existingFiles = new ArrayList<String>();\n\n\t\tfor (int i = 0; i < existingAttachments.length; i++) {\n\t\t\texistingFiles.add(existingAttachments[i]);\n\t\t}\n\n\t\tmessage = MBMessageLocalServiceUtil.updateMessage(\n\t\t\tuser.getUserId(), message.getMessageId(), \"Subject\", \"Body\",\n\t\t\tgetInputStreamOVPs(\"OSX_Test.docx\"), existingFiles, 0, false,\n\t\t\tserviceContext);\n\n\t\tattachmentsFiles = message.getAttachmentsFiles();\n\n\t\tAssert.assertEquals(\n\t\t\tinitialNotInTrashCount + 1, attachmentsFiles.length);\n\n\t\tdeletedAttachmentsFiles = message.getDeletedAttachmentsFiles();\n\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount, deletedAttachmentsFiles.length);\n\n\t\tString fileName = attachmentsFiles[0];\n\n\t\tMBMessageLocalServiceUtil.moveMessageAttachmentToTrash(\n\t\t\tmessage.getMessageId(), fileName);\n\n\t\tattachmentsFiles = message.getAttachmentsFiles();\n\n\t\tAssert.assertEquals(initialNotInTrashCount, attachmentsFiles.length);\n\n\t\tdeletedAttachmentsFiles = message.getDeletedAttachmentsFiles();\n\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 1, deletedAttachmentsFiles.length);\n\n\t\tfileName = deletedAttachmentsFiles[0];\n\n\t\tif (restore) {\n\t\t\tMBMessageLocalServiceUtil.moveMessageAttachmentFromTrash(\n\t\t\t\tmessage.getMessageId(), fileName);\n\n\t\t\tattachmentsFiles = message.getAttachmentsFiles();\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialNotInTrashCount + 1, attachmentsFiles.length);\n\n\t\t\tdeletedAttachmentsFiles = message.getDeletedAttachmentsFiles();\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesCount, deletedAttachmentsFiles.length);\n\t\t}\n\t\telse {\n\t\t\tMBMessageLocalServiceUtil.deleteMessageAttachment(\n\t\t\t\tmessage.getMessageId(), fileName);\n\t\t}\n\t}","commit_id":"7037e9843ff81c9cf58f4c2b3c124bfa189e8952","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void trashWikiAttachments(boolean restore) throws Exception {\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setScopeGroupId(TestPropsValues.getGroupId());\n\n\t\tWikiNode wikiNode = WikiNodeLocalServiceUtil.addNode(\n\t\t\tTestPropsValues.getUserId(), ServiceTestUtil.randomString(), \"\",\n\t\t\tserviceContext);\n\n\t\tWikiPage wikiPage = WikiPageLocalServiceUtil.addPage(\n\t\t\tTestPropsValues.getUserId(), wikiNode.getNodeId(),\n\t\t\tServiceTestUtil.randomString(), null, WikiPageConstants.NEW, true,\n\t\t\tserviceContext);\n\n\t\tint initialNotInTrashCount = wikiPage.getAttachmentsFiles().length;\n\t\tint initialTrashEntriesCount =\n\t\t\twikiPage.getDeletedAttachmentsFiles().length;\n\n\t\tClass<?> clazz = getClass();\n\n\t\tbyte[] fileBytes = FileUtil.getBytes(\n\t\t\tclazz.getResourceAsStream(\"dependencies/OSX_Test.docx\"));\n\n\t\tFile file = null;\n\n\t\tif ((fileBytes != null) && (fileBytes.length > 0)) {\n\t\t\tfile = FileUtil.createTempFile(fileBytes);\n\t\t}\n\n\t\tWikiPageLocalServiceUtil.addPageAttachment(\n\t\t\tTestPropsValues.getUserId(), wikiNode.getNodeId(),\n\t\t\twikiPage.getTitle(), \"Test File.txt\", file);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount,\n\t\t\twikiPage.getDeletedAttachmentsFiles().length);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialNotInTrashCount + 1, wikiPage.getAttachmentsFiles().length);\n\n\t\tString fileName = wikiPage.getAttachmentsFiles()[0];\n\n\t\tWikiPageLocalServiceUtil.movePageAttachmentToTrash(\n\t\t\twikiNode.getNodeId(), wikiPage.getTitle(), fileName);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 1,\n\t\t\twikiPage.getDeletedAttachmentsFiles().length);\n\n\t\tAssert.assertEquals(\n\t\t\tinitialNotInTrashCount, wikiPage.getAttachmentsFiles().length);\n\n\t\tfileName = wikiPage.getDeletedAttachmentsFiles()[0];\n\n\t\tif (restore) {\n\t\t\tWikiPageLocalServiceUtil.movePageAttachmentFromTrash(\n\t\t\t\twikiNode.getNodeId(), wikiPage.getTitle(), fileName);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesCount,\n\t\t\t\twikiPage.getDeletedAttachmentsFiles().length);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialNotInTrashCount + 1,\n\t\t\t\twikiPage.getAttachmentsFiles().length);\n\t\t}\n\t\telse {\n\t\t\tWikiPageLocalServiceUtil.deletePageAttachment(\n\t\t\t\twikiNode.getNodeId(), wikiPage.getTitle(), fileName);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesCount,\n\t\t\t\twikiPage.getDeletedAttachmentsFiles().length);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialNotInTrashCount, wikiPage.getAttachmentsFiles().length);\n\t\t}\n\t}","id":54372,"modified_method":"private void trashWikiAttachments(boolean restore) throws Exception {\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setScopeGroupId(TestPropsValues.getGroupId());\n\n\t\tWikiNode wikiNode = WikiNodeLocalServiceUtil.addNode(\n\t\t\tTestPropsValues.getUserId(), ServiceTestUtil.randomString(), \"\",\n\t\t\tserviceContext);\n\n\t\tWikiPage wikiPage = WikiPageLocalServiceUtil.addPage(\n\t\t\tTestPropsValues.getUserId(), wikiNode.getNodeId(),\n\t\t\tServiceTestUtil.randomString(), null, WikiPageConstants.NEW, true,\n\t\t\tserviceContext);\n\n\t\tString[] attachmentsFiles = wikiPage.getAttachmentsFiles();\n\n\t\tint initialNotInTrashCount = attachmentsFiles.length;\n\n\t\tString[] deletedAttachmentsFiles =\n\t\t\twikiPage.getDeletedAttachmentsFiles();\n\n\t\tint initialTrashEntriesCount = deletedAttachmentsFiles.length;\n\n\t\tClass<?> clazz = getClass();\n\n\t\tbyte[] fileBytes = FileUtil.getBytes(\n\t\t\tclazz.getResourceAsStream(\"dependencies/OSX_Test.docx\"));\n\n\t\tFile file = null;\n\n\t\tif ((fileBytes != null) && (fileBytes.length > 0)) {\n\t\t\tfile = FileUtil.createTempFile(fileBytes);\n\t\t}\n\n\t\tWikiPageLocalServiceUtil.addPageAttachment(\n\t\t\tTestPropsValues.getUserId(), wikiNode.getNodeId(),\n\t\t\twikiPage.getTitle(), \"Test File.txt\", file);\n\n\t\tattachmentsFiles = wikiPage.getAttachmentsFiles();\n\n\t\tAssert.assertEquals(\n\t\t\tinitialNotInTrashCount + 1, attachmentsFiles.length);\n\n\t\tdeletedAttachmentsFiles = wikiPage.getDeletedAttachmentsFiles();\n\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount, deletedAttachmentsFiles.length);\n\n\t\tString fileName = attachmentsFiles[0];\n\n\t\tWikiPageLocalServiceUtil.movePageAttachmentToTrash(\n\t\t\twikiNode.getNodeId(), wikiPage.getTitle(), fileName);\n\n\t\tattachmentsFiles = wikiPage.getAttachmentsFiles();\n\n\t\tAssert.assertEquals(initialNotInTrashCount, attachmentsFiles.length);\n\n\t\tdeletedAttachmentsFiles = wikiPage.getDeletedAttachmentsFiles();\n\n\t\tAssert.assertEquals(\n\t\t\tinitialTrashEntriesCount + 1, deletedAttachmentsFiles.length);\n\n\t\tfileName = deletedAttachmentsFiles[0];\n\n\t\tif (restore) {\n\t\t\tWikiPageLocalServiceUtil.movePageAttachmentFromTrash(\n\t\t\t\twikiNode.getNodeId(), wikiPage.getTitle(), fileName);\n\n\t\t\tattachmentsFiles = wikiPage.getAttachmentsFiles();\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialNotInTrashCount + 1, attachmentsFiles.length);\n\n\t\t\tdeletedAttachmentsFiles = wikiPage.getDeletedAttachmentsFiles();\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesCount, deletedAttachmentsFiles.length);\n\t\t}\n\t\telse {\n\t\t\tWikiPageLocalServiceUtil.deletePageAttachment(\n\t\t\t\twikiNode.getNodeId(), wikiPage.getTitle(), fileName);\n\n\t\t\tattachmentsFiles = wikiPage.getAttachmentsFiles();\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialNotInTrashCount, attachmentsFiles.length);\n\n\t\t\tdeletedAttachmentsFiles = wikiPage.getDeletedAttachmentsFiles();\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tinitialTrashEntriesCount, deletedAttachmentsFiles.length);\n\t\t}\n\t}","commit_id":"7037e9843ff81c9cf58f4c2b3c124bfa189e8952","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static String getPageAttachementBinPath(\n\t\tPortletDataContext portletDataContext, WikiPage page,\n\t\tString attachment) {\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(portletDataContext.getPortletPath(PortletKeys.WIKI));\n\t\tsb.append(\"/bin/\");\n\t\tsb.append(page.getPageId());\n\t\tsb.append(StringPool.SLASH);\n\t\tsb.append(attachment);\n\n\t\treturn sb.toString();\n\t}","id":54373,"modified_method":"protected static String getPageAttachementBinPath(\n\t\tPortletDataContext portletDataContext, WikiPage page,\n\t\tString fileName) {\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(portletDataContext.getPortletPath(PortletKeys.WIKI));\n\t\tsb.append(\"/bin/\");\n\t\tsb.append(page.getPageId());\n\t\tsb.append(StringPool.SLASH);\n\t\tsb.append(fileName);\n\n\t\treturn sb.toString();\n\t}","commit_id":"efc9cce41cde4ca99195696693adf1ab1ca57a80","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected static void exportPage(\n\t\t\tPortletDataContext portletDataContext, Element nodesElement,\n\t\t\tElement pagesElement, Element dlFileEntryTypesElement,\n\t\t\tElement dlFoldersElement, Element dlFileEntriesElement,\n\t\t\tElement dlFileRanksElement, Element igFoldersElement,\n\t\t\tElement igImagesElement, WikiPage page, boolean checkDateRange)\n\t\tthrows Exception {\n\n\t\tif (!portletDataContext.isWithinDateRange(page.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getPagePath(portletDataContext, page);\n\n\t\t// Clone this page to make sure changes to its content are never\n\t\t// persisted\n\n\t\tpage = (WikiPage)page.clone();\n\n\t\tElement pageElement = (Element)pagesElement.selectSingleNode(\n\t\t\t\"//page[@path='\".concat(path).concat(\"']\"));\n\n\t\tif (portletDataContext.isPathNotProcessed(path)) {\n\t\t\tif (pageElement == null) {\n\t\t\t\tpageElement = pagesElement.addElement(\"page\");\n\t\t\t}\n\n\t\t\tString content =\n\t\t\t\tJournalPortletDataHandlerImpl.exportReferencedContent(\n\t\t\t\t\tportletDataContext, dlFileEntryTypesElement,\n\t\t\t\t\tdlFoldersElement, dlFileEntriesElement, dlFileRanksElement,\n\t\t\t\t\tigFoldersElement, igImagesElement, pageElement,\n\t\t\t\t\tpage.getContent(), checkDateRange);\n\n\t\t\tpage.setContent(content);\n\n\t\t\tString imagePath = getPageImagePath(portletDataContext, page);\n\n\t\t\tpageElement.addAttribute(\"image-path\", imagePath);\n\n\t\t\tif (portletDataContext.getBooleanParameter(\n\t\t\t\t\t_NAMESPACE, \"attachments\") &&\n\t\t\t\tpage.isHead()) {\n\n\t\t\t\tfor (String attachment : page.getAttachmentsFiles()) {\n\t\t\t\t\tint pos = attachment.lastIndexOf(CharPool.SLASH);\n\n\t\t\t\t\tString name = attachment.substring(pos + 1);\n\t\t\t\t\tString binPath = getPageAttachementBinPath(\n\t\t\t\t\t\tportletDataContext, page, name);\n\n\t\t\t\t\tElement attachmentEl = pageElement.addElement(\"attachment\");\n\n\t\t\t\t\tattachmentEl.addAttribute(\"name\", name);\n\t\t\t\t\tattachmentEl.addAttribute(\"bin-path\", binPath);\n\n\t\t\t\t\tbyte[] bytes = DLStoreUtil.getFileAsBytes(\n\t\t\t\t\t\tportletDataContext.getCompanyId(),\n\t\t\t\t\t\tCompanyConstants.SYSTEM, attachment);\n\n\t\t\t\t\tportletDataContext.addZipEntry(binPath, bytes);\n\t\t\t\t}\n\n\t\t\t\tpage.setAttachmentsDir(page.getAttachmentsDir());\n\t\t\t}\n\n\t\t\tportletDataContext.addClassedModel(\n\t\t\t\tpageElement, path, page, _NAMESPACE);\n\t\t}\n\n\t\texportNode(portletDataContext, nodesElement, page.getNodeId());\n\t}","id":54374,"modified_method":"protected static void exportPage(\n\t\t\tPortletDataContext portletDataContext, Element nodesElement,\n\t\t\tElement pagesElement, Element dlFileEntryTypesElement,\n\t\t\tElement dlFoldersElement, Element dlFileEntriesElement,\n\t\t\tElement dlFileRanksElement, Element igFoldersElement,\n\t\t\tElement igImagesElement, WikiPage page, boolean checkDateRange)\n\t\tthrows Exception {\n\n\t\tif (!portletDataContext.isWithinDateRange(page.getModifiedDate())) {\n\t\t\treturn;\n\t\t}\n\n\t\tString path = getPagePath(portletDataContext, page);\n\n\t\t// Clone this page to make sure changes to its content are never\n\t\t// persisted\n\n\t\tpage = (WikiPage)page.clone();\n\n\t\tElement pageElement = (Element)pagesElement.selectSingleNode(\n\t\t\t\"//page[@path='\".concat(path).concat(\"']\"));\n\n\t\tif (portletDataContext.isPathNotProcessed(path)) {\n\t\t\tif (pageElement == null) {\n\t\t\t\tpageElement = pagesElement.addElement(\"page\");\n\t\t\t}\n\n\t\t\tString content =\n\t\t\t\tJournalPortletDataHandlerImpl.exportReferencedContent(\n\t\t\t\t\tportletDataContext, dlFileEntryTypesElement,\n\t\t\t\t\tdlFoldersElement, dlFileEntriesElement, dlFileRanksElement,\n\t\t\t\t\tigFoldersElement, igImagesElement, pageElement,\n\t\t\t\t\tpage.getContent(), checkDateRange);\n\n\t\t\tpage.setContent(content);\n\n\t\t\tString imagePath = getPageImagePath(portletDataContext, page);\n\n\t\t\tpageElement.addAttribute(\"image-path\", imagePath);\n\n\t\t\tif (portletDataContext.getBooleanParameter(\n\t\t\t\t\t_NAMESPACE, \"attachments\") &&\n\t\t\t\tpage.isHead()) {\n\n\t\t\t\tString[] attachmentsFiles = page.getAttachmentsFiles();\n\n\t\t\t\tfor (int i = 0; i < attachmentsFiles.length; i++) {\n\t\t\t\t\tString attachment = attachmentsFiles[i];\n\t\t\t\t\tint pos = attachment.lastIndexOf(StringPool.SLASH);\n\n\t\t\t\t\tString name = attachment.substring(pos + 1);\n\t\t\t\t\tString binPath = getPageAttachementBinPath(\n\t\t\t\t\t\tportletDataContext, page, \"attachment\" + i);\n\n\t\t\t\t\tElement attachmentEl = pageElement.addElement(\"attachment\");\n\n\t\t\t\t\tattachmentEl.addAttribute(\"name\", name);\n\t\t\t\t\tattachmentEl.addAttribute(\"bin-path\", binPath);\n\n\t\t\t\t\tbyte[] bytes = DLStoreUtil.getFileAsBytes(\n\t\t\t\t\t\tportletDataContext.getCompanyId(),\n\t\t\t\t\t\tCompanyConstants.SYSTEM, attachment);\n\n\t\t\t\t\tportletDataContext.addZipEntry(binPath, bytes);\n\t\t\t\t}\n\n\t\t\t\tpage.setAttachmentsDir(page.getAttachmentsDir());\n\t\t\t}\n\n\t\t\tportletDataContext.addClassedModel(\n\t\t\t\tpageElement, path, page, _NAMESPACE);\n\t\t}\n\n\t\texportNode(portletDataContext, nodesElement, page.getNodeId());\n\t}","commit_id":"efc9cce41cde4ca99195696693adf1ab1ca57a80","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentRatingsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comment Ratings\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54375,"modified_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\n\t\t\t\tboolean enableCommentRatingsNotChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\n\t\t\t\tif (enableCommentRatingsNotChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_enableCommentRatingsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enable Comment Ratings\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"9fe4dd279e20e8b27c84899764916f025047b818","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_enableCommentsCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54376,"modified_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\");\n\n\t\t\t\tboolean enableCommentsNotChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\");\n\n\t\t\t\tif (enableCommentsNotChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"9fe4dd279e20e8b27c84899764916f025047b818","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletShowMetadataViewCount()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableMetadataFields']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableMetadataFields']\",\n\t\t\tRuntimeVariables.replace(\"View Count\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\");\n\t\tselenium.clickAt(\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentMetadataFields']\",\n\t\t\t\"View Count\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54377,"modified_method":"public void testConfigurePortletShowMetadataViewCount()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableMetadataFields']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableMetadataFields']\",\n\t\t\tRuntimeVariables.replace(\"View Count\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\");\n\t\tselenium.clickAt(\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentMetadataFields']\",\n\t\t\t\"View Count\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"9fe4dd279e20e8b27c84899764916f025047b818","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletAbstractsWikiPageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Read More About FrontPage \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"Read More About FrontPage \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":54378,"modified_method":"public void testViewConfigurePortletAbstractsWikiPageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Read More About FrontPage \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"Read More About FrontPage \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/p\"));\n\t}","commit_id":"9fe4dd279e20e8b27c84899764916f025047b818","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletFullContentWikiPageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":54379,"modified_method":"public void testViewConfigurePortletFullContentWikiPageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/p\"));\n\t}","commit_id":"9fe4dd279e20e8b27c84899764916f025047b818","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletTableWikiPageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\"//th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[2]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[2]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":54380,"modified_method":"public void testViewConfigurePortletTableWikiPageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\"//th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[2]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[2]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/p\"));\n\t}","commit_id":"9fe4dd279e20e8b27c84899764916f025047b818","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletTitleListWikiPageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//ul[@class='title-list']/li/span/a/span\"));\n\t\tselenium.clickAt(\"//ul[@class='title-list']/li/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":54381,"modified_method":"public void testViewConfigurePortletTitleListWikiPageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//ul[@class='title-list']/li/span/a/span\"));\n\t\tselenium.clickAt(\"//ul[@class='title-list']/li/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/p\"));\n\t}","commit_id":"9fe4dd279e20e8b27c84899764916f025047b818","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWikiPageViewCountAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tString viewCount = selenium.getFirstNumberIncrement(\n\t\t\t\t\"//span[@class='metadata-entry metadata-view-count']\");\n\t\tRuntimeVariables.setValue(\"viewCount\", viewCount);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Publisher Test Page\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//span[@class='metadata-entry metadata-view-count']\",\n\t\t\t\tRuntimeVariables.getValue(\"viewCount\")));\n\n\t\tString viewCount2 = selenium.getFirstNumberIncrement(\n\t\t\t\t\"//span[@class='metadata-entry metadata-view-count']\");\n\t\tRuntimeVariables.setValue(\"viewCount2\", viewCount2);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//div[@class='stats']\",\n\t\t\t\tRuntimeVariables.getValue(\"viewCount2\")));\n\n\t\tString viewCount3 = selenium.getFirstNumberIncrement(\n\t\t\t\t\"//div[@class='stats']\");\n\t\tRuntimeVariables.setValue(\"viewCount3\", viewCount3);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Publisher Test Page\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//span[@class='metadata-entry metadata-view-count']\",\n\t\t\t\tRuntimeVariables.getValue(\"viewCount3\")));\n\t}","id":54382,"modified_method":"public void testViewWikiPageViewCountAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tString viewCount = selenium.getFirstNumberIncrement(\n\t\t\t\t\"//span[@class='metadata-entry metadata-view-count']\");\n\t\tRuntimeVariables.setValue(\"viewCount\", viewCount);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Publisher Test Page\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//span[@class='metadata-entry metadata-view-count']\",\n\t\t\t\tRuntimeVariables.getValue(\"viewCount\")));\n\n\t\tString viewCount2 = selenium.getFirstNumberIncrement(\n\t\t\t\t\"//span[@class='metadata-entry metadata-view-count']\");\n\t\tRuntimeVariables.setValue(\"viewCount2\", viewCount2);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//div[@class='stats']\",\n\t\t\t\tRuntimeVariables.getValue(\"viewCount2\")));\n\n\t\tString viewCount3 = selenium.getFirstNumberIncrement(\n\t\t\t\t\"//div[@class='stats']\");\n\t\tRuntimeVariables.setValue(\"viewCount3\", viewCount3);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//span[@class='metadata-entry metadata-view-count']\",\n\t\t\t\tRuntimeVariables.getValue(\"viewCount3\")));\n\t}","commit_id":"9fe4dd279e20e8b27c84899764916f025047b818","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageNW() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Netvibes Widget Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Netvibes Widget Test Page\");\n\t\tselenium.clickAt(\"link=Netvibes Widget Test Page\",\n\t\t\tRuntimeVariables.replace(\"Netvibes Widget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54383,"modified_method":"public void testAddPageNW() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Netvibes Widget Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Netvibes Widget Test Page\");\n\t\tselenium.clickAt(\"link=Netvibes Widget Test Page\",\n\t\t\tRuntimeVariables.replace(\"Netvibes Widget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"48725e1b0c4e03caafb5ea41d6e606e865d3142f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletNW1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Netvibes Widget Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Netvibes Widget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Netvibes Widget']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Netvibes Widget']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54384,"modified_method":"public void testAddPortletNW1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Netvibes Widget Test Page\",\n\t\t\tRuntimeVariables.replace(\"Netvibes Widget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"n\"));\n\t\tselenium.waitForVisible(\"//li[@title='Netvibes Widget']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Netvibes Widget']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div/div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div/div[1]/section\"));\n\t}","commit_id":"48725e1b0c4e03caafb5ea41d6e606e865d3142f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletNW2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Netvibes Widget Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Netvibes Widget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Netvibes Widget']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Netvibes Widget']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","id":54385,"modified_method":"public void testAddPortletNW2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Netvibes Widget Test Page\",\n\t\t\tRuntimeVariables.replace(\"Netvibes Widget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"n\"));\n\t\tselenium.waitForVisible(\"//li[@title='Netvibes Widget']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Netvibes Widget']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div/div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div/div[1]/section\"));\n\t\tassertTrue(selenium.isVisible(\"//div/div[2]/section\"));\n\t}","commit_id":"48725e1b0c4e03caafb5ea41d6e606e865d3142f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletNW3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Netvibes Widget Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Netvibes Widget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Netvibes Widget']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Netvibes Widget']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","id":54386,"modified_method":"public void testAddPortletNW3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Netvibes Widget Test Page\",\n\t\t\tRuntimeVariables.replace(\"Netvibes Widget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"n\"));\n\t\tselenium.waitForVisible(\"//li[@title='Netvibes Widget']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Netvibes Widget']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div/div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div/div[1]/section\"));\n\t\tassertTrue(selenium.isVisible(\"//div/div[2]/section\"));\n\t\tassertTrue(selenium.isVisible(\"//div/div[3]/section\"));\n\t}","commit_id":"48725e1b0c4e03caafb5ea41d6e606e865d3142f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletNW() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Netvibes Widget Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Netvibes Widget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Netvibes Widget']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Netvibes Widget']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54387,"modified_method":"public void testAddPortletNW() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Netvibes Widget Test Page\",\n\t\t\tRuntimeVariables.replace(\"Netvibes Widget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"n\"));\n\t\tselenium.waitForVisible(\"//li[@title='Netvibes Widget']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Netvibes Widget']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"48725e1b0c4e03caafb5ea41d6e606e865d3142f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemovePortletNW() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Netvibes Widget Test Page\");\n\t\tselenium.clickAt(\"link=Netvibes Widget Test Page\",\n\t\t\tRuntimeVariables.replace(\"Netvibes Widget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to remove this component?\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section\"));\n\t}","id":54388,"modified_method":"public void testRemovePortletNW() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Netvibes Widget Test Page\",\n\t\t\tRuntimeVariables.replace(\"Netvibes Widget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to remove this component?\");\n\t\tselenium.waitForElementNotPresent(\"//section\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section\"));\n\t}","commit_id":"48725e1b0c4e03caafb5ea41d6e606e865d3142f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntry1CP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry1 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry1 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry1 Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":54389,"modified_method":"public void testAddBlogsEntry1CP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry1 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry1 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry1 Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry1 Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry1 Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntry2CP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry2 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry2 Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":54390,"modified_method":"public void testAddBlogsEntry2CP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry2 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry2 Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry2 Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry2 Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntry3CP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry3 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry3 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry3 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry3 Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry3 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry3 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":54391,"modified_method":"public void testAddBlogsEntry3CP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry3 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry3 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry3 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry3 Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry3 Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry3 Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry3 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry3 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntryAutoDraftCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tThread.sleep(15000);\n\t\tselenium.waitForPartialText(\"//div[@class='save-status portlet-msg-success']\",\n\t\t\t\"Draft saved\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='save-status portlet-msg-success']\", \"Draft saved\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Draft\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","id":54392,"modified_method":"public void testAddBlogsEntryAutoDraftCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tThread.sleep(15000);\n\t\tselenium.waitForPartialText(\"//div[@class='save-status portlet-msg-success']\",\n\t\t\t\"Draft saved\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='save-status portlet-msg-success']\", \"Draft saved\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Draft\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Draft')]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntryCKEditorCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"CK Editor Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\t\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"CK Editor Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CK Editor Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":54393,"modified_method":"public void testAddBlogsEntryCKEditorCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"CK Editor Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"CK Editor Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CK Editor Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntryCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":54394,"modified_method":"public void testAddBlogsEntryCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntryCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":54395,"modified_method":"public void testAddBlogsEntryCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntryCommentCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"0 Comments\"),\n\t\t\tselenium.getText(\"//span[@class='comments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//fieldset/div/a\"));\n\t\tselenium.clickAt(\"//fieldset/div/a\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\t\tselenium.waitForVisible(\"//textarea[@name='_161_postReplyBody0']\");\n\t\tselenium.type(\"//textarea[@name='_161_postReplyBody0']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Comment Body\"));\n\t\tselenium.keyPress(\"//textarea[@name='_161_postReplyBody0']\",\n\t\t\tRuntimeVariables.replace(\"\\\\48\"));\n\t\tselenium.keyPress(\"//textarea[@name='_161_postReplyBody0']\",\n\t\t\tRuntimeVariables.replace(\"\\\\8\"));\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForText(\"//span[@class='comments']\", \"1 Comment\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Comment\"),\n\t\t\tselenium.getText(\"//span[@class='comments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Comment Body\"),\n\t\t\tselenium.getText(\"//form/div/div/div/div[3]/div/div[1]\"));\n\t}","id":54396,"modified_method":"public void testAddBlogsEntryCommentCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"0 Comments\"),\n\t\t\tselenium.getText(\"//span[@class='comments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//div[@class='aui-fieldset-content ']/a\"));\n\t\tselenium.clickAt(\"//div[@class='aui-fieldset-content ']/a\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\t\tselenium.waitForVisible(\"//textarea[@name='_161_postReplyBody0']\");\n\t\tselenium.type(\"//textarea[@name='_161_postReplyBody0']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Comment Body\"));\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForText(\"//span[@class='comments']\", \"1 Comment\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Comment\"),\n\t\t\tselenium.getText(\"//span[@class='comments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Comment Body\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntryContentNullCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-error']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t}","id":54397,"modified_method":"public void testAddBlogsEntryContentNullCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-error']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntryDraftCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save as Draft']\",\n\t\t\tRuntimeVariables.replace(\"Save as Draft\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft\"),\n\t\t\tselenium.getText(\"//strong[@class='workflow-status-draft']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t}","id":54398,"modified_method":"public void testAddBlogsEntryDraftCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save as Draft']\",\n\t\t\tRuntimeVariables.replace(\"Save as Draft\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft\"),\n\t\t\tselenium.getText(\"//strong[@class='workflow-status-draft']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Draft')]/td[5]/a\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntryRatingCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='aui-rating-label-element'])[2]\", \"0 Votes\"));\n\t\tselenium.waitForElementPresent(\"//a[5]\");\n\t\tselenium.clickAt(\"//a[5]\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPartialText(\"xPath=(//div[@class='aui-rating-label-element'])[2]\",\n\t\t\t\"1 Vote\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='aui-rating-label-element'])[2]\", \"1 Vote\"));\n\t}","id":54399,"modified_method":"public void testAddBlogsEntryRatingCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='aui-rating-label-element'])[2]\", \"0 Votes\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='taglib-ratings stars']/div/div/a[5]\");\n\t\tselenium.clickAt(\"//div[@class='taglib-ratings stars']/div/div/a[5]\",\n\t\t\tRuntimeVariables.replace(\"Rate 5 Stars\"));\n\t\tselenium.waitForPartialText(\"xPath=(//div[@class='aui-rating-label-element'])[2]\",\n\t\t\t\"1 Vote\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='aui-rating-label-element'])[2]\", \"1 Vote\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntryTitleEscapeCharacterCP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"<!--Html Escape Character Test-->\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"<!--Html Escape Character Test-->\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","id":54400,"modified_method":"public void testAddBlogsEntryTitleEscapeCharacterCP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"<!--Html Escape Character Test-->\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"<!--Html Escape Character Test-->\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'<!--Html Escape Character Test-->')]/td[2]/a\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntryTitleNullCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","id":54401,"modified_method":"public void testAddBlogsEntryTitleNullCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteBlogsEntryCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to move this to the Recycle Bin[\\\\s\\\\S]$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","id":54402,"modified_method":"public void testDeleteBlogsEntryCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteBlogsEntryCommentCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Comment\"),\n\t\t\tselenium.getText(\"//span[@class='comments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Comment Body\"),\n\t\t\tselenium.getText(\"//form/div/div/div/div[3]/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\"//li[4]/span/a/span\"));\n\t\tselenium.clickAt(\"//li[4]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForText(\"//span[@class='comments']\", \"0 Comments\");\n\t\tassertEquals(RuntimeVariables.replace(\"0 Comments\"),\n\t\t\tselenium.getText(\"//span[@class='comments']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Comment Body\"));\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t}","id":54403,"modified_method":"public void testDeleteBlogsEntryCommentCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Comment\"),\n\t\t\tselenium.getText(\"//span[@class='comments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Comment Body\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t\tselenium.mouseOver(\"//li[@class='lfr-discussion-delete']/span/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\"//li[@class='lfr-discussion-delete']/span/a\"));\n\t\tselenium.clickAt(\"//li[@class='lfr-discussion-delete']/span/a\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tselenium.waitForText(\"//span[@class='comments']\", \"0 Comments\");\n\t\tassertEquals(RuntimeVariables.replace(\"0 Comments\"),\n\t\t\tselenium.getText(\"//span[@class='comments']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Comment Body\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteBlogsEntryTitleEscapeCharacterCP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"<!--Html Escape Character Test-->\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to move this to the Recycle Bin[\\\\s\\\\S]$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"<!--Html Escape Character Test-->\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","id":54404,"modified_method":"public void testDeleteBlogsEntryTitleEscapeCharacterCP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"<!--Html Escape Character Test-->\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'<!--Html Escape Character Test-->')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\t\tassertFalse(selenium.isTextPresent(\"<!--Html Escape Character Test-->\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditBlogsEntryCommentBodyCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Comment\"),\n\t\t\tselenium.getText(\"//span[@class='comments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Comment Body\"),\n\t\t\tselenium.getText(\"//form/div/div/div/div[3]/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//li[3]/span/a/span\"));\n\t\tselenium.clickAt(\"//li[3]/span/a/span\", RuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForVisible(\"//textarea[@name='_161_editReplyBody1']\");\n\t\tselenium.type(\"//textarea[@name='_161_editReplyBody1']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Comment Body Edited\"));\n\t\tselenium.keyPress(\"//textarea[@name='_161_editReplyBody1']\",\n\t\t\tRuntimeVariables.replace(\"\\\\48\"));\n\t\tselenium.keyPress(\"//textarea[@name='_161_editReplyBody1']\",\n\t\t\tRuntimeVariables.replace(\"\\\\8\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@class='comments']\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Comment\"),\n\t\t\tselenium.getText(\"//span[@class='comments']\"));\n\t\tselenium.waitForText(\"//form/div/div/div/div[3]/div/div[1]\",\n\t\t\t\"Blogs Entry Comment Body Edited\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Comment Body Edited\"),\n\t\t\tselenium.getText(\"//form/div/div/div/div[3]/div/div[1]\"));\n\t}","id":54405,"modified_method":"public void testEditBlogsEntryCommentBodyCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Comment\"),\n\t\t\tselenium.getText(\"//span[@class='comments']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Comment Body\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t\tselenium.mouseOver(\"//li[@class='lfr-discussion-delete-reply']/span/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[@class='lfr-discussion-delete-reply']/span/a\"));\n\t\tselenium.clickAt(\"//li[@class='lfr-discussion-delete-reply']/span/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForVisible(\"//textarea[@name='_161_editReplyBody1']\");\n\t\tselenium.type(\"//textarea[@name='_161_editReplyBody1']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Comment Body Edited\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@class='comments']\");\n\t\tassertEquals(RuntimeVariables.replace(\"1 Comment\"),\n\t\t\tselenium.getText(\"//span[@class='comments']\"));\n\t\tselenium.waitForText(\"//div[@class='lfr-discussion-message']\",\n\t\t\t\"Blogs Entry Comment Body Edited\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Comment Body Edited\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditBlogsEntryContentCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForText(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\",\n\t\t\t\"Edit\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":54406,"modified_method":"public void testEditBlogsEntryContentCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForText(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\t\"Edit\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__161_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_161_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__161_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditBlogsEntryTitleCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForText(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\",\n\t\t\t\"Edit\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Edited\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title Edited\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Edited\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title Edited\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":54407,"modified_method":"public void testEditBlogsEntryTitleCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForText(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\t\"Edit\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_161_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Edited\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title Edited\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Blogs Entry Title Edited')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry Title Edited')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title Edited\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title Edited\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLARCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//menu/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_86_importFileName']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\blogs\\\\dependencies\\\\Selenium-Blogs.portlet.lar\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Delete Portlet data before importing Checkbox\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_PORTLET_DATACheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_PORTLET_DATACheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Data Checkbox\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_86_PORTLET_DATACheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54408,"modified_method":"public void testImportLARCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//menu/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Export / Import')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Export / Import')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Export / Import')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Import\",\n\t\t\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.uploadFile(\"//input[@id='_86_importFileName']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\blogs\\\\dependencies\\\\Selenium-Blogs.portlet.lar\"));\n\n\t\t\t\tboolean deletePortletDataCheckbox = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\");\n\n\t\t\t\tif (deletePortletDataCheckbox) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Delete Portlet data before importing Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\"));\n\n\t\t\t\tboolean dataCheckbox = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_PORTLET_DATACheckbox']\");\n\n\t\t\t\tif (dataCheckbox) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_PORTLET_DATACheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Data Checkbox\"));\n\n\t\t\tcase 3:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_PORTLET_DATACheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPublishBlogsEntryDraftCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Draft\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.waitForText(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\",\n\t\t\t\"Edit\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","id":54409,"modified_method":"public void testPublishBlogsEntryDraftCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Draft\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Draft')]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.waitForText(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\t\"Edit\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchBlogsEntryCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_161_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","id":54410,"modified_method":"public void testSearchBlogsEntryCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_161_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownBlogsEntryCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean entry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[1]/input\");\n\n\t\t\t\tif (!entry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to move this to the Recycle Bin[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean entry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[1]/input\");\n\n\t\t\t\tif (!entry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to move this to the Recycle Bin[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean entry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[1]/input\");\n\n\t\t\t\tif (!entry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to move this to the Recycle Bin[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean entry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[1]/input\");\n\n\t\t\t\tif (!entry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to move this to the Recycle Bin[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean entry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[1]/input\");\n\n\t\t\t\tif (!entry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to move this to the Recycle Bin[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Recycle Bin\",\n\t\t\t\t\tRuntimeVariables.replace(\"Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean entry1Present1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[1]/input\");\n\n\t\t\t\tif (!entry1Present1) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean entry2Present2 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[1]/input\");\n\n\t\t\t\tif (!entry2Present2) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean entry3Present3 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[1]/input\");\n\n\t\t\t\tif (!entry3Present3) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean entry4Present4 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[1]/input\");\n\n\t\t\t\tif (!entry4Present4) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean entry5Present5 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[1]/input\");\n\n\t\t\t\tif (!entry5Present5) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 11:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54411,"modified_method":"public void testTearDownBlogsEntryCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean entry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_161_rowIds']\");\n\n\t\t\t\tif (!entry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean entry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_161_rowIds']\");\n\n\t\t\t\tif (!entry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean entry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_161_rowIds']\");\n\n\t\t\t\tif (!entry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean entry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_161_rowIds']\");\n\n\t\t\t\tif (!entry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean entry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_161_rowIds']\");\n\n\t\t\t\tif (!entry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 6:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Recycle Bin\",\n\t\t\t\t\tRuntimeVariables.replace(\"Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean entry1Present1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[1]/span/a\");\n\n\t\t\t\tif (!entry1Present1) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean entry2Present2 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row']/td[1]/span/a\");\n\n\t\t\t\tif (!entry2Present2) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean entry3Present3 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[1]/span/a\");\n\n\t\t\t\tif (!entry3Present3) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean entry4Present4 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[1]/span/a\");\n\n\t\t\t\tif (!entry4Present4) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean entry5Present5 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[1]/span/a\");\n\n\t\t\t\tif (!entry5Present5) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 11:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewBlogsEntryViewCountCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tString Count = selenium.getFirstNumberIncrement(\n\t\t\t\t\"//span[@class='view-count']\");\n\t\tRuntimeVariables.setValue(\"Count\", Count);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//span[@class='view-count']\",\n\t\t\t\tRuntimeVariables.getValue(\"Count\")));\n\t}","id":54412,"modified_method":"public void testViewBlogsEntryViewCountCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tString Count = selenium.getFirstNumberIncrement(\n\t\t\t\t\"//span[@class='view-count']\");\n\t\tRuntimeVariables.setValue(\"Count\", Count);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Entry Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//span[@class='view-count']\",\n\t\t\t\tRuntimeVariables.getValue(\"Count\")));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewImportLARCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Entry\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Entry\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a test entry.\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a test entry comment.\"),\n\t\t\tselenium.getText(\"//div[@Class='lfr-discussion-message']\"));\n\t}","id":54413,"modified_method":"public void testViewImportLARCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs\", RuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Entry\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Entry')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Test Entry')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Entry\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a test entry.\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a test entry comment.\"),\n\t\t\tselenium.getText(\"//div[@Class='lfr-discussion-message']\"));\n\t}","commit_id":"a463c78bdbcb4b448f3de543fa163c99416dd6f7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletPageMenu() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Navigation Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Navigation Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Navigation Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Page Menu']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Page Menu']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54414,"modified_method":"public void testAddPortletPageMenu() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Navigation Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Navigation Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"p\"));\n\t\tselenium.waitForVisible(\"//li[@title='Page Menu']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Page Menu']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"995b480d9895efab70e3de613abbd626ef5eac01","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletTreeMenu() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Navigation Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Navigation Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Navigation Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Tree Menu']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Tree Menu']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","id":54415,"modified_method":"public void testAddPortletTreeMenu() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Navigation Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Navigation Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"t\"));\n\t\tselenium.waitForVisible(\"//li[@title='Tree Menu']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Tree Menu']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t}","commit_id":"995b480d9895efab70e3de613abbd626ef5eac01","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletPageMenuTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTreeMenuTest.class);\n\t\ttestSuite.addTestSuite(DeletePageTest.class);\n\n\t\treturn testSuite;\n\t}","id":54416,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletPageMenuTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTreeMenuTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"995b480d9895efab70e3de613abbd626ef5eac01","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddAdSense() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Google Adsense Test Page\");\n\t\tselenium.clickAt(\"link=Google Adsense Test Page\",\n\t\t\tRuntimeVariables.replace(\"Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForVisible(\"_86_adClient\");\n\t\tselenium.type(\"_86_adClient\",\n\t\t\tRuntimeVariables.replace(\"ca-pub-7910614330042482\"));\n\t\tselenium.type(\"_86_adChannel\", RuntimeVariables.replace(\"12345678\"));\n\t\tselenium.select(\"_86_adType\", RuntimeVariables.replace(\"label=Text\"));\n\t\tselenium.select(\"_86_adFormat\",\n\t\t\tRuntimeVariables.replace(\"label=(728 x 90) - Leaderboard\"));\n\t\tselenium.type(\"_86_colorBorder\", RuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.type(\"_86_colorBg\", RuntimeVariables.replace(\"0000FF\"));\n\t\tselenium.type(\"_86_colorLink\", RuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.type(\"_86_colorText\", RuntimeVariables.replace(\"000000\"));\n\t\tselenium.type(\"_86_colorUrl\", RuntimeVariables.replace(\"008000\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-success']\",\n\t\t\t\"You have successfully updated the setup.\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54417,"modified_method":"public void testAddAdSense() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Google Adsense Test Page\",\n\t\t\tRuntimeVariables.replace(\"Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'googleadsenseportlet')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'googleadsenseportlet')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_adClient']\");\n\t\tselenium.type(\"//input[@id='_86_adClient']\",\n\t\t\tRuntimeVariables.replace(\"ca-pub-7910614330042482\"));\n\t\tselenium.type(\"//input[@id='_86_adChannel']\",\n\t\t\tRuntimeVariables.replace(\"12345678\"));\n\t\tselenium.select(\"//select[@id='_86_adType']\",\n\t\t\tRuntimeVariables.replace(\"Text\"));\n\t\tselenium.select(\"//select[@id='_86_adFormat']\",\n\t\t\tRuntimeVariables.replace(\"(728 x 90) - Leaderboard\"));\n\t\tselenium.type(\"//input[@id='_86_colorBorder']\",\n\t\t\tRuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.type(\"//input[@id='_86_colorBg']\",\n\t\t\tRuntimeVariables.replace(\"0000FF\"));\n\t\tselenium.type(\"//input[@id='_86_colorLink']\",\n\t\t\tRuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.type(\"//input[@id='_86_colorText']\",\n\t\t\tRuntimeVariables.replace(\"000000\"));\n\t\tselenium.type(\"//input[@id='_86_colorUrl']\",\n\t\t\tRuntimeVariables.replace(\"008000\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"733bca15c11f36f3c5e8018649376d7e356a3a6f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Google Adsense Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Google Adsense Test Page\");\n\t\tselenium.clickAt(\"link=Google Adsense Test Page\",\n\t\t\tRuntimeVariables.replace(\"Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54418,"modified_method":"public void testAddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Google Adsense Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Google Adsense Test Page\");\n\t\tselenium.clickAt(\"link=Google Adsense Test Page\",\n\t\t\tRuntimeVariables.replace(\"Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"733bca15c11f36f3c5e8018649376d7e356a3a6f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Google Adsense Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Google AdSense']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Google AdSense']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54419,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Google Adsense Test Page\",\n\t\t\tRuntimeVariables.replace(\"Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.type(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"g\"));\n\t\tselenium.keyDown(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.keyUp(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.waitForVisible(\"//li[@title='Google AdSense']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Google AdSense']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"733bca15c11f36f3c5e8018649376d7e356a3a6f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertAdSensePresent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Google Adsense Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='AdChoices']\"));\n\t}","id":54420,"modified_method":"public void testAssertAdSensePresent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Google Adsense Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"733bca15c11f36f3c5e8018649376d7e356a3a6f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(AddAdSenseTest.class);\n\t\ttestSuite.addTestSuite(AssertAdSensePresentTest.class);\n\t\ttestSuite.addTestSuite(TearDownTest.class);\n\n\t\treturn testSuite;\n\t}","id":54421,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(AddAdSenseTest.class);\n\t\ttestSuite.addTestSuite(AssertAdSensePresentTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"733bca15c11f36f3c5e8018649376d7e356a3a6f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMBCategory() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name\");\n\t\tselenium.waitForElementPresent(\"link=Message Boards Test Page\");\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//td[1]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t}","id":54422,"modified_method":"public void testAddMBCategory() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name\");\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//td[1]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t}","commit_id":"deffabfe336cfd30f5e1f617ba60a38bec6a8f9b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUserGmail() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\");\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"usersn\",\n\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\tassertEquals(\"liferay.qa.testing.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\tassertEquals(\"userfn\",\n\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\tassertEquals(\"userln\", selenium.getValue(\"//input[@id='_125_lastName']\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\"Password\"));\n\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54423,"modified_method":"public void testAddUserGmail() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\");\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"User\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(\"usersn\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\t\t\tassertEquals(\"liferay.qa.testing.trunk@gmail.com\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\t\t\tassertEquals(\"userfn\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\t\t\tassertEquals(\"userln\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_lastName']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_passwordLink']\", \"Password\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\n\t\t\t\tboolean rememberMeChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\t\t\tif (rememberMeChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeChecked2 = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\t\t\tif (rememberMeChecked2) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\n\t\t\tcase 3:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"deffabfe336cfd30f5e1f617ba60a38bec6a8f9b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssignMembersSiteUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xpath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xpath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Memberships\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Memberships\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"link=Add Members\"));\n\t\t\t\tselenium.clickAt(\"link=Add Members\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Members\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"User\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@id='_174_toggle_id_users_admin_user_searchkeywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\t\t\tassertFalse(selenium.isChecked(\"//input[@name='_174_rowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@name='_174_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"User Selected\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_174_rowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.clickAt(\"link=Site Memberships\",\n\t\t\t\t\tRuntimeVariables.replace(\"Summary\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[1]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54424,"modified_method":"public void testAssignMembersSiteUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xpath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\"));\n\t\t\t\tselenium.clickAt(\"xpath=(//span[@title='Actions']/ul/li/strong/a/span)[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Memberships\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Memberships\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"link=Add Members\"));\n\t\t\t\tselenium.clickAt(\"link=Add Members\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Members\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"User\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@id='_174_toggle_id_users_admin_user_searchkeywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\t\t\tassertFalse(selenium.isChecked(\"//input[@name='_174_rowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@name='_174_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"User Selected\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_174_rowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.clickAt(\"link=Site Memberships\",\n\t\t\t\t\tRuntimeVariables.replace(\"Summary\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[1]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"deffabfe336cfd30f5e1f617ba60a38bec6a8f9b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureMBPortletEmailFromGmailServer()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name\");\n\t\tselenium.waitForElementPresent(\"link=Message Boards Test Page\");\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForVisible(\"link=Email From\");\n\t\tselenium.clickAt(\"link=Email From\",\n\t\t\tRuntimeVariables.replace(\"Email From\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_86_emailFromName']\",\n\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\tselenium.type(\"//input[@id='_86_emailFromAddress']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Administrator\",\n\t\t\tselenium.getValue(\"//input[@id='_86_emailFromName']\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_86_emailFromAddress']\"));\n\t}","id":54425,"modified_method":"public void testConfigureMBPortletEmailFromGmailServer()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name\");\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"link=Email From\");\n\t\tselenium.clickAt(\"link=Email From\",\n\t\t\tRuntimeVariables.replace(\"Email From\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.type(\"//input[@id='_86_emailFromName']\",\n\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\tselenium.type(\"//input[@id='_86_emailFromAddress']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Administrator\",\n\t\t\tselenium.getValue(\"//input[@id='_86_emailFromName']\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_86_emailFromAddress']\"));\n\t}","commit_id":"deffabfe336cfd30f5e1f617ba60a38bec6a8f9b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureServerAdministrationMail()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\tRuntimeVariables.replace(\"Server Administration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Mail\", RuntimeVariables.replace(\"Mail\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_137_pop3Host']\",\n\t\t\tRuntimeVariables.replace(\"pop.gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_pop3Port']\",\n\t\t\tRuntimeVariables.replace(\"995\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_137_pop3SecureCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_137_pop3SecureCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Use a Secure Network Connection\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_pop3SecureCheckbox']\"));\n\t\tselenium.type(\"//input[@id='_137_pop3User']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_pop3Password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tselenium.type(\"//input[@id='_137_smtpHost']\",\n\t\t\tRuntimeVariables.replace(\"smtp.gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_smtpPort']\",\n\t\t\tRuntimeVariables.replace(\"465\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_137_smtpSecureCheckbox']\"));\n\t\tselenium.click(\"//input[@id='_137_smtpSecureCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_smtpSecureCheckbox']\"));\n\t\tselenium.type(\"//input[@id='_137_smtpUser']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_smtpPassword']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"pop.gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_pop3Host']\"));\n\t\tassertEquals(\"995\", selenium.getValue(\"//input[@id='_137_pop3Port']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_pop3SecureCheckbox']\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_pop3User']\"));\n\t\tassertEquals(\"loveispatient\",\n\t\t\tselenium.getValue(\"//input[@id='_137_pop3Password']\"));\n\t\tassertEquals(\"smtp.gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_smtpHost']\"));\n\t\tassertEquals(\"465\", selenium.getValue(\"//input[@id='_137_smtpPort']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_smtpSecureCheckbox']\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_smtpUser']\"));\n\t\tassertEquals(\"loveispatient\",\n\t\t\tselenium.getValue(\"//input[@id='_137_smtpPassword']\"));\n\t}","id":54426,"modified_method":"public void testConfigureServerAdministrationMail()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\tRuntimeVariables.replace(\"Server Administration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Mail\", RuntimeVariables.replace(\"Mail\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_137_pop3Host']\",\n\t\t\tRuntimeVariables.replace(\"pop.gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_pop3Port']\",\n\t\t\tRuntimeVariables.replace(\"995\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_137_pop3SecureCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_137_pop3SecureCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Use a Secure Network Connection\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_pop3SecureCheckbox']\"));\n\t\tselenium.type(\"//input[@id='_137_pop3User']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_pop3Password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tselenium.type(\"//input[@id='_137_smtpHost']\",\n\t\t\tRuntimeVariables.replace(\"smtp.gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_smtpPort']\",\n\t\t\tRuntimeVariables.replace(\"465\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_137_smtpSecureCheckbox']\"));\n\t\tselenium.click(\"//input[@id='_137_smtpSecureCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_smtpSecureCheckbox']\"));\n\t\tselenium.type(\"//input[@id='_137_smtpUser']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_smtpPassword']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"pop.gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_pop3Host']\"));\n\t\tassertEquals(\"995\", selenium.getValue(\"//input[@id='_137_pop3Port']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_pop3SecureCheckbox']\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_pop3User']\"));\n\t\tassertEquals(\"loveispatient\",\n\t\t\tselenium.getValue(\"//input[@id='_137_pop3Password']\"));\n\t\tassertEquals(\"smtp.gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_smtpHost']\"));\n\t\tassertEquals(\"465\", selenium.getValue(\"//input[@id='_137_smtpPort']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_smtpSecureCheckbox']\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_smtpUser']\"));\n\t\tassertEquals(\"loveispatient\",\n\t\t\tselenium.getValue(\"//input[@id='_137_smtpPassword']\"));\n\t}","commit_id":"deffabfe336cfd30f5e1f617ba60a38bec6a8f9b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditPortalInstanceMailDomain() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"localhost\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tselenium.clickAt(\"//td[4]/a\", RuntimeVariables.replace(\"liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\tRuntimeVariables.replace(\"gmail.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"localhost\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"gmail.com\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t}","id":54427,"modified_method":"public void testEditPortalInstanceMailDomain() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"localhost\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tselenium.clickAt(\"//td[4]/a\", RuntimeVariables.replace(\"liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\tRuntimeVariables.replace(\"gmail.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"localhost\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"gmail.com\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t}","commit_id":"deffabfe336cfd30f5e1f617ba60a38bec6a8f9b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGmail_SignIn() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54428,"modified_method":"public void testGmail_SignIn() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\t\t\tif (rememberMeChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"deffabfe336cfd30f5e1f617ba60a38bec6a8f9b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPostNewMBCategoryThreadMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name\");\n\t\tselenium.waitForElementPresent(\"link=Message Boards Test Page\");\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"MB Message Subject\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__19_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"MB Message Body\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"MB Message Body\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"//a[@id='_19_TabsBack']\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back to MB Category Name\"));\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"), selenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"By: Joe Bloggs\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Message Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//span[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","id":54429,"modified_method":"public void testPostNewMBCategoryThreadMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name\");\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"MB Message Subject\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/styles.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"MB Message Body\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"MB Message Body\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"//a[@id='_19_TabsBack']\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back to MB Category Name\"));\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"), selenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"By: Joe Bloggs\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Message Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//span[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"deffabfe336cfd30f5e1f617ba60a38bec6a8f9b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(ConfigureServerAdministrationMailTest.class);\n\t\ttestSuite.addTestSuite(EditPortalInstanceMailDomainTest.class);\n\t\ttestSuite.addTestSuite(AddUserGmailTest.class);\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(AssignMembersSiteUserTest.class);\n\t\ttestSuite.addTestSuite(AddPageMBSiteTest.class);\n\t\ttestSuite.addTestSuite(AddPortletMBSiteTest.class);\n\t\ttestSuite.addTestSuite(ConfigureMBPortletEmailFromGmailServerTest.class);\n\t\ttestSuite.addTestSuite(AddMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SignInTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SubscribeMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(PostNewMBCategoryThreadMessageTest.class);\n\t\ttestSuite.addTestSuite(Gmail_ReplyMBCategoryThreadMessageEmailTest.class);\n\t\ttestSuite.addTestSuite(ViewMBCategoryThreadMessageEmailTest.class);\n\t\ttestSuite.addTestSuite(TearDownMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownServerTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\n\t\treturn testSuite;\n\t}","id":54430,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(ConfigureServerAdministrationMailTest.class);\n\t\ttestSuite.addTestSuite(EditPortalInstanceMailDomainTest.class);\n\t\ttestSuite.addTestSuite(AddUserGmailTest.class);\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(AddMembersSiteUserTest.class);\n\t\ttestSuite.addTestSuite(AddPageMBSiteTest.class);\n\t\ttestSuite.addTestSuite(AddPortletMBSiteTest.class);\n\t\ttestSuite.addTestSuite(ConfigureMBPortletEmailFromGmailServerTest.class);\n\t\ttestSuite.addTestSuite(AddMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SignInTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SubscribeMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(PostNewMBCategoryThreadMessageTest.class);\n\t\ttestSuite.addTestSuite(Gmail_ReplyMBCategoryThreadMessageEmailTest.class);\n\t\ttestSuite.addTestSuite(ViewMBCategoryThreadMessageEmailTest.class);\n\t\ttestSuite.addTestSuite(TearDownMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownServerTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"deffabfe336cfd30f5e1f617ba60a38bec6a8f9b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMBCategory() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/site-name\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Message Boards Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean category1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!category1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean category2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean category3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!category3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean category4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!category4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean category5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!category5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54431,"modified_method":"public void testTearDownMBCategory() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/site-name\");\n\t\t\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean category1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!category1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean category2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!category2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean category3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!category3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean category4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!category4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\t\tboolean category5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!category5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(@id,'mbCategoriesSearchContainer')]/table/tbody/tr/td/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move to the Recycle Bin')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The selected item was moved to the Recycle Bin. Undo\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\t\t\"//div[contains(@id,'mbCategoriesSearchContainer')]\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Recycle Bin\",\n\t\t\t\t\tRuntimeVariables.replace(\"Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean recycleBinEmpty = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='trash-empty-link']\");\n\n\t\t\t\tif (!recycleBinEmpty) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Empty the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='trash-empty-link']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='trash-empty-link']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Empty the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to empty the Recycle Bin?\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 7:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The Recycle Bin is empty.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"deffabfe336cfd30f5e1f617ba60a38bec6a8f9b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownServer() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\t\t\tRuntimeVariables.replace(\"Server Administration\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Mail\", RuntimeVariables.replace(\"Mail\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3Host']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3Port']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tboolean popSecureChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_137_pop3SecureCheckbox\");\n\n\t\t\t\tif (!popSecureChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_137_pop3SecureCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Use a Secure Network Connection\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3User']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3Password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpHost']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpPort']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tboolean smtpSecureChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_137_smtpSecureCheckbox\");\n\n\t\t\t\tif (!smtpSecureChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//input[@id='_137_smtpSecureCheckbox']\");\n\n\t\t\tcase 3:\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpUser']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpPassword']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.com\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\t\t\tRuntimeVariables.replace(\"localhost\"));\n\t\t\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_135_maxUsers']\",\n\t\t\t\t\tRuntimeVariables.replace(\"0\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54432,"modified_method":"public void testTearDownServer() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\t\t\tRuntimeVariables.replace(\"Server Administration\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Mail\", RuntimeVariables.replace(\"Mail\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3Host']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3Port']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tboolean popSecureChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_137_pop3SecureCheckbox\");\n\n\t\t\t\tif (!popSecureChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_137_pop3SecureCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Use a Secure Network Connection\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3User']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3Password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpHost']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpPort']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tboolean smtpSecureChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_137_smtpSecureCheckbox\");\n\n\t\t\t\tif (!smtpSecureChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//input[@id='_137_smtpSecureCheckbox']\");\n\n\t\t\tcase 3:\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpUser']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpPassword']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.com\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\t\t\tRuntimeVariables.replace(\"localhost\"));\n\t\t\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_135_maxUsers']\",\n\t\t\t\t\tRuntimeVariables.replace(\"0\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"deffabfe336cfd30f5e1f617ba60a38bec6a8f9b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Analog Clock Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Analog Clock Test Page\");\n\t\tselenium.clickAt(\"link=Analog Clock Test Page\",\n\t\t\tRuntimeVariables.replace(\"Analog Clock Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54433,"modified_method":"public void testAddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Analog Clock Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Analog Clock Test Page\");\n\t\tselenium.clickAt(\"link=Analog Clock Test Page\",\n\t\t\tRuntimeVariables.replace(\"Analog Clock Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"4a4efdc79379ac842c125d0c508c4e090a14ba23","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Analog Clock Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Analog Clock Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title='Analog Clock']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Analog Clock']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54434,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Analog Clock Test Page\",\n\t\t\tRuntimeVariables.replace(\"Analog Clock Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"a\"));\n\t\tselenium.waitForVisible(\"//div[@title='Analog Clock']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Analog Clock']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"4a4efdc79379ac842c125d0c508c4e090a14ba23","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(DeletePageTest.class);\n\n\t\treturn testSuite;\n\t}","id":54435,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"4a4efdc79379ac842c125d0c508c4e090a14ba23","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddJIRAPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Social Coding Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Social Coding Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title='JIRA']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='JIRA']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54436,"modified_method":"public void testAddJIRAPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Social Coding Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"j\"));\n\t\tselenium.waitForVisible(\"//li[@title='JIRA']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='JIRA']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"a9124b13bce6d96de07058cf476eb7aa52a3ea87","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSVNPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Social Coding Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Social Coding Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title='SVN']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='SVN']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54437,"modified_method":"public void testAddSVNPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Social Coding Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\t\tselenium.waitForVisible(\"//li[@title='SVN']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='SVN']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"a9124b13bce6d96de07058cf476eb7aa52a3ea87","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemovePortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Social Coding Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Social Coding Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to remove this component?\");\n\t\tselenium.waitForElementNotPresent(\"//section\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section\"));\n\t}","id":54438,"modified_method":"public void testRemovePortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Social Coding Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to remove this component?\");\n\t\tselenium.waitForElementNotPresent(\"//section\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section\"));\n\t}","commit_id":"a9124b13bce6d96de07058cf476eb7aa52a3ea87","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddJIRAPortletTest.class);\n\t\ttestSuite.addTestSuite(RemovePortletTest.class);\n\t\ttestSuite.addTestSuite(AddSVNPortletTest.class);\n\t\ttestSuite.addTestSuite(RemovePortletTest.class);\n\t\ttestSuite.addTestSuite(DeletePageTest.class);\n\n\t\treturn testSuite;\n\t}","id":54439,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddJIRAPortletTest.class);\n\t\ttestSuite.addTestSuite(RemovePortletTest.class);\n\t\ttestSuite.addTestSuite(AddSVNPortletTest.class);\n\t\ttestSuite.addTestSuite(RemovePortletTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"a9124b13bce6d96de07058cf476eb7aa52a3ea87","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNewWCWebContentAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Web Content')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Web Content')]\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_15_title_en_US']\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//span[.='Source']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC Web Content Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//h3[@class='asset-title']/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","id":54440,"modified_method":"public void testAddNewWCWebContentAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Web Content')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Web Content')]\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_15_title_en_US']\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Title\"));\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC Web Content Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//h3[@class='asset-title']/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCWebContent1DisplayPageAP1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent1 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//a[@id='_15_displayPageLink']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_displayPageLink']\",\n\t\t\t\t\"Display Page\"));\n\t\tselenium.clickAt(\"//a[@id='_15_displayPageLink']\",\n\t\t\tRuntimeVariables.replace(\"Display Page\"));\n\t\tselenium.waitForVisible(\"//button[@id='_15_chooseDisplayPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//button[@id='_15_chooseDisplayPage']\"));\n\t\tselenium.clickAt(\"//button[@id='_15_chooseDisplayPage']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/history_manager.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page1')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Asset Publisher Test Page1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page1')]\"));\n\t\tselenium.clickAt(\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page1')]\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page1\"));\n\t\tselenium.waitForText(\"//div[@id='_15_selectedPageMessage']\",\n\t\t\t\"Public Pages > Asset Publisher Test Page1\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Public Pages > Asset Publisher Test Page1\"),\n\t\t\tselenium.getText(\"//div[@id='_15_selectedPageMessage']\"));\n\t\tselenium.waitForElementNotPresent(\n\t\t\t\"//div[3]/span/span/button[contains(@class,'aui-buttonitem-disabled')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForVisible(\"//span[@id='_15_displayPageNameInput']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Public Pages > Asset Publisher Test Page1\"),\n\t\t\tselenium.getText(\"//span[@id='_15_displayPageNameInput']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent1 Title')]\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span[contains(.,'WC WebContent1 Title')]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(\"WC WebContent1 Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//p\", \"WC WebContent1 Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Content\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54441,"modified_method":"public void testAddWCWebContent1DisplayPageAP1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Title\"));\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent1 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//a[@id='_15_displayPageLink']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_displayPageLink']\",\n\t\t\t\t\"Display Page\"));\n\t\tselenium.clickAt(\"//a[@id='_15_displayPageLink']\",\n\t\t\tRuntimeVariables.replace(\"Display Page\"));\n\t\tselenium.waitForVisible(\"//button[@id='_15_chooseDisplayPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//button[@id='_15_chooseDisplayPage']\"));\n\t\tselenium.clickAt(\"//button[@id='_15_chooseDisplayPage']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/history_manager.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page1')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Asset Publisher Test Page1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page1')]\"));\n\t\tselenium.clickAt(\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page1')]\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page1\"));\n\t\tselenium.waitForText(\"//div[@id='_15_selectedPageMessage']\",\n\t\t\t\"Public Pages > Asset Publisher Test Page1\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Public Pages > Asset Publisher Test Page1\"),\n\t\t\tselenium.getText(\"//div[@id='_15_selectedPageMessage']\"));\n\t\tselenium.waitForElementNotPresent(\n\t\t\t\"//div[3]/span/span/button[contains(@class,'aui-buttonitem-disabled')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForVisible(\"//span[@id='_15_displayPageNameInput']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Public Pages > Asset Publisher Test Page1\"),\n\t\t\tselenium.getText(\"//span[@id='_15_displayPageNameInput']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent1 Title')]\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span[contains(.,'WC WebContent1 Title')]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(\"WC WebContent1 Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//p\", \"WC WebContent1 Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Content\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCWebContent2DisplayPageAP2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//a[@id='_15_displayPageLink']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_displayPageLink']\",\n\t\t\t\t\"Display Page\"));\n\t\tselenium.clickAt(\"//a[@id='_15_displayPageLink']\",\n\t\t\tRuntimeVariables.replace(\"Display Page\"));\n\t\tselenium.waitForVisible(\"//button[@id='_15_chooseDisplayPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//button[@id='_15_chooseDisplayPage']\"));\n\t\tselenium.clickAt(\"//button[@id='_15_chooseDisplayPage']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/history_manager.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page2')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Asset Publisher Test Page2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page2')]\"));\n\t\tselenium.clickAt(\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page2')]\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page2\"));\n\t\tselenium.waitForText(\"//div[@id='_15_selectedPageMessage']\",\n\t\t\t\"Public Pages > Asset Publisher Test Page2\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Public Pages > Asset Publisher Test Page2\"),\n\t\t\tselenium.getText(\"//div[@id='_15_selectedPageMessage']\"));\n\t\tselenium.waitForElementNotPresent(\n\t\t\t\"//div[3]/span/span/button[contains(@class,'aui-buttonitem-disabled')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForVisible(\"//span[@id='_15_displayPageNameInput']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Public Pages > Asset Publisher Test Page2\"),\n\t\t\tselenium.getText(\"//span[@id='_15_displayPageNameInput']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent2 Title')]\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span[contains(.,'WC WebContent2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(\"WC WebContent2 Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//p\", \"WC WebContent2 Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54442,"modified_method":"public void testAddWCWebContent2DisplayPageAP2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//a[@id='_15_displayPageLink']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_displayPageLink']\",\n\t\t\t\t\"Display Page\"));\n\t\tselenium.clickAt(\"//a[@id='_15_displayPageLink']\",\n\t\t\tRuntimeVariables.replace(\"Display Page\"));\n\t\tselenium.waitForVisible(\"//button[@id='_15_chooseDisplayPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//button[@id='_15_chooseDisplayPage']\"));\n\t\tselenium.clickAt(\"//button[@id='_15_chooseDisplayPage']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/history_manager.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page2')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Asset Publisher Test Page2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page2')]\"));\n\t\tselenium.clickAt(\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page2')]\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page2\"));\n\t\tselenium.waitForText(\"//div[@id='_15_selectedPageMessage']\",\n\t\t\t\"Public Pages > Asset Publisher Test Page2\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Public Pages > Asset Publisher Test Page2\"),\n\t\t\tselenium.getText(\"//div[@id='_15_selectedPageMessage']\"));\n\t\tselenium.waitForElementNotPresent(\n\t\t\t\"//div[3]/span/span/button[contains(@class,'aui-buttonitem-disabled')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForVisible(\"//span[@id='_15_displayPageNameInput']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Public Pages > Asset Publisher Test Page2\"),\n\t\t\tselenium.getText(\"//span[@id='_15_displayPageNameInput']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent2 Title')]\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span[contains(.,'WC WebContent2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(\"WC WebContent2 Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//p\", \"WC WebContent2 Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCWebContent2DisplayPageAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//a[@id='_15_displayPageLink']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_displayPageLink']\",\n\t\t\t\t\"Display Page\"));\n\t\tselenium.clickAt(\"//a[@id='_15_displayPageLink']\",\n\t\t\tRuntimeVariables.replace(\"Display Page\"));\n\t\tselenium.waitForVisible(\"//button[@id='_15_chooseDisplayPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//button[@id='_15_chooseDisplayPage']\"));\n\t\tselenium.clickAt(\"//button[@id='_15_chooseDisplayPage']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/history_manager.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Asset Publisher Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page')]\"));\n\t\tselenium.clickAt(\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page')]\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForText(\"//div[@id='_15_selectedPageMessage']\",\n\t\t\t\"Public Pages > Asset Publisher Test Page\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Public Pages > Asset Publisher Test Page\"),\n\t\t\tselenium.getText(\"//div[@id='_15_selectedPageMessage']\"));\n\t\tselenium.waitForElementNotPresent(\n\t\t\t\"//div[3]/span/span/button[contains(@class,'aui-buttonitem-disabled')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForVisible(\"//span[@id='_15_displayPageNameInput']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Public Pages > Asset Publisher Test Page\"),\n\t\t\tselenium.getText(\"//span[@id='_15_displayPageNameInput']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent2 Title')]\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span[contains(.,'WC WebContent2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(\"WC WebContent2 Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//p\", \"WC WebContent2 Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54443,"modified_method":"public void testAddWCWebContent2DisplayPageAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//a[@id='_15_displayPageLink']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_displayPageLink']\",\n\t\t\t\t\"Display Page\"));\n\t\tselenium.clickAt(\"//a[@id='_15_displayPageLink']\",\n\t\t\tRuntimeVariables.replace(\"Display Page\"));\n\t\tselenium.waitForVisible(\"//button[@id='_15_chooseDisplayPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//button[@id='_15_chooseDisplayPage']\"));\n\t\tselenium.clickAt(\"//button[@id='_15_chooseDisplayPage']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/history_manager.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Asset Publisher Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page')]\"));\n\t\tselenium.clickAt(\"//a[contains(@id,'PublicPages_layout_asset-publisher-test-page')]\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForText(\"//div[@id='_15_selectedPageMessage']\",\n\t\t\t\"Public Pages > Asset Publisher Test Page\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Public Pages > Asset Publisher Test Page\"),\n\t\t\tselenium.getText(\"//div[@id='_15_selectedPageMessage']\"));\n\t\tselenium.waitForElementNotPresent(\n\t\t\t\"//div[3]/span/span/button[contains(@class,'aui-buttonitem-disabled')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForVisible(\"//span[@id='_15_displayPageNameInput']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Public Pages > Asset Publisher Test Page\"),\n\t\t\tselenium.getText(\"//span[@id='_15_displayPageNameInput']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent2 Title')]\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span[contains(.,'WC WebContent2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(\"WC WebContent2 Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//p\", \"WC WebContent2 Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePageAP1PortletAPDisplayPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page1\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Show only assets with Asset Publisher Test Page 1 as its display page. \"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54444,"modified_method":"public void testConfigurePageAP1PortletAPDisplayPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page1\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Show only assets with Asset Publisher Test Page 1 as its display page. \"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePageAP1PortletAPSetAsDefault()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page1\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_defaultAssetPublisherCheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Set as the Default Asset Publisher for This Page\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54445,"modified_method":"public void testConfigurePageAP1PortletAPSetAsDefault()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page1\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_defaultAssetPublisherCheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Set as the Default Asset Publisher for This Page\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePageAP2PortletAPSetAsDefault()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page2\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_defaultAssetPublisherCheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Set as the Default Asset Publisher for This Page\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54446,"modified_method":"public void testConfigurePageAP2PortletAPSetAsDefault()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page2\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_defaultAssetPublisherCheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Set as the Default Asset Publisher for This Page\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAPScopeSourceGlobal()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"There are no results.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_defaultScope']\");\n\t\tselenium.select(\"//select[@id='_86_defaultScope']\",\n\t\t\tRuntimeVariables.replace(\"Global\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Global\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_defaultScope']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54447,"modified_method":"public void testConfigurePortletAPScopeSourceGlobal()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_defaultScope']\");\n\t\tselenium.select(\"//select[@id='_86_defaultScope']\",\n\t\t\tRuntimeVariables.replace(\"Global\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Global\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_defaultScope']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\n\t\t\t\tboolean enableCommentRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\n\t\t\t\tif (enableCommentRatingsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_enableCommentRatingsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enable Comment Ratings\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54448,"modified_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\t\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\t\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\n\t\t\t\tboolean enableCommentRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\n\t\t\t\tif (enableCommentRatingsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_enableCommentRatingsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enable Comment Ratings\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\");\n\n\t\t\t\tboolean enableCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\");\n\n\t\t\t\tif (enableCommentsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54449,"modified_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\t\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\t\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\");\n\n\t\t\t\tboolean enableCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\");\n\n\t\t\t\tif (enableCommentsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletShowMetadataViewCount()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableMetadataFields']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableMetadataFields']\",\n\t\t\tRuntimeVariables.replace(\"View Count\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Available to Current.']\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Available to Current.']\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentMetadataFields']\",\n\t\t\t\"View Count\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54450,"modified_method":"public void testConfigurePortletShowMetadataViewCount()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableMetadataFields']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableMetadataFields']\",\n\t\t\tRuntimeVariables.replace(\"View Count\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Available to Current.']\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Available to Current.']\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentMetadataFields']\",\n\t\t\t\"View Count\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteWCWebContentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.clickAt(\"//section\", RuntimeVariables.replace(\"Portlet\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='_86_ocerSearchContainer_col-type_row-1']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-type_row-1']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-title_row-1']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-4_row-1']/span/a/img\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-success']\",\n\t\t\t\"You have successfully updated the setup.\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC Web Content Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC Web Content Content\"));\n\t}","id":54451,"modified_method":"public void testDeleteWCWebContentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='_86_ocerSearchContainer_col-type_row-1']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-type_row-1']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-title_row-1']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-4_row-1']/span/a/img\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-success']\",\n\t\t\t\"You have successfully updated the setup.\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC Web Content Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC Web Content Content\"));\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectExistingWCWebContentAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.clickAt(\"//section\", RuntimeVariables.replace(\"Portlet\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//a[@id='_86_tiym_menuButton']/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//a[@id='_86_tiym_menuButton']/span\"));\n\t\tselenium.clickAt(\"//a[@id='_86_tiym_menuButton']/span\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Web Content')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Web Content')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Web Content')]/a\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//iframe[@id='_86_selectAsset']\");\n\t\tselenium.selectFrame(\"//iframe[@id='_86_selectAsset']\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-title_row-1']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-type_row-1']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","id":54452,"modified_method":"public void testSelectExistingWCWebContentAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//a[@id='_86_tiym_menuButton']/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//a[@id='_86_tiym_menuButton']/span\"));\n\t\tselenium.clickAt(\"//a[@id='_86_tiym_menuButton']/span\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Web Content')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Web Content')]\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[@id='_86_selectAsset']\");\n\t\tselenium.selectFrame(\"//iframe[@id='_86_selectAsset']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/store.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-title_row-1']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-type_row-1']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWCWebContent1DisplayPageAP1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page1\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent2 Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent2 Content\"));\n\t\tselenium.clickAt(\"//h3[@class='asset-title']/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t}","id":54453,"modified_method":"public void testViewWCWebContent1DisplayPageAP1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page1\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//h3[@class='asset-title']/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent2 Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent2 Content\"));\n\t\tselenium.clickAt(\"//h3[@class='asset-title']/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWCWebContent2DisplayPageAP2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page2\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='asset-summary'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Content\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='asset-summary'])[2]\"));\n\t\tselenium.clickAt(\"xPath=(//h3[@class='asset-title']/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page2\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[2]\"));\n\t\tselenium.clickAt(\"xPath=(//h3[@class='asset-title']/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t}","id":54454,"modified_method":"public void testViewWCWebContent2DisplayPageAP2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page2\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"xPath=(//h3[@class='asset-title']/a)[1]\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='asset-summary'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Content\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='asset-summary'])[2]\"));\n\t\tselenium.clickAt(\"xPath=(//h3[@class='asset-title']/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//h1[@class='header-title']/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page2\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"xPath=(//h3[@class='asset-title']/a)[2]\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"xPath=(//h3[@class='asset-title']/a)[2]\"));\n\t\tselenium.clickAt(\"xPath=(//h3[@class='asset-title']/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//h1[@class='header-title']/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWCWebContent2DisplayPageAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent1 Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent1 Content\"));\n\t\tselenium.clickAt(\"//h3[@class='asset-title']/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t}","id":54455,"modified_method":"public void testViewWCWebContent2DisplayPageAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//h3[@class='asset-title']/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent1 Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent1 Content\"));\n\t\tselenium.clickAt(\"//h3[@class='asset-title']/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//h1[@class='header-title']/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t}","commit_id":"3341a3e821ae3ce051fb67032f36ca313a04c751","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageTT() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Test Transaction Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Test Transaction Page\");\n\t\tselenium.clickAt(\"link=Test Transaction Page\",\n\t\t\tRuntimeVariables.replace(\"Test Transaction Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54456,"modified_method":"public void testAddPageTT() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Test Transaction Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Test Transaction Test Page\");\n\t\tselenium.clickAt(\"link=Test Transaction Test Page\",\n\t\t\tRuntimeVariables.replace(\"Test Transaction Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"28547b46fac399c60b69e2333a2f3b2c4ffa86a5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletTT() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Test Transaction Page\");\n\t\tselenium.clickAt(\"link=Test Transaction Page\",\n\t\t\tRuntimeVariables.replace(\"Test Transaction Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Test Transaction']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Test Transaction']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54457,"modified_method":"public void testAddPortletTT() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Test Transaction Test Page\",\n\t\t\tRuntimeVariables.replace(\"Test Transaction Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"t\"));\n\t\tselenium.waitForVisible(\"//li[@title='Test Transaction']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Test Transaction']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"28547b46fac399c60b69e2333a2f3b2c4ffa86a5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewTransaction() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Test Transaction Page\");\n\t\tselenium.clickAt(\"link=Test Transaction Page\",\n\t\t\tRuntimeVariables.replace(\"Test Transaction Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//p[1]\",\n\t\t\t\t\"BarLocalServiceUtil.addBar_Success=PASSED\"));\n\t\tassertTrue(selenium.isPartialText(\"//p[1]\",\n\t\t\t\t\"BarLocalServiceUtil.addBarAndClassName_PortalRollback=PASSED\"));\n\t\tassertTrue(selenium.isPartialText(\"//p[1]\",\n\t\t\t\t\"BarLocalServiceUtil.addBarAndClassName_PortletRollback=PASSED\"));\n\t\tassertTrue(selenium.isPartialText(\"//p[2]\",\n\t\t\t\t\"PortalServiceUtil.testAddClassNameAndTestTransactionPortletBar_Success=PASSED\"));\n\t\tassertTrue(selenium.isPartialText(\"//p[2]\",\n\t\t\t\t\"PortalServiceUtil.testAddClassNameAndTestTransactionPortletBar_PortalRollback=PASSED\"));\n\t\tassertTrue(selenium.isPartialText(\"//p[2]\",\n\t\t\t\t\"PortletServiceUtil.testAddClassNameAndTestTransactionPortletBar_PortletRollback=PASSED\"));\n\t}","id":54458,"modified_method":"public void testViewTransaction() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Test Transaction Test Page\",\n\t\t\tRuntimeVariables.replace(\"Test Transaction Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//p[1]\", \"BarLocalServiceUtil\"));\n\t\tassertTrue(selenium.isPartialText(\"//p[1]\", \"addBar_Success=PASSED\"));\n\t\tassertTrue(selenium.isPartialText(\"//p[1]\",\n\t\t\t\t\"addBarAndClassName_PortalRollback=PASSED\"));\n\t\tassertTrue(selenium.isPartialText(\"//p[1]\",\n\t\t\t\t\"addBarAndClassName_PortletRollback=PASSED\"));\n\t\tassertTrue(selenium.isPartialText(\"//p[2]\", \"PortalServiceUtil\"));\n\t\tassertTrue(selenium.isPartialText(\"//p[2]\",\n\t\t\t\t\"testAddClassNameAndTestTransactionPortletBar_Success=PASSED\"));\n\t\tassertTrue(selenium.isPartialText(\"//p[2]\",\n\t\t\t\t\"testAddClassNameAndTestTransactionPortletBar_PortalRollback=PASSED\"));\n\t\tassertTrue(selenium.isPartialText(\"//p[2]\",\n\t\t\t\t\"testAddClassNameAndTestTransactionPortletBar_PortletRollback=PASSED\"));\n\t}","commit_id":"28547b46fac399c60b69e2333a2f3b2c4ffa86a5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNewBlogsEntryAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Add New']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_33_title']\");\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//span[.='Source']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__33_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__33_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Publish']\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//h3[@class='asset-title']/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","id":54459,"modified_method":"public void testAddNewBlogsEntryAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Blogs Entry')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Blogs Entry')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Blogs Entry')]\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_33_title']\");\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//span[.='Source']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__33_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__33_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Publish']\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//h3[@class='asset-title']/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","commit_id":"2c635aea46a67aab1b03c66ed2242a2de8582f4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAssetLinkBehaviorShowFullContent()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@id='assetPublisherDisplaySettingsPanel']/div[2]/fieldset[1]/div/span[5]/span/label\");\n\t\tselenium.select(\"//select[@id='_86_assetLinkBehavior']\",\n\t\t\tRuntimeVariables.replace(\"Show Full Content\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Show Full Content\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_assetLinkBehavior']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54460,"modified_method":"public void testConfigurePortletAssetLinkBehaviorShowFullContent()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@id='assetPublisherDisplaySettingsPanel']/div[2]/fieldset[1]/div/span[5]/span/label\");\n\t\tselenium.select(\"//select[@id='_86_assetLinkBehavior']\",\n\t\t\tRuntimeVariables.replace(\"Show Full Content\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Show Full Content\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_assetLinkBehavior']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"2c635aea46a67aab1b03c66ed2242a2de8582f4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentRatingsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comment Ratings\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54461,"modified_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentRatingsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comment Ratings\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"2c635aea46a67aab1b03c66ed2242a2de8582f4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_enableCommentsCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54462,"modified_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_enableCommentsCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"2c635aea46a67aab1b03c66ed2242a2de8582f4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletShowMetadataViewCount()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableMetadataFields']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableMetadataFields']\",\n\t\t\tRuntimeVariables.replace(\"View Count\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\");\n\t\tselenium.clickAt(\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentMetadataFields']\",\n\t\t\t\"View Count\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54463,"modified_method":"public void testConfigurePortletShowMetadataViewCount()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableMetadataFields']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableMetadataFields']\",\n\t\t\tRuntimeVariables.replace(\"View Count\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\");\n\t\tselenium.clickAt(\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentMetadataFields']\",\n\t\t\t\"View Count\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"2c635aea46a67aab1b03c66ed2242a2de8582f4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteBlogsEntry2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry2 Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tselenium.clickAt(\"//h3[@class='asset-title']/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//h1[@class='header-title']\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertEquals(RuntimeVariables.replace(\"The asset could not be found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-error']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry2 Title\"));\n\t}","id":54464,"modified_method":"public void testDeleteBlogsEntry2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry2 Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tselenium.clickAt(\"//h3[@class='asset-title']/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//h1[@class='header-title']\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Move to the Recycle Bin\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"The asset could not be found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-error']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']/form\",\n\t\t\t\t\"The selected item was moved to the Recycle Bin.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry2 Title\"));\n\t}","commit_id":"2c635aea46a67aab1b03c66ed2242a2de8582f4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteBlogsEntryAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","id":54465,"modified_method":"public void testDeleteBlogsEntryAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to delete this? It will be deleted immediately.\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","commit_id":"2c635aea46a67aab1b03c66ed2242a2de8582f4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectExistingBlogsEntryAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select Existing\"),\n\t\t\tselenium.getText(\"//span[@title='Select Existing']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Select Existing']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Select Existing\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blogs Entry')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blogs Entry')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blogs Entry')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Publisher Test Page\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","id":54466,"modified_method":"public void testSelectExistingBlogsEntryAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select Existing\"),\n\t\t\tselenium.getText(\"//span[@title='Select Existing']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Select Existing']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Select Existing\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blogs Entry')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blogs Entry')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blogs Entry')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Publisher Test Page\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","commit_id":"2c635aea46a67aab1b03c66ed2242a2de8582f4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectExistingBlogsEntryAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select Existing\"),\n\t\t\tselenium.getText(\"//span[@title='Select Existing']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Select Existing']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Select Existing\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blogs Entry')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blogs Entry')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blogs Entry')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Publisher Test Page\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","id":54467,"modified_method":"public void testSelectExistingBlogsEntryAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select Existing\"),\n\t\t\tselenium.getText(\"//span[@title='Select Existing']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Select Existing']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Select Existing\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blogs Entry')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blogs Entry')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blogs Entry')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Publisher Test Page\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","commit_id":"2c635aea46a67aab1b03c66ed2242a2de8582f4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownBlogsEntryAP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean blogsEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean blogsEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean blogsEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean blogsEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean blogsEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54468,"modified_method":"public void testTearDownBlogsEntryAP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean blogsEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean blogsEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean blogsEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean blogsEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean blogsEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Recycle Bin\",\n\t\t\t\t\tRuntimeVariables.replace(\"Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean blogsEntryPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!blogsEntryPresent) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Empty the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='trash-empty-link']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='trash-empty-link']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Empty the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to empty the Recycle Bin[\\\\s\\\\S]$\"));\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"2c635aea46a67aab1b03c66ed2242a2de8582f4b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageDDLForm() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Form Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Dynamic Data List Form Test Page\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Form Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54469,"modified_method":"public void testAddPageDDLForm() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Form Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Dynamic Data List Form Test Page\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Form Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"8862a8681bf3553d7723cd36512b5f3f0d278165","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDDLForm2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Dynamic Data List Form Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Dynamic Data List Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@title='Dynamic Data List Form']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Dynamic Data List Form']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Form\"));\n\t\tselenium.waitForVisible(\"//div[1]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/div/section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","id":54470,"modified_method":"public void testAddPortletDDLForm2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Form Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.waitForVisible(\"//div[@title='Dynamic Data List Form']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Dynamic Data List Form']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[1]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/div/section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Dynamic Data List Form\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='portlet-title-text'])\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Dynamic Data List Form\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='portlet-title-text'])[2]\"));\n\t}","commit_id":"8862a8681bf3553d7723cd36512b5f3f0d278165","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDDLForm3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Dynamic Data List Form Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Dynamic Data List Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@title='Dynamic Data List Form']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Dynamic Data List Form']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Form\"));\n\t\tselenium.waitForVisible(\"//div[1]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/div/section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","id":54471,"modified_method":"public void testAddPortletDDLForm3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Form Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.waitForVisible(\"//div[@title='Dynamic Data List Form']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Dynamic Data List Form']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[1]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/div/section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Dynamic Data List Form\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='portlet-title-text'])\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Dynamic Data List Form\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='portlet-title-text'])[2]\"));\n\t\tselenium.waitForVisible(\"//div[3]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Dynamic Data List Form\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='portlet-title-text'])[3]\"));\n\t}","commit_id":"8862a8681bf3553d7723cd36512b5f3f0d278165","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageDDLFormTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDDLForm1Test.class);\n\t\ttestSuite.addTestSuite(AddPortletDDLForm2Test.class);\n\t\ttestSuite.addTestSuite(AddPortletDDLForm3Test.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","id":54472,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageDDLFormTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDDLFormTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDDLForm2Test.class);\n\t\ttestSuite.addTestSuite(AddPortletDDLForm3Test.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"8862a8681bf3553d7723cd36512b5f3f0d278165","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDDLForm() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Dynamic Data List Form Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Dynamic Data List Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@title='Dynamic Data List Form']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Dynamic Data List Form']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Form\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54473,"modified_method":"public void testAddPortletDDLForm() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Form Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.waitForVisible(\"//div[@title='Dynamic Data List Form']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Dynamic Data List Form']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"8862a8681bf3553d7723cd36512b5f3f0d278165","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(AddPortletDDLFormTests.suite());\n\t\ttestSuite.addTest(AddPortletDDLFormMultipleTests.suite());\n\t\ttestSuite.addTest(RemotePortletDDLFormTests.suite());\n\n\t\treturn testSuite;\n\t}","id":54474,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(AddPortletDDLFormTests.suite());\n\t\ttestSuite.addTest(AddPortletDDLFormMultipleTests.suite());\n\t\ttestSuite.addTest(RemovePortletDDLFormTests.suite());\n\n\t\treturn testSuite;\n\t}","commit_id":"8862a8681bf3553d7723cd36512b5f3f0d278165","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageAMS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Asset Management System Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Asset Management System Test Page\");\n\t\tselenium.clickAt(\"link=Asset Management System Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Management System Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54475,"modified_method":"public void testAddPageAMS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Asset Management System Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Asset Management System Test Page\");\n\t\tselenium.clickAt(\"link=Asset Management System Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Management System Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"c47f61f7440995b433d82892c570b4b1954c7cef","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletAMSDuplicate() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Management System Test Page\");\n\t\tselenium.clickAt(\"link=Asset Management System Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"layout_configuration_content\");\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"a\"));\n\t\tselenium.waitForVisible(\"//div[@title='Asset Management System']\");\n\t\tassertFalse(selenium.isVisible(\n\t\t\t\t\"//div[@title='Asset Management System']/p/a\"));\n\t}","id":54476,"modified_method":"public void testAddPortletAMSDuplicate() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Management System Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Management System Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"a\"));\n\t\tselenium.waitForVisible(\"//div[@title='Asset Management System']\");\n\t\tassertFalse(selenium.isVisible(\n\t\t\t\t\"//div[@title='Asset Management System']/p/a\"));\n\t}","commit_id":"c47f61f7440995b433d82892c570b4b1954c7cef","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletAMS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Management System Test Page\");\n\t\tselenium.clickAt(\"link=Asset Management System Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Management System Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@title='Asset Management System']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Asset Management System']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54477,"modified_method":"public void testAddPortletAMS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Management System Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Management System Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"a\"));\n\t\tselenium.waitForVisible(\"//div[@title='Asset Management System']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Asset Management System']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"c47f61f7440995b433d82892c570b4b1954c7cef","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddGadget() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=OpenSocial Gadget Publisher\");\n\t\tselenium.clickAt(\"link=OpenSocial Gadget Publisher\",\n\t\t\tRuntimeVariables.replace(\"OpenSocial Gadget Publisher\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//input[@value='Publish Gadget']\");\n\t\tselenium.clickAt(\"//input[@value='Publish Gadget']\",\n\t\t\tRuntimeVariables.replace(\"Publish Gadget\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//input[@id='_1_WAR_opensocialportlet_url']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_opensocialportlet_url']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"http://opensocial-resources.googlecode.com/svn/samples/tutorial/tags/api-0.8/helloworld.xml\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hello World!\"),\n\t\t\tselenium.getText(\"//tr[3]/td\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"http://opensocial-resources.googlecode.com/svn/samples/tutorial/tags/api-0.8/helloworld.xml\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","id":54478,"modified_method":"public void testAddGadget() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=OpenSocial Gadget Publisher\",\n\t\t\tRuntimeVariables.replace(\"OpenSocial Gadget Publisher\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//input[@value='Publish Gadget']\");\n\t\tselenium.clickAt(\"//input[@value='Publish Gadget']\",\n\t\t\tRuntimeVariables.replace(\"Publish Gadget\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_1_WAR_opensocialportlet_url']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"http://opensocial-resources.googlecode.com/svn/samples/tutorial/tags/api-0.8/helloworld.xml\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hello World!\"),\n\t\t\tselenium.getText(\"//tr[3]/td\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"http://opensocial-resources.googlecode.com/svn/samples/tutorial/tags/api-0.8/helloworld.xml\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","commit_id":"ed158aeab4f5ce77e8b2551123b4176e509e520f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletOpenSocialGadget() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=OpenSocial Test Page\");\n\t\tselenium.clickAt(\"link=OpenSocial Test Page\",\n\t\t\tRuntimeVariables.replace(\"OpenSocial Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Hello World!']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Hello World!']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForElementPresent(\"//header/h1/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Hello World!\"),\n\t\t\tselenium.getText(\"//header/h1/span\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectFrame(\"//iframe[@class='aui-gadget']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Hello, world!\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54479,"modified_method":"public void testAddPortletOpenSocialGadget() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=OpenSocial Test Page\",\n\t\t\tRuntimeVariables.replace(\"OpenSocial Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"h\"));\n\t\tselenium.waitForVisible(\"//li[@title='Hello World!']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Hello World!']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForElementPresent(\"//header/h1/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Hello World!\"),\n\t\t\tselenium.getText(\"//header/h1/span\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectFrame(\"//iframe[@class='aui-gadget']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Hello, world!\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"ed158aeab4f5ce77e8b2551123b4176e509e520f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddGadgetTest.class);\n\t\ttestSuite.addTestSuite(AddPortletOpenSocialGadgetTest.class);\n\t\ttestSuite.addTestSuite(DeletePageTest.class);\n\n\t\treturn testSuite;\n\t}","id":54480,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddGadgetTest.class);\n\t\ttestSuite.addTestSuite(AddPortletOpenSocialGadgetTest.class);\n\t\ttestSuite.addTestSuite(TearDownGadgetTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"ed158aeab4f5ce77e8b2551123b4176e509e520f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageED() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Events Display Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Events Display Test Page\");\n\t\tselenium.clickAt(\"link=Events Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Events Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54481,"modified_method":"public void testAddPageED() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Events Display Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Events Display Test Page\");\n\t\tselenium.clickAt(\"link=Events Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Events Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"e7307a31ba32c0752dc6973ee91db93395607574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletEDDuplicate() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Events Display Test Page\");\n\t\tselenium.clickAt(\"link=Events Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Events Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title=\\\"Events Display\\\"]\");\n\t\tassertFalse(selenium.isVisible(\"//div[@title=\\\"Events Display\\\"]/p/a\"));\n\t}","id":54482,"modified_method":"public void testAddPortletEDDuplicate() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Events Display Test Page\");\n\t\tselenium.clickAt(\"link=Events Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Events Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"e\"));\n\t\tselenium.waitForElementPresent(\"//div[@title=\\\"Events Display\\\"]\");\n\t\tassertFalse(selenium.isVisible(\"//div[@title=\\\"Events Display\\\"]/p/a\"));\n\t}","commit_id":"e7307a31ba32c0752dc6973ee91db93395607574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletED() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Events Display Test Page\");\n\t\tselenium.clickAt(\"link=Events Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Events Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title=\\\"Events Display\\\"]/p/a\");\n\t\tselenium.clickAt(\"//div[@title=\\\"Events Display\\\"]/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54483,"modified_method":"public void testAddPortletED() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Events Display Test Page\");\n\t\tselenium.clickAt(\"link=Events Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Events Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"e\"));\n\t\tselenium.waitForVisible(\"//div[@title='Events Display']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Events Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"e7307a31ba32c0752dc6973ee91db93395607574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Flash Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Flash Test Page\");\n\t\tselenium.clickAt(\"link=Flash Test Page\",\n\t\t\tRuntimeVariables.replace(\"Flash Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54484,"modified_method":"public void testAddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Flash Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Flash Test Page\");\n\t\tselenium.clickAt(\"link=Flash Test Page\",\n\t\t\tRuntimeVariables.replace(\"Flash Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"fa2b3e039b969b98f570fdaa008479730f084867","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Flash Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Flash Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title='Flash']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Flash']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54485,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Flash Test Page\");\n\t\tselenium.clickAt(\"link=Flash Test Page\",\n\t\t\tRuntimeVariables.replace(\"Flash Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"f\"));\n\t\tselenium.waitForVisible(\"//div[@title='Flash']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Flash']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"fa2b3e039b969b98f570fdaa008479730f084867","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(DeletePageTest.class);\n\n\t\treturn testSuite;\n\t}","id":54486,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"fa2b3e039b969b98f570fdaa008479730f084867","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Gospel For Asia Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Gospel For Asia Test Page\");\n\t\tselenium.clickAt(\"link=Gospel For Asia Test Page\",\n\t\t\tRuntimeVariables.replace(\"Gospel For Asia Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54487,"modified_method":"public void testAddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Gospel For Asia Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Gospel For Asia Test Page\");\n\t\tselenium.clickAt(\"link=Gospel For Asia Test Page\",\n\t\t\tRuntimeVariables.replace(\"Gospel For Asia Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"90e478553b5fd219ec8ae41d77831464f730f927","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Gospel For Asia Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Gospel For Asia Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title='Gospel for Asia']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Gospel for Asia']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54488,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Gospel For Asia Test Page\");\n\t\tselenium.clickAt(\"link=Gospel For Asia Test Page\",\n\t\t\tRuntimeVariables.replace(\"Gospel For Asia Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"g\"));\n\t\tselenium.waitForVisible(\"//div[@title='Gospel for Asia']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Gospel for Asia']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"90e478553b5fd219ec8ae41d77831464f730f927","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(DeletePageTest.class);\n\n\t\treturn testSuite;\n\t}","id":54489,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"90e478553b5fd219ec8ae41d77831464f730f927","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Bible Gateway Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Bible Gateway Test Page\");\n\t\tselenium.clickAt(\"link=Bible Gateway Test Page\",\n\t\t\tRuntimeVariables.replace(\"Bible Gateway Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54490,"modified_method":"public void testAddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Bible Gateway Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Bible Gateway Test Page\");\n\t\tselenium.clickAt(\"link=Bible Gateway Test Page\",\n\t\t\tRuntimeVariables.replace(\"Bible Gateway Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"5de54840ccf92f62f6c7031b4e8eda7072474430","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Bible Gateway Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Bible Gateway Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title='Bible Gateway']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Bible Gateway']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Bible Gateway\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54491,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Bible Gateway Test Page\",\n\t\t\tRuntimeVariables.replace(\"Bible Gateway Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.waitForVisible(\"//div[@title='Bible Gateway']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Bible Gateway']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"5de54840ccf92f62f6c7031b4e8eda7072474430","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(DeletePageTest.class);\n\n\t\treturn testSuite;\n\t}","id":54492,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"5de54840ccf92f62f6c7031b4e8eda7072474430","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBMFolder() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded align-right null']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Folder\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded align-right null']/ul/li[2]/a\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded align-right null']/ul/li[2]/a\");\n\t\tselenium.waitForVisible(\"//input[@id='_28_name']\");\n\t\tselenium.type(\"//input[@id='_28_name']\",\n\t\t\tRuntimeVariables.replace(\"BM Folder Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Name\"),\n\t\t\tselenium.getText(\"//td[1]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t}","id":54493,"modified_method":"public void testAddBMFolder() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Folder\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded align-right null']/ul/li/a[contains(.,'Add Folder')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded align-right null']/ul/li/a[contains(.,'Add Folder')]\",\n\t\t\tRuntimeVariables.replace(\"Add Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_28_name']\",\n\t\t\tRuntimeVariables.replace(\"BM Folder Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Name\"),\n\t\t\tselenium.getText(\"//td[1]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t}","commit_id":"b9c744b090650f554a2ef1d44f3aca50ea55a934","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNewBMFolderBookmarkAPActions() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Add New']/ul/li/strong/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks Entry\"));\n\t\t\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\t\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\t\t\tselenium.waitForVisible(\"//input[@value='Select']\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"title=Bookmarks\");\n\n\t\t\t\tboolean choose1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/input\");\n\n\t\t\t\tif (choose1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.close();\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\t\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean choose2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/input\");\n\n\t\t\t\tif (!choose2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.waitForElementPresent(\"//input[@value='Choose']\");\n\t\t\t\tselenium.click(\"//input[@value='Choose']\");\n\n\t\t\tcase 3:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\t\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\t\t\tselenium.waitForText(\"//a[@id='_28_folderName']\",\n\t\t\t\t\t\"BM Folder Name\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Name\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_28_folderName']\"));\n\t\t\t\tselenium.type(\"//input[@id='_28_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"BM Folder Bookmark Name\"));\n\t\t\t\tselenium.type(\"//input[@id='_28_url']\",\n\t\t\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.waitForVisible(\"//h3[@class='asset-title']/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54494,"modified_method":"public void testAddNewBMFolderBookmarkAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Bookmarks Entry')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Bookmarks Entry')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Bookmarks Entry')]\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Entry\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Select']\");\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"title=Bookmarks\");\n\t\tselenium.waitForVisible(\"//input[@value='Choose']\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForText(\"//a[@id='_28_folderName']\", \"BM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Name\"),\n\t\t\tselenium.getText(\"//a[@id='_28_folderName']\"));\n\t\tselenium.type(\"//input[@id='_28_name']\",\n\t\t\tRuntimeVariables.replace(\"BM Folder Bookmark Name\"));\n\t\tselenium.type(\"//input[@id='_28_url']\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//h3[@class='asset-title']/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t}","commit_id":"b9c744b090650f554a2ef1d44f3aca50ea55a934","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteBMFolderBookmarkAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"BM Folder Bookmark Name\"));\n\t}","id":54495,"modified_method":"public void testDeleteBMFolderBookmarkAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"BM Folder Bookmark Name\"));\n\t}","commit_id":"b9c744b090650f554a2ef1d44f3aca50ea55a934","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectExistingBMFolderBookmarkAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"BM Folder Bookmark Name\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\n\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select Existing\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Select Existing']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select Existing\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Bookmarks Entry')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Bookmarks Entry')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Bookmarks Entry')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"BM Folder Bookmark Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t}","id":54496,"modified_method":"public void testSelectExistingBMFolderBookmarkAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select Existing\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Select Existing']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select Existing\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Bookmarks Entry')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Bookmarks Entry')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Bookmarks Entry')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"BM Folder Bookmark Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t}","commit_id":"b9c744b090650f554a2ef1d44f3aca50ea55a934","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownBMEntry() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean bookmarksEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean bookmarksEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean bookmarksEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean bookmarksEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean bookmarksEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54497,"modified_method":"public void testTearDownBMEntry() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean bookmarksEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!bookmarksEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean bookmarksEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!bookmarksEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean bookmarksEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!bookmarksEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean bookmarksEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!bookmarksEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean bookmarksEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!bookmarksEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b9c744b090650f554a2ef1d44f3aca50ea55a934","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownBMFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean bookmarksFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean bookmarksFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean bookmarksFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean bookmarksFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean bookmarksFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!bookmarksFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54498,"modified_method":"public void testTearDownBMFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Bookmarks Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean bookmarksFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!bookmarksFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean bookmarksFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!bookmarksFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean bookmarksFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!bookmarksFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean bookmarksFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!bookmarksFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean bookmarksFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!bookmarksFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[4]/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b9c744b090650f554a2ef1d44f3aca50ea55a934","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletAbstractsBMFolderBookmarkAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tselenium.clickAt(\"//h3[@class='asset-title']/a\",\n\t\t\tRuntimeVariables.replace(\"BM Folder Bookmark Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"BM Folder Bookmark Name (http://www.liferay.com)(Opens New Window)\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=http://www.liferay.com\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Liferay']\"));\n\t}","id":54499,"modified_method":"public void testViewPortletAbstractsBMFolderBookmarkAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tselenium.clickAt(\"//h3[@class='asset-title']/a\",\n\t\t\tRuntimeVariables.replace(\"BM Folder Bookmark Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"BM Folder Bookmark Name (http://www.liferay.com)(Opens New Window)\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=http://www.liferay.com\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//img[@alt='Liferay']\"));\n\t}","commit_id":"b9c744b090650f554a2ef1d44f3aca50ea55a934","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletFullContentBMFolderBookmarkAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"BM Folder Bookmark Name (http://www.liferay.com)(Opens New Window)\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=http://www.liferay.com\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Liferay']\"));\n\t}","id":54500,"modified_method":"public void testViewPortletFullContentBMFolderBookmarkAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"BM Folder Bookmark Name (http://www.liferay.com)(Opens New Window)\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=http://www.liferay.com\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//img[@alt='Liferay']\"));\n\t}","commit_id":"b9c744b090650f554a2ef1d44f3aca50ea55a934","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletTableBMFolderBookmarkAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\"//th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"BM Folder Bookmark Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"BM Folder Bookmark Name (http://www.liferay.com)(Opens New Window)\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=http://www.liferay.com\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Liferay']\"));\n\t}","id":54501,"modified_method":"public void testViewPortletTableBMFolderBookmarkAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\"//th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"BM Folder Bookmark Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"BM Folder Bookmark Name (http://www.liferay.com)(Opens New Window)\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=http://www.liferay.com\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//img[@alt='Liferay']\"));\n\t}","commit_id":"b9c744b090650f554a2ef1d44f3aca50ea55a934","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletTitleListBMFolderBookmarkAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//span/a/span\"));\n\t\tselenium.clickAt(\"//span/a/span\",\n\t\t\tRuntimeVariables.replace(\"BM Folder Bookmark Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"BM Folder Bookmark Name (http://www.liferay.com)(Opens New Window)\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=http://www.liferay.com\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Liferay']\"));\n\t}","id":54502,"modified_method":"public void testViewPortletTitleListBMFolderBookmarkAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//li[@class='title-list bookmark']/span/a/span\"));\n\t\tselenium.clickAt(\"//li[@class='title-list bookmark']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"BM Folder Bookmark Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"BM Folder Bookmark Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"BM Folder Bookmark Name (http://www.liferay.com)(Opens New Window)\"),\n\t\t\tselenium.getText(\"//div[@class='asset-content']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=http://www.liferay.com\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//img[@alt='Liferay']\"));\n\t}","commit_id":"b9c744b090650f554a2ef1d44f3aca50ea55a934","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletSampleWAPPhoto() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Sample WAP Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sample WAP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//li[@title='Sample WAP Photo Gallery']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Sample WAP Photo Gallery']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54503,"modified_method":"public void testAddPortletSampleWAPPhoto() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Sample WAP Test Page\",\n\t\t\tRuntimeVariables.replace(\"Sample WAP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\t\tselenium.waitForVisible(\"//li[@title='Sample WAP Photo Gallery']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Sample WAP Photo Gallery']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"e8d3ed6215bd1863130914f639c96bfc8721e530","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletSampleWAPVideo() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Sample WAP Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sample WAP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Sample WAP Video']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Sample WAP Video']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","id":54504,"modified_method":"public void testAddPortletSampleWAPVideo() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sample WAP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Sample WAP Video']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Sample WAP Video']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div/div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div/div[2]/section\"));\n\t}","commit_id":"e8d3ed6215bd1863130914f639c96bfc8721e530","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletSampleWAPPhotoTest.class);\n\t\ttestSuite.addTestSuite(AddPortletSampleWAPVideoTest.class);\n\t\ttestSuite.addTestSuite(DeletePageTest.class);\n\n\t\treturn testSuite;\n\t}","id":54505,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletSampleWAPPhotoTest.class);\n\t\ttestSuite.addTestSuite(AddPortletSampleWAPVideoTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"e8d3ed6215bd1863130914f639c96bfc8721e530","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageVimeo() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Vimeo Test Page\");\n\t\tselenium.clickAt(\"link=Vimeo Test Page\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54506,"modified_method":"public void testAddPageVimeo() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Vimeo Test Page\");\n\t\tselenium.clickAt(\"link=Vimeo Test Page\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"c571c81d45e94115c1a27fec2ba76d8c60a77162","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletVimeo1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Vimeo Test Page\");\n\t\tselenium.clickAt(\"link=Vimeo Test Page\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Vimeo']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Vimeo']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54507,"modified_method":"public void testAddPortletVimeo1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Vimeo Test Page\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"v\"));\n\t\tselenium.waitForVisible(\"//li[@title='Vimeo']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Vimeo']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"c571c81d45e94115c1a27fec2ba76d8c60a77162","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletVimeo2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Vimeo Test Page\");\n\t\tselenium.clickAt(\"link=Vimeo Test Page\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Vimeo']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Vimeo']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","id":54508,"modified_method":"public void testAddPortletVimeo2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Vimeo Test Page\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"v\"));\n\t\tselenium.waitForVisible(\"//li[@title='Vimeo']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Vimeo']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t}","commit_id":"c571c81d45e94115c1a27fec2ba76d8c60a77162","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletVimeo3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Vimeo Test Page\");\n\t\tselenium.clickAt(\"link=Vimeo Test Page\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Vimeo']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Vimeo']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","id":54509,"modified_method":"public void testAddPortletVimeo3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Vimeo Test Page\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"v\"));\n\t\tselenium.waitForVisible(\"//li[@title='Vimeo']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Vimeo']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section\"));\n\t}","commit_id":"c571c81d45e94115c1a27fec2ba76d8c60a77162","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletVimeo() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Vimeo Test Page\");\n\t\tselenium.clickAt(\"link=Vimeo Test Page\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Vimeo']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Vimeo']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54510,"modified_method":"public void testAddPortletVimeo() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Vimeo Test Page\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"v\"));\n\t\tselenium.waitForVisible(\"//li[@title='Vimeo']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Vimeo']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"c571c81d45e94115c1a27fec2ba76d8c60a77162","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemovePortletVimeo() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Vimeo Test Page\");\n\t\tselenium.clickAt(\"link=Vimeo Test Page\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/section\"));\n\t}","id":54511,"modified_method":"public void testRemovePortletVimeo() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Vimeo Test Page\",\n\t\t\tRuntimeVariables.replace(\"Vimeo Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to remove this component?\");\n\t\tselenium.waitForElementNotPresent(\"//section\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section\"));\n\t}","commit_id":"c571c81d45e94115c1a27fec2ba76d8c60a77162","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testActivateStagingOrganizationSite() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.click(\"//span[@title='Actions']/ul/li/strong/a/span\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_165_detailsLink']\", \"Details\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_165_detailsLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_165_publicLayoutSetPrototypeLinkEnabledCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_publicLayoutSetPrototypeLinkEnabledCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Enable propagation of changes from the site template Community Site.\"));\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_165_publicLayoutSetPrototypeLinkEnabledCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_165_stagingLink']\", \"Staging\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_165_stagingLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_165_local']\");\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_local']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Local Live\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span/span[contains(.,'Blogs')]/span/input[2]\");\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Blogs')]/span/input[2]\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Blogs')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Bookmarks')]/span/input[2]\");\n\n\t\t\t\tif (bookmarksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Bookmarks')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean calendarChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Calendar')]/span/input[2]\");\n\n\t\t\t\tif (calendarChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Calendar')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean documentLibraryChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Documents and Media')]/span/input[2]\");\n\n\t\t\t\tif (documentLibraryChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Documents and Media')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibrary\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean documentLibraryDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Documents and Media Display')]/span/input[2]\");\n\n\t\t\t\tif (documentLibraryDisplayChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Documents and Media Display')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibraryDisplay\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean dynamicDataMappingChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Dynamic Data Mapping')]/span/input[2]\");\n\n\t\t\t\tif (dynamicDataMappingChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Dynamic Data Mapping')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dynamic Data Mapping\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean messageBoardsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Message Boards')]/span/input[2]\");\n\n\t\t\t\tif (messageBoardsChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Message Boards')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean pageCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Page Comments')]/span/input[2]\");\n\n\t\t\t\tif (pageCommentsChecked) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Page Comments')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Comments\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean pageRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Page Ratings')]/span/input[2]\");\n\n\t\t\t\tif (pageRatingsChecked) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Page Ratings')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Ratings\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean pollsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Polls')]/span/input[2]\");\n\n\t\t\t\tif (pollsChecked) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Polls')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean pollsDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Polls Display')]/span/input[2]\");\n\n\t\t\t\tif (pollsDisplayChecked) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Polls Display')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display\"));\n\n\t\t\tcase 12:\n\n\t\t\t\tboolean webContentChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Web Content')]/span/input[2]\");\n\n\t\t\t\tif (webContentChecked) {\n\t\t\t\t\tlabel = 13;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Web Content')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\n\t\t\tcase 13:\n\n\t\t\t\tboolean webContentDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Web Content Display')]/span/input[2]\");\n\n\t\t\t\tif (webContentDisplayChecked) {\n\t\t\t\t\tlabel = 14;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Web Content Display')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\t\tcase 14:\n\n\t\t\t\tboolean wikiChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Wiki')]/span/input[2]\");\n\n\t\t\t\tif (wikiChecked) {\n\t\t\t\t\tlabel = 15;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Wiki')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\n\t\t\tcase 15:\n\n\t\t\t\tboolean wikiDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Wiki Display')]/span/input[2]\");\n\n\t\t\t\tif (wikiDisplayChecked) {\n\t\t\t\t\tlabel = 16;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Wiki Display')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki Display Checked\"));\n\n\t\t\tcase 16:\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54512,"modified_method":"public void testActivateStagingOrganizationSite() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@name='_134_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.click(\"//span[@title='Actions']/ul/li/strong/a/span\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit Settings')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit Settings')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit Settings')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_165_stagingLink']\", \"Staging\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_165_stagingLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_165_local']\");\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_local']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Local Live\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span/span[contains(.,'Blogs')]/span/input[2]\");\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Blogs')]/span/input[2]\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Blogs')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Bookmarks')]/span/input[2]\");\n\n\t\t\t\tif (bookmarksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Bookmarks')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean calendarChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Calendar')]/span/input[2]\");\n\n\t\t\t\tif (calendarChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Calendar')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean documentLibraryChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Documents and Media')]/span/input[2]\");\n\n\t\t\t\tif (documentLibraryChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Documents and Media')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibrary\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean documentLibraryDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Documents and Media Display')]/span/input[2]\");\n\n\t\t\t\tif (documentLibraryDisplayChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Documents and Media Display')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibraryDisplay\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean dynamicDataMappingChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Dynamic Data Mapping')]/span/input[2]\");\n\n\t\t\t\tif (dynamicDataMappingChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Dynamic Data Mapping')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dynamic Data Mapping\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean messageBoardsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Message Boards')]/span/input[2]\");\n\n\t\t\t\tif (messageBoardsChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Message Boards')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean pageCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Page Comments')]/span/input[2]\");\n\n\t\t\t\tif (pageCommentsChecked) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Page Comments')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Comments\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean pageRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Page Ratings')]/span/input[2]\");\n\n\t\t\t\tif (pageRatingsChecked) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Page Ratings')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Ratings\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean pollsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Polls')]/span/input[2]\");\n\n\t\t\t\tif (pollsChecked) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Polls')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean pollsDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Polls Display')]/span/input[2]\");\n\n\t\t\t\tif (pollsDisplayChecked) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Polls Display')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display\"));\n\n\t\t\tcase 12:\n\n\t\t\t\tboolean webContentChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Web Content')]/span/input[2]\");\n\n\t\t\t\tif (webContentChecked) {\n\t\t\t\t\tlabel = 13;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Web Content')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\n\t\t\tcase 13:\n\n\t\t\t\tboolean webContentDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Web Content Display')]/span/input[2]\");\n\n\t\t\t\tif (webContentDisplayChecked) {\n\t\t\t\t\tlabel = 14;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Web Content Display')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\t\tcase 14:\n\n\t\t\t\tboolean wikiChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Wiki')]/span/input[2]\");\n\n\t\t\t\tif (wikiChecked) {\n\t\t\t\t\tlabel = 15;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Wiki')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\n\t\t\tcase 15:\n\n\t\t\t\tboolean wikiDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//span/span[contains(.,'Wiki Display')]/span/input[2]\");\n\n\t\t\t\tif (wikiDisplayChecked) {\n\t\t\t\t\tlabel = 16;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span/span[contains(.,'Wiki Display')]/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki Display Checked\"));\n\n\t\t\tcase 16:\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddOrganizationSite() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.click(\"//span[@title='Actions']/ul/li/strong/a/span\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForVisible(\"//a[@id='_125_organizationSiteLink']\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//a[@id='_125_organizationSiteLink']\", \"Organization Site\"));\n\t\tselenium.clickAt(\"//a[@id='_125_organizationSiteLink']\",\n\t\t\tRuntimeVariables.replace(\"Organization Site\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_125_siteCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_125_siteCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Create Site\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_125_siteCheckbox']\"));\n\t\tselenium.waitForVisible(\"_125_publicLayoutSetPrototypeId\");\n\t\tselenium.select(\"_125_publicLayoutSetPrototypeId\",\n\t\t\tRuntimeVariables.replace(\"Community Site\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54513,"modified_method":"public void testAddOrganizationSite() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.click(\"//span[@title='Actions']/ul/li/strong/a/span\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForVisible(\"//a[@id='_125_organizationSiteLink']\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//a[@id='_125_organizationSiteLink']\", \"Organization Site\"));\n\t\tselenium.clickAt(\"//a[@id='_125_organizationSiteLink']\",\n\t\t\tRuntimeVariables.replace(\"Organization Site\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_125_siteCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_125_siteCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Create Site\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_125_siteCheckbox']\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//select[@id='_125_publicLayoutSetPrototypeId']\");\n\t\tselenium.select(\"//select[@id='_125_publicLayoutSetPrototypeId']\",\n\t\t\tRuntimeVariables.replace(\"Community Site\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_125_publicLayoutSetPrototypeLinkEnabledCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_125_publicLayoutSetPrototypeLinkEnabledCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_125_publicLayoutSetPrototypeLinkEnabledCheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Enable propagation of changes from the site template Community Site.\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_125_publicLayoutSetPrototypeLinkEnabledCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddOrganization() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Organization\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.select(\"//select[@id='_125_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Regular Organization\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=View All\", RuntimeVariables.replace(\"View All\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\tselenium.getText(\"//a[2]/strong\"));\n\t}","id":54514,"modified_method":"public void testAddOrganization() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Regular Organization')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Organization\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Regular Organization')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Regular Organization')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.select(\"//select[@id='_125_type']\",\n\t\t\tRuntimeVariables.replace(\"Regular Organization\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\tselenium.getText(\"//a[2]/strong\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUserOrganizationAdministrator()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Mr.\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organizationadministrator\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"organizationadministrator@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_middleName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=10\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Male\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(\"organizationadministrator\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\t\t\tassertEquals(\"organizationadministrator@selenium.com\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\t\t\tassertEquals(\"Organization\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\t\t\tassertEquals(\"\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_middleName']\"));\n\t\t\t\tassertEquals(\"Administrator\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_lastName']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_passwordLink']\", \"Password\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_organizationsLink']\", \"Organizations\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_organizationsLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organizations\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[contains(.,'Select')]/span/a/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\t\t\tselenium.getText(\"//div[contains(.,'Select')]/span/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(.,'Select')]/span/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"name=organization\");\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForText(\"//td[1]/a\", \"Selenium\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//table/tr/td[1]\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_rolesLink']\",\n\t\t\t\t\t\t\"Roles\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_rolesLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Roles\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[contains(.,'Select')]/span[2]/a/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(.,'Select')]/span[2]/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(.,'Select')]/span[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"name=role\");\n\t\t\t\tselenium.waitForVisible(\"//td/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Organization Administrator\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Administrator\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Organization Administrator\"),\n\t\t\t\t\tselenium.getText(\"//table/tr/td[1]\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Organization Administrator\"),\n\t\t\t\t\tselenium.getText(\"//div[3]/div/div/table/tbody/tr[3]/td[1]\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Sign Out\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"organizationadministrator@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean iAgreeVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!iAgreeVisible1) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 3:\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"password1\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.type(\"password2\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean passwordReminderVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"reminderQueryAnswer\");\n\n\t\t\t\tif (!passwordReminderVisible1) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Please choose a reminder query.\"),\n\t\t\t\t\tselenium.getText(\"//form/div[1]\"));\n\t\t\t\tselenium.type(\"reminderQueryAnswer\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 4:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Sign Out\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked2 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked2) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54515,"modified_method":"public void testAddUserOrganizationAdministrator()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'User')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'User')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'User')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Mr.\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organizationadministrator\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"organizationadministrator@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_middleName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=10\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Male\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(\"organizationadministrator\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\t\t\tassertEquals(\"organizationadministrator@selenium.com\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\t\t\tassertEquals(\"Organization\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\t\t\tassertEquals(\"\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_middleName']\"));\n\t\t\t\tassertEquals(\"Administrator\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_lastName']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_passwordLink']\", \"Password\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_organizationsLink']\", \"Organizations\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_organizationsLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organizations\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div/span/a/span[contains(.,'Select')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\t\t\tselenium.getText(\"//div/span/a/span[contains(.,'Select')]\"));\n\t\t\t\tselenium.clickAt(\"//div/span/a/span[contains(.,'Select')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"title=Users and Organizations\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForText(\"//td[1]/a\", \"Selenium\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//table/tr/td[1]\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_rolesLink']\",\n\t\t\t\t\t\t\"Roles\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_rolesLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Roles\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div/span[2]/a/span[contains(.,'Select')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div/span[2]/a/span[contains(.,'Select')]\"));\n\t\t\t\tselenium.clickAt(\"//div/span[2]/a/span[contains(.,'Select')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"title=Users and Organizations\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\"//td/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Organization Administrator\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Administrator\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Organization Administrator\"),\n\t\t\t\t\tselenium.getText(\"//table/tr/td[1]\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Organization Administrator\"),\n\t\t\t\t\tselenium.getText(\"//div[3]/div/div/table/tbody/tr[3]/td[1]\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"organizationadministrator@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean iAgreeVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!iAgreeVisible1) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 3:\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"password1\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.type(\"password2\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean passwordReminderVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"reminderQueryAnswer\");\n\n\t\t\t\tif (!passwordReminderVisible1) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Please choose a reminder query.\"),\n\t\t\t\t\tselenium.getText(\"//form/div[1]\"));\n\t\t\t\tselenium.type(\"reminderQueryAnswer\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 4:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked2 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked2) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUserOrganizationContentReviewer()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Mr.\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organizationcontentreviewer\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"organizationcontentreviewer@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_middleName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Content\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Reviewer\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=10\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Male\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(\"organizationcontentreviewer\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\t\t\tassertEquals(\"organizationcontentreviewer@selenium.com\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\t\t\tassertEquals(\"Organization\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\t\t\tassertEquals(\"Content\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_middleName']\"));\n\t\t\t\tassertEquals(\"Reviewer\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_lastName']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_passwordLink']\", \"Password\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_organizationsLink']\", \"Organizations\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_organizationsLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organizations\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[contains(.,'Select')]/span/a/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\t\t\tselenium.getText(\"//div[contains(.,'Select')]/span/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(.,'Select')]/span/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"name=organization\");\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForText(\"//td[1]/a\", \"Selenium\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//table/tr/td[1]\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_rolesLink']\",\n\t\t\t\t\t\t\"Roles\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_rolesLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Roles\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[contains(.,'Select')]/span[2]/a/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[contains(.,'Select')]/span[2]/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(.,'Select')]/span[2]/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"name=role\");\n\t\t\t\tselenium.waitForVisible(\"//tr[4]/td/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Organization Content Reviewer\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td/a\"));\n\t\t\t\tselenium.clickAt(\"//tr[4]/td/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Content Reviewer\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Organization Content Reviewer\"),\n\t\t\t\t\tselenium.getText(\"//table/tr/td[1]\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Organization Content Reviewer\"),\n\t\t\t\t\tselenium.getText(\"//div[3]/div/div/table/tbody/tr[3]/td[1]\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Sign Out\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"organizationcontentreviewer@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean iAgreeVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!iAgreeVisible1) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 3:\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"password1\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.type(\"password2\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean passwordReminderVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"reminderQueryAnswer\");\n\n\t\t\t\tif (!passwordReminderVisible1) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Please choose a reminder query.\"),\n\t\t\t\t\tselenium.getText(\"//form/div[1]\"));\n\t\t\t\tselenium.type(\"reminderQueryAnswer\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 4:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Sign Out\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked2 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked2) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54516,"modified_method":"public void testAddUserOrganizationContentReviewer()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'User')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'User')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'User')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Mr.\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organizationcontentreviewer\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"organizationcontentreviewer@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_middleName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Content\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Reviewer\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=10\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Male\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(\"organizationcontentreviewer\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\t\t\tassertEquals(\"organizationcontentreviewer@selenium.com\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\t\t\tassertEquals(\"Organization\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\t\t\tassertEquals(\"Content\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_middleName']\"));\n\t\t\t\tassertEquals(\"Reviewer\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_lastName']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_passwordLink']\", \"Password\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_organizationsLink']\", \"Organizations\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_organizationsLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organizations\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div/span/a/span[contains(.,'Select')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\t\t\tselenium.getText(\"//div/span/a/span[contains(.,'Select')]\"));\n\t\t\t\tselenium.clickAt(\"//div/span/a/span[contains(.,'Select')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"title=Users and Organizations\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForText(\"//td[1]/a\", \"Selenium\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//table/tr/td[1]\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_rolesLink']\",\n\t\t\t\t\t\t\"Roles\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_rolesLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Roles\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div/span[2]/a/span[contains(.,'Select')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div/span[2]/a/span[contains(.,'Select')]\"));\n\t\t\t\tselenium.clickAt(\"//div/span[2]/a/span[contains(.,'Select')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"title=Users and Organizations\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\"//tr[4]/td/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Organization Content Reviewer\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td/a\"));\n\t\t\t\tselenium.clickAt(\"//tr[4]/td/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Content Reviewer\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Organization Content Reviewer\"),\n\t\t\t\t\tselenium.getText(\"//table/tr/td[1]\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Organization Content Reviewer\"),\n\t\t\t\t\tselenium.getText(\"//div[3]/div/div/table/tbody/tr[3]/td[1]\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"organizationcontentreviewer@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean iAgreeVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!iAgreeVisible1) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 3:\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"password1\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.type(\"password2\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean passwordReminderVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"reminderQueryAnswer\");\n\n\t\t\t\tif (!passwordReminderVisible1) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Please choose a reminder query.\"),\n\t\t\t\t\tselenium.getText(\"//form/div[1]\"));\n\t\t\t\tselenium.type(\"reminderQueryAnswer\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 4:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked2 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked2) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUserOrganizationUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Mr.\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organizationuser\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organizationuser@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_middleName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"User\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=10\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Male\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(\"organizationuser\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\t\t\tassertEquals(\"organizationuser@selenium.com\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\t\t\tassertEquals(\"Organization\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\t\t\tassertEquals(\"\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_middleName']\"));\n\t\t\t\tassertEquals(\"User\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_lastName']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_passwordLink']\", \"Password\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_organizationsLink']\", \"Organizations\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_organizationsLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organizations\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[contains(.,'Select')]/span/a/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\t\t\tselenium.getText(\"//div[contains(.,'Select')]/span/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[contains(.,'Select')]/span/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"name=organization\");\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForText(\"//td[1]/a\", \"Selenium\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//table/tr/td[1]\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Sign Out\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organizationuser@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean iAgreeVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!iAgreeVisible1) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 3:\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"password1\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.type(\"password2\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean passwordReminderVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"reminderQueryAnswer\");\n\n\t\t\t\tif (!passwordReminderVisible1) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Please choose a reminder query.\"),\n\t\t\t\t\tselenium.getText(\"//form/div[1]\"));\n\t\t\t\tselenium.type(\"reminderQueryAnswer\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 4:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Sign Out\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked2 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked2) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54517,"modified_method":"public void testAddUserOrganizationUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'User')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'User')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'User')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Mr.\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organizationuser\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organizationuser@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_middleName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"User\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=10\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\t\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Male\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(\"organizationuser\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\t\t\tassertEquals(\"organizationuser@selenium.com\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\t\t\tassertEquals(\"Organization\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\t\t\tassertEquals(\"\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_middleName']\"));\n\t\t\t\tassertEquals(\"User\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_lastName']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_passwordLink']\", \"Password\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_organizationsLink']\", \"Organizations\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_organizationsLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organizations\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div/span/a/span[contains(.,'Select')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\t\t\tselenium.getText(\"//div/span/a/span[contains(.,'Select')]\"));\n\t\t\t\tselenium.clickAt(\"//div/span/a/span[contains(.,'Select')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"title=Users and Organizations\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForText(\"//td[1]/a\", \"Selenium\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//table/tr/td[1]\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organizationuser@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean iAgreeVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!iAgreeVisible1) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 3:\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"password1\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.type(\"password2\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean passwordReminderVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"reminderQueryAnswer\");\n\n\t\t\t\tif (!passwordReminderVisible1) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Please choose a reminder query.\"),\n\t\t\t\t\tselenium.getText(\"//form/div[1]\"));\n\t\t\t\tselenium.type(\"reminderQueryAnswer\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 4:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked2 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked2) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(DefinePermissionsBlogsManagePagesOrganizationUserTest.class);\n\t\ttestSuite.addTestSuite(AddOrganizationTest.class);\n\t\ttestSuite.addTestSuite(AddOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(AddUserOrganizationUserTest.class);\n\t\ttestSuite.addTestSuite(AddUserOrganizationContentReviewerTest.class);\n\t\ttestSuite.addTestSuite(AddUserOrganizationAdministratorTest.class);\n\t\ttestSuite.addTestSuite(ActivateStagingOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(ConfigureBlogsEntrySingleApproverOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(OU_LoginTest.class);\n\t\ttestSuite.addTestSuite(OU_AddStagedPageOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OU_AddStagedPortletOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OU_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoPagePrePublishOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OA_LoginTest.class);\n\t\ttestSuite.addTestSuite(OA_PublishToLiveStagedPageOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertPagePresentOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OU_LoginTest.class);\n\t\ttestSuite.addTestSuite(OU_AddStagedBlogsEntryOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OU_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoBlogsEntryPreApprovalOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OCR_LoginTest.class);\n\t\ttestSuite.addTestSuite(OCR_AssignToMeStagedBlogsEntryOrganizationSiteActionsTest.class);\n\t\ttestSuite.addTestSuite(OCR_ApproveStagedBlogsEntryOrganizationSiteActionsTest.class);\n\t\ttestSuite.addTestSuite(OCR_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoBlogsEntryPrePublishOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OA_LoginTest.class);\n\t\ttestSuite.addTestSuite(OA_PublishToLiveStagedBlogsEntryOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertBlogsEntryOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(LoginTest.class);\n\t\ttestSuite.addTestSuite(TearDownWorkflowConfigurationOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownBlogsEntryOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\t\ttestSuite.addTestSuite(TearDownPermissionsTest.class);\n\t\ttestSuite.addTestSuite(TearDownSitesTest.class);\n\t\ttestSuite.addTestSuite(TearDownOrganizationTest.class);\n\n\t\treturn testSuite;\n\t}","id":54518,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(DefinePermissionsBlogsManagePagesOrganizationUserTest.class);\n\t\ttestSuite.addTestSuite(AddOrganizationTest.class);\n\t\ttestSuite.addTestSuite(AddOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(AddUserOrganizationUserTest.class);\n\t\ttestSuite.addTestSuite(AddUserOrganizationContentReviewerTest.class);\n\t\ttestSuite.addTestSuite(AddUserOrganizationAdministratorTest.class);\n\t\ttestSuite.addTestSuite(ActivateStagingOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(ConfigureBlogsEntrySingleApproverOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(OU_LoginTest.class);\n\t\ttestSuite.addTestSuite(OU_AddStagedPageOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OU_AddStagedPortletOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OU_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoPagePrePublishOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OA_LoginTest.class);\n\t\ttestSuite.addTestSuite(OA_PublishToLiveStagedPageOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertPagePresentOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OU_LoginTest.class);\n\t\ttestSuite.addTestSuite(OU_AddStagedBlogsEntryOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OU_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoBlogsEntryPreApprovalOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OCR_LoginTest.class);\n\t\ttestSuite.addTestSuite(OCR_AssignToMeStagedBlogsEntryOrganizationSiteActionsTest.class);\n\t\ttestSuite.addTestSuite(OCR_ApproveStagedBlogsEntryOrganizationSiteActionsTest.class);\n\t\ttestSuite.addTestSuite(OCR_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNoBlogsEntryPrePublishOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OA_LoginTest.class);\n\t\ttestSuite.addTestSuite(OA_PublishToLiveStagedBlogsEntryOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(OA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertBlogsEntryOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(LoginTest.class);\n\t\ttestSuite.addTestSuite(TearDownWorkflowConfigurationOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownBlogsEntryOrganizationSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\t\ttestSuite.addTestSuite(TearDownPermissionsTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownOrganizationTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureBlogsEntrySingleApproverOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t}","id":54519,"modified_method":"public void testConfigureBlogsEntrySingleApproverOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/dockbar_underlay.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"Single Approver (Version 1)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Single Approver (Version 1)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefinePermissionsBlogsManagePagesOrganizationUser()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Organization\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Organization User\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Organization User')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Organization User')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Organization User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForText(\"//tr[3]/td[2]\", \"Add Entry\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Entry\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\"));\n\t\tselenium.check(\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"Organization Administration\"));\n\t\tselenium.waitForText(\"//tr[14]/td[2]\", \"Manage Pages\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\"//tr[14]/td[2]\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\"));\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Entry\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t}","id":54520,"modified_method":"public void testDefinePermissionsBlogsManagePagesOrganizationUser()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Organization\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Organization User\"),\n\t\t\tselenium.getText(\"//tr/td[1]/a[contains(.,'Organization User')]\"));\n\t\tselenium.clickAt(\"//tr/td[1]/a[contains(.,'Organization User')]\",\n\t\t\tRuntimeVariables.replace(\"Organization User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForText(\"//tr[4]/td[2]\", \"Add Entry\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Entry\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\"));\n\t\tselenium.check(\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"Organization Administration\"));\n\t\tselenium.waitForText(\"//tr[14]/td[2]\", \"Manage Pages\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\"//tr[14]/td[2]\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\"));\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Entry\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertBlogsEntryOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":54521,"modified_method":"public void testGuest_AssertBlogsEntryOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertNoBlogsEntryPreApprovalOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending Approval\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","id":54522,"modified_method":"public void testGuest_AssertNoBlogsEntryPreApprovalOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending Approval\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertNoBlogsEntryPrePublishOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending Approval\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","id":54523,"modified_method":"public void testGuest_AssertNoBlogsEntryPrePublishOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertFalse(selenium.isTextPresent(\"Pending Approval\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Blogs Entry Content\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertPagePresentOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54524,"modified_method":"public void testGuest_AssertPagePresentOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLogin() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.waitForVisible(\"link=Sign In\");\n\t\t\t\tselenium.clickAt(\"link=Sign In\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54525,"modified_method":"public void testLogin() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.clickAt(\"link=Sign In\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLogout() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//input[@id='_58_login']\");\n\t}","id":54526,"modified_method":"public void testLogout() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//input[@id='_58_login']\");\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testOA_Login() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"organizationadministrator@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54527,"modified_method":"public void testOA_Login() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"organizationadministrator@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testOA_Logout() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//input[@id='_58_login']\");\n\t}","id":54528,"modified_method":"public void testOA_Logout() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//input[@id='_58_login']\");\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testOA_PublishToLiveStagedBlogsEntryOrganizationSite()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/selenium/home/\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='staging-bar']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Live\"),\n\t\t\t\t\tselenium.getText(\"//li[1]/span/span\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Staging\"),\n\t\t\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\t\t\tselenium.clickAt(\"//li[2]/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForText(\"//div[@class='entry-title']/h2/a\",\n\t\t\t\t\t\"Blogs Entry Title\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\t\t\tselenium.waitForText(\"//div[@class='entry-body']/p\",\n\t\t\t\t\t\"Blogs Entry Content\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Publish to Live Now\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Publish to Live Now\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\"//div[2]/div[1]/a\");\n\n\t\t\t\tboolean blogsVisible = selenium.isVisible(\n\t\t\t\t\t\t\"_88_PORTLET_DATA_33Checkbox\");\n\n\t\t\t\tif (blogsVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/div[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Plus\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.waitForElementPresent(\"//input[@id='_88_rangeAll']\");\n\t\t\t\tselenium.clickAt(\"//input[@id='_88_rangeAll']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All\"));\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_88_PORTLET_DATA_33Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_88_PORTLET_DATA_33Checkbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='_88_PORTLET_DATA_33Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_88_PORTLET_DATA_33Checkbox']\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.waitForVisible(\"//input[@value='Publish']\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54529,"modified_method":"public void testOA_PublishToLiveStagedBlogsEntryOrganizationSite()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/selenium/home/\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='staging-bar']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Live\"),\n\t\t\t\t\tselenium.getText(\"//li[1]/span/span\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Staging\"),\n\t\t\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\t\t\tselenium.clickAt(\"//li[2]/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForText(\"//div[@class='entry-title']/h2/a\",\n\t\t\t\t\t\"Blogs Entry Title\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\t\t\tselenium.waitForText(\"//div[@class='entry-body']/p\",\n\t\t\t\t\t\"Blogs Entry Content\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Publish to Live Now\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Publish to Live Now\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\"//div[2]/div[1]/a\");\n\n\t\t\t\tboolean blogsVisible = selenium.isVisible(\n\t\t\t\t\t\t\"//input[@id='_88_PORTLET_DATA_33Checkbox']\");\n\n\t\t\t\tif (blogsVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/div[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Plus\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.waitForElementPresent(\"//input[@id='_88_rangeAll']\");\n\t\t\t\tselenium.clickAt(\"//input[@id='_88_rangeAll']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All\"));\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_88_PORTLET_DATA_33Checkbox']\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_88_PORTLET_DATA_33Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 3:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_88_PORTLET_DATA_33Checkbox']\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@value='Publish']\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to publish these pages?\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testOA_PublishToLiveStagedPageOrganizationSite()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/selenium/home/\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='staging-bar']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Live\"),\n\t\t\t\t\tselenium.getText(\"//li[1]/span/span\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You are viewing the live version of Selenium and cannot make changes here. Make your changes in staging and publish them to Live afterwards to make them public.\"),\n\t\t\t\t\tselenium.getText(\"//span[@class='staging-live-help']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Staging\"),\n\t\t\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\t\t\tselenium.clickAt(\"//li[2]/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You are viewing the staged version of Selenium. You can make changes here and publish them to Live afterwards to make them public.\"),\n\t\t\t\t\tselenium.getText(\"//span[@class='staging-live-help']\"));\n\t\t\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Publish to Live Now\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Publish to Live Now\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\"//div[2]/div[1]/a\");\n\n\t\t\t\tboolean blogsVisible = selenium.isVisible(\n\t\t\t\t\t\t\"_88_PORTLET_DATA_33Checkbox\");\n\n\t\t\t\tif (blogsVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/div[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Plus\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.waitForElementPresent(\"//input[@id='_88_rangeAll']\");\n\t\t\t\tselenium.clickAt(\"//input[@id='_88_rangeAll']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All\"));\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_88_PORTLET_DATA_33Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_88_PORTLET_DATA_33Checkbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='_88_PORTLET_DATA_33Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_88_PORTLET_DATA_33Checkbox']\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.waitForVisible(\"//input[@value='Publish']\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54530,"modified_method":"public void testOA_PublishToLiveStagedPageOrganizationSite()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/selenium/home/\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='staging-bar']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Live\"),\n\t\t\t\t\tselenium.getText(\"//li[1]/span/span\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You are viewing the live version of Selenium and cannot make changes here. Make your changes in staging and publish them to Live afterwards to make them public.\"),\n\t\t\t\t\tselenium.getText(\"//span[@class='staging-live-help']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Staging\"),\n\t\t\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\t\t\tselenium.clickAt(\"//li[2]/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You are viewing the staged version of Selenium. You can make changes here and publish them to Live afterwards to make them public.\"),\n\t\t\t\t\tselenium.getText(\"//span[@class='staging-live-help']\"));\n\t\t\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Publish to Live Now')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Publish to Live Now\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Publish to Live Now')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Publish to Live Now')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Publish to Live Now\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\"//div[2]/div[1]/a\");\n\n\t\t\t\tboolean blogsVisible = selenium.isVisible(\n\t\t\t\t\t\t\"//input[@id='_88_PORTLET_DATA_33Checkbox']\");\n\n\t\t\t\tif (blogsVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/div[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Plus\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.waitForElementPresent(\"//input[@id='_88_rangeAll']\");\n\t\t\t\tselenium.clickAt(\"//input[@id='_88_rangeAll']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All\"));\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_88_PORTLET_DATA_33Checkbox']\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_88_PORTLET_DATA_33Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 3:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_88_PORTLET_DATA_33Checkbox']\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@value='Publish']\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to publish these pages?\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testOCR_ApproveStagedBlogsEntryOrganizationSiteActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Approve\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Approve\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[2]\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t}","id":54531,"modified_method":"public void testOCR_ApproveStagedBlogsEntryOrganizationSiteActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/dockbar_underlay.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Approve\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Approve\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-info'])[2]\"));\n\t\tselenium.clickAt(\"link=Completed\", RuntimeVariables.replace(\"Completed\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testOCR_AssignToMeStagedBlogsEntryOrganizationSiteActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Assign to Me\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Assign to Me\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","id":54532,"modified_method":"public void testOCR_AssignToMeStagedBlogsEntryOrganizationSiteActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/dockbar_underlay.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Workflow Tasks\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to you.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Assign to Me\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Assign to Me\"));\n\t\tselenium.waitForVisible(\"//div[3]/span/span/button\");\n\t\tassertEquals(RuntimeVariables.replace(\"OK\"),\n\t\t\tselenium.getText(\"//div[3]/span/span/button\"));\n\t\tselenium.clickAt(\"//div[3]/span/span/button\",\n\t\t\tRuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Review\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no pending tasks assigned to your roles.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testOCR_Login() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"organizationcontentreviewer@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54533,"modified_method":"public void testOCR_Login() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"organizationcontentreviewer@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testOCR_Logout() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//input[@id='_58_login']\");\n\t}","id":54534,"modified_method":"public void testOCR_Logout() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//input[@id='_58_login']\");\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testOU_AddStagedBlogsEntryOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tassertTrue(selenium.isElementPresent(\"//div[@class='staging-bar']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Live\"),\n\t\t\tselenium.getText(\"//li[1]/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Staging\"),\n\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\tselenium.clickAt(\"//li[2]/span/a\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__33_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__33_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":54535,"modified_method":"public void testOU_AddStagedBlogsEntryOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tassertTrue(selenium.isElementPresent(\"//div[@class='staging-bar']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Live\"),\n\t\t\tselenium.getText(\"//li[1]/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Staging\"),\n\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\tselenium.clickAt(\"//li[2]/span/a\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__33_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__33_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_33_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Blogs Entry Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Submit for Publication']\",\n\t\t\tRuntimeVariables.replace(\"Submit for Publication\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Pending Approval\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/h3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testOU_AddStagedPageOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tassertTrue(selenium.isElementPresent(\"//div[@class='staging-bar']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Live\"),\n\t\t\tselenium.getText(\"//li[1]/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You are viewing the live version of Selenium and cannot make changes here. Make your changes in staging and publish them to Live afterwards to make them public.\"),\n\t\t\tselenium.getText(\"//span[@class='staging-live-help']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Staging\"),\n\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\tselenium.clickAt(\"//li[2]/span/a\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You are viewing the staged version of Selenium. You can make changes here and publish them to Live afterwards to make them public.\"),\n\t\t\tselenium.getText(\"//span[@class='staging-live-help']\"));\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54536,"modified_method":"public void testOU_AddStagedPageOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tassertTrue(selenium.isElementPresent(\"//div[@class='staging-bar']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Live\"),\n\t\t\tselenium.getText(\"//li[1]/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You are viewing the live version of Selenium and cannot make changes here. Make your changes in staging and publish them to Live afterwards to make them public.\"),\n\t\t\tselenium.getText(\"//span[@class='staging-live-help']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Staging\"),\n\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\tselenium.clickAt(\"//li[2]/span/a\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You are viewing the staged version of Selenium. You can make changes here and publish them to Live afterwards to make them public.\"),\n\t\t\tselenium.getText(\"//span[@class='staging-live-help']\"));\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/dockbar_underlay.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='menu-button']/span[contains(.,'Add')]\");\n\t\tselenium.clickAt(\"//a[@class='menu-button']/span[contains(.,'Add')]\t\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testOU_AddStagedPortletOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tassertTrue(selenium.isElementPresent(\"//div[@class='staging-bar']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Live\"),\n\t\t\tselenium.getText(\"//li[1]/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You are viewing the live version of Selenium and cannot make changes here. Make your changes in staging and publish them to Live afterwards to make them public.\"),\n\t\t\tselenium.getText(\"//span[@class='staging-live-help']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Staging\"),\n\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\tselenium.clickAt(\"//li[2]/span/a\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You are viewing the staged version of Selenium. You can make changes here and publish them to Live afterwards to make them public.\"),\n\t\t\tselenium.getText(\"//span[@class='staging-live-help']\"));\n\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title='Blogs']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54537,"modified_method":"public void testOU_AddStagedPortletOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tassertTrue(selenium.isElementPresent(\"//div[@class='staging-bar']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Live\"),\n\t\t\tselenium.getText(\"//li[1]/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You are viewing the live version of Selenium and cannot make changes here. Make your changes in staging and publish them to Live afterwards to make them public.\"),\n\t\t\tselenium.getText(\"//span[@class='staging-live-help']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Staging\"),\n\t\t\tselenium.getText(\"//li[2]/span/a\"));\n\t\tselenium.clickAt(\"//li[2]/span/a\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You are viewing the staged version of Selenium. You can make changes here and publish them to Live afterwards to make them public.\"),\n\t\t\tselenium.getText(\"//span[@class='staging-live-help']\"));\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/dockbar_underlay.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.waitForVisible(\"//li[@title='Blogs']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testOU_Login() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organizationuser@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54538,"modified_method":"public void testOU_Login() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organizationuser@selenium.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeCheckboxChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"_58_rememberMeCheckbox\");\n\n\t\t\t\tif (rememberMeCheckboxChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testOU_Logout() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//input[@id='_58_login']\");\n\t}","id":54539,"modified_method":"public void testOU_Logout() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//input[@id='_58_login']\");\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownBlogsEntryOrganizationSite()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/selenium/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Blogs Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean blogsEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean blogsEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean blogsEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean blogsEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean blogsEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54540,"modified_method":"public void testTearDownBlogsEntryOrganizationSite()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/selenium/home/\");\n\t\t\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean blogsEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean blogsEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean blogsEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean blogsEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean blogsEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownOrganization() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean organization1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!organization1Present) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Assign Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_TabsBack']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"//a[2]/strong\"));\n\t\t\t\tselenium.clickAt(\"//a[2]/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Entry 1\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean suborganization1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!suborganization1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_keywords']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Row\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean organization2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!organization2Present) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Assign Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_TabsBack']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"//a[2]/strong\"));\n\t\t\t\tselenium.clickAt(\"//a[2]/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Entry 2\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean suborganization2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!suborganization2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Row\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean organization3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!organization3Present) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Assign Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_TabsBack']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"//a[2]/strong\"));\n\t\t\t\tselenium.clickAt(\"//a[2]/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Entry 3\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean suborganization3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!suborganization3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Row\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean organization4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!organization4Present) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Assign Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_TabsBack']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"//a[2]/strong\"));\n\t\t\t\tselenium.clickAt(\"//a[2]/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Entry 4\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean suborganization4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!suborganization4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Row\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean organization5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!organization5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Assign Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_TabsBack']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"//a[2]/strong\"));\n\t\t\t\tselenium.clickAt(\"//a[2]/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Entry 5\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean suborganization5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!suborganization5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Row\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 7:\n\t\t\tcase 8:\n\t\t\tcase 9:\n\t\t\tcase 10:\n\t\t\tcase 11:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54541,"modified_method":"public void testTearDownOrganization() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean organization1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!organization1Present) {\n\t\t\t\t\tlabel = 16;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Assign Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Assign Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean user1Visible = selenium.isVisible(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!user1Visible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_TabsBack']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"//a[2]/strong\"));\n\t\t\t\tselenium.clickAt(\"//a[2]/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Entry 1\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean suborganization1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!suborganization1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_keywords']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Row\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean organization2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!organization2Present) {\n\t\t\t\t\tlabel = 15;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Assign Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Assign Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean user2Visible = selenium.isVisible(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!user2Visible) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_TabsBack']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"//a[2]/strong\"));\n\t\t\t\tselenium.clickAt(\"//a[2]/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Entry 2\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean suborganization2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!suborganization2Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Row\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean organization3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!organization3Present) {\n\t\t\t\t\tlabel = 14;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Assign Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Assign Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean user3Visible = selenium.isVisible(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!user3Visible) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_TabsBack']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"//a[2]/strong\"));\n\t\t\t\tselenium.clickAt(\"//a[2]/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Entry 3\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean suborganization3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!suborganization3Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 7:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Row\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean organization4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!organization4Present) {\n\t\t\t\t\tlabel = 13;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Assign Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Assign Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean user4Visible = selenium.isVisible(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!user4Visible) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 8:\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_TabsBack']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"//a[2]/strong\"));\n\t\t\t\tselenium.clickAt(\"//a[2]/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Entry 4\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean suborganization4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!suborganization4Present) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 9:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Row\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean organization5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!organization5Present) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Assign Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Users')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Assign Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean user5Visible = selenium.isVisible(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!user5Visible) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 10:\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_TabsBack']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Back\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"//a[2]/strong\"));\n\t\t\t\tselenium.clickAt(\"//a[2]/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Organization Entry 5\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean suborganization5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!suborganization5Present) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 11:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Row\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 12:\n\t\t\tcase 13:\n\t\t\tcase 14:\n\t\t\tcase 15:\n\t\t\tcase 16:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPermissions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Organization\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Organization User\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Organization User')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Organization User')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Organization User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForText(\"//tr[3]/td[2]\", \"Add Entry\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Entry\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\"));\n\t\tselenium.uncheck(\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"Organization Administration\"));\n\t\tselenium.waitForText(\"//tr[14]/td[2]\", \"Manage Pages\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\"//tr[14]/td[2]\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\"));\n\t\tselenium.uncheck(\n\t\t\t\"//input[@value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Add Entry\"));\n\t\tassertFalse(selenium.isTextPresent(\"Manage Pages\"));\n\t}","id":54542,"modified_method":"public void testTearDownPermissions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Organization\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Organization User\"),\n\t\t\tselenium.getText(\"//tr/td[1]/a[contains(.,'Organization User')]\"));\n\t\tselenium.clickAt(\"//tr/td[1]/a[contains(.,'Organization User')]\",\n\t\t\tRuntimeVariables.replace(\"Organization User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForText(\"//tr[4]/td[2]\", \"Add Entry\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Entry\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\"));\n\t\tselenium.uncheck(\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"Organization Administration\"));\n\t\tselenium.waitForText(\"//tr[14]/td[2]\", \"Manage Pages\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\"//tr[14]/td[2]\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\"));\n\t\tselenium.uncheck(\n\t\t\t\"//input[@value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@value='com.liferay.portal.model.GroupMANAGE_LAYOUTS']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Add Entry\"));\n\t\tassertFalse(selenium.isTextPresent(\"Manage Pages\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_keywords']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organization\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_allRowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Deactivate']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Deactivate\"));\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to deactivate the selected users?\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_keywords']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//tr/td[contains(.,'Selenium')]/a/strong\"));\n\t\t\t\tselenium.clickAt(\"//tr/td[contains(.,'Selenium')]/a/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean users1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!users1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Deactivate']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Deactivate\"));\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to deactivate the selected users?\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean advancedVisible = selenium.isVisible(\n\t\t\t\t\t\t\"link=Advanced \\u00bb\");\n\n\t\t\t\tif (!advancedVisible) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.waitForVisible(\"//select[@id='_125_status']\");\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersNotDeleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!usersNotDeleted) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"No users were found.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"Basic\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54543,"modified_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_keywords']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"organization\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_allRowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Deactivate']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Deactivate\"));\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to deactivate the selected users?\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_keywords']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\t\t\tselenium.getText(\"//tr/td/a/strong[contains(.,'Selenium')]\"));\n\t\t\t\tselenium.clickAt(\"//tr/td/a/strong[contains(.,'Selenium')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean users1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!users1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Deactivate']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Deactivate\"));\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to deactivate the selected users?\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"link=Search All Users\");\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean advancedVisible = selenium.isVisible(\n\t\t\t\t\t\t\"//a[.='Advanced \\u00bb']\");\n\n\t\t\t\tif (!advancedVisible) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//a[.='Advanced \\u00bb']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.waitForVisible(\"//select[@id='_125_status']\");\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@value='Search'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersNotDeleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!usersNotDeleted) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 5:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"No users were found.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\n\t\t\t\t\t\t\"//a[.='\\u00ab Basic']\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//a[.='\\u00ab Basic']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Basic\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWorkflowConfigurationOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54544,"modified_method":"public void testTearDownWorkflowConfigurationOrganizationSite()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/selenium/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/dockbar_underlay.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Workflow\", RuntimeVariables.replace(\"Workflow\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Default Configuration\",\n\t\t\tRuntimeVariables.replace(\"Default Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.select(\"//select[@id='_151_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"label=No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Workflow Configuration\",\n\t\t\tRuntimeVariables.replace(\"Workflow Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.blogs.model.BlogsEntry']\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBDiscussion']\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.messageboards.model.MBMessage']\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.journal.model.JournalArticle']\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.select(\"//select[@id='_152_workflowDefinitionName@com.liferay.portlet.wiki.model.WikiPage']\",\n\t\t\tRuntimeVariables.replace(\"label=Default: No workflow\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"370377df0f76db3543b0c347243f06d6fdae4bb4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNewDMFolderDocumentAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Add New']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"Basic Document\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//input[@value='Select']\");\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"title=Documents and Media\");\n\t\tselenium.waitForVisible(\"//input[@value='Choose']\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForText(\"//a[@id='_20_folderName']\", \"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[@id='_20_folderName']\"));\n\t\tselenium.uploadCommonFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.txt\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h3[@class='asset-title']/a\",\n\t\t\t\"DM Folder Document Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/span/a/span\"));\n\t}","id":54545,"modified_method":"public void testAddNewDMFolderDocumentAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\",\n\t\t\tRuntimeVariables.replace(\"Basic Document\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Select']\");\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"title=Documents and Media\");\n\t\tselenium.waitForVisible(\"//input[@value='Choose']\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForText(\"//a[@id='_20_folderName']\", \"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[@id='_20_folderName']\"));\n\t\tselenium.uploadCommonFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.txt\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h3[@class='asset-title']/a\",\n\t\t\t\"DM Folder Document Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"Download\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"(0k)\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNewDMFolderImageAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Add New']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"Basic Document\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//input[@value='Select']\");\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"title=Documents and Media\");\n\t\tselenium.waitForVisible(\"//input[@value='Choose']\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForText(\"//a[@id='_20_folderName']\", \"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[@id='_20_folderName']\"));\n\t\tselenium.uploadCommonFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.jpg\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h3[@class='asset-title']/a\",\n\t\t\t\"DM Folder Image Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/div\"));\n\t}","id":54546,"modified_method":"public void testAddNewDMFolderImageAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\",\n\t\t\tRuntimeVariables.replace(\"Basic Document\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Select']\");\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"title=Documents and Media\");\n\t\tselenium.waitForVisible(\"//input[@value='Choose']\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/search_container.js')]\");\n\t\tselenium.waitForText(\"//a[@id='_20_folderName']\", \"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[@id='_20_folderName']\"));\n\t\tselenium.uploadCommonFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.jpg\"));\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h3[@class='asset-title']/a\",\n\t\t\t\"DM Folder Image Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/div/img\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testBeTheFirstDMFolderDocumentCommentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//fieldset/div/a\"));\n\t\tselenium.clickAt(\"//fieldset/div/a\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\t\tselenium.waitForVisible(\"//textarea\");\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Comment Body\"));\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\tselenium.waitForText(\"//span[@class='user-name']\", \"Joe Bloggs\");\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//span[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[2]/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Comment Body\"),\n\t\t\tselenium.getText(\"//div/div[3]/div/div[1]\"));\n\t}","id":54547,"modified_method":"public void testBeTheFirstDMFolderDocumentCommentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//fieldset/div/a\"));\n\t\tselenium.clickAt(\"//fieldset/div/a\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\t\tselenium.waitForVisible(\"//textarea\");\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Comment Body\"));\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\tselenium.waitForText(\"//span[@class='user-name']\", \"Joe Bloggs\");\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//span[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Comment Body\"),\n\t\t\tselenium.getText(\"//div/div[3]/div/div[1]\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentRatingsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comment Ratings\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54548,"modified_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\n\t\t\t\tboolean enableCommentRatingsNotChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\n\t\t\t\tif (enableCommentRatingsNotChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_enableCommentRatingsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enable Comment Ratings\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_enableCommentsCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54549,"modified_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\");\n\n\t\t\t\tboolean enableCommentsNotChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\");\n\n\t\t\t\tif (enableCommentsNotChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletShowMetadataViewCount()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableMetadataFields']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableMetadataFields']\",\n\t\t\tRuntimeVariables.replace(\"View Count\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\");\n\t\tselenium.clickAt(\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentMetadataFields']\",\n\t\t\t\"View Count\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54550,"modified_method":"public void testConfigurePortletShowMetadataViewCount()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableMetadataFields']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableMetadataFields']\",\n\t\t\tRuntimeVariables.replace(\"View Count\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\");\n\t\tselenium.clickAt(\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentMetadataFields']\",\n\t\t\t\"View Count\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteDMFolderDocumentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-success']\",\n\t\t\t\"You have successfully updated the setup.\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"DM Folder Document Title\"));\n\t}","id":54551,"modified_method":"public void testDeleteDMFolderDocumentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"DM Folder Document Title\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteDMFolderImageAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-success']\",\n\t\t\t\"You have successfully updated the setup.\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"DM Folder Image Title\"));\n\t}","id":54552,"modified_method":"public void testDeleteDMFolderImageAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"DM Folder Image Title\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRateDMFolderDocumentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tString voteCount = selenium.getFirstNumberIncrement(\n\t\t\t\t\"xPath=(//div[@class='aui-rating-label-element'])[2]\");\n\t\tRuntimeVariables.setValue(\"voteCount\", voteCount);\n\t\tselenium.waitForVisible(\"//a[5]\");\n\t\tselenium.clickAt(\"//a[5]\", RuntimeVariables.replace(\"5 Stars\"));\n\t\tselenium.waitForPartialText(\"xPath=(//div[@class='aui-rating-label-element'])[2]\",\n\t\t\tRuntimeVariables.getValue(\"voteCount\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='aui-rating-label-element'])[2]\",\n\t\t\t\tRuntimeVariables.getValue(\"voteCount\")));\n\t}","id":54553,"modified_method":"public void testRateDMFolderDocumentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tString voteCount = selenium.getFirstNumberIncrement(\n\t\t\t\t\"xPath=(//div[@class='aui-rating-label-element'])[2]\");\n\t\tRuntimeVariables.setValue(\"voteCount\", voteCount);\n\t\tselenium.waitForVisible(\"//a[5]\");\n\t\tselenium.clickAt(\"//a[5]\", RuntimeVariables.replace(\"5 Stars\"));\n\t\tselenium.waitForPartialText(\"xPath=(//div[@class='aui-rating-label-element'])[2]\",\n\t\t\tRuntimeVariables.getValue(\"voteCount\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//div[@class='aui-rating-label-element'])[2]\",\n\t\t\t\tRuntimeVariables.getValue(\"voteCount\")));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectExistingDMFolderDocumentAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\n\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select Existing\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Select Existing']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select Existing\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Documents and Media Document')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Documents and Media Document')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Documents and Media Document')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/span/a/span\"));\n\t}","id":54554,"modified_method":"public void testSelectExistingDMFolderDocumentAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select Existing\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Select Existing']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select Existing\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Documents and Media Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Documents and Media Document')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Documents and Media Document')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"Download\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"(0k)\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectExistingDMFolderImageAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\n\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select Existing\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Select Existing']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select Existing\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Documents and Media Document')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Documents and Media Document')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Documents and Media Document')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/div\"));\n\t}","id":54555,"modified_method":"public void testSelectExistingDMFolderImageAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select Existing\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Select Existing']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select Existing\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Documents and Media Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Documents and Media Document')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Documents and Media Document')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletAbstractsDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/span/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Document Title \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Document Title \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t}","id":54556,"modified_method":"public void testViewConfigurePortletAbstractsDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"Download\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"(0k)\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Document Title \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Document Title \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletAbstractsDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Image Title \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Image Title \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Image Title \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/a/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/a/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t}","id":54557,"modified_method":"public void testViewConfigurePortletAbstractsDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Image Title \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Image Title \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Read More About DM Folder Image Title \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletCurrentDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/span/a/span\"));\n\t}","id":54558,"modified_method":"public void testViewConfigurePortletCurrentDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"Download\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"(0k)\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletCurrentDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/div\"));\n\t}","id":54559,"modified_method":"public void testViewConfigurePortletCurrentDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/div/img\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletFullContentDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t}","id":54560,"modified_method":"public void testViewConfigurePortletFullContentDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletFullContentDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/a/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/a/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t}","id":54561,"modified_method":"public void testViewConfigurePortletFullContentDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletTableDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\"//th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t}","id":54562,"modified_method":"public void testViewConfigurePortletTableDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\"//th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletTableDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\"//th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/a/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/a/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t}","id":54563,"modified_method":"public void testViewConfigurePortletTableDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\"//th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletTitleListDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//span/a/span\"));\n\t\tselenium.clickAt(\"//span/a/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t}","id":54564,"modified_method":"public void testViewConfigurePortletTitleListDMDocumentAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//ul[@class='title-list']/li/span/a/span\"));\n\t\tselenium.clickAt(\"//ul[@class='title-list']/li/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletTitleListDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Publisher Test Page\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//ul[@class='title-list']/li/span/a/span\"));\n\t\tselenium.clickAt(\"//ul[@class='title-list']/li/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/a/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/a/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t}","id":54565,"modified_method":"public void testViewConfigurePortletTitleListDMImageAP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Publisher Test Page\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//ul[@class='title-list']/li/span/a/span\"));\n\t\tselenium.clickAt(\"//ul[@class='title-list']/li/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-preview-file-image-container']/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View in Context \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\"View in Context \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//img[@class='lfr-preview-file-image-current']\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewDMFolderDocumentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h3[@class='asset-title']/a\",\n\t\t\t\"DM Folder Document Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/span/a/span\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//button[@title='Icon View']\",\n\t\t\tRuntimeVariables.replace(\"Icon View\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Icon View' and contains(@class,'aui-state-active')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//button[@title='Icon View' and contains(@class,'aui-state-active')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Name\"));\n\t\tselenium.waitForText(\"//li[@class='folder selected']/a/span[2]\",\n\t\t\t\"DM Folder Name\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//li[@class='folder selected']/a/span[2]\", \"DM Folder Name\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//div[@id='_20_entries']/div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div[@id='_20_entries']/div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Version 1.0\"),\n\t\t\tselenium.getText(\"//h3[@class='version ']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download (0.3k)\"),\n\t\t\tselenium.getText(\"//span[1]/span/a/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[2]/div[2]/div/div[1]/div[2]/div[1]\", \"ISO-8859-1\"));\n\t\tassertTrue(selenium.isPartialText(\"//div[2]/div/div[1]/div[2]/div[2]\",\n\t\t\t\t\"text/plain\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0.3k\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t}","id":54566,"modified_method":"public void testViewDMFolderDocumentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h3[@class='asset-title']/a\",\n\t\t\t\"DM Folder Document Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"Download\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='asset-resource-info']/span/a/span\", \"(0k)\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//button[@title='Icon View']\");\n\t\tselenium.clickAt(\"//button[@title='Icon View']\",\n\t\t\tRuntimeVariables.replace(\"Icon View\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Icon View' and contains(@class,'aui-state-active')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//button[@title='Icon View' and contains(@class,'aui-state-active')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[contains(@class,'entry-link')]/span\"));\n\t\tselenium.clickAt(\"//a[contains(@class,'entry-link')]/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Name\"));\n\t\tselenium.waitForText(\"//li[@class='app-view-navigation-entry folder selected']/a/span[2]\",\n\t\t\t\"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[@class='app-view-navigation-entry folder selected']/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//a[contains(@class,'entry-link')]/span\"));\n\t\tselenium.clickAt(\"//a[contains(@class,'entry-link')]/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Document Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Version 1.0\"),\n\t\t\tselenium.getText(\"//h3[@class='version ']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download (0k)\"),\n\t\t\tselenium.getText(\"//span[1]/span/a/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[2]/div[2]/div/div[1]/div[2]/div[1]\", \"ISO-8859-1\"));\n\t\tassertTrue(selenium.isPartialText(\"//div[2]/div/div[1]/div[2]/div[2]\",\n\t\t\t\t\"text/plain\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0k\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewDMFolderImageAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//div[@class='asset-resource-info']/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//button[@title='Icon View']\",\n\t\t\tRuntimeVariables.replace(\"Icon View\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Icon View' and contains(@class,'aui-state-active')]\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//button[@title='Icon View' and contains(@class,'aui-state-active')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Name\"));\n\t\tselenium.waitForText(\"//li[@class='folder selected']/a/span[2]\",\n\t\t\t\"DM Folder Name\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//li[@class='folder selected']/a/span[2]\", \"DM Folder Name\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//div[@id='_20_entries']/div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div[@id='_20_entries']/div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Version 1.0\"),\n\t\t\tselenium.getText(\"//h3[@class='version ']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download (12.9k)\"),\n\t\t\tselenium.getText(\"//span[1]/span/a/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[2]/div[2]/div/div[1]/div[2]/div[1]\", \"image/jpeg\"));\n\t\tassertTrue(selenium.isPartialText(\"//div[2]/div/div[1]/div[2]/div[2]\",\n\t\t\t\t\"8\"));\n\t\tassertTrue(selenium.isPartialText(\"//div[2]/div/div/div[2]/div[3]\", \"92\"));\n\t\tassertTrue(selenium.isPartialText(\"//div[2]/div[4]\", \"394\"));\n\t}","id":54567,"modified_method":"public void testViewDMFolderImageAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='asset-resource-info']/div/img\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Documents and Media Test Page\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//button[@title='Icon View']\");\n\t\tselenium.clickAt(\"//button[@title='Icon View']\",\n\t\t\tRuntimeVariables.replace(\"Icon View\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[contains(@class,'aui-state-active') and @title='Icon View']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//button[contains(@class,'aui-state-active') and @title='Icon View']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\"//a[contains(@class,'entry-link')]/span\"));\n\t\tselenium.clickAt(\"//a[contains(@class,'entry-link')]/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Name\"));\n\t\tselenium.waitForText(\"//li[@class='app-view-navigation-entry folder selected']/a/span[2]\",\n\t\t\t\"DM Folder Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[@class='app-view-navigation-entry folder selected']/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//a[contains(@class,'entry-link')]/span\"));\n\t\tselenium.clickAt(\"//a[contains(@class,'entry-link')]/span\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Image Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"DM Folder Image Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Version 1.0\"),\n\t\t\tselenium.getText(\"//h3[@class='version ']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download (13k)\"),\n\t\t\tselenium.getText(\"//span[1]/span/a/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[2]/div[2]/div/div[1]/div[2]/div[1]\", \"image/jpeg\"));\n\t\tassertTrue(selenium.isPartialText(\"//div[2]/div/div[1]/div[2]/div[2]\",\n\t\t\t\t\"8\"));\n\t\tassertTrue(selenium.isPartialText(\"//div[2]/div/div/div[2]/div[3]\", \"92\"));\n\t\tassertTrue(selenium.isPartialText(\"//div[2]/div[4]\", \"394\"));\n\t}","commit_id":"834f9b04a6a99d021d41317673d7335b49b5c51b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@value='Add Category']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//img[@alt='Edit']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//img[@alt='Permissions']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Subscribe\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Banned Users\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@value='Add Subcategory']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//img[@alt='Edit']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//img[@alt='Permissions']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Subscribe\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@value='Post New Thread']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Thread Body Reply\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Sign in to vote.\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Split Thread\"));\n\t}","id":54568,"modified_method":"public void testGuest_AssertActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@value='Add Category']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//img[@title='Edit']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//img[@title='Permissions']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Subscribe\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Banned Users\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@value='Add Subcategory']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//img[@alt='Edit']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//img[@alt='Permissions']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Subscribe\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@value='Post New Thread']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Thread Body Reply\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Sign in to vote.\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Split Thread\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_View() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_58_login']\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\tassertTrue(selenium.isVisible(\"//a[@id='sign-in']\"));\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Thread Body Reply\"));\n\t}","id":54569,"modified_method":"public void testGuest_View() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_58_login']\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\tassertTrue(selenium.isVisible(\"//a[@id='sign-in']\"));\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Thread Body Reply\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLoginUsers() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Welcome\");\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//input[@id='_58_login']\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"MA@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForVisible(\"//input[@value='I Agree']\");\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\tselenium.waitForVisible(\"//input[@id='password1']\");\n\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//input[@id='reminderQueryAnswer']\");\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"Test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isTextPresent(\"You are signed in as MA Liferay.\"));\n\t\tselenium.waitForVisible(\"link=Sign Out\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForElementPresent(\"//input[@id='_58_login']\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"member@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForVisible(\"//input[@value='I Agree']\");\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\tselenium.waitForVisible(\"//input[@id='password1']\");\n\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//input[@id='reminderQueryAnswer']\");\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"Test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You are signed in as Member Liferay.\"));\n\t\tselenium.waitForVisible(\"link=Sign Out\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t}","id":54570,"modified_method":"public void testLoginUsers() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//input[@id='_58_login']\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"MA@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForVisible(\"//input[@value='I Agree']\");\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\tselenium.waitForVisible(\"//input[@id='password1']\");\n\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//input[@id='reminderQueryAnswer']\");\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"Test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isTextPresent(\"You are signed in as MA Liferay.\"));\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"member@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForVisible(\"//input[@value='I Agree']\");\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\tselenium.waitForVisible(\"//input[@id='password1']\");\n\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//input[@id='reminderQueryAnswer']\");\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"Test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You are signed in as Member Liferay.\"));\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMA_AddCategory() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t}","id":54571,"modified_method":"public void testMA_AddCategory() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMA_AddThread() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__19_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Thread Body\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Thread Body\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","id":54572,"modified_method":"public void testMA_AddThread() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__19_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Thread Body\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Thread Body\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMA_AssertActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Category']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_19_name']\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea[@id='_19_description']\"));\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Permissions']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Save']\"));\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"RSS\"),\n\t\t\tselenium.getText(\"//div[2]/div/span/a/span[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Banned Users\"),\n\t\t\tselenium.getText(\"//ul[@class='top-links-navigation']/li[6]/span/a\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li[6]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Banned Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no banned users.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Move Thread\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Reply\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li[2]/span/a\"));\n\t}","id":54573,"modified_method":"public void testMA_AssertActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Category']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_19_name']\"));\n\t\tassertTrue(selenium.isVisible(\"//textarea[@id='_19_description']\"));\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Permissions']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Permissions')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Permissions')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Permissions')]/a\",\n\t\t\tRuntimeVariables.replace(\"Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Save']\"));\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"RSS\"),\n\t\t\tselenium.getText(\"//div[2]/div/span/a/span[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Banned Users\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li[contains(.,'Banned Users')]/span/a\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li[contains(.,'Banned Users')]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Banned Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"There are no banned users.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Home\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Permissions')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Unsubscribe')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Lock Thread\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Lock Thread')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Move Thread\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Move Thread')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Reply\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li[2]/span/a\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMA_DeleteCategory() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//td[1]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Category Name\"));\n\t}","id":54574,"modified_method":"public void testMA_DeleteCategory() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//td[1]/a/strong\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no threads in this category.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Category Name\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMA_DeleteMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Thread Subject\"));\n\t}","id":54575,"modified_method":"public void testMA_DeleteMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There are no threads in this category.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Thread Subject\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMA_Login() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Sign In\");\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"ma@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54576,"modified_method":"public void testMA_Login() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"ma@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_AddThread() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject 2\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__19_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Thread Body 2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Thread Body 2\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body 2\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","id":54577,"modified_method":"public void testMember_AddThread() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject 2\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__19_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Thread Body 2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Thread Body 2\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body 2\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_AssertActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Search']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RSS\"),\n\t\t\tselenium.getText(\"//div[2]/div/span/a/span[1]\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Move Thread\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Add Category\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Banned Users\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Move\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Post New Thread']\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Reply\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Reply with Quote\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li[3]/span/a\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Permissions\"));\n\t}","id":54578,"modified_method":"public void testMember_AssertActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Search']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RSS\"),\n\t\t\tselenium.getText(\"//div[2]/div/span/a/span[1]\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Subscribe')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Subscribe')]/a\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Move Thread\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Add Category\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Banned Users\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Subscribe')]/a\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'RSS')]/a\",\n\t\t\t\t\"RSS\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Subscribe')]/a\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Move\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Post New Thread']\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li[contains(.,'Reply')]/span/a\",\n\t\t\t\t\"Reply\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Reply with Quote\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li[contains(.,'Reply with Quote')]/span/a\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Permissions\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_DeleteMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2 Edited\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.waitForElementPresent(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Thread Subject 2 Edited\"));\n\t}","id":54579,"modified_method":"public void testMember_DeleteMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2 Edited\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Thread Subject 2 Edited\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_EditThread() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@class='thread-bottom']/ul/li[2]/span/a\"));\n\t\tselenium.clickAt(\"//td[@class='thread-bottom']/ul/li[2]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject 2 Edited\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__19_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Thread Body 2 Edited\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Thread Body 2 Edited\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2 Edited\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2 Edited\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body 2 Edited\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","id":54580,"modified_method":"public void testMember_EditThread() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@class='thread-bottom']/ul/li[2]/span/a\"));\n\t\tselenium.clickAt(\"//td[@class='thread-bottom']/ul/li[2]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject 2 Edited\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__19_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Thread Body 2 Edited\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Thread Body 2 Edited\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2 Edited\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2 Edited\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body 2 Edited\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_Login() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Sign In\");\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"member@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54581,"modified_method":"public void testMember_Login() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"member@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_ReplyMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Reply\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li[2]/span/a\"));\n\t\tselenium.clickAt(\"//ul[@class='edit-controls lfr-component']/li[2]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__19_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Thread Body Reply\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Thread Body Reply\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr[2]/td/ul/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr[2]/td/ul/li[3]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr[2]/td/ul/li[4]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body Reply\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr/td[2]/div[2]\"));\n\t}","id":54582,"modified_method":"public void testMember_ReplyMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Reply\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li[contains(.,'Reply')]/span/a\"));\n\t\tselenium.clickAt(\"//ul[@class='edit-controls lfr-component']/li[contains(.,'Reply')]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__19_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Thread Body Reply\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_19_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Thread Body Reply\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr[2]/td/ul/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr[2]/td/ul/li[3]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr[2]/td/ul/li[4]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body Reply\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr/td[2]/div[2]\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_ViewMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Permissions\"));\n\t}","id":54583,"modified_method":"public void testMember_ViewMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Permissions\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(SA_AddMATest.class);\n\t\ttestSuite.addTestSuite(SA_AddMARoleTest.class);\n\t\ttestSuite.addTestSuite(SA_DefineMARoleTest.class);\n\t\ttestSuite.addTestSuite(SA_AddMemberTest.class);\n\t\ttestSuite.addTestSuite(SA_AddMemberRoleTest.class);\n\t\ttestSuite.addTestSuite(SA_DefineMemberRoleTest.class);\n\t\ttestSuite.addTestSuite(SA_AssignUserRolesTest.class);\n\t\ttestSuite.addTestSuite(SA_AddSiteTest.class);\n\t\ttestSuite.addTestSuite(SA_AddSiteMembersTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPageTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPortletTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(LoginUsersTest.class);\n\t\ttestSuite.addTestSuite(MA_LoginTest.class);\n\t\ttestSuite.addTestSuite(MA_AddCategoryTest.class);\n\t\ttestSuite.addTestSuite(MA_AddThreadTest.class);\n\t\ttestSuite.addTestSuite(MA_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(MA_DeleteMessageTest.class);\n\t\ttestSuite.addTestSuite(MA_DeleteCategoryTest.class);\n\t\ttestSuite.addTestSuite(MA_AddCategoryTest.class);\n\t\ttestSuite.addTestSuite(MA_AddThreadTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Member_LoginTest.class);\n\t\ttestSuite.addTestSuite(Member_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(Member_ViewMessageTest.class);\n\t\ttestSuite.addTestSuite(Member_ReplyMessageTest.class);\n\t\ttestSuite.addTestSuite(Member_AddThreadTest.class);\n\t\ttestSuite.addTestSuite(Member_EditThreadTest.class);\n\t\ttestSuite.addTestSuite(Member_DeleteMessageTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_ViewTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(TearDownMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\t\ttestSuite.addTestSuite(TearDownRoleTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\n\t\treturn testSuite;\n\t}","id":54584,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(SA_AddMATest.class);\n\t\ttestSuite.addTestSuite(SA_AddMARoleTest.class);\n\t\ttestSuite.addTestSuite(SA_DefineMARoleTest.class);\n\t\ttestSuite.addTestSuite(SA_AddMemberTest.class);\n\t\ttestSuite.addTestSuite(SA_AddMemberRoleTest.class);\n\t\ttestSuite.addTestSuite(SA_DefineMemberRoleTest.class);\n\t\ttestSuite.addTestSuite(SA_AssignUserRolesTest.class);\n\t\ttestSuite.addTestSuite(SA_AddSiteTest.class);\n\t\ttestSuite.addTestSuite(SA_AddSiteMembersTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPageTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPortletTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(LoginUsersTest.class);\n\t\ttestSuite.addTestSuite(MA_LoginTest.class);\n\t\ttestSuite.addTestSuite(MA_AddCategoryTest.class);\n\t\ttestSuite.addTestSuite(MA_AddThreadTest.class);\n\t\ttestSuite.addTestSuite(MA_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(MA_DeleteMessageTest.class);\n\t\ttestSuite.addTestSuite(MA_DeleteCategoryTest.class);\n\t\ttestSuite.addTestSuite(MA_AddCategoryTest.class);\n\t\ttestSuite.addTestSuite(MA_AddThreadTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(Member_LoginTest.class);\n\t\ttestSuite.addTestSuite(Member_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(Member_ViewMessageTest.class);\n\t\ttestSuite.addTestSuite(Member_ReplyMessageTest.class);\n\t\ttestSuite.addTestSuite(Member_AddThreadTest.class);\n\t\ttestSuite.addTestSuite(Member_EditThreadTest.class);\n\t\ttestSuite.addTestSuite(Member_DeleteMessageTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(Guest_ViewTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(TearDownMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\t\ttestSuite.addTestSuite(TearDownRoleTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddMARole() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Add\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Role\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_name']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Administrator\"));\n\t\tselenium.type(\"//textarea[@id='_128_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is the Message Boards Administrator Role.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54585,"modified_method":"public void testSA_AddMARole() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Add\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Regular Role')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Role\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Regular Role')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Regular Role')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_name']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Administrator\"));\n\t\tselenium.type(\"//textarea[@id='_128_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is the Message Boards Administrator Role.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddMA() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Mrs.\"));\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"MA\"));\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"MA@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"MA\"));\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=July\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"label=26\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"label=1987\"));\n\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\tRuntimeVariables.replace(\"label=Female\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\"Password\"));\n\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54586,"modified_method":"public void testSA_AddMA() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'User')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'User')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'User')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Mrs.\"));\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"MA\"));\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"MA@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"MA\"));\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=July\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"label=26\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"label=1987\"));\n\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\tRuntimeVariables.replace(\"label=Female\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\"Password\"));\n\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddMemberRole() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Role\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_name']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.type(\"//textarea[@id='_128_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"This is the Member Role.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54587,"modified_method":"public void testSA_AddMemberRole() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Regular Role')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Role\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Regular Role')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Regular Role')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_name']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.type(\"//textarea[@id='_128_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"This is the Member Role.\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddMember() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"Member@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\tRuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\"Password\"));\n\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54588,"modified_method":"public void testSA_AddMember() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'User')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'User')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'User')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_125_prefixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Mr.\"));\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"Member@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"//select[@id='_125_suffixId']\",\n\t\t\tRuntimeVariables.replace(\"label=Phd.\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=April\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"//select[@id='_125_birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"label=1986\"));\n\t\tselenium.select(\"//select[@id='_125_male']\",\n\t\t\tRuntimeVariables.replace(\"label=Male\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\"Password\"));\n\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Page\"),\n\t\t\tselenium.getText(\"//div/span/button[1]\"));\n\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@id='_156_addLayoutName_en_US']\");\n\t\tselenium.type(\"//input[@id='_156_addLayoutName_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54589,"modified_method":"public void testSA_AddPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Manage Pages')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Manage Pages')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Manage Pages')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Page\"),\n\t\t\tselenium.getText(\"//div/span/button[1]\"));\n\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@id='_156_addLayoutName_en_US']\");\n\t\tselenium.type(\"//input[@id='_156_addLayoutName_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title='Message Boards']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForElementPresent(\"//section\");\n\t\tassertTrue(selenium.isElementPresent(\"//section\"));\n\t}","id":54590,"modified_method":"public void testSA_AddPortlet() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/\");\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"m\"));\n\t\tselenium.waitForVisible(\"//div[@title='Message Boards']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddSiteMembers() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Memberships\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add Members\",\n\t\t\tRuntimeVariables.replace(\"Add Members\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_174_keywords']\",\n\t\t\tRuntimeVariables.replace(\"MA@liferay.com\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isChecked(\"//input[@name='_174_allRowIds']\"));\n\t\tselenium.clickAt(\"//input[@name='_174_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"Check All\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_174_allRowIds']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Add Members\",\n\t\t\tRuntimeVariables.replace(\"Add Members\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_174_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isChecked(\"//input[@name='_174_allRowIds']\"));\n\t\tselenium.clickAt(\"//input[@name='_174_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"Check All\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_174_allRowIds']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54591,"modified_method":"public void testSA_AddSiteMembers() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Manage Memberships')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Memberships\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Manage Memberships')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Manage Memberships')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"link=Add Members\",\n\t\t\tRuntimeVariables.replace(\"Add Members\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'User')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'User')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'User')]/a\",\n\t\t\tRuntimeVariables.replace(\"User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_174_keywords']\",\n\t\t\tRuntimeVariables.replace(\"MA@liferay.com\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isChecked(\"//input[@name='_174_allRowIds']\"));\n\t\tselenium.clickAt(\"//input[@name='_174_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"Check All\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_174_allRowIds']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Add Members\",\n\t\t\tRuntimeVariables.replace(\"Add Members\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'User')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'User')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'User')]/a\",\n\t\t\tRuntimeVariables.replace(\"User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_174_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isChecked(\"//input[@name='_174_allRowIds']\"));\n\t\tselenium.clickAt(\"//input[@name='_174_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"Check All\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_174_allRowIds']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddSite() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blank Site\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t}","id":54592,"modified_method":"public void testSA_AddSite() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blank Site')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blank Site\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blank Site')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Blank Site')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AssignUserRoles() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"MA@liferay.com\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MA\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"MA\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_rolesLink']\", \"Roles\"));\n\t\tselenium.clickAt(\"//a[@id='_125_rolesLink']\",\n\t\t\tRuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForVisible(\"//div[6]/span[1]/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//div[6]/span[1]/a/span\"));\n\t\tselenium.clickAt(\"//div[6]/span[1]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"title=Users and Organizations\");\n\t\tselenium.waitForVisible(\"link=Message Boards Administrator\");\n\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Message Boards Administrator\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Administrator\"));\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForPartialText(\"//div[@id='_125_rolesSearchContainer']\",\n\t\t\t\"Message Boards Administrator\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='_125_rolesSearchContainer']\",\n\t\t\t\t\"Message Boards Administrator\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Member\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_rolesLink']\", \"Roles\"));\n\t\tselenium.clickAt(\"//a[@id='_125_rolesLink']\",\n\t\t\tRuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForVisible(\"//div[6]/span[1]/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//div[6]/span[1]/a/span\"));\n\t\tselenium.clickAt(\"//div[6]/span[1]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"title=Users and Organizations\");\n\t\tselenium.waitForVisible(\"link=Member\");\n\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Member\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForPartialText(\"//div[@id='_125_rolesSearchContainer']\",\n\t\t\t\"Member\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='_125_rolesSearchContainer']\", \"Member\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54593,"modified_method":"public void testSA_AssignUserRoles() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"MA\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"MA\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"MA\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_rolesLink']\", \"Roles\"));\n\t\tselenium.clickAt(\"//a[@id='_125_rolesLink']\",\n\t\t\tRuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForVisible(\"//div[6]/span[1]/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//div[6]/span[1]/a/span\"));\n\t\tselenium.clickAt(\"//div[6]/span[1]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"title=Users and Organizations\");\n\t\tselenium.waitForVisible(\"link=Message Boards Administrator\");\n\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Message Boards Administrator\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Administrator\"));\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForPartialText(\"//div[@id='_125_rolesSearchContainer']\",\n\t\t\t\"Message Boards Administrator\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='_125_rolesSearchContainer']\",\n\t\t\t\t\"Message Boards Administrator\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Member\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_rolesLink']\", \"Roles\"));\n\t\tselenium.clickAt(\"//a[@id='_125_rolesLink']\",\n\t\t\tRuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForVisible(\"//div[6]/span[1]/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//div[6]/span[1]/a/span\"));\n\t\tselenium.clickAt(\"//div[6]/span[1]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"title=Users and Organizations\");\n\t\tselenium.waitForVisible(\"link=Member\");\n\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Member\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForPartialText(\"//div[@id='_125_rolesSearchContainer']\",\n\t\t\t\"Member\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='_125_rolesSearchContainer']\", \"Member\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_DefineMARole() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Message Boards Administrator\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Administrator\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"label=Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"xPath=(//input[@name='_128_allRowIds'])[1]\"));\n\t\tselenium.clickAt(\"xPath=(//input[@name='_128_allRowIds'])[1]\",\n\t\t\tRuntimeVariables.replace(\"Select All [Message Boards]\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"xPath=(//input[@name='_128_allRowIds'])[1]\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"xPath=(//input[@name='_128_allRowIds'])[2]\"));\n\t\tselenium.clickAt(\"xPath=(//input[@name='_128_allRowIds'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Select All [Message Board Category]\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"xPath=(//input[@name='_128_allRowIds'])[2]\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"xPath=(//input[@name='_128_allRowIds'])[3]\"));\n\t\tselenium.clickAt(\"xPath=(//input[@name='_128_allRowIds'])[3]\",\n\t\t\tRuntimeVariables.replace(\"Select All [Message Board Message]\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"xPath=(//input[@name='_128_allRowIds'])[3]\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54594,"modified_method":"public void testSA_DefineMARole() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Message Boards Administrator\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Administrator\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"label=Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"xPath=(//input[@name='_128_allRowIds'])[1]\"));\n\t\tselenium.clickAt(\"xPath=(//input[@name='_128_allRowIds'])[1]\",\n\t\t\tRuntimeVariables.replace(\"Select All [Message Boards]\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"xPath=(//input[@name='_128_allRowIds'])[1]\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"xPath=(//input[@name='_128_allRowIds'])[2]\"));\n\t\tselenium.clickAt(\"xPath=(//input[@name='_128_allRowIds'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Select All [Message Board Category]\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"xPath=(//input[@name='_128_allRowIds'])[2]\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"xPath=(//input[@name='_128_allRowIds'])[3]\"));\n\t\tselenium.clickAt(\"xPath=(//input[@name='_128_allRowIds'])[3]\",\n\t\t\tRuntimeVariables.replace(\"Select All [Message Board Message]\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"xPath=(//input[@name='_128_allRowIds'])[3]\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_DefineMemberRole() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Member\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"label=Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBCategoryADD_FILE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBCategoryADD_MESSAGE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBCategoryREPLY_TO_MESSAGE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBCategorySUBSCRIBE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBCategoryVIEW']\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBMessageSUBSCRIBE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBMessageVIEW']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54595,"modified_method":"public void testSA_DefineMemberRole() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Member\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"label=Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBCategoryADD_FILE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBCategoryADD_MESSAGE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBCategoryREPLY_TO_MESSAGE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBCategorySUBSCRIBE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBCategoryVIEW']\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBMessageSUBSCRIBE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@value='com.liferay.portlet.messageboards.model.MBMessageVIEW']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMBCategory() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/site-name/\");\n\t\t\t\tselenium.waitForVisible(\"link=Message Boards Permissions Page\");\n\t\t\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean mbCategory1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a/strong\");\n\n\t\t\t\tif (!mbCategory1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean mbCategory2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a/strong\");\n\n\t\t\t\tif (!mbCategory2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"eval(selenium.isElementPresent('//a/strong'))\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean mbCategory3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a/strong\");\n\n\t\t\t\tif (!mbCategory3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean mbCategory4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a/strong\");\n\n\t\t\t\tif (!mbCategory4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean mbCategory5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a/strong\");\n\n\t\t\t\tif (!mbCategory5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54596,"modified_method":"public void testTearDownMBCategory() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/site-name/\");\n\t\t\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean category1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!category1Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tboolean category2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!category2Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tboolean category3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!category3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tboolean category4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!category4Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tboolean category5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!category5Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"There are no threads in this category.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownRole() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Message Boards Administrator\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Regular\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"This is the Message Boards Administrator Role.\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\n\t\t\t\tboolean role1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!role1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Member\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Regular\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"This is the Member Role.\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\n\t\t\t\tboolean role2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!role2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54597,"modified_method":"public void testTearDownRole() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Message Boards Administrator\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Regular\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"This is the Message Boards Administrator Role.\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\n\t\t\t\tboolean role1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!role1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Member\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Regular\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"This is the Member Role.\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\n\t\t\t\tboolean role2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!role2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_allRowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean advancedVisible = selenium.isVisible(\n\t\t\t\t\t\t\"link=Advanced \\u00bb\");\n\n\t\t\t\tif (!advancedVisible) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.waitForVisible(\"//select[@id='_125_status']\");\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean users2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!users2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54598,"modified_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean usersPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\");\n\n\t\t\t\tif (!usersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@name='_125_allRowIds'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"xPath=(//input[@name='_125_allRowIds'])[2]\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Deactivate']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Deactivate\"));\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to deactivate the selected users?\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForElementPresent(\"//a[.='\\u00ab Basic']\");\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\n\t\t\t\t\t\t\"//a[.='\\u00ab Basic']\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//a[.='\\u00ab Basic']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//a[.='Advanced \\u00bb']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced\"));\n\t\t\t\tselenium.waitForVisible(\"//select[@id='_125_status']\");\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"xPath=(//input[@value='Search'])[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\t\tboolean usersNotDeleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\");\n\n\t\t\t\tif (!usersNotDeleted) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_125_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.waitForText(\"//div[@class='portlet-msg-info']\",\n\t\t\t\t\t\"No users were found.\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"No users were found.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\t\t\tselenium.clickAt(\"//a[.='\\u00ab Basic']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Basic\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"9935e005181aa193e0f815ce0119b37e80bca344","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSitesPublicPagePortletNavigation()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/community-name/public-page\");\n\t\tselenium.waitForVisible(\"link=Public Page\");\n\t\tselenium.clickAt(\"link=Public Page\",\n\t\t\tRuntimeVariables.replace(\"Public Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title='Navigation']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Navigation']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54599,"modified_method":"public void testAddSitesPublicPagePortletNavigation()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/public-page\");\n\t\tselenium.clickAt(\"link=Public Page\",\n\t\t\tRuntimeVariables.replace(\"Public Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"n\"));\n\t\tselenium.waitForVisible(\"//li[@title='Navigation']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Navigation']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"93de4886a4e784d135dec6994324b3e48e329ab4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureSitesApplicationAdapterNone()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Community Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\"//span[@class='aui-legend']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//label[@for='customJspServletContextName']\",\n\t\t\t\t\"Application Adapter\"));\n\t\tselenium.select(\"//select[@id='_165_customJspServletContextName']\",\n\t\t\tRuntimeVariables.replace(\"None\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"None\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_165_customJspServletContextName']\"));\n\t}","id":54600,"modified_method":"public void testConfigureSitesApplicationAdapterNone()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_134_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Site Name')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit Settings')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit Settings')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit Settings')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\"//span[@class='aui-legend']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//label[@for='customJspServletContextName']\",\n\t\t\t\t\"Application Adapter\"));\n\t\tselenium.select(\"//select[@id='_165_customJspServletContextName']\",\n\t\t\tRuntimeVariables.replace(\"None\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"None\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_165_customJspServletContextName']\"));\n\t}","commit_id":"93de4886a4e784d135dec6994324b3e48e329ab4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddSitesTest.class);\n\t\ttestSuite.addTestSuite(ConfigureSitesApplicationAdapterNoneTest.class);\n\t\ttestSuite.addTestSuite(AddSitesPublicPageTest.class);\n\t\ttestSuite.addTestSuite(AddSitesPublicPagePortletNavigationTest.class);\n\t\ttestSuite.addTestSuite(ViewPortletApplicationAdapterNoneTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\t\ttestSuite.addTestSuite(TearDownSitesTest.class);\n\n\t\treturn testSuite;\n\t}","id":54601,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(ConfigureSitesApplicationAdapterNoneTest.class);\n\t\ttestSuite.addTestSuite(AddSitesPublicPageTest.class);\n\t\ttestSuite.addTestSuite(AddSitesPublicPagePortletNavigationTest.class);\n\t\ttestSuite.addTestSuite(ViewPortletApplicationAdapterNoneTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"93de4886a4e784d135dec6994324b3e48e329ab4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureSitesSampleApplicationAdapterHook()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Community Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\"//span[@class='aui-legend']\"));\n\t\tselenium.select(\"//select[@id='_165_customJspServletContextName']\",\n\t\t\tRuntimeVariables.replace(\"Sample Application Adapter Hook\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Sample Application Adapter Hook\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_165_customJspServletContextName']\"));\n\t}","id":54602,"modified_method":"public void testConfigureSitesSampleApplicationAdapterHook()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_134_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Site Name')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit Settings')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit Settings')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit Settings')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\"//span[@class='aui-legend']\"));\n\t\tselenium.select(\"//select[@id='_165_customJspServletContextName']\",\n\t\t\tRuntimeVariables.replace(\"Sample Application Adapter Hook\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Sample Application Adapter Hook\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_165_customJspServletContextName']\"));\n\t}","commit_id":"93de4886a4e784d135dec6994324b3e48e329ab4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddSitesTest.class);\n\t\ttestSuite.addTestSuite(ConfigureSitesSampleApplicationAdapterHookTest.class);\n\t\ttestSuite.addTestSuite(AddSitesPublicPageTest.class);\n\t\ttestSuite.addTestSuite(AddSitesPublicPagePortletNavigationTest.class);\n\t\ttestSuite.addTestSuite(ViewPortletSampleApplicationAdapterHookTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\t\ttestSuite.addTestSuite(TearDownSitesTest.class);\n\n\t\treturn testSuite;\n\t}","id":54603,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(ConfigureSitesSampleApplicationAdapterHookTest.class);\n\t\ttestSuite.addTestSuite(AddSitesPublicPageTest.class);\n\t\ttestSuite.addTestSuite(AddSitesPublicPagePortletNavigationTest.class);\n\t\ttestSuite.addTestSuite(ViewPortletSampleApplicationAdapterHookTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"93de4886a4e784d135dec6994324b3e48e329ab4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletApplicationAdapterNone()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/community-name/public-page\");\n\t\tselenium.waitForVisible(\"link=Public Page\");\n\t\tselenium.clickAt(\"link=Public Page\",\n\t\t\tRuntimeVariables.replace(\"Public Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/div/ul[contains(@class,'breadcrumbs-horizontal')]/li[1]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Community Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/div/ul[contains(@class,'breadcrumbs-horizontal')]/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Public Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/div/ul[contains(@class,'breadcrumbs-horizontal')]/li[3]/span/a\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This was modified by the Sample Application Adapter.\"));\n\t}","id":54604,"modified_method":"public void testViewPortletApplicationAdapterNone()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/public-page\");\n\t\tselenium.clickAt(\"link=Public Page\",\n\t\t\tRuntimeVariables.replace(\"Public Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//span[@title='Go to Site Name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Navigation\"),\n\t\t\tselenium.getText(\"//span[@class='portlet-title-text']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/div/ul/li/span/a[contains(.,'Site Name')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Public Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/div/ul/li/span/a[contains(.,'Public Page')]\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This was modified by the Sample Application Adapter.\"));\n\t}","commit_id":"93de4886a4e784d135dec6994324b3e48e329ab4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletSampleApplicationAdapterHook()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/community-name/public-page\");\n\t\tselenium.waitForVisible(\"link=Public Page\");\n\t\tselenium.clickAt(\"link=Public Page\",\n\t\t\tRuntimeVariables.replace(\"Public Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Liferay\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/div/ul[contains(@class,'breadcrumbs-horizontal')]/li[1]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Community Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/div/ul[contains(@class,'breadcrumbs-horizontal')]/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Public Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/div/ul[contains(@class,'breadcrumbs-horizontal')]/li[3]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This was modified by the Sample Application Adapter.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']/p\"));\n\t}","id":54605,"modified_method":"public void testViewPortletSampleApplicationAdapterHook()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/site-name/public-page\");\n\t\tselenium.clickAt(\"link=Public Page\",\n\t\t\tRuntimeVariables.replace(\"Public Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//span[@title='Go to Site Name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Navigation\"),\n\t\t\tselenium.getText(\"//span[@class='portlet-title-text']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/div/ul/li/span/a[contains(.,'Site Name')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Public Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-body']/div/ul/li/span/a[contains(.,'Public Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This was modified by the Sample Application Adapter.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']/p\"));\n\t}","commit_id":"93de4886a4e784d135dec6994324b3e48e329ab4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddRoleWebContentEditorCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Role\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_name']\",\n\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\tselenium.type(\"//textarea[@id='_128_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Web Content Editors are users who have full permissions and usage over all available Web Content\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Web Content Editor\"));\n\t}","id":54606,"modified_method":"public void testAddRoleWebContentEditorCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Regular Role')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Role\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Regular Role')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Regular Role')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_name']\",\n\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\tselenium.type(\"//textarea[@id='_128_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Web Content Editors are users who have full permissions and usage over all available Web Content\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Web Content Editor\"));\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUserGmail() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"usersn\",\n\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\tassertEquals(\"liferay.qa.testing.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\tassertEquals(\"userfn\",\n\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\tassertEquals(\"userln\", selenium.getValue(\"//input[@id='_125_lastName']\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\"Password\"));\n\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54607,"modified_method":"public void testAddUserGmail() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"User\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(\"usersn\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\t\t\tassertEquals(\"liferay.qa.testing.trunk@gmail.com\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\t\t\tassertEquals(\"userfn\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\t\t\tassertEquals(\"userln\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_lastName']\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_125_passwordLink']\", \"Password\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Password\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_125_password1']\");\n\t\t\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"password\"));\n\n\t\t\t\tboolean rememberMeChecked1 = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\t\t\tif (rememberMeChecked1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\t\t\tselenium.clickAt(\"link=Sign Out\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeChecked2 = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\t\t\tif (rememberMeChecked2) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\n\t\t\tcase 3:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCWebContentCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"link=Site Name\"));\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Web Content Name\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Web Content Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Web Content Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t}","id":54608,"modified_method":"public void testAddWCWebContentCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"link=Site Name\"));\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\"//div[@class='entry-thumbnail']/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//a[@class='entry-link']/span\"));\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(ConfigureServerAdministrationMailTest.class);\n\t\ttestSuite.addTestSuite(EditPortalInstanceMailDomainTest.class);\n\t\ttestSuite.addTestSuite(AddUserGmailTest.class);\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(AssignMembersSiteUserTest.class);\n\t\ttestSuite.addTestSuite(ConfigureWCPortletEmailFromGmailServerCPTest.class);\n\t\ttestSuite.addTestSuite(ConfigureWCPortletWebContentAddedEmailCPTest.class);\n\t\ttestSuite.addTestSuite(AddRoleWebContentEditorCPTest.class);\n\t\ttestSuite.addTestSuite(DefineRoleWebContentEditorCPTest.class);\n\t\ttestSuite.addTestSuite(AssignMembersRoleWebContentEditorUserCPActionsTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SignInTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SubscribeWCPortletCPTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(AddWCWebContentCPTest.class);\n\t\ttestSuite.addTestSuite(Gmail_ViewWCWebContentAddedEmailTest.class);\n\t\ttestSuite.addTestSuite(TearDownRoleWebContentEditorTest.class);\n\t\ttestSuite.addTestSuite(TearDownWCWebContentCPTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownServerTest.class);\n\t\ttestSuite.addTestSuite(TearDownEmailConfigurationTest.class);\n\n\t\treturn testSuite;\n\t}","id":54609,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(ConfigureServerAdministrationMailTest.class);\n\t\ttestSuite.addTestSuite(EditPortalInstanceMailDomainTest.class);\n\t\ttestSuite.addTestSuite(AddUserGmailTest.class);\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(AddMembersSiteUserTest.class);\n\t\ttestSuite.addTestSuite(ConfigureWCPortletEmailFromGmailServerCPTest.class);\n\t\ttestSuite.addTestSuite(ConfigureWCPortletWebContentAddedEmailCPTest.class);\n\t\ttestSuite.addTestSuite(AddRoleWebContentEditorCPTest.class);\n\t\ttestSuite.addTestSuite(DefineRoleWebContentEditorCPTest.class);\n\t\ttestSuite.addTestSuite(AssignMembersRoleWebContentEditorUserCPActionsTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SignInTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SubscribeWCPortletCPTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(AddWCWebContentCPTest.class);\n\t\ttestSuite.addTestSuite(Gmail_ViewWCWebContentAddedEmailTest.class);\n\t\ttestSuite.addTestSuite(TearDownRoleWebContentEditorTest.class);\n\t\ttestSuite.addTestSuite(TearDownWCWebContentCPTest.class);\n\t\ttestSuite.addTestSuite(TearDownEmailConfigurationTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownServerTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssignMembersRoleWebContentEditorUserCPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Available\", RuntimeVariables.replace(\"Available\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"user\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@name='_128_rowIds']\"));\n\t\tselenium.check(\"//input[@name='_128_rowIds']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_128_rowIds']\"));\n\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t}","id":54610,"modified_method":"public void testAssignMembersRoleWebContentEditorUserCPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Members')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Members')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Assign Members')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Available\", RuntimeVariables.replace(\"Available\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"user\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@name='_128_rowIds']\"));\n\t\tselenium.check(\"//input[@name='_128_rowIds']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_128_rowIds']\"));\n\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureServerAdministrationMail()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\tRuntimeVariables.replace(\"Server Administration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Mail\", RuntimeVariables.replace(\"Mail\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_137_pop3Host']\",\n\t\t\tRuntimeVariables.replace(\"pop.gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_pop3Port']\",\n\t\t\tRuntimeVariables.replace(\"995\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_137_pop3SecureCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_137_pop3SecureCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Use a Secure Network Connection\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_pop3SecureCheckbox']\"));\n\t\tselenium.type(\"//input[@id='_137_pop3User']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_pop3Password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tselenium.type(\"//input[@id='_137_smtpHost']\",\n\t\t\tRuntimeVariables.replace(\"smtp.gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_smtpPort']\",\n\t\t\tRuntimeVariables.replace(\"465\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_137_smtpSecureCheckbox']\"));\n\t\tselenium.click(\"//input[@id='_137_smtpSecureCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_smtpSecureCheckbox']\"));\n\t\tselenium.type(\"//input[@id='_137_smtpUser']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_smtpPassword']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"pop.gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_pop3Host']\"));\n\t\tassertEquals(\"995\", selenium.getValue(\"//input[@id='_137_pop3Port']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_pop3SecureCheckbox']\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_pop3User']\"));\n\t\tassertEquals(\"loveispatient\",\n\t\t\tselenium.getValue(\"//input[@id='_137_pop3Password']\"));\n\t\tassertEquals(\"smtp.gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_smtpHost']\"));\n\t\tassertEquals(\"465\", selenium.getValue(\"//input[@id='_137_smtpPort']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_smtpSecureCheckbox']\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_smtpUser']\"));\n\t\tassertEquals(\"loveispatient\",\n\t\t\tselenium.getValue(\"//input[@id='_137_smtpPassword']\"));\n\t}","id":54611,"modified_method":"public void testConfigureServerAdministrationMail()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\tRuntimeVariables.replace(\"Server Administration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Mail\", RuntimeVariables.replace(\"Mail\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_137_pop3Host']\",\n\t\t\tRuntimeVariables.replace(\"pop.gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_pop3Port']\",\n\t\t\tRuntimeVariables.replace(\"995\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_137_pop3SecureCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_137_pop3SecureCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Use a Secure Network Connection\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_pop3SecureCheckbox']\"));\n\t\tselenium.type(\"//input[@id='_137_pop3User']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_pop3Password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tselenium.type(\"//input[@id='_137_smtpHost']\",\n\t\t\tRuntimeVariables.replace(\"smtp.gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_smtpPort']\",\n\t\t\tRuntimeVariables.replace(\"465\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_137_smtpSecureCheckbox']\"));\n\t\tselenium.click(\"//input[@id='_137_smtpSecureCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_smtpSecureCheckbox']\"));\n\t\tselenium.type(\"//input[@id='_137_smtpUser']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_137_smtpPassword']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"pop.gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_pop3Host']\"));\n\t\tassertEquals(\"995\", selenium.getValue(\"//input[@id='_137_pop3Port']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_pop3SecureCheckbox']\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_pop3User']\"));\n\t\tassertEquals(\"loveispatient\",\n\t\t\tselenium.getValue(\"//input[@id='_137_pop3Password']\"));\n\t\tassertEquals(\"smtp.gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_smtpHost']\"));\n\t\tassertEquals(\"465\", selenium.getValue(\"//input[@id='_137_smtpPort']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_137_smtpSecureCheckbox']\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_137_smtpUser']\"));\n\t\tassertEquals(\"loveispatient\",\n\t\t\tselenium.getValue(\"//input[@id='_137_smtpPassword']\"));\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureWCPortletEmailFromGmailServerCP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"link=Site Name\"));\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tselenium.waitForVisible(\"link=Email From\");\n\t\tselenium.clickAt(\"link=Email From\",\n\t\t\tRuntimeVariables.replace(\"Email From\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_86_emailFromName']\",\n\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\tselenium.type(\"//input[@id='_86_emailFromAddress']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Administrator\",\n\t\t\tselenium.getValue(\"//input[@id='_86_emailFromName']\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_86_emailFromAddress']\"));\n\t}","id":54612,"modified_method":"public void testConfigureWCPortletEmailFromGmailServerCP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"link=Site Name\"));\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iframe[@id='_15_configurationIframeDialog']\");\n\t\tselenium.selectFrame(\"//iframe[@id='_15_configurationIframeDialog']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/escape/escape-min.js')]\");\n\t\tselenium.waitForVisible(\"link=Email From\");\n\t\tselenium.clickAt(\"link=Email From\",\n\t\t\tRuntimeVariables.replace(\"Email From\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.type(\"//input[@id='_86_emailFromName']\",\n\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\tselenium.type(\"//input[@id='_86_emailFromAddress']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Administrator\",\n\t\t\tselenium.getValue(\"//input[@id='_86_emailFromName']\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_86_emailFromAddress']\"));\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureWCPortletWebContentAddedEmailCP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"link=Site Name\"));\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tselenium.waitForVisible(\"link=Web Content Added Email\");\n\t\tselenium.clickAt(\"link=Web Content Added Email\",\n\t\t\tRuntimeVariables.replace(\"Web Content Added Email\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_emailArticleAddedEnabledCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_emailArticleAddedEnabledCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enabled\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_emailArticleAddedEnabledCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_emailArticleAddedEnabledCheckbox']\"));\n\t}","id":54613,"modified_method":"public void testConfigureWCPortletWebContentAddedEmailCP()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\t\t\tselenium.getText(\"link=Site Name\"));\n\t\t\t\tselenium.clickAt(\"link=Site Name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[@id='_15_configurationIframeDialog']\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[@id='_15_configurationIframeDialog']\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/escape/escape-min.js')]\");\n\t\t\t\tselenium.waitForVisible(\"link=Web Content Added Email\");\n\t\t\t\tselenium.clickAt(\"link=Web Content Added Email\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Added Email\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\t\tboolean emailArticleAddedEnabled = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_emailArticleAddedEnabledCheckbox']\");\n\n\t\t\t\tif (emailArticleAddedEnabled) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_emailArticleAddedEnabledCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enabled\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_emailArticleAddedEnabledCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_emailArticleAddedEnabledCheckbox']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureWCPortletWebContentUpdatedEmailCP()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"link=Site Name\"));\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tselenium.waitForVisible(\"link=Web Content Updated Email\");\n\t\tselenium.clickAt(\"link=Web Content Updated Email\",\n\t\t\tRuntimeVariables.replace(\"Web Content Updated Email\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_emailArticleUpdatedEnabledCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_emailArticleUpdatedEnabledCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enabled\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_emailArticleUpdatedEnabledCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_emailArticleUpdatedEnabledCheckbox']\"));\n\t}","id":54614,"modified_method":"public void testConfigureWCPortletWebContentUpdatedEmailCP()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\t\t\tselenium.getText(\"link=Site Name\"));\n\t\t\t\tselenium.clickAt(\"link=Site Name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[@id='_15_configurationIframeDialog']\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[@id='_15_configurationIframeDialog']\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/escape/escape-min.js')]\");\n\t\t\t\tselenium.waitForVisible(\"link=Web Content Updated Email\");\n\t\t\t\tselenium.clickAt(\"link=Web Content Updated Email\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Updated Email\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\t\tboolean emailArticleUpdatedEnabled = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_emailArticleUpdatedEnabledCheckbox']\");\n\n\t\t\t\tif (emailArticleUpdatedEnabled) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_emailArticleUpdatedEnabledCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enabled\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_emailArticleUpdatedEnabledCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_emailArticleUpdatedEnabledCheckbox']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefineRoleWebContentEditorCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content Editor\"),\n\t\t\tselenium.getText(\"//td/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Regular\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Web Content Editors are users who have full permissions and usage over all available Web Content\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tselenium.clickAt(\"//td/a\",\n\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content Editor\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"label=Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalSUBSCRIBE']\"));\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalSUBSCRIBE']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalSUBSCRIBE']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"wwwwwwwww\"));\n\t\tselenium.keyPress(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@value='15ACCESS_IN_CONTROL_PANEL']\"));\n\t\tselenium.check(\"//input[@value='15ACCESS_IN_CONTROL_PANEL']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@value='15ACCESS_IN_CONTROL_PANEL']\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@value='15VIEW']\"));\n\t\tselenium.check(\"//input[@value='15VIEW']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@value='15VIEW']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\tselenium.getText(\"//tr[5]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Access in Control Panel\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t}","id":54615,"modified_method":"public void testDefineRoleWebContentEditorCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Web Content Editor\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Regular\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Web Content Editors are users who have full permissions and usage over all available Web Content\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Web Content Editor\"),\n\t\t\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\t\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean subscribeChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalSUBSCRIBE']\");\n\n\t\t\t\tif (subscribeChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.check(\n\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalSUBSCRIBE']\");\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalSUBSCRIBE']\"));\n\n\t\t\t\tboolean viewWCMChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalVIEW']\");\n\n\t\t\t\tif (viewWCMChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.check(\n\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalVIEW']\");\n\n\t\t\tcase 3:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalVIEW']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The role permissions were updated.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\t\t\tRuntimeVariables.replace(\"index=112\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean accessCPChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@value='15ACCESS_IN_CONTROL_PANEL']\");\n\n\t\t\t\tif (accessCPChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.check(\"//input[@value='15ACCESS_IN_CONTROL_PANEL']\");\n\n\t\t\tcase 4:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@value='15ACCESS_IN_CONTROL_PANEL']\"));\n\n\t\t\t\tboolean viewWCChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@value='15VIEW']\");\n\n\t\t\t\tif (viewWCChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.check(\"//input[@value='15VIEW']\");\n\n\t\t\tcase 5:\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@value='15VIEW']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The role permissions were updated.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Access in Control Panel\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\t\t\tselenium.getText(\"//tr[5]/td[3]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\t\t\tselenium.getText(\"//tr[6]/td[3]\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditPortalInstanceMailDomain() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"localhost\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tselenium.clickAt(\"//td[4]/a\", RuntimeVariables.replace(\"liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\tRuntimeVariables.replace(\"gmail.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"localhost\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"gmail.com\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t}","id":54616,"modified_method":"public void testEditPortalInstanceMailDomain() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"localhost\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tselenium.clickAt(\"//td[4]/a\", RuntimeVariables.replace(\"liferay.com\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\tRuntimeVariables.replace(\"gmail.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"localhost\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"gmail.com\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditWCContentCPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Web Content Name Edit\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Web Content Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"Web Content Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Publish']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content Name Edit\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t}","id":54617,"modified_method":"public void testEditWCContentCPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//div[@class='entry-thumbnail']/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//a[@class='entry-link']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@data-title='WC WebContent Title']/span/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//div[@data-title='WC WebContent Title']/span/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title Edit\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Styles\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\"//div[@class='entry-thumbnail']/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title Edit\"),\n\t\t\tselenium.getText(\"//a[@class='entry-link']/span\"));\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(ConfigureServerAdministrationMailTest.class);\n\t\ttestSuite.addTestSuite(EditPortalInstanceMailDomainTest.class);\n\t\ttestSuite.addTestSuite(AddUserGmailTest.class);\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(AssignMembersSiteUserTest.class);\n\t\ttestSuite.addTestSuite(ConfigureWCPortletEmailFromGmailServerCPTest.class);\n\t\ttestSuite.addTestSuite(ConfigureWCPortletWebContentAddedEmailCPTest.class);\n\t\ttestSuite.addTestSuite(ConfigureWCPortletWebContentUpdatedEmailCPTest.class);\n\t\ttestSuite.addTestSuite(AddRoleWebContentEditorCPTest.class);\n\t\ttestSuite.addTestSuite(DefineRoleWebContentEditorCPTest.class);\n\t\ttestSuite.addTestSuite(AssignMembersRoleWebContentEditorUserCPActionsTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SignInTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SubscribeWCPortletCPTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(AddWCWebContentCPTest.class);\n\t\ttestSuite.addTestSuite(EditWCContentCPActionsTest.class);\n\t\ttestSuite.addTestSuite(Gmail_ViewEditWCWebContentUpdatedEmailTest.class);\n\t\ttestSuite.addTestSuite(TearDownRoleWebContentEditorTest.class);\n\t\ttestSuite.addTestSuite(TearDownWCWebContentCPTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownServerTest.class);\n\t\ttestSuite.addTestSuite(TearDownEmailConfigurationTest.class);\n\n\t\treturn testSuite;\n\t}","id":54618,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(ConfigureServerAdministrationMailTest.class);\n\t\ttestSuite.addTestSuite(EditPortalInstanceMailDomainTest.class);\n\t\ttestSuite.addTestSuite(AddUserGmailTest.class);\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(AddMembersSiteUserTest.class);\n\t\ttestSuite.addTestSuite(ConfigureWCPortletEmailFromGmailServerCPTest.class);\n\t\ttestSuite.addTestSuite(ConfigureWCPortletWebContentAddedEmailCPTest.class);\n\t\ttestSuite.addTestSuite(ConfigureWCPortletWebContentUpdatedEmailCPTest.class);\n\t\ttestSuite.addTestSuite(AddRoleWebContentEditorCPTest.class);\n\t\ttestSuite.addTestSuite(DefineRoleWebContentEditorCPTest.class);\n\t\ttestSuite.addTestSuite(AssignMembersRoleWebContentEditorUserCPActionsTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SignInTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SubscribeWCPortletCPTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(AddWCWebContentCPTest.class);\n\t\ttestSuite.addTestSuite(EditWCContentCPActionsTest.class);\n\t\ttestSuite.addTestSuite(Gmail_ViewEditWCWebContentUpdatedEmailTest.class);\n\t\ttestSuite.addTestSuite(TearDownRoleWebContentEditorTest.class);\n\t\ttestSuite.addTestSuite(TearDownWCWebContentCPTest.class);\n\t\ttestSuite.addTestSuite(TearDownEmailConfigurationTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownServerTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGmail_SignIn() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54619,"modified_method":"public void testGmail_SignIn() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\n\t\t\t\tboolean rememberMeChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\t\t\tif (rememberMeChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGmail_SubscribeWCPortletCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"link=Site Name\"));\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t\tselenium.clickAt(\"//span[@class='subscribe-link']/a/span\",\n\t\t\tRuntimeVariables.replace(\"Subscribe\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","id":54620,"modified_method":"public void testGmail_SubscribeWCPortletCP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-button-item/aui-button-item-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"link=Site Name\"));\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//ul[@class='lfr-component']/li[1]/span/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Subscribe')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Subscribe')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Subscribe')]\",\n\t\t\tRuntimeVariables.replace(\"Subscribe\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"//ul[@class='lfr-component']/li[1]/span/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Home\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Unsubscribe')]\"));\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGmail_ViewEditWCWebContentUpdatedEmail()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.openWindow(\"http://www.gmail.com/\",\n\t\t\t\t\tRuntimeVariables.replace(\"gmail\"));\n\t\t\t\tselenium.waitForPopUp(\"gmail\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.selectWindow(\"gmail\");\n\t\t\t\tThread.sleep(60000);\n\n\t\t\t\tboolean usernamePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='Email']\");\n\n\t\t\t\tif (usernamePresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tboolean signedIn1 = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!signedIn1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 2:\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean signInToGmailPresent = selenium.isTextPresent(\n\t\t\t\t\t\t\"Sign in to Gmail\");\n\n\t\t\t\tif (!signInToGmailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign in to Gmail\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='button']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='button']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign in to Gmail\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 3:\n\t\t\tcase 4:\n\n\t\t\t\tboolean signInAsADifferentUserPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@id='link-force-reauth']\");\n\n\t\t\t\tif (!signInAsADifferentUserPresent) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Sign out and sign in as a different user\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='link-force-reauth']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='link-force-reauth']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Sign out and sign in as a different user\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 5:\n\t\t\t\tselenium.waitForVisible(\"//input[@id='Email']\");\n\t\t\t\tselenium.type(\"//input[@id='Email']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk\"));\n\t\t\t\tselenium.type(\"//input[@id='Passwd']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\n\t\t\t\tboolean staySignedInChecked = selenium.isChecked(\n\t\t\t\t\t\t\"PersistentCookie\");\n\n\t\t\t\tif (staySignedInChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='PersistentCookie']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Stay signed in\"));\n\n\t\t\tcase 6:\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='signIn']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@email='liferay.qa.server.trunk@gmail.com']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Administrator\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@email='liferay.qa.server.trunk@gmail.com']\"));\n\t\t\t\tselenium.clickAt(\"//span[@email='liferay.qa.server.trunk@gmail.com']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertTrue(selenium.isPartialText(\"//h1/span[1]\",\n\t\t\t\t\t\t\"Web Content: Article Updated\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//p[contains(.,'Web Content Name Edit')]\",\n\t\t\t\t\t\t\"Dear userfn userln,\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//p[contains(.,'Web Content Name Edit')]\",\n\t\t\t\t\t\t\"version 1.1\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//p[contains(.,'Web Content Name Edit')]\",\n\t\t\t\t\t\t\"Web Content Name Edit was updated.\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean SignedIn2 = selenium.isElementPresent(\"link=Sign out\");\n\n\t\t\t\tif (!SignedIn2) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 7:\n\t\t\t\tThread.sleep(10000);\n\t\t\t\tselenium.close();\n\t\t\t\tselenium.selectWindow(\"null\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54621,"modified_method":"public void testGmail_ViewEditWCWebContentUpdatedEmail()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.openWindow(\"http://www.gmail.com/\",\n\t\t\t\t\tRuntimeVariables.replace(\"gmail\"));\n\t\t\t\tselenium.waitForPopUp(\"gmail\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.selectWindow(\"gmail\");\n\t\t\t\tThread.sleep(60000);\n\n\t\t\t\tboolean usernamePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='Email']\");\n\n\t\t\t\tif (usernamePresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tboolean signedIn1 = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!signedIn1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 2:\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean signInToGmailPresent = selenium.isTextPresent(\n\t\t\t\t\t\t\"Sign in to Gmail\");\n\n\t\t\t\tif (!signInToGmailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign in to Gmail\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='button']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='button']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign in to Gmail\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 3:\n\t\t\tcase 4:\n\n\t\t\t\tboolean signInAsADifferentUserPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@id='link-force-reauth']\");\n\n\t\t\t\tif (!signInAsADifferentUserPresent) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Sign out and sign in as a different user\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='link-force-reauth']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='link-force-reauth']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Sign out and sign in as a different user\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 5:\n\t\t\t\tselenium.waitForVisible(\"//input[@id='Email']\");\n\t\t\t\tselenium.type(\"//input[@id='Email']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk\"));\n\t\t\t\tselenium.type(\"//input[@id='Passwd']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\n\t\t\t\tboolean staySignedInChecked = selenium.isChecked(\n\t\t\t\t\t\t\"PersistentCookie\");\n\n\t\t\t\tif (staySignedInChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='PersistentCookie']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Stay signed in\"));\n\n\t\t\tcase 6:\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='signIn']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@email='liferay.qa.server.trunk@gmail.com']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Administrator\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@email='liferay.qa.server.trunk@gmail.com']\"));\n\t\t\t\tselenium.clickAt(\"//span[@email='liferay.qa.server.trunk@gmail.com']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertTrue(selenium.isPartialText(\"//h1/span[1]\",\n\t\t\t\t\t\t\"Web Content: Article Updated\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//p[contains(.,'WC WebContent Title Edit')]\",\n\t\t\t\t\t\t\"Dear userfn userln,\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//p[contains(.,'WC WebContent Title Edit')]\",\n\t\t\t\t\t\t\"version 1.1\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//p[contains(.,'WC WebContent Title Edit')]\",\n\t\t\t\t\t\t\"WC WebContent Title Edit was updated.\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean SignedIn2 = selenium.isElementPresent(\"link=Sign out\");\n\n\t\t\t\tif (!SignedIn2) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[contains(.,'liferay.qa.testing.trunk@gmail.com')]\"));\n\t\t\t\tselenium.clickAt(\"//span[contains(.,'liferay.qa.testing.trunk@gmail.com')]\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a[contains(.,'Sign out')]\"));\n\t\t\t\tselenium.clickAt(\"//td/a[contains(.,'Sign out')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 7:\n\t\t\t\tThread.sleep(10000);\n\t\t\t\tselenium.close();\n\t\t\t\tselenium.selectWindow(\"null\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGmail_ViewWCWebContentAddedEmail()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.openWindow(\"http://www.gmail.com/\",\n\t\t\t\t\tRuntimeVariables.replace(\"gmail\"));\n\t\t\t\tselenium.waitForPopUp(\"gmail\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.selectWindow(\"gmail\");\n\t\t\t\tThread.sleep(60000);\n\n\t\t\t\tboolean usernamePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='Email']\");\n\n\t\t\t\tif (usernamePresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tboolean signedIn1 = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!signedIn1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 2:\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean signInToGmailPresent = selenium.isTextPresent(\n\t\t\t\t\t\t\"Sign in to Gmail\");\n\n\t\t\t\tif (!signInToGmailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign in to Gmail\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='button']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='button']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign in to Gmail\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 3:\n\t\t\tcase 4:\n\n\t\t\t\tboolean signInAsADifferentUserPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@id='link-force-reauth']\");\n\n\t\t\t\tif (!signInAsADifferentUserPresent) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Sign out and sign in as a different user\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='link-force-reauth']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='link-force-reauth']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Sign out and sign in as a different user\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 5:\n\t\t\t\tselenium.waitForVisible(\"//input[@id='Email']\");\n\t\t\t\tselenium.type(\"//input[@id='Email']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk\"));\n\t\t\t\tselenium.type(\"//input[@id='Passwd']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\n\t\t\t\tboolean staySignedInChecked = selenium.isChecked(\n\t\t\t\t\t\t\"PersistentCookie\");\n\n\t\t\t\tif (staySignedInChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='PersistentCookie']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Stay signed in\"));\n\n\t\t\tcase 6:\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='signIn']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@email='liferay.qa.server.trunk@gmail.com']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Administrator\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@email='liferay.qa.server.trunk@gmail.com']\"));\n\t\t\t\tselenium.clickAt(\"//span[@email='liferay.qa.server.trunk@gmail.com']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertTrue(selenium.isPartialText(\"//h1/span[1]\",\n\t\t\t\t\t\t\"Web Content: Article Added\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//p[contains(.,'Web Content Name')]\",\n\t\t\t\t\t\t\"Dear userfn userln,\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//p[contains(.,'Web Content Name')]\", \"version 1.0\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//p[contains(.,'Web Content Name')]\",\n\t\t\t\t\t\t\"Web Content Name was added.\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean SignedIn2 = selenium.isElementPresent(\"link=Sign out\");\n\n\t\t\t\tif (!SignedIn2) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 7:\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.close();\n\t\t\t\tselenium.selectWindow(\"null\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54622,"modified_method":"public void testGmail_ViewWCWebContentAddedEmail()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.openWindow(\"http://www.gmail.com/\",\n\t\t\t\t\tRuntimeVariables.replace(\"gmail\"));\n\t\t\t\tselenium.waitForPopUp(\"gmail\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.selectWindow(\"gmail\");\n\t\t\t\tThread.sleep(60000);\n\n\t\t\t\tboolean usernamePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='Email']\");\n\n\t\t\t\tif (usernamePresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tboolean signedIn1 = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!signedIn1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 2:\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean signInToGmailPresent = selenium.isTextPresent(\n\t\t\t\t\t\t\"Sign in to Gmail\");\n\n\t\t\t\tif (!signInToGmailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign in to Gmail\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='button']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='button']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign in to Gmail\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 3:\n\t\t\tcase 4:\n\n\t\t\t\tboolean signInAsADifferentUserPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@id='link-force-reauth']\");\n\n\t\t\t\tif (!signInAsADifferentUserPresent) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Sign out and sign in as a different user\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='link-force-reauth']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='link-force-reauth']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Sign out and sign in as a different user\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 5:\n\t\t\t\tselenium.waitForVisible(\"//input[@id='Email']\");\n\t\t\t\tselenium.type(\"//input[@id='Email']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk\"));\n\t\t\t\tselenium.type(\"//input[@id='Passwd']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\n\t\t\t\tboolean staySignedInChecked = selenium.isChecked(\n\t\t\t\t\t\t\"PersistentCookie\");\n\n\t\t\t\tif (staySignedInChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='PersistentCookie']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Stay signed in\"));\n\n\t\t\tcase 6:\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='signIn']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@email='liferay.qa.server.trunk@gmail.com']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Administrator\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@email='liferay.qa.server.trunk@gmail.com']\"));\n\t\t\t\tselenium.clickAt(\"//span[@email='liferay.qa.server.trunk@gmail.com']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertTrue(selenium.isPartialText(\"//h1/span[1]\",\n\t\t\t\t\t\t\"Web Content: Article Added\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//p[contains(.,'WC WebContent Title')]\",\n\t\t\t\t\t\t\"Dear userfn userln,\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//p[contains(.,'WC WebContent Title')]\", \"version 1.0\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//p[contains(.,'WC WebContent Title')]\",\n\t\t\t\t\t\t\"WC WebContent Title was added.\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean SignedIn2 = selenium.isElementPresent(\"link=Sign out\");\n\n\t\t\t\tif (!SignedIn2) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[contains(.,'liferay.qa.testing.trunk@gmail.com')]\"));\n\t\t\t\tselenium.clickAt(\"//span[contains(.,'liferay.qa.testing.trunk@gmail.com')]\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a[contains(.,'Sign out')]\"));\n\t\t\t\tselenium.clickAt(\"//td/a[contains(.,'Sign out')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 7:\n\t\t\t\tThread.sleep(10000);\n\t\t\t\tselenium.close();\n\t\t\t\tselenium.selectWindow(\"null\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownEmailConfiguration() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\t\t\tselenium.waitForVisible(\"link=Email From\");\n\t\t\t\tselenium.clickAt(\"link=Email From\",\n\t\t\t\t\tRuntimeVariables.replace(\"Email From\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_86_emailFromName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Joe Bloggs\"));\n\t\t\t\tselenium.type(\"//input[@id='_86_emailFromAddress']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.clickAt(\"link=Web Content Added Email\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Added Email\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_86_emailArticleAddedEnabledCheckbox']\"));\n\n\t\t\t\tboolean webContentAddedChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_emailArticleAddedEnabledCheckbox\");\n\n\t\t\t\tif (!webContentAddedChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_emailArticleAddedEnabledCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enabled\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(\"//button[@id='closethick']\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54623,"modified_method":"public void testTearDownEmailConfiguration() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\t\t\tselenium.getText(\"link=Site Name\"));\n\t\t\t\tselenium.clickAt(\"link=Site Name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[@id='_15_configurationIframeDialog']\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[@id='_15_configurationIframeDialog']\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/escape/escape-min.js')]\");\n\t\t\t\tselenium.waitForVisible(\"link=Email From\");\n\t\t\t\tselenium.clickAt(\"link=Email From\",\n\t\t\t\t\tRuntimeVariables.replace(\"Email From\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.type(\"//input[@id='_86_emailFromName']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Joe Bloggs\"));\n\t\t\t\tselenium.type(\"//input[@id='_86_emailFromAddress']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.clickAt(\"link=Web Content Added Email\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Added Email\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_86_emailArticleAddedEnabledCheckbox']\"));\n\n\t\t\t\tboolean webContentAddedChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_emailArticleAddedEnabledCheckbox\");\n\n\t\t\t\tif (!webContentAddedChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_emailArticleAddedEnabledCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enabled\"));\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownRoleWebContentEditor() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[6]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":54624,"modified_method":"public void testTearDownRoleWebContentEditor() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to delete this? It will be deleted immediately.\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No roles were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownServer() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\t\t\tRuntimeVariables.replace(\"Server Administration\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Mail\", RuntimeVariables.replace(\"Mail\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3Host']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3Port']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tboolean popSecureChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_137_pop3SecureCheckbox\");\n\n\t\t\t\tif (!popSecureChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_137_pop3SecureCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Use a Secure Network Connection\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3User']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3Password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpHost']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpPort']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tboolean smtpSecureChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_137_smtpSecureCheckbox\");\n\n\t\t\t\tif (!smtpSecureChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//input[@id='_137_smtpSecureCheckbox']\");\n\n\t\t\tcase 3:\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpUser']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpPassword']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.com\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\t\t\tRuntimeVariables.replace(\"localhost\"));\n\t\t\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_135_maxUsers']\",\n\t\t\t\t\tRuntimeVariables.replace(\"0\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54625,"modified_method":"public void testTearDownServer() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Server Administration\",\n\t\t\t\t\tRuntimeVariables.replace(\"Server Administration\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Mail\", RuntimeVariables.replace(\"Mail\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3Host']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3Port']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tboolean popSecureChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_137_pop3SecureCheckbox\");\n\n\t\t\t\tif (!popSecureChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_137_pop3SecureCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Use a Secure Network Connection\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3User']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_pop3Password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpHost']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpPort']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tboolean smtpSecureChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_137_smtpSecureCheckbox\");\n\n\t\t\t\tif (!smtpSecureChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//input[@id='_137_smtpSecureCheckbox']\");\n\n\t\t\tcase 3:\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpUser']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"//input[@id='_137_smtpPassword']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Portal Instances\",\n\t\t\t\t\tRuntimeVariables.replace(\"Portal Instances\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"liferay.com\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.com\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_135_virtualHostname']\",\n\t\t\t\t\tRuntimeVariables.replace(\"localhost\"));\n\t\t\t\tselenium.type(\"//input[@id='_135_mx']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_135_maxUsers']\",\n\t\t\t\t\tRuntimeVariables.replace(\"0\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWCWebContentCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\t\t\tselenium.getText(\"link=Site Name\"));\n\t\t\t\tselenium.clickAt(\"link=Site Name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean webContentPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_15_rowIds\");\n\n\t\t\t\tif (!webContentPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_15_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected web content[\\\\s\\\\S]$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54626,"modified_method":"public void testTearDownWCWebContentCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\t\t\tselenium.getText(\"link=Site Name\"));\n\t\t\t\tselenium.clickAt(\"link=Site Name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean webContentPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='entry-thumbnail']\");\n\n\t\t\t\tif (!webContentPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_15_allRowIdsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='_15_allRowIdsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_15_allRowIdsCheckbox']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_15_allRowIdsCheckbox']\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"No Web Content was found.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='entries-empty portlet-msg-info']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForVisible(\"link=Site Name\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\t\t\tselenium.getText(\"link=Site Name\"));\n\t\t\t\tselenium.clickAt(\"link=Site Name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Recycle Bin\",\n\t\t\t\t\tRuntimeVariables.replace(\"Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean recycleBinNotEmpty = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='trash-empty-link']\");\n\n\t\t\t\tif (!recycleBinNotEmpty) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Empty the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='trash-empty-link']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='trash-empty-link']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Empty the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to empty the Recycle Bin?\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The Recycle Bin is empty.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b377fdbda7e206c59a8ecf5a714d683acd57d63a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageDigg() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Digg Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Digg Test Page\");\n\t\tselenium.clickAt(\"link=Digg Test Page\",\n\t\t\tRuntimeVariables.replace(\"Digg Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54627,"modified_method":"public void testAddPageDigg() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Digg Test Page\"));\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Digg Test Page\");\n\t\tselenium.clickAt(\"link=Digg Test Page\",\n\t\t\tRuntimeVariables.replace(\"Digg Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"66f2d3723a941111a265a32f1a5a7be9b6deedc5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDigg2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Digg Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Digg Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title='Digg']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Digg']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Digg\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","id":54628,"modified_method":"public void testAddPortletDigg2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Digg Test Page\");\n\t\tselenium.clickAt(\"link=Digg Test Page\",\n\t\t\tRuntimeVariables.replace(\"Digg Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.waitForVisible(\"//div[@title='Digg']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Digg']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[1]/div/section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Digg\"),\n\t\t\tselenium.getText(\"xpath=(//span[@class='portlet-title-text'])\"));\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Digg\"),\n\t\t\tselenium.getText(\"xpath=(//span[@class='portlet-title-text'])[2]\"));\n\t}","commit_id":"66f2d3723a941111a265a32f1a5a7be9b6deedc5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDigg3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Digg Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Digg Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title='Digg']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Digg']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Digg\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","id":54629,"modified_method":"public void testAddPortletDigg3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Digg Test Page\");\n\t\tselenium.clickAt(\"link=Digg Test Page\",\n\t\t\tRuntimeVariables.replace(\"Digg Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.waitForVisible(\"//div[@title='Digg']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Digg']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[1]/div/section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Digg\"),\n\t\t\tselenium.getText(\"xpath=(//span[@class='portlet-title-text'])\"));\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Digg\"),\n\t\t\tselenium.getText(\"xpath=(//span[@class='portlet-title-text'])[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Digg\"),\n\t\t\tselenium.getText(\"xpath=(//span[@class='portlet-title-text'])[3]\"));\n\t}","commit_id":"66f2d3723a941111a265a32f1a5a7be9b6deedc5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageDiggTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDigg1Test.class);\n\t\ttestSuite.addTestSuite(AddPortletDigg2Test.class);\n\t\ttestSuite.addTestSuite(AddPortletDigg3Test.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","id":54630,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageDiggTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDiggTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDigg2Test.class);\n\t\ttestSuite.addTestSuite(AddPortletDigg3Test.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"66f2d3723a941111a265a32f1a5a7be9b6deedc5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDigg() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Digg Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Digg Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//div[@title='Digg']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Digg']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Digg\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54631,"modified_method":"public void testAddPortletDigg() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Digg Test Page\");\n\t\tselenium.clickAt(\"link=Digg Test Page\",\n\t\t\tRuntimeVariables.replace(\"Digg Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.waitForVisible(\"//div[@title='Digg']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Digg']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"66f2d3723a941111a265a32f1a5a7be9b6deedc5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","id":54632,"modified_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//input[@value='Add Mail Account']\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","id":54633,"modified_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//input[@value='Add Mail Account']\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","id":54634,"modified_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//input[@value='Add Mail Account']\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","id":54635,"modified_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//input[@value='Add Mail Account']\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","id":54636,"modified_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//input[@value='Add Mail Account']\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","id":54637,"modified_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//input[@value='Add Mail Account']\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","id":54638,"modified_method":"public void testAddMailAccount() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//input[@value='Add Mail Account']\");\n\t\tselenium.clickAt(\"//input[@value='Add Mail Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Mail Account\"));\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_address']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_address']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.check(\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_1_WAR_mailportlet_savePasswordCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Account']\",\n\t\t\tRuntimeVariables.replace(\"Add Account\"));\n\t\tselenium.waitForVisible(\"//span[@class='message portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Account has been created.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageMail() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54639,"modified_method":"public void testAddPageMail() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletMail() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='Mail']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Mail']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54640,"modified_method":"public void testAddPortletMail() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"m\"));\n\t\tselenium.waitForVisible(\"//li[@title='Mail']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Mail']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteMessageNullAllMail() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\tselenium.getText(\"//div/div/div[1]/div/ul/li/span/span/a\"));\n\t\tselenium.clickAt(\"//div/div/div[1]/div/ul/li/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.waitForVisible(\"//a[contains(.,'All Mail')]\");\n\t\tassertTrue(selenium.isPartialText(\"//a[contains(.,'All Mail')]\",\n\t\t\t\t\"All Mail\"));\n\t\tselenium.clickAt(\"//a[contains(.,'All Mail')]\",\n\t\t\tRuntimeVariables.replace(\"All Mail\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//input[@value='Delete']\");\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForText(\"//span[@class='message portlet-msg-error']\",\n\t\t\t\"No messages selected.\");\n\t\tassertEquals(RuntimeVariables.replace(\"No messages selected.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-error']\"));\n\t}","id":54641,"modified_method":"public void testDeleteMessageNullAllMail() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//a[@class='folders-link']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\tselenium.getText(\"//a[@class='folders-link']\"));\n\t\tselenium.clickAt(\"//a[@class='folders-link']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.waitForVisible(\"//a[contains(.,'All Mail')]\");\n\t\tassertTrue(selenium.isPartialText(\"//a[contains(.,'All Mail')]\",\n\t\t\t\t\"All Mail\"));\n\t\tselenium.clickAt(\"//a[contains(.,'All Mail')]\",\n\t\t\tRuntimeVariables.replace(\"All Mail\"));\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//input[@value='Delete']\");\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForText(\"//span[@class='message portlet-msg-error']\",\n\t\t\t\"No messages selected.\");\n\t\tassertEquals(RuntimeVariables.replace(\"No messages selected.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-error']\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteMessageNullDrafts() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\tselenium.getText(\"//div/div/div[1]/div/ul/li/span/span/a\"));\n\t\tselenium.clickAt(\"//div/div/div[1]/div/ul/li/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.waitForVisible(\"//a[contains(.,'Drafts')]\");\n\t\tassertTrue(selenium.isPartialText(\"//a[contains(.,'Drafts')]\", \"Drafts\"));\n\t\tselenium.clickAt(\"//a[contains(.,'Drafts')]\",\n\t\t\tRuntimeVariables.replace(\"Drafts\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//input[@value='Delete']\");\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForText(\"//span[@class='message portlet-msg-error']\",\n\t\t\t\"No messages selected.\");\n\t\tassertEquals(RuntimeVariables.replace(\"No messages selected.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-error']\"));\n\t}","id":54642,"modified_method":"public void testDeleteMessageNullDrafts() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//a[@class='folders-link']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\tselenium.getText(\"//a[@class='folders-link']\"));\n\t\tselenium.clickAt(\"//a[@class='folders-link']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.waitForVisible(\"//a[contains(.,'Drafts')]\");\n\t\tassertTrue(selenium.isPartialText(\"//a[contains(.,'Drafts')]\", \"Drafts\"));\n\t\tselenium.clickAt(\"//a[contains(.,'Drafts')]\",\n\t\t\tRuntimeVariables.replace(\"Drafts\"));\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//input[@value='Delete']\");\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForText(\"//span[@class='message portlet-msg-error']\",\n\t\t\t\"No messages selected.\");\n\t\tassertEquals(RuntimeVariables.replace(\"No messages selected.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-error']\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteMessageNullInbox() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\tselenium.getText(\"//div/div/div[1]/div/ul/li/span/span/a\"));\n\t\tselenium.clickAt(\"//div/div/div[1]/div/ul/li/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.waitForVisible(\"//a[contains(.,'INBOX')]\");\n\t\tassertTrue(selenium.isPartialText(\"//a[contains(.,'INBOX')]\", \"INBOX\"));\n\t\tselenium.clickAt(\"//a[contains(.,'INBOX')]\",\n\t\t\tRuntimeVariables.replace(\"INBOX\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//input[@value='Delete']\");\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForText(\"//span[@class='message portlet-msg-error']\",\n\t\t\t\"No messages selected.\");\n\t\tassertEquals(RuntimeVariables.replace(\"No messages selected.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-error']\"));\n\t}","id":54643,"modified_method":"public void testDeleteMessageNullInbox() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//a[@class='folders-link']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\tselenium.getText(\"//a[@class='folders-link']\"));\n\t\tselenium.clickAt(\"//a[@class='folders-link']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.waitForVisible(\"//a[contains(.,'INBOX')]\");\n\t\tassertTrue(selenium.isPartialText(\"//a[contains(.,'INBOX')]\", \"INBOX\"));\n\t\tselenium.clickAt(\"//a[contains(.,'INBOX')]\",\n\t\t\tRuntimeVariables.replace(\"INBOX\"));\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//input[@value='Delete']\");\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForText(\"//span[@class='message portlet-msg-error']\",\n\t\t\t\"No messages selected.\");\n\t\tassertEquals(RuntimeVariables.replace(\"No messages selected.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-error']\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteMessageNullSentMail() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\tselenium.getText(\"//div/div/div[1]/div/ul/li/span/span/a\"));\n\t\tselenium.clickAt(\"//div/div/div[1]/div/ul/li/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.waitForVisible(\"//a[contains(.,'Sent Mail')]\");\n\t\tassertTrue(selenium.isPartialText(\"//a[contains(.,'Sent Mail')]\",\n\t\t\t\t\"Sent Mail\"));\n\t\tselenium.clickAt(\"//a[contains(.,'Sent Mail')]\",\n\t\t\tRuntimeVariables.replace(\"Sent Mail\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//input[@value='Delete']\");\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForText(\"//span[@class='message portlet-msg-error']\",\n\t\t\t\"No messages selected.\");\n\t\tassertEquals(RuntimeVariables.replace(\"No messages selected.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-error']\"));\n\t}","id":54644,"modified_method":"public void testDeleteMessageNullSentMail() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//a[@class='folders-link']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\tselenium.getText(\"//a[@class='folders-link']\"));\n\t\tselenium.clickAt(\"//a[@class='folders-link']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.waitForVisible(\"//a[contains(.,'Sent Mail')]\");\n\t\tassertTrue(selenium.isPartialText(\"//a[contains(.,'Sent Mail')]\",\n\t\t\t\t\"Sent Mail\"));\n\t\tselenium.clickAt(\"//a[contains(.,'Sent Mail')]\",\n\t\t\tRuntimeVariables.replace(\"Sent Mail\"));\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//input[@value='Delete']\");\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForText(\"//span[@class='message portlet-msg-error']\",\n\t\t\t\"No messages selected.\");\n\t\tassertEquals(RuntimeVariables.replace(\"No messages selected.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-error']\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSendMessageSubjectNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\tselenium.getText(\"//div/div/div[1]/div/ul/li/span/span/a\"));\n\t\tselenium.clickAt(\"//div/div/div[1]/div/ul/li/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForText(\"//a[@class='compose-message']\", \"Compose Email\");\n\t\tassertEquals(RuntimeVariables.replace(\"Compose Email\"),\n\t\t\tselenium.getText(\"//a[@class='compose-message']\"));\n\t\tselenium.clickAt(\"//a[@class='compose-message']\",\n\t\t\tRuntimeVariables.replace(\"Compose Email\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_to']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_to']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa2@gmail.com\"));\n\t\tselenium.clickAt(\"//input[@value='Send']\",\n\t\t\tRuntimeVariables.replace(\"Send\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Sent successfully.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","id":54645,"modified_method":"public void testSendMessageSubjectNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//a[@class='folders-link']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\tselenium.getText(\"//a[@class='folders-link']\"));\n\t\tselenium.clickAt(\"//a[@class='folders-link']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.waitForText(\"//a[@class='compose-message']\", \"Compose Email\");\n\t\tassertEquals(RuntimeVariables.replace(\"Compose Email\"),\n\t\t\tselenium.getText(\"//a[@class='compose-message']\"));\n\t\tselenium.clickAt(\"//a[@class='compose-message']\",\n\t\t\tRuntimeVariables.replace(\"Compose Email\"));\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_to']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_to']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa2@gmail.com\"));\n\t\tselenium.clickAt(\"//input[@value='Send']\",\n\t\t\tRuntimeVariables.replace(\"Send\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Sent successfully.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-success']\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSendMessageToNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\tselenium.getText(\"//div/div/div[1]/div/ul/li/span/span/a\"));\n\t\tselenium.clickAt(\"//div/div/div[1]/div/ul/li/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForText(\"//a[@class='compose-message']\", \"Compose Email\");\n\t\tassertEquals(RuntimeVariables.replace(\"Compose Email\"),\n\t\t\tselenium.getText(\"//a[@class='compose-message']\"));\n\t\tselenium.clickAt(\"//a[@class='compose-message']\",\n\t\t\tRuntimeVariables.replace(\"Compose Email\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_subject']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_subject']\",\n\t\t\tRuntimeVariables.replace(\"Mail Subject\"));\n\t\tselenium.clickAt(\"//input[@value='Send']\",\n\t\t\tRuntimeVariables.replace(\"Send\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please specify at least one recipient.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-error']\"));\n\t}","id":54646,"modified_method":"public void testSendMessageToNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\tselenium.getText(\"//a[@class='folders-link']\"));\n\t\tselenium.clickAt(\"//a[@class='folders-link']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.waitForText(\"//a[@class='compose-message']\", \"Compose Email\");\n\t\tassertEquals(RuntimeVariables.replace(\"Compose Email\"),\n\t\t\tselenium.getText(\"//a[@class='compose-message']\"));\n\t\tselenium.clickAt(\"//a[@class='compose-message']\",\n\t\t\tRuntimeVariables.replace(\"Compose Email\"));\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//input[@id='_1_WAR_mailportlet_subject']\");\n\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_subject']\",\n\t\t\tRuntimeVariables.replace(\"Mail Subject\"));\n\t\tselenium.clickAt(\"//input[@value='Send']\",\n\t\t\tRuntimeVariables.replace(\"Send\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please specify at least one recipient.\"),\n\t\t\tselenium.getText(\"//span[@class='message portlet-msg-error']\"));\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/div/div[1]/div/ul/li/span/span\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//div/div/div[1]/div/ul/li/span/span\"));\n\t\t\t\tselenium.clickAt(\"//div/div/div[1]/div/ul/li/span/span\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54647,"modified_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='folders-link']\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='folders-link']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='folders-link']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/div/div[1]/div/ul/li/span/span\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//div/div/div[1]/div/ul/li/span/span\"));\n\t\t\t\tselenium.clickAt(\"//div/div/div[1]/div/ul/li/span/span\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54648,"modified_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='folders-link']\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='folders-link']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='folders-link']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/div/div[1]/div/ul/li/span/span\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//div/div/div[1]/div/ul/li/span/span\"));\n\t\t\t\tselenium.clickAt(\"//div/div/div[1]/div/ul/li/span/span\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54649,"modified_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='folders-link']\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='folders-link']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='folders-link']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/div/div[1]/div/ul/li/span/span\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//div/div/div[1]/div/ul/li/span/span\"));\n\t\t\t\tselenium.clickAt(\"//div/div/div[1]/div/ul/li/span/span\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54650,"modified_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='folders-link']\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='folders-link']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='folders-link']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/div/div[1]/div/ul/li/span/span\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//div/div/div[1]/div/ul/li/span/span\"));\n\t\t\t\tselenium.clickAt(\"//div/div/div[1]/div/ul/li/span/span\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54651,"modified_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='folders-link']\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='folders-link']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='folders-link']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/div/div[1]/div/ul/li/span/span\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//div/div/div[1]/div/ul/li/span/span\"));\n\t\t\t\tselenium.clickAt(\"//div/div/div[1]/div/ul/li/span/span\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54652,"modified_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='folders-link']\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='folders-link']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='folders-link']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/div/div[1]/div/ul/li/span/span\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//div/div/div[1]/div/ul/li/span/span\"));\n\t\t\t\tselenium.clickAt(\"//div/div/div[1]/div/ul/li/span/span\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Mail Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54653,"modified_method":"public void testTearDownMailAccount() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\t\tboolean enterYourPasswordPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\n\t\t\t\tif (!enterYourPasswordPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='_1_WAR_mailportlet_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Login\"));\n\t\t\t\tselenium.waitForElementNotPresent(\n\t\t\t\t\t\"//input[@id='_1_WAR_mailportlet_password']\");\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean emailPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='folders-link']\");\n\n\t\t\t\tif (!emailPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='folders-link']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='folders-link']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\t\t\t\tselenium.waitForText(\"//a[@class='edit-account']\",\n\t\t\t\t\t\"Edit Account\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Account\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='edit-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='edit-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Account\"));\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.waitForElementPresent(\"//a[@class='delete-account']\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='delete-account']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='delete-account']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete Account\"));\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this account[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@class='message portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Account has been deleted.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='message portlet-msg-success']\"));\n\t\t\t\tThread.sleep(1000);\n\n\t\t\tcase 3:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Mail Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mail Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\t\t\"liferay.qa.testing.trunk@gmail.com\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"4462fc7310745eeb59640c8d2449cc89424d70d2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageYoutube() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Youtube Test Page\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54654,"modified_method":"public void testAddPageYoutube() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Youtube Test Page\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"7edc0732315a2a635873c6f69e2fb94a2b100b31","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageYoutube() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Youtube Test Page\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54655,"modified_method":"public void testAddPageYoutube() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Youtube Test Page\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"7edc0732315a2a635873c6f69e2fb94a2b100b31","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageYoutube() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\t\tselenium.waitForElementPresent(\"//a[@id='addPage']\");\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Youtube Test Page\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":54656,"modified_method":"public void testAddPageYoutube() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='addPage']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\"//a[@id='addPage']\"));\n\t\tselenium.clickAt(\"//a[@id='addPage']\", RuntimeVariables.replace(\"Page\"));\n\t\tselenium.waitForVisible(\"//input[@type='text']\");\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.clickAt(\"//button[contains(@id,'Save')]\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"link=Youtube Test Page\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"7edc0732315a2a635873c6f69e2fb94a2b100b31","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletYoutube1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Youtube Test Page\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='YouTube']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='YouTube']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54657,"modified_method":"public void testAddPortletYoutube1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"you\"));\n\t\tselenium.waitForVisible(\"//li[@title='YouTube']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='YouTube']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"7edc0732315a2a635873c6f69e2fb94a2b100b31","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletYoutube2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Youtube Test Page\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='YouTube']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='YouTube']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","id":54658,"modified_method":"public void testAddPortletYoutube2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"you\"));\n\t\tselenium.waitForVisible(\"//li[@title='YouTube']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='YouTube']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div[1]/section/header\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/section/header\"));\n\t\tassertEquals(RuntimeVariables.replace(\"YouTube\"),\n\t\t\tselenium.getText(\"xpath=(//span[@class='portlet-title-text'])[1]\"));\n\t\tselenium.waitForVisible(\"//div[2]/section/header\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section/header\"));\n\t\tassertEquals(RuntimeVariables.replace(\"YouTube\"),\n\t\t\tselenium.getText(\"xpath=(//span[@class='portlet-title-text'])[2]\"));\n\t}","commit_id":"7edc0732315a2a635873c6f69e2fb94a2b100b31","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletYoutube3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Youtube Test Page\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='YouTube']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='YouTube']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","id":54659,"modified_method":"public void testAddPortletYoutube3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"you\"));\n\t\tselenium.waitForVisible(\"//li[@title='YouTube']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='YouTube']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div[1]/section/header\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/section/header\"));\n\t\tassertEquals(RuntimeVariables.replace(\"YouTube\"),\n\t\t\tselenium.getText(\"xpath=(//span[@class='portlet-title-text'])[1]\"));\n\t\tselenium.waitForVisible(\"//div[2]/section/header\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section/header\"));\n\t\tassertEquals(RuntimeVariables.replace(\"YouTube\"),\n\t\t\tselenium.getText(\"xpath=(//span[@class='portlet-title-text'])[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section/header\"));\n\t\tselenium.waitForVisible(\"//div[3]/section/header\");\n\t\tassertEquals(RuntimeVariables.replace(\"YouTube\"),\n\t\t\tselenium.getText(\"xpath=(//span[@class='portlet-title-text'])[3]\"));\n\t}","commit_id":"7edc0732315a2a635873c6f69e2fb94a2b100b31","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletYoutube() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Youtube Test Page\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='YouTube']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='YouTube']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54660,"modified_method":"public void testAddPortletYoutube() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"you\"));\n\t\tselenium.waitForVisible(\"//li[@title='YouTube']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='YouTube']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"7edc0732315a2a635873c6f69e2fb94a2b100b31","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletYoutube() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Youtube Test Page\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\"//li[@title='YouTube']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='YouTube']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":54661,"modified_method":"public void testAddPortletYoutube() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"you\"));\n\t\tselenium.waitForVisible(\"//li[@title='YouTube']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='YouTube']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"7edc0732315a2a635873c6f69e2fb94a2b100b31","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemovePortletYoutube() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Youtube Test Page\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/section\"));\n\t}","id":54662,"modified_method":"public void testRemovePortletYoutube() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Youtube Test Page\");\n\t\tselenium.clickAt(\"link=Youtube Test Page\",\n\t\t\tRuntimeVariables.replace(\"Youtube Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to remove this component?\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section/header\"));\n\t}","commit_id":"7edc0732315a2a635873c6f69e2fb94a2b100b31","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNewWCWebContentAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_15_title_en_US']\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//span[.='Source']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC Web Content Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//h3[@class='asset-title']/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","id":54663,"modified_method":"public void testAddNewWCWebContentAPActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Web Content')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Web Content')]\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_15_title_en_US']\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//span[.='Source']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC Web Content Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'editAsset')]\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//h3[@class='asset-title']/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","commit_id":"6bf73fb477469fdbe699a531736193a9d854f0c8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAPScopeSourceGlobal()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"There are no results.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_defaultScope']\");\n\t\tselenium.select(\"//select[@id='_86_defaultScope']\",\n\t\t\tRuntimeVariables.replace(\"Global\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Global\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_defaultScope']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54664,"modified_method":"public void testConfigurePortletAPScopeSourceGlobal()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"There are no results.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_defaultScope']\");\n\t\tselenium.select(\"//select[@id='_86_defaultScope']\",\n\t\t\tRuntimeVariables.replace(\"Global\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Global\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_defaultScope']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"6bf73fb477469fdbe699a531736193a9d854f0c8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentRatingsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comment Ratings\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54665,"modified_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\n\t\t\t\tboolean enableCommentRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\");\n\n\t\t\t\tif (enableCommentRatingsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_enableCommentRatingsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enable Comment Ratings\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"6bf73fb477469fdbe699a531736193a9d854f0c8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_enableCommentsCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54666,"modified_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\");\n\n\t\t\t\tboolean enableCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\");\n\n\t\t\t\tif (enableCommentsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"6bf73fb477469fdbe699a531736193a9d854f0c8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletShowMetadataViewCount()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableMetadataFields']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableMetadataFields']\",\n\t\t\tRuntimeVariables.replace(\"View Count\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\");\n\t\tselenium.clickAt(\"//div[5]/div[2]/fieldset[2]/div/div/div/div/div/div/div/div[2]/div/span/span/button[2]\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentMetadataFields']\",\n\t\t\t\"View Count\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":54667,"modified_method":"public void testConfigurePortletShowMetadataViewCount()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableMetadataFields']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableMetadataFields']\",\n\t\t\tRuntimeVariables.replace(\"View Count\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Available to Current.']\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Available to Current.']\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentMetadataFields']\",\n\t\t\t\"View Count\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentMetadataFields']\", \"View Count\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"6bf73fb477469fdbe699a531736193a9d854f0c8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteWCWebContentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-success']\",\n\t\t\t\"You have successfully updated the setup.\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC Web Content Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC Web Content Content\"));\n\t}","id":54668,"modified_method":"public void testDeleteWCWebContentAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.clickAt(\"//section\", RuntimeVariables.replace(\"Portlet\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='_86_ocerSearchContainer_col-type_row-1']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-type_row-1']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-title_row-1']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-4_row-1']/span/a/img\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-success']\",\n\t\t\t\"You have successfully updated the setup.\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No assets selected.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC Web Content Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC Web Content Content\"));\n\t}","commit_id":"6bf73fb477469fdbe699a531736193a9d854f0c8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectExistingWCWebContentAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//nav[@class='site-breadcrumbs aui-helper-hidden lfr-hudcrumbs']\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select Existing\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@title='Select Existing']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Select Existing']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select Existing\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Web Content')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Web Content')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Web Content')]/a\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","id":54669,"modified_method":"public void testSelectExistingWCWebContentAPActions()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.clickAt(\"//section\", RuntimeVariables.replace(\"Portlet\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//a[@id='_86_tiym_menuButton']/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//a[@id='_86_tiym_menuButton']/span\"));\n\t\tselenium.clickAt(\"//a[@id='_86_tiym_menuButton']/span\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Web Content')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Web Content')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Web Content')]/a\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//iframe[@id='_86_selectAsset']\");\n\t\tselenium.selectFrame(\"//iframe[@id='_86_selectAsset']\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-title_row-1']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-type_row-1']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","commit_id":"6bf73fb477469fdbe699a531736193a9d854f0c8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWCWebContentScopeGlobalCP()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Scope Selector\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Global')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Global')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Global')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForText(\"//a[@id='_160_groupSelectorButton']/span\",\n\t\t\t\t\t\"Global\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_160_groupSelectorButton']/span\"));\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean webContentPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='entry-thumbnail']\");\n\n\t\t\t\tif (!webContentPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_15_allRowIdsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='_15_allRowIdsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_15_allRowIdsCheckbox']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_15_allRowIdsCheckbox']\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"No Web Content was found.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='entries-empty portlet-msg-info']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Recycle Bin\",\n\t\t\t\t\tRuntimeVariables.replace(\"Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean recycleBinNotEmpty = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='trash-empty-link']\");\n\n\t\t\t\tif (!recycleBinNotEmpty) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Empty the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='trash-empty-link']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='trash-empty-link']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Empty the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to empty the Recycle Bin?\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The Recycle Bin is empty.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":54670,"modified_method":"public void testTearDownWCWebContentScopeGlobalCP()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Scope Selector\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Global')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Global')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Global')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForText(\"//a[@id='_160_groupSelectorButton']/span\",\n\t\t\t\t\t\"Global\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_160_groupSelectorButton']/span\"));\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean webContentPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='entry-thumbnail']\");\n\n\t\t\t\tif (!webContentPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_15_allRowIdsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_15_allRowIdsCheckbox']\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move to the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-success taglib-trash-undo']\",\n\t\t\t\t\t\t\"moved to the Recycle Bin. Undo\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"No Web Content was found.\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='entries-empty portlet-msg-info']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Recycle Bin\",\n\t\t\t\t\tRuntimeVariables.replace(\"Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean recycleBinNotEmpty = selenium.isElementPresent(\n\t\t\t\t\t\t\"//a[@class='trash-empty-link']\");\n\n\t\t\t\tif (!recycleBinNotEmpty) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Empty the Recycle Bin\"),\n\t\t\t\t\tselenium.getText(\"//a[@class='trash-empty-link']\"));\n\t\t\t\tselenium.clickAt(\"//a[@class='trash-empty-link']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Empty the Recycle Bin\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to empty the Recycle Bin?\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 3:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The Recycle Bin is empty.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"6bf73fb477469fdbe699a531736193a9d854f0c8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n     * Gets list of JAXWS EJBs meta data.\n     *\n     * @param unit deployment unit\n     * @return list of JAXWS EJBs meta data\n     */\n    public static List<WebServiceDeclaration> getJaxwsEjbs(final DeploymentUnit unit) {\n        final WebServiceDeployment wsDeployment = ASHelper.getRequiredAttachment(unit, WSAttachmentKeys.WEBSERVICE_DEPLOYMENT_KEY);\n\n        return Collections.unmodifiableList(wsDeployment.getServiceEndpoints());\n    }","id":54671,"modified_method":"/**\n     * Gets list of JAXWS EJBs meta data.\n     *\n     * @param unit deployment unit\n     * @return list of JAXWS EJBs meta data\n     */\n    public static List<WebServiceDeclaration> getJaxwsEjbs(final DeploymentUnit unit) {\n        final WebServiceDeployment wsDeployment = getRequiredAttachment(unit, WSAttachmentKeys.WEBSERVICE_DEPLOYMENT_KEY);\n\n        return Collections.unmodifiableList(wsDeployment.getServiceEndpoints());\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"public static List<AnnotationInstance> getAnnotations(final DeploymentUnit unit, final DotName annotation) {\n       final CompositeIndex compositeIndex = ASHelper.getRequiredAttachment(unit, Attachments.COMPOSITE_ANNOTATION_INDEX);\n       return compositeIndex.getAnnotations(annotation);\n    }","id":54672,"modified_method":"public static List<AnnotationInstance> getAnnotations(final DeploymentUnit unit, final DotName annotation) {\n       final CompositeIndex compositeIndex = getRequiredAttachment(unit, Attachments.COMPOSITE_ANNOTATION_INDEX);\n       return compositeIndex.getAnnotations(annotation);\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Gets list of JAXRPC servlets meta data.\n     *\n     * @param unit deployment unit\n     * @return list of JAXRPC servlets meta data\n     */\n    public static List<ServletMetaData> getJaxrpcServlets(final DeploymentUnit unit) {\n        return ASHelper.getWebServiceServlets(unit, false);\n    }","id":54673,"modified_method":"/**\n     * Gets list of JAXRPC servlets meta data.\n     *\n     * @param unit deployment unit\n     * @return list of JAXRPC servlets meta data\n     */\n    public static List<ServletMetaData> getJaxrpcServlets(final DeploymentUnit unit) {\n        return getWebServiceServlets(unit, false);\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"private static boolean isWebserviceEndpoint(final ServletMetaData servletMD, final CompositeIndex index, boolean jaxws) {\n        final String endpointClassName = ASHelper.getEndpointName(servletMD);\n        if (isJSP(endpointClassName)) return false;\n        final DotName endpointDotName = DotName.createSimple(endpointClassName);\n        final ClassInfo endpointClassInfo = index.getClassByName(endpointDotName);\n\n        if (endpointClassInfo != null) {\n            if (jaxws) {\n                //directly check annotations when looking for jaxws endpoints\n                if (endpointClassInfo.annotations().containsKey(WEB_SERVICE_ANNOTATION))\n                    return true;\n                if (endpointClassInfo.annotations().containsKey(WEB_SERVICE_PROVIDER_ANNOTATION))\n                    return true;\n            } else {\n                //just verify the class is not a servlet for jaxrpc endpoints\n                if (!isServlet(endpointClassInfo, index))\n                    return true;\n            }\n        }\n\n        return false;\n    }","id":54674,"modified_method":"private static boolean isWebserviceEndpoint(final ServletMetaData servletMD, final CompositeIndex index, boolean jaxws) {\n        final String endpointClassName = getEndpointName(servletMD);\n        if (isJSP(endpointClassName)) return false;\n        final DotName endpointDotName = DotName.createSimple(endpointClassName);\n        final ClassInfo endpointClassInfo = index.getClassByName(endpointDotName);\n\n        if (endpointClassInfo != null) {\n            if (jaxws) {\n                //directly check annotations when looking for jaxws endpoints\n                if (endpointClassInfo.annotations().containsKey(WEB_SERVICE_ANNOTATION))\n                    return true;\n                if (endpointClassInfo.annotations().containsKey(WEB_SERVICE_PROVIDER_ANNOTATION))\n                    return true;\n            } else {\n                //just verify the class is not a servlet for jaxrpc endpoints\n                if (!isServlet(endpointClassInfo, index))\n                    return true;\n            }\n        }\n\n        return false;\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Returns required attachment value from deployment unit.\n     *\n     * @param <A> expected value\n     * @param unit deployment unit\n     * @param key attachment key\n     * @return required attachment\n     * @throws IllegalStateException if attachment value is null\n     */\n    public static <A> A getRequiredAttachment(final DeploymentUnit unit, final AttachmentKey<A> key) {\n        final A value = unit.getAttachment(key);\n        if (value == null) {\n            ASHelper.LOGGER.error(\"Cannot find attachment in deployment unit: \" + key);\n            throw new IllegalStateException();\n        }\n\n        return value;\n    }","id":54675,"modified_method":"/**\n     * Returns required attachment value from deployment unit.\n     *\n     * @param <A> expected value\n     * @param unit deployment unit\n     * @param key attachment key\n     * @return required attachment\n     * @throws IllegalStateException if attachment value is null\n     */\n    public static <A> A getRequiredAttachment(final DeploymentUnit unit, final AttachmentKey<A> key) {\n        final A value = unit.getAttachment(key);\n        if (value == null) {\n            LOGGER.error(\"Cannot find attachment in deployment unit: \" + key);\n            throw new IllegalStateException();\n        }\n\n        return value;\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Returns first webservice description meta data or null if not found.\n     *\n     * @param wsDescriptionsMD webservice descriptions\n     * @return webservice description\n     */\n    public static WebserviceDescriptionMetaData getWebserviceDescriptionMetaData(\n            final WebserviceDescriptionsMetaData wsDescriptionsMD) {\n        if (wsDescriptionsMD != null) {\n            if (wsDescriptionsMD.size() > 1) {\n                ASHelper.LOGGER.warn(\"Multiple <webservice-description> elements not supported\");\n            }\n\n            if (wsDescriptionsMD.size() > 0) {\n                return wsDescriptionsMD.iterator().next();\n            }\n        }\n\n        return null;\n    }","id":54676,"modified_method":"/**\n     * Returns first webservice description meta data or null if not found.\n     *\n     * @param wsDescriptionsMD webservice descriptions\n     * @return webservice description\n     */\n    public static WebserviceDescriptionMetaData getWebserviceDescriptionMetaData(\n            final WebserviceDescriptionsMetaData wsDescriptionsMD) {\n        if (wsDescriptionsMD != null) {\n            if (wsDescriptionsMD.size() > 1) {\n                LOGGER.warn(\"Multiple <webservice-description> elements not supported\");\n            }\n\n            if (wsDescriptionsMD.size() > 0) {\n                return wsDescriptionsMD.iterator().next();\n            }\n        }\n\n        return null;\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Returns true if deployment unit have attachment value associated with the <b>key<\/b>.\n     *\n     * @param unit deployment unit\n     * @param key attachment key\n     * @return true if contains attachment, false otherwise\n     */\n    public static boolean hasAttachment(final DeploymentUnit unit, final AttachmentKey<?> key) {\n        return ASHelper.getOptionalAttachment(unit, key) != null;\n    }","id":54677,"modified_method":"/**\n     * Returns true if deployment unit have attachment value associated with the <b>key<\/b>.\n     *\n     * @param unit deployment unit\n     * @param key attachment key\n     * @return true if contains attachment, false otherwise\n     */\n    public static boolean hasAttachment(final DeploymentUnit unit, final AttachmentKey<?> key) {\n        return getOptionalAttachment(unit, key) != null;\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Returns true if unit contains JAXWS JSE, JAXRPC JSE, JAXWS EJB or JAXRPC EJB deployment.\n     *\n     * @param unit deployment unit\n     * @return true if JAXWS JSE, JAXRPC JSE, JAXWS EJB or JAXRPC EJB deployment, false otherwise.\n     */\n    public static boolean isWebServiceDeployment(final DeploymentUnit unit) {\n        return ASHelper.getOptionalAttachment(unit, WSAttachmentKeys.DEPLOYMENT_KEY) != null;\n    }","id":54678,"modified_method":"/**\n     * Returns true if unit contains JAXWS JSE, JAXRPC JSE, JAXWS EJB or JAXRPC EJB deployment.\n     *\n     * @param unit deployment unit\n     * @return true if JAXWS JSE, JAXRPC JSE, JAXWS EJB or JAXRPC EJB deployment, false otherwise.\n     */\n    public static boolean isWebServiceDeployment(final DeploymentUnit unit) {\n        return getOptionalAttachment(unit, WSAttachmentKeys.DEPLOYMENT_KEY) != null;\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"private static boolean isWebserviceEndpoint(final ServletMetaData servletMD, final ClassLoader loader, boolean jaxws) {\n        final String endpointClassName = ASHelper.getEndpointName(servletMD);\n        if (isJSP(endpointClassName)) return false;\n        final Class<?> endpointClass = ASHelper.getEndpointClass(endpointClassName, loader);\n        if (endpointClass != null) {\n            if (jaxws) {\n                if (endpointClass.isAnnotationPresent(WebService.class))\n                    return true;\n                if (endpointClass.isAnnotationPresent(WebServiceProvider.class))\n                    return true;\n            } else {\n                if (!Servlet.class.isAssignableFrom(endpointClass))\n                    return true;\n            }\n        }\n        return false;\n    }","id":54679,"modified_method":"private static boolean isWebserviceEndpoint(final ServletMetaData servletMD, final ClassLoader loader, boolean jaxws) {\n        final String endpointClassName = getEndpointName(servletMD);\n        if (isJSP(endpointClassName)) return false;\n        final Class<?> endpointClass = getEndpointClass(endpointClassName, loader);\n        if (endpointClass != null) {\n            if (jaxws) {\n                if (endpointClass.isAnnotationPresent(WebService.class))\n                    return true;\n                if (endpointClass.isAnnotationPresent(WebServiceProvider.class))\n                    return true;\n            } else {\n                if (!Servlet.class.isAssignableFrom(endpointClass))\n                    return true;\n            }\n        }\n        return false;\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Gets the JBossWebMetaData from the WarMetaData attached to the provided deployment unit, if any.\n     *\n     * @param unit\n     * @return the JBossWebMetaData or null if either that or the parent WarMetaData are not found.\n     */\n    public static JBossWebMetaData getJBossWebMetaData(final DeploymentUnit unit) {\n        final WarMetaData warMetaData = ASHelper.getOptionalAttachment(unit, WarMetaData.ATTACHMENT_KEY);\n        JBossWebMetaData result = null;\n        if (warMetaData != null) {\n            result = warMetaData.getMergedJBossWebMetaData();\n            if (result == null) {\n                result = warMetaData.getJbossWebMetaData();\n            }\n        } else {\n            result = ASHelper.getOptionalAttachment(unit, WSAttachmentKeys.JBOSSWEB_METADATA_KEY);\n        }\n        return result;\n    }","id":54680,"modified_method":"/**\n     * Gets the JBossWebMetaData from the WarMetaData attached to the provided deployment unit, if any.\n     *\n     * @param unit\n     * @return the JBossWebMetaData or null if either that or the parent WarMetaData are not found.\n     */\n    public static JBossWebMetaData getJBossWebMetaData(final DeploymentUnit unit) {\n        final WarMetaData warMetaData = getOptionalAttachment(unit, WarMetaData.ATTACHMENT_KEY);\n        JBossWebMetaData result = null;\n        if (warMetaData != null) {\n            result = warMetaData.getMergedJBossWebMetaData();\n            if (result == null) {\n                result = warMetaData.getJbossWebMetaData();\n            }\n        } else {\n            result = getOptionalAttachment(unit, WSAttachmentKeys.JBOSSWEB_METADATA_KEY);\n        }\n        return result;\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Gets list of JAXWS servlets meta data.\n     *\n     * @param unit deployment unit\n     * @return list of JAXWS servlets meta data\n     */\n    public static List<ServletMetaData> getJaxwsServlets(final DeploymentUnit unit) {\n        return ASHelper.getWebServiceServlets(unit, true);\n    }","id":54681,"modified_method":"/**\n     * Gets list of JAXWS servlets meta data.\n     *\n     * @param unit deployment unit\n     * @return list of JAXWS servlets meta data\n     */\n    public static List<ServletMetaData> getJaxwsServlets(final DeploymentUnit unit) {\n        return getWebServiceServlets(unit, true);\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Return a new sublist of the provided ServletMetaData list including the WS servlet data only\n     *\n     * @param annotationIndex the annotation index to use for scanning for annotations\n     * @param smd the initial servlet metadata collection\n     * @param jaxws if passed value is <b>true<\/b> JAXWS servlets list will be returned, otherwise JAXRPC servlets list\n     * @return either JAXRPC or JAXWS servlets list\n     */\n    private static <T extends ServletMetaData> List<ServletMetaData> selectWebServiceServlets(final DeploymentUnit unit, final Collection<T> smd, final boolean jaxws) {\n        if (smd == null) return Collections.emptyList();\n        final CompositeIndex index = ASHelper.getOptionalAttachment(unit, Attachments.COMPOSITE_ANNOTATION_INDEX);\n\n        final List<ServletMetaData> endpoints = new ArrayList<ServletMetaData>();\n\n        for (final ServletMetaData servletMD : smd) {\n            final boolean isWebServiceEndpoint = index != null ? isWebserviceEndpoint(servletMD, index, jaxws) : isWebserviceEndpoint(\n                    servletMD, unit.getAttachment(WSAttachmentKeys.CLASSLOADER_KEY), jaxws);\n            if (isWebServiceEndpoint) {\n                endpoints.add(servletMD);\n            }\n        }\n\n        return endpoints;\n    }","id":54682,"modified_method":"/**\n     * Return a new sublist of the provided ServletMetaData list including the WS servlet data only\n     *\n     * @param annotationIndex the annotation index to use for scanning for annotations\n     * @param smd the initial servlet metadata collection\n     * @param jaxws if passed value is <b>true<\/b> JAXWS servlets list will be returned, otherwise JAXRPC servlets list\n     * @return either JAXRPC or JAXWS servlets list\n     */\n    private static <T extends ServletMetaData> List<ServletMetaData> selectWebServiceServlets(final DeploymentUnit unit, final Collection<T> smd, final boolean jaxws) {\n        if (smd == null) return Collections.emptyList();\n        final CompositeIndex index = getOptionalAttachment(unit, Attachments.COMPOSITE_ANNOTATION_INDEX);\n\n        final List<ServletMetaData> endpoints = new ArrayList<ServletMetaData>();\n\n        for (final ServletMetaData servletMD : smd) {\n            final boolean isWebServiceEndpoint = index != null ? isWebserviceEndpoint(servletMD, index, jaxws) : isWebserviceEndpoint(\n                    servletMD, unit.getAttachment(WSAttachmentKeys.CLASSLOADER_KEY), jaxws);\n            if (isWebServiceEndpoint) {\n                endpoints.add(servletMD);\n            }\n        }\n\n        return endpoints;\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Creates new Web Service deployment.\n     *\n     * @param unit deployment unit\n     * @return archive deployment\n     */\n    private ArchiveDeployment newDeployment(final DeploymentUnit unit) throws DeploymentUnitProcessingException {\n        this.log.debug(\"Creating new WS deployment model for: \" + unit);\n        final ResourceRoot deploymentRoot = unit.getAttachment(Attachments.DEPLOYMENT_ROOT);\n        final VirtualFile root = deploymentRoot != null ? deploymentRoot.getRoot() : null;\n        final ClassLoader classLoader;\n        final Module module = unit.getAttachment(Attachments.MODULE);\n        if (module == null) {\n            classLoader = unit.getAttachment(WSAttachmentKeys.CLASSLOADER_KEY);\n            if (classLoader == null) {\n                throw new DeploymentUnitProcessingException(\"failed to resolve module / classloader for deployment \" + unit);\n            }\n        } else {\n            classLoader = module.getClassLoader();\n        }\n        final ArchiveDeployment dep = this.newDeployment(unit.getName(), classLoader);\n\n        if (root != null) {\n            try {\n                List<VirtualFile> virtualFiles = root.getChildrenRecursively(WS_FILE_FILTER);\n                final Set<UnifiedVirtualFile> uVirtualFiles = new HashSet<UnifiedVirtualFile>();\n                for (VirtualFile vf : virtualFiles) {\n                    // Adding the roots of the virtual files.\n                    uVirtualFiles.add(new VirtualFileAdaptor(vf));\n                }\n                dep.setMetadataFiles(new LinkedList<UnifiedVirtualFile>(uVirtualFiles));\n            } catch (IOException e) {\n                this.log.warn(\"Could not load metadata files for deployment root \" + root, e);\n            }\n        }\n\n        if (unit.getParent() != null) {\n            final String parentDeploymentName = unit.getParent().getName();\n            final Module parentModule = unit.getParent().getAttachment(Attachments.MODULE);\n            if (parentModule == null) {\n                throw new DeploymentUnitProcessingException(\"failed to resolve module for parent of deployment \"\n                        + unit);\n            }\n            final ClassLoader parentClassLoader = parentModule.getClassLoader();\n\n            this.log.debug(\"Creating new WS deployment model for parent: \" + unit.getParent());\n            final ArchiveDeployment parentDep = this.newDeployment(parentDeploymentName, parentClassLoader);\n            dep.setParent(parentDep);\n        }\n\n        if (root != null) {\n            dep.setRootFile(new VirtualFileAdaptor(root));\n        } else {\n            dep.setRootFile(new ResourceLoaderAdapter(classLoader));\n        }\n        dep.setRuntimeClassLoader(classLoader);\n        return dep;\n    }","id":54683,"modified_method":"/**\n     * Creates new Web Service deployment.\n     *\n     * @param unit deployment unit\n     * @return archive deployment\n     */\n    private ArchiveDeployment newDeployment(final DeploymentUnit unit) throws DeploymentUnitProcessingException {\n        this.log.debug(\"Creating new WS deployment model for: \" + unit);\n        final ResourceRoot deploymentRoot = unit.getAttachment(Attachments.DEPLOYMENT_ROOT);\n        final VirtualFile root = deploymentRoot.getRoot();\n        final Module module = unit.getAttachment(Attachments.MODULE);\n        if (module == null) {\n            throw new DeploymentUnitProcessingException(\"failed to resolve module for deployment \" + deploymentRoot);\n        }\n        final ClassLoader classLoader = module.getClassLoader();\n        final ArchiveDeployment dep = this.newDeployment(unit.getName(), classLoader);\n\n        try {\n            List<VirtualFile> virtualFiles = root.getChildrenRecursively(WS_FILE_FILTER);\n            final Set<UnifiedVirtualFile> uVirtualFiles = new HashSet<UnifiedVirtualFile>();\n            for (VirtualFile vf : virtualFiles) {\n                // Adding the roots of the virtual files.\n                uVirtualFiles.add(new VirtualFileAdaptor(vf));\n            }\n            dep.setMetadataFiles(new LinkedList<UnifiedVirtualFile>(uVirtualFiles));\n        } catch (IOException e) {\n            this.log.warn(\"Could not load metadata files for deployment root \" + root, e);\n        }\n\n        if (unit.getParent() != null) {\n            final String parentDeploymentName = unit.getParent().getName();\n            final Module parentModule = unit.getParent().getAttachment(Attachments.MODULE);\n            if (parentModule == null) {\n                throw new DeploymentUnitProcessingException(\"failed to resolve module for parent of deployment \"\n                        + deploymentRoot);\n            }\n            final ClassLoader parentClassLoader = parentModule.getClassLoader();\n\n            this.log.debug(\"Creating new WS deployment model for parent: \" + unit.getParent());\n            final ArchiveDeployment parentDep = this.newDeployment(parentDeploymentName, parentClassLoader);\n            dep.setParent(parentDep);\n        }\n\n        dep.setRootFile(new VirtualFileAdaptor(root));\n        dep.setRuntimeClassLoader(classLoader);\n        dep.setType(deploymentType);\n\n        return dep;\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Creates new Http Web Service endpoint.\n     *\n     * @param endpointClass endpoint class name\n     * @param endpointName endpoint name\n     * @param dep deployment\n     * @return WS endpoint\n     */\n    protected final Endpoint newHttpEndpoint(final String endpointClass, final String endpointName, final Deployment dep, final EndpointType endpointType) {\n        if (endpointName == null) {\n            throw new NullPointerException(\"Null endpoint name\");\n        }\n\n        if (endpointClass == null) {\n            throw new NullPointerException(\"Null endpoint class\");\n        }\n\n        final Endpoint endpoint = this.deploymentModelFactory.newHttpEndpoint(endpointClass);\n        endpoint.setShortName(endpointName);\n        endpoint.setType(endpointType);\n        dep.getService().addEndpoint(endpoint);\n\n        return endpoint;\n    }","id":54684,"modified_method":"/**\n     * Creates new Http Web Service endpoint.\n     *\n     * @param endpointClass endpoint class name\n     * @param endpointName endpoint name\n     * @param dep deployment\n     * @return WS endpoint\n     */\n    protected final Endpoint newHttpEndpoint(final String endpointClass, final String endpointName, final Deployment dep) {\n        if (endpointName == null) {\n            throw new NullPointerException(\"Null endpoint name\");\n        }\n\n        if (endpointClass == null) {\n            throw new NullPointerException(\"Null endpoint class\");\n        }\n\n        final Endpoint endpoint = this.deploymentModelFactory.newHttpEndpoint(endpointClass);\n        endpoint.setShortName(endpointName);\n        endpoint.setType(endpointType);\n        dep.getService().addEndpoint(endpoint);\n\n        return endpoint;\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Constructor.\n     */\n    protected AbstractDeploymentModelBuilder() {\n        super();\n\n        // deployment factory\n        final SPIProvider spiProvider = SPIProviderResolver.getInstance().getProvider();\n        this.deploymentModelFactory = spiProvider.getSPI(DeploymentModelFactory.class);\n    }","id":54685,"modified_method":"/**\n     * Constructor.\n     */\n    protected AbstractDeploymentModelBuilder(final DeploymentType deploymentType, final EndpointType endpointType) {\n        super();\n\n        // deployment factory\n        final SPIProvider spiProvider = SPIProviderResolver.getInstance().getProvider();\n        this.deploymentModelFactory = spiProvider.getSPI(DeploymentModelFactory.class);\n        this.deploymentType = deploymentType;\n        this.endpointType = endpointType;\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * @see org.jboss.webservices.integration.deployers.deployment.DeploymentModelBuilder#newDeploymentModel(DeploymentUnit)\n     *\n     * @param unit deployment unit\n     */\n    public final void newDeploymentModel(final DeploymentUnit unit) {\n        final ArchiveDeployment dep;\n        if (unit.getAttachment(WSAttachmentKeys.DEPLOYMENT_KEY) != null) {\n            dep = (ArchiveDeployment)unit.getAttachment(WSAttachmentKeys.DEPLOYMENT_KEY);\n        } else {\n            try {\n                dep = this.newDeployment(unit);\n            } catch (DeploymentUnitProcessingException e) {\n                throw new RuntimeException(e);\n            }\n            dep.addAttachment(DeploymentUnit.class, unit);\n            unit.putAttachment(WSAttachmentKeys.DEPLOYMENT_KEY, dep);\n        }\n        this.build(dep, unit);\n    }","id":54686,"modified_method":"/**\n     * @see org.jboss.webservices.integration.deployers.deployment.DeploymentModelBuilder#newDeploymentModel(DeploymentUnit)\n     *\n     * @param unit deployment unit\n     */\n    public final void newDeploymentModel(final DeploymentUnit unit) {\n        final ArchiveDeployment dep;\n        if (unit.hasAttachment(DEPLOYMENT_KEY)) {\n            dep = (ArchiveDeployment) unit.getAttachment(DEPLOYMENT_KEY);\n        } else {\n            try {\n                dep = this.newDeployment(unit);\n            } catch (DeploymentUnitProcessingException e) {\n                throw new RuntimeException(e);\n            }\n            dep.addAttachment(DeploymentUnit.class, unit);\n            unit.putAttachment(DEPLOYMENT_KEY, dep);\n        }\n\n        this.build(dep, unit);\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Creates new JMS Web Service endpoint.\n     *\n     * @param endpointClass endpoint class name\n     * @param endpointName endpoint name\n     * @param dep deployment\n     * @return WS endpoint\n     */\n    protected final Endpoint newJMSEndpoint(final String endpointClass, final String endpointName, final String soapAddress, final Deployment dep, final EndpointType endpointType) {\n        if (endpointName == null) {\n            throw new NullPointerException(\"Null endpoint name\");\n        }\n\n        if (endpointClass == null) {\n            throw new NullPointerException(\"Null endpoint class\");\n        }\n\n        final Endpoint endpoint = this.deploymentModelFactory.newJMSEndpoint(endpointClass);\n        endpoint.setAddress(soapAddress);\n        endpoint.setShortName(endpointName);\n        endpoint.setType(endpointType);\n        dep.getService().addEndpoint(endpoint);\n\n        return endpoint;\n    }","id":54687,"modified_method":"/**\n     * Creates new JMS Web Service endpoint.\n     *\n     * @param endpointClass endpoint class name\n     * @param endpointName endpoint name\n     * @param dep deployment\n     * @return WS endpoint\n     */\n    protected final Endpoint newJMSEndpoint(final String endpointClass, final String endpointName, final String soapAddress, final Deployment dep) {\n        if (endpointName == null) {\n            throw new NullPointerException(\"Null endpoint name\");\n        }\n\n        if (endpointClass == null) {\n            throw new NullPointerException(\"Null endpoint class\");\n        }\n\n        final Endpoint endpoint = this.deploymentModelFactory.newJMSEndpoint(endpointClass);\n        endpoint.setAddress(soapAddress);\n        endpoint.setShortName(endpointName);\n        endpoint.setType(endpointType);\n        dep.getService().addEndpoint(endpoint);\n\n        return endpoint;\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Constructor.\n     */\n    DeploymentModelBuilderJAXRPC_EJB21() {\n        super();\n    }","id":54688,"modified_method":"/**\n     * Constructor.\n     */\n    DeploymentModelBuilderJAXRPC_EJB21() {\n        super(JAXRPC, JAXRPC_EJB21);\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Constructor.\n     */\n    DeploymentModelBuilderJAXRPC_JSE() {\n        super();\n    }","id":54689,"modified_method":"/**\n     * Constructor.\n     */\n    DeploymentModelBuilderJAXRPC_JSE() {\n        super(JAXRPC, JAXRPC_JSE);\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Creates new JAXRPC JSE deployment and registers it with deployment unit.\n     *\n     * @param dep webservice deployment\n     * @param unit deployment unit\n     */\n    @Override\n    protected void build(final Deployment dep, final DeploymentUnit unit) {\n        final JBossWebMetaData webMetaData = ASHelper.getJBossWebMetaData(unit);\n        if (webMetaData != null) {\n            dep.addAttachment(JBossWebMetaData.class, webMetaData);\n        }\n        final WebservicesMetaData wsMetaData = ASHelper.getOptionalAttachment(unit, WSAttachmentKeys.WEBSERVICES_METADATA_KEY);\n        if (wsMetaData != null) {\n            dep.addAttachment(WebservicesMetaData.class, wsMetaData);\n        }\n\n        this.log.debug(\"Creating JAXRPC JSE endpoints meta data model\");\n        for (WebserviceDescriptionMetaData wsd : wsMetaData.getWebserviceDescriptions()) {\n            for (PortComponentMetaData pcmd : wsd.getPortComponents()) {\n                final String servletName = pcmd.getServletLink();\n                this.log.debug(\"JSE name: \" + servletName);\n                final ServletMetaData servletMD = ASHelper.getServletForName(webMetaData, servletName);\n                final String servletClass = ASHelper.getEndpointName(servletMD);\n                this.log.debug(\"JSE class: \" + servletClass);\n\n                this.newHttpEndpoint(servletClass, servletName, dep, EndpointType.JAXRPC_JSE);\n            }\n        }\n    }","id":54690,"modified_method":"/**\n     * Creates new JAXRPC JSE deployment and registers it with deployment unit.\n     *\n     * @param dep webservice deployment\n     * @param unit deployment unit\n     */\n    @Override\n    protected void build(final Deployment dep, final DeploymentUnit unit) {\n        final JBossWebMetaData webMetaData = ASHelper.getJBossWebMetaData(unit);\n        if (webMetaData != null) {\n            dep.addAttachment(JBossWebMetaData.class, webMetaData);\n        }\n        final WebservicesMetaData wsMetaData = ASHelper.getOptionalAttachment(unit, WSAttachmentKeys.WEBSERVICES_METADATA_KEY);\n        if (wsMetaData != null) {\n            dep.addAttachment(WebservicesMetaData.class, wsMetaData);\n        }\n\n        this.log.debug(\"Creating JAXRPC JSE endpoints meta data model\");\n        for (WebserviceDescriptionMetaData wsd : wsMetaData.getWebserviceDescriptions()) {\n            for (PortComponentMetaData pcmd : wsd.getPortComponents()) {\n                final String servletName = pcmd.getServletLink();\n                this.log.debug(\"JSE name: \" + servletName);\n                final ServletMetaData servletMD = ASHelper.getServletForName(webMetaData, servletName);\n                final String servletClass = ASHelper.getEndpointName(servletMD);\n                this.log.debug(\"JSE class: \" + servletClass);\n\n                this.newHttpEndpoint(servletClass, servletName, dep);\n            }\n        }\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Creates new JAXWS EJB3 deployment and registers it with deployment unit.\n     *\n     * @param dep webservice deployment\n     * @param unit deployment unit\n     */\n    @Override\n    protected void build(final Deployment dep, final DeploymentUnit unit) {\n        this.getAndPropagateAttachment(WSAttachmentKeys.WEBSERVICE_DEPLOYMENT_KEY, WebServiceDeployment.class, unit, dep);\n        //this.getAndPropagateAttachment(JBossMetaData.class, unit, dep); // TODO: propagate?\n\n        this.log.debug(\"Creating JAXWS EJB3 endpoints meta data model\");\n        for (final WebServiceDeclaration container : ASHelper.getJaxwsEjbs(unit)) {\n            final String ejbName = container.getComponentName();\n            this.log.debug(\"EJB3 name: \" + ejbName);\n            final String ejbClass = container.getComponentClassName();\n            this.log.debug(\"EJB3 class: \" + ejbClass);\n\n            final Endpoint ep = this.newHttpEndpoint(ejbClass, ejbName, dep, EndpointType.JAXWS_EJB3);\n            ep.setProperty(ASHelper.CONTAINER_NAME, container.getContainerName());\n        }\n    }","id":54691,"modified_method":"/**\n     * Creates new JAXWS EJB3 deployment and registers it with deployment unit.\n     *\n     * @param dep webservice deployment\n     * @param unit deployment unit\n     */\n    @Override\n    protected void build(final Deployment dep, final DeploymentUnit unit) {\n        this.getAndPropagateAttachment(WSAttachmentKeys.WEBSERVICE_DEPLOYMENT_KEY, WebServiceDeployment.class, unit, dep);\n        //this.getAndPropagateAttachment(JBossMetaData.class, unit, dep); // TODO: propagate?\n\n        this.log.debug(\"Creating JAXWS EJB3 endpoints meta data model\");\n        for (final WebServiceDeclaration container : ASHelper.getJaxwsEjbs(unit)) {\n            final String ejbName = container.getComponentName();\n            this.log.debug(\"EJB3 name: \" + ejbName);\n            final String ejbClass = container.getComponentClassName();\n            this.log.debug(\"EJB3 class: \" + ejbClass);\n\n            final Endpoint ep = this.newHttpEndpoint(ejbClass, ejbName, dep);\n            ep.setProperty(ASHelper.CONTAINER_NAME, container.getContainerName());\n        }\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Constructor.\n     */\n    DeploymentModelBuilderJAXWS_EJB3() {\n        super();\n    }","id":54692,"modified_method":"/**\n     * Constructor.\n     */\n    DeploymentModelBuilderJAXWS_EJB3() {\n        super(JAXWS, JAXWS_EJB3);\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Constructor.\n     */\n    DeploymentModelBuilderJAXWS_JSE() {\n        super();\n    }","id":54693,"modified_method":"/**\n     * Constructor.\n     */\n    DeploymentModelBuilderJAXWS_JSE() {\n        super(JAXWS, JAXWS_JSE);\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Creates new JAXWS JSE deployment and registers it with deployment unit.\n     *\n     * @param dep webservice deployment\n     * @param unit deployment unit\n     */\n    @Override\n    protected void build(final Deployment dep, final DeploymentUnit unit) {\n        this.log.debug(\"Creating JAXWS JSE endpoints meta data model\");\n        final JBossWebMetaData webMetaData = ASHelper.getJBossWebMetaData(unit);\n        if (webMetaData != null) {\n            dep.addAttachment(JBossWebMetaData.class, webMetaData);\n            final List<ServletMetaData> servlets = ASHelper.getJaxwsServlets(unit);\n            for (ServletMetaData servlet : servlets) {\n                final String servletName = servlet.getName();\n                this.log.debug(\"JSE name: \" + servletName);\n                final String servletClass = ASHelper.getEndpointName(servlet);\n                this.log.debug(\"JSE class: \" + servletClass);\n\n                this.newHttpEndpoint(servletClass, servletName, dep, EndpointType.JAXWS_JSE);\n            }\n        }\n\n        final JMSEndpointsMetaData jmsEndpointsMD = ASHelper.getOptionalAttachment(unit, WSAttachmentKeys.JMS_ENDPOINT_METADATA_KEY);\n        if (jmsEndpointsMD != null) {\n            dep.addAttachment(JMSEndpointsMetaData.class, jmsEndpointsMD);\n            for (JMSEndpointMetaData endpoint : jmsEndpointsMD.getEndpointsMetaData()) {\n                if (endpoint.getName() == null) {\n                    endpoint.setName(endpoint.getImplementor());\n                }\n                this.newJMSEndpoint(endpoint.getImplementor(), endpoint.getName(), endpoint.getSoapAddress(), dep, EndpointType.JAXWS_JSE);\n            }\n        }\n    }","id":54694,"modified_method":"/**\n     * Creates new JAXWS JSE deployment and registers it with deployment unit.\n     *\n     * @param dep webservice deployment\n     * @param unit deployment unit\n     */\n    @Override\n    protected void build(final Deployment dep, final DeploymentUnit unit) {\n        this.log.debug(\"Creating JAXWS JSE endpoints meta data model\");\n        final JBossWebMetaData webMetaData = ASHelper.getJBossWebMetaData(unit);\n        if (webMetaData != null) {\n            dep.addAttachment(JBossWebMetaData.class, webMetaData);\n            final List<ServletMetaData> servlets = ASHelper.getJaxwsServlets(unit);\n            for (ServletMetaData servlet : servlets) {\n                final String servletName = servlet.getName();\n                this.log.debug(\"JSE name: \" + servletName);\n                final String servletClass = ASHelper.getEndpointName(servlet);\n                this.log.debug(\"JSE class: \" + servletClass);\n\n                this.newHttpEndpoint(servletClass, servletName, dep);\n            }\n        }\n\n        final JMSEndpointsMetaData jmsEndpointsMD = ASHelper.getOptionalAttachment(unit, WSAttachmentKeys.JMS_ENDPOINT_METADATA_KEY);\n        if (jmsEndpointsMD != null) {\n            dep.addAttachment(JMSEndpointsMetaData.class, jmsEndpointsMD);\n            for (JMSEndpointMetaData endpoint : jmsEndpointsMD.getEndpointsMetaData()) {\n                if (endpoint.getName() == null) {\n                    endpoint.setName(endpoint.getImplementor());\n                }\n                this.newJMSEndpoint(endpoint.getImplementor(), endpoint.getName(), endpoint.getSoapAddress(), dep);\n            }\n        }\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"public List<Endpoint> publish(ServiceTarget target, WSEndpointDeploymentUnit unit) throws Exception {\n        List<DeploymentAspect> aspects = DeploymentAspectsProvider.getSortedDeploymentAspects();\n        ClassLoader origClassLoader = SecurityActions.getContextClassLoader();\n        Deployment dep = null;\n        try {\n            SecurityActions.setContextClassLoader(ClassLoaderProvider.getDefaultProvider().getServerIntegrationClassLoader());\n            WSDeploymentBuilder.getInstance().build(unit, EndpointType.JAXWS_JSE);\n            dep = unit.getAttachment(WSAttachmentKeys.DEPLOYMENT_KEY);\n            dep.addAttachment(ServiceTarget.class, target);\n            DeploymentAspectManager dam = new DeploymentAspectManagerImpl();\n            dam.setDeploymentAspects(aspects);\n            dam.deploy(dep);\n        } finally {\n            if (dep != null) {\n                dep.removeAttachment(ServiceTarget.class);\n            }\n            SecurityActions.setContextClassLoader(origClassLoader);\n        }\n        Deployment deployment = unit.getAttachment(WSAttachmentKeys.DEPLOYMENT_KEY);\n        deployment.addAttachment(StandardContext.class, startWebApp(host, unit)); //TODO simplify and use findChild later in destroy()/stopWebApp()\n        return deployment.getService().getEndpoints();\n    }","id":54695,"modified_method":"public List<Endpoint> publish(ServiceTarget target, WSEndpointDeploymentUnit unit) throws Exception {\n        List<DeploymentAspect> aspects = DeploymentAspectsProvider.getSortedDeploymentAspects();\n        ClassLoader origClassLoader = SecurityActions.getContextClassLoader();\n        Deployment dep = null;\n        try {\n            SecurityActions.setContextClassLoader(ClassLoaderProvider.getDefaultProvider().getServerIntegrationClassLoader());\n            WSDeploymentBuilder.getInstance().build(unit);\n            dep = unit.getAttachment(WSAttachmentKeys.DEPLOYMENT_KEY);\n            dep.addAttachment(ServiceTarget.class, target);\n            DeploymentAspectManager dam = new DeploymentAspectManagerImpl();\n            dam.setDeploymentAspects(aspects);\n            dam.deploy(dep);\n        } finally {\n            if (dep != null) {\n                dep.removeAttachment(ServiceTarget.class);\n            }\n            SecurityActions.setContextClassLoader(origClassLoader);\n        }\n        Deployment deployment = unit.getAttachment(WSAttachmentKeys.DEPLOYMENT_KEY);\n        deployment.addAttachment(StandardContext.class, startWebApp(host, unit)); //TODO simplify and use findChild later in destroy()/stopWebApp()\n        return deployment.getService().getEndpoints();\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"static void activate(final DeploymentProcessorTarget processorTarget) {\n\n        processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_WEBSERVICES_XML, new WSDescriptorDeploymentProcessor());\n        processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_WS_EJB_INTEGRATION, new WSEJBIntegrationProcessor());\n        processorTarget.addDeploymentProcessor(Phase.DEPENDENCIES, Phase.DEPENDENCIES_WS, new WSDependenciesProcessor());\n        processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_WS_JMS_INTEGRATION, new WSJMSIntegrationProcessor());\n        //processorTarget.addDeploymentProcessor(Phase.DEPENDENCIES, Phase.DEPENDENCIES_JAXRPC, new WSJAXRPCDependenciesDeploymentProcessor());\n        processorTarget.addDeploymentProcessor(Phase.INSTALL, Phase.INSTALL_WS_DEPLOYMENT_TYPE_DETECTOR, new WSTypeDeploymentProcessor());\n\n        addDeploymentProcessors(processorTarget, Phase.INSTALL, Phase.INSTALL_WS_DEPLOYMENT_ASPECTS);\n\n        // Add a EEResourceReferenceProcessor which handles @Resource references of type WebServiceContext.\n        // Note that we do it here instead of a DUP because the @Resource reference processor for WebServiceContext *isn't*\n        // per DU\n        EEResourceReferenceProcessorRegistry.registerResourceReferenceProcessor(new WebServiceContextResourceProcessor());\n    }","id":54696,"modified_method":"static void activate(final DeploymentProcessorTarget processorTarget) {\n\n        processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_WEBSERVICES_XML, new WSDescriptorDeploymentProcessor());\n        processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_WS_EJB_INTEGRATION, new WSEJBIntegrationProcessor());\n        processorTarget.addDeploymentProcessor(Phase.DEPENDENCIES, Phase.DEPENDENCIES_WS, new WSDependenciesProcessor());\n        processorTarget.addDeploymentProcessor(Phase.POST_MODULE, Phase.POST_MODULE_WS_JMS_INTEGRATION, new WSJMSIntegrationProcessor());\n        //processorTarget.addDeploymentProcessor(Phase.DEPENDENCIES, Phase.DEPENDENCIES_JAXRPC, new WSJAXRPCDependenciesDeploymentProcessor());\n        processorTarget.addDeploymentProcessor(Phase.INSTALL, Phase.INSTALL_WS_UNIVERSAL_META_DATA_MODEL, new WSModelDeploymentProcessor());\n\n        addDeploymentProcessors(processorTarget, Phase.INSTALL, Phase.INSTALL_WS_DEPLOYMENT_ASPECTS);\n\n        // Add a EEResourceReferenceProcessor which handles @Resource references of type WebServiceContext.\n        // Note that we do it here instead of a DUP because the @Resource reference processor for WebServiceContext *isn't*\n        // per DU\n        EEResourceReferenceProcessorRegistry.registerResourceReferenceProcessor(new WebServiceContextResourceProcessor());\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Builds JBossWS deployment model if web service deployment is detected.\n     *\n     * @param unit deployment unit\n     */\n    public void build(final DeploymentUnit unit, final EndpointType endpointType) {\n\n        if (endpointType != null) {\n            WSDeploymentBuilder.builders.get(endpointType).newDeploymentModel(unit);\n        }\n    }","id":54697,"modified_method":"/**\n     * Builds JBossWS deployment model if web service deployment is detected.\n     * @param unit deployment unit\n     */\n    public void build(final DeploymentUnit unit) {\n        boolean isJaxwsDeployment = false;\n        if (isJaxwsJseDeployment(unit)) {\n            log.debug(\"Detected JAXWS JSE deployment\");\n            JAXWS_JSE.newDeploymentModel(unit);\n            isJaxwsDeployment = true;\n        }\n        if (isJaxwsEjbDeployment(unit)) {\n            log.debug(\"Detected JAXWS EJB3 deployment\");\n            JAXWS_EJB.newDeploymentModel(unit);\n            isJaxwsDeployment = true;\n        }\n        if (!isJaxwsDeployment && isJaxrpcJseDeployment(unit)) {\n            log.debug(\"Detected JAXRPC JSE deployment\");\n            JAXRPC_JSE.newDeploymentModel(unit);\n        }\n        if (!isJaxwsDeployment && isJaxrpcEjbDeployment(unit)) {\n            log.debug(\"Detected JAXRPC EJB21 deployment\");\n            JAXRPC_EJB.newDeploymentModel(unit);\n        }\n    }","commit_id":"6e93bf093b04befbb3f6a9a8b2a965a4af7b33ca","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Returns true if JAXWS JSE deployment is detected.\n     *\n     * @param unit deployment unit\n     * @return true if JAXWS JSE, false otherwise\n     */\n    public static boolean isJaxwsJseDeployment(final DeploymentUnit unit) {\n        final boolean hasWarMetaData = hasAttachment(unit, WarMetaData.ATTACHMENT_KEY);\n        if (hasWarMetaData) {\n            //once the deployment is a WAR, the endpoint(s) can be on either http (servlet) transport or jms transport\n            return getJaxwsServlets(unit).size() > 0 || hasAttachment(unit, WSAttachmentKeys.JMS_ENDPOINT_METADATA_KEY);\n        } else {\n            //otherwise the (JAR) deployment can be a jaxws_jse one if there're jms transport endpoints only (no ejb3)\n            return !hasAttachment(unit, WSAttachmentKeys.WEBSERVICE_DEPLOYMENT_KEY) &&\n                    hasAttachment(unit, WSAttachmentKeys.JMS_ENDPOINT_METADATA_KEY);\n        }\n    }","id":54698,"modified_method":"/**\n     * Returns true if JAXWS JSE deployment is detected.\n     *\n     * @param unit deployment unit\n     * @return true if JAXWS JSE, false otherwise\n     */\n    public static boolean isJaxwsJseDeployment(final DeploymentUnit unit) {\n        if (unit instanceof WSEndpointDeploymentUnit) return true;\n\n        final boolean hasWarMetaData = hasAttachment(unit, WarMetaData.ATTACHMENT_KEY);\n        if (hasWarMetaData) {\n            //once the deployment is a WAR, the endpoint(s) can be on either http (servlet) transport or jms transport\n            return getJaxwsServlets(unit).size() > 0 || hasAttachment(unit, WSAttachmentKeys.JMS_ENDPOINT_METADATA_KEY);\n        } else {\n            //otherwise the (JAR) deployment can be a jaxws_jse one if there're jms transport endpoints only (no ejb3)\n            return !hasAttachment(unit, WSAttachmentKeys.WEBSERVICE_DEPLOYMENT_KEY) &&\n                    hasAttachment(unit, WSAttachmentKeys.JMS_ENDPOINT_METADATA_KEY);\n        }\n    }","commit_id":"2cf31a7250ec48f15e608b455fa109aa012919d3","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Creates new Web Service deployment.\n     *\n     * @param unit deployment unit\n     * @return archive deployment\n     */\n    private ArchiveDeployment newDeployment(final DeploymentUnit unit) throws DeploymentUnitProcessingException {\n        this.log.debug(\"Creating new WS deployment model for: \" + unit);\n        final ResourceRoot deploymentRoot = unit.getAttachment(Attachments.DEPLOYMENT_ROOT);\n        final VirtualFile root = deploymentRoot.getRoot();\n        final Module module = unit.getAttachment(Attachments.MODULE);\n        if (module == null) {\n            throw new DeploymentUnitProcessingException(\"failed to resolve module for deployment \" + deploymentRoot);\n        }\n        final ClassLoader classLoader = module.getClassLoader();\n        final ArchiveDeployment dep = this.newDeployment(unit.getName(), classLoader);\n\n        try {\n            List<VirtualFile> virtualFiles = root.getChildrenRecursively(WS_FILE_FILTER);\n            final Set<UnifiedVirtualFile> uVirtualFiles = new HashSet<UnifiedVirtualFile>();\n            for (VirtualFile vf : virtualFiles) {\n                // Adding the roots of the virtual files.\n                uVirtualFiles.add(new VirtualFileAdaptor(vf));\n            }\n            dep.setMetadataFiles(new LinkedList<UnifiedVirtualFile>(uVirtualFiles));\n        } catch (IOException e) {\n            this.log.warn(\"Could not load metadata files for deployment root \" + root, e);\n        }\n\n        if (unit.getParent() != null) {\n            final String parentDeploymentName = unit.getParent().getName();\n            final Module parentModule = unit.getParent().getAttachment(Attachments.MODULE);\n            if (parentModule == null) {\n                throw new DeploymentUnitProcessingException(\"failed to resolve module for parent of deployment \"\n                        + deploymentRoot);\n            }\n            final ClassLoader parentClassLoader = parentModule.getClassLoader();\n\n            this.log.debug(\"Creating new WS deployment model for parent: \" + unit.getParent());\n            final ArchiveDeployment parentDep = this.newDeployment(parentDeploymentName, parentClassLoader);\n            dep.setParent(parentDep);\n        }\n\n        dep.setRootFile(new VirtualFileAdaptor(root));\n        dep.setRuntimeClassLoader(classLoader);\n        dep.setType(deploymentType);\n\n        return dep;\n    }","id":54699,"modified_method":"/**\n     * Creates new Web Service deployment.\n     *\n     * @param unit deployment unit\n     * @return archive deployment\n     */\n    private ArchiveDeployment newDeployment(final DeploymentUnit unit) throws DeploymentUnitProcessingException {\n        this.log.debug(\"Creating new WS deployment model for: \" + unit);\n        final ResourceRoot deploymentRoot = unit.getAttachment(Attachments.DEPLOYMENT_ROOT);\n        final VirtualFile root = deploymentRoot != null ? deploymentRoot.getRoot() : null;\n        final ClassLoader classLoader;\n        final Module module = unit.getAttachment(Attachments.MODULE);\n        if (module == null) {\n            classLoader = unit.getAttachment(CLASSLOADER_KEY);\n            if (classLoader == null) {\n                throw new DeploymentUnitProcessingException(\"failed to resolve module / classloader for deployment \" + unit);\n            }\n        } else {\n            classLoader = module.getClassLoader();\n        }\n        final ArchiveDeployment dep = this.newDeployment(unit.getName(), classLoader);\n\n        if (root != null) {\n            try {\n                List<VirtualFile> virtualFiles = root.getChildrenRecursively(WS_FILE_FILTER);\n                final Set<UnifiedVirtualFile> uVirtualFiles = new HashSet<UnifiedVirtualFile>();\n                for (VirtualFile vf : virtualFiles) {\n                    // Adding the roots of the virtual files.\n                    uVirtualFiles.add(new VirtualFileAdaptor(vf));\n                }\n                dep.setMetadataFiles(new LinkedList<UnifiedVirtualFile>(uVirtualFiles));\n            } catch (IOException e) {\n                this.log.warn(\"Could not load metadata files for deployment root \" + root, e);\n            }\n        }\n\n        if (unit.getParent() != null) {\n            final String parentDeploymentName = unit.getParent().getName();\n            final Module parentModule = unit.getParent().getAttachment(Attachments.MODULE);\n            if (parentModule == null) {\n                throw new DeploymentUnitProcessingException(\"failed to resolve module for parent of deployment \"\n                        + deploymentRoot);\n            }\n            final ClassLoader parentClassLoader = parentModule.getClassLoader();\n\n            this.log.debug(\"Creating new WS deployment model for parent: \" + unit.getParent());\n            final ArchiveDeployment parentDep = this.newDeployment(parentDeploymentName, parentClassLoader);\n            dep.setParent(parentDep);\n        }\n\n        if (root != null) {\n            dep.setRootFile(new VirtualFileAdaptor(root));\n        } else {\n            dep.setRootFile(new ResourceLoaderAdapter(classLoader));\n        }\n        dep.setRuntimeClassLoader(classLoader);\n        dep.setType(deploymentType);\n\n        return dep;\n    }","commit_id":"2cf31a7250ec48f15e608b455fa109aa012919d3","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void start(final Deployment dep) {\n        final DeploymentUnit unit = dep.getAttachment(DeploymentUnit.class);\n        if (!(unit instanceof WSEndpointDeploymentUnit)) {\n            for (final Endpoint endpoint : dep.getService().getEndpoints()) {\n\n                ModelNode op = null;\n                try {\n                    op = unit.createDeploymentSubModel(WSExtension.SUBSYSTEM_NAME,\n                        PathElement.pathElement(ENDPOINT, URLEncoder.encode(getId(endpoint), \"UTF-8\")));\n                } catch (final UnsupportedEncodingException e) {\n                    throw new RuntimeException(e);\n                }\n\n                op.get(ENDPOINT_NAME).set(getName(endpoint));\n                op.get(ENDPOINT_CONTEXT).set(getContext(endpoint));\n                op.get(ENDPOINT_CLASS).set(endpoint.getTargetBeanName());\n                op.get(ENDPOINT_TYPE).set(endpoint.getType().toString());\n                op.get(ENDPOINT_WSDL).set(endpoint.getAddress() + \"?wsdl\");\n            }\n        }\n    }","id":54700,"modified_method":"@Override\n    public void start(final Deployment dep) {\n        final DeploymentUnit unit = dep.getAttachment(DeploymentUnit.class);\n        if (unit instanceof WSEndpointDeploymentUnit) return;\n\n        for (final Endpoint endpoint : dep.getService().getEndpoints()) {\n            ModelNode op = null;\n            try {\n                op = unit.createDeploymentSubModel(WSExtension.SUBSYSTEM_NAME,\n                        PathElement.pathElement(ENDPOINT, URLEncoder.encode(getId(endpoint), \"UTF-8\")));\n            } catch (final UnsupportedEncodingException e) {\n                throw new RuntimeException(e);\n            }\n\n            op.get(ENDPOINT_NAME).set(getName(endpoint));\n            op.get(ENDPOINT_CONTEXT).set(getContext(endpoint));\n            op.get(ENDPOINT_CLASS).set(endpoint.getTargetBeanName());\n            op.get(ENDPOINT_TYPE).set(endpoint.getType().toString());\n            op.get(ENDPOINT_WSDL).set(endpoint.getAddress() + \"?wsdl\");\n        }\n    }","commit_id":"2cf31a7250ec48f15e608b455fa109aa012919d3","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Gets the JBossWebMetaData from the WarMetaData attached to the provided deployment unit, if any.\n     *\n     * @param unit\n     * @return the JBossWebMetaData or null if either that or the parent WarMetaData are not found.\n     */\n    public static JBossWebMetaData getJBossWebMetaData(final DeploymentUnit unit) {\n        final WarMetaData warMetaData = ASHelper.getOptionalAttachment(unit, WarMetaData.ATTACHMENT_KEY);\n        JBossWebMetaData result = null;\n        if (warMetaData != null) {\n            result = warMetaData.getMergedJBossWebMetaData();\n            if (result == null) {\n                result = warMetaData.getJbossWebMetaData();\n            }\n        }\n        return result;\n    }","id":54701,"modified_method":"/**\n     * Gets the JBossWebMetaData from the WarMetaData attached to the provided deployment unit, if any.\n     *\n     * @param unit\n     * @return the JBossWebMetaData or null if either that or the parent WarMetaData are not found.\n     */\n    public static JBossWebMetaData getJBossWebMetaData(final DeploymentUnit unit) {\n        final WarMetaData warMetaData = ASHelper.getOptionalAttachment(unit, WarMetaData.ATTACHMENT_KEY);\n        JBossWebMetaData result = null;\n        if (warMetaData != null) {\n            result = warMetaData.getMergedJBossWebMetaData();\n            if (result == null) {\n                result = warMetaData.getJbossWebMetaData();\n            }\n        } else {\n            result = ASHelper.getOptionalAttachment(unit, WSAttachmentKeys.JBOSSWEB_METADATA_KEY);\n        }\n        return result;\n    }","commit_id":"76d54f6938da2bf55d31c96733a4793de2a98b2f","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Return a new sublist of the provided ServletMetaData list including the WS servlet data only\n     *\n     * @param annotationIndex the annotation index to use for scanning for annotations\n     * @param smd the initial servlet metadata collection\n     * @param jaxws if passed value is <b>true<\/b> JAXWS servlets list will be returned, otherwise JAXRPC servlets list\n     * @return either JAXRPC or JAXWS servlets list\n     */\n    public static <T extends ServletMetaData> List<ServletMetaData> selectWebServiceServlets(final CompositeIndex index, final Collection<T> smd, final boolean jaxws) {\n        if (smd == null) return Collections.emptyList();\n\n        final List<ServletMetaData> endpoints = new ArrayList<ServletMetaData>();\n\n        for (final ServletMetaData servletMD : smd) {\n            final boolean isWebServiceEndpoint = isWebserviceEndpoint(servletMD, index);\n            final boolean isJaxwsEndpoint = jaxws && isWebServiceEndpoint;\n            final boolean isJaxrpcEndpoint = !jaxws && isWebServiceEndpoint;\n\n            if (isJaxwsEndpoint || isJaxrpcEndpoint) {\n                endpoints.add(servletMD);\n            }\n        }\n\n        return endpoints;\n    }","id":54702,"modified_method":"/**\n     * Return a new sublist of the provided ServletMetaData list including the WS servlet data only\n     *\n     * @param annotationIndex the annotation index to use for scanning for annotations\n     * @param smd the initial servlet metadata collection\n     * @param jaxws if passed value is <b>true<\/b> JAXWS servlets list will be returned, otherwise JAXRPC servlets list\n     * @return either JAXRPC or JAXWS servlets list\n     */\n    private static <T extends ServletMetaData> List<ServletMetaData> selectWebServiceServlets(final DeploymentUnit unit, final Collection<T> smd, final boolean jaxws) {\n        if (smd == null) return Collections.emptyList();\n        final CompositeIndex index = ASHelper.getOptionalAttachment(unit, Attachments.COMPOSITE_ANNOTATION_INDEX);\n\n        final List<ServletMetaData> endpoints = new ArrayList<ServletMetaData>();\n\n        for (final ServletMetaData servletMD : smd) {\n            final boolean isWebServiceEndpoint = index != null ? isWebserviceEndpoint(servletMD, index) : isWebserviceEndpoint(\n                    servletMD, unit.getAttachment(WSAttachmentKeys.CLASSLOADER_KEY));\n            final boolean isJaxwsEndpoint = jaxws && isWebServiceEndpoint;\n            final boolean isJaxrpcEndpoint = !jaxws && isWebServiceEndpoint;\n\n            if (isJaxwsEndpoint || isJaxrpcEndpoint) {\n                endpoints.add(servletMD);\n            }\n        }\n\n        return endpoints;\n    }","commit_id":"76d54f6938da2bf55d31c96733a4793de2a98b2f","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Gets list of JAXRPC or JAXWS servlets meta data.\n     *\n     * @param unit deployment unit\n     * @param jaxws if passed value is <b>true<\/b> JAXWS servlets list will be returned, otherwise JAXRPC servlets list\n     * @return either JAXRPC or JAXWS servlets list\n     */\n    private static List<ServletMetaData> getWebServiceServlets(final DeploymentUnit unit, final boolean jaxws) {\n        final JBossWebMetaData jbossWebMD = getJBossWebMetaData(unit);\n        final CompositeIndex compositeIndex = ASHelper.getRequiredAttachment(unit, Attachments.COMPOSITE_ANNOTATION_INDEX);\n        return selectWebServiceServlets(compositeIndex, jbossWebMD.getServlets(), jaxws);\n    }","id":54703,"modified_method":"/**\n     * Gets list of JAXRPC or JAXWS servlets meta data.\n     *\n     * @param unit deployment unit\n     * @param jaxws if passed value is <b>true<\/b> JAXWS servlets list will be returned, otherwise JAXRPC servlets list\n     * @return either JAXRPC or JAXWS servlets list\n     */\n    private static List<ServletMetaData> getWebServiceServlets(final DeploymentUnit unit, final boolean jaxws) {\n        final JBossWebMetaData jbossWebMD = getJBossWebMetaData(unit);\n        return selectWebServiceServlets(unit, jbossWebMD.getServlets(), jaxws);\n    }","commit_id":"76d54f6938da2bf55d31c96733a4793de2a98b2f","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Creates new Web Service deployment.\n     *\n     * @param unit deployment unit\n     * @return archive deployment\n     */\n    private ArchiveDeployment newDeployment(final DeploymentUnit unit) throws DeploymentUnitProcessingException {\n        this.log.debug(\"Creating new WS deployment model for: \" + unit);\n        final ResourceRoot deploymentRoot = unit.getAttachment(Attachments.DEPLOYMENT_ROOT);\n        final VirtualFile root = deploymentRoot.getRoot();\n        final Module module = unit.getAttachment(Attachments.MODULE);\n        if (module == null) {\n            throw new DeploymentUnitProcessingException(\"failed to resolve module for deployment \" + deploymentRoot);\n        }\n        final ClassLoader classLoader = module.getClassLoader();\n        final ArchiveDeployment dep = this.newDeployment(unit.getName(), classLoader);\n\n        try {\n            List<VirtualFile> virtualFiles = root.getChildrenRecursively(WS_FILE_FILTER);\n            final Set<UnifiedVirtualFile> uVirtualFiles = new HashSet<UnifiedVirtualFile>();\n            for (VirtualFile vf : virtualFiles) {\n                // Adding the roots of the virtual files.\n                uVirtualFiles.add(new VirtualFileAdaptor(vf));\n            }\n            dep.setMetadataFiles(new LinkedList<UnifiedVirtualFile>(uVirtualFiles));\n        } catch (IOException e) {\n            this.log.warn(\"Could not load metadata files for deployment root \" + root, e);\n        }\n\n        if (unit.getParent() != null) {\n            final String parentDeploymentName = unit.getParent().getName();\n            final Module parentModule = unit.getParent().getAttachment(Attachments.MODULE);\n            if (parentModule == null) {\n                throw new DeploymentUnitProcessingException(\"failed to resolve module for parent of deployment \"\n                        + deploymentRoot);\n            }\n            final ClassLoader parentClassLoader = parentModule.getClassLoader();\n\n            this.log.debug(\"Creating new WS deployment model for parent: \" + unit.getParent());\n            final ArchiveDeployment parentDep = this.newDeployment(parentDeploymentName, parentClassLoader);\n            dep.setParent(parentDep);\n        }\n\n        dep.setRootFile(new VirtualFileAdaptor(root));\n        dep.setRuntimeClassLoader(classLoader);\n        final DeploymentType deploymentType = ASHelper.getRequiredAttachment(unit, WSAttachmentKeys.DEPLOYMENT_TYPE_KEY);\n        dep.setType(deploymentType);\n\n        return dep;\n    }","id":54704,"modified_method":"/**\n     * Creates new Web Service deployment.\n     *\n     * @param unit deployment unit\n     * @return archive deployment\n     */\n    private ArchiveDeployment newDeployment(final DeploymentUnit unit) throws DeploymentUnitProcessingException {\n        this.log.debug(\"Creating new WS deployment model for: \" + unit);\n        final ResourceRoot deploymentRoot = unit.getAttachment(Attachments.DEPLOYMENT_ROOT);\n        final VirtualFile root = deploymentRoot != null ? deploymentRoot.getRoot() : null;\n        final ClassLoader classLoader;\n        final Module module = unit.getAttachment(Attachments.MODULE);\n        if (module == null) {\n            classLoader = unit.getAttachment(WSAttachmentKeys.CLASSLOADER_KEY);\n            if (classLoader == null) {\n                throw new DeploymentUnitProcessingException(\"failed to resolve module / classloader for deployment \" + unit);\n            }\n        } else {\n            classLoader = module.getClassLoader();\n        }\n        final ArchiveDeployment dep = this.newDeployment(unit.getName(), classLoader);\n\n        if (root != null) {\n            try {\n                List<VirtualFile> virtualFiles = root.getChildrenRecursively(WS_FILE_FILTER);\n                final Set<UnifiedVirtualFile> uVirtualFiles = new HashSet<UnifiedVirtualFile>();\n                for (VirtualFile vf : virtualFiles) {\n                    // Adding the roots of the virtual files.\n                    uVirtualFiles.add(new VirtualFileAdaptor(vf));\n                }\n                dep.setMetadataFiles(new LinkedList<UnifiedVirtualFile>(uVirtualFiles));\n            } catch (IOException e) {\n                this.log.warn(\"Could not load metadata files for deployment root \" + root, e);\n            }\n        }\n\n        if (unit.getParent() != null) {\n            final String parentDeploymentName = unit.getParent().getName();\n            final Module parentModule = unit.getParent().getAttachment(Attachments.MODULE);\n            if (parentModule == null) {\n                throw new DeploymentUnitProcessingException(\"failed to resolve module for parent of deployment \"\n                        + unit);\n            }\n            final ClassLoader parentClassLoader = parentModule.getClassLoader();\n\n            this.log.debug(\"Creating new WS deployment model for parent: \" + unit.getParent());\n            final ArchiveDeployment parentDep = this.newDeployment(parentDeploymentName, parentClassLoader);\n            dep.setParent(parentDep);\n        }\n\n        if (root != null) {\n            dep.setRootFile(new VirtualFileAdaptor(root));\n        } else {\n            dep.setRootFile(new ResourceLoaderAdapter(classLoader));\n        }\n        dep.setRuntimeClassLoader(classLoader);\n        final DeploymentType deploymentType = ASHelper.getRequiredAttachment(unit, WSAttachmentKeys.DEPLOYMENT_TYPE_KEY);\n        dep.setType(deploymentType);\n\n        return dep;\n    }","commit_id":"76d54f6938da2bf55d31c96733a4793de2a98b2f","url":"https://github.com/wildfly/wildfly"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    @Override\n    public void internalDeploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitProcessingException {\n        final DeploymentUnit unit = phaseContext.getDeploymentUnit();\n        if (ASHelper.isWebServiceDeployment(unit)) {\n            if (aspect == null) {\n                try {\n                    if (clazz == null) {\n                        clazz = (Class<? extends DeploymentAspect>) SecurityActions.getContextClassLoader().loadClass(aspectClass);\n                    }\n                    aspect = clazz.newInstance();\n                } catch (Exception e) {\n                    throw new DeploymentUnitProcessingException(e);\n                }\n            }\n            log.debug(this.aspect + \" start: \" + unit.getName());\n            final Deployment dep = ASHelper.getRequiredAttachment(unit, WSAttachmentKeys.DEPLOYMENT_KEY);\n            dep.addAttachment(DeploymentPhaseContext.class, phaseContext);\n            aspect.start(dep);\n            dep.removeAttachment(DeploymentPhaseContext.class);\n        }\n    }","id":54705,"modified_method":"@SuppressWarnings(\"unchecked\")\n    @Override\n    public void internalDeploy(DeploymentPhaseContext phaseContext) throws DeploymentUnitProcessingException {\n        final DeploymentUnit unit = phaseContext.getDeploymentUnit();\n        if (ASHelper.isWebServiceDeployment(unit)) {\n            if (aspect == null) {\n                try {\n                    if (clazz == null) {\n                        clazz = (Class<? extends DeploymentAspect>) SecurityActions.getContextClassLoader().loadClass(aspectClass);\n                    }\n                    aspect = clazz.newInstance();\n                } catch (Exception e) {\n                    throw new DeploymentUnitProcessingException(e);\n                }\n            }\n            log.debug(this.aspect + \" start: \" + unit.getName());\n            final Deployment dep = ASHelper.getRequiredAttachment(unit, WSAttachmentKeys.DEPLOYMENT_KEY);\n            dep.addAttachment(ServiceTarget.class, phaseContext.getServiceTarget());\n            aspect.start(dep);\n            dep.removeAttachment(ServiceTarget.class);\n        }\n    }","commit_id":"76d54f6938da2bf55d31c96733a4793de2a98b2f","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void start(Deployment dep) {\n        super.start(dep);\n        final DeploymentPhaseContext context = dep.getAttachment(DeploymentPhaseContext.class);\n        final ServiceTarget target = context.getServiceTarget();\n        for (Endpoint ep : dep.getService().getEndpoints()) {\n            EndpointService.install(target, ep);\n        }\n    }","id":54706,"modified_method":"@Override\n    public void start(Deployment dep) {\n        super.start(dep);\n        final ServiceTarget target = dep.getAttachment(ServiceTarget.class);\n        if (target != null) {\n            for (Endpoint ep : dep.getService().getEndpoints()) {\n                EndpointService.install(target, ep);\n            }\n        }\n    }","commit_id":"76d54f6938da2bf55d31c96733a4793de2a98b2f","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void start(final Deployment dep) {\n        final DeploymentUnit unit = dep.getAttachment(DeploymentUnit.class);\n        for (final Endpoint endpoint : dep.getService().getEndpoints()) {\n\n            ModelNode op = null;\n            try {\n                op = unit.createDeploymentSubModel(WSExtension.SUBSYSTEM_NAME,\n                    PathElement.pathElement(ENDPOINT, URLEncoder.encode(getId(endpoint), \"UTF-8\")));\n            } catch (final UnsupportedEncodingException e) {\n                throw new RuntimeException(e);\n            }\n\n            op.get(ENDPOINT_NAME).set(getName(endpoint));\n            op.get(ENDPOINT_CONTEXT).set(getContext(endpoint));\n            op.get(ENDPOINT_CLASS).set(endpoint.getTargetBeanName());\n            op.get(ENDPOINT_TYPE).set(getType(endpoint));\n            op.get(ENDPOINT_WSDL).set(endpoint.getAddress() + \"?wsdl\");\n        }\n    }","id":54707,"modified_method":"@Override\n    public void start(final Deployment dep) {\n        final DeploymentUnit unit = dep.getAttachment(DeploymentUnit.class);\n        if (!(unit instanceof WSEndpointDeploymentUnit)) {\n            for (final Endpoint endpoint : dep.getService().getEndpoints()) {\n\n                ModelNode op = null;\n                try {\n                    op = unit.createDeploymentSubModel(WSExtension.SUBSYSTEM_NAME,\n                        PathElement.pathElement(ENDPOINT, URLEncoder.encode(getId(endpoint), \"UTF-8\")));\n                } catch (final UnsupportedEncodingException e) {\n                    throw new RuntimeException(e);\n                }\n\n                op.get(ENDPOINT_NAME).set(getName(endpoint));\n                op.get(ENDPOINT_CONTEXT).set(getContext(endpoint));\n                op.get(ENDPOINT_CLASS).set(endpoint.getTargetBeanName());\n                op.get(ENDPOINT_TYPE).set(getType(endpoint));\n                op.get(ENDPOINT_WSDL).set(endpoint.getAddress() + \"?wsdl\");\n            }\n        }\n    }","commit_id":"76d54f6938da2bf55d31c96733a4793de2a98b2f","url":"https://github.com/wildfly/wildfly"},{"original_method":"private static void addDeploymentProcessors(final DeploymentProcessorTarget processorTarget, final Phase phase, final int priority) {\n        int index = 1;\n        for (final DeploymentAspect da : getSortedDeploymentAspects()) {\n            LOGGER.tracef(\"Installing aspect %s\", da.getClass().getName());\n            processorTarget.addDeploymentProcessor(phase, priority + index++, new AspectDeploymentProcessor(da));\n        }\n    }","id":54708,"modified_method":"private static void addDeploymentProcessors(final DeploymentProcessorTarget processorTarget, final Phase phase, final int priority) {\n        int index = 1;\n        List<DeploymentAspect> aspects = DeploymentAspectsProvider.getSortedDeploymentAspects();\n        for (final DeploymentAspect da : aspects) {\n            LOGGER.tracef(\"Installing aspect %s\", da.getClass().getName());\n            processorTarget.addDeploymentProcessor(phase, priority + index++, new AspectDeploymentProcessor(da));\n        }\n    }","commit_id":"76d54f6938da2bf55d31c96733a4793de2a98b2f","url":"https://github.com/wildfly/wildfly"},{"original_method":"protected void performBoottime(OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers) {\n\n        context.addStep(new AbstractDeploymentChainStep() {\n            protected void execute(DeploymentProcessorTarget processorTarget) {\n                // add the DUP for dealing with WS deployments\n                WSDeploymentActivator.activate(processorTarget);\n                processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_WEB_SERVICE_INJECTION_ANNOTATION, new WebServiceRefAnnotationParsingProcessor());\n            }\n        }, OperationContext.Stage.RUNTIME);\n\n        log.info(\"Activating WebServices Extension\");\n        ModuleClassLoaderProvider.register();\n        WSServices.saveContainerRegistry(context.getServiceRegistry(false));\n\n        ServiceTarget serviceTarget = context.getServiceTarget();\n\n        ServerConfigImpl serverConfig = createServerConfig(operation);\n        newControllers.add(ServerConfigService.install(serviceTarget, serverConfig, verificationHandler));\n        newControllers.add(EndpointRegistryService.install(serviceTarget, verificationHandler));\n    }","id":54709,"modified_method":"protected void performBoottime(OperationContext context, ModelNode operation, ModelNode model, ServiceVerificationHandler verificationHandler, List<ServiceController<?>> newControllers) {\n\n        log.info(\"Activating WebServices Extension\");\n        ModuleClassLoaderProvider.register();\n\n        context.addStep(new AbstractDeploymentChainStep() {\n            protected void execute(DeploymentProcessorTarget processorTarget) {\n                // add the DUP for dealing with WS deployments\n                WSDeploymentActivator.activate(processorTarget);\n                processorTarget.addDeploymentProcessor(Phase.PARSE, Phase.PARSE_WEB_SERVICE_INJECTION_ANNOTATION, new WebServiceRefAnnotationParsingProcessor());\n            }\n        }, OperationContext.Stage.RUNTIME);\n\n        WSServices.saveContainerRegistry(context.getServiceRegistry(false));\n        ServiceTarget serviceTarget = context.getServiceTarget();\n        ServerConfigImpl serverConfig = createServerConfig(operation);\n        newControllers.add(ServerConfigService.install(serviceTarget, serverConfig, verificationHandler));\n        newControllers.add(EndpointRegistryService.install(serviceTarget, verificationHandler));\n    }","commit_id":"76d54f6938da2bf55d31c96733a4793de2a98b2f","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void scanDirectAgentToLoad() {\r\n        if (s_logger.isTraceEnabled()) {\r\n            s_logger.trace(\"Begin scanning directly connected hosts\");\r\n        }\r\n\r\n        // for agents that are self-managed, threshold to be considered as disconnected is 3 ping intervals\r\n        long cutSeconds = (System.currentTimeMillis() >> 10) - (_pingInterval * 3);\r\n        List<HostVO> hosts = _hostDao.findDirectAgentToLoad(cutSeconds, _loadSize);\r\n        if (hosts != null && hosts.size() == _loadSize) {\r\n            Long clusterId = hosts.get((int) (_loadSize - 1)).getClusterId();\r\n            if (clusterId != null) {\r\n                for (int i = (int) (_loadSize - 1); i > 0; i--) {\r\n                    if (hosts.get(i).getClusterId() == clusterId) {\r\n                        hosts.remove(i);\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hosts != null && hosts.size() > 0) {\r\n            s_logger.debug(\"Found \" + hosts.size() + \" unmanaged direct hosts, processing connect for them...\");\r\n            for (HostVO host : hosts) {\r\n                try {\r\n                    AgentAttache agentattache = findAttache(host.getId());\r\n                    if (agentattache != null) {\r\n                        // already loaded, skip\r\n                        if (agentattache.forForward()) {\r\n                            if (s_logger.isInfoEnabled()) {\r\n                                s_logger.info(host + \" is detected down, but we have a forward attache running, disconnect this one before launching the host\");\r\n                            }\r\n                            removeAgent(agentattache, Status.Disconnected);\r\n                        } else {\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    if (s_logger.isDebugEnabled()) {\r\n                        s_logger.debug(\"Loading directly connected host \" + host.getId() + \"(\" + host.getName() + \")\");\r\n                    }\r\n                    loadDirectlyConnectedHost(host, false);\r\n                } catch (Throwable e) {\r\n                    s_logger.debug(\" can not load directly connected host \" + host.getId() + \"(\" + host.getName() + \") due to \" + e.toString());\r\n                }\r\n            }\r\n        }\r\n\r\n        if (s_logger.isTraceEnabled()) {\r\n            s_logger.trace(\"End scanning directly connected hosts\");\r\n        }\r\n    }","id":54710,"modified_method":"private void scanDirectAgentToLoad() {\r\n        if (s_logger.isTraceEnabled()) {\r\n            s_logger.trace(\"Begin scanning directly connected hosts\");\r\n        }\r\n\r\n        // for agents that are self-managed, threshold to be considered as disconnected is 3 ping intervals\r\n        long cutSeconds = (System.currentTimeMillis() >> 10) - (_pingInterval * 3);\r\n        List<HostVO> hosts = _hostDao.findDirectAgentToLoad(cutSeconds, _loadSize);\r\n        if (hosts != null && hosts.size() == _loadSize) {\r\n            //if list contains more than one cluster, exclude the last cluster from the list\r\n            if (hosts.size() > 1 && hosts.get(0).getClusterId().longValue() != hosts.get(hosts.size()-1).getClusterId().longValue()) {\r\n                Long clusterId = hosts.get((int) (_loadSize - 1)).getClusterId();\r\n                if (clusterId != null) {\r\n                    for (int i = (int) (_loadSize - 1); i > 0; i--) {\r\n                        if (hosts.get(i).getClusterId().longValue() == clusterId.longValue()) {\r\n                            hosts.remove(i);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hosts != null && hosts.size() > 0) {\r\n            s_logger.debug(\"Found \" + hosts.size() + \" unmanaged direct hosts, processing connect for them...\");\r\n            for (HostVO host : hosts) {\r\n                try {\r\n                    AgentAttache agentattache = findAttache(host.getId());\r\n                    if (agentattache != null) {\r\n                        // already loaded, skip\r\n                        if (agentattache.forForward()) {\r\n                            if (s_logger.isInfoEnabled()) {\r\n                                s_logger.info(host + \" is detected down, but we have a forward attache running, disconnect this one before launching the host\");\r\n                            }\r\n                            removeAgent(agentattache, Status.Disconnected);\r\n                        } else {\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    if (s_logger.isDebugEnabled()) {\r\n                        s_logger.debug(\"Loading directly connected host \" + host.getId() + \"(\" + host.getName() + \")\");\r\n                    }\r\n                    loadDirectlyConnectedHost(host, false);\r\n                } catch (Throwable e) {\r\n                    s_logger.warn(\" can not load directly connected host \" + host.getId() + \"(\" + host.getName() + \") due to \",e);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (s_logger.isTraceEnabled()) {\r\n            s_logger.trace(\"End scanning directly connected hosts\");\r\n        }\r\n    }","commit_id":"e10020e710c8f04eecea26c8f1b66757f3a3048b","url":"https://github.com/apache/cloudstack"},{"original_method":"private void scanDirectAgentToLoad() {\r\n        if (s_logger.isTraceEnabled()) {\r\n            s_logger.trace(\"Begin scanning directly connected hosts\");\r\n        }\r\n\r\n        // for agents that are self-managed, threshold to be considered as disconnected is 3 ping intervals\r\n        long cutSeconds = (System.currentTimeMillis() >> 10) - (_pingInterval * 3);\r\n        List<HostVO> hosts = _hostDao.findDirectAgentToLoad(cutSeconds, _loadSize);\r\n        if (hosts != null && hosts.size() == _loadSize) {\r\n            Long clusterId = hosts.get((int) (_loadSize - 1)).getClusterId();\r\n            if (clusterId != null) {\r\n                for (int i = (int) (_loadSize - 1); i > 0; i--) {\r\n                    if (hosts.get(i).getClusterId() == clusterId) {\r\n                        hosts.remove(i);\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hosts != null && hosts.size() > 0) {\r\n            s_logger.debug(\"Found \" + hosts.size() + \" unmanaged direct hosts, processing connect for them...\");\r\n            for (HostVO host : hosts) {\r\n                try {\r\n                    AgentAttache agentattache = findAttache(host.getId());\r\n                    if (agentattache != null) {\r\n                        // already loaded, skip\r\n                        if (agentattache.forForward()) {\r\n                            if (s_logger.isInfoEnabled()) {\r\n                                s_logger.info(host + \" is detected down, but we have a forward attache running, disconnect this one before launching the host\");\r\n                            }\r\n                            removeAgent(agentattache, Status.Disconnected);\r\n                        } else {\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    if (s_logger.isDebugEnabled()) {\r\n                        s_logger.debug(\"Loading directly connected host \" + host.getId() + \"(\" + host.getName() + \")\");\r\n                    }\r\n                    loadDirectlyConnectedHost(host, false);\r\n                } catch (Throwable e) {\r\n                    s_logger.debug(\" can not load directly connected host \" + host.getId() + \"(\" + host.getName() + \") due to \" + e.toString());\r\n                }\r\n            }\r\n        }\r\n\r\n        if (s_logger.isTraceEnabled()) {\r\n            s_logger.trace(\"End scanning directly connected hosts\");\r\n        }\r\n    }","id":54711,"modified_method":"private void scanDirectAgentToLoad() {\r\n        if (s_logger.isTraceEnabled()) {\r\n            s_logger.trace(\"Begin scanning directly connected hosts\");\r\n        }\r\n\r\n        // for agents that are self-managed, threshold to be considered as disconnected is 3 ping intervals\r\n        long cutSeconds = (System.currentTimeMillis() >> 10) - (_pingInterval * 3);\r\n        List<HostVO> hosts = _hostDao.findDirectAgentToLoad(cutSeconds, _loadSize);\r\n        if (hosts != null && hosts.size() == _loadSize) {\r\n            //if list contains more than one cluster, exclude the last cluster from the list\r\n            if (hosts.size() > 1 && hosts.get(0).getClusterId().longValue() != hosts.get(hosts.size()-1).getClusterId().longValue()) {\r\n                Long clusterId = hosts.get((int) (_loadSize - 1)).getClusterId();\r\n                if (clusterId != null) {\r\n                    for (int i = (int) (_loadSize - 1); i > 0; i--) {\r\n                        if (hosts.get(i).getClusterId().longValue() == clusterId.longValue()) {\r\n                            hosts.remove(i);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hosts != null && hosts.size() > 0) {\r\n            s_logger.debug(\"Found \" + hosts.size() + \" unmanaged direct hosts, processing connect for them...\");\r\n            for (HostVO host : hosts) {\r\n                try {\r\n                    AgentAttache agentattache = findAttache(host.getId());\r\n                    if (agentattache != null) {\r\n                        // already loaded, skip\r\n                        if (agentattache.forForward()) {\r\n                            if (s_logger.isInfoEnabled()) {\r\n                                s_logger.info(host + \" is detected down, but we have a forward attache running, disconnect this one before launching the host\");\r\n                            }\r\n                            removeAgent(agentattache, Status.Disconnected);\r\n                        } else {\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    if (s_logger.isDebugEnabled()) {\r\n                        s_logger.debug(\"Loading directly connected host \" + host.getId() + \"(\" + host.getName() + \")\");\r\n                    }\r\n                    loadDirectlyConnectedHost(host, false);\r\n                } catch (Throwable e) {\r\n                    s_logger.warn(\" can not load directly connected host \" + host.getId() + \"(\" + host.getName() + \") due to \",e);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (s_logger.isTraceEnabled()) {\r\n            s_logger.trace(\"End scanning directly connected hosts\");\r\n        }\r\n    }","commit_id":"5134b44ff5ea3c3b542371870c9fdb76120f7b70","url":"https://github.com/apache/cloudstack"},{"original_method":"/** Return a table containing version information. */\n  static String getVersionTable(FSNamesystem fsn) {\n    return \"<div class='dfstable'><table>\"\n        + \"\\n  <tr><td class='col1'>Started:<\/td><td>\" + fsn.getStartTime()\n        + \"<\/td><\/tr>\\n\" + \"\\n  <tr><td class='col1'>Version:<\/td><td>\"\n        + VersionInfo.getVersion() + \", \" + VersionInfo.getRevision()\n        + \"<\/td><\/tr>\\n\" + \"\\n  <tr><td class='col1'>Compiled:<\/td><td>\" + VersionInfo.getDate()\n        + \" by \" + VersionInfo.getUser() + \" from \" + VersionInfo.getBranch()\n        + \"<\/td><\/tr>\\n  <tr><td class='col1'>Cluster ID:<\/td><td>\" + fsn.getClusterId()\n        + \"<\/td><\/tr>\\n  <tr><td class='col1'>Block Pool ID:<\/td><td>\" + fsn.getBlockPoolId()\n        + \"<\/td><\/tr>\\n<\/table><\/div>\";\n  }","id":54712,"modified_method":"/** Return a table containing version information. */\n  static String getVersionTable(FSNamesystem fsn) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"<div class='dfstable'><table>\");\n    if (fsn != null) {\n      sb.append(\"\\n  <tr><td class='col1'>Started:<\/td><td>\" + fsn.getStartTime());\n    }\n    sb.append(\"<\/td><\/tr>\\n\" + \"\\n  <tr><td class='col1'>Version:<\/td><td>\");\n    sb.append(VersionInfo.getVersion() + \", \" + VersionInfo.getRevision());\n    sb.append(\"<\/td><\/tr>\\n\" + \"\\n  <tr><td class='col1'>Compiled:<\/td><td>\" + VersionInfo.getDate());\n    sb.append(\" by \" + VersionInfo.getUser() + \" from \" + VersionInfo.getBranch());\n    if (fsn != null) {\n      sb.append(\"<\/td><\/tr>\\n  <tr><td class='col1'>Cluster ID:<\/td><td>\" + fsn.getClusterId());\n      sb.append(\"<\/td><\/tr>\\n  <tr><td class='col1'>Block Pool ID:<\/td><td>\" + fsn.getBlockPoolId());\n    }\n    sb.append(\"<\/td><\/tr>\\n<\/table><\/div>\");\n    return sb.toString();\n  }","commit_id":"2409882a47327f245ecd920c12e4de98fbf6a10d","url":"https://github.com/apache/hadoop"},{"original_method":"void generateConfReport(JspWriter out, NameNode nn,\n        HttpServletRequest request) throws IOException {\n      FSNamesystem fsn = nn.getNamesystem();\n      FSImage fsImage = fsn.getFSImage();\n      List<Storage.StorageDirectory> removedStorageDirs \n        = fsImage.getStorage().getRemovedStorageDirs();\n\n      // FS Image storage configuration\n      out.print(\"<h3> \" + nn.getRole() + \" Storage: <\/h3>\");\n      out.print(\"<div class=\\\"dfstable\\\"> <table class=\\\"storage\\\" title=\\\"NameNode Storage\\\">\\n\"\n              + \"<thead><tr><td><b>Storage Directory<\/b><\/td><td><b>Type<\/b><\/td><td><b>State<\/b><\/td><\/tr><\/thead>\");\n\n      StorageDirectory st = null;\n      for (Iterator<StorageDirectory> it\n             = fsImage.getStorage().dirIterator(); it.hasNext();) {\n        st = it.next();\n        String dir = \"\" + st.getRoot();\n        String type = \"\" + st.getStorageDirType();\n        out.print(\"<tr><td>\" + dir + \"<\/td><td>\" + type\n            + \"<\/td><td>Active<\/td><\/tr>\");\n      }\n\n      long storageDirsSize = removedStorageDirs.size();\n      for (int i = 0; i < storageDirsSize; i++) {\n        st = removedStorageDirs.get(i);\n        String dir = \"\" + st.getRoot();\n        String type = \"\" + st.getStorageDirType();\n        out.print(\"<tr><td>\" + dir + \"<\/td><td>\" + type\n            + \"<\/td><td><span class=\\\"failed\\\">Failed<\/span><\/td><\/tr>\");\n      }\n\n      out.print(\"<\/table><\/div>\\n\");\n    }","id":54713,"modified_method":"void generateConfReport(JspWriter out, NameNode nn,\n        HttpServletRequest request) throws IOException {\n      FSNamesystem fsn = nn.getNamesystem();\n      if (fsn == null) {\n        return;\n      }\n      FSImage fsImage = fsn.getFSImage();\n      List<Storage.StorageDirectory> removedStorageDirs \n        = fsImage.getStorage().getRemovedStorageDirs();\n\n      // FS Image storage configuration\n      out.print(\"<h3> \" + nn.getRole() + \" Storage: <\/h3>\");\n      out.print(\"<div class=\\\"dfstable\\\"> <table class=\\\"storage\\\" title=\\\"NameNode Storage\\\">\\n\"\n              + \"<thead><tr><td><b>Storage Directory<\/b><\/td><td><b>Type<\/b><\/td><td><b>State<\/b><\/td><\/tr><\/thead>\");\n\n      StorageDirectory st = null;\n      for (Iterator<StorageDirectory> it\n             = fsImage.getStorage().dirIterator(); it.hasNext();) {\n        st = it.next();\n        String dir = \"\" + st.getRoot();\n        String type = \"\" + st.getStorageDirType();\n        out.print(\"<tr><td>\" + dir + \"<\/td><td>\" + type\n            + \"<\/td><td>Active<\/td><\/tr>\");\n      }\n\n      long storageDirsSize = removedStorageDirs.size();\n      for (int i = 0; i < storageDirsSize; i++) {\n        st = removedStorageDirs.get(i);\n        String dir = \"\" + st.getRoot();\n        String type = \"\" + st.getStorageDirType();\n        out.print(\"<tr><td>\" + dir + \"<\/td><td>\" + type\n            + \"<\/td><td><span class=\\\"failed\\\">Failed<\/span><\/td><\/tr>\");\n      }\n\n      out.print(\"<\/table><\/div>\\n\");\n    }","commit_id":"2409882a47327f245ecd920c12e4de98fbf6a10d","url":"https://github.com/apache/hadoop"},{"original_method":"static String getSafeModeText(FSNamesystem fsn) {\n    if (!fsn.isInSafeMode())\n      return \"\";\n    return \"Safe mode is ON. <em>\" + fsn.getSafeModeTip() + \"<\/em><br>\";\n  }","id":54714,"modified_method":"static String getSafeModeText(FSNamesystem fsn) {\n    if (fsn == null || !fsn.isInSafeMode())\n      return \"\";\n    return \"Safe mode is ON. <em>\" + fsn.getSafeModeTip() + \"<\/em><br>\";\n  }","commit_id":"2409882a47327f245ecd920c12e4de98fbf6a10d","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Generate warning text if there are corrupt files.\n   * @return a warning if files are corrupt, otherwise return an empty string.\n   */\n  static String getCorruptFilesWarning(FSNamesystem fsn) {\n    long missingBlocks = fsn.getMissingBlocksCount();\n    if (missingBlocks > 0) {\n      StringBuilder result = new StringBuilder();\n\n      // Warning class is typically displayed in RED.\n      result.append(\"<div>\"); // opening tag of outer <div>.\n      result.append(\"<a class=\\\"warning\\\" href=\\\"/corrupt_files.jsp\\\" title=\\\"List corrupt files\\\">\\n\");\n      result.append(\"<b>WARNING : There are \" + missingBlocks\n          + \" missing blocks. Please check the logs or run fsck in order to identify the missing blocks.<\/b>\");\n      result.append(\"<\/a>\");\n\n      result.append(\"<div class=\\\"small\\\">See the Hadoop FAQ for common causes and potential solutions.<\/div>\");\n      result.append(\"<\/div>\\n\"); // closing tag of outer <div>.\n\n      return result.toString();\n    }\n    return \"\";\n  }","id":54715,"modified_method":"/**\n   * Generate warning text if there are corrupt files.\n   * @return a warning if files are corrupt, otherwise return an empty string.\n   */\n  static String getCorruptFilesWarning(FSNamesystem fsn) {\n    if (fsn == null) {\n      return \"\";\n    }\n\n    long missingBlocks = fsn.getMissingBlocksCount();\n    if (missingBlocks > 0) {\n      StringBuilder result = new StringBuilder();\n\n      // Warning class is typically displayed in RED.\n      result.append(\"<div>\"); // opening tag of outer <div>.\n      result.append(\"<a class=\\\"warning\\\" href=\\\"/corrupt_files.jsp\\\" title=\\\"List corrupt files\\\">\\n\");\n      result.append(\"<b>WARNING : There are \" + missingBlocks\n          + \" missing blocks. Please check the logs or run fsck in order to identify the missing blocks.<\/b>\");\n      result.append(\"<\/a>\");\n\n      result.append(\"<div class=\\\"small\\\">See the Hadoop FAQ for common causes and potential solutions.<\/div>\");\n      result.append(\"<\/div>\\n\"); // closing tag of outer <div>.\n\n      return result.toString();\n    }\n    return \"\";\n  }","commit_id":"2409882a47327f245ecd920c12e4de98fbf6a10d","url":"https://github.com/apache/hadoop"},{"original_method":"void generateHealthReport(JspWriter out, NameNode nn,\n        HttpServletRequest request) throws IOException {\n      FSNamesystem fsn = nn.getNamesystem();\n      final DatanodeManager dm = fsn.getBlockManager().getDatanodeManager();\n      final List<DatanodeDescriptor> live = new ArrayList<DatanodeDescriptor>();\n      final List<DatanodeDescriptor> dead = new ArrayList<DatanodeDescriptor>();\n      dm.fetchDatanodes(live, dead, true);\n\n      int liveDecommissioned = 0;\n      for (DatanodeDescriptor d : live) {\n        liveDecommissioned += d.isDecommissioned() ? 1 : 0;\n      }\n\n      int deadDecommissioned = 0;\n      for (DatanodeDescriptor d : dead) {\n        deadDecommissioned += d.isDecommissioned() ? 1 : 0;\n      }\n      \n      final List<DatanodeDescriptor> decommissioning = dm.getDecommissioningNodes();\n\n      sorterField = request.getParameter(\"sorter/field\");\n      sorterOrder = request.getParameter(\"sorter/order\");\n      if (sorterField == null)\n        sorterField = \"name\";\n      if (sorterOrder == null)\n        sorterOrder = \"ASC\";\n\n      // Find out common suffix. Should this be before or after the sort?\n      String port_suffix = null;\n      if (live.size() > 0) {\n        String name = live.get(0).getXferAddr();\n        int idx = name.indexOf(':');\n        if (idx > 0) {\n          port_suffix = name.substring(idx);\n        }\n\n        for (int i = 1; port_suffix != null && i < live.size(); i++) {\n          if (live.get(i).getXferAddr().endsWith(port_suffix) == false) {\n            port_suffix = null;\n            break;\n          }\n        }\n      }\n\n      counterReset();\n      long[] fsnStats = fsn.getStats();\n      long total = fsnStats[0];\n      long remaining = fsnStats[2];\n      long used = fsnStats[1];\n      long nonDFS = total - remaining - used;\n      nonDFS = nonDFS < 0 ? 0 : nonDFS;\n      float percentUsed = DFSUtil.getPercentUsed(used, total);\n      float percentRemaining = DFSUtil.getPercentRemaining(remaining, total);\n      float median = 0;\n      float max = 0;\n      float min = 0;\n      float dev = 0;\n      \n      if (live.size() > 0) {\n        float totalDfsUsed = 0;\n        float[] usages = new float[live.size()];\n        int i = 0;\n        for (DatanodeDescriptor dn : live) {\n          usages[i++] = dn.getDfsUsedPercent();\n          totalDfsUsed += dn.getDfsUsedPercent();\n        }\n        totalDfsUsed /= live.size();\n        Arrays.sort(usages);\n        median = usages[usages.length/2];\n        max = usages[usages.length - 1];\n        min = usages[0];\n        \n        for (i = 0; i < usages.length; i++) {\n          dev += (usages[i] - totalDfsUsed) * (usages[i] - totalDfsUsed);\n        }\n        dev = (float) Math.sqrt(dev/usages.length);\n      }\n\n      long bpUsed = fsnStats[6];\n      float percentBpUsed = DFSUtil.getPercentUsed(bpUsed, total);\n\n      // don't show under-replicated/missing blocks or corrupt files for SBN\n      // since the standby namenode doesn't compute replication queues \n      String underReplicatedBlocks = \"\";\n      if (nn.getServiceState() == HAServiceState.ACTIVE) {\n    \t  underReplicatedBlocks = rowTxt() \n              + colTxt(\"Excludes missing blocks.\")\n              + \"Number of Under-Replicated Blocks\" + colTxt() + \":\" + colTxt()\n              + fsn.getBlockManager().getUnderReplicatedNotMissingBlocks(); \n      }\n      out.print(\"<div class=\\\"dfstable\\\"> <table>\\n\" + rowTxt() + colTxt()\n          + \"Configured Capacity\" + colTxt() + \":\" + colTxt()\n          + StringUtils.byteDesc(total) + rowTxt() + colTxt() + \"DFS Used\"\n          + colTxt() + \":\" + colTxt() + StringUtils.byteDesc(used) + rowTxt()\n          + colTxt() + \"Non DFS Used\" + colTxt() + \":\" + colTxt()\n          + StringUtils.byteDesc(nonDFS) + rowTxt() + colTxt()\n          + \"DFS Remaining\" + colTxt() + \":\" + colTxt()\n          + StringUtils.byteDesc(remaining) + rowTxt() + colTxt() + \"DFS Used%\"\n          + colTxt() + \":\" + colTxt()\n          + percent2String(percentUsed) + rowTxt()\n          + colTxt() + \"DFS Remaining%\" + colTxt() + \":\" + colTxt()\n          + percent2String(percentRemaining)\n          + rowTxt() + colTxt() + \"Block Pool Used\" + colTxt() + \":\" + colTxt()\n          + StringUtils.byteDesc(bpUsed) + rowTxt()\n          + colTxt() + \"Block Pool Used%\"+ colTxt() + \":\" + colTxt()\n          + percent2String(percentBpUsed) \n          + rowTxt() + colTxt() + \"DataNodes usages\" + colTxt() + \":\" + colTxt()\n          + \"Min %\" + colTxt() + \"Median %\" + colTxt() + \"Max %\" + colTxt()\n          + \"stdev %\" + rowTxt() + colTxt() + colTxt() + colTxt()\n          + percent2String(min)\n          + colTxt() + percent2String(median)\n          + colTxt() + percent2String(max)\n          + colTxt() + percent2String(dev)\n          + rowTxt() + colTxt()\n          + \"<a href=\\\"dfsnodelist.jsp?whatNodes=LIVE\\\">Live Nodes<\/a> \"\n          + colTxt() + \":\" + colTxt() + live.size()\n          + \" (Decommissioned: \" + liveDecommissioned + \")\"\n          + rowTxt() + colTxt()\n          + \"<a href=\\\"dfsnodelist.jsp?whatNodes=DEAD\\\">Dead Nodes<\/a> \"\n          + colTxt() + \":\" + colTxt() + dead.size() \n          + \" (Decommissioned: \" + deadDecommissioned + \")\"\n          + rowTxt() + colTxt()\n          + \"<a href=\\\"dfsnodelist.jsp?whatNodes=DECOMMISSIONING\\\">\"\n          + \"Decommissioning Nodes<\/a> \"\n          + colTxt() + \":\" + colTxt() + decommissioning.size()\n          + underReplicatedBlocks\n          + \"<\/table><\/div><br>\\n\");\n\n      if (live.isEmpty() && dead.isEmpty()) {\n        out.print(\"There are no datanodes in the cluster.\");\n      }\n    }","id":54716,"modified_method":"void generateHealthReport(JspWriter out, NameNode nn,\n        HttpServletRequest request) throws IOException {\n      FSNamesystem fsn = nn.getNamesystem();\n      if (fsn == null) {\n        return;\n      }\n      final DatanodeManager dm = fsn.getBlockManager().getDatanodeManager();\n      final List<DatanodeDescriptor> live = new ArrayList<DatanodeDescriptor>();\n      final List<DatanodeDescriptor> dead = new ArrayList<DatanodeDescriptor>();\n      dm.fetchDatanodes(live, dead, true);\n\n      int liveDecommissioned = 0;\n      for (DatanodeDescriptor d : live) {\n        liveDecommissioned += d.isDecommissioned() ? 1 : 0;\n      }\n\n      int deadDecommissioned = 0;\n      for (DatanodeDescriptor d : dead) {\n        deadDecommissioned += d.isDecommissioned() ? 1 : 0;\n      }\n      \n      final List<DatanodeDescriptor> decommissioning = dm.getDecommissioningNodes();\n\n      sorterField = request.getParameter(\"sorter/field\");\n      sorterOrder = request.getParameter(\"sorter/order\");\n      if (sorterField == null)\n        sorterField = \"name\";\n      if (sorterOrder == null)\n        sorterOrder = \"ASC\";\n\n      // Find out common suffix. Should this be before or after the sort?\n      String port_suffix = null;\n      if (live.size() > 0) {\n        String name = live.get(0).getXferAddr();\n        int idx = name.indexOf(':');\n        if (idx > 0) {\n          port_suffix = name.substring(idx);\n        }\n\n        for (int i = 1; port_suffix != null && i < live.size(); i++) {\n          if (live.get(i).getXferAddr().endsWith(port_suffix) == false) {\n            port_suffix = null;\n            break;\n          }\n        }\n      }\n\n      counterReset();\n      long[] fsnStats = fsn.getStats();\n      long total = fsnStats[0];\n      long remaining = fsnStats[2];\n      long used = fsnStats[1];\n      long nonDFS = total - remaining - used;\n      nonDFS = nonDFS < 0 ? 0 : nonDFS;\n      float percentUsed = DFSUtil.getPercentUsed(used, total);\n      float percentRemaining = DFSUtil.getPercentRemaining(remaining, total);\n      float median = 0;\n      float max = 0;\n      float min = 0;\n      float dev = 0;\n      \n      if (live.size() > 0) {\n        float totalDfsUsed = 0;\n        float[] usages = new float[live.size()];\n        int i = 0;\n        for (DatanodeDescriptor dn : live) {\n          usages[i++] = dn.getDfsUsedPercent();\n          totalDfsUsed += dn.getDfsUsedPercent();\n        }\n        totalDfsUsed /= live.size();\n        Arrays.sort(usages);\n        median = usages[usages.length/2];\n        max = usages[usages.length - 1];\n        min = usages[0];\n        \n        for (i = 0; i < usages.length; i++) {\n          dev += (usages[i] - totalDfsUsed) * (usages[i] - totalDfsUsed);\n        }\n        dev = (float) Math.sqrt(dev/usages.length);\n      }\n\n      long bpUsed = fsnStats[6];\n      float percentBpUsed = DFSUtil.getPercentUsed(bpUsed, total);\n\n      // don't show under-replicated/missing blocks or corrupt files for SBN\n      // since the standby namenode doesn't compute replication queues \n      String underReplicatedBlocks = \"\";\n      if (nn.getServiceState() == HAServiceState.ACTIVE) {\n    \t  underReplicatedBlocks = rowTxt() \n              + colTxt(\"Excludes missing blocks.\")\n              + \"Number of Under-Replicated Blocks\" + colTxt() + \":\" + colTxt()\n              + fsn.getBlockManager().getUnderReplicatedNotMissingBlocks(); \n      }\n      out.print(\"<div class=\\\"dfstable\\\"> <table>\\n\" + rowTxt() + colTxt()\n          + \"Configured Capacity\" + colTxt() + \":\" + colTxt()\n          + StringUtils.byteDesc(total) + rowTxt() + colTxt() + \"DFS Used\"\n          + colTxt() + \":\" + colTxt() + StringUtils.byteDesc(used) + rowTxt()\n          + colTxt() + \"Non DFS Used\" + colTxt() + \":\" + colTxt()\n          + StringUtils.byteDesc(nonDFS) + rowTxt() + colTxt()\n          + \"DFS Remaining\" + colTxt() + \":\" + colTxt()\n          + StringUtils.byteDesc(remaining) + rowTxt() + colTxt() + \"DFS Used%\"\n          + colTxt() + \":\" + colTxt()\n          + percent2String(percentUsed) + rowTxt()\n          + colTxt() + \"DFS Remaining%\" + colTxt() + \":\" + colTxt()\n          + percent2String(percentRemaining)\n          + rowTxt() + colTxt() + \"Block Pool Used\" + colTxt() + \":\" + colTxt()\n          + StringUtils.byteDesc(bpUsed) + rowTxt()\n          + colTxt() + \"Block Pool Used%\"+ colTxt() + \":\" + colTxt()\n          + percent2String(percentBpUsed) \n          + rowTxt() + colTxt() + \"DataNodes usages\" + colTxt() + \":\" + colTxt()\n          + \"Min %\" + colTxt() + \"Median %\" + colTxt() + \"Max %\" + colTxt()\n          + \"stdev %\" + rowTxt() + colTxt() + colTxt() + colTxt()\n          + percent2String(min)\n          + colTxt() + percent2String(median)\n          + colTxt() + percent2String(max)\n          + colTxt() + percent2String(dev)\n          + rowTxt() + colTxt()\n          + \"<a href=\\\"dfsnodelist.jsp?whatNodes=LIVE\\\">Live Nodes<\/a> \"\n          + colTxt() + \":\" + colTxt() + live.size()\n          + \" (Decommissioned: \" + liveDecommissioned + \")\"\n          + rowTxt() + colTxt()\n          + \"<a href=\\\"dfsnodelist.jsp?whatNodes=DEAD\\\">Dead Nodes<\/a> \"\n          + colTxt() + \":\" + colTxt() + dead.size() \n          + \" (Decommissioned: \" + deadDecommissioned + \")\"\n          + rowTxt() + colTxt()\n          + \"<a href=\\\"dfsnodelist.jsp?whatNodes=DECOMMISSIONING\\\">\"\n          + \"Decommissioning Nodes<\/a> \"\n          + colTxt() + \":\" + colTxt() + decommissioning.size()\n          + underReplicatedBlocks\n          + \"<\/table><\/div><br>\\n\");\n\n      if (live.isEmpty() && dead.isEmpty()) {\n        out.print(\"There are no datanodes in the cluster.\");\n      }\n    }","commit_id":"2409882a47327f245ecd920c12e4de98fbf6a10d","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n     * Generate an HTML report containing the current status of the HDFS\n     * journals.\n     */\n    void generateJournalReport(JspWriter out, NameNode nn,\n        HttpServletRequest request) throws IOException {\n      FSEditLog log = nn.getFSImage().getEditLog();\n      Preconditions.checkArgument(log != null, \"no edit log set in %s\", nn);\n      \n      out.println(\"<h3> \" + nn.getRole() + \" Journal Status: <\/h3>\");\n\n      out.println(\"<b>Current transaction ID:<\/b> \" +\n          nn.getFSImage().getLastAppliedOrWrittenTxId() + \"<br/>\");\n      \n      \n      boolean openForWrite = log.isOpenForWrite();\n      \n      out.println(\"<div class=\\\"dfstable\\\">\");\n      out.println(\"<table class=\\\"storage\\\" title=\\\"NameNode Journals\\\">\\n\"\n              + \"<thead><tr><td><b>Journal Manager<\/b><\/td><td><b>State<\/b><\/td><\/tr><\/thead>\");\n      for (JournalAndStream jas : log.getJournals()) {\n        out.print(\"<tr>\");\n        out.print(\"<td>\");\n        \n        /**\n         * Insert a line break every 3 journal nodes to avoid a very wide line.\n         */  \n        JournalManager manager = jas.getManager();\n        if (null != manager) {\n          String[] managers = manager.toString().split(\",\");\n\n          for (int i = 0; i < managers.length; ++i) {\n            out.print(managers[i]);\n\n            if (i < managers.length - 1) {\n              out.print(\",\");\n            }\n\n            if ((i+1) % 3 == 0) {\n              out.print(\"<br/>\");\n            }\n          }\n\n          if (jas.isRequired()) {\n            out.print(\" [required]\");\n          }\n        }\n        out.print(\"<\/td><td>\");\n        \n        if (jas.isDisabled()) {\n          out.print(\"<span class=\\\"failed\\\">Failed<\/span>\");\n        } else if (openForWrite) {\n          EditLogOutputStream elos = jas.getCurrentStream();\n          if (elos != null) {\n            out.println(elos.generateHtmlReport());\n          } else {\n            out.println(\"not currently writing\");\n          }\n        } else {\n          out.println(\"open for read\");\n        }\n        out.println(\"<\/td><\/tr>\");\n      }\n      \n      out.println(\"<\/table><\/div>\");\n    }","id":54717,"modified_method":"/**\n     * Generate an HTML report containing the current status of the HDFS\n     * journals.\n     */\n    void generateJournalReport(JspWriter out, NameNode nn,\n        HttpServletRequest request) throws IOException {\n      if (nn.getNamesystem() == null) {\n        return;\n      }\n      FSEditLog log = nn.getFSImage().getEditLog();\n      Preconditions.checkArgument(log != null, \"no edit log set in %s\", nn);\n      \n      out.println(\"<h3> \" + nn.getRole() + \" Journal Status: <\/h3>\");\n\n      out.println(\"<b>Current transaction ID:<\/b> \" +\n          nn.getFSImage().getLastAppliedOrWrittenTxId() + \"<br/>\");\n      \n      \n      boolean openForWrite = log.isOpenForWrite();\n      \n      out.println(\"<div class=\\\"dfstable\\\">\");\n      out.println(\"<table class=\\\"storage\\\" title=\\\"NameNode Journals\\\">\\n\"\n              + \"<thead><tr><td><b>Journal Manager<\/b><\/td><td><b>State<\/b><\/td><\/tr><\/thead>\");\n      for (JournalAndStream jas : log.getJournals()) {\n        out.print(\"<tr>\");\n        out.print(\"<td>\");\n        \n        /**\n         * Insert a line break every 3 journal nodes to avoid a very wide line.\n         */  \n        JournalManager manager = jas.getManager();\n        if (null != manager) {\n          String[] managers = manager.toString().split(\",\");\n\n          for (int i = 0; i < managers.length; ++i) {\n            out.print(managers[i]);\n\n            if (i < managers.length - 1) {\n              out.print(\",\");\n            }\n\n            if ((i+1) % 3 == 0) {\n              out.print(\"<br/>\");\n            }\n          }\n\n          if (jas.isRequired()) {\n            out.print(\" [required]\");\n          }\n        }\n        out.print(\"<\/td><td>\");\n        \n        if (jas.isDisabled()) {\n          out.print(\"<span class=\\\"failed\\\">Failed<\/span>\");\n        } else if (openForWrite) {\n          EditLogOutputStream elos = jas.getCurrentStream();\n          if (elos != null) {\n            out.println(elos.generateHtmlReport());\n          } else {\n            out.println(\"not currently writing\");\n          }\n        } else {\n          out.println(\"open for read\");\n        }\n        out.println(\"<\/td><\/tr>\");\n      }\n      \n      out.println(\"<\/table><\/div>\");\n    }","commit_id":"2409882a47327f245ecd920c12e4de98fbf6a10d","url":"https://github.com/apache/hadoop"},{"original_method":"static String getInodeLimitText(FSNamesystem fsn) {\n    long inodes = fsn.dir.totalInodes();\n    long blocks = fsn.getBlocksTotal();\n    long maxobjects = fsn.getMaxObjects();\n\n    MemoryMXBean mem = ManagementFactory.getMemoryMXBean();\n    MemoryUsage heap = mem.getHeapMemoryUsage();\n    long totalMemory = heap.getUsed();\n    long maxMemory = heap.getMax();\n    long commitedMemory = heap.getCommitted();\n    \n    MemoryUsage nonHeap = mem.getNonHeapMemoryUsage();\n    long totalNonHeap = nonHeap.getUsed();\n    long maxNonHeap = nonHeap.getMax();\n    long commitedNonHeap = nonHeap.getCommitted();\n\n    long used = (totalMemory * 100) / commitedMemory;\n    long usedNonHeap = (totalNonHeap * 100) / commitedNonHeap;\n\n    String str = \"<div>\" + inodes + \" files and directories, \" + blocks + \" blocks = \"\n        + (inodes + blocks) + \" total filesystem objects\";\n    if (maxobjects != 0) {\n      long pct = ((inodes + blocks) * 100) / maxobjects;\n      str += \" / \" + maxobjects + \" (\" + pct + \"%)\";\n    }\n    str += \".<\/div>\";\n    str += \"<div>Heap Memory used \" + StringUtils.byteDesc(totalMemory) + \" is \"\n        + \" \" + used + \"% of Commited Heap Memory \"\n        + StringUtils.byteDesc(commitedMemory)\n        + \". Max Heap Memory is \" + StringUtils.byteDesc(maxMemory) +\n        \". <\/div>\";\n    str += \"<div>Non Heap Memory used \" + StringUtils.byteDesc(totalNonHeap) + \" is\"\n        + \" \" + usedNonHeap + \"% of \" + \" Commited Non Heap Memory \"\n        + StringUtils.byteDesc(commitedNonHeap) + \". Max Non Heap Memory is \"\n        + StringUtils.byteDesc(maxNonHeap) + \".<\/div>\";\n    return str;\n  }","id":54718,"modified_method":"static String getInodeLimitText(FSNamesystem fsn) {\n    if (fsn == null) {\n      return \"\";\n    }\n\n    long inodes = fsn.dir.totalInodes();\n    long blocks = fsn.getBlocksTotal();\n    long maxobjects = fsn.getMaxObjects();\n\n    MemoryMXBean mem = ManagementFactory.getMemoryMXBean();\n    MemoryUsage heap = mem.getHeapMemoryUsage();\n    long totalMemory = heap.getUsed();\n    long maxMemory = heap.getMax();\n    long commitedMemory = heap.getCommitted();\n    \n    MemoryUsage nonHeap = mem.getNonHeapMemoryUsage();\n    long totalNonHeap = nonHeap.getUsed();\n    long maxNonHeap = nonHeap.getMax();\n    long commitedNonHeap = nonHeap.getCommitted();\n\n    long used = (totalMemory * 100) / commitedMemory;\n    long usedNonHeap = (totalNonHeap * 100) / commitedNonHeap;\n\n    String str = \"<div>\" + inodes + \" files and directories, \" + blocks + \" blocks = \"\n        + (inodes + blocks) + \" total filesystem objects\";\n    if (maxobjects != 0) {\n      long pct = ((inodes + blocks) * 100) / maxobjects;\n      str += \" / \" + maxobjects + \" (\" + pct + \"%)\";\n    }\n    str += \".<\/div>\";\n    str += \"<div>Heap Memory used \" + StringUtils.byteDesc(totalMemory) + \" is \"\n        + \" \" + used + \"% of Commited Heap Memory \"\n        + StringUtils.byteDesc(commitedMemory)\n        + \". Max Heap Memory is \" + StringUtils.byteDesc(maxMemory) +\n        \". <\/div>\";\n    str += \"<div>Non Heap Memory used \" + StringUtils.byteDesc(totalNonHeap) + \" is\"\n        + \" \" + usedNonHeap + \"% of \" + \" Commited Non Heap Memory \"\n        + StringUtils.byteDesc(commitedNonHeap) + \". Max Non Heap Memory is \"\n        + StringUtils.byteDesc(maxNonHeap) + \".<\/div>\";\n    return str;\n  }","commit_id":"2409882a47327f245ecd920c12e4de98fbf6a10d","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Compute the span for a given matched pattern.\n   * At a high level:\n   *\n   * <ul>\n   *   <li>If both a subject and an object exist, we take the subject minus the quantifier, and the object plus the pivot. <\/li>\n   *   <li>If only an object exists, we make the subject the object, and create a dummy object to signify a one-place quantifier. <\/li>\n   * <\/ul>\n   *\n   * But:\n   *\n   * <ul>\n   *   <li>If we have a two-place quantifier, the object is allowed to absorb various specific arcs from the pivot.<\/li>\n   *   <li>If we have a one-place quantifier, the object is allowed to absorb only prepositions from the pivot.<\/li>\n   * <\/ul>\n   */\n  private OperatorSpec computeScope(SemanticGraph tree, Operator operator,\n                                    IndexedWord pivot, Pair<Integer, Integer> quantifierSpan,\n                                    IndexedWord subject, IndexedWord object) {\n    Pair<Integer, Integer> subjSpan;\n    Pair<Integer, Integer> objSpan;\n    if (subject != null) {\n      Pair<Integer, Integer> subjectSubtree = getSubtreeSpan(tree, subject);\n      subjSpan = excludeFromSpan(subjectSubtree, quantifierSpan);\n      objSpan = excludeFromSpan(includeInSpan(getSubtreeSpan(tree, object), getModifierSubtreeSpan(tree, pivot)), subjectSubtree);\n    } else {\n      subjSpan = includeInSpan(getSubtreeSpan(tree, object), getGeneralizedSubtreeSpan(tree, pivot, Collections.singleton(\"prep\")));\n      objSpan = Pair.makePair(subjSpan.second, subjSpan.second);\n    }\n    return new OperatorSpec(operator,\n        quantifierSpan.first - 1, quantifierSpan.second - 1,\n        subjSpan.first - 1, subjSpan.second - 1,\n        objSpan.first - 1, objSpan.second - 1);\n  }","id":54719,"modified_method":"/**\n   * Compute the span for a given matched pattern.\n   * At a high level:\n   *\n   * <ul>\n   *   <li>If both a subject and an object exist, we take the subject minus the quantifier, and the object plus the pivot. <\/li>\n   *   <li>If only an object exists, we make the subject the object, and create a dummy object to signify a one-place quantifier. <\/li>\n   *   <li>If neither the subject or object exist, the pivot is the subject and there is no object. <\/li>\n   * <\/ul>\n   *\n   * But:\n   *\n   * <ul>\n   *   <li>If we have a two-place quantifier, the object is allowed to absorb various specific arcs from the pivot.<\/li>\n   *   <li>If we have a one-place quantifier, the object is allowed to absorb only prepositions from the pivot.<\/li>\n   * <\/ul>\n   */\n  private OperatorSpec computeScope(SemanticGraph tree, Operator operator,\n                                    IndexedWord pivot, Pair<Integer, Integer> quantifierSpan,\n                                    IndexedWord subject, IndexedWord object) {\n    Pair<Integer, Integer> subjSpan;\n    Pair<Integer, Integer> objSpan;\n    if (subject == null && object == null) {\n      subjSpan = getSubtreeSpan(tree, pivot);\n      objSpan = Pair.makePair(subjSpan.second, subjSpan.second);\n    } else if (subject == null) {\n      subjSpan = includeInSpan(getSubtreeSpan(tree, object), getGeneralizedSubtreeSpan(tree, pivot, Collections.singleton(\"prep\")));\n      objSpan = Pair.makePair(subjSpan.second, subjSpan.second);\n    } else {\n      Pair<Integer, Integer> subjectSubtree = getSubtreeSpan(tree, subject);\n      subjSpan = excludeFromSpan(subjectSubtree, quantifierSpan);\n      objSpan = excludeFromSpan(includeInSpan(getSubtreeSpan(tree, object), getModifierSubtreeSpan(tree, pivot)), subjectSubtree);\n    }\n    return new OperatorSpec(operator,\n        quantifierSpan.first - 1, quantifierSpan.second - 1,\n        subjSpan.first - 1, subjSpan.second - 1,\n        objSpan.first - 1, objSpan.second - 1);\n  }","commit_id":"3e00b1e63148247dc885063776055026e02f7117","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithThe() {\n    checkScope(\"{ The } [ Ancient Greeks ] [ were all noted philosophers ]\");\n    checkScope(\"{ The } [ Ancient Greeks ] [ were noted philosophers ]\");\n    checkScope(\"{ The } [ ITEL-XZ  ] [is fast ]\");\n    checkScope(\"{ The } [ ITEL-ZX ] [ is an ITEL computer ]\");\n    checkScope(\"{ The } [ ITEL-ZX ] [ is slower than 500 MIPS ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is as fast as the ITEL-XZ ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is fast ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than 500 MIPS ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than any ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than every ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than some ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-XZ ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX and the ITEL-ZY ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX or the ITEL-ZY ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is slow ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is slower than the ITEL-XZ ]\");\n    checkScope(\"{ The } [ chairman of the department ] [ is a person ]\");\n    checkScope(\"{ The } [ chairman ] [ read out every item on the agenda ]\");\n    checkScope(\"{ The } [ chairman ] [ read out the items on the agenda ]\");\n    checkScope(\"{ The } [ conference ] [ started on July 4th, 1994 ]\");\n    checkScope(\"{ The } [ conference ] [ was over on July 8th, 1994 ]\");\n    checkScope(\"{ The } [ inhabitants of Cambridge ] [ voted for a Labour MP ]\");\n    checkScope(\"{ The } [ people who were at the meeting ] [ all voted for a new chairman ]\");\n    checkScope(\"{ The } [ people who were at the meeting ] [ voted for a new chairman ]\");\n    checkScope(\"{ The } [ really ambitious tenors ] [ are Italian ]\");\n    checkScope(\"{ The } [ residents of major western countries ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of major western countries ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ have the right to live anywhere in Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ residents of western countries ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of western countries ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ sales department ] [ rents a line from BT ]\");\n    checkScope(\"{ The } [ sales department ] [ rents it from BT ]\");\n    checkScope(\"{ The } [ students ] [ are going to Paris by train ]\");\n    checkScope(\"{ The } [ students ] [ have spoken to Mary ]\");\n    checkScope(\"{ The } [ system failure ] [ was blamed on one or more software faults ]\");\n  }","id":54720,"modified_method":"@Test\n  public void fracasSentencesWithThe() {\n    checkScope(\"{ The } [ Ancient Greeks ] [ were all noted philosophers ]\");\n    checkScope(\"{ The } [ Ancient Greeks ] [ were noted philosophers ]\");\n    checkScope(\"{ The } [ ITEL-XZ ] [ is fast ]\");\n    checkScope(\"{ The } [ ITEL-ZX ] [ is an ITEL computer ]\");\n    checkScope(\"{ The } [ ITEL-ZX ] [ is slower than 500 MIPS ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is as fast as the ITEL-XZ ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is fast ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than 500 MIPS ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than any ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than every ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than some ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-XZ ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX and the ITEL-ZY ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX or the ITEL-ZY ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is slow ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is slower than the ITEL-XZ ]\");\n    checkScope(\"{ The } [ chairman of the department ] [ is a person ]\");\n    checkScope(\"{ The } [ chairman ] [ read out every item on the agenda ]\");\n    checkScope(\"{ The } [ chairman ] [ read out the items on the agenda ]\");\n    checkScope(\"{ The } [ conference ] [ started on July 4th , 1994 ]\");\n    checkScope(\"{ The } [ conference ] [ was over on July 8th , 1994 ]\");\n    checkScope(\"{ The } [ inhabitants of Cambridge ] [ voted for a Labour MP ]\");\n//    checkScope(\"{ The } [ people who were at the meeting ] [ all voted for a new chairman ]\");  // TODO(gabor) Parse error on \"meeting -dep-> all\"\n    checkScope(\"{ The } [ people who were at the meeting ] [ voted for a new chairman ]\");\n    checkScope(\"{ The } [ really ambitious tenors ] [ are Italian ]\");\n    checkScope(\"{ The } [ residents of major western countries ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of major western countries ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ have the right to live anywhere in Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ residents of western countries ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of western countries ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ sales department ] [ rents a line from BT ]\");\n    checkScope(\"{ The } [ sales department ] [ rents it from BT ]\");\n    checkScope(\"{ The } [ students ] [ are going to Paris by train ]\");\n    checkScope(\"{ The } [ students ] [ have spoken to Mary ]\");\n    checkScope(\"{ The } [ system failure ] [ was blamed on one or more software faults ]\");\n  }","commit_id":"3e00b1e63148247dc885063776055026e02f7117","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithProperNouns() {\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL ]\");\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL has ]\");\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL is ]\");\n    checkScope(\"[ { APCOM } ] [ has been paying mortgage interest for a total of 15 years or more ]\");\n    checkScope(\"[ { APCOM } ] [ lost some orders ]\");\n    checkScope(\"[ { APCOM } ] [ lost ten orders ]\");\n    checkScope(\"[ { APCOM } ] [ signed the contract Friday, 13th ]\");\n    checkScope(\"[ { APCOM } ] [ sold exactly 2500 computers ]\");\n    checkScope(\"[ { APCOM } ] [ won some orders ]\");\n    checkScope(\"[ { APCOM } ] [ won ten orders ]\");\n\n    checkScope(\"[ { Bill } ] [ bought a car ]\");\n    checkScope(\"[ { Bill } ] [ has spoken to Mary ]\");\n    checkScope(\"[ { Bill } ] [ is going to ]\");\n    checkScope(\"[ { Bill } ] [ knows why John had his paper accepted ]\");\n    checkScope(\"[ { Bill } ] [ owns a blue car ]\");\n    checkScope(\"[ { Bill } ] [ owns a blue one ]\");\n    checkScope(\"[ { Bill } ] [ owns a car ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast car ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast one ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast red car ]\");\n    checkScope(\"[ { Bill } ] [ owns a red car ]\");\n    checkScope(\"[ { Bill } ] [ owns a slow one ]\");\n    checkScope(\"[ { Bill } ] [ owns a slow red car ]\");\n    checkScope(\"[ { Bill } ] [ said Mary wrote a report ]\");\n    checkScope(\"[ { Bill } ] [ said Peter wrote a report ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary at five o'clock ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary at four o'clock ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary on Monday ]\");\n    checkScope(\"[ { Bill } ] [ spoke to everyone that John did ]\");\n    checkScope(\"[ { Bill } ] [ suggested to Frank's boss that they should go to the meeting together, and Carl to Alan's wife ]\");\n    checkScope(\"[ { Bill } ] [ went to Berlin by car ]\");\n    checkScope(\"[ { Bill } ] [ went to Berlin by train ]\");\n    checkScope(\"[ { Bill } ] [ went to Paris by train ]\");\n    checkScope(\"[ { Bill } ] [ will speak to Mary ]\");\n    checkScope(\"[ { Bill } ] [ wrote a report ]\");\n\n    checkScope(\"[ { Dumbo } ] [ is a four-legged animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a large animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a small animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a small elephant ]\");\n    checkScope(\"[ { Dumbo } ] [ is four-legged ]\");\n    checkScope(\"[ { Dumbo } ] [ is larger than Mickey ]\");\n\n    checkScope(\"[ { GFI } ] [ owns several computers ]\");\n\n    checkScope(\"[ { Helen } ] [ saw the chairman of the department answer the phone ]\");\n\n    checkScope(\"[ { ICM } ] [ is one of the companies and owns 150 computers ]\");\n\n    checkScope(\"[ { ITEL } ] [ always delivers reports late ]\");\n    checkScope(\"[ { ITEL } ] [ built MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ currently has a factory in Birmingham ]\");\n    checkScope(\"[ { ITEL } ] [ delivered reports late in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ developed a new editor in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ existed in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ expanded in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ finished MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ has a factory in Birmingham ]\");\n    checkScope(\"[ { ITEL } ] [ has developed a new editor since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has expanded since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has made a loss since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has sent most of the reports Smith needs ]\");\n    checkScope(\"[ { ITEL } ] [ made a loss in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ maintains all the computers that GFI owns ]\");\n    checkScope(\"[ { ITEL } ] [ maintains them ]\");\n    checkScope(\"[ { ITEL } ] [ managed to win the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ never delivers reports late ]\");\n    checkScope(\"[ { ITEL } ] [ owned APCOM from 1988 to 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ owned APCOM in 1990 ]\");\n    checkScope(\"[ { ITEL } ] [ sent a progress report in July 1994 ]\");\n    checkScope(\"[ { ITEL } ] [ sold 3000 more computers than APCOM ]\");\n    checkScope(\"[ { ITEL } ] [ sold 5500 computers ]\");\n    checkScope(\"[ { ITEL } ] [ tried to win the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ was building MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ was winning the contract from APCOM in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won a contract in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won at least eleven orders ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM did ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM lost ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than the APCOM contract ]\");\n    checkScope(\"[ { ITEL } ] [ won more than one order ]\");\n    checkScope(\"[ { ITEL } ] [ won some orders ]\");\n    checkScope(\"[ { ITEL } ] [ won the APCOM contract ]\");\n    checkScope(\"[ { ITEL } ] [ won the contract from APCOM in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ won twenty orders ]\");\n    checkScope(\"[ { ITEL } ] [ won twice as many orders than APCOM ]\");\n    checkScope(\"[ { Itel } ] [ was in Birmingham in 1993 ]\");\n\n    checkScope(\"[ { John } ] [ bought a car ]\");\n    checkScope(\"[ { John } ] [ found Mary before Bill ]\");\n    checkScope(\"[ { John } ] [ found Mary before Bill found Mary ]\");\n    checkScope(\"[ { John } ] [ found Mary before John found Bill ]\");\n    checkScope(\"[ { John } ] [ had his paper accepted ]\");\n    checkScope(\"[ { John } ] [ has a diamond ]\");\n    checkScope(\"[ { John } ] [ has a genuine diamond ]\");\n    checkScope(\"[ { John } ] [ has spoken to Mary ]\");\n    checkScope(\"[ { John } ] [ hated the meeting ]\");\n    checkScope(\"[ { John } ] [ is a cleverer politician than Bill ]\");\n    checkScope(\"[ { John } ] [ is a fatter politician than Bill ]\");\n    checkScope(\"[ { John } ] [ is a former successful university student ]\");\n    checkScope(\"[ { John } ] [ is a former university student ]\");\n    checkScope(\"[ { John } ] [ is a man and Mary is a woman ]\");\n    checkScope(\"[ { John } ] [ is a successful former university student ]\");\n    checkScope(\"[ { John } ] [ is a university student ]\");\n    checkScope(\"[ { John } ] [ is cleverer than Bill ]\");\n    checkScope(\"[ { John } ] [ is fatter than Bill ]\");\n    checkScope(\"[ { John } ] [ is going to Paris by car, and the students by train ]\");\n    checkScope(\"[ { John } ] [ is successful ]\");\n    checkScope(\"[ { John } ] [ needed to buy a car, and Bill did ]\");\n    checkScope(\"[ { John } ] [ owns a car ]\");\n    checkScope(\"[ { John } ] [ owns a fast red car ]\");\n    checkScope(\"[ { John } ] [ owns a red car ]\");\n    checkScope(\"[ { John } ] [ represents his company and so does Mary ]\");\n    checkScope(\"[ { John } ] [ said Bill had been hurt ]\");\n    checkScope(\"[ { John } ] [ said Bill had hurt himself ]\");\n    checkScope(\"[ { John } ] [ said Bill wrote a report ]\");\n    checkScope(\"[ { John } ] [ said Mary wrote a report, and Bill did too ]\");\n    checkScope(\"[ { John } ] [ said that Mary wrote a report, and that Bill did too ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary at four o'clock ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Friday ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Monday ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Thursday ]\");\n    checkScope(\"[ { John } ] [ spoke to Sue ]\");\n    checkScope(\"[ { John } ] [ wanted to buy a car, and he did ]\");\n    checkScope(\"[ { John } ] [ wants to know how many men work part time ]\");\n    checkScope(\"[ { John } ] [ wants to know how many men work part time, and which ]\");\n    checkScope(\"[ { John } ] [ wants to know how many women work part time ]\");\n    checkScope(\"[ { John } ] [ wants to know which men work part time ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car, and Bill by train ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car, and Bill by train to Berlin ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car, and Bill to Berlin ]\");\n    checkScope(\"[ { John } ] [ wrote a report ]\");\n    checkScope(\"[ { John } ] [ wrote a report, and Bill said Peter did too ]\");\n\n    checkScope(\"[ { Jones } ] [ claimed Smith had costed Jones' proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed Smith had costed Smith's proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed he had costed Smith's proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed he had costed his own proposal ]\");\n    checkScope(\"[ { Jones } ] [ graduated in March and has been employed ever since ]\");\n    checkScope(\"[ { Jones } ] [ has a company car ]\");\n    checkScope(\"[ { Jones } ] [ has been unemployed in the past ]\");\n    checkScope(\"[ { Jones } ] [ has more than one company car ]\");\n    checkScope(\"[ { Jones } ] [ is an APCOM manager ]\");\n    checkScope(\"[ { Jones } ] [ is the chairman of ITEL ]\");\n    checkScope(\"[ { Jones } ] [ left ]\");\n    checkScope(\"[ { Jones } ] [ left after Anderson left ]\");\n    checkScope(\"[ { Jones } ] [ left after Anderson was present ]\");\n    checkScope(\"[ { Jones } ] [ left after Smith left ]\");\n    checkScope(\"[ { Jones } ] [ left before Anderson left ]\");\n    checkScope(\"[ { Jones } ] [ left before Smith left ]\");\n    checkScope(\"[ { Jones } ] [ left the meeting ]\");\n    checkScope(\"[ { Jones } ] [ represents Jones' company ]\");\n    checkScope(\"[ { Jones } ] [ represents Smith's company ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract after Smith did ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract before Smith did ]\");\n    checkScope(\"[ { Jones } ] [ signed another contract ]\");\n    checkScope(\"[ { Jones } ] [ signed the contract ]\");\n    checkScope(\"[ { Jones } ] [ signed two contracts ]\");\n    checkScope(\"[ { Jones } ] [ swam ]\");\n    checkScope(\"[ { Jones } ] [ swam after Smith swam ]\");\n    checkScope(\"[ { Jones } ] [ swam to the shore ]\");\n    checkScope(\"[ { Jones } ] [ swam to the shore after Smith swam to the shore ]\");\n    checkScope(\"[ { Jones } ] [ was present ]\");\n    checkScope(\"[ { Jones } ] [ was present after Smith was present ]\");\n    checkScope(\"[ { Jones } ] [ was present before Smith was present ]\");\n    checkScope(\"[ { Jones } ] [ was unemployed at some time before he graduated ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report after Smith was writing a report ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report before Smith was writing a report ]\");\n\n    checkScope(\"[ { Kim } ] [ is a clever person ]\");\n    checkScope(\"[ { Kim } ] [ is a clever politician ]\");\n    checkScope(\"[ { Kim } ] [ is clever ]\");\n\n    checkScope(\"[ { MFI } ] [ has a service contract for all its computers ]\");\n    checkScope(\"[ { MFI } ] [ is a customer that owns exactly one computer ]\");\n    checkScope(\"[ { MFI } ] [ is a customer that owns several computers ]\");\n\n    checkScope(\"[ { Mary } ] [ has a workstation ]\");\n    checkScope(\"[ { Mary } ] [ is a student ]\");\n    checkScope(\"[ { Mary } ] [ is female ]\");\n    checkScope(\"[ { Mary } ] [ represents John's company ]\");\n    checkScope(\"[ { Mary } ] [ represents her own company ]\");\n    checkScope(\"[ { Mary } ] [ used a workstation ]\");\n    checkScope(\"[ { Mary } ] [ used her workstation ]\");\n\n    checkScope(\"[ { Mickey } ] [ is a large animal ]\");\n    checkScope(\"[ { Mickey } ] [ is a large mouse ]\");\n    checkScope(\"[ { Mickey } ] [ is a small animal ]\");\n    checkScope(\"[ { Mickey } ] [ is larger than Dumbo ]\");\n    checkScope(\"[ { Mickey } ] [ is smaller than Dumbo ]\");\n\n    checkScope(\"[ { Pavarotti } ] [ is a leading tenor who comes cheap ]\");\n  }","id":54721,"modified_method":"@Test\n  public void fracasSentencesWithProperNouns() {\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL ]\");\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL has ]\");\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL is ]\");\n    checkScope(\"[ { APCOM } ] [ has been paying mortgage interest for a total of 15 years or more ]\");\n    checkScope(\"[ { APCOM } ] [ lost some orders ]\");\n    checkScope(\"[ { APCOM } ] [ lost ten orders ]\");\n    checkScope(\"[ { APCOM } ] [ signed the contract Friday , 13th ]\");\n    checkScope(\"[ { APCOM } ] [ sold exactly 2500 computers ]\");\n    checkScope(\"[ { APCOM } ] [ won some orders ]\");\n    checkScope(\"[ { APCOM } ] [ won ten orders ]\");\n\n    checkScope(\"[ { Bill } ] [ bought a car ]\");\n    checkScope(\"[ { Bill } ] [ has spoken to Mary ]\");\n    checkScope(\"[ { Bill } ] [ is going to ]\");\n    checkScope(\"[ { Bill } ] [ knows why John had his paper accepted ]\");\n    checkScope(\"[ { Bill } ] [ owns a blue car ]\");\n    checkScope(\"[ { Bill } ] [ owns a blue one ]\");\n    checkScope(\"[ { Bill } ] [ owns a car ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast car ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast one ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast red car ]\");\n    checkScope(\"[ { Bill } ] [ owns a red car ]\");\n    checkScope(\"[ { Bill } ] [ owns a slow one ]\");\n    checkScope(\"[ { Bill } ] [ owns a slow red car ]\");\n    checkScope(\"[ { Bill } ] [ said Mary wrote a report ]\");\n    checkScope(\"[ { Bill } ] [ said Peter wrote a report ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary at five o'clock ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary at four o'clock ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary on Monday ]\");\n    checkScope(\"[ { Bill } ] [ spoke to everyone that John did ]\");\n    checkScope(\"[ { Bill } ] [ suggested to Frank 's boss that they should go to the meeting together , and Carl to Alan 's wife ]\");\n    checkScope(\"[ { Bill } ] [ went to Berlin by car ]\");\n    checkScope(\"[ { Bill } ] [ went to Berlin by train ]\");\n    checkScope(\"[ { Bill } ] [ went to Paris by train ]\");\n    checkScope(\"[ { Bill } ] [ will speak to Mary ]\");\n    checkScope(\"[ { Bill } ] [ wrote a report ]\");\n\n    checkScope(\"[ { Dumbo } ] [ is a four-legged animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a large animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a small animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a small elephant ]\");\n    checkScope(\"[ { Dumbo } ] [ is four-legged ]\");\n    checkScope(\"[ { Dumbo } ] [ is larger than Mickey ]\");\n\n    checkScope(\"[ { GFI } ] [ owns several computers ]\");\n\n    checkScope(\"[ { Helen } ] [ saw the chairman of the department answer the phone ]\");\n\n    checkScope(\"[ { ICM } ] [ is one of the companies and owns 150 computers ]\");\n\n//    checkScope(\"[ { ITEL } ] [ always delivers reports late ]\");  // TODO(gabor) bad parse from ITEL -dep-> delivers\n    checkScope(\"[ { ITEL } ] [ built MTALK in 1993 ]\");\n//    checkScope(\"[ { ITEL } ] [ currently has a factory in Birmingham ]\");  // fix me (bad scope)\n    checkScope(\"[ { ITEL } ] [ delivered reports late in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ developed a new editor in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ existed in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ expanded in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ finished MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ has a factory in Birmingham ]\");\n    checkScope(\"[ { ITEL } ] [ has developed a new editor since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has expanded since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has made a loss since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has sent most of the reports Smith needs ]\");\n    checkScope(\"[ { ITEL } ] [ made a loss in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ maintains all the computers that GFI owns ]\");\n    checkScope(\"[ { ITEL } ] [ maintains them ]\");\n    checkScope(\"[ { ITEL } ] [ managed to win the contract in 1992 ]\");\n//    checkScope(\"[ { ITEL } ] [ never delivers reports late ]\");  // TODO(gabor) parse error\n    checkScope(\"[ { ITEL } ] [ owned APCOM from 1988 to 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ owned APCOM in 1990 ]\");\n    checkScope(\"[ { ITEL } ] [ sent a progress report in July 1994 ]\");\n    checkScope(\"[ { ITEL } ] [ sold 3000 more computers than APCOM ]\");\n    checkScope(\"[ { ITEL } ] [ sold 5500 computers ]\");\n    checkScope(\"[ { ITEL } ] [ tried to win the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ was building MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ was winning the contract from APCOM in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won a contract in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won at least eleven orders ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM did ]\");\n//    checkScope(\"[ { ITEL } ] [ won more orders than APCOM lost ]\");  // TODO(gabor) parse error\n    checkScope(\"[ { ITEL } ] [ won more orders than the APCOM contract ]\");\n    checkScope(\"[ { ITEL } ] [ won more than one order ]\");\n    checkScope(\"[ { ITEL } ] [ won some orders ]\");\n    checkScope(\"[ { ITEL } ] [ won the APCOM contract ]\");\n    checkScope(\"[ { ITEL } ] [ won the contract from APCOM in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ won twenty orders ]\");\n    checkScope(\"[ { ITEL } ] [ won twice as many orders than APCOM ]\");\n    checkScope(\"[ { Itel } ] [ was in Birmingham in 1993 ]\");\n\n    checkScope(\"[ { John } ] [ bought a car ]\");\n    checkScope(\"[ { John } ] [ found Mary before Bill ]\");\n//    checkScope(\"[ { John } ] [ found Mary before Bill found Mary ]\");  // fix me (bad scope)\n//    checkScope(\"[ { John } ] [ found Mary before John found Bill ]\");  // fix me (bad scope)\n    checkScope(\"[ { John } ] [ had his paper accepted ]\");\n    checkScope(\"[ { John } ] [ has a diamond ]\");\n    checkScope(\"[ { John } ] [ has a genuine diamond ]\");\n    checkScope(\"[ { John } ] [ has spoken to Mary ]\");\n    checkScope(\"[ { John } ] [ hated the meeting ]\");\n    checkScope(\"[ { John } ] [ is a cleverer politician than Bill ]\");\n    checkScope(\"[ { John } ] [ is a fatter politician than Bill ]\");\n    checkScope(\"[ { John } ] [ is a former successful university student ]\");\n    checkScope(\"[ { John } ] [ is a former university student ]\");\n    checkScope(\"[ { John } ] [ is a man and Mary is a woman ]\");\n    checkScope(\"[ { John } ] [ is a successful former university student ]\");\n    checkScope(\"[ { John } ] [ is a university student ]\");\n    checkScope(\"[ { John } ] [ is cleverer than Bill ]\");\n    checkScope(\"[ { John } ] [ is fatter than Bill ]\");\n    checkScope(\"[ { John } ] [ is going to Paris by car , and the students by train ]\");\n    checkScope(\"[ { John } ] [ is successful ]\");\n//    checkScope(\"[ { John } ] [ needed to buy a car ] and Bill did \"); // interesting example; also, parse error\n    checkScope(\"[ { John } ] [ owns a car ]\");\n    checkScope(\"[ { John } ] [ owns a fast red car ]\");\n    checkScope(\"[ { John } ] [ owns a red car ]\");\n    checkScope(\"[ { John } ] [ represents his company ] and so does Mary\");\n    checkScope(\"[ { John } ] [ said Bill had been hurt ]\");\n    checkScope(\"[ { John } ] [ said Bill had hurt himself ]\");\n    checkScope(\"[ { John } ] [ said Bill wrote a report ]\");\n    checkScope(\"[ { John } ] [ said Mary wrote a report ] , and Bill did too\");  // interesting example\n//    checkScope(\"[ { John } ] [ said that Mary wrote a report ] , and that Bill did too\");  // fix me (bad scope)\n    checkScope(\"[ { John } ] [ spoke to Mary ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary at four o'clock ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Friday ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Monday ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Thursday ]\");\n    checkScope(\"[ { John } ] [ spoke to Sue ]\");\n    checkScope(\"[ { John } ] [ wanted to buy a car ] , and he did\");\n    checkScope(\"[ { John } ] [ wants to know how many men work part time ]\");\n    checkScope(\"[ { John } ] [ wants to know how many men work part time , and which ]\");\n    checkScope(\"[ { John } ] [ wants to know how many women work part time ]\");\n    checkScope(\"[ { John } ] [ wants to know which men work part time ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car , and Bill by train ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car , and Bill by train to Berlin ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car , and Bill to Berlin ]\");\n    checkScope(\"[ { John } ] [ wrote a report ]\");\n//    checkScope(\"[ { John } ] [ wrote a report ] , and Bill said Peter did too ]\");  // fix me\n\n    checkScope(\"[ { Jones } ] [ claimed Smith had costed Jones ' proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed Smith had costed Smith 's proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed he had costed Smith 's proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed he had costed his own proposal ]\");\n    checkScope(\"[ { Jones } ] [ graduated in March ] and has been employed ever since\");\n    checkScope(\"[ { Jones } ] [ has a company car ]\");\n    checkScope(\"[ { Jones } ] [ has been unemployed in the past ]\");\n    checkScope(\"[ { Jones } ] [ has more than one company car ]\");\n    checkScope(\"[ { Jones } ] [ is an APCOM manager ]\");\n    checkScope(\"[ { Jones } ] [ is the chairman of ITEL ]\");\n    checkScope(\"[ { Jones } ] [ left after Anderson left ]\");\n    checkScope(\"[ { Jones } ] [ left after Anderson was present ]\");\n    checkScope(\"[ { Jones } ] [ left after Smith left ]\");\n    checkScope(\"[ { Jones } ] [ left before Anderson left ]\");\n    checkScope(\"[ { Jones } ] [ left before Smith left ]\");\n    checkScope(\"[ { Jones } ] [ left the meeting ]\");\n    checkScope(\"[ { Jones } ] [ represents Jones 's company ]\");\n    checkScope(\"[ { Jones } ] [ represents Smith 's company ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract after Smith did ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract before Smith did ]\");\n    checkScope(\"[ { Jones } ] [ signed another contract ]\");\n    checkScope(\"[ { Jones } ] [ signed the contract ]\");\n    checkScope(\"[ { Jones } ] [ signed two contracts ]\");\n    checkScope(\"[ { Jones } ] [ swam after Smith swam ]\");\n    checkScope(\"[ { Jones } ] [ swam to the shore ]\");\n    checkScope(\"[ { Jones } ] [ swam to the shore after Smith swam to the shore ]\");\n    checkScope(\"[ { Jones } ] [ was present ]\");\n    checkScope(\"[ { Jones } ] [ was present after Smith was present ]\");\n    checkScope(\"[ { Jones } ] [ was present before Smith was present ]\");\n    checkScope(\"[ { Jones } ] [ was unemployed at some time before he graduated ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report after Smith was writing a report ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report before Smith was writing a report ]\");\n\n    checkScope(\"[ { Kim } ] [ is a clever person ]\");\n    checkScope(\"[ { Kim } ] [ is a clever politician ]\");\n    checkScope(\"[ { Kim } ] [ is clever ]\");\n\n    checkScope(\"[ { MFI } ] [ has a service contract for all its computers ]\");\n    checkScope(\"[ { MFI } ] [ is a customer that owns exactly one computer ]\");\n    checkScope(\"[ { MFI } ] [ is a customer that owns several computers ]\");\n\n    checkScope(\"[ { Mary } ] [ has a workstation ]\");\n    checkScope(\"[ { Mary } ] [ is a student ]\");\n    checkScope(\"[ { Mary } ] [ is female ]\");\n    checkScope(\"[ { Mary } ] [ represents John 's company ]\");\n    checkScope(\"[ { Mary } ] [ represents her own company ]\");\n    checkScope(\"[ { Mary } ] [ used a workstation ]\");\n    checkScope(\"[ { Mary } ] [ used her workstation ]\");\n\n    checkScope(\"[ { Mickey } ] [ is a large animal ]\");\n    checkScope(\"[ { Mickey } ] [ is a large mouse ]\");\n    checkScope(\"[ { Mickey } ] [ is a small animal ]\");\n    checkScope(\"[ { Mickey } ] [ is larger than Dumbo ]\");\n    checkScope(\"[ { Mickey } ] [ is smaller than Dumbo ]\");\n\n    checkScope(\"[ { Pavarotti } ] [ is a leading tenor who comes cheap ]\");\n  }","commit_id":"3e00b1e63148247dc885063776055026e02f7117","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithMost() {\n    checkScope(\"{ Most } [ Europeans ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ Europeans who are resident in Europe ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ Europeans who are resident outside Europe ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ clients ] [ at the demonstration were impressed by the system's performance ]\");\n    checkScope(\"{ Most } [ companies that own a computer ] [ have a service contract for it ]\");\n    checkScope(\"{ Most } [ great tenors ] [ are Italian ]\");\n  }","id":54722,"modified_method":"@Test\n  public void fracasSentencesWithMost() {\n    checkScope(\"{ Most } [ Europeans ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ Europeans who are resident in Europe ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ Europeans who are resident outside Europe ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ clients at the demonstration ] [ were impressed by the system 's performance ]\");\n    checkScope(\"{ Most } [ companies that own a computer ] [ have a service contract for it ]\");\n    checkScope(\"{ Most } [ great tenors ] [ are Italian ]\");\n  }","commit_id":"3e00b1e63148247dc885063776055026e02f7117","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithBinaryNo() {\n    checkScope(\"{ No } [ Scandinavian delegate ] [ finished the report on time ]\");\n    checkScope(\"{ No } [ accountant ] [ attended the meeting ]\");\n    checkScope(\"{ No } [ accountants ] [ attended the meeting ]\");\n    checkScope(\"{ No } [ delegate ] [ finished the report ]\");\n    checkScope(\"{ No } [ really great tenors ] [ are modest ]\");\n    checkScope(\"{ No } [ representative ] [ took less than half a day to read the report ]\");\n    checkScope(\"{ No } [ student ] [ used her workstation ]\");\n    checkScope(\"{ No } [ two representatives ] [ have read it at the same time ]\");\n    checkScope(\"{ No } [ delegate ] [ finished the report on time ]\");\n  }","id":54723,"modified_method":"@Test\n  public void fracasSentencesWithBinaryNo() {\n    checkScope(\"{ No } [ Scandinavian delegate ] [ finished the report on time ]\");\n    checkScope(\"{ No } [ accountant ] [ attended the meeting ]\");\n    checkScope(\"{ No } [ accountants ] [ attended the meeting ]\");\n    checkScope(\"{ No } [ delegate ] [ finished the report ]\");\n    checkScope(\"{ No } [ really great tenors ] [ are modest ]\");\n//    checkScope(\"{ No } [ representative ] [ took less than half a day to read the report ]\");  // TODO(gabor) vmod issue again\n    checkScope(\"{ No } [ student ] [ used her workstation ]\");\n    checkScope(\"{ No } [ two representatives ] [ have read it at the same time ]\");\n    checkScope(\"{ No } [ delegate ] [ finished the report on time ]\");\n  }","commit_id":"3e00b1e63148247dc885063776055026e02f7117","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void fracasSentencesWithA() {\n    checkScope(\"{ A } [ Scandinavian ] [ won a Nobel prize ]\");\n    checkScope(\"{ A } [ Swede ] [ won a Nobel prize ]\");\n    checkScope(\"{ A } [ company director ] [ awarded himself a large payrise ]\");\n    checkScope(\"{ A } [ company director ] [ has awarded and been awarded a payrise ]\");\n    checkScope(\"{ A } [ lawyer ] [ signed every report ]\");\n\n    checkScope(\"{ An } [ Irishman ] [ won a Nobel prize ]\");\n    checkScope(\"{ An } [ Irishman ] [ won the Nobel prize for literature ]\");\n    checkScope(\"{ An } [ Italian ] [ became the world's greatest tenor ]\");\n  }","id":54724,"modified_method":"@Test\n  public void fracasSentencesWithA() {\n    checkScope(\"{ A } [ Scandinavian ] [ won a Nobel prize ]\");\n    checkScope(\"{ A } [ Swede ] [ won a Nobel prize ]\");\n    checkScope(\"{ A } [ company director ] [ awarded himself a large payrise ]\");\n    checkScope(\"{ A } [ company director ] [ has awarded and been awarded a payrise ]\");\n    checkScope(\"{ A } [ lawyer ] [ signed every report ]\");\n\n    checkScope(\"{ An } [ Irishman ] [ won a Nobel prize ]\");\n    checkScope(\"{ An } [ Irishman ] [ won the Nobel prize for literature ]\");\n    checkScope(\"{ An } [ Italian ] [ became the world 's greatest tenor ]\");\n  }","commit_id":"3e00b1e63148247dc885063776055026e02f7117","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings({\"UnusedDeclaration\", \"UnusedAssignment\"})\n  private void checkScope(String spec) {\n    String[] terms = spec.split(\"\\\\s+\");\n    int quantStart = -1;\n    int quantEnd = -1;\n    int subjBegin = -1;\n    int subjEnd = -1;\n    int objBegin = -1;\n    int objEnd = -1;\n    boolean seenSubj = false;\n    int tokenIndex = 0;\n    List<String> cleanSentence = new ArrayList<>();\n    for (String term : terms) {\n      switch (term) {\n        case \"{\":\n          quantStart = tokenIndex;\n          break;\n        case \"}\":\n          quantEnd = tokenIndex;\n          break;\n        case \"[\":\n          if (!seenSubj) {\n            subjBegin = tokenIndex;\n          } else {\n            objBegin = tokenIndex;\n          }\n          break;\n        case \"]\":\n          if (!seenSubj) {\n            subjEnd = tokenIndex;\n            seenSubj = true;\n          } else {\n            objEnd = tokenIndex;\n          }\n          break;\n        default:\n          cleanSentence.add(term);\n          tokenIndex += 1;\n          break;\n      }\n    }\n    Optional<OperatorSpec>[] scopes = annotate(StringUtils.join(cleanSentence, \" \"));\n    System.err.println(\"Checking [@ \" + (quantEnd - 1) + \"]:  \" + spec);\n    if (objBegin >= 0 && objEnd >= 0) {\n      checkScope(subjBegin, subjEnd, objBegin, scopes.length, scopes[quantEnd - 1]);\n    } else {\n      checkScope(subjBegin, subjEnd, scopes[quantEnd - 1]);\n    }\n  }","id":54725,"modified_method":"private void checkScope(String spec) {\n    String[] terms = spec.split(\"\\\\s+\");\n//    int quantStart = -1;\n    int quantEnd = -1;\n    int subjBegin = -1;\n    int subjEnd = -1;\n    int objBegin = -1;\n    int objEnd = -1;\n    boolean seenSubj = false;\n    int tokenIndex = 0;\n    List<String> cleanSentence = new ArrayList<>();\n    for (String term : terms) {\n      switch (term) {\n        case \"{\":\n//          quantStart = tokenIndex;\n          break;\n        case \"}\":\n          quantEnd = tokenIndex;\n          break;\n        case \"[\":\n          if (!seenSubj) {\n            subjBegin = tokenIndex;\n          } else {\n            objBegin = tokenIndex;\n          }\n          break;\n        case \"]\":\n          if (!seenSubj) {\n            subjEnd = tokenIndex;\n            seenSubj = true;\n          } else {\n            objEnd = tokenIndex;\n          }\n          break;\n        default:\n          cleanSentence.add(term);\n          tokenIndex += 1;\n          break;\n      }\n    }\n    Optional<OperatorSpec>[] scopes = annotate(StringUtils.join(cleanSentence, \" \"));\n    System.err.println(\"Checking [@ \" + (quantEnd - 1) + \"]:  \" + spec);\n    if (objBegin >= 0 && objEnd >= 0) {\n      checkScope(subjBegin, subjEnd, objBegin, objEnd, scopes[quantEnd - 1]);\n    } else {\n      checkScope(subjBegin, subjEnd, scopes[quantEnd - 1]);\n    }\n  }","commit_id":"3e00b1e63148247dc885063776055026e02f7117","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithEither() {\n    checkScope(\"{ Either } [ Smith, Jones or Anderson ] [ signed the contract ]\");\n  }","id":54726,"modified_method":"@Test\n  public void fracasSentencesWithEither() {\n    checkScope(\"{ Either } [ Smith Jones or Anderson ] [ signed the contract ]\");\n  }","commit_id":"3e00b1e63148247dc885063776055026e02f7117","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithSome() {\n    checkScope(\"{ Some } [ Irish delegates ] [ finished the survey on time ]\");\n    checkScope(\"{ Some } [ Italian men ] [ are great tenors ]\");\n    checkScope(\"{ Some } [ Italian tenors ] [ are great ]\");\n    checkScope(\"{ Some } [ Scandinavian delegate ] [ finished the report on time ]\");\n    checkScope(\"{ Some } [ accountant ] [ attended the meeting ]\");\n    checkScope(\"{ Some } [ accountants ] [ attended the meeting ]\");\n    checkScope(\"{ Some } [ delegate ] [ finished the report on time ]\");\n    checkScope(\"{ Some } [ delegates ] [ finished the survey ]\");\n    checkScope(\"{ Some } [ delegates ] [ finished the survey on time ]\");\n    checkScope(\"{ Some } [ great tenors ] [ are Swedish ]\");\n    checkScope(\"{ Some } [ great tenors ] [ like popular music ]\");\n    checkScope(\"{ Some } [ people ] [ discover that they have been asleep ]\");\n  }","id":54727,"modified_method":"@Test\n  public void fracasSentencesWithSome() {\n    checkScope(\"{ Some } [ Irish delegates ] [ finished the survey on time ]\");\n    checkScope(\"{ Some } [ Italian men ] [ are great tenors ]\");\n    checkScope(\"{ Some } [ Italian tenors ] [ are great ]\");\n    checkScope(\"{ Some } [ Scandinavian delegate ] [ finished the report on time ]\");\n    checkScope(\"{ Some } [ accountant ] [ attended the meeting ]\");\n    checkScope(\"{ Some } [ accountants ] [ attended the meeting ]\");\n    checkScope(\"{ Some } [ delegate ] [ finished the report on time ]\");\n    checkScope(\"{ Some } [ delegates ] [ finished the survey ]\");\n    checkScope(\"{ Some } [ delegates ] [ finished the survey on time ]\");\n    checkScope(\"{ Some } [ great tenors ] [ are Swedish ]\");\n//    checkScope(\"{ Some } [ great tenors ] [ like popular music ]\");  // parse error\n    checkScope(\"{ Some } [ people ] [ discover that they have been asleep ]\");\n  }","commit_id":"3e00b1e63148247dc885063776055026e02f7117","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithBinaryNoOne() {\n    checkScope(\"{ No one } [ can gamble when he is broke ]\");\n    checkScope(\"{ No one } [ gambling seriously ] [ stops until he is broke ]\");\n    checkScope(\"{ No one } [ who starts gambling seriously ] [ stops until he is broke ]\");\n\n    checkScope(\"{ Nobody } [ who is asleep ] [ ever knows that he is asleep ]\");\n  }","id":54728,"modified_method":"@Test\n  public void fracasSentencesWithBinaryNoOne() {\n    // Ignore \"no one\" for now.\n//    checkScope(\"{ No one } [ can gamble ] [ when he is broke ]\");  // interesting: subject object reversal (we of course don't actually get this...)\n//    checkScope(\"{ No one } [ gambling seriously ] [ stops until he is broke ]\");\n//    checkScope(\"{ No one } [ who starts gambling seriously ] [ stops until he is broke ]\");\n\n    checkScope(\"{ Nobody } [ who is asleep ] [ ever knows that he is asleep ]\");\n  }","commit_id":"3e00b1e63148247dc885063776055026e02f7117","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithPureNumbers() {\n    checkScope(\"{ Eight } [ machines ] [ have been removed ]\");\n\n    checkScope(\"{ Five } [ men ] [ work part time ]\");\n    checkScope(\"{ Forty five } [ women ] [ work part time ]\");\n\n    checkScope(\"{ Six } [ accountants ] [ signed the contract ]\");\n    checkScope(\"{ Six } [ lawyers ] [ signed the contract ]\");\n\n    checkScope(\"{ Ten } [ machines ] [ were here yesterday ]\");\n\n    checkScope(\"{ Twenty } [ men ] [ work in the Sales Department ]\");\n    checkScope(\"{ Two } [ machines ] [ have been removed ]\");\n    checkScope(\"{ Two } [ women ] [ work in the Sales Department ]\");\n  }","id":54729,"modified_method":"@Test\n  public void fracasSentencesWithPureNumbers() {\n    checkScope(\"{ Eight } [ machines ] [ have been removed ]\");\n\n    checkScope(\"{ Five } [ men ] [ work part time ]\");\n    checkScope(\"{ Forty five } [ women ] [ work part time ]\");\n\n    checkScope(\"{ Six } [ accountants ] [ signed the contract ]\");\n    checkScope(\"{ Six } [ lawyers ] [ signed the contract ]\");\n\n//    checkScope(\"{ Ten } [ machines ] [ were here yesterday ]\");  // TODO(gabor) yesterday doesn't come into scope\n\n    checkScope(\"{ Twenty } [ men ] [ work in the Sales Department ]\");\n    checkScope(\"{ Two } [ machines ] [ have been removed ]\");\n    checkScope(\"{ Two } [ women ] [ work in the Sales Department ]\");\n  }","commit_id":"3e00b1e63148247dc885063776055026e02f7117","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithThereAre() {\n    checkScope(\"{ There are } [ 100 companies ]\");\n    checkScope(\"{ There are } [ Italian men ] [ who want to be a great tenor ]\");\n    checkScope(\"{ There are } [ Italian tenors ] [ who want to be great ]\");\n    checkScope(\"{ There are } [ few committee members ] [ from Portugal ]\");\n    checkScope(\"{ There are } [ few committee members ] [ from southern Europe ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who are British ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who are German ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who are Italian ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who are Swedish ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who sing popular music ]\");\n    checkScope(\"{ There are } [ really ambitious tenors ] [ who are Italian ]\");\n    checkScope(\"{ There are } [ really great tenors ] [ who are modest ]\");\n    checkScope(\"{ There are } [ sixteen representatives ]\");\n    checkScope(\"{ There are } [ some reports from ITEL on Smith's desk ]\");\n    checkScope(\"{ There are } [ tenors ] [ who will take part in the concert ]\");\n\n    checkScope(\"{ There is } [ a car ] [ that John and Bill own ]\");\n    checkScope(\"{ There is } [ someone ] [ whom Helen saw answer the phone ]\");\n\n    checkScope(\"{ There was } [ a group of people ] [ that met ]\");\n    checkScope(\"{ There was } [ an Italian ] [ who became the world's greatest tenor ]\");\n    checkScope(\"{ There was } [ one auditor ] [ who signed all the reports ]\");\n  }","id":54730,"modified_method":"@Test\n  public void fracasSentencesWithThereAre() {\n    checkScope(\"{ There are } [ 100 companies ]\");\n    checkScope(\"{ There are } [ Italian men who want to be a great tenor ]\");\n    checkScope(\"{ There are } [ Italian tenors who want to be great ]\");\n    checkScope(\"{ There are } [ few committee members from Portugal ]\");\n    checkScope(\"{ There are } [ few committee members from southern Europe ]\");\n    checkScope(\"{ There are } [ great tenors who are British ]\");\n    checkScope(\"{ There are } [ great tenors who are German ]\");\n    checkScope(\"{ There are } [ great tenors who are Italian ]\");\n    checkScope(\"{ There are } [ great tenors who are Swedish ]\");\n    checkScope(\"{ There are } [ great tenors who sing popular music ]\");\n//    checkScope(\"{ There are } [ really ambitious tenors who are Italian ]\");  // TODO(gabor) parse error on are -advmod-> really\n//    checkScope(\"{ There are } [ really great tenors who are modest ]\");       // TODO(gabor) as above\n    checkScope(\"{ There are } [ sixteen representatives ]\");\n    checkScope(\"{ There are } [ some reports from ITEL on Smith 's desk ]\");\n    checkScope(\"{ There are } [ tenors who will take part in the concert ]\");\n\n    checkScope(\"{ There is } [ a car that John and Bill own ]\");\n    checkScope(\"{ There is } [ someone whom Helen saw answer the phone ]\");\n\n    checkScope(\"{ There was } [ a group of people that met ]\");\n    checkScope(\"{ There was } [ an Italian who became the world 's greatest tenor ]\");\n    checkScope(\"{ There was } [ one auditor who signed all the reports ]\");\n  }","commit_id":"3e00b1e63148247dc885063776055026e02f7117","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Compute the span for a given matched pattern.\n   * At a high level:\n   *\n   * <ul>\n   *   <li>If both a subject and an object exist, we take the subject minus the quantifier, and the object plus the pivot. <\/li>\n   *   <li>If only an object exists, we make the subject the object, and create a dummy object to signify a one-place quantifier. <\/li>\n   *   <li>If neither the subject or object exist, the pivot is the subject and there is no object. <\/li>\n   * <\/ul>\n   *\n   * But:\n   *\n   * <ul>\n   *   <li>If we have a two-place quantifier, the object is allowed to absorb various specific arcs from the pivot.<\/li>\n   *   <li>If we have a one-place quantifier, the object is allowed to absorb only prepositions from the pivot.<\/li>\n   * <\/ul>\n   */\n  private OperatorSpec computeScope(SemanticGraph tree, Operator operator,\n                                    IndexedWord pivot, Pair<Integer, Integer> quantifierSpan,\n                                    IndexedWord subject, IndexedWord object) {\n    Pair<Integer, Integer> subjSpan;\n    Pair<Integer, Integer> objSpan;\n    if (subject == null && object == null) {\n      subjSpan = getSubtreeSpan(tree, pivot);\n      objSpan = Pair.makePair(subjSpan.second, subjSpan.second);\n    } else if (subject == null) {\n      subjSpan = includeInSpan(getSubtreeSpan(tree, object), getGeneralizedSubtreeSpan(tree, pivot, Collections.singleton(\"prep\")));\n      objSpan = Pair.makePair(subjSpan.second, subjSpan.second);\n    } else {\n      Pair<Integer, Integer> subjectSubtree = getSubtreeSpan(tree, subject);\n      subjSpan = excludeFromSpan(subjectSubtree, quantifierSpan);\n      objSpan = excludeFromSpan(includeInSpan(getSubtreeSpan(tree, object), getModifierSubtreeSpan(tree, pivot)), subjectSubtree);\n    }\n    return new OperatorSpec(operator,\n        quantifierSpan.first - 1, quantifierSpan.second - 1,\n        subjSpan.first - 1, subjSpan.second - 1,\n        objSpan.first - 1, objSpan.second - 1);\n  }","id":54731,"modified_method":"/**\n   * Compute the span for a given matched pattern.\n   * At a high level:\n   *\n   * <ul>\n   *   <li>If both a subject and an object exist, we take the subject minus the quantifier, and the object plus the pivot. <\/li>\n   *   <li>If only an object exists, we make the subject the object, and create a dummy object to signify a one-place quantifier. <\/li>\n   * <\/ul>\n   *\n   * But:\n   *\n   * <ul>\n   *   <li>If we have a two-place quantifier, the object is allowed to absorb various specific arcs from the pivot.<\/li>\n   *   <li>If we have a one-place quantifier, the object is allowed to absorb only prepositions from the pivot.<\/li>\n   * <\/ul>\n   */\n  private OperatorSpec computeScope(SemanticGraph tree, Operator operator,\n                                    IndexedWord pivot, Pair<Integer, Integer> quantifierSpan,\n                                    IndexedWord subject, IndexedWord object) {\n    Pair<Integer, Integer> subjSpan;\n    Pair<Integer, Integer> objSpan;\n    if (subject != null) {\n      Pair<Integer, Integer> subjectSubtree = getSubtreeSpan(tree, subject);\n      subjSpan = excludeFromSpan(subjectSubtree, quantifierSpan);\n      objSpan = excludeFromSpan(includeInSpan(getSubtreeSpan(tree, object), getModifierSubtreeSpan(tree, pivot)), subjectSubtree);\n    } else {\n      subjSpan = includeInSpan(getSubtreeSpan(tree, object), getGeneralizedSubtreeSpan(tree, pivot, Collections.singleton(\"prep\")));\n      objSpan = Pair.makePair(subjSpan.second, subjSpan.second);\n    }\n    return new OperatorSpec(operator,\n        quantifierSpan.first - 1, quantifierSpan.second - 1,\n        subjSpan.first - 1, subjSpan.second - 1,\n        objSpan.first - 1, objSpan.second - 1);\n  }","commit_id":"a1b25bf0b4b58a22f05e996f6eac52fceddd491a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void fracasSentencesWithMost() {\n    checkScope(\"{ Most } [ Europeans ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ Europeans who are resident in Europe ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ Europeans who are resident outside Europe ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ clients at the demonstration ] [ were impressed by the system 's performance ]\");\n    checkScope(\"{ Most } [ companies that own a computer ] [ have a service contract for it ]\");\n    checkScope(\"{ Most } [ great tenors ] [ are Italian ]\");\n  }","id":54732,"modified_method":"@Ignore\n  @Test\n  public void fracasSentencesWithMost() {\n    checkScope(\"{ Most } [ Europeans ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ Europeans who are resident in Europe ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ Europeans who are resident outside Europe ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ clients ] [ at the demonstration were impressed by the system's performance ]\");\n    checkScope(\"{ Most } [ companies that own a computer ] [ have a service contract for it ]\");\n    checkScope(\"{ Most } [ great tenors ] [ are Italian ]\");\n  }","commit_id":"a1b25bf0b4b58a22f05e996f6eac52fceddd491a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void fracasSentencesWithBinaryNoOne() {\n    // Ignore \"no one\" for now.\n//    checkScope(\"{ No one } [ can gamble ] [ when he is broke ]\");  // interesting: subject object reversal (we of course don't actually get this...)\n//    checkScope(\"{ No one } [ gambling seriously ] [ stops until he is broke ]\");\n//    checkScope(\"{ No one } [ who starts gambling seriously ] [ stops until he is broke ]\");\n\n    checkScope(\"{ Nobody } [ who is asleep ] [ ever knows that he is asleep ]\");\n  }","id":54733,"modified_method":"@Ignore\n  @Test\n  public void fracasSentencesWithBinaryNoOne() {\n    checkScope(\"{ No one } [ can gamble when he is broke ]\");\n    checkScope(\"{ No one } [ gambling seriously ] [ stops until he is broke ]\");\n    checkScope(\"{ No one } [ who starts gambling seriously ] [ stops until he is broke ]\");\n\n    checkScope(\"{ Nobody } [ who is asleep ] [ ever knows that he is asleep ]\");\n  }","commit_id":"a1b25bf0b4b58a22f05e996f6eac52fceddd491a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void fracasSentencesWithThereAre() {\n    checkScope(\"{ There are } [ 100 companies ]\");\n    checkScope(\"{ There are } [ Italian men who want to be a great tenor ]\");\n    checkScope(\"{ There are } [ Italian tenors who want to be great ]\");\n    checkScope(\"{ There are } [ few committee members from Portugal ]\");\n    checkScope(\"{ There are } [ few committee members from southern Europe ]\");\n    checkScope(\"{ There are } [ great tenors who are British ]\");\n    checkScope(\"{ There are } [ great tenors who are German ]\");\n    checkScope(\"{ There are } [ great tenors who are Italian ]\");\n    checkScope(\"{ There are } [ great tenors who are Swedish ]\");\n    checkScope(\"{ There are } [ great tenors who sing popular music ]\");\n//    checkScope(\"{ There are } [ really ambitious tenors who are Italian ]\");  // TODO(gabor) parse error on are -advmod-> really\n//    checkScope(\"{ There are } [ really great tenors who are modest ]\");       // TODO(gabor) as above\n    checkScope(\"{ There are } [ sixteen representatives ]\");\n    checkScope(\"{ There are } [ some reports from ITEL on Smith 's desk ]\");\n    checkScope(\"{ There are } [ tenors who will take part in the concert ]\");\n\n    checkScope(\"{ There is } [ a car that John and Bill own ]\");\n    checkScope(\"{ There is } [ someone whom Helen saw answer the phone ]\");\n\n    checkScope(\"{ There was } [ a group of people that met ]\");\n    checkScope(\"{ There was } [ an Italian who became the world 's greatest tenor ]\");\n    checkScope(\"{ There was } [ one auditor who signed all the reports ]\");\n  }","id":54734,"modified_method":"@Ignore\n  @Test\n  public void fracasSentencesWithThereAre() {\n    checkScope(\"{ There are } [ 100 companies ]\");\n    checkScope(\"{ There are } [ Italian men ] [ who want to be a great tenor ]\");\n    checkScope(\"{ There are } [ Italian tenors ] [ who want to be great ]\");\n    checkScope(\"{ There are } [ few committee members ] [ from Portugal ]\");\n    checkScope(\"{ There are } [ few committee members ] [ from southern Europe ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who are British ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who are German ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who are Italian ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who are Swedish ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who sing popular music ]\");\n    checkScope(\"{ There are } [ really ambitious tenors ] [ who are Italian ]\");\n    checkScope(\"{ There are } [ really great tenors ] [ who are modest ]\");\n    checkScope(\"{ There are } [ sixteen representatives ]\");\n    checkScope(\"{ There are } [ some reports from ITEL on Smith's desk ]\");\n    checkScope(\"{ There are } [ tenors ] [ who will take part in the concert ]\");\n\n    checkScope(\"{ There is } [ a car ] [ that John and Bill own ]\");\n    checkScope(\"{ There is } [ someone ] [ whom Helen saw answer the phone ]\");\n\n    checkScope(\"{ There was } [ a group of people ] [ that met ]\");\n    checkScope(\"{ There was } [ an Italian ] [ who became the world's greatest tenor ]\");\n    checkScope(\"{ There was } [ one auditor ] [ who signed all the reports ]\");\n  }","commit_id":"a1b25bf0b4b58a22f05e996f6eac52fceddd491a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void fracasSentencesWithEither() {\n    checkScope(\"{ Either } [ Smith Jones or Anderson ] [ signed the contract ]\");\n  }","id":54735,"modified_method":"@Ignore\n  @Test\n  public void fracasSentencesWithEither() {\n    checkScope(\"{ Either } [ Smith, Jones or Anderson ] [ signed the contract ]\");\n  }","commit_id":"a1b25bf0b4b58a22f05e996f6eac52fceddd491a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void fracasSentencesWithA() {\n    checkScope(\"{ A } [ Scandinavian ] [ won a Nobel prize ]\");\n    checkScope(\"{ A } [ Swede ] [ won a Nobel prize ]\");\n    checkScope(\"{ A } [ company director ] [ awarded himself a large payrise ]\");\n    checkScope(\"{ A } [ company director ] [ has awarded and been awarded a payrise ]\");\n    checkScope(\"{ A } [ lawyer ] [ signed every report ]\");\n\n    checkScope(\"{ An } [ Irishman ] [ won a Nobel prize ]\");\n    checkScope(\"{ An } [ Irishman ] [ won the Nobel prize for literature ]\");\n    checkScope(\"{ An } [ Italian ] [ became the world 's greatest tenor ]\");\n  }","id":54736,"modified_method":"@Test\n  public void fracasSentencesWithA() {\n    checkScope(\"{ A } [ Scandinavian ] [ won a Nobel prize ]\");\n    checkScope(\"{ A } [ Swede ] [ won a Nobel prize ]\");\n    checkScope(\"{ A } [ company director ] [ awarded himself a large payrise ]\");\n    checkScope(\"{ A } [ company director ] [ has awarded and been awarded a payrise ]\");\n    checkScope(\"{ A } [ lawyer ] [ signed every report ]\");\n\n    checkScope(\"{ An } [ Irishman ] [ won a Nobel prize ]\");\n    checkScope(\"{ An } [ Irishman ] [ won the Nobel prize for literature ]\");\n    checkScope(\"{ An } [ Italian ] [ became the world's greatest tenor ]\");\n  }","commit_id":"a1b25bf0b4b58a22f05e996f6eac52fceddd491a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void fracasSentencesWithBinaryNo() {\n    checkScope(\"{ No } [ Scandinavian delegate ] [ finished the report on time ]\");\n    checkScope(\"{ No } [ accountant ] [ attended the meeting ]\");\n    checkScope(\"{ No } [ accountants ] [ attended the meeting ]\");\n    checkScope(\"{ No } [ delegate ] [ finished the report ]\");\n    checkScope(\"{ No } [ really great tenors ] [ are modest ]\");\n//    checkScope(\"{ No } [ representative ] [ took less than half a day to read the report ]\");  // TODO(gabor) vmod issue again\n    checkScope(\"{ No } [ student ] [ used her workstation ]\");\n    checkScope(\"{ No } [ two representatives ] [ have read it at the same time ]\");\n    checkScope(\"{ No } [ delegate ] [ finished the report on time ]\");\n  }","id":54737,"modified_method":"@Ignore\n  @Test\n  public void fracasSentencesWithBinaryNo() {\n    checkScope(\"{ No } [ Scandinavian delegate ] [ finished the report on time ]\");\n    checkScope(\"{ No } [ accountant ] [ attended the meeting ]\");\n    checkScope(\"{ No } [ accountants ] [ attended the meeting ]\");\n    checkScope(\"{ No } [ delegate ] [ finished the report ]\");\n    checkScope(\"{ No } [ really great tenors ] [ are modest ]\");\n    checkScope(\"{ No } [ representative ] [ took less than half a day to read the report ]\");\n    checkScope(\"{ No } [ student ] [ used her workstation ]\");\n    checkScope(\"{ No } [ two representatives ] [ have read it at the same time ]\");\n    checkScope(\"{ No } [ delegate ] [ finished the report on time ]\");\n  }","commit_id":"a1b25bf0b4b58a22f05e996f6eac52fceddd491a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private void checkScope(String spec) {\n    String[] terms = spec.split(\"\\\\s+\");\n//    int quantStart = -1;\n    int quantEnd = -1;\n    int subjBegin = -1;\n    int subjEnd = -1;\n    int objBegin = -1;\n    int objEnd = -1;\n    boolean seenSubj = false;\n    int tokenIndex = 0;\n    List<String> cleanSentence = new ArrayList<>();\n    for (String term : terms) {\n      switch (term) {\n        case \"{\":\n//          quantStart = tokenIndex;\n          break;\n        case \"}\":\n          quantEnd = tokenIndex;\n          break;\n        case \"[\":\n          if (!seenSubj) {\n            subjBegin = tokenIndex;\n          } else {\n            objBegin = tokenIndex;\n          }\n          break;\n        case \"]\":\n          if (!seenSubj) {\n            subjEnd = tokenIndex;\n            seenSubj = true;\n          } else {\n            objEnd = tokenIndex;\n          }\n          break;\n        default:\n          cleanSentence.add(term);\n          tokenIndex += 1;\n          break;\n      }\n    }\n    Optional<OperatorSpec>[] scopes = annotate(StringUtils.join(cleanSentence, \" \"));\n    System.err.println(\"Checking [@ \" + (quantEnd - 1) + \"]:  \" + spec);\n    if (objBegin >= 0 && objEnd >= 0) {\n      checkScope(subjBegin, subjEnd, objBegin, objEnd, scopes[quantEnd - 1]);\n    } else {\n      checkScope(subjBegin, subjEnd, scopes[quantEnd - 1]);\n    }\n  }","id":54738,"modified_method":"@SuppressWarnings({\"UnusedDeclaration\", \"UnusedAssignment\"})\n  private void checkScope(String spec) {\n    String[] terms = spec.split(\"\\\\s+\");\n    int quantStart = -1;\n    int quantEnd = -1;\n    int subjBegin = -1;\n    int subjEnd = -1;\n    int objBegin = -1;\n    int objEnd = -1;\n    boolean seenSubj = false;\n    int tokenIndex = 0;\n    List<String> cleanSentence = new ArrayList<>();\n    for (String term : terms) {\n      switch (term) {\n        case \"{\":\n          quantStart = tokenIndex;\n          break;\n        case \"}\":\n          quantEnd = tokenIndex;\n          break;\n        case \"[\":\n          if (!seenSubj) {\n            subjBegin = tokenIndex;\n          } else {\n            objBegin = tokenIndex;\n          }\n          break;\n        case \"]\":\n          if (!seenSubj) {\n            subjEnd = tokenIndex;\n            seenSubj = true;\n          } else {\n            objEnd = tokenIndex;\n          }\n          break;\n        default:\n          cleanSentence.add(term);\n          tokenIndex += 1;\n          break;\n      }\n    }\n    Optional<OperatorSpec>[] scopes = annotate(StringUtils.join(cleanSentence, \" \"));\n    System.err.println(\"Checking [@ \" + (quantEnd - 1) + \"]:  \" + spec);\n    if (objBegin >= 0 && objEnd >= 0) {\n      checkScope(subjBegin, subjEnd, objBegin, scopes.length, scopes[quantEnd - 1]);\n    } else {\n      checkScope(subjBegin, subjEnd, scopes[quantEnd - 1]);\n    }\n  }","commit_id":"a1b25bf0b4b58a22f05e996f6eac52fceddd491a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void fracasSentencesWithThe() {\n    checkScope(\"{ The } [ Ancient Greeks ] [ were all noted philosophers ]\");\n    checkScope(\"{ The } [ Ancient Greeks ] [ were noted philosophers ]\");\n    checkScope(\"{ The } [ ITEL-XZ ] [ is fast ]\");\n    checkScope(\"{ The } [ ITEL-ZX ] [ is an ITEL computer ]\");\n    checkScope(\"{ The } [ ITEL-ZX ] [ is slower than 500 MIPS ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is as fast as the ITEL-XZ ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is fast ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than 500 MIPS ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than any ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than every ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than some ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-XZ ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX and the ITEL-ZY ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX or the ITEL-ZY ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is slow ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is slower than the ITEL-XZ ]\");\n    checkScope(\"{ The } [ chairman of the department ] [ is a person ]\");\n    checkScope(\"{ The } [ chairman ] [ read out every item on the agenda ]\");\n    checkScope(\"{ The } [ chairman ] [ read out the items on the agenda ]\");\n    checkScope(\"{ The } [ conference ] [ started on July 4th , 1994 ]\");\n    checkScope(\"{ The } [ conference ] [ was over on July 8th , 1994 ]\");\n    checkScope(\"{ The } [ inhabitants of Cambridge ] [ voted for a Labour MP ]\");\n//    checkScope(\"{ The } [ people who were at the meeting ] [ all voted for a new chairman ]\");  // TODO(gabor) Parse error on \"meeting -dep-> all\"\n    checkScope(\"{ The } [ people who were at the meeting ] [ voted for a new chairman ]\");\n    checkScope(\"{ The } [ really ambitious tenors ] [ are Italian ]\");\n    checkScope(\"{ The } [ residents of major western countries ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of major western countries ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ have the right to live anywhere in Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ residents of western countries ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of western countries ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ sales department ] [ rents a line from BT ]\");\n    checkScope(\"{ The } [ sales department ] [ rents it from BT ]\");\n    checkScope(\"{ The } [ students ] [ are going to Paris by train ]\");\n    checkScope(\"{ The } [ students ] [ have spoken to Mary ]\");\n    checkScope(\"{ The } [ system failure ] [ was blamed on one or more software faults ]\");\n  }","id":54739,"modified_method":"@Ignore\n  @Test\n  public void fracasSentencesWithThe() {\n    checkScope(\"{ The } [ Ancient Greeks ] [ were all noted philosophers ]\");\n    checkScope(\"{ The } [ Ancient Greeks ] [ were noted philosophers ]\");\n    checkScope(\"{ The } [ ITEL-XZ  ] [is fast ]\");\n    checkScope(\"{ The } [ ITEL-ZX ] [ is an ITEL computer ]\");\n    checkScope(\"{ The } [ ITEL-ZX ] [ is slower than 500 MIPS ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is as fast as the ITEL-XZ ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is fast ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than 500 MIPS ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than any ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than every ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than some ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-XZ ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX and the ITEL-ZY ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX or the ITEL-ZY ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is slow ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is slower than the ITEL-XZ ]\");\n    checkScope(\"{ The } [ chairman of the department ] [ is a person ]\");\n    checkScope(\"{ The } [ chairman ] [ read out every item on the agenda ]\");\n    checkScope(\"{ The } [ chairman ] [ read out the items on the agenda ]\");\n    checkScope(\"{ The } [ conference ] [ started on July 4th, 1994 ]\");\n    checkScope(\"{ The } [ conference ] [ was over on July 8th, 1994 ]\");\n    checkScope(\"{ The } [ inhabitants of Cambridge ] [ voted for a Labour MP ]\");\n    checkScope(\"{ The } [ people who were at the meeting ] [ all voted for a new chairman ]\");\n    checkScope(\"{ The } [ people who were at the meeting ] [ voted for a new chairman ]\");\n    checkScope(\"{ The } [ really ambitious tenors ] [ are Italian ]\");\n    checkScope(\"{ The } [ residents of major western countries ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of major western countries ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ have the right to live anywhere in Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ residents of western countries ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of western countries ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ sales department ] [ rents a line from BT ]\");\n    checkScope(\"{ The } [ sales department ] [ rents it from BT ]\");\n    checkScope(\"{ The } [ students ] [ are going to Paris by train ]\");\n    checkScope(\"{ The } [ students ] [ have spoken to Mary ]\");\n    checkScope(\"{ The } [ system failure ] [ was blamed on one or more software faults ]\");\n  }","commit_id":"a1b25bf0b4b58a22f05e996f6eac52fceddd491a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void fracasSentencesWithSome() {\n    checkScope(\"{ Some } [ Irish delegates ] [ finished the survey on time ]\");\n    checkScope(\"{ Some } [ Italian men ] [ are great tenors ]\");\n    checkScope(\"{ Some } [ Italian tenors ] [ are great ]\");\n    checkScope(\"{ Some } [ Scandinavian delegate ] [ finished the report on time ]\");\n    checkScope(\"{ Some } [ accountant ] [ attended the meeting ]\");\n    checkScope(\"{ Some } [ accountants ] [ attended the meeting ]\");\n    checkScope(\"{ Some } [ delegate ] [ finished the report on time ]\");\n    checkScope(\"{ Some } [ delegates ] [ finished the survey ]\");\n    checkScope(\"{ Some } [ delegates ] [ finished the survey on time ]\");\n    checkScope(\"{ Some } [ great tenors ] [ are Swedish ]\");\n//    checkScope(\"{ Some } [ great tenors ] [ like popular music ]\");  // parse error\n    checkScope(\"{ Some } [ people ] [ discover that they have been asleep ]\");\n  }","id":54740,"modified_method":"@Ignore\n  @Test\n  public void fracasSentencesWithSome() {\n    checkScope(\"{ Some } [ Irish delegates ] [ finished the survey on time ]\");\n    checkScope(\"{ Some } [ Italian men ] [ are great tenors ]\");\n    checkScope(\"{ Some } [ Italian tenors ] [ are great ]\");\n    checkScope(\"{ Some } [ Scandinavian delegate ] [ finished the report on time ]\");\n    checkScope(\"{ Some } [ accountant ] [ attended the meeting ]\");\n    checkScope(\"{ Some } [ accountants ] [ attended the meeting ]\");\n    checkScope(\"{ Some } [ delegate ] [ finished the report on time ]\");\n    checkScope(\"{ Some } [ delegates ] [ finished the survey ]\");\n    checkScope(\"{ Some } [ delegates ] [ finished the survey on time ]\");\n    checkScope(\"{ Some } [ great tenors ] [ are Swedish ]\");\n    checkScope(\"{ Some } [ great tenors ] [ like popular music ]\");\n    checkScope(\"{ Some } [ people ] [ discover that they have been asleep ]\");\n  }","commit_id":"a1b25bf0b4b58a22f05e996f6eac52fceddd491a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void fracasSentencesWithPureNumbers() {\n    checkScope(\"{ Eight } [ machines ] [ have been removed ]\");\n\n    checkScope(\"{ Five } [ men ] [ work part time ]\");\n    checkScope(\"{ Forty five } [ women ] [ work part time ]\");\n\n    checkScope(\"{ Six } [ accountants ] [ signed the contract ]\");\n    checkScope(\"{ Six } [ lawyers ] [ signed the contract ]\");\n\n//    checkScope(\"{ Ten } [ machines ] [ were here yesterday ]\");  // TODO(gabor) yesterday doesn't come into scope\n\n    checkScope(\"{ Twenty } [ men ] [ work in the Sales Department ]\");\n    checkScope(\"{ Two } [ machines ] [ have been removed ]\");\n    checkScope(\"{ Two } [ women ] [ work in the Sales Department ]\");\n  }","id":54741,"modified_method":"@Ignore\n  @Test\n  public void fracasSentencesWithPureNumbers() {\n    checkScope(\"{ Eight } [ machines ] [ have been removed ]\");\n\n    checkScope(\"{ Five } [ men ] [ work part time ]\");\n    checkScope(\"{ Forty five } [ women ] [ work part time ]\");\n\n    checkScope(\"{ Six } [ accountants ] [ signed the contract ]\");\n    checkScope(\"{ Six } [ lawyers ] [ signed the contract ]\");\n\n    checkScope(\"{ Ten } [ machines ] [ were here yesterday ]\");\n\n    checkScope(\"{ Twenty } [ men ] [ work in the Sales Department ]\");\n    checkScope(\"{ Two } [ machines ] [ have been removed ]\");\n    checkScope(\"{ Two } [ women ] [ work in the Sales Department ]\");\n  }","commit_id":"a1b25bf0b4b58a22f05e996f6eac52fceddd491a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void fracasSentencesWithProperNouns() {\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL ]\");\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL has ]\");\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL is ]\");\n    checkScope(\"[ { APCOM } ] [ has been paying mortgage interest for a total of 15 years or more ]\");\n    checkScope(\"[ { APCOM } ] [ lost some orders ]\");\n    checkScope(\"[ { APCOM } ] [ lost ten orders ]\");\n    checkScope(\"[ { APCOM } ] [ signed the contract Friday , 13th ]\");\n    checkScope(\"[ { APCOM } ] [ sold exactly 2500 computers ]\");\n    checkScope(\"[ { APCOM } ] [ won some orders ]\");\n    checkScope(\"[ { APCOM } ] [ won ten orders ]\");\n\n    checkScope(\"[ { Bill } ] [ bought a car ]\");\n    checkScope(\"[ { Bill } ] [ has spoken to Mary ]\");\n    checkScope(\"[ { Bill } ] [ is going to ]\");\n    checkScope(\"[ { Bill } ] [ knows why John had his paper accepted ]\");\n    checkScope(\"[ { Bill } ] [ owns a blue car ]\");\n    checkScope(\"[ { Bill } ] [ owns a blue one ]\");\n    checkScope(\"[ { Bill } ] [ owns a car ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast car ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast one ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast red car ]\");\n    checkScope(\"[ { Bill } ] [ owns a red car ]\");\n    checkScope(\"[ { Bill } ] [ owns a slow one ]\");\n    checkScope(\"[ { Bill } ] [ owns a slow red car ]\");\n    checkScope(\"[ { Bill } ] [ said Mary wrote a report ]\");\n    checkScope(\"[ { Bill } ] [ said Peter wrote a report ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary at five o'clock ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary at four o'clock ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary on Monday ]\");\n    checkScope(\"[ { Bill } ] [ spoke to everyone that John did ]\");\n    checkScope(\"[ { Bill } ] [ suggested to Frank 's boss that they should go to the meeting together , and Carl to Alan 's wife ]\");\n    checkScope(\"[ { Bill } ] [ went to Berlin by car ]\");\n    checkScope(\"[ { Bill } ] [ went to Berlin by train ]\");\n    checkScope(\"[ { Bill } ] [ went to Paris by train ]\");\n    checkScope(\"[ { Bill } ] [ will speak to Mary ]\");\n    checkScope(\"[ { Bill } ] [ wrote a report ]\");\n\n    checkScope(\"[ { Dumbo } ] [ is a four-legged animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a large animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a small animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a small elephant ]\");\n    checkScope(\"[ { Dumbo } ] [ is four-legged ]\");\n    checkScope(\"[ { Dumbo } ] [ is larger than Mickey ]\");\n\n    checkScope(\"[ { GFI } ] [ owns several computers ]\");\n\n    checkScope(\"[ { Helen } ] [ saw the chairman of the department answer the phone ]\");\n\n    checkScope(\"[ { ICM } ] [ is one of the companies and owns 150 computers ]\");\n\n//    checkScope(\"[ { ITEL } ] [ always delivers reports late ]\");  // TODO(gabor) bad parse from ITEL -dep-> delivers\n    checkScope(\"[ { ITEL } ] [ built MTALK in 1993 ]\");\n//    checkScope(\"[ { ITEL } ] [ currently has a factory in Birmingham ]\");  // fix me (bad scope)\n    checkScope(\"[ { ITEL } ] [ delivered reports late in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ developed a new editor in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ existed in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ expanded in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ finished MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ has a factory in Birmingham ]\");\n    checkScope(\"[ { ITEL } ] [ has developed a new editor since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has expanded since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has made a loss since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has sent most of the reports Smith needs ]\");\n    checkScope(\"[ { ITEL } ] [ made a loss in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ maintains all the computers that GFI owns ]\");\n    checkScope(\"[ { ITEL } ] [ maintains them ]\");\n    checkScope(\"[ { ITEL } ] [ managed to win the contract in 1992 ]\");\n//    checkScope(\"[ { ITEL } ] [ never delivers reports late ]\");  // TODO(gabor) parse error\n    checkScope(\"[ { ITEL } ] [ owned APCOM from 1988 to 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ owned APCOM in 1990 ]\");\n    checkScope(\"[ { ITEL } ] [ sent a progress report in July 1994 ]\");\n    checkScope(\"[ { ITEL } ] [ sold 3000 more computers than APCOM ]\");\n    checkScope(\"[ { ITEL } ] [ sold 5500 computers ]\");\n    checkScope(\"[ { ITEL } ] [ tried to win the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ was building MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ was winning the contract from APCOM in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won a contract in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won at least eleven orders ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM did ]\");\n//    checkScope(\"[ { ITEL } ] [ won more orders than APCOM lost ]\");  // TODO(gabor) parse error\n    checkScope(\"[ { ITEL } ] [ won more orders than the APCOM contract ]\");\n    checkScope(\"[ { ITEL } ] [ won more than one order ]\");\n    checkScope(\"[ { ITEL } ] [ won some orders ]\");\n    checkScope(\"[ { ITEL } ] [ won the APCOM contract ]\");\n    checkScope(\"[ { ITEL } ] [ won the contract from APCOM in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ won twenty orders ]\");\n    checkScope(\"[ { ITEL } ] [ won twice as many orders than APCOM ]\");\n    checkScope(\"[ { Itel } ] [ was in Birmingham in 1993 ]\");\n\n    checkScope(\"[ { John } ] [ bought a car ]\");\n    checkScope(\"[ { John } ] [ found Mary before Bill ]\");\n//    checkScope(\"[ { John } ] [ found Mary before Bill found Mary ]\");  // fix me (bad scope)\n//    checkScope(\"[ { John } ] [ found Mary before John found Bill ]\");  // fix me (bad scope)\n    checkScope(\"[ { John } ] [ had his paper accepted ]\");\n    checkScope(\"[ { John } ] [ has a diamond ]\");\n    checkScope(\"[ { John } ] [ has a genuine diamond ]\");\n    checkScope(\"[ { John } ] [ has spoken to Mary ]\");\n    checkScope(\"[ { John } ] [ hated the meeting ]\");\n    checkScope(\"[ { John } ] [ is a cleverer politician than Bill ]\");\n    checkScope(\"[ { John } ] [ is a fatter politician than Bill ]\");\n    checkScope(\"[ { John } ] [ is a former successful university student ]\");\n    checkScope(\"[ { John } ] [ is a former university student ]\");\n    checkScope(\"[ { John } ] [ is a man and Mary is a woman ]\");\n    checkScope(\"[ { John } ] [ is a successful former university student ]\");\n    checkScope(\"[ { John } ] [ is a university student ]\");\n    checkScope(\"[ { John } ] [ is cleverer than Bill ]\");\n    checkScope(\"[ { John } ] [ is fatter than Bill ]\");\n    checkScope(\"[ { John } ] [ is going to Paris by car , and the students by train ]\");\n    checkScope(\"[ { John } ] [ is successful ]\");\n//    checkScope(\"[ { John } ] [ needed to buy a car ] and Bill did \"); // interesting example; also, parse error\n    checkScope(\"[ { John } ] [ owns a car ]\");\n    checkScope(\"[ { John } ] [ owns a fast red car ]\");\n    checkScope(\"[ { John } ] [ owns a red car ]\");\n    checkScope(\"[ { John } ] [ represents his company ] and so does Mary\");\n    checkScope(\"[ { John } ] [ said Bill had been hurt ]\");\n    checkScope(\"[ { John } ] [ said Bill had hurt himself ]\");\n    checkScope(\"[ { John } ] [ said Bill wrote a report ]\");\n    checkScope(\"[ { John } ] [ said Mary wrote a report ] , and Bill did too\");  // interesting example\n//    checkScope(\"[ { John } ] [ said that Mary wrote a report ] , and that Bill did too\");  // fix me (bad scope)\n    checkScope(\"[ { John } ] [ spoke to Mary ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary at four o'clock ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Friday ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Monday ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Thursday ]\");\n    checkScope(\"[ { John } ] [ spoke to Sue ]\");\n    checkScope(\"[ { John } ] [ wanted to buy a car ] , and he did\");\n    checkScope(\"[ { John } ] [ wants to know how many men work part time ]\");\n    checkScope(\"[ { John } ] [ wants to know how many men work part time , and which ]\");\n    checkScope(\"[ { John } ] [ wants to know how many women work part time ]\");\n    checkScope(\"[ { John } ] [ wants to know which men work part time ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car , and Bill by train ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car , and Bill by train to Berlin ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car , and Bill to Berlin ]\");\n    checkScope(\"[ { John } ] [ wrote a report ]\");\n//    checkScope(\"[ { John } ] [ wrote a report ] , and Bill said Peter did too ]\");  // fix me\n\n    checkScope(\"[ { Jones } ] [ claimed Smith had costed Jones ' proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed Smith had costed Smith 's proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed he had costed Smith 's proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed he had costed his own proposal ]\");\n    checkScope(\"[ { Jones } ] [ graduated in March ] and has been employed ever since\");\n    checkScope(\"[ { Jones } ] [ has a company car ]\");\n    checkScope(\"[ { Jones } ] [ has been unemployed in the past ]\");\n    checkScope(\"[ { Jones } ] [ has more than one company car ]\");\n    checkScope(\"[ { Jones } ] [ is an APCOM manager ]\");\n    checkScope(\"[ { Jones } ] [ is the chairman of ITEL ]\");\n    checkScope(\"[ { Jones } ] [ left after Anderson left ]\");\n    checkScope(\"[ { Jones } ] [ left after Anderson was present ]\");\n    checkScope(\"[ { Jones } ] [ left after Smith left ]\");\n    checkScope(\"[ { Jones } ] [ left before Anderson left ]\");\n    checkScope(\"[ { Jones } ] [ left before Smith left ]\");\n    checkScope(\"[ { Jones } ] [ left the meeting ]\");\n    checkScope(\"[ { Jones } ] [ represents Jones 's company ]\");\n    checkScope(\"[ { Jones } ] [ represents Smith 's company ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract after Smith did ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract before Smith did ]\");\n    checkScope(\"[ { Jones } ] [ signed another contract ]\");\n    checkScope(\"[ { Jones } ] [ signed the contract ]\");\n    checkScope(\"[ { Jones } ] [ signed two contracts ]\");\n    checkScope(\"[ { Jones } ] [ swam after Smith swam ]\");\n    checkScope(\"[ { Jones } ] [ swam to the shore ]\");\n    checkScope(\"[ { Jones } ] [ swam to the shore after Smith swam to the shore ]\");\n    checkScope(\"[ { Jones } ] [ was present ]\");\n    checkScope(\"[ { Jones } ] [ was present after Smith was present ]\");\n    checkScope(\"[ { Jones } ] [ was present before Smith was present ]\");\n    checkScope(\"[ { Jones } ] [ was unemployed at some time before he graduated ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report after Smith was writing a report ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report before Smith was writing a report ]\");\n\n    checkScope(\"[ { Kim } ] [ is a clever person ]\");\n    checkScope(\"[ { Kim } ] [ is a clever politician ]\");\n    checkScope(\"[ { Kim } ] [ is clever ]\");\n\n    checkScope(\"[ { MFI } ] [ has a service contract for all its computers ]\");\n    checkScope(\"[ { MFI } ] [ is a customer that owns exactly one computer ]\");\n    checkScope(\"[ { MFI } ] [ is a customer that owns several computers ]\");\n\n    checkScope(\"[ { Mary } ] [ has a workstation ]\");\n    checkScope(\"[ { Mary } ] [ is a student ]\");\n    checkScope(\"[ { Mary } ] [ is female ]\");\n    checkScope(\"[ { Mary } ] [ represents John 's company ]\");\n    checkScope(\"[ { Mary } ] [ represents her own company ]\");\n    checkScope(\"[ { Mary } ] [ used a workstation ]\");\n    checkScope(\"[ { Mary } ] [ used her workstation ]\");\n\n    checkScope(\"[ { Mickey } ] [ is a large animal ]\");\n    checkScope(\"[ { Mickey } ] [ is a large mouse ]\");\n    checkScope(\"[ { Mickey } ] [ is a small animal ]\");\n    checkScope(\"[ { Mickey } ] [ is larger than Dumbo ]\");\n    checkScope(\"[ { Mickey } ] [ is smaller than Dumbo ]\");\n\n    checkScope(\"[ { Pavarotti } ] [ is a leading tenor who comes cheap ]\");\n  }","id":54742,"modified_method":"@Ignore\n  @Test\n  public void fracasSentencesWithProperNouns() {\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL ]\");\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL has ]\");\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL is ]\");\n    checkScope(\"[ { APCOM } ] [ has been paying mortgage interest for a total of 15 years or more ]\");\n    checkScope(\"[ { APCOM } ] [ lost some orders ]\");\n    checkScope(\"[ { APCOM } ] [ lost ten orders ]\");\n    checkScope(\"[ { APCOM } ] [ signed the contract Friday, 13th ]\");\n    checkScope(\"[ { APCOM } ] [ sold exactly 2500 computers ]\");\n    checkScope(\"[ { APCOM } ] [ won some orders ]\");\n    checkScope(\"[ { APCOM } ] [ won ten orders ]\");\n\n    checkScope(\"[ { Bill } ] [ bought a car ]\");\n    checkScope(\"[ { Bill } ] [ has spoken to Mary ]\");\n    checkScope(\"[ { Bill } ] [ is going to ]\");\n    checkScope(\"[ { Bill } ] [ knows why John had his paper accepted ]\");\n    checkScope(\"[ { Bill } ] [ owns a blue car ]\");\n    checkScope(\"[ { Bill } ] [ owns a blue one ]\");\n    checkScope(\"[ { Bill } ] [ owns a car ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast car ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast one ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast red car ]\");\n    checkScope(\"[ { Bill } ] [ owns a red car ]\");\n    checkScope(\"[ { Bill } ] [ owns a slow one ]\");\n    checkScope(\"[ { Bill } ] [ owns a slow red car ]\");\n    checkScope(\"[ { Bill } ] [ said Mary wrote a report ]\");\n    checkScope(\"[ { Bill } ] [ said Peter wrote a report ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary at five o'clock ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary at four o'clock ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary on Monday ]\");\n    checkScope(\"[ { Bill } ] [ spoke to everyone that John did ]\");\n    checkScope(\"[ { Bill } ] [ suggested to Frank's boss that they should go to the meeting together, and Carl to Alan's wife ]\");\n    checkScope(\"[ { Bill } ] [ went to Berlin by car ]\");\n    checkScope(\"[ { Bill } ] [ went to Berlin by train ]\");\n    checkScope(\"[ { Bill } ] [ went to Paris by train ]\");\n    checkScope(\"[ { Bill } ] [ will speak to Mary ]\");\n    checkScope(\"[ { Bill } ] [ wrote a report ]\");\n\n    checkScope(\"[ { Dumbo } ] [ is a four-legged animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a large animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a small animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a small elephant ]\");\n    checkScope(\"[ { Dumbo } ] [ is four-legged ]\");\n    checkScope(\"[ { Dumbo } ] [ is larger than Mickey ]\");\n\n    checkScope(\"[ { GFI } ] [ owns several computers ]\");\n\n    checkScope(\"[ { Helen } ] [ saw the chairman of the department answer the phone ]\");\n\n    checkScope(\"[ { ICM } ] [ is one of the companies and owns 150 computers ]\");\n\n    checkScope(\"[ { ITEL } ] [ always delivers reports late ]\");\n    checkScope(\"[ { ITEL } ] [ built MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ currently has a factory in Birmingham ]\");\n    checkScope(\"[ { ITEL } ] [ delivered reports late in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ developed a new editor in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ existed in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ expanded in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ finished MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ has a factory in Birmingham ]\");\n    checkScope(\"[ { ITEL } ] [ has developed a new editor since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has expanded since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has made a loss since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has sent most of the reports Smith needs ]\");\n    checkScope(\"[ { ITEL } ] [ made a loss in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ maintains all the computers that GFI owns ]\");\n    checkScope(\"[ { ITEL } ] [ maintains them ]\");\n    checkScope(\"[ { ITEL } ] [ managed to win the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ never delivers reports late ]\");\n    checkScope(\"[ { ITEL } ] [ owned APCOM from 1988 to 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ owned APCOM in 1990 ]\");\n    checkScope(\"[ { ITEL } ] [ sent a progress report in July 1994 ]\");\n    checkScope(\"[ { ITEL } ] [ sold 3000 more computers than APCOM ]\");\n    checkScope(\"[ { ITEL } ] [ sold 5500 computers ]\");\n    checkScope(\"[ { ITEL } ] [ tried to win the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ was building MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ was winning the contract from APCOM in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won a contract in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won at least eleven orders ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM did ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM lost ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than the APCOM contract ]\");\n    checkScope(\"[ { ITEL } ] [ won more than one order ]\");\n    checkScope(\"[ { ITEL } ] [ won some orders ]\");\n    checkScope(\"[ { ITEL } ] [ won the APCOM contract ]\");\n    checkScope(\"[ { ITEL } ] [ won the contract from APCOM in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ won twenty orders ]\");\n    checkScope(\"[ { ITEL } ] [ won twice as many orders than APCOM ]\");\n    checkScope(\"[ { Itel } ] [ was in Birmingham in 1993 ]\");\n\n    checkScope(\"[ { John } ] [ bought a car ]\");\n    checkScope(\"[ { John } ] [ found Mary before Bill ]\");\n    checkScope(\"[ { John } ] [ found Mary before Bill found Mary ]\");\n    checkScope(\"[ { John } ] [ found Mary before John found Bill ]\");\n    checkScope(\"[ { John } ] [ had his paper accepted ]\");\n    checkScope(\"[ { John } ] [ has a diamond ]\");\n    checkScope(\"[ { John } ] [ has a genuine diamond ]\");\n    checkScope(\"[ { John } ] [ has spoken to Mary ]\");\n    checkScope(\"[ { John } ] [ hated the meeting ]\");\n    checkScope(\"[ { John } ] [ is a cleverer politician than Bill ]\");\n    checkScope(\"[ { John } ] [ is a fatter politician than Bill ]\");\n    checkScope(\"[ { John } ] [ is a former successful university student ]\");\n    checkScope(\"[ { John } ] [ is a former university student ]\");\n    checkScope(\"[ { John } ] [ is a man and Mary is a woman ]\");\n    checkScope(\"[ { John } ] [ is a successful former university student ]\");\n    checkScope(\"[ { John } ] [ is a university student ]\");\n    checkScope(\"[ { John } ] [ is cleverer than Bill ]\");\n    checkScope(\"[ { John } ] [ is fatter than Bill ]\");\n    checkScope(\"[ { John } ] [ is going to Paris by car, and the students by train ]\");\n    checkScope(\"[ { John } ] [ is successful ]\");\n    checkScope(\"[ { John } ] [ needed to buy a car, and Bill did ]\");\n    checkScope(\"[ { John } ] [ owns a car ]\");\n    checkScope(\"[ { John } ] [ owns a fast red car ]\");\n    checkScope(\"[ { John } ] [ owns a red car ]\");\n    checkScope(\"[ { John } ] [ represents his company and so does Mary ]\");\n    checkScope(\"[ { John } ] [ said Bill had been hurt ]\");\n    checkScope(\"[ { John } ] [ said Bill had hurt himself ]\");\n    checkScope(\"[ { John } ] [ said Bill wrote a report ]\");\n    checkScope(\"[ { John } ] [ said Mary wrote a report, and Bill did too ]\");\n    checkScope(\"[ { John } ] [ said that Mary wrote a report, and that Bill did too ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary at four o'clock ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Friday ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Monday ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Thursday ]\");\n    checkScope(\"[ { John } ] [ spoke to Sue ]\");\n    checkScope(\"[ { John } ] [ wanted to buy a car, and he did ]\");\n    checkScope(\"[ { John } ] [ wants to know how many men work part time ]\");\n    checkScope(\"[ { John } ] [ wants to know how many men work part time, and which ]\");\n    checkScope(\"[ { John } ] [ wants to know how many women work part time ]\");\n    checkScope(\"[ { John } ] [ wants to know which men work part time ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car, and Bill by train ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car, and Bill by train to Berlin ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car, and Bill to Berlin ]\");\n    checkScope(\"[ { John } ] [ wrote a report ]\");\n    checkScope(\"[ { John } ] [ wrote a report, and Bill said Peter did too ]\");\n\n    checkScope(\"[ { Jones } ] [ claimed Smith had costed Jones' proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed Smith had costed Smith's proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed he had costed Smith's proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed he had costed his own proposal ]\");\n    checkScope(\"[ { Jones } ] [ graduated in March and has been employed ever since ]\");\n    checkScope(\"[ { Jones } ] [ has a company car ]\");\n    checkScope(\"[ { Jones } ] [ has been unemployed in the past ]\");\n    checkScope(\"[ { Jones } ] [ has more than one company car ]\");\n    checkScope(\"[ { Jones } ] [ is an APCOM manager ]\");\n    checkScope(\"[ { Jones } ] [ is the chairman of ITEL ]\");\n    checkScope(\"[ { Jones } ] [ left ]\");\n    checkScope(\"[ { Jones } ] [ left after Anderson left ]\");\n    checkScope(\"[ { Jones } ] [ left after Anderson was present ]\");\n    checkScope(\"[ { Jones } ] [ left after Smith left ]\");\n    checkScope(\"[ { Jones } ] [ left before Anderson left ]\");\n    checkScope(\"[ { Jones } ] [ left before Smith left ]\");\n    checkScope(\"[ { Jones } ] [ left the meeting ]\");\n    checkScope(\"[ { Jones } ] [ represents Jones' company ]\");\n    checkScope(\"[ { Jones } ] [ represents Smith's company ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract after Smith did ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract before Smith did ]\");\n    checkScope(\"[ { Jones } ] [ signed another contract ]\");\n    checkScope(\"[ { Jones } ] [ signed the contract ]\");\n    checkScope(\"[ { Jones } ] [ signed two contracts ]\");\n    checkScope(\"[ { Jones } ] [ swam ]\");\n    checkScope(\"[ { Jones } ] [ swam after Smith swam ]\");\n    checkScope(\"[ { Jones } ] [ swam to the shore ]\");\n    checkScope(\"[ { Jones } ] [ swam to the shore after Smith swam to the shore ]\");\n    checkScope(\"[ { Jones } ] [ was present ]\");\n    checkScope(\"[ { Jones } ] [ was present after Smith was present ]\");\n    checkScope(\"[ { Jones } ] [ was present before Smith was present ]\");\n    checkScope(\"[ { Jones } ] [ was unemployed at some time before he graduated ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report after Smith was writing a report ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report before Smith was writing a report ]\");\n\n    checkScope(\"[ { Kim } ] [ is a clever person ]\");\n    checkScope(\"[ { Kim } ] [ is a clever politician ]\");\n    checkScope(\"[ { Kim } ] [ is clever ]\");\n\n    checkScope(\"[ { MFI } ] [ has a service contract for all its computers ]\");\n    checkScope(\"[ { MFI } ] [ is a customer that owns exactly one computer ]\");\n    checkScope(\"[ { MFI } ] [ is a customer that owns several computers ]\");\n\n    checkScope(\"[ { Mary } ] [ has a workstation ]\");\n    checkScope(\"[ { Mary } ] [ is a student ]\");\n    checkScope(\"[ { Mary } ] [ is female ]\");\n    checkScope(\"[ { Mary } ] [ represents John's company ]\");\n    checkScope(\"[ { Mary } ] [ represents her own company ]\");\n    checkScope(\"[ { Mary } ] [ used a workstation ]\");\n    checkScope(\"[ { Mary } ] [ used her workstation ]\");\n\n    checkScope(\"[ { Mickey } ] [ is a large animal ]\");\n    checkScope(\"[ { Mickey } ] [ is a large mouse ]\");\n    checkScope(\"[ { Mickey } ] [ is a small animal ]\");\n    checkScope(\"[ { Mickey } ] [ is larger than Dumbo ]\");\n    checkScope(\"[ { Mickey } ] [ is smaller than Dumbo ]\");\n\n    checkScope(\"[ { Pavarotti } ] [ is a leading tenor who comes cheap ]\");\n  }","commit_id":"a1b25bf0b4b58a22f05e996f6eac52fceddd491a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public void testSerialization()\n    throws Exception\n  {\n    // Test that an annotation can be serialized and deserialized\n\n    StanfordCoreNLP pipeline = new StanfordCoreNLP();\n    Annotation document = new Annotation(\"Stanford University is located in California. It is a great university.\");\n    pipeline.annotate(document);\n\n    CoreMap sentence = document.get(CoreAnnotations.SentencesAnnotation.class).get(0);\n    SemanticGraph g = sentence.get(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class);\n    processSerialization(g);\n\n    processSerialization(sentence.get(TreeCoreAnnotations.TreeAnnotation.class));\n    processSerialization(sentence.get(CoreAnnotations.TokensAnnotation.class));\n    processSerialization(sentence.get(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class));\n    processSerialization(sentence);\n\n    Object newDocument = processSerialization(document);\n    assertTrue(newDocument instanceof Annotation);\n    assertTrue(document.equals(newDocument));\n  }","id":54743,"modified_method":"public void testSerialization()\n    throws Exception\n  {\n    // Test that an annotation can be serialized and deserialized\n\n    StanfordCoreNLP pipeline = new StanfordCoreNLP();\n    Annotation document = new Annotation(\"Stanford University is located in California. It is a great university.\");\n    pipeline.annotate(document);\n\n    CoreMap sentence = document.get(CoreAnnotations.SentencesAnnotation.class).get(0);\n    SemanticGraph g = sentence.get(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class);\n    processSerialization(g);\n\n    processSerialization(sentence.get(TreeCoreAnnotations.TreeAnnotation.class));\n    processSerialization(sentence.get(CoreAnnotations.TokensAnnotation.class));\n    processSerialization(sentence.get(SemanticGraphCoreAnnotations.BasicDependenciesAnnotation.class));\n    processSerialization(sentence);\n\n    Object processed = processSerialization(document);\n    assertTrue(processed instanceof Annotation);\n    Annotation newDocument = (Annotation) processed;\n    assertEquals(document.get(CoreAnnotations.SentencesAnnotation.class).size(),\n                 newDocument.get(CoreAnnotations.SentencesAnnotation.class).size());\n    for (int i = 0; i < document.get(CoreAnnotations.SentencesAnnotation.class).size(); ++i) {\n      CoreMap oldSentence = document.get(CoreAnnotations.SentencesAnnotation.class).get(0);\n      CoreMap newSentence = newDocument.get(CoreAnnotations.SentencesAnnotation.class).get(0);\n      assertEquals(oldSentence.get(TreeCoreAnnotations.TreeAnnotation.class),\n                   newSentence.get(TreeCoreAnnotations.TreeAnnotation.class));\n      assertEquals(oldSentence.get(CoreAnnotations.TokensAnnotation.class),\n                   newSentence.get(CoreAnnotations.TokensAnnotation.class));\n    }\n    assertTrue(document.equals(newDocument));\n  }","commit_id":"a1b25bf0b4b58a22f05e996f6eac52fceddd491a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Compute the span for a given matched pattern.\n   * At a high level:\n   *\n   * <ul>\n   *   <li>If both a subject and an object exist, we take the subject minus the quantifier, and the object plus the pivot. <\/li>\n   *   <li>If only an object exists, we make the subject the object, and create a dummy object to signify a one-place quantifier. <\/li>\n   * <\/ul>\n   *\n   * But:\n   *\n   * <ul>\n   *   <li>If we have a two-place quantifier, the object is allowed to absorb various specific arcs from the pivot.<\/li>\n   *   <li>If we have a one-place quantifier, the object is allowed to absorb only prepositions from the pivot.<\/li>\n   * <\/ul>\n   */\n  private OperatorSpec computeScope(SemanticGraph tree, Operator operator,\n                                    IndexedWord pivot, Pair<Integer, Integer> quantifierSpan,\n                                    IndexedWord subject, IndexedWord object) {\n    Pair<Integer, Integer> subjSpan;\n    Pair<Integer, Integer> objSpan;\n    if (subject != null) {\n      Pair<Integer, Integer> subjectSubtree = getSubtreeSpan(tree, subject);\n      subjSpan = excludeFromSpan(subjectSubtree, quantifierSpan);\n      objSpan = excludeFromSpan(includeInSpan(getSubtreeSpan(tree, object), getModifierSubtreeSpan(tree, pivot)), subjectSubtree);\n    } else {\n      subjSpan = includeInSpan(getSubtreeSpan(tree, object), getGeneralizedSubtreeSpan(tree, pivot, Collections.singleton(\"prep\")));\n      objSpan = Pair.makePair(subjSpan.second, subjSpan.second);\n    }\n    return new OperatorSpec(operator,\n        quantifierSpan.first - 1, quantifierSpan.second - 1,\n        subjSpan.first - 1, subjSpan.second - 1,\n        objSpan.first - 1, objSpan.second - 1);\n  }","id":54744,"modified_method":"/**\n   * Compute the span for a given matched pattern.\n   * At a high level:\n   *\n   * <ul>\n   *   <li>If both a subject and an object exist, we take the subject minus the quantifier, and the object plus the pivot. <\/li>\n   *   <li>If only an object exists, we make the subject the object, and create a dummy object to signify a one-place quantifier. <\/li>\n   *   <li>If neither the subject or object exist, the pivot is the subject and there is no object. <\/li>\n   * <\/ul>\n   *\n   * But:\n   *\n   * <ul>\n   *   <li>If we have a two-place quantifier, the object is allowed to absorb various specific arcs from the pivot.<\/li>\n   *   <li>If we have a one-place quantifier, the object is allowed to absorb only prepositions from the pivot.<\/li>\n   * <\/ul>\n   */\n  private OperatorSpec computeScope(SemanticGraph tree, Operator operator,\n                                    IndexedWord pivot, Pair<Integer, Integer> quantifierSpan,\n                                    IndexedWord subject, IndexedWord object) {\n    Pair<Integer, Integer> subjSpan;\n    Pair<Integer, Integer> objSpan;\n    if (subject == null && object == null) {\n      subjSpan = getSubtreeSpan(tree, pivot);\n      objSpan = Pair.makePair(subjSpan.second, subjSpan.second);\n    } else if (subject == null) {\n      subjSpan = includeInSpan(getSubtreeSpan(tree, object), getGeneralizedSubtreeSpan(tree, pivot, Collections.singleton(\"prep\")));\n      objSpan = Pair.makePair(subjSpan.second, subjSpan.second);\n    } else {\n      Pair<Integer, Integer> subjectSubtree = getSubtreeSpan(tree, subject);\n      subjSpan = excludeFromSpan(subjectSubtree, quantifierSpan);\n      objSpan = excludeFromSpan(includeInSpan(getSubtreeSpan(tree, object), getModifierSubtreeSpan(tree, pivot)), subjectSubtree);\n    }\n    return new OperatorSpec(operator,\n        quantifierSpan.first - 1, quantifierSpan.second - 1,\n        subjSpan.first - 1, subjSpan.second - 1,\n        objSpan.first - 1, objSpan.second - 1);\n  }","commit_id":"c17aef92688bfa24a91735ae741315bf12e93f3d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithBinaryNo() {\n    checkScope(\"{ No } [ Scandinavian delegate ] [ finished the report on time ]\");\n    checkScope(\"{ No } [ accountant ] [ attended the meeting ]\");\n    checkScope(\"{ No } [ accountants ] [ attended the meeting ]\");\n    checkScope(\"{ No } [ delegate ] [ finished the report ]\");\n    checkScope(\"{ No } [ really great tenors ] [ are modest ]\");\n    checkScope(\"{ No } [ representative ] [ took less than half a day to read the report ]\");\n    checkScope(\"{ No } [ student ] [ used her workstation ]\");\n    checkScope(\"{ No } [ two representatives ] [ have read it at the same time ]\");\n    checkScope(\"{ No } [ delegate ] [ finished the report on time ]\");\n  }","id":54745,"modified_method":"@Test\n  public void fracasSentencesWithBinaryNo() {\n    checkScope(\"{ No } [ Scandinavian delegate ] [ finished the report on time ]\");\n    checkScope(\"{ No } [ accountant ] [ attended the meeting ]\");\n    checkScope(\"{ No } [ accountants ] [ attended the meeting ]\");\n    checkScope(\"{ No } [ delegate ] [ finished the report ]\");\n    checkScope(\"{ No } [ really great tenors ] [ are modest ]\");\n//    checkScope(\"{ No } [ representative ] [ took less than half a day to read the report ]\");  // TODO(gabor) vmod issue again\n    checkScope(\"{ No } [ student ] [ used her workstation ]\");\n    checkScope(\"{ No } [ two representatives ] [ have read it at the same time ]\");\n    checkScope(\"{ No } [ delegate ] [ finished the report on time ]\");\n  }","commit_id":"c17aef92688bfa24a91735ae741315bf12e93f3d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithThereAre() {\n    checkScope(\"{ There are } [ 100 companies ]\");\n    checkScope(\"{ There are } [ Italian men ] [ who want to be a great tenor ]\");\n    checkScope(\"{ There are } [ Italian tenors ] [ who want to be great ]\");\n    checkScope(\"{ There are } [ few committee members ] [ from Portugal ]\");\n    checkScope(\"{ There are } [ few committee members ] [ from southern Europe ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who are British ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who are German ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who are Italian ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who are Swedish ]\");\n    checkScope(\"{ There are } [ great tenors ] [ who sing popular music ]\");\n    checkScope(\"{ There are } [ really ambitious tenors ] [ who are Italian ]\");\n    checkScope(\"{ There are } [ really great tenors ] [ who are modest ]\");\n    checkScope(\"{ There are } [ sixteen representatives ]\");\n    checkScope(\"{ There are } [ some reports from ITEL on Smith's desk ]\");\n    checkScope(\"{ There are } [ tenors ] [ who will take part in the concert ]\");\n\n    checkScope(\"{ There is } [ a car ] [ that John and Bill own ]\");\n    checkScope(\"{ There is } [ someone ] [ whom Helen saw answer the phone ]\");\n\n    checkScope(\"{ There was } [ a group of people ] [ that met ]\");\n    checkScope(\"{ There was } [ an Italian ] [ who became the world's greatest tenor ]\");\n    checkScope(\"{ There was } [ one auditor ] [ who signed all the reports ]\");\n  }","id":54746,"modified_method":"@Test\n  public void fracasSentencesWithThereAre() {\n    checkScope(\"{ There are } [ 100 companies ]\");\n    checkScope(\"{ There are } [ Italian men who want to be a great tenor ]\");\n    checkScope(\"{ There are } [ Italian tenors who want to be great ]\");\n    checkScope(\"{ There are } [ few committee members from Portugal ]\");\n    checkScope(\"{ There are } [ few committee members from southern Europe ]\");\n    checkScope(\"{ There are } [ great tenors who are British ]\");\n    checkScope(\"{ There are } [ great tenors who are German ]\");\n    checkScope(\"{ There are } [ great tenors who are Italian ]\");\n    checkScope(\"{ There are } [ great tenors who are Swedish ]\");\n    checkScope(\"{ There are } [ great tenors who sing popular music ]\");\n//    checkScope(\"{ There are } [ really ambitious tenors who are Italian ]\");  // TODO(gabor) parse error on are -advmod-> really\n//    checkScope(\"{ There are } [ really great tenors who are modest ]\");       // TODO(gabor) as above\n    checkScope(\"{ There are } [ sixteen representatives ]\");\n    checkScope(\"{ There are } [ some reports from ITEL on Smith 's desk ]\");\n    checkScope(\"{ There are } [ tenors who will take part in the concert ]\");\n\n    checkScope(\"{ There is } [ a car that John and Bill own ]\");\n    checkScope(\"{ There is } [ someone whom Helen saw answer the phone ]\");\n\n    checkScope(\"{ There was } [ a group of people that met ]\");\n    checkScope(\"{ There was } [ an Italian who became the world 's greatest tenor ]\");\n    checkScope(\"{ There was } [ one auditor who signed all the reports ]\");\n  }","commit_id":"c17aef92688bfa24a91735ae741315bf12e93f3d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@SuppressWarnings({\"UnusedDeclaration\", \"UnusedAssignment\"})\n  private void checkScope(String spec) {\n    String[] terms = spec.split(\"\\\\s+\");\n    int quantStart = -1;\n    int quantEnd = -1;\n    int subjBegin = -1;\n    int subjEnd = -1;\n    int objBegin = -1;\n    int objEnd = -1;\n    boolean seenSubj = false;\n    int tokenIndex = 0;\n    List<String> cleanSentence = new ArrayList<>();\n    for (String term : terms) {\n      switch (term) {\n        case \"{\":\n          quantStart = tokenIndex;\n          break;\n        case \"}\":\n          quantEnd = tokenIndex;\n          break;\n        case \"[\":\n          if (!seenSubj) {\n            subjBegin = tokenIndex;\n          } else {\n            objBegin = tokenIndex;\n          }\n          break;\n        case \"]\":\n          if (!seenSubj) {\n            subjEnd = tokenIndex;\n            seenSubj = true;\n          } else {\n            objEnd = tokenIndex;\n          }\n          break;\n        default:\n          cleanSentence.add(term);\n          tokenIndex += 1;\n          break;\n      }\n    }\n    Optional<OperatorSpec>[] scopes = annotate(StringUtils.join(cleanSentence, \" \"));\n    System.err.println(\"Checking [@ \" + (quantEnd - 1) + \"]:  \" + spec);\n    if (objBegin >= 0 && objEnd >= 0) {\n      checkScope(subjBegin, subjEnd, objBegin, scopes.length, scopes[quantEnd - 1]);\n    } else {\n      checkScope(subjBegin, subjEnd, scopes[quantEnd - 1]);\n    }\n  }","id":54747,"modified_method":"private void checkScope(String spec) {\n    String[] terms = spec.split(\"\\\\s+\");\n//    int quantStart = -1;\n    int quantEnd = -1;\n    int subjBegin = -1;\n    int subjEnd = -1;\n    int objBegin = -1;\n    int objEnd = -1;\n    boolean seenSubj = false;\n    int tokenIndex = 0;\n    List<String> cleanSentence = new ArrayList<>();\n    for (String term : terms) {\n      switch (term) {\n        case \"{\":\n//          quantStart = tokenIndex;\n          break;\n        case \"}\":\n          quantEnd = tokenIndex;\n          break;\n        case \"[\":\n          if (!seenSubj) {\n            subjBegin = tokenIndex;\n          } else {\n            objBegin = tokenIndex;\n          }\n          break;\n        case \"]\":\n          if (!seenSubj) {\n            subjEnd = tokenIndex;\n            seenSubj = true;\n          } else {\n            objEnd = tokenIndex;\n          }\n          break;\n        default:\n          cleanSentence.add(term);\n          tokenIndex += 1;\n          break;\n      }\n    }\n    Optional<OperatorSpec>[] scopes = annotate(StringUtils.join(cleanSentence, \" \"));\n    System.err.println(\"Checking [@ \" + (quantEnd - 1) + \"]:  \" + spec);\n    if (objBegin >= 0 && objEnd >= 0) {\n      checkScope(subjBegin, subjEnd, objBegin, objEnd, scopes[quantEnd - 1]);\n    } else {\n      checkScope(subjBegin, subjEnd, scopes[quantEnd - 1]);\n    }\n  }","commit_id":"c17aef92688bfa24a91735ae741315bf12e93f3d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithBinaryNoOne() {\n    checkScope(\"{ No one } [ can gamble when he is broke ]\");\n    checkScope(\"{ No one } [ gambling seriously ] [ stops until he is broke ]\");\n    checkScope(\"{ No one } [ who starts gambling seriously ] [ stops until he is broke ]\");\n\n    checkScope(\"{ Nobody } [ who is asleep ] [ ever knows that he is asleep ]\");\n  }","id":54748,"modified_method":"@Test\n  public void fracasSentencesWithBinaryNoOne() {\n    // Ignore \"no one\" for now.\n//    checkScope(\"{ No one } [ can gamble ] [ when he is broke ]\");  // interesting: subject object reversal (we of course don't actually get this...)\n//    checkScope(\"{ No one } [ gambling seriously ] [ stops until he is broke ]\");\n//    checkScope(\"{ No one } [ who starts gambling seriously ] [ stops until he is broke ]\");\n\n    checkScope(\"{ Nobody } [ who is asleep ] [ ever knows that he is asleep ]\");\n  }","commit_id":"c17aef92688bfa24a91735ae741315bf12e93f3d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  public void fracasSentencesWithA() {\n    checkScope(\"{ A } [ Scandinavian ] [ won a Nobel prize ]\");\n    checkScope(\"{ A } [ Swede ] [ won a Nobel prize ]\");\n    checkScope(\"{ A } [ company director ] [ awarded himself a large payrise ]\");\n    checkScope(\"{ A } [ company director ] [ has awarded and been awarded a payrise ]\");\n    checkScope(\"{ A } [ lawyer ] [ signed every report ]\");\n\n    checkScope(\"{ An } [ Irishman ] [ won a Nobel prize ]\");\n    checkScope(\"{ An } [ Irishman ] [ won the Nobel prize for literature ]\");\n    checkScope(\"{ An } [ Italian ] [ became the world's greatest tenor ]\");\n  }","id":54749,"modified_method":"@Test\n  public void fracasSentencesWithA() {\n    checkScope(\"{ A } [ Scandinavian ] [ won a Nobel prize ]\");\n    checkScope(\"{ A } [ Swede ] [ won a Nobel prize ]\");\n    checkScope(\"{ A } [ company director ] [ awarded himself a large payrise ]\");\n    checkScope(\"{ A } [ company director ] [ has awarded and been awarded a payrise ]\");\n    checkScope(\"{ A } [ lawyer ] [ signed every report ]\");\n\n    checkScope(\"{ An } [ Irishman ] [ won a Nobel prize ]\");\n    checkScope(\"{ An } [ Irishman ] [ won the Nobel prize for literature ]\");\n    checkScope(\"{ An } [ Italian ] [ became the world 's greatest tenor ]\");\n  }","commit_id":"c17aef92688bfa24a91735ae741315bf12e93f3d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithThe() {\n    checkScope(\"{ The } [ Ancient Greeks ] [ were all noted philosophers ]\");\n    checkScope(\"{ The } [ Ancient Greeks ] [ were noted philosophers ]\");\n    checkScope(\"{ The } [ ITEL-XZ  ] [is fast ]\");\n    checkScope(\"{ The } [ ITEL-ZX ] [ is an ITEL computer ]\");\n    checkScope(\"{ The } [ ITEL-ZX ] [ is slower than 500 MIPS ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is as fast as the ITEL-XZ ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is fast ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than 500 MIPS ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than any ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than every ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than some ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-XZ ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX and the ITEL-ZY ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX or the ITEL-ZY ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is slow ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is slower than the ITEL-XZ ]\");\n    checkScope(\"{ The } [ chairman of the department ] [ is a person ]\");\n    checkScope(\"{ The } [ chairman ] [ read out every item on the agenda ]\");\n    checkScope(\"{ The } [ chairman ] [ read out the items on the agenda ]\");\n    checkScope(\"{ The } [ conference ] [ started on July 4th, 1994 ]\");\n    checkScope(\"{ The } [ conference ] [ was over on July 8th, 1994 ]\");\n    checkScope(\"{ The } [ inhabitants of Cambridge ] [ voted for a Labour MP ]\");\n    checkScope(\"{ The } [ people who were at the meeting ] [ all voted for a new chairman ]\");\n    checkScope(\"{ The } [ people who were at the meeting ] [ voted for a new chairman ]\");\n    checkScope(\"{ The } [ really ambitious tenors ] [ are Italian ]\");\n    checkScope(\"{ The } [ residents of major western countries ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of major western countries ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ have the right to live anywhere in Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ residents of western countries ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of western countries ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ sales department ] [ rents a line from BT ]\");\n    checkScope(\"{ The } [ sales department ] [ rents it from BT ]\");\n    checkScope(\"{ The } [ students ] [ are going to Paris by train ]\");\n    checkScope(\"{ The } [ students ] [ have spoken to Mary ]\");\n    checkScope(\"{ The } [ system failure ] [ was blamed on one or more software faults ]\");\n  }","id":54750,"modified_method":"@Test\n  public void fracasSentencesWithThe() {\n    checkScope(\"{ The } [ Ancient Greeks ] [ were all noted philosophers ]\");\n    checkScope(\"{ The } [ Ancient Greeks ] [ were noted philosophers ]\");\n    checkScope(\"{ The } [ ITEL-XZ ] [ is fast ]\");\n    checkScope(\"{ The } [ ITEL-ZX ] [ is an ITEL computer ]\");\n    checkScope(\"{ The } [ ITEL-ZX ] [ is slower than 500 MIPS ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is as fast as the ITEL-XZ ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is fast ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than 500 MIPS ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than any ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than every ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than some ITEL computer ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-XZ ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX and the ITEL-ZY ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is faster than the ITEL-ZX or the ITEL-ZY ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is slow ]\");\n    checkScope(\"{ The } [ PC-6082 ] [ is slower than the ITEL-XZ ]\");\n    checkScope(\"{ The } [ chairman of the department ] [ is a person ]\");\n    checkScope(\"{ The } [ chairman ] [ read out every item on the agenda ]\");\n    checkScope(\"{ The } [ chairman ] [ read out the items on the agenda ]\");\n    checkScope(\"{ The } [ conference ] [ started on July 4th , 1994 ]\");\n    checkScope(\"{ The } [ conference ] [ was over on July 8th , 1994 ]\");\n    checkScope(\"{ The } [ inhabitants of Cambridge ] [ voted for a Labour MP ]\");\n//    checkScope(\"{ The } [ people who were at the meeting ] [ all voted for a new chairman ]\");  // TODO(gabor) Parse error on \"meeting -dep-> all\"\n    checkScope(\"{ The } [ people who were at the meeting ] [ voted for a new chairman ]\");\n    checkScope(\"{ The } [ really ambitious tenors ] [ are Italian ]\");\n    checkScope(\"{ The } [ residents of major western countries ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of major western countries ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ have the right to live anywhere in Europe ]\");\n    checkScope(\"{ The } [ residents of member states ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ residents of western countries ] [ can travel freely within Europe ]\");\n    checkScope(\"{ The } [ residents of western countries ] [ have the right to live in Europe ]\");\n    checkScope(\"{ The } [ sales department ] [ rents a line from BT ]\");\n    checkScope(\"{ The } [ sales department ] [ rents it from BT ]\");\n    checkScope(\"{ The } [ students ] [ are going to Paris by train ]\");\n    checkScope(\"{ The } [ students ] [ have spoken to Mary ]\");\n    checkScope(\"{ The } [ system failure ] [ was blamed on one or more software faults ]\");\n  }","commit_id":"c17aef92688bfa24a91735ae741315bf12e93f3d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithSome() {\n    checkScope(\"{ Some } [ Irish delegates ] [ finished the survey on time ]\");\n    checkScope(\"{ Some } [ Italian men ] [ are great tenors ]\");\n    checkScope(\"{ Some } [ Italian tenors ] [ are great ]\");\n    checkScope(\"{ Some } [ Scandinavian delegate ] [ finished the report on time ]\");\n    checkScope(\"{ Some } [ accountant ] [ attended the meeting ]\");\n    checkScope(\"{ Some } [ accountants ] [ attended the meeting ]\");\n    checkScope(\"{ Some } [ delegate ] [ finished the report on time ]\");\n    checkScope(\"{ Some } [ delegates ] [ finished the survey ]\");\n    checkScope(\"{ Some } [ delegates ] [ finished the survey on time ]\");\n    checkScope(\"{ Some } [ great tenors ] [ are Swedish ]\");\n    checkScope(\"{ Some } [ great tenors ] [ like popular music ]\");\n    checkScope(\"{ Some } [ people ] [ discover that they have been asleep ]\");\n  }","id":54751,"modified_method":"@Test\n  public void fracasSentencesWithSome() {\n    checkScope(\"{ Some } [ Irish delegates ] [ finished the survey on time ]\");\n    checkScope(\"{ Some } [ Italian men ] [ are great tenors ]\");\n    checkScope(\"{ Some } [ Italian tenors ] [ are great ]\");\n    checkScope(\"{ Some } [ Scandinavian delegate ] [ finished the report on time ]\");\n    checkScope(\"{ Some } [ accountant ] [ attended the meeting ]\");\n    checkScope(\"{ Some } [ accountants ] [ attended the meeting ]\");\n    checkScope(\"{ Some } [ delegate ] [ finished the report on time ]\");\n    checkScope(\"{ Some } [ delegates ] [ finished the survey ]\");\n    checkScope(\"{ Some } [ delegates ] [ finished the survey on time ]\");\n    checkScope(\"{ Some } [ great tenors ] [ are Swedish ]\");\n//    checkScope(\"{ Some } [ great tenors ] [ like popular music ]\");  // parse error\n    checkScope(\"{ Some } [ people ] [ discover that they have been asleep ]\");\n  }","commit_id":"c17aef92688bfa24a91735ae741315bf12e93f3d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithPureNumbers() {\n    checkScope(\"{ Eight } [ machines ] [ have been removed ]\");\n\n    checkScope(\"{ Five } [ men ] [ work part time ]\");\n    checkScope(\"{ Forty five } [ women ] [ work part time ]\");\n\n    checkScope(\"{ Six } [ accountants ] [ signed the contract ]\");\n    checkScope(\"{ Six } [ lawyers ] [ signed the contract ]\");\n\n    checkScope(\"{ Ten } [ machines ] [ were here yesterday ]\");\n\n    checkScope(\"{ Twenty } [ men ] [ work in the Sales Department ]\");\n    checkScope(\"{ Two } [ machines ] [ have been removed ]\");\n    checkScope(\"{ Two } [ women ] [ work in the Sales Department ]\");\n  }","id":54752,"modified_method":"@Test\n  public void fracasSentencesWithPureNumbers() {\n    checkScope(\"{ Eight } [ machines ] [ have been removed ]\");\n\n    checkScope(\"{ Five } [ men ] [ work part time ]\");\n    checkScope(\"{ Forty five } [ women ] [ work part time ]\");\n\n    checkScope(\"{ Six } [ accountants ] [ signed the contract ]\");\n    checkScope(\"{ Six } [ lawyers ] [ signed the contract ]\");\n\n//    checkScope(\"{ Ten } [ machines ] [ were here yesterday ]\");  // TODO(gabor) yesterday doesn't come into scope\n\n    checkScope(\"{ Twenty } [ men ] [ work in the Sales Department ]\");\n    checkScope(\"{ Two } [ machines ] [ have been removed ]\");\n    checkScope(\"{ Two } [ women ] [ work in the Sales Department ]\");\n  }","commit_id":"c17aef92688bfa24a91735ae741315bf12e93f3d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithEither() {\n    checkScope(\"{ Either } [ Smith, Jones or Anderson ] [ signed the contract ]\");\n  }","id":54753,"modified_method":"@Test\n  public void fracasSentencesWithEither() {\n    checkScope(\"{ Either } [ Smith Jones or Anderson ] [ signed the contract ]\");\n  }","commit_id":"c17aef92688bfa24a91735ae741315bf12e93f3d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithMost() {\n    checkScope(\"{ Most } [ Europeans ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ Europeans who are resident in Europe ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ Europeans who are resident outside Europe ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ clients ] [ at the demonstration were impressed by the system's performance ]\");\n    checkScope(\"{ Most } [ companies that own a computer ] [ have a service contract for it ]\");\n    checkScope(\"{ Most } [ great tenors ] [ are Italian ]\");\n  }","id":54754,"modified_method":"@Test\n  public void fracasSentencesWithMost() {\n    checkScope(\"{ Most } [ Europeans ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ Europeans who are resident in Europe ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ Europeans who are resident outside Europe ] [ can travel freely within Europe ]\");\n    checkScope(\"{ Most } [ clients at the demonstration ] [ were impressed by the system 's performance ]\");\n    checkScope(\"{ Most } [ companies that own a computer ] [ have a service contract for it ]\");\n    checkScope(\"{ Most } [ great tenors ] [ are Italian ]\");\n  }","commit_id":"c17aef92688bfa24a91735ae741315bf12e93f3d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Ignore\n  @Test\n  public void fracasSentencesWithProperNouns() {\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL ]\");\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL has ]\");\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL is ]\");\n    checkScope(\"[ { APCOM } ] [ has been paying mortgage interest for a total of 15 years or more ]\");\n    checkScope(\"[ { APCOM } ] [ lost some orders ]\");\n    checkScope(\"[ { APCOM } ] [ lost ten orders ]\");\n    checkScope(\"[ { APCOM } ] [ signed the contract Friday, 13th ]\");\n    checkScope(\"[ { APCOM } ] [ sold exactly 2500 computers ]\");\n    checkScope(\"[ { APCOM } ] [ won some orders ]\");\n    checkScope(\"[ { APCOM } ] [ won ten orders ]\");\n\n    checkScope(\"[ { Bill } ] [ bought a car ]\");\n    checkScope(\"[ { Bill } ] [ has spoken to Mary ]\");\n    checkScope(\"[ { Bill } ] [ is going to ]\");\n    checkScope(\"[ { Bill } ] [ knows why John had his paper accepted ]\");\n    checkScope(\"[ { Bill } ] [ owns a blue car ]\");\n    checkScope(\"[ { Bill } ] [ owns a blue one ]\");\n    checkScope(\"[ { Bill } ] [ owns a car ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast car ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast one ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast red car ]\");\n    checkScope(\"[ { Bill } ] [ owns a red car ]\");\n    checkScope(\"[ { Bill } ] [ owns a slow one ]\");\n    checkScope(\"[ { Bill } ] [ owns a slow red car ]\");\n    checkScope(\"[ { Bill } ] [ said Mary wrote a report ]\");\n    checkScope(\"[ { Bill } ] [ said Peter wrote a report ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary at five o'clock ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary at four o'clock ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary on Monday ]\");\n    checkScope(\"[ { Bill } ] [ spoke to everyone that John did ]\");\n    checkScope(\"[ { Bill } ] [ suggested to Frank's boss that they should go to the meeting together, and Carl to Alan's wife ]\");\n    checkScope(\"[ { Bill } ] [ went to Berlin by car ]\");\n    checkScope(\"[ { Bill } ] [ went to Berlin by train ]\");\n    checkScope(\"[ { Bill } ] [ went to Paris by train ]\");\n    checkScope(\"[ { Bill } ] [ will speak to Mary ]\");\n    checkScope(\"[ { Bill } ] [ wrote a report ]\");\n\n    checkScope(\"[ { Dumbo } ] [ is a four-legged animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a large animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a small animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a small elephant ]\");\n    checkScope(\"[ { Dumbo } ] [ is four-legged ]\");\n    checkScope(\"[ { Dumbo } ] [ is larger than Mickey ]\");\n\n    checkScope(\"[ { GFI } ] [ owns several computers ]\");\n\n    checkScope(\"[ { Helen } ] [ saw the chairman of the department answer the phone ]\");\n\n    checkScope(\"[ { ICM } ] [ is one of the companies and owns 150 computers ]\");\n\n    checkScope(\"[ { ITEL } ] [ always delivers reports late ]\");\n    checkScope(\"[ { ITEL } ] [ built MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ currently has a factory in Birmingham ]\");\n    checkScope(\"[ { ITEL } ] [ delivered reports late in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ developed a new editor in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ existed in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ expanded in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ finished MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ has a factory in Birmingham ]\");\n    checkScope(\"[ { ITEL } ] [ has developed a new editor since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has expanded since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has made a loss since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has sent most of the reports Smith needs ]\");\n    checkScope(\"[ { ITEL } ] [ made a loss in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ maintains all the computers that GFI owns ]\");\n    checkScope(\"[ { ITEL } ] [ maintains them ]\");\n    checkScope(\"[ { ITEL } ] [ managed to win the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ never delivers reports late ]\");\n    checkScope(\"[ { ITEL } ] [ owned APCOM from 1988 to 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ owned APCOM in 1990 ]\");\n    checkScope(\"[ { ITEL } ] [ sent a progress report in July 1994 ]\");\n    checkScope(\"[ { ITEL } ] [ sold 3000 more computers than APCOM ]\");\n    checkScope(\"[ { ITEL } ] [ sold 5500 computers ]\");\n    checkScope(\"[ { ITEL } ] [ tried to win the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ was building MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ was winning the contract from APCOM in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won a contract in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won at least eleven orders ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM did ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM lost ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than the APCOM contract ]\");\n    checkScope(\"[ { ITEL } ] [ won more than one order ]\");\n    checkScope(\"[ { ITEL } ] [ won some orders ]\");\n    checkScope(\"[ { ITEL } ] [ won the APCOM contract ]\");\n    checkScope(\"[ { ITEL } ] [ won the contract from APCOM in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ won twenty orders ]\");\n    checkScope(\"[ { ITEL } ] [ won twice as many orders than APCOM ]\");\n    checkScope(\"[ { Itel } ] [ was in Birmingham in 1993 ]\");\n\n    checkScope(\"[ { John } ] [ bought a car ]\");\n    checkScope(\"[ { John } ] [ found Mary before Bill ]\");\n    checkScope(\"[ { John } ] [ found Mary before Bill found Mary ]\");\n    checkScope(\"[ { John } ] [ found Mary before John found Bill ]\");\n    checkScope(\"[ { John } ] [ had his paper accepted ]\");\n    checkScope(\"[ { John } ] [ has a diamond ]\");\n    checkScope(\"[ { John } ] [ has a genuine diamond ]\");\n    checkScope(\"[ { John } ] [ has spoken to Mary ]\");\n    checkScope(\"[ { John } ] [ hated the meeting ]\");\n    checkScope(\"[ { John } ] [ is a cleverer politician than Bill ]\");\n    checkScope(\"[ { John } ] [ is a fatter politician than Bill ]\");\n    checkScope(\"[ { John } ] [ is a former successful university student ]\");\n    checkScope(\"[ { John } ] [ is a former university student ]\");\n    checkScope(\"[ { John } ] [ is a man and Mary is a woman ]\");\n    checkScope(\"[ { John } ] [ is a successful former university student ]\");\n    checkScope(\"[ { John } ] [ is a university student ]\");\n    checkScope(\"[ { John } ] [ is cleverer than Bill ]\");\n    checkScope(\"[ { John } ] [ is fatter than Bill ]\");\n    checkScope(\"[ { John } ] [ is going to Paris by car, and the students by train ]\");\n    checkScope(\"[ { John } ] [ is successful ]\");\n    checkScope(\"[ { John } ] [ needed to buy a car, and Bill did ]\");\n    checkScope(\"[ { John } ] [ owns a car ]\");\n    checkScope(\"[ { John } ] [ owns a fast red car ]\");\n    checkScope(\"[ { John } ] [ owns a red car ]\");\n    checkScope(\"[ { John } ] [ represents his company and so does Mary ]\");\n    checkScope(\"[ { John } ] [ said Bill had been hurt ]\");\n    checkScope(\"[ { John } ] [ said Bill had hurt himself ]\");\n    checkScope(\"[ { John } ] [ said Bill wrote a report ]\");\n    checkScope(\"[ { John } ] [ said Mary wrote a report, and Bill did too ]\");\n    checkScope(\"[ { John } ] [ said that Mary wrote a report, and that Bill did too ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary at four o'clock ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Friday ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Monday ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Thursday ]\");\n    checkScope(\"[ { John } ] [ spoke to Sue ]\");\n    checkScope(\"[ { John } ] [ wanted to buy a car, and he did ]\");\n    checkScope(\"[ { John } ] [ wants to know how many men work part time ]\");\n    checkScope(\"[ { John } ] [ wants to know how many men work part time, and which ]\");\n    checkScope(\"[ { John } ] [ wants to know how many women work part time ]\");\n    checkScope(\"[ { John } ] [ wants to know which men work part time ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car, and Bill by train ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car, and Bill by train to Berlin ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car, and Bill to Berlin ]\");\n    checkScope(\"[ { John } ] [ wrote a report ]\");\n    checkScope(\"[ { John } ] [ wrote a report, and Bill said Peter did too ]\");\n\n    checkScope(\"[ { Jones } ] [ claimed Smith had costed Jones' proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed Smith had costed Smith's proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed he had costed Smith's proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed he had costed his own proposal ]\");\n    checkScope(\"[ { Jones } ] [ graduated in March and has been employed ever since ]\");\n    checkScope(\"[ { Jones } ] [ has a company car ]\");\n    checkScope(\"[ { Jones } ] [ has been unemployed in the past ]\");\n    checkScope(\"[ { Jones } ] [ has more than one company car ]\");\n    checkScope(\"[ { Jones } ] [ is an APCOM manager ]\");\n    checkScope(\"[ { Jones } ] [ is the chairman of ITEL ]\");\n    checkScope(\"[ { Jones } ] [ left ]\");\n    checkScope(\"[ { Jones } ] [ left after Anderson left ]\");\n    checkScope(\"[ { Jones } ] [ left after Anderson was present ]\");\n    checkScope(\"[ { Jones } ] [ left after Smith left ]\");\n    checkScope(\"[ { Jones } ] [ left before Anderson left ]\");\n    checkScope(\"[ { Jones } ] [ left before Smith left ]\");\n    checkScope(\"[ { Jones } ] [ left the meeting ]\");\n    checkScope(\"[ { Jones } ] [ represents Jones' company ]\");\n    checkScope(\"[ { Jones } ] [ represents Smith's company ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract after Smith did ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract before Smith did ]\");\n    checkScope(\"[ { Jones } ] [ signed another contract ]\");\n    checkScope(\"[ { Jones } ] [ signed the contract ]\");\n    checkScope(\"[ { Jones } ] [ signed two contracts ]\");\n    checkScope(\"[ { Jones } ] [ swam ]\");\n    checkScope(\"[ { Jones } ] [ swam after Smith swam ]\");\n    checkScope(\"[ { Jones } ] [ swam to the shore ]\");\n    checkScope(\"[ { Jones } ] [ swam to the shore after Smith swam to the shore ]\");\n    checkScope(\"[ { Jones } ] [ was present ]\");\n    checkScope(\"[ { Jones } ] [ was present after Smith was present ]\");\n    checkScope(\"[ { Jones } ] [ was present before Smith was present ]\");\n    checkScope(\"[ { Jones } ] [ was unemployed at some time before he graduated ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report after Smith was writing a report ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report before Smith was writing a report ]\");\n\n    checkScope(\"[ { Kim } ] [ is a clever person ]\");\n    checkScope(\"[ { Kim } ] [ is a clever politician ]\");\n    checkScope(\"[ { Kim } ] [ is clever ]\");\n\n    checkScope(\"[ { MFI } ] [ has a service contract for all its computers ]\");\n    checkScope(\"[ { MFI } ] [ is a customer that owns exactly one computer ]\");\n    checkScope(\"[ { MFI } ] [ is a customer that owns several computers ]\");\n\n    checkScope(\"[ { Mary } ] [ has a workstation ]\");\n    checkScope(\"[ { Mary } ] [ is a student ]\");\n    checkScope(\"[ { Mary } ] [ is female ]\");\n    checkScope(\"[ { Mary } ] [ represents John's company ]\");\n    checkScope(\"[ { Mary } ] [ represents her own company ]\");\n    checkScope(\"[ { Mary } ] [ used a workstation ]\");\n    checkScope(\"[ { Mary } ] [ used her workstation ]\");\n\n    checkScope(\"[ { Mickey } ] [ is a large animal ]\");\n    checkScope(\"[ { Mickey } ] [ is a large mouse ]\");\n    checkScope(\"[ { Mickey } ] [ is a small animal ]\");\n    checkScope(\"[ { Mickey } ] [ is larger than Dumbo ]\");\n    checkScope(\"[ { Mickey } ] [ is smaller than Dumbo ]\");\n\n    checkScope(\"[ { Pavarotti } ] [ is a leading tenor who comes cheap ]\");\n  }","id":54755,"modified_method":"@Test\n  public void fracasSentencesWithProperNouns() {\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL ]\");\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL has ]\");\n    checkScope(\"[ { APCOM } ] [ has a more important customer than ITEL is ]\");\n    checkScope(\"[ { APCOM } ] [ has been paying mortgage interest for a total of 15 years or more ]\");\n    checkScope(\"[ { APCOM } ] [ lost some orders ]\");\n    checkScope(\"[ { APCOM } ] [ lost ten orders ]\");\n    checkScope(\"[ { APCOM } ] [ signed the contract Friday , 13th ]\");\n    checkScope(\"[ { APCOM } ] [ sold exactly 2500 computers ]\");\n    checkScope(\"[ { APCOM } ] [ won some orders ]\");\n    checkScope(\"[ { APCOM } ] [ won ten orders ]\");\n\n    checkScope(\"[ { Bill } ] [ bought a car ]\");\n    checkScope(\"[ { Bill } ] [ has spoken to Mary ]\");\n    checkScope(\"[ { Bill } ] [ is going to ]\");\n    checkScope(\"[ { Bill } ] [ knows why John had his paper accepted ]\");\n    checkScope(\"[ { Bill } ] [ owns a blue car ]\");\n    checkScope(\"[ { Bill } ] [ owns a blue one ]\");\n    checkScope(\"[ { Bill } ] [ owns a car ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast car ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast one ]\");\n    checkScope(\"[ { Bill } ] [ owns a fast red car ]\");\n    checkScope(\"[ { Bill } ] [ owns a red car ]\");\n    checkScope(\"[ { Bill } ] [ owns a slow one ]\");\n    checkScope(\"[ { Bill } ] [ owns a slow red car ]\");\n    checkScope(\"[ { Bill } ] [ said Mary wrote a report ]\");\n    checkScope(\"[ { Bill } ] [ said Peter wrote a report ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary at five o'clock ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary at four o'clock ]\");\n    checkScope(\"[ { Bill } ] [ spoke to Mary on Monday ]\");\n    checkScope(\"[ { Bill } ] [ spoke to everyone that John did ]\");\n    checkScope(\"[ { Bill } ] [ suggested to Frank 's boss that they should go to the meeting together , and Carl to Alan 's wife ]\");\n    checkScope(\"[ { Bill } ] [ went to Berlin by car ]\");\n    checkScope(\"[ { Bill } ] [ went to Berlin by train ]\");\n    checkScope(\"[ { Bill } ] [ went to Paris by train ]\");\n    checkScope(\"[ { Bill } ] [ will speak to Mary ]\");\n    checkScope(\"[ { Bill } ] [ wrote a report ]\");\n\n    checkScope(\"[ { Dumbo } ] [ is a four-legged animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a large animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a small animal ]\");\n    checkScope(\"[ { Dumbo } ] [ is a small elephant ]\");\n    checkScope(\"[ { Dumbo } ] [ is four-legged ]\");\n    checkScope(\"[ { Dumbo } ] [ is larger than Mickey ]\");\n\n    checkScope(\"[ { GFI } ] [ owns several computers ]\");\n\n    checkScope(\"[ { Helen } ] [ saw the chairman of the department answer the phone ]\");\n\n    checkScope(\"[ { ICM } ] [ is one of the companies and owns 150 computers ]\");\n\n//    checkScope(\"[ { ITEL } ] [ always delivers reports late ]\");  // TODO(gabor) bad parse from ITEL -dep-> delivers\n    checkScope(\"[ { ITEL } ] [ built MTALK in 1993 ]\");\n//    checkScope(\"[ { ITEL } ] [ currently has a factory in Birmingham ]\");  // fix me (bad scope)\n    checkScope(\"[ { ITEL } ] [ delivered reports late in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ developed a new editor in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ existed in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ expanded in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ finished MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ has a factory in Birmingham ]\");\n    checkScope(\"[ { ITEL } ] [ has developed a new editor since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has expanded since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has made a loss since 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ has sent most of the reports Smith needs ]\");\n    checkScope(\"[ { ITEL } ] [ made a loss in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ maintains all the computers that GFI owns ]\");\n    checkScope(\"[ { ITEL } ] [ maintains them ]\");\n    checkScope(\"[ { ITEL } ] [ managed to win the contract in 1992 ]\");\n//    checkScope(\"[ { ITEL } ] [ never delivers reports late ]\");  // TODO(gabor) parse error\n    checkScope(\"[ { ITEL } ] [ owned APCOM from 1988 to 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ owned APCOM in 1990 ]\");\n    checkScope(\"[ { ITEL } ] [ sent a progress report in July 1994 ]\");\n    checkScope(\"[ { ITEL } ] [ sold 3000 more computers than APCOM ]\");\n    checkScope(\"[ { ITEL } ] [ sold 5500 computers ]\");\n    checkScope(\"[ { ITEL } ] [ tried to win the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ was building MTALK in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ was winning the contract from APCOM in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won a contract in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won at least eleven orders ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM ]\");\n    checkScope(\"[ { ITEL } ] [ won more orders than APCOM did ]\");\n//    checkScope(\"[ { ITEL } ] [ won more orders than APCOM lost ]\");  // TODO(gabor) parse error\n    checkScope(\"[ { ITEL } ] [ won more orders than the APCOM contract ]\");\n    checkScope(\"[ { ITEL } ] [ won more than one order ]\");\n    checkScope(\"[ { ITEL } ] [ won some orders ]\");\n    checkScope(\"[ { ITEL } ] [ won the APCOM contract ]\");\n    checkScope(\"[ { ITEL } ] [ won the contract from APCOM in 1993 ]\");\n    checkScope(\"[ { ITEL } ] [ won the contract in 1992 ]\");\n    checkScope(\"[ { ITEL } ] [ won twenty orders ]\");\n    checkScope(\"[ { ITEL } ] [ won twice as many orders than APCOM ]\");\n    checkScope(\"[ { Itel } ] [ was in Birmingham in 1993 ]\");\n\n    checkScope(\"[ { John } ] [ bought a car ]\");\n    checkScope(\"[ { John } ] [ found Mary before Bill ]\");\n//    checkScope(\"[ { John } ] [ found Mary before Bill found Mary ]\");  // fix me (bad scope)\n//    checkScope(\"[ { John } ] [ found Mary before John found Bill ]\");  // fix me (bad scope)\n    checkScope(\"[ { John } ] [ had his paper accepted ]\");\n    checkScope(\"[ { John } ] [ has a diamond ]\");\n    checkScope(\"[ { John } ] [ has a genuine diamond ]\");\n    checkScope(\"[ { John } ] [ has spoken to Mary ]\");\n    checkScope(\"[ { John } ] [ hated the meeting ]\");\n    checkScope(\"[ { John } ] [ is a cleverer politician than Bill ]\");\n    checkScope(\"[ { John } ] [ is a fatter politician than Bill ]\");\n    checkScope(\"[ { John } ] [ is a former successful university student ]\");\n    checkScope(\"[ { John } ] [ is a former university student ]\");\n    checkScope(\"[ { John } ] [ is a man and Mary is a woman ]\");\n    checkScope(\"[ { John } ] [ is a successful former university student ]\");\n    checkScope(\"[ { John } ] [ is a university student ]\");\n    checkScope(\"[ { John } ] [ is cleverer than Bill ]\");\n    checkScope(\"[ { John } ] [ is fatter than Bill ]\");\n    checkScope(\"[ { John } ] [ is going to Paris by car , and the students by train ]\");\n    checkScope(\"[ { John } ] [ is successful ]\");\n//    checkScope(\"[ { John } ] [ needed to buy a car ] and Bill did \"); // interesting example; also, parse error\n    checkScope(\"[ { John } ] [ owns a car ]\");\n    checkScope(\"[ { John } ] [ owns a fast red car ]\");\n    checkScope(\"[ { John } ] [ owns a red car ]\");\n    checkScope(\"[ { John } ] [ represents his company ] and so does Mary\");\n    checkScope(\"[ { John } ] [ said Bill had been hurt ]\");\n    checkScope(\"[ { John } ] [ said Bill had hurt himself ]\");\n    checkScope(\"[ { John } ] [ said Bill wrote a report ]\");\n    checkScope(\"[ { John } ] [ said Mary wrote a report ] , and Bill did too\");  // interesting example\n//    checkScope(\"[ { John } ] [ said that Mary wrote a report ] , and that Bill did too\");  // fix me (bad scope)\n    checkScope(\"[ { John } ] [ spoke to Mary ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary at four o'clock ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Friday ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Monday ]\");\n    checkScope(\"[ { John } ] [ spoke to Mary on Thursday ]\");\n    checkScope(\"[ { John } ] [ spoke to Sue ]\");\n    checkScope(\"[ { John } ] [ wanted to buy a car ] , and he did\");\n    checkScope(\"[ { John } ] [ wants to know how many men work part time ]\");\n    checkScope(\"[ { John } ] [ wants to know how many men work part time , and which ]\");\n    checkScope(\"[ { John } ] [ wants to know how many women work part time ]\");\n    checkScope(\"[ { John } ] [ wants to know which men work part time ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car , and Bill by train ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car , and Bill by train to Berlin ]\");\n    checkScope(\"[ { John } ] [ went to Paris by car , and Bill to Berlin ]\");\n    checkScope(\"[ { John } ] [ wrote a report ]\");\n//    checkScope(\"[ { John } ] [ wrote a report ] , and Bill said Peter did too ]\");  // fix me\n\n    checkScope(\"[ { Jones } ] [ claimed Smith had costed Jones ' proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed Smith had costed Smith 's proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed he had costed Smith 's proposal ]\");\n    checkScope(\"[ { Jones } ] [ claimed he had costed his own proposal ]\");\n    checkScope(\"[ { Jones } ] [ graduated in March ] and has been employed ever since\");\n    checkScope(\"[ { Jones } ] [ has a company car ]\");\n    checkScope(\"[ { Jones } ] [ has been unemployed in the past ]\");\n    checkScope(\"[ { Jones } ] [ has more than one company car ]\");\n    checkScope(\"[ { Jones } ] [ is an APCOM manager ]\");\n    checkScope(\"[ { Jones } ] [ is the chairman of ITEL ]\");\n    checkScope(\"[ { Jones } ] [ left after Anderson left ]\");\n    checkScope(\"[ { Jones } ] [ left after Anderson was present ]\");\n    checkScope(\"[ { Jones } ] [ left after Smith left ]\");\n    checkScope(\"[ { Jones } ] [ left before Anderson left ]\");\n    checkScope(\"[ { Jones } ] [ left before Smith left ]\");\n    checkScope(\"[ { Jones } ] [ left the meeting ]\");\n    checkScope(\"[ { Jones } ] [ represents Jones 's company ]\");\n    checkScope(\"[ { Jones } ] [ represents Smith 's company ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract after Smith did ]\");\n    checkScope(\"[ { Jones } ] [ revised the contract before Smith did ]\");\n    checkScope(\"[ { Jones } ] [ signed another contract ]\");\n    checkScope(\"[ { Jones } ] [ signed the contract ]\");\n    checkScope(\"[ { Jones } ] [ signed two contracts ]\");\n    checkScope(\"[ { Jones } ] [ swam after Smith swam ]\");\n    checkScope(\"[ { Jones } ] [ swam to the shore ]\");\n    checkScope(\"[ { Jones } ] [ swam to the shore after Smith swam to the shore ]\");\n    checkScope(\"[ { Jones } ] [ was present ]\");\n    checkScope(\"[ { Jones } ] [ was present after Smith was present ]\");\n    checkScope(\"[ { Jones } ] [ was present before Smith was present ]\");\n    checkScope(\"[ { Jones } ] [ was unemployed at some time before he graduated ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report after Smith was writing a report ]\");\n    checkScope(\"[ { Jones } ] [ was writing a report before Smith was writing a report ]\");\n\n    checkScope(\"[ { Kim } ] [ is a clever person ]\");\n    checkScope(\"[ { Kim } ] [ is a clever politician ]\");\n    checkScope(\"[ { Kim } ] [ is clever ]\");\n\n    checkScope(\"[ { MFI } ] [ has a service contract for all its computers ]\");\n    checkScope(\"[ { MFI } ] [ is a customer that owns exactly one computer ]\");\n    checkScope(\"[ { MFI } ] [ is a customer that owns several computers ]\");\n\n    checkScope(\"[ { Mary } ] [ has a workstation ]\");\n    checkScope(\"[ { Mary } ] [ is a student ]\");\n    checkScope(\"[ { Mary } ] [ is female ]\");\n    checkScope(\"[ { Mary } ] [ represents John 's company ]\");\n    checkScope(\"[ { Mary } ] [ represents her own company ]\");\n    checkScope(\"[ { Mary } ] [ used a workstation ]\");\n    checkScope(\"[ { Mary } ] [ used her workstation ]\");\n\n    checkScope(\"[ { Mickey } ] [ is a large animal ]\");\n    checkScope(\"[ { Mickey } ] [ is a large mouse ]\");\n    checkScope(\"[ { Mickey } ] [ is a small animal ]\");\n    checkScope(\"[ { Mickey } ] [ is larger than Dumbo ]\");\n    checkScope(\"[ { Mickey } ] [ is smaller than Dumbo ]\");\n\n    checkScope(\"[ { Pavarotti } ] [ is a leading tenor who comes cheap ]\");\n  }","commit_id":"c17aef92688bfa24a91735ae741315bf12e93f3d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public Map getPhases( String lifecycle )\n    {\n        if ( lifecycleMap == null )\n        {\n            lifecycleMap = new HashMap();\n\n            for ( Iterator i = lifecycles.iterator(); i.hasNext(); )\n            {\n                Lifecycle l = (Lifecycle) i.next();\n                lifecycleMap.put( l.getId(), l );\n            }\n        }\n        Lifecycle l = (Lifecycle) lifecycleMap.get( lifecycle );\n        return l != null ? l.getPhases() : null;\n    }","id":54756,"modified_method":"public Map getPhases( String lifecycle )\n    {\n        if ( lifecycleMap == null )\n        {\n            lifecycleMap = new HashMap();\n\n            if ( lifecycles != null )\n            {\n                for ( Iterator i = lifecycles.iterator(); i.hasNext(); )\n                {\n                    Lifecycle l = (Lifecycle) i.next();\n                    lifecycleMap.put( l.getId(), l );\n                }\n            }\n        }\n        Lifecycle l = (Lifecycle) lifecycleMap.get( lifecycle );\n\n        Map mappings = null;\n        if ( l == null )\n        {\n            if ( \"default\".equals( lifecycle ) )\n            {\n                mappings = phases;\n            }\n        }\n        else\n        {\n            mappings = l.getPhases();\n        }\n\n        return mappings;\n    }","commit_id":"9e9916da7a3cf6c8986251f32cbfe327ff324cc2","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * Retrieve the {@link MojoDescriptor} that corresponds to a given direct mojo invocation. This\n     * is used during the fail-fast method isTaskValid(..), and also during task-segmentation, to\n     * allow the lifecycle executor to determine whether the mojo is an aggregator.\n     * \n     * @throws PluginLoaderException\n     */\n    private MojoDescriptor getMojoDescriptorForDirectInvocation( String task, MavenSession session, MavenProject project )\n        throws InvalidPluginException, PluginLoaderException, LifecycleExecutionException\n    {\n        MojoDescriptor descriptor;\n\n        try\n        {\n            descriptor = getMojoDescriptor( task, session, project );\n        }\n        catch ( LifecycleExecutionException e )\n        {\n            throw new LifecycleExecutionException( \"Cannot find the specified goal.\", e );\n        }\n\n        if ( descriptor == null )\n        {\n            throw new InvalidPluginException( \"Plugin: \" + descriptor.getId() + \" does not contain referenced mojo: \" + descriptor.getGoal() );\n        }\n\n        return descriptor;\n    }","id":54757,"modified_method":"/**\n     * Retrieve the {@link MojoDescriptor} that corresponds to a given direct mojo invocation. This\n     * is used during the fail-fast method isTaskValid(..), and also during task-segmentation, to\n     * allow the lifecycle executor to determine whether the mojo is an aggregator.\n     * \n     * @throws PluginLoaderException\n     */\n    private MojoDescriptor getMojoDescriptorForDirectInvocation( String task, MavenSession session, MavenProject project )\n        throws InvalidPluginException, PluginLoaderException, LifecycleExecutionException\n    {\n        MojoDescriptor descriptor;\n\n        try\n        {\n            descriptor = getMojoDescriptor( task, session, project );\n        }\n        catch ( LifecycleExecutionException e )\n        {\n            throw new LifecycleExecutionException( \"Cannot find the specified goal.\", e );\n        }\n\n        return descriptor;\n    }","commit_id":"1fa49f1ae0042bacf3a7b843d71786bde2f00f9f","url":"https://github.com/apache/maven"},{"original_method":"private void executeGoals( List goals, Stack forkEntryPoints, MavenSession session, MavenProject project )\n        throws LifecycleExecutionException, BuildFailureException, PluginNotFoundException\n    {\n        for ( Iterator i = goals.iterator(); i.hasNext(); )\n        {\n            MojoExecution mojoExecution = (MojoExecution) i.next();\n\n            MojoDescriptor mojoDescriptor = mojoExecution.getMojoDescriptor();\n\n            if ( mojoDescriptor.getExecutePhase() != null || mojoDescriptor.getExecuteGoal() != null )\n            {\n                forkEntryPoints.push( mojoDescriptor );\n\n                forkLifecycle( mojoDescriptor, forkEntryPoints, session, project );\n\n                forkEntryPoints.pop();\n            }\n\n            if ( mojoDescriptor.isRequiresReports() )\n            {\n                List reports = getReports( project, forkEntryPoints, mojoExecution, session );\n\n                mojoExecution.setReports( reports );\n\n                for ( Iterator j = mojoExecution.getForkedExecutions().iterator(); j.hasNext(); )\n                {\n                    MojoExecution forkedExecution = (MojoExecution) j.next();\n                    MojoDescriptor descriptor = forkedExecution.getMojoDescriptor();\n\n                    if ( descriptor.getExecutePhase() != null )\n                    {\n                        forkEntryPoints.push( descriptor );\n\n                        forkLifecycle( descriptor, forkEntryPoints, session, project );\n\n                        forkEntryPoints.pop();\n                    }\n                }\n            }\n\n            try\n            {\n                pluginManager.executeMojo( project, mojoExecution, session );\n            }\n            catch ( PluginManagerException e )\n            {\n                throw new LifecycleExecutionException( \"Internal error in the plugin manager executing goal '\" + mojoDescriptor.getId() + \"': \" + e.getMessage(), e );\n            }\n            catch ( MojoFailureException e )\n            {\n                throw new BuildFailureException( e.getMessage(), e );\n            }\n            catch ( PluginConfigurationException e )\n            {\n                throw new LifecycleExecutionException( e.getMessage(), e );\n            }\n        }\n    }","id":54758,"modified_method":"private void executeGoals( List<MojoExecution> goals, MavenSession session, MavenProject project )\n        throws LifecycleExecutionException, BuildFailureException, PluginNotFoundException\n    {\n        for ( MojoExecution mojoExecution : goals )\n        {\n            MojoDescriptor mojoDescriptor = mojoExecution.getMojoDescriptor();\n\n            if ( mojoDescriptor.isRequiresReports() )\n            {\n                List reports = getReports( project, mojoExecution, session );\n\n                mojoExecution.setReports( reports );\n            }\n\n            try\n            {\n                pluginManager.executeMojo( project, mojoExecution, session );\n            }\n            catch ( PluginManagerException e )\n            {\n                throw new LifecycleExecutionException( \"Internal error in the plugin manager executing goal '\" + mojoDescriptor.getId() + \"': \" + e.getMessage(), e );\n            }\n            catch ( MojoFailureException e )\n            {\n                throw new BuildFailureException( e.getMessage(), e );\n            }\n            catch ( PluginConfigurationException e )\n            {\n                throw new LifecycleExecutionException( e.getMessage(), e );\n            }\n        }\n    }","commit_id":"1fa49f1ae0042bacf3a7b843d71786bde2f00f9f","url":"https://github.com/apache/maven"},{"original_method":"private void executeStandaloneGoal( String task, Stack forkEntryPoints, MavenSession session, MavenProject project )\n        throws LifecycleExecutionException, BuildFailureException, PluginNotFoundException\n    {\n        // guaranteed to come from the CLI and not be part of a phase\n        MojoDescriptor mojoDescriptor = getMojoDescriptor( task, session, project );\n        executeGoals( Collections.singletonList( new MojoExecution( mojoDescriptor ) ), forkEntryPoints, session, project );\n    }","id":54759,"modified_method":"private void executeStandaloneGoal( String task, MavenSession session, MavenProject project )\n        throws LifecycleExecutionException, BuildFailureException, PluginNotFoundException\n    {\n        // guaranteed to come from the CLI and not be part of a phase\n        MojoDescriptor mojoDescriptor = getMojoDescriptor( task, session, project );\n        executeGoals( Collections.singletonList( new MojoExecution( mojoDescriptor ) ), session, project );\n    }","commit_id":"1fa49f1ae0042bacf3a7b843d71786bde2f00f9f","url":"https://github.com/apache/maven"},{"original_method":"private void executeGoal( String task, MavenSession session, MavenProject project )\n        throws LifecycleExecutionException, BuildFailureException\n    {\n        try\n        {\n            Stack forkEntryPoints = new Stack();\n            if ( getPhaseToLifecycleMap().containsKey( task ) )\n            {\n                Lifecycle lifecycle = getLifecycleForPhase( task );\n\n                // we have a lifecycle phase, so lets bind all the necessary goals\n\n                Map lifecycleMappings = constructLifecycleMappings( session, task, project, lifecycle );\n\n                executeGoalWithLifecycle( task, forkEntryPoints, session, lifecycleMappings, project, lifecycle );\n            }\n            else\n            {\n                executeStandaloneGoal( task, forkEntryPoints, session, project );\n            }\n        }\n        catch ( PluginNotFoundException e )\n        {\n            throw new BuildFailureException( \"A required plugin was not found: \" + e.getMessage(), e );\n        }\n    }","id":54760,"modified_method":"private void executeGoal( String task, MavenSession session, MavenProject project )\n        throws LifecycleExecutionException, BuildFailureException\n    {\n        // 1. \n        Lifecycle lifecycle = phaseToLifecycleMap.get( task );\n        \n        // 2. \n        LifecycleMapping mapping = lifecycleMappings.get( project.getPackaging() );\n        \n        // 3.\n        Map<String,String> lifecyclePhases = mapping.getLifecycles().get( \"default\" ).getPhases();\n        \n        for( String phase : lifecycle.getPhases().values() )\n        {\n            System.out.println( \">> \" + phase );\n        }\n                \n        /*\n        try\n        {            \n            if ( lifecycle != null )\n            {\n                Map lifecycleMappings = constructLifecycleMappings( session, task, project, lifecycle );\n\n                executeGoalWithLifecycle( task, session, lifecycleMappings, project, lifecycle );\n            }\n            else\n            {\n                executeStandaloneGoal( task, session, project );\n            }\n        }\n        catch ( PluginNotFoundException e )\n        {\n            throw new BuildFailureException( \"A required plugin was not found: \" + e.getMessage(), e );\n        }\n        */\n    }","commit_id":"1fa49f1ae0042bacf3a7b843d71786bde2f00f9f","url":"https://github.com/apache/maven"},{"original_method":"public List<String> getLifecyclePhases()\n    {\n        for ( Lifecycle lifecycle : lifecycles )\n        {\n            if ( lifecycle.getId().equals( \"default\" ) )\n            {\n                return lifecycle.getPhases();\n            }\n        }\n\n        return null;\n    }","id":54761,"modified_method":"public List<String> getLifecyclePhases()\n    {\n        for ( Lifecycle lifecycle : lifecycles )\n        {\n            if ( lifecycle.getId().equals( \"default\" ) )\n            {\n                return (List<String>) lifecycle.getPhases().values();\n            }\n        }\n\n        return null;\n    }","commit_id":"1fa49f1ae0042bacf3a7b843d71786bde2f00f9f","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * Execute a task. Each task may be a phase in the lifecycle or the execution of a mojo.\n     * \n     * @param session\n     * @param rm\n     * @param dispatcher\n     */\n    public void execute( MavenSession session, ReactorManager rm, EventDispatcher dispatcher )\n        throws BuildFailureException, LifecycleExecutionException\n    {\n        // TODO: This is dangerous, particularly when it's just a collection of loose-leaf projects being built\n        // within the same reactor (using an inclusion pattern to gather them up)...\n        MavenProject rootProject = rm.getTopLevelProject();\n\n        List goals = session.getGoals();\n\n        if ( goals.isEmpty() && rootProject != null )\n        {\n            String goal = rootProject.getDefaultGoal();\n\n            if ( goal != null )\n            {\n                goals = Collections.singletonList( goal );\n            }\n        }\n\n        if ( goals.isEmpty() )\n        {\n            throw new BuildFailureException( \"\\n\\nYou must specify at least one goal. Try 'mvn install' to build or 'mvn --help' for options \\nSee http://maven.apache.org for more information.\\n\\n\" );\n        }\n\n        List taskSegments = segmentTaskListByAggregationNeeds( goals, session, rootProject );\n\n        executeTaskSegments( taskSegments, rm, session, rootProject, dispatcher );\n    }","id":54762,"modified_method":"/**\n     * Execute a task. Each task may be a phase in the lifecycle or the execution of a mojo.\n     * \n     * @param session\n     * @param rm\n     * @param dispatcher\n     */\n    public void execute( MavenSession session, ReactorManager rm, EventDispatcher dispatcher )\n        throws BuildFailureException, LifecycleExecutionException\n    {\n        // TODO: This is dangerous, particularly when it's just a collection of loose-leaf projects being built\n        // within the same reactor (using an inclusion pattern to gather them up)...\n        MavenProject rootProject = rm.getTopLevelProject();\n\n        List goals = session.getGoals();\n\n        if ( goals.isEmpty() && rootProject != null )\n        {\n            String goal = rootProject.getDefaultGoal();\n\n            if ( goal != null )\n            {\n                goals = Collections.singletonList( goal );\n            }\n        }\n\n        if ( goals.isEmpty() )\n        {\n            throw new BuildFailureException( \"\\n\\nYou must specify at least one goal. Try 'mvn install' to build or 'mvn --help' for options \\nSee http://maven.apache.org for more information.\\n\\n\" );\n        }\n\n        executeTaskSegments( goals, rm, session, rootProject, dispatcher );\n    }","commit_id":"1fa49f1ae0042bacf3a7b843d71786bde2f00f9f","url":"https://github.com/apache/maven"},{"original_method":"private Map findMappingsForLifecycle( MavenSession session, MavenProject project, Lifecycle lifecycle )\n        throws LifecycleExecutionException, PluginNotFoundException\n    {\n        String packaging = project.getPackaging();\n        Map mappings = null;\n\n        LifecycleMapping m;\n\n        Map defaultMappings = lifecycle.getDefaultPhases();\n\n        if ( mappings == null )\n        {\n            m = lifecycleMappings.get( packaging );\n                        \n            mappings = m.getPhases( lifecycle.getId() );                    \n        }\n\n        if ( mappings == null )\n        {\n            if ( defaultMappings == null )\n            {\n                throw new LifecycleExecutionException( \"Cannot find lifecycle mapping for packaging: \\'\" + packaging + \"\\', and there is no default\" );\n            }\n            else\n            {\n                mappings = defaultMappings;\n            }\n        }\n\n        return mappings;\n    }","id":54763,"modified_method":"private Map findMappingsForLifecycle( MavenSession session, MavenProject project, Lifecycle lifecycle )\n        throws LifecycleExecutionException, PluginNotFoundException\n    {\n        String packaging = project.getPackaging();\n        Map mappings = null;\n\n        LifecycleMapping m;\n\n        Map defaultMappings = lifecycle.getDefaultPhases();\n\n        if ( mappings == null )\n        {\n            m = lifecycleMappings.get( packaging );\n\n            mappings = null; //m.getLifecycles().get( lifecycle.getId() );                    \n        }\n\n        if ( mappings == null )\n        {\n            if ( defaultMappings == null )\n            {\n                throw new LifecycleExecutionException( \"Cannot find lifecycle mapping for packaging: \\'\" + packaging + \"\\', and there is no default\" );\n            }\n            else\n            {\n                mappings = defaultMappings;\n            }\n        }\n\n        return mappings;\n    }","commit_id":"1fa49f1ae0042bacf3a7b843d71786bde2f00f9f","url":"https://github.com/apache/maven"},{"original_method":"private void executeTaskSegments( List taskSegments, ReactorManager rm, MavenSession session, MavenProject rootProject, EventDispatcher dispatcher )\n        throws LifecycleExecutionException, BuildFailureException\n    {\n        for ( Iterator it = taskSegments.iterator(); it.hasNext(); )\n        {\n            TaskSegment segment = (TaskSegment) it.next();\n\n            if ( segment.aggregate() )\n            {\n                if ( !rm.isBlackListed( rootProject ) )\n                {\n                    line();\n\n                    getLogger().info( \"Building \" + rootProject.getName() );\n\n                    getLogger().info( \"  \" + segment );\n\n                    line();\n\n                    // !! This is ripe for refactoring to an aspect.\n                    // Event monitoring.\n                    String event = MavenEvents.PROJECT_EXECUTION;\n\n                    long buildStartTime = System.currentTimeMillis();\n\n                    String target = rootProject.getId() + \" ( \" + segment + \" )\";\n\n                    dispatcher.dispatchStart( event, target );\n\n                    try\n                    {\n                        session.setCurrentProject( rootProject );\n\n                        // only call once, with the top-level project (assumed to be provided as a parameter)...\n                        for ( Iterator<String> goalIterator = segment.getTasks().iterator(); goalIterator.hasNext(); )\n                        {\n                            String task = (String) goalIterator.next();\n\n                            executeGoalAndHandleFailures( task, session, rootProject, dispatcher, event, rm, buildStartTime, target );\n                        }\n\n                        rm.registerBuildSuccess( rootProject, System.currentTimeMillis() - buildStartTime );\n\n                    }\n                    finally\n                    {\n                        session.setCurrentProject( null );\n                    }\n\n                    dispatcher.dispatchEnd( event, target );\n                }\n                else\n                {\n                    line();\n\n                    getLogger().info( \"SKIPPING \" + rootProject.getName() );\n\n                    getLogger().info( \"  \" + segment );\n\n                    getLogger().info( \"This project has been banned from further executions due to previous failures.\" );\n\n                    line();\n                }\n            }\n            else\n            {\n                List sortedProjects = session.getSortedProjects();\n\n                // iterate over projects, and execute on each...\n                for ( Iterator projectIterator = sortedProjects.iterator(); projectIterator.hasNext(); )\n                {\n                    MavenProject currentProject = (MavenProject) projectIterator.next();\n\n                    if ( !rm.isBlackListed( currentProject ) )\n                    {\n                        line();\n\n                        getLogger().info( \"Building \" + currentProject.getName() );\n\n                        getLogger().info( \"  \" + segment );\n\n                        line();\n\n                        // !! This is ripe for refactoring to an aspect.\n                        // Event monitoring.\n                        String event = MavenEvents.PROJECT_EXECUTION;\n\n                        long buildStartTime = System.currentTimeMillis();\n\n                        String target = currentProject.getId() + \" ( \" + segment + \" )\";\n                        dispatcher.dispatchStart( event, target );\n\n                        try\n                        {\n                            session.setCurrentProject( currentProject );\n\n                            for ( Iterator goalIterator = segment.getTasks().iterator(); goalIterator.hasNext(); )\n                            {\n                                String task = (String) goalIterator.next();\n\n                                executeGoalAndHandleFailures( task, session, currentProject, dispatcher, event, rm, buildStartTime, target );\n                            }\n\n                        }\n                        finally\n                        {\n                            session.setCurrentProject( null );\n                        }\n\n                        rm.registerBuildSuccess( currentProject, System.currentTimeMillis() - buildStartTime );\n\n                        dispatcher.dispatchEnd( event, target );\n                    }\n                    else\n                    {\n                        line();\n\n                        getLogger().info( \"SKIPPING \" + currentProject.getName() );\n\n                        getLogger().info( \"  \" + segment );\n\n                        getLogger().info( \"This project has been banned from further executions due to previous failures.\" );\n\n                        line();\n                    }\n                }\n            }\n        }\n    }","id":54764,"modified_method":"private void executeTaskSegments( List<String> goals, ReactorManager rm, MavenSession session, MavenProject rootProject, EventDispatcher dispatcher )\n        throws LifecycleExecutionException, BuildFailureException\n    {\n        List<MavenProject> sortedProjects = session.getSortedProjects();\n\n        for ( MavenProject currentProject : sortedProjects )\n        {\n            if ( !rm.isBlackListed( currentProject ) )\n            {\n                line();\n\n                getLogger().info( \"Building \" + currentProject.getName() );\n\n                line();\n\n                // !! This is ripe for refactoring to an aspect.\n                // Event monitoring.\n                String event = MavenEvents.PROJECT_EXECUTION;\n\n                long buildStartTime = System.currentTimeMillis();\n\n                try\n                {\n                    session.setCurrentProject( currentProject );\n\n                    for ( String goal : goals )\n                    {\n                        String target = currentProject.getId() + \" ( \" + goal + \" )\";\n                        dispatcher.dispatchStart( event, target );\n                        executeGoalAndHandleFailures( goal, session, currentProject, dispatcher, event, rm, buildStartTime, target );\n                        dispatcher.dispatchEnd( event, target );\n                    }\n                }\n                finally\n                {\n                    session.setCurrentProject( null );\n                }\n\n                rm.registerBuildSuccess( currentProject, System.currentTimeMillis() - buildStartTime );\n            }\n        }\n    }","commit_id":"1fa49f1ae0042bacf3a7b843d71786bde2f00f9f","url":"https://github.com/apache/maven"},{"original_method":"private List getReports( ReportPlugin reportPlugin, Stack forkEntryPoints, ReportSet reportSet, MavenProject project, MavenSession session, MojoExecution mojoExecution )\n        throws LifecycleExecutionException, PluginNotFoundException\n    {\n        PluginDescriptor pluginDescriptor = loadReport( reportPlugin, project, session );\n\n        List reports = new ArrayList();\n\n        for ( Iterator i = pluginDescriptor.getMojos().iterator(); i.hasNext(); )\n        {\n            MojoDescriptor mojoDescriptor = (MojoDescriptor) i.next();\n\n            if ( forkEntryPoints.contains( mojoDescriptor ) )\n            {\n                getLogger().debug( \"Omitting report: \" + mojoDescriptor.getFullGoalName() + \" from reports list. It initiated part of the fork currently executing.\" );\n                continue;\n            }\n\n            // TODO: check ID is correct for reports\n            // if the POM configured no reports, give all from plugin\n            if ( reportSet == null || reportSet.getReports().contains( mojoDescriptor.getGoal() ) )\n            {\n                String id = null;\n                if ( reportSet != null )\n                {\n                    id = reportSet.getId();\n                }\n\n                MojoExecution reportExecution = new MojoExecution( mojoDescriptor, id );\n\n                try\n                {\n                    MavenReport reportMojo = pluginManager.getReport( project, reportExecution, session );\n\n                    // Comes back null if it was a plugin, not a report - these are mojos in the reporting plugins that are not reports\n                    if ( reportMojo != null )\n                    {\n                        reports.add( reportMojo );\n\n                        mojoExecution.addMojoExecution( reportExecution );\n                    }\n                }\n                catch ( PluginManagerException e )\n                {\n                    throw new LifecycleExecutionException( \"Error getting reports from the plugin '\" + reportPlugin.getKey() + \"': \" + e.getMessage(), e );\n                }\n                catch ( PluginConfigurationException e )\n                {\n                    throw new LifecycleExecutionException( \"Error getting reports from the plugin '\" + reportPlugin.getKey() + \"'\", e );\n                }\n                catch ( ArtifactNotFoundException e )\n                {\n                    throw new LifecycleExecutionException( e.getMessage(), e );\n                }\n                catch ( ArtifactResolutionException e )\n                {\n                    throw new LifecycleExecutionException( e.getMessage(), e );\n                }\n            }\n        }\n        return reports;\n    }","id":54765,"modified_method":"private List getReports( ReportPlugin reportPlugin, ReportSet reportSet, MavenProject project, MavenSession session, MojoExecution mojoExecution )\n        throws LifecycleExecutionException, PluginNotFoundException\n    {\n        PluginDescriptor pluginDescriptor = loadReport( reportPlugin, project, session );\n\n        List reports = new ArrayList();\n\n        for ( Iterator i = pluginDescriptor.getMojos().iterator(); i.hasNext(); )\n        {\n            MojoDescriptor mojoDescriptor = (MojoDescriptor) i.next();\n\n            // TODO: check ID is correct for reports\n            // if the POM configured no reports, give all from plugin\n            if ( reportSet == null || reportSet.getReports().contains( mojoDescriptor.getGoal() ) )\n            {\n                String id = null;\n                if ( reportSet != null )\n                {\n                    id = reportSet.getId();\n                }\n\n                MojoExecution reportExecution = new MojoExecution( mojoDescriptor, id );\n\n                try\n                {\n                    MavenReport reportMojo = pluginManager.getReport( project, reportExecution, session );\n\n                    // Comes back null if it was a plugin, not a report - these are mojos in the reporting plugins that are not reports\n                    if ( reportMojo != null )\n                    {\n                        reports.add( reportMojo );\n\n                        mojoExecution.addMojoExecution( reportExecution );\n                    }\n                }\n                catch ( PluginManagerException e )\n                {\n                    throw new LifecycleExecutionException( \"Error getting reports from the plugin '\" + reportPlugin.getKey() + \"': \" + e.getMessage(), e );\n                }\n                catch ( PluginConfigurationException e )\n                {\n                    throw new LifecycleExecutionException( \"Error getting reports from the plugin '\" + reportPlugin.getKey() + \"'\", e );\n                }\n                catch ( ArtifactNotFoundException e )\n                {\n                    throw new LifecycleExecutionException( e.getMessage(), e );\n                }\n                catch ( ArtifactResolutionException e )\n                {\n                    throw new LifecycleExecutionException( e.getMessage(), e );\n                }\n            }\n        }\n        return reports;\n    }","commit_id":"1fa49f1ae0042bacf3a7b843d71786bde2f00f9f","url":"https://github.com/apache/maven"},{"original_method":"private List getReports( MavenProject project, Stack forkEntryPoints, MojoExecution mojoExecution, MavenSession session )\n        throws LifecycleExecutionException, PluginNotFoundException\n    {\n        List reportPlugins = project.getReportPlugins();\n\n        if ( project.getModel().getReports() != null )\n        {\n            getLogger().error( \"Plugin contains a <reports/> section: this is IGNORED - please use <reporting/> instead.\" );\n        }\n\n        if ( project.getReporting() == null || !project.getReporting().isExcludeDefaults() )\n        {\n            if ( reportPlugins == null )\n            {\n                reportPlugins = new ArrayList();\n            }\n            else\n            {\n                reportPlugins = new ArrayList( reportPlugins );\n            }\n\n            for ( Iterator i = defaultReports.iterator(); i.hasNext(); )\n            {\n                String report = (String) i.next();\n\n                StringTokenizer tok = new StringTokenizer( report, \":\" );\n                int count = tok.countTokens();\n                if ( count != 2 && count != 3 )\n                {\n                    getLogger().warn( \"Invalid default report ignored: '\" + report + \"' (must be groupId:artifactId[:version])\" );\n                }\n                else\n                {\n                    String groupId = tok.nextToken();\n                    String artifactId = tok.nextToken();\n                    String version = tok.hasMoreTokens() ? tok.nextToken() : null;\n\n                    boolean found = false;\n                    for ( Iterator j = reportPlugins.iterator(); j.hasNext() && !found; )\n                    {\n                        ReportPlugin reportPlugin = (ReportPlugin) j.next();\n                        if ( reportPlugin.getGroupId().equals( groupId ) && reportPlugin.getArtifactId().equals( artifactId ) )\n                        {\n                            found = true;\n                        }\n                    }\n\n                    if ( !found )\n                    {\n                        ReportPlugin reportPlugin = new ReportPlugin();\n                        reportPlugin.setGroupId( groupId );\n                        reportPlugin.setArtifactId( artifactId );\n                        reportPlugin.setVersion( version );\n                        reportPlugins.add( reportPlugin );\n                    }\n                }\n            }\n        }\n\n        List reports = new ArrayList();\n        if ( reportPlugins != null )\n        {\n            for ( Iterator it = reportPlugins.iterator(); it.hasNext(); )\n            {\n                ReportPlugin reportPlugin = (ReportPlugin) it.next();\n\n                List reportSets = reportPlugin.getReportSets();\n\n                if ( reportSets == null || reportSets.isEmpty() )\n                {\n                    reports.addAll( getReports( reportPlugin, forkEntryPoints, null, project, session, mojoExecution ) );\n                }\n                else\n                {\n                    for ( Iterator j = reportSets.iterator(); j.hasNext(); )\n                    {\n                        ReportSet reportSet = (ReportSet) j.next();\n\n                        reports.addAll( getReports( reportPlugin, forkEntryPoints, reportSet, project, session, mojoExecution ) );\n                    }\n                }\n            }\n        }\n        return reports;\n    }","id":54766,"modified_method":"private List getReports( MavenProject project, MojoExecution mojoExecution, MavenSession session )\n        throws LifecycleExecutionException, PluginNotFoundException\n    {\n        List reportPlugins = project.getReportPlugins();\n\n        if ( project.getModel().getReports() != null )\n        {\n            getLogger().error( \"Plugin contains a <reports/> section: this is IGNORED - please use <reporting/> instead.\" );\n        }\n\n        if ( project.getReporting() == null || !project.getReporting().isExcludeDefaults() )\n        {\n            if ( reportPlugins == null )\n            {\n                reportPlugins = new ArrayList();\n            }\n            else\n            {\n                reportPlugins = new ArrayList( reportPlugins );\n            }\n\n            for ( Iterator i = defaultReports.iterator(); i.hasNext(); )\n            {\n                String report = (String) i.next();\n\n                StringTokenizer tok = new StringTokenizer( report, \":\" );\n                int count = tok.countTokens();\n                if ( count != 2 && count != 3 )\n                {\n                    getLogger().warn( \"Invalid default report ignored: '\" + report + \"' (must be groupId:artifactId[:version])\" );\n                }\n                else\n                {\n                    String groupId = tok.nextToken();\n                    String artifactId = tok.nextToken();\n                    String version = tok.hasMoreTokens() ? tok.nextToken() : null;\n\n                    boolean found = false;\n                    for ( Iterator j = reportPlugins.iterator(); j.hasNext() && !found; )\n                    {\n                        ReportPlugin reportPlugin = (ReportPlugin) j.next();\n                        if ( reportPlugin.getGroupId().equals( groupId ) && reportPlugin.getArtifactId().equals( artifactId ) )\n                        {\n                            found = true;\n                        }\n                    }\n\n                    if ( !found )\n                    {\n                        ReportPlugin reportPlugin = new ReportPlugin();\n                        reportPlugin.setGroupId( groupId );\n                        reportPlugin.setArtifactId( artifactId );\n                        reportPlugin.setVersion( version );\n                        reportPlugins.add( reportPlugin );\n                    }\n                }\n            }\n        }\n\n        List reports = new ArrayList();\n        if ( reportPlugins != null )\n        {\n            for ( Iterator it = reportPlugins.iterator(); it.hasNext(); )\n            {\n                ReportPlugin reportPlugin = (ReportPlugin) it.next();\n\n                List reportSets = reportPlugin.getReportSets();\n\n                if ( reportSets == null || reportSets.isEmpty() )\n                {\n                    reports.addAll( getReports( reportPlugin, null, project, session, mojoExecution ) );\n                }\n                else\n                {\n                    for ( Iterator j = reportSets.iterator(); j.hasNext(); )\n                    {\n                        ReportSet reportSet = (ReportSet) j.next();\n\n                        reports.addAll( getReports( reportPlugin, reportSet, project, session, mojoExecution ) );\n                    }\n                }\n            }\n        }\n        return reports;\n    }","commit_id":"1fa49f1ae0042bacf3a7b843d71786bde2f00f9f","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * Method getPhases\n     */\n    public List<String> getPhases()\n    {\n        if ( this.phases == null )\n        {\n            this.phases = new ArrayList<String>();\n        }\n\n        return this.phases;\n    }","id":54767,"modified_method":"/**\n     * Method getPhases\n     */\n    public Map<String,String> getPhases()\n    {\n        return this.phases;\n    }","commit_id":"1fa49f1ae0042bacf3a7b843d71786bde2f00f9f","url":"https://github.com/apache/maven"},{"original_method":"public void testStandardLifecycle()\n        throws Exception\n    {\n        // - find the plugin [extension point: any client may wish to do whatever they choose]\n        // - load the plugin into a classloader [extension point: we want to take them from a repository, some may take from disk or whatever]\n        // - configure the plugin [extension point]\n        // - execute the plugin    \n\n        if ( !targetPom.getParentFile().exists() )\n        {\n            targetPom.getParentFile().mkdirs();\n        }\n\n        ArtifactRepository localRepository = getLocalRepository();\n\n        Repository repository = new Repository();\n        repository.setUrl( \"http://repo1.maven.org/maven2\" );\n        repository.setId( \"central\" );\n\n        ProjectBuilderConfiguration configuration = new DefaultProjectBuilderConfiguration()\n            .setLocalRepository( localRepository )\n            .setRemoteRepositories( Arrays.asList( repositorySystem.buildArtifactRepository( repository ) ) );\n\n        MavenProject project = projectBuilder.build( targetPom, configuration );\n        assertEquals( \"maven\", project.getArtifactId() );\n        assertEquals( \"3.0-SNAPSHOT\", project.getVersion() );\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n            .setProjectPresent( true )\n            .setPluginGroups( Arrays.asList( new String[] { \"org.apache.maven.plugins\" } ) )\n            .setLocalRepository( localRepository )\n            .setRemoteRepositories( Arrays.asList( repositorySystem.buildArtifactRepository( repository ) ) )\n            .setGoals( Arrays.asList( new String[] { \"package\" } ) )    \n            .addEventMonitor( new DefaultEventMonitor( new ConsoleLogger( 0, \"\" ) ) )\n            .setProperties( new Properties() );\n\n        List projects = new ArrayList();\n        projects.add( project );\n        \n        ReactorManager reactorManager = new ReactorManager( projects, request.getReactorFailureBehavior() );\n        \n        MavenSession session = new MavenSession( getContainer(), request, reactorManager );\n        //!!jvz This is not really quite right, take a look at how this actually works.\n        session.setCurrentProject( project );\n                \n        EventDispatcher dispatcher = new DeprecationEventDispatcher( MavenEvents.DEPRECATIONS, request.getEventMonitors() );\n                \n        lifecycleExecutor.execute( session, reactorManager, dispatcher );\n    }","id":54768,"modified_method":"public void testStandardLifecycle()\n        throws Exception\n    {\n        String base = \"projects/lifecycle-executor/project-with-additional-lifecycle-elements\";\n        File sourceDirectory = new File( getBasedir(), \"src/test/\" + base );\n        File targetDirectory = new File( getBasedir(), \"target/\" + base );\n        FileUtils.copyDirectoryStructure( sourceDirectory, targetDirectory );\n        File targetPom = new File( targetDirectory, \"pom.xml\" );        \n        \n        ArtifactRepository localRepository = getLocalRepository();\n\n        Repository repository = new Repository();\n        repository.setUrl( \"http://repo1.maven.org/maven2\" );\n        repository.setId( \"central\" );\n\n        ProjectBuilderConfiguration configuration = new DefaultProjectBuilderConfiguration()\n            .setLocalRepository( localRepository )\n            .setRemoteRepositories( Arrays.asList( repositorySystem.buildArtifactRepository( repository ) ) );\n\n        MavenProject project = projectBuilder.build( targetPom, configuration );\n        assertEquals( \"project-with-additional-lifecycle-elements\", project.getArtifactId() );\n        assertEquals( \"1.0-SNAPSHOT\", project.getVersion() );\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n            .setProjectPresent( true )\n            .setPluginGroups( Arrays.asList( new String[] { \"org.apache.maven.plugins\" } ) )\n            .setLocalRepository( localRepository )\n            .setRemoteRepositories( Arrays.asList( repositorySystem.buildArtifactRepository( repository ) ) )\n            .setGoals( Arrays.asList( new String[] { \"package\" } ) )    \n            .addEventMonitor( new DefaultEventMonitor( new ConsoleLogger( 0, \"\" ) ) )\n            .setProperties( new Properties() );\n\n        List projects = new ArrayList();\n        projects.add( project );\n        \n        ReactorManager reactorManager = new ReactorManager( projects, request.getReactorFailureBehavior() );\n        \n        MavenSession session = new MavenSession( getContainer(), request, reactorManager );\n        //!!jvz This is not really quite right, take a look at how this actually works.\n        session.setCurrentProject( project );\n                \n        EventDispatcher dispatcher = new DeprecationEventDispatcher( MavenEvents.DEPRECATIONS, request.getEventMonitors() );\n                \n        lifecycleExecutor.execute( session, reactorManager, dispatcher );\n    }","commit_id":"1fa49f1ae0042bacf3a7b843d71786bde2f00f9f","url":"https://github.com/apache/maven"},{"original_method":"protected boolean updatePluginMap( RepositoryMetadata metadata ) throws MojoExecutionException\n    {\n        PluginMappingXpp3Reader mappingReader = new PluginMappingXpp3Reader();\n\n        PluginMap pluginMap = null;\n\n        File metadataFile = metadata.getFile();\n\n        if ( metadataFile != null && metadataFile.exists() )\n        {\n            Reader reader = null;\n\n            try\n            {\n                reader = new FileReader( metadataFile );\n\n                pluginMap = mappingReader.read( reader );\n            }\n            catch ( EOFException e )\n            {\n                getLog().warn( metadata + \" located in: \" + metadataFile + \" seems to be corrupt - OVERWRITING.\" );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot read plugin-mapping metadata from file: \" + metadataFile, e );\n            }\n            catch ( XmlPullParserException e )\n            {\n                throw new MojoExecutionException( \"Cannot parse plugin-mapping metadata from file: \" + metadataFile, e );\n            }\n            finally\n            {\n                IOUtil.close( reader );\n            }\n        }\n        \n        if ( pluginMap == null )\n        {\n            pluginMap = new PluginMap();\n            \n            pluginMap.setGroupId( project.getGroupId() );\n        }\n\n        boolean shouldUpdate = true;\n        \n        for ( Iterator it = pluginMap.getPlugins().iterator(); it.hasNext(); )\n        {\n            MappedPlugin preExisting = (MappedPlugin) it.next();\n\n            if ( preExisting.getArtifactId().equals( project.getArtifactId() ) )\n            {\n                getLog().info( \"Plugin-mapping metadata for prefix: \" + project.getArtifactId() + \" already exists. Skipping.\" );\n                \n                shouldUpdate = false;\n                break;\n            }\n        }\n\n        if ( shouldUpdate )\n        {\n            MappedPlugin mappedPlugin = new MappedPlugin();\n\n            mappedPlugin.setArtifactId( project.getArtifactId() );\n\n            mappedPlugin.setPrefix( getGoalPrefix() );\n\n            mappedPlugin.setPackagingHandlers( extractPackagingHandlers() );\n\n            pluginMap.addPlugin( mappedPlugin );\n\n            Writer writer = null;\n            try\n            {\n                File generatedMetadataFile = new File( metadataOutputDirectory, metadata.getRepositoryPath() );\n                \n                File dir = generatedMetadataFile.getParentFile();\n\n                if ( !dir.exists() )\n                {\n                    dir.mkdirs();\n                }\n\n                writer = new FileWriter( generatedMetadataFile );\n\n                PluginMappingXpp3Writer mappingWriter = new PluginMappingXpp3Writer();\n\n                mappingWriter.write( writer, pluginMap );\n                \n                metadata.setFile( generatedMetadataFile );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Error writing repository metadata to build directory.\", e );\n            }\n            finally\n            {\n                IOUtil.close( writer );\n            }\n        }\n        \n        return shouldUpdate;\n    }","id":54769,"modified_method":"protected boolean updatePluginMap( RepositoryMetadata metadata ) throws MojoExecutionException\n    {\n        PluginMappingXpp3Reader mappingReader = new PluginMappingXpp3Reader();\n\n        PluginMap pluginMap = null;\n\n        File metadataFile = metadata.getFile();\n\n        if ( metadataFile != null && metadataFile.exists() )\n        {\n            Reader reader = null;\n\n            try\n            {\n                reader = new FileReader( metadataFile );\n\n                pluginMap = mappingReader.read( reader );\n            }\n            catch ( EOFException e )\n            {\n                getLog().warn( metadata + \" located in: \" + metadataFile + \" seems to be corrupt - OVERWRITING.\" );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot read plugin-mapping metadata from file: \" + metadataFile, e );\n            }\n            catch ( XmlPullParserException e )\n            {\n                throw new MojoExecutionException( \"Cannot parse plugin-mapping metadata from file: \" + metadataFile, e );\n            }\n            finally\n            {\n                IOUtil.close( reader );\n            }\n        }\n        \n        if ( pluginMap == null )\n        {\n            pluginMap = new PluginMap();\n            \n            pluginMap.setGroupId( project.getGroupId() );\n        }\n\n        boolean shouldUpdate = true;\n        \n        for ( Iterator it = pluginMap.getPlugins().iterator(); it.hasNext(); )\n        {\n            MappedPlugin preExisting = (MappedPlugin) it.next();\n\n            if ( preExisting.getArtifactId().equals( project.getArtifactId() ) )\n            {\n                getLog().info( \"Plugin-mapping metadata for prefix: \" + project.getArtifactId() + \" already exists. Skipping.\" );\n                \n                shouldUpdate = false;\n                break;\n            }\n        }\n\n        if ( shouldUpdate )\n        {\n            MappedPlugin mappedPlugin = new MappedPlugin();\n\n            mappedPlugin.setArtifactId( project.getArtifactId() );\n\n            mappedPlugin.setPrefix( getGoalPrefix() );\n\n            pluginMap.addPlugin( mappedPlugin );\n\n            Writer writer = null;\n            try\n            {\n                File generatedMetadataFile = new File( metadataOutputDirectory, metadata.getRepositoryPath() );\n                \n                File dir = generatedMetadataFile.getParentFile();\n\n                if ( !dir.exists() )\n                {\n                    dir.mkdirs();\n                }\n\n                writer = new FileWriter( generatedMetadataFile );\n\n                PluginMappingXpp3Writer mappingWriter = new PluginMappingXpp3Writer();\n\n                mappingWriter.write( writer, pluginMap );\n                \n                metadata.setFile( generatedMetadataFile );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Error writing repository metadata to build directory.\", e );\n            }\n            finally\n            {\n                IOUtil.close( writer );\n            }\n        }\n        \n        return shouldUpdate;\n    }","commit_id":"e78bef04292b2804a9569346e0643c447a5441dd","url":"https://github.com/apache/maven"},{"original_method":"private Map findMappingsForLifecycle( MavenSession session, MavenProject project )\n        throws LifecycleExecutionException\n    {\n        Map mappings;\n\n        String packaging = project.getPackaging();\n        try\n        {\n            PluginMappingManager mappingManager = getPluginMappingManager( session, project );\n\n            Plugin pluginContainingLifecycleMapping = mappingManager.getByPackaging( packaging );\n\n            LifecycleMapping m;\n\n            if ( pluginContainingLifecycleMapping != null )\n            {\n                try\n                {\n                    pluginManager.verifyPlugin( pluginContainingLifecycleMapping, project, session.getSettings(),\n                                                session.getLocalRepository() );\n\n                    m = (LifecycleMapping) pluginManager.getPluginComponent( pluginContainingLifecycleMapping,\n                                                                             LifecycleMapping.ROLE, packaging );\n\n                    mappings = m.getPhases();\n                }\n                catch ( ComponentLookupException e )\n                {\n                    throw new LifecycleExecutionException( \"Plugin: \" + pluginContainingLifecycleMapping.getKey() +\n                        \" declares lifecycle mapping for: \\'\" + packaging +\n                        \"\\', but does not appear to contain the actual mapping among its component descriptors.\", e );\n                }\n            }\n            else\n            {\n                try\n                {\n                    m = (LifecycleMapping) session.lookup( LifecycleMapping.ROLE, packaging );\n\n                    mappings = m.getPhases();\n                }\n                catch ( ComponentLookupException e )\n                {\n                    getLogger().warn(\n                        \"Lifecycle mappings not found for packaging: \\'\" + packaging + \"\\'. Using defaults.\" );\n\n                    getLogger().debug( \"Lifecycle mappings not found for packaging: \\'\" + packaging + \"\\'.\", e );\n\n                    mappings = defaultPhases;\n                }\n            }\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            throw new LifecycleExecutionException(\n                \"Cannot load plugin which defines lifecycle mappings for: \\'\" + packaging + \"\\'.\", e );\n        }\n        catch ( PluginVersionResolutionException e )\n        {\n            throw new LifecycleExecutionException(\n                \"Cannot load plugin which defines lifecycle mappings for: \\'\" + packaging + \"\\'.\", e );\n        }\n        catch ( PluginManagerException e )\n        {\n            throw new LifecycleExecutionException( \"Cannot load lifecycle mappings.\", e );\n        }\n\n        return mappings;\n    }","id":54770,"modified_method":"private Map findMappingsForLifecycle( MavenSession session, MavenProject project )\n        throws ArtifactResolutionException, LifecycleExecutionException\n    {\n        String packaging = project.getPackaging();\n        LifecycleMapping m;\n\n        try\n        {\n            m = (LifecycleMapping) findExtension( project, LifecycleMapping.ROLE, packaging, session.getSettings(),\n                                                  session.getLocalRepository() );\n        }\n        catch ( PluginVersionResolutionException e )\n        {\n            throw new LifecycleExecutionException(\n                \"Cannot load extension plugin obtaining lifecycle mappings for: \\'\" + packaging + \"\\'.\", e );\n        }\n        catch ( PluginManagerException e )\n        {\n            throw new LifecycleExecutionException(\n                \"Cannot load extension plugin obtaining lifecycle mappings for: \\'\" + packaging + \"\\'.\", e );\n        }\n\n        if ( m == null )\n        {\n            try\n            {\n                m = (LifecycleMapping) session.lookup( LifecycleMapping.ROLE, packaging );\n            }\n            catch ( ComponentLookupException e )\n            {\n                getLogger().warn(\n                    \"Lifecycle mappings not found for packaging: \\'\" + packaging + \"\\'. Using defaults.\" );\n\n                getLogger().debug( \"Lifecycle mappings not found for packaging: \\'\" + packaging + \"\\'.\", e );\n\n                return defaultPhases;\n            }\n        }\n\n        return m.getPhases();\n    }","commit_id":"e78bef04292b2804a9569346e0643c447a5441dd","url":"https://github.com/apache/maven"},{"original_method":"private void clearCache()\n    {\n        this.pluginDefinitionsByPackaging = null;\n        this.pluginDefinitionsByPrefix = null;\n    }","id":54771,"modified_method":"private void clearCache()\n    {\n        this.pluginDefinitionsByPrefix = null;\n    }","commit_id":"e78bef04292b2804a9569346e0643c447a5441dd","url":"https://github.com/apache/maven"},{"original_method":"public void setUpdateByRevision(String revision){\n    if (isCheckoutCommand()){\n      asCheckoutCommand().setUpdateByRevisionOrTag(revision);\n    } else if (isUpdateCommand()){\n      asUpdateCommand().setUpdateByRevisionOrTag(revision);\n    }\n  }","id":54772,"modified_method":"public void setUpdateByRevision(String revision){\n    if (isCheckoutCommand()){\n      asCheckoutCommand().setUpdateByRevisionOrTag(revision);\n    } else if (isUpdateCommand()){\n      asUpdateCommand().setUpdateByRevisionOrTag(revision);\n    } else if (isExportCommand()) {\n      asExportCommand().setUpdateByRevisionOrTag(revision);\n    }\n  }","commit_id":"1968a9ba849abc77e0bd14238e1ce287e26514cc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected Command createCommand(CvsRootProvider root, CvsExecutionEnvironment cvsExecutionEnvironment) {\n    myState = LOADING;\n    myRoot.changeAdminRootTo(new File(\".\"));\n    myRoot.changeLocalRootTo(new File(\".\"));\n    CheckoutCommand command = new CheckoutCommand();\n    command.setRecursive(false);\n    command.addModule(myModuleName);\n    command.setPrintToOutput(true);\n\n    myRevisionOrDate.setForCommand(command);\n\n    return command;\n  }","id":54773,"modified_method":"protected synchronized Command createCommand(CvsRootProvider root, CvsExecutionEnvironment cvsExecutionEnvironment) {\n    myState = LOADING;\n    try {\n      myTempDirectory = FileUtil.createTempDirectory(\"checkout\", \"cvs\");\n      myTempDirectory.deleteOnExit();\n      LOG.assertTrue(myTempDirectory.isDirectory());\n    }\n    catch (IOException e) {\n      cvsExecutionEnvironment.getErrorProcessor().addError(new CvsException(\"Could not create temp directory:\"\n                                                                            + e.getLocalizedMessage(), root.getCvsRootAsString())\n                                                           );\n      return null;\n    }\n    myRoot.changeLocalRootTo(myTempDirectory);\n    myRoot.changeAdminRootTo(myTempDirectory);\n    ExportCommand command = new ExportCommand();\n    command.setRecursive(false);\n    command.addModule(myModuleName);\n\n    myRevisionOrDate.setForCommand(command);\n\n    return command;\n  }","commit_id":"1968a9ba849abc77e0bd14238e1ce287e26514cc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GetFileContentOperation(File cvsFile, CvsEnvironment environment, RevisionOrDate revisionOrDate) {\n    super(environment);\n    LOG.assertTrue(revisionOrDate != null);\n    myRevisionOrDate = revisionOrDate;\n    myRoot = CvsRootProvider.createOn(null, environment);\n    myModuleName = cvsFile.getPath().replace(File.separatorChar, '/');\n    myCvsRevisionNumber = myRevisionOrDate.getCvsRevisionNumber();\n  }","id":54774,"modified_method":"public GetFileContentOperation(File cvsFile, CvsEnvironment environment, RevisionOrDate revisionOrDate) {\n    super(environment);\n    LOG.assertTrue(revisionOrDate != null);\n    myRevisionOrDate = revisionOrDate;\n    myRoot = CvsRootProvider.createOn(null, environment);\n    myModuleName = cvsFile.getPath().replace(File.separatorChar, '/');\n    myFileIsBinary = FileTypeManager.getInstance().getFileTypeByFileName(cvsFile.getName()).isBinary();\n    myCvsRevisionNumber = myRevisionOrDate.getCvsRevisionNumber();\n  }","commit_id":"1968a9ba849abc77e0bd14238e1ce287e26514cc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private synchronized byte[] loadFileBytes() {\n    if (myState != LOADING) {\n      LOG.error(\"state = \" + String.valueOf(myState));\n    }\n    if (myReader.isEmpty()) {\n      myState = DELETED;\n      return null;\n    }\n    else {\n      myState = SUCCESSFULLY_LOADED;\n      return myReader.getReadContent();\n    }\n  }","id":54775,"modified_method":"private synchronized byte[] loadFileBytes() {\n    try {\n      LOG.assertTrue(myState == LOADING, \"state = \" + String.valueOf(myState));\n      LOG.assertTrue(myTempDirectory != null);\n      LOG.assertTrue(myTempDirectory.isDirectory());\n      File file = getFile();\n      if (!file.isFile()) {\n        myState = FILE_NOT_FOUND;\n        return new byte[0];\n      }\n      else {\n        myState = SUCCESSFULLY_LOADED;\n      }\n      if (myFileIsBinary) {\n        return loadBinaryContent(file);\n      }\n      else {\n        return loadTextContent(file);\n      }\n    }\n    catch (IOException e) {\n      LOG.error(e);\n      return new byte[0];\n    }\n    finally {\n      delete(myTempDirectory);\n    }\n  }","commit_id":"1968a9ba849abc77e0bd14238e1ce287e26514cc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void gotEntry(FileObject abstractFileObject, Entry entry) {\n    super.gotEntry(abstractFileObject, entry);\n    if (entry == null) {\n      myState = DELETED;\n      myFileBytes = ArrayUtil.EMPTY_BYTE_ARRAY;\n    }\n    else {\n      myRevision = entry.getRevision();\n      myCvsRevisionNumber = new CvsRevisionNumber(myRevision);\n    }\n  }","id":54776,"modified_method":"public synchronized void gotEntry(FileObject abstractFileObject, Entry entry) {\n    if (entry == null) {\n      myState = DELETED;\n      myFileBytes = new byte[0];\n      delete(myTempDirectory);\n    }\n    else {\n      myRevision = entry.getRevision();\n      myCvsRevisionNumber = new CvsRevisionNumber(myRevision);\n    }\n  }","commit_id":"1968a9ba849abc77e0bd14238e1ce287e26514cc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setForCommand(Command command) {\n    CommandWrapper wrapper = new CommandWrapper(command);\n    wrapper.setUpdateByRevision(myStickyTag);\n    wrapper.setUpdateByDate(myStickyDate);\n  }","id":54777,"modified_method":"public void setForCommand(Command command) {\n    CommandWrapper wrapper = new CommandWrapper(command);\n    wrapper.setUpdateByRevision(myStickyTag == null && myStickyDate == null ? \"HEAD\" : myStickyTag);\n    wrapper.setUpdateByDate(myStickyDate);\n  }","commit_id":"1968a9ba849abc77e0bd14238e1ce287e26514cc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void test() {\n        Receiver receiver = new Receiver();\n        MessageOutputStream out = new MessageOutputStream(_context, receiver);\n        byte buf[] = new byte[128*1024];\n        _context.random().nextBytes(buf);\n        try {\n            out.write(buf);\n            out.flush();\n        } catch (IOException ioe) { ioe.printStackTrace(); }\n        byte read[] = receiver.getData();\n        int firstOff = -1;\n        for (int k = 0; k < buf.length; k++) {\n            if (buf[k] != read[k]) {\n                firstOff = k;\n                break;\n            }\n        }\n        if (firstOff < 0) {\n            System.out.println(\"** Read match\");\n        } else {\n            System.out.println(\"** Read does not match: first off = \" + firstOff);\n            _log.error(\"read does not match (first off = \" + firstOff + \"): \\n\"\n                        + Base64.encode(buf) + \"\\n\" \n                        + Base64.encode(read));\n        }\n    }","id":54778,"modified_method":"@Test\n    public void test() throws Exception {\n        Receiver receiver = new Receiver();\n        MessageOutputStream out = new MessageOutputStream(_context, _st2, receiver, 100);\n        byte buf[] = new byte[128*1024];\n        _context.random().nextBytes(buf);\n        out.write(buf);\n        out.flush();\n        byte read[] = receiver.getData();\n        int firstOff = -1;\n        for (int k = 0; k < buf.length; k++) {\n            if (buf[k] != read[k]) {\n                firstOff = k;\n                break;\n            }\n        }\n        assertTrue(\n                \"read does not match (first off = \" + firstOff + \"): \\n\"\n                    + Base64.encode(buf) + \"\\n\" \n                    + Base64.encode(read)\n                ,\n                firstOff < 0);\n    }","commit_id":"a308179d8130cb76a6b1ed71d447bc4294feadac","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public void test() {\n        try {\n            I2PAppContext context = I2PAppContext.getGlobalContext();\n            I2PSession session = createSession();\n            ConnectionManager mgr = new ConnectionManager(context, session, -1, null);\n            Log log = context.logManager().getLog(PingTest.class);\n            for (int i = 0; i < 10; i++) {\n                log.debug(\"ping \" + i);\n                long before = context.clock().now();\n                boolean ponged = mgr.ping(session.getMyDestination(), 2*1000);\n                long after = context.clock().now();\n                log.debug(\"ponged? \" + ponged + \" after \" + (after-before) + \"ms\");\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        try { Thread.sleep(30*1000); } catch (Exception e) {}\n        \n    }","id":54779,"modified_method":"@Test\n    public void test() throws Exception {\n        I2PAppContext context = I2PAppContext.getGlobalContext();\n        I2PSession session = createSession();\n        ConnectionManager mgr = new ConnectionManager(context, session, new ConnectionOptions());\n        for (int i = 0; i < 10; i++) {\n            boolean ponged = mgr.ping(session.getMyDestination(), 2*1000);\n            assertTrue(ponged);\n        }\n    }","commit_id":"a308179d8130cb76a6b1ed71d447bc4294feadac","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private I2PSession createSession() {\n        try {\n            I2PClient client = I2PClientFactory.createClient();\n            ByteArrayOutputStream baos = new ByteArrayOutputStream(512);\n            Destination dest = client.createDestination(baos);\n            I2PSession sess = client.createSession(new ByteArrayInputStream(baos.toByteArray()), new Properties());\n            sess.connect();\n            return sess;\n        } catch (Exception e) {\n            e.printStackTrace();\n            throw new RuntimeException(\"b0rk b0rk b0rk\");\n        }\n    }","id":54780,"modified_method":"private I2PSession createSession() throws Exception {\n        I2PClient client = I2PClientFactory.createClient();\n        ByteArrayOutputStream baos = new ByteArrayOutputStream(512);\n        client.createDestination(baos);\n        I2PSession sess = client.createSession(new ByteArrayInputStream(baos.toByteArray()), new Properties());\n        sess.connect();\n        return sess;\n    }","commit_id":"a308179d8130cb76a6b1ed71d447bc4294feadac","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"@Nullable\n  public Result applyFilter(final String line, final int entireLength) {\n    final boolean dumb = myDumbService.isDumb();\n    List<Filter> filters = myFilters;\n    int count = filters.size();\n    //noinspection ForLoopReplaceableByForEach\n    for (int i = 0; i < count; i++) {\n      Filter filter = filters.get(i);\n      if (!dumb || DumbService.isDumbAware(filter)) {\n        long t0 = System.currentTimeMillis();\n        final Result info = filter.applyFilter(line, entireLength);\n        t0 = (System.currentTimeMillis() - t0);\n        if (t0 > 1000) LOG.error(\"applyFilter \" + filter.getClass().getSimpleName() + \" took\" + t0 + \"ms on '''\" + line + \"'''\");\n        if (info != null) {\n          return info;\n        }\n      }\n    }\n    return null;\n  }","id":54781,"modified_method":"@Nullable\n  public Result applyFilter(final String line, final int entireLength) {\n    final boolean dumb = myDumbService.isDumb();\n    List<Filter> filters = myFilters;\n    int count = filters.size();\n    //noinspection ForLoopReplaceableByForEach\n    for (int i = 0; i < count; i++) {\n      Filter filter = filters.get(i);\n      if (!dumb || DumbService.isDumbAware(filter)) {\n        long t0 = System.currentTimeMillis();\n        final Result info = filter.applyFilter(line, entireLength);\n        t0 = (System.currentTimeMillis() - t0);\n        LOG.assertTrue(t0 < 100, filter.getClass().getSimpleName() + \".applyFilter() took \" + t0 + \" ms on '''\" + line + \"'''\");\n        if (info != null) {\n          return info;\n        }\n      }\n    }\n    return null;\n  }","commit_id":"f5458f96d13456fff01c3589cb7313c49bf04ee4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n\t * @see javax.swing.event.TreeModelListener#treeNodesRemoved(javax.swing.event.TreeModelEvent)\n\t */\n\tpublic final void treeNodesRemoved(TreeModelEvent removalEvent)\n\t{\n\t\tif (dirtyAll)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// get the parent node of deleted nodes\n\t\tObject parentNode = removalEvent.getTreePath().getLastPathComponent();\n\t\tTreeItem parentItem = nodeToItemMap.get(parentNode);\n\n\t\tif (parentItem != null && isNodeVisible(parentNode))\n\t\t{\n\t\t\tif (isNodeExpanded(parentNode))\n\t\t\t{\n\t\t\t\t// deleted nodes were visible; we need to delete their TreeItems\n\t\t\t\tfor (Object deletedNode : removalEvent.getChildren())\n\t\t\t\t{\n\t\t\t\t\tTreeItem itemToDelete = nodeToItemMap.get(deletedNode);\n\t\t\t\t\tif (itemToDelete != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tmarkTheLastButOneChildDirty(parentItem, itemToDelete);\n\n\t\t\t\t\t\t// remove all the deleted item's children\n\t\t\t\t\t\tvisitItemChildren(itemToDelete, new IItemCallback()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpublic void visitItem(TreeItem item)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tremoveItem(item);\n\t\t\t\t\t\t\t\tgetTreeState().selectNode(item.getModelObject(), false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tparentItem.getChildren().remove(itemToDelete);\n\t\t\t\t\t\tremoveItem(itemToDelete);\n\t\t\t\t\t\tgetTreeState().selectNode(itemToDelete.getModelObject(), false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!parentItem.hasChildTreeItems())\n\t\t\t{\n\t\t\t\t// rebuild parent's icon to show it no longer has children\n\t\t\t\tinvalidateNode(parentNode, true);\n\t\t\t}\n\t\t}\n\t}","id":54782,"modified_method":"/**\n\t * @see javax.swing.event.TreeModelListener#treeNodesRemoved(javax.swing.event.TreeModelEvent)\n\t */\n\tpublic final void treeNodesRemoved(TreeModelEvent removalEvent)\n\t{\n\t\tif (dirtyAll)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// get the parent node of deleted nodes\n\t\tObject parentNode = removalEvent.getTreePath().getLastPathComponent();\n\t\tTreeItem parentItem = nodeToItemMap.get(parentNode);\n\n\t\t// unselect all removed items\n\t\tList<Object> selection = new ArrayList<Object>(getTreeState().getSelectedNodes());\n\t\tList<Object> removed = Arrays.asList(removalEvent.getChildren());\n\t\tfor (Object selectedNode : selection)\n\t\t{\n\t\t\tObject cursor = selectedNode;\n\t\t\twhile (cursor != null)\n\t\t\t{\n\t\t\t\tif (removed.contains(cursor))\n\t\t\t\t{\n\t\t\t\t\tgetTreeState().selectNode(selectedNode, false);\n\t\t\t\t}\n\t\t\t\tif (cursor instanceof TreeNode)\n\t\t\t\t{\n\t\t\t\t\tcursor = ((TreeNode)cursor).getParent();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (parentItem != null && isNodeVisible(parentNode))\n\t\t{\n\t\t\tif (isNodeExpanded(parentNode))\n\t\t\t{\n\t\t\t\t// deleted nodes were visible; we need to delete their TreeItems\n\t\t\t\tfor (Object deletedNode : removalEvent.getChildren())\n\t\t\t\t{\n\t\t\t\t\tTreeItem itemToDelete = nodeToItemMap.get(deletedNode);\n\t\t\t\t\tif (itemToDelete != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tmarkTheLastButOneChildDirty(parentItem, itemToDelete);\n\n\t\t\t\t\t\t// remove all the deleted item's children\n\t\t\t\t\t\tvisitItemChildren(itemToDelete, new IItemCallback()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpublic void visitItem(TreeItem item)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tremoveItem(item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tparentItem.getChildren().remove(itemToDelete);\n\t\t\t\t\t\tremoveItem(itemToDelete);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!parentItem.hasChildTreeItems())\n\t\t\t{\n\t\t\t\t// rebuild parent's icon to show it no longer has children\n\t\t\t\tinvalidateNode(parentNode, true);\n\t\t\t}\n\t\t}\n\t}","commit_id":"3b0670f6aa96cd428b16544aa2b3ee417bc6602d","url":"https://github.com/apache/wicket"},{"original_method":"public boolean isValid(EditorCell cell) {\n    if (cell == myRootCell) return true;\n    if (cell.getParent() == null) return false;\n    return isValid(cell.getParent());\n  }","id":54783,"modified_method":"public boolean isValid(EditorCell cell) {\n    if (cell == myRootCell) return true;\n    if (cell == null) return false;\n    if (cell.getParent() == null) return false;\n    return isValid(cell.getParent());\n  }","commit_id":"b12ca33f5c5488b208fec61dfa6ce54133216510","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void modelChangedInCommand(List<SModelEvent> events, EditorContext editorContext) {\n      if (!EventUtil.isDramaticalChange(events)) {\n        myRootCell.updateView();\n        relayout();\n      } else {\n\n        String cellId = null;\n        String cellRole = null;\n\n        if (editorContext != null) {\n          AbstractEditorComponent nodeEditorComponent = editorContext.getNodeEditorComponent();\n          if (nodeEditorComponent != null) {\n            EditorCell selectedCell = nodeEditorComponent.getSelectedCell();\n            if (selectedCell != null) {\n              cellId = (String)selectedCell.getUserObject(EditorCell.CELL_ID);\n              cellRole = (String)selectedCell.getUserObject(EditorCell.ROLE);\n            }\n          }\n        }\n\n        //todo optimize\n        rebuildEditorContent(events);\n\n        SModelEvent lastAdd = null;\n        SModelEvent lastRemove = null;\n\n\n        for (SModelEvent e : events) {\n          if (e instanceof SModelChildEvent) {\n            SModelChildEvent ce = (SModelChildEvent) e;\n            if (ce.isAdded()) lastAdd = ce;\n            if (ce.isRemoved()) lastRemove = ce;\n          }\n\n          if (e instanceof SModelReferenceEvent) {\n            SModelReferenceEvent re = (SModelReferenceEvent) e;\n            if (re.isAdded()) lastAdd = re;\n            if (re.isRemoved()) lastRemove = re;\n          }\n        }\n\n        if (lastAdd != null) {\n          if (lastAdd instanceof SModelChildEvent) {\n            SModelChildEvent ce = (SModelChildEvent) lastAdd;\n\n            EditorCell error = findErrorOrEditableCell(findNodeCell(ce.getChild()));\n            if (error == null) {\n              selectNode(ce.getChild());\n            } else {\n              changeSelection(error);\n              if (error instanceof EditorCell_Label && !error.isErrorState()) {\n                ((EditorCell_Label) error).getTextLine().end();\n              }\n            }\n            return;\n          }\n\n          if (lastAdd instanceof SModelReferenceEvent) {\n            SModelReferenceEvent re = (SModelReferenceEvent) lastAdd;\n            selectRefCell(re.getReference(), cellRole);\n            return;\n          }\n\n        }\n\n        if (lastRemove != null) {\n          if (lastRemove instanceof SModelChildEvent) {\n            SModelChildEvent ce = (SModelChildEvent) lastRemove;\n            int index = ce.getChildIndex();\n            String role = ce.getChildRole();\n            SNode parent = ce.getParent();\n\n            if (parent.getChildCount() > index) {\n              SNode child = parent.getChildAt(index);\n              if (child.getRole_().equals(role)) {\n                selectNode(child);\n                return;\n              }\n            }\n\n            if (index != 0) {\n              SNode child = parent.getChildAt(index - 1);\n              if (child.getRole_().equals(role)) {\n                selectNode(child);\n                return;\n              }\n            }\n\n            selectNode(parent);\n            return;\n          }\n\n          if (lastRemove instanceof SModelReferenceEvent) {\n            SModelReferenceEvent re = (SModelReferenceEvent) lastRemove;\n            selectRefCell(re.getReference(), cellId);\n            return;\n          }\n        }\n      }\n    }","id":54784,"modified_method":"public void modelChangedInCommand(List<SModelEvent> events, EditorContext editorContext) {\n      if (!EventUtil.isDramaticalChange(events)) {\n        myRootCell.updateView();\n        relayout();\n      } else {\n\n        String cellId = null;\n        String cellRole = null;\n\n        if (editorContext != null) {\n          AbstractEditorComponent nodeEditorComponent = editorContext.getNodeEditorComponent();\n          if (nodeEditorComponent != null) {\n            EditorCell selectedCell = nodeEditorComponent.getSelectedCell();\n            if (selectedCell != null) {\n              cellId = (String)selectedCell.getUserObject(EditorCell.CELL_ID);\n              cellRole = (String)selectedCell.getUserObject(EditorCell.ROLE);\n            }\n          }\n        }\n\n        //todo optimize\n        rebuildEditorContent(events);\n\n        SModelEvent lastAdd = null;\n        SModelEvent lastRemove = null;\n\n\n        for (SModelEvent e : events) {\n          if (e instanceof SModelChildEvent) {\n            SModelChildEvent ce = (SModelChildEvent) e;\n            if (ce.isAdded()) lastAdd = ce;\n            if (ce.isRemoved()) lastRemove = ce;\n          }\n\n          if (e instanceof SModelReferenceEvent) {\n            SModelReferenceEvent re = (SModelReferenceEvent) e;\n            if (re.isAdded()) lastAdd = re;\n            if (re.isRemoved()) lastRemove = re;\n          }\n        }\n\n        if (lastAdd != null) {\n          if (lastAdd instanceof SModelChildEvent) {\n            SModelChildEvent ce = (SModelChildEvent) lastAdd;\n\n            EditorCell error = findErrorOrEditableCell(findNodeCell(ce.getChild()));\n            if (error == null) {\n              selectNode(ce.getChild());\n            } else {\n              changeSelection(error);\n              if (error instanceof EditorCell_Label && !error.isErrorState()) {\n                ((EditorCell_Label) error).getTextLine().end();\n              }\n            }\n            return;\n          }\n\n          if (lastAdd instanceof SModelReferenceEvent) {\n            SModelReferenceEvent re = (SModelReferenceEvent) lastAdd;\n            selectRefCell(re.getReference(), cellRole);\n            return;\n          }\n\n        }\n\n        if (lastRemove != null) {\n          if (lastRemove instanceof SModelChildEvent) {\n            SModelChildEvent ce = (SModelChildEvent) lastRemove;\n            int index = ce.getChildIndex();\n            String role = ce.getChildRole();\n            SNode parent = ce.getParent();\n\n            if (parent.getChildCount() > index) {\n              SNode child = parent.getChildAt(index);\n              if (child.getRole_().equals(role)) {\n                selectNode(child);\n                return;\n              }\n            }\n\n            if (index != 0) {\n              SNode child = parent.getChildAt(index - 1);\n              if (child.getRole_().equals(role)) {\n                selectNode(child);\n                return;\n              }\n            }\n\n\n            EditorCell nullCell = findNodeCellWithRole(parent, role);\n            if (nullCell == null) {\n              selectNode(parent);\n            } else {\n              changeSelection(nullCell);\n            }\n\n            return;\n          }\n\n          if (lastRemove instanceof SModelReferenceEvent) {\n            SModelReferenceEvent re = (SModelReferenceEvent) lastRemove;\n            selectRefCell(re.getReference(), cellId);\n            return;\n          }\n        }\n      }\n    }","commit_id":"b12ca33f5c5488b208fec61dfa6ce54133216510","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean canSelect(SelectInContext context) {\n    return getNode(context) != null;\n  }","id":54785,"modified_method":"public boolean canSelect(SelectInContext context) {\n    return getNode(context) != null || getModel(context)!=null || getModule(context)!=null;\n  }","commit_id":"d1895cedffec5f458212eca44e7f2b8579b7f084","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected void doSelectIn(SelectInContext context, boolean requestFocus) {\n    SNode toSelect = getNode(context);\n    if (toSelect == null) return;\n    ProjectPane.getInstance(myProject).selectNode(toSelect, requestFocus);\n  }","id":54786,"modified_method":"protected void doSelectIn(SelectInContext context, boolean requestFocus) {\n    if (getNode(context) != null) {\n      ProjectPane.getInstance(myProject).selectNode(getNode(context), requestFocus);\n    } else if (getModel(context)!=null) {\n      ProjectPane.getInstance(myProject).selectModel(getModel(context), requestFocus);\n    }else if (getModule(context)!=null) {\n      ProjectPane.getInstance(myProject).selectModule(getModule(context), requestFocus);\n    }\n  }","commit_id":"d1895cedffec5f458212eca44e7f2b8579b7f084","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Nullable\n  public static Icon getRawIcon(final LookupItem item, boolean real) {\n    Icon icon = (Icon)item.getAttribute(LookupItem.ICON_ATTR);\n    if (icon != null) return icon;\n\n    Object o = item.getObject();\n\n    int flags = Iconable.ICON_FLAG_VISIBILITY;\n    if (!real) {\n      if (item.getObject() instanceof String) {\n        return new EmptyIcon(0, 0);\n      }\n\n      return new EmptyIcon(SAMPLE_ICON.getIconWidth() * 2, SAMPLE_ICON.getIconHeight());\n    }\n\n    if (o instanceof Iconable && !(o instanceof PsiElement)) {\n      return ((Iconable)o).getIcon(flags);\n    }\n\n    if (o instanceof LookupValueWithPsiElement) {\n      o = ((LookupValueWithPsiElement)o).getElement();\n    }\n    if (o instanceof PsiElement) {\n      final PsiElement element = (PsiElement)o;\n      if (element.isValid()) {\n        return element.getIcon(flags);\n      }\n    }\n    return null;\n  }","id":54787,"modified_method":"@Nullable\n  public static Icon getRawIcon(final LookupItem item, boolean real) {\n    final Icon icon = _getRawIcon(item, real);\n    if (icon != null && icon.getIconHeight() > SAMPLE_ICON.getIconHeight()) {\n      return new TruncatingIcon(icon, icon.getIconWidth(), SAMPLE_ICON.getIconHeight());\n    }\n    return icon;\n  }","commit_id":"9cc579cd4d8f0cfeb20752f9042ec36fc50bb829","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Icon getIcon(Icon icon){\n    if (icon == null) {\n      return myEmptyIcon;\n    }\n\n    if (icon.getIconWidth() < myEmptyIcon.getIconWidth()) {\n      final RowIcon rowIcon = new RowIcon(2);\n      rowIcon.setIcon(icon, 0);\n      rowIcon.setIcon(new EmptyIcon(myEmptyIcon.getIconWidth() - icon.getIconWidth()), 1);\n      return rowIcon;\n    }\n\n    return icon;\n  }","id":54788,"modified_method":"private Icon getIcon(Icon icon){\n    if (icon == null) {\n      return myEmptyIcon;\n    }\n\n    if (icon.getIconHeight() < myEmptyIcon.getIconHeight() || icon.getIconWidth() < myEmptyIcon.getIconWidth()) {\n      final LayeredIcon layeredIcon = new LayeredIcon(2);\n      layeredIcon.setIcon(icon, 0, 0, (myEmptyIcon.getIconHeight() - icon.getIconHeight()) / 2);\n      layeredIcon.setIcon(myEmptyIcon, 1);\n      return layeredIcon;\n    }\n\n    return icon;\n  }","commit_id":"9cc579cd4d8f0cfeb20752f9042ec36fc50bb829","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public int updateMaximumWidth(final LookupElement item){\n    final LookupElementPresentation p = new LookupElementPresentation();\n    item.renderElement(p);\n    final Icon icon = p.getIcon();\n    if (icon != null && icon.getIconWidth() > myEmptyIcon.getIconWidth()) {\n      myEmptyIcon = new EmptyIcon(icon.getIconWidth(), 2);\n    }\n\n    int maxWidth = Math.min(RealLookupElementPresentation.calculateWidth(p, myNormalMetrics, myBoldMetrics), myMaxWidth);\n    return maxWidth + getCommonIconWidth();\n  }","id":54789,"modified_method":"public int updateMaximumWidth(final LookupElement item){\n    final LookupElementPresentation p = new LookupElementPresentation();\n    item.renderElement(p);\n    final Icon icon = p.getIcon();\n    if (icon != null && (icon.getIconWidth() > myEmptyIcon.getIconWidth() || icon.getIconHeight() > myEmptyIcon.getIconHeight())) {\n      myEmptyIcon = new EmptyIcon(Math.max(icon.getIconWidth(), myEmptyIcon.getIconWidth()), Math.max(icon.getIconHeight(), myEmptyIcon.getIconHeight()));\n    }\n\n    int maxWidth = Math.min(RealLookupElementPresentation.calculateWidth(p, myNormalMetrics, myBoldMetrics), myMaxWidth);\n    return maxWidth + getCommonIconWidth();\n  }","commit_id":"9cc579cd4d8f0cfeb20752f9042ec36fc50bb829","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void loadImageAsync(MapResource r) {\n        try {\n            imageIcon = (ImageIcon) r.getContent();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        // don't set size if this is during a restore, which is the only\n        // time width & height should be allowed less than 10\n        // [ What?? ]\n        if (this.width < 10 && this.height < 10) \n            setSize(imageIcon.getIconWidth(), imageIcon.getIconHeight());\n        layout();\n        notify(LWKey.RepaintComponent);\n    }","id":54790,"modified_method":"private void loadImageAsync(MapResource r) {\n        Object content = new Object();\n        try {\n            content = r.getContent();\n            imageIcon = (ImageIcon) content;\n        } catch (ClassCastException cce) {\n            cce.printStackTrace();\n            System.err.println(\"getContent didn't return ImageIcon: got \"\n                               + content.getClass().getName() + \" from \" + r.getClass() + \" \" + r);\n            imageIcon = null;\n            //if (DEBUG.CASTOR) System.exit(0);\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.err.println(\"error getting \" + r);\n        }\n        // don't set size if this is during a restore [why not?], which is the only\n        // time width & height should be allowed less than 10\n        // [ What?? ] -- todo: this doesn't work if we're here because the resource was changed...\n        //if (this.width < 10 && this.height < 10)\n        if (imageIcon != null) {\n            int w = imageIcon.getIconWidth();\n            int h = imageIcon.getIconHeight();\n            if (w > 0 && h > 0)\n                setSize(w, h);\n            // todo: WHOA -- if this happens in thread, Undo manager can get this setSize AFTER the\n            // user mark has been made, leaving us with unmarked changes that get noticed if\n            // move back & then forward thru the undo chain.\n        }\n        layout();\n        notify(LWKey.RepaintComponent);\n    }","commit_id":"8443ef7557b53dba224cff065f3926659eaa6d7b","url":"https://github.com/VUE/VUE"},{"original_method":"public void setResource(Resource r) {\n        super.setResource(r);\n        if (r instanceof MapResource) {\n\n            final MapResource mr = (MapResource) r;\n\n            // todo: have the LWMap make a call at the end of a\n            // restore to all LWComponents telling them to start\n            // loading any media they need.  Pass in a media tracker\n            // that the LWMap and/or MapViewer can use to track/report\n            // the status of loading, and know when it's 100%\n            // complete.\n\n            try {\n                if (false) {\n                    mImage = java.awt.Toolkit.getDefaultToolkit().getImage(mr.toURL());\n                } else {\n                    new Thread(\"LWImage loader for \" + mr) {\n                        public void run() { loadImageAsync(mr); }\n                    }.start();\n                }\n\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    }","id":54791,"modified_method":"public void setResource(Resource r) {\n        super.setResource(r);\n        if (r instanceof MapResource) {\n\n            final MapResource mr = (MapResource) r;\n\n            // todo: have the LWMap make a call at the end of a\n            // restore to all LWComponents telling them to start\n            // loading any media they need.  Pass in a media tracker\n            // that the LWMap and/or MapViewer can use to track/report\n            // the status of loading, and know when it's 100%\n            // complete.\n\n            try {\n                if (false) {\n                    mImage = java.awt.Toolkit.getDefaultToolkit().getImage(mr.toURL());\n                } else {\n                    if (DEBUG.CASTOR == false) {\n                        new Thread(\"LWImage loader for \" + mr) {\n                            public void run() { loadImageAsync(mr); }\n                        }.start();\n                    } else {\n                        loadImageAsync(mr);\n                    }\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    }","commit_id":"8443ef7557b53dba224cff065f3926659eaa6d7b","url":"https://github.com/VUE/VUE"},{"original_method":"@Override\n  protected LayoutManager createLayoutManager() {\n    return new LayoutManager() {\n      @Override\n      public void addLayoutComponent(String name, Component comp) {\n\n      }\n\n      @Override\n      public void removeLayoutComponent(Component comp) {\n\n      }\n\n      @Override\n      public Dimension preferredLayoutSize(Container parent) {\n        return null;\n      }\n\n      @Override\n      public Dimension minimumLayoutSize(Container parent) {\n        return null;\n      }\n\n      @Override\n      public void layoutContainer(Container parent) {\n        JComboBox cb = (JComboBox)parent;\n        int width = cb.getWidth();\n        int height = cb.getHeight();\n\n        Insets insets = getInsets();\n        int buttonHeight = height - (insets.top + insets.bottom);\n        int buttonWidth = COMBOBOX.getIconWidth();\n        if (arrowButton != null) {\n          Insets arrowInsets = arrowButton.getInsets();\n          buttonWidth = arrowButton.getPreferredSize().width + arrowInsets.left + arrowInsets.right;\n        }\n        Rectangle cvb;\n\n        if (arrowButton != null) {\n            arrowButton.setBounds(width - (insets.right + buttonWidth),\n                                  insets.top, buttonWidth, buttonHeight);\n        }\n        if ( editor != null ) {\n          cvb = rectangleForCurrentValue();\n          editor.setBounds(cvb);\n        }\n\n      }\n    };\n  }","id":54792,"modified_method":"@Override\n  protected LayoutManager createLayoutManager() {\n    return new LayoutManager() {\n      @Override\n      public void addLayoutComponent(String name, Component comp) {\n\n      }\n\n      @Override\n      public void removeLayoutComponent(Component comp) {\n\n      }\n\n      @Override\n      public Dimension preferredLayoutSize(Container parent) {\n        return parent.getPreferredSize();\n      }\n\n      @Override\n      public Dimension minimumLayoutSize(Container parent) {\n        return parent.getMinimumSize();\n      }\n\n      @Override\n      public void layoutContainer(Container parent) {\n        JComboBox cb = (JComboBox)parent;\n        int width = cb.getWidth();\n        int height = cb.getHeight();\n\n        Insets insets = getInsets();\n        int buttonHeight = height - (insets.top + insets.bottom);\n        int buttonWidth = COMBOBOX.getIconWidth();\n        if (arrowButton != null) {\n          Insets arrowInsets = arrowButton.getInsets();\n          buttonWidth = arrowButton.getPreferredSize().width + arrowInsets.left + arrowInsets.right;\n        }\n        Rectangle cvb;\n\n        if (arrowButton != null) {\n            arrowButton.setBounds(width - (insets.right + buttonWidth),\n                                  insets.top, buttonWidth, buttonHeight);\n        }\n        if ( editor != null ) {\n          cvb = rectangleForCurrentValue();\n          editor.setBounds(cvb);\n        }\n\n      }\n    };\n  }","commit_id":"876df2de40fb5872041807b39e84a782c469da35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected ComboBoxEditor createEditor() {\n      final ComboBoxEditor comboBoxEditor = new BasicComboBoxEditor.UIResource() {\n        @Override\n        protected JTextField createEditorComponent() {\n          return new JTextField() {\n            {\n              setOpaque(false);\n              setBorder(new Border() {\n                @Override\n                public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {\n                }\n\n                @Override\n                public Insets getBorderInsets(Component c) {\n                  return JBUI.insets(2, 7, 2, 7);\n                }\n\n                @Override\n                public boolean isBorderOpaque() {\n                  return false;\n                }\n              });\n            }\n\n            public void setText(String s) {\n              if (getText().equals(s)) {\n                return;\n              }\n              super.setText(s);\n            }\n\n            public void setBorder(Border b) {\n                super.setBorder(b);\n            }\n\n            @Override\n            public Dimension getPreferredSize() {\n              Dimension size = super.getPreferredSize();\n              return new Dimension(size.width, COMBOBOX.getIconHeight() - 2);\n            }\n          };\n        }\n      };\n      if (comboBoxEditor.getEditorComponent() != null) {\n        comboBoxEditor.getEditorComponent().addKeyListener(new KeyAdapter() {\n          @Override\n          public void keyPressed(KeyEvent e) {\n            process(e);\n          }\n\n          @Override\n          public void keyReleased(KeyEvent e) {\n            process(e);\n          }\n\n          private void process(KeyEvent e) {\n            final int code = e.getKeyCode();\n            if ((code == KeyEvent.VK_UP || code == KeyEvent.VK_DOWN) && e.getModifiers() == 0) {\n              comboBox.dispatchEvent(e);\n            }\n          }\n        });\n        comboBoxEditor.getEditorComponent().addFocusListener(new FocusAdapter() {\n          @Override\n          public void focusGained(FocusEvent e) {\n            update();\n          }\n\n          @Override\n          public void focusLost(FocusEvent e) {\n            update();\n          }\n\n          void update() {\n            if (comboBox != null) {\n              comboBox.revalidate();\n              comboBox.repaint();\n            }\n          }\n        });\n      }\n      return comboBoxEditor;\n    }","id":54793,"modified_method":"@Override\n  protected ComboBoxEditor createEditor() {\n      final ComboBoxEditor comboBoxEditor = new BasicComboBoxEditor.UIResource() {\n        @Override\n        protected JTextField createEditorComponent() {\n          return new JTextField() {\n            {\n              setOpaque(false);\n            }\n\n            public void setText(String s) {\n              if (getText().equals(s)) {\n                return;\n              }\n              super.setText(s);\n            }\n\n            public void setBorder(Border b) {\n                super.setBorder(b);\n            }\n\n            @Override\n            public Dimension getPreferredSize() {\n              Dimension size = super.getPreferredSize();\n              return new Dimension(size.width, COMBOBOX.getIconHeight() - 6);\n            }\n          };\n        }\n      };\n      if (comboBoxEditor.getEditorComponent() != null) {\n        comboBoxEditor.getEditorComponent().addKeyListener(new KeyAdapter() {\n          @Override\n          public void keyPressed(KeyEvent e) {\n            process(e);\n          }\n\n          @Override\n          public void keyReleased(KeyEvent e) {\n            process(e);\n          }\n\n          private void process(KeyEvent e) {\n            final int code = e.getKeyCode();\n            if ((code == KeyEvent.VK_UP || code == KeyEvent.VK_DOWN) && e.getModifiers() == 0) {\n              comboBox.dispatchEvent(e);\n            }\n          }\n        });\n        comboBoxEditor.getEditorComponent().addFocusListener(new FocusAdapter() {\n          @Override\n          public void focusGained(FocusEvent e) {\n            update();\n          }\n\n          @Override\n          public void focusLost(FocusEvent e) {\n            update();\n          }\n\n          void update() {\n            if (comboBox != null) {\n              comboBox.revalidate();\n              comboBox.repaint();\n            }\n          }\n        });\n      }\n      return comboBoxEditor;\n    }","commit_id":"876df2de40fb5872041807b39e84a782c469da35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected Rectangle rectangleForCurrentValue() {\n    Rectangle rect = super.rectangleForCurrentValue();\n    rect.height=Math.min(rect.height, COMBOBOX.getIconHeight());\n    rect.y+=2;\n    rect.x+=5;\n    rect.height-=4;\n    return rect;\n  }","id":54794,"modified_method":"@Override\n  protected Rectangle rectangleForCurrentValue() {\n    Rectangle rect = super.rectangleForCurrentValue();\n    rect.height=Math.min(rect.height, COMBOBOX.getIconHeight()-8);\n    rect.y+=4;\n    rect.x+=8;\n    return rect;\n  }","commit_id":"876df2de40fb5872041807b39e84a782c469da35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected JButton createArrowButton() {\n    final Color bg = myComboBox.getBackground();\n    final Color fg = myComboBox.getForeground();\n    JButton button = new BasicArrowButton(SwingConstants.SOUTH, bg, fg, fg, fg) {\n      @Override\n      public void paint(Graphics g2) {\n        Icon icon = myComboBox.isEnabled() ? COMBOBOX : COMBOBOX_DISABLED;\n        icon.paintIcon(this, g2, 0, 0);\n      }\n\n      @Override\n      public Dimension getPreferredSize() {\n        return JBUI.size(COMBOBOX.getIconWidth(), COMBOBOX.getIconHeight());\n      }\n    };\n    button.setBorder(BorderFactory.createEmptyBorder());\n    button.setOpaque(false);\n    return button;\n  }","id":54795,"modified_method":"@Override\n  protected JButton createArrowButton() {\n    final Color bg = myComboBox.getBackground();\n    final Color fg = myComboBox.getForeground();\n    JButton button = new BasicArrowButton(SwingConstants.SOUTH, bg, fg, fg, fg) {\n      @Override\n      public void paint(Graphics g2) {\n        Icon icon = myComboBox.isEnabled() ? myComboBox.hasFocus() ? COMBOBOX_FOCUSED : COMBOBOX : COMBOBOX_DISABLED;\n        icon.paintIcon(this, g2, 0, 0);\n      }\n\n      @Override\n      public Dimension getPreferredSize() {\n        return JBUI.size(COMBOBOX.getIconWidth(), COMBOBOX.getIconHeight());\n      }\n    };\n    button.setBorder(BorderFactory.createEmptyBorder());\n    button.setOpaque(false);\n    return button;\n  }","commit_id":"876df2de40fb5872041807b39e84a782c469da35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void paint(Graphics g, JComponent c) {\n    Rectangle r = arrowButton.getBounds();\n    int stop = r.x;\n    g.setClip(0,0, stop, COMBOBOX.getIconHeight());\n    boolean enabled = c.isEnabled();\n    Icon icon = enabled ? COMBOBOX_LEFT : COMBOBOX_LEFT_DISABLED;\n    icon.paintIcon(c,g,0,r.y);\n    int x = icon.getIconWidth();\n    icon = enabled ? COMBOBOX_TOP_BOTTOM : COMBOBOX_TOP_BOTTOM_DISABLED;\n    while (x < stop) {\n      icon.paintIcon(c, g, x, r.y);\n      x+=icon.getIconWidth();\n    }\n    icon = enabled ? COMBOBOX : COMBOBOX_DISABLED;\n    icon.paintIcon(c, g, r.x, r.y);\n\n    hasFocus = comboBox.hasFocus();\n    if ( !comboBox.isEditable() ) {\n      paintCurrentValue(g,rectangleForCurrentValue(), false);\n    }\n  }","id":54796,"modified_method":"@Override\n  public void paint(Graphics g, JComponent c) {\n    Rectangle r = arrowButton.getBounds();\n    int stop = r.x;\n    Insets clip = getInsets();\n    Graphics gg = g.create(clip.left, r.y, stop - clip.left, COMBOBOX.getIconHeight());\n    boolean enabled = c.isEnabled();\n    boolean hasFocus = c.hasFocus();\n    Icon icon = enabled ? hasFocus ? COMBOBOX_LEFT_FOCUSED : COMBOBOX_LEFT : COMBOBOX_LEFT_DISABLED;\n    icon.paintIcon(c,gg,0,0);\n    int x = icon.getIconWidth();\n    icon = enabled ? hasFocus ? COMBOBOX_TOP_BOTTOM_FOCUSED : COMBOBOX_TOP_BOTTOM : COMBOBOX_TOP_BOTTOM_DISABLED;\n    while (x < stop) {\n      icon.paintIcon(c, gg, x, 0);\n      x+=icon.getIconWidth();\n    }\n    gg.dispose();\n    icon = enabled ? hasFocus ? COMBOBOX_FOCUSED : COMBOBOX : COMBOBOX_DISABLED;\n    icon.paintIcon(c, g, r.x, r.y);\n\n    if ( !comboBox.isEditable() ) {\n      paintCurrentValue(g, rectangleForCurrentValue(), false);\n    }\n  }","commit_id":"876df2de40fb5872041807b39e84a782c469da35","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void paintComponent(Graphics g) {\n    super.paintComponent(g);\n    if (UIUtil.isUnderDarcula()) {\n      g.setColor(UIManager.getColor(\"MenuItem.background\"));\n      g.fillRect(0, 0, getWidth(), getHeight());\n    }\n  }","id":54797,"modified_method":"@Override\n  protected void paintComponent(Graphics g) {\n    super.paintComponent(g);\n    if (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF()) {\n      g.setColor(UIManager.getColor(\"MenuItem.background\"));\n      g.fillRect(0, 0, getWidth(), getHeight());\n    }\n  }","commit_id":"b3c0ae1048e60d07f982bfb5e9e2cfeebf7001cd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void paintBorder(final Component c, final Graphics g, final int x, final int y, final int width, final int height) {\n      final Graphics2D g2d = (Graphics2D) g.create();\n\n      final Color background = UIUtil.getPanelBackground();\n\n      g2d.setColor(background);\n      g2d.fillRect(0, 0, width, height);\n\n      g2d.setColor(UIUtil.isUnderDarcula() ? BORDER_TOP_COLOR.darker().darker() : BORDER_TOP_COLOR);\n      g2d.drawLine(0, 0, width, 0);\n\n      g2d.setColor(UIUtil.isUnderDarcula() ? BORDER_BOTTOM_COLOR.darker().darker() : BORDER_BOTTOM_COLOR);\n      g2d.drawLine(0, height, width, height);\n\n      g2d.dispose();\n    }","id":54798,"modified_method":"public void paintBorder(final Component c, final Graphics g, final int x, final int y, final int width, final int height) {\n      final Graphics2D g2d = (Graphics2D) g.create();\n\n      final Color background = UIUtil.getPanelBackground();\n\n      g2d.setColor(background);\n      g2d.fillRect(0, 0, width, height);\n\n      Color topColor = UIUtil.isUnderDarcula() ? BORDER_TOP_COLOR.darker().darker() : BORDER_TOP_COLOR;\n      if (SystemInfo.isMac && UIUtil.isUnderIntelliJLaF()) {\n        topColor = Gray.xC9;\n      }\n      g2d.setColor(topColor);\n      g2d.drawLine(0, 0, width, 0);\n\n      if (!UIUtil.isUnderDarcula()) {\n        g2d.setColor(BORDER_BOTTOM_COLOR);\n        g2d.drawLine(0, height, width, height);\n      }\n\n      g2d.dispose();\n    }","commit_id":"009e5e40b1d33af0eaa2b8e94f635bf4b2c97721","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private int computeHeight() {\n      FontMetrics fm = myRootPane.getFontMetrics(getFont());\n      int fontHeight = fm.getHeight();\n      fontHeight += 7;\n      int iconHeight = 0;\n      if (getWindowDecorationStyle() == JRootPane.FRAME) {\n        iconHeight = IMAGE_HEIGHT;\n      }\n\n      return Math.max(Math.max(fontHeight, iconHeight), JBUI.scale(myIdeMenu == null ? 28 : 36));\n    }","id":54799,"modified_method":"private int computeHeight() {\n      FontMetrics fm = myRootPane.getFontMetrics(getFont());\n      int fontHeight = fm.getHeight();\n      fontHeight += 7;\n      int iconHeight = 0;\n      if (getWindowDecorationStyle() == JRootPane.FRAME) {\n        iconHeight = IMAGE_HEIGHT;\n      }\n\n      return Math.max(Math.max(fontHeight, iconHeight), JBUI.scale(31));\n    }","commit_id":"896a59ae495be51654dbead566ab5c3c15328e3d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void paint(Graphics g) {\n      if (isOpaque()) {\n        g.setColor(getBackground());\n        g.fillRect(0, 0, getWidth(), getHeight());\n      }\n\n      if (mySystemIcon != null) {\n        g.drawImage(mySystemIcon, 0, 0, IMAGE_WIDTH, IMAGE_HEIGHT, null);\n      }\n      else {\n        Icon icon = UIManager.getIcon(\"InternalFrame.icon\");\n\n        if (icon != null) {\n          icon.paintIcon(this, g, 0, 0);\n        }\n      }\n    }","id":54800,"modified_method":"public void paint(Graphics g) {\n      if (isOpaque()) {\n        g.setColor(getBackground());\n        g.fillRect(0, 0, getWidth(), getHeight());\n      }\n\n      if (mySystemIcon != null) {\n        final int offset = (getHeight() - mySystemIcon.getHeight(null)) / 2;\n        g.drawImage(mySystemIcon, offset, offset, null);\n      }\n      else {\n        Icon icon = UIManager.getIcon(\"InternalFrame.icon\");\n\n        if (icon != null) {\n          icon.paintIcon(this, g, 0, 0);\n        }\n      }\n    }","commit_id":"896a59ae495be51654dbead566ab5c3c15328e3d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void createButtons() {\n    myCloseButton = createButton(\"Close\", UIManager.getIcon(\"InternalFrame.closeIcon\"), myCloseAction, true);\n\n    if (getWindowDecorationStyle() == JRootPane.FRAME) {\n      myMaximizeIcon = UIManager.getIcon(\"InternalFrame.maximizeIcon\");\n      myMinimizeIcon = UIManager.getIcon(\"InternalFrame.minimizeIcon\");\n\n      myIconifyButton = createButton(\"Iconify\", UIManager.getIcon(\"InternalFrame.iconifyIcon\"), myIconifyAction, false);\n      myToggleButton = createButton(\"Maximize\", myMaximizeIcon, myRestoreAction, false);\n    }\n  }","id":54801,"modified_method":"private void createButtons() {\n    myCloseButton = createButton(\"Close\", AllIcons.Windows.CloseActive, AllIcons.Windows.CloseHover, myCloseAction, Color.red);\n\n    if (getWindowDecorationStyle() == JRootPane.FRAME) {\n      myMaximizeIcon = UIManager.getIcon(\"InternalFrame.maximizeIcon\");\n      myMinimizeIcon = UIManager.getIcon(\"InternalFrame.minimizeIcon\");\n\n      myIconifyButton = createButton(\"Iconify\", AllIcons.Windows.MinimizeInactive, AllIcons.Windows.Minimize,  myIconifyAction, new Color(0x55585A));\n      myToggleButton = createButton(\"Maximize\", AllIcons.Windows.MaximizeInactive, AllIcons.Windows.MaximizeInactive, myRestoreAction, new Color(0x55585A));\n    }\n  }","commit_id":"896a59ae495be51654dbead566ab5c3c15328e3d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void layoutContainer(Container c) {\n      int w = getWidth();\n      int h = getHeight();\n      int x;\n      int spacing;\n      int buttonHeight;\n      int buttonWidth;\n\n      if (myCloseButton != null && myCloseButton.getIcon() != null) {\n        buttonHeight = myCloseButton.getIcon().getIconHeight();\n        buttonWidth = myCloseButton.getIcon().getIconWidth();\n      }\n      else {\n        buttonHeight = IMAGE_HEIGHT;\n        buttonWidth = IMAGE_WIDTH;\n      }\n\n      spacing = 5;\n      x = spacing;\n      if (myMenuBar != null) {\n        myMenuBar.setBounds(x, (h - buttonHeight) / 2, buttonWidth, buttonHeight);\n      }\n\n      if (myIdeMenu != null) {\n        final Dimension size = myIdeMenu.getPreferredSize();\n\n        x += spacing + (myMenuBar != null ? buttonWidth : 0);\n\n        myIdeMenu.setBounds(x, (h - size.height) / 2, size.width, size.height);\n      }\n\n      x = w;\n      spacing = 14;\n      x += -spacing - buttonWidth;\n      if (myCloseButton != null) {\n        myCloseButton.setBounds(x, (h - buttonHeight) / 2, buttonWidth, buttonHeight);\n      }\n      spacing = 30;\n      if (getWindowDecorationStyle() == JRootPane.FRAME) {\n        if (Toolkit.getDefaultToolkit().isFrameStateSupported(\n          Frame.MAXIMIZED_BOTH)) {\n          if (myToggleButton.getParent() != null) {\n            //spacing = 10;\n            x += -spacing - buttonWidth;\n            myToggleButton.setBounds(x, (h - buttonHeight) / 2, buttonWidth, buttonHeight);\n          }\n        }\n\n        if (myIconifyButton != null && myIconifyButton.getParent() != null) {\n          x += -spacing - buttonWidth;\n          myIconifyButton.setBounds(x, (h - buttonHeight) / 2, buttonWidth, buttonHeight);\n        }\n      }\n    }","id":54802,"modified_method":"public void layoutContainer(Container c) {\n      int w = getWidth();\n      int h = getHeight();\n      int x;\n      int spacing;\n      int buttonHeight = JBUI.scale(29);\n      int buttonWidth = JBUI.scale(45);\n\n      //if (myCloseButton != null && myCloseButton.getIcon() != null) {\n      //  buttonHeight = myCloseButton.getIcon().getIconHeight();\n      //  buttonWidth = myCloseButton.getIcon().getIconWidth();\n      //}\n      //else {\n      //  buttonHeight = IMAGE_HEIGHT;\n      //  buttonWidth = IMAGE_WIDTH;\n      //}\n\n      spacing = 5;\n      x = spacing;\n      if (myMenuBar != null) {\n        myMenuBar.setBounds(x, (h - buttonHeight) / 2, buttonWidth, buttonHeight);\n      }\n\n      int systemIconSize = mySystemIcon == null ? JBUI.scale(16) : mySystemIcon.getWidth(null);\n\n        x = buttonHeight - systemIconSize + systemIconSize + systemIconSize/2; // offset + width + offset, where offset is (H - iconHeight) / 2\n      if (myIdeMenu != null) {\n        final Dimension size = myIdeMenu.getPreferredSize();\n\n        myIdeMenu.setBounds(x, (h - size.height) / 2, size.width, size.height);\n      }\n\n      x = w;\n      spacing = 0;\n      x -= spacing + buttonWidth;\n      if (myCloseButton != null) {\n        myCloseButton.setBounds(x, (h - buttonHeight) / 2, buttonWidth, buttonHeight);\n      }\n      if (getWindowDecorationStyle() == JRootPane.FRAME) {\n        if (Toolkit.getDefaultToolkit().isFrameStateSupported(\n          Frame.MAXIMIZED_BOTH)) {\n          if (myToggleButton.getParent() != null) {\n            //spacing = 10;\n            x -= spacing + buttonWidth;\n            myToggleButton.setBounds(x, (h - buttonHeight) / 2, buttonWidth, buttonHeight);\n          }\n        }\n\n        if (myIconifyButton != null && myIconifyButton.getParent() != null) {\n          x -= spacing + buttonWidth;\n          myIconifyButton.setBounds(x, (h - buttonHeight) / 2, buttonWidth, buttonHeight);\n        }\n      }\n    }","commit_id":"896a59ae495be51654dbead566ab5c3c15328e3d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static JButton createButton(String accessibleName, Icon icon, Action action, boolean isCloseAction) {\n    JButton button = new JButton() {\n      boolean mouseOverButton = false;\n      {\n        enableEvents(AWTEvent.MOUSE_EVENT_MASK);\n        addMouseListener(new MouseAdapter() {\n          @Override\n          public void mouseEntered(MouseEvent e) {\n            mouseOverButton = true;\n            repaint();\n          }\n\n          @Override\n          public void mouseExited(MouseEvent e) {\n            mouseOverButton = false;\n            repaint();\n          }\n        });\n      }\n      @Override\n      protected void paintComponent(Graphics g) {\n        final Window window = SwingUtilities.windowForComponent(this);\n        float alpha = window.isActive() && mouseOverButton ? 1f : 0.5f;\n        if (isCloseAction && mouseOverButton) {\n          g.setColor(Color.red);\n          g.fillRect(0, 0, getWidth(), getHeight());\n        }\n        final GraphicsConfig config = GraphicsUtil.paintWithAlpha(g, alpha);\n        getIcon().paintIcon(this, g, 0, 0);\n        config.restore();\n      }\n    };\n    button.setFocusPainted(false);\n    button.setFocusable(false);\n    button.setOpaque(false);\n    button.putClientProperty(\"paintActive\", Boolean.TRUE);\n    button.putClientProperty(AccessibleContext.ACCESSIBLE_NAME_PROPERTY, accessibleName);\n    button.setBorder(JBUI.Borders.empty());\n    button.setText(null);\n    button.setAction(action);\n    button.setIcon(icon);\n    return button;\n  }","id":54803,"modified_method":"private static JButton createButton(String accessibleName, Icon icon, Icon hoverIcon, Action action, Color hoverBg) {\n    JButton button = new JButton() {\n      boolean mouseOverButton = false;\n      {\n        enableEvents(AWTEvent.MOUSE_EVENT_MASK);\n        addMouseListener(new MouseAdapter() {\n          @Override\n          public void mouseEntered(MouseEvent e) {\n            mouseOverButton = true;\n            repaint();\n          }\n\n          @Override\n          public void mouseExited(MouseEvent e) {\n            mouseOverButton = false;\n            repaint();\n          }\n        });\n      }\n      @Override\n      protected void paintComponent(Graphics g) {\n        if (mouseOverButton) {\n          g.setColor(hoverBg);\n          g.fillRect(0, 0, getWidth(), getHeight());\n        }\n        IconUtil.paintInCenterOf(this, g, mouseOverButton ? hoverIcon : icon);\n      }\n    };\n    button.setFocusPainted(false);\n    button.setFocusable(false);\n    button.setOpaque(false);\n    button.putClientProperty(\"paintActive\", Boolean.TRUE);\n    button.putClientProperty(AccessibleContext.ACCESSIBLE_NAME_PROPERTY, accessibleName);\n    button.setBorder(JBUI.Borders.empty());\n    button.setText(null);\n    button.setAction(action);\n    button.setIcon(icon);\n    return button;\n  }","commit_id":"896a59ae495be51654dbead566ab5c3c15328e3d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void updateSystemIcon() {\n    Window window = getWindow();\n    if (window == null) {\n      mySystemIcon = null;\n      return;\n    }\n\n    List<Image> icons = window.getIconImages();\n    assert icons != null;\n\n    if (icons.size() == 0) {\n      mySystemIcon = null;\n    } else if (icons.size() == 1) {\n      mySystemIcon = icons.get(0);\n    } else {\n      final JBDimension size = JBUI.size(32);\n      final Image image = icons.get(0);\n      mySystemIcon = Scalr.resize(ImageUtil.toBufferedImage(image), Scalr.Method.ULTRA_QUALITY, size.width, size.height);\n    }\n  }","id":54804,"modified_method":"private void updateSystemIcon() {\n    Window window = getWindow();\n    if (window == null) {\n      mySystemIcon = null;\n      return;\n    }\n\n    List<Image> icons = window.getIconImages();\n    assert icons != null;\n\n    if (icons.size() == 0) {\n      mySystemIcon = null;\n    } else if (icons.size() == 1) {\n      mySystemIcon = icons.get(0);\n    } else {\n      final JBDimension size = JBUI.size(16);\n      final Image image = icons.get(0);\n      mySystemIcon = Scalr.resize(ImageUtil.toBufferedImage(image), Scalr.Method.ULTRA_QUALITY, size.width, size.height);\n    }\n  }","commit_id":"896a59ae495be51654dbead566ab5c3c15328e3d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void paintComponent(Graphics g) {\n    if (getFrame() != null) {\n      setState(getFrame().getExtendedState());\n    }\n    JRootPane rootPane = getRootPane();\n    Window window = getWindow();\n    boolean leftToRight = (window == null) ?\n                          rootPane.getComponentOrientation().isLeftToRight() :\n                          window.getComponentOrientation().isLeftToRight();\n    boolean isSelected = (window == null) ? true : window.isActive();\n    int width = getWidth();\n    int height = getHeight();\n\n    Color background;\n    Color foreground;\n    Color darkShadow;\n\n    if (isSelected) {\n      background = UIUtil.getPanelBackground();//myActiveBackground;\n      foreground = myActiveForeground;\n      darkShadow = Gray._73;//myActiveShadow;\n    }\n    else {\n      background = UIUtil.getPanelBackground(); //myInactiveBackground;\n      foreground = myInactiveForeground;\n      darkShadow = myInactiveShadow;\n    }\n\n    g.setColor(background);\n    g.fillRect(0, 0, width, height);\n\n    //g.setColor(darkShadow);\n    //g.drawLine(0, height - 1, width, height - 1);\n    //g.drawLine(0, 0, 0, 0);\n    //g.drawLine(width - 1, 0, width - 1, 0);\n\n    int xOffset = leftToRight ? 5 : width - 5;\n\n    if (getWindowDecorationStyle() == JRootPane.FRAME) {\n      xOffset += leftToRight ? IMAGE_WIDTH + 5 : -IMAGE_WIDTH - 5;\n    }\n\n    String theTitle = getTitle();\n    if (theTitle != null) {\n      FontMetrics fm = SwingUtilities2.getFontMetrics(rootPane, g);\n\n      g.setColor(foreground);\n\n      int yOffset = ((height - fm.getHeight()) / 2) + fm.getAscent();\n\n      Rectangle rect = new Rectangle(0, 0, 0, 0);\n      if (myIconifyButton != null && myIconifyButton.getParent() != null) {\n        rect = myIconifyButton.getBounds();\n      }\n      int titleW;\n\n      if (leftToRight) {\n        if (rect.x == 0) {\n          rect.x = window.getWidth() - window.getInsets().right - 2;\n        }\n        titleW = rect.x - xOffset - 4;\n        theTitle = SwingUtilities2.clipStringIfNecessary(\n          rootPane, fm, theTitle, titleW);\n      }\n      else {\n        titleW = xOffset - rect.x - rect.width - 4;\n        theTitle = SwingUtilities2.clipStringIfNecessary(\n          rootPane, fm, theTitle, titleW);\n        xOffset -= SwingUtilities2.stringWidth(rootPane, fm, theTitle);\n      }\n      int titleLength = SwingUtilities2.stringWidth(rootPane, fm, theTitle);\n      if (myIdeMenu == null) {\n        SwingUtilities2.drawString(rootPane, g, theTitle, xOffset, yOffset);\n        xOffset += leftToRight ? titleLength + 5 : -5;\n      }\n    }\n\n\n    int w = width;\n    int h = height;\n    h--;\n    g.setColor(UIManager.getColor(\"MenuBar.darcula.borderColor\"));\n    g.drawLine(0, h, w, h);\n    h--;\n    g.setColor(UIManager.getColor(\"MenuBar.darcula.borderShadowColor\"));\n    g.drawLine(0, h, w, h);\n  }","id":54805,"modified_method":"public void paintComponent(Graphics g) {\n    if (getFrame() != null) {\n      setState(getFrame().getExtendedState());\n    }\n    JRootPane rootPane = getRootPane();\n    Window window = getWindow();\n    boolean leftToRight = (window == null) ?\n                          rootPane.getComponentOrientation().isLeftToRight() :\n                          window.getComponentOrientation().isLeftToRight();\n    boolean isSelected = (window == null) ? true : window.isActive();\n    int width = getWidth();\n    int height = getHeight();\n\n    Color background;\n    Color foreground;\n    Color darkShadow;\n\n    if (isSelected) {\n      background = UIUtil.getPanelBackground();//myActiveBackground;\n      foreground = myActiveForeground;\n      darkShadow = Gray._73;//myActiveShadow;\n    }\n    else {\n      background = UIUtil.getPanelBackground(); //myInactiveBackground;\n      foreground = myInactiveForeground;\n      darkShadow = myInactiveShadow;\n    }\n\n    g.setColor(background);\n    g.fillRect(0, 0, width, height);\n\n    //g.setColor(darkShadow);\n    //g.drawLine(0, height - 1, width, height - 1);\n    //g.drawLine(0, 0, 0, 0);\n    //g.drawLine(width - 1, 0, width - 1, 0);\n\n    int xOffset = leftToRight ? 5 : width - 5;\n\n    if (getWindowDecorationStyle() == JRootPane.FRAME) {\n      xOffset += leftToRight ? IMAGE_WIDTH + 5 : -IMAGE_WIDTH - 5;\n    }\n\n    String theTitle = getTitle();\n    if (theTitle != null) {\n      FontMetrics fm = SwingUtilities2.getFontMetrics(rootPane, g);\n\n      g.setColor(foreground);\n\n      int yOffset = ((height - fm.getHeight()) / 2) + fm.getAscent();\n\n      Rectangle rect = new Rectangle(0, 0, 0, 0);\n      if (myIconifyButton != null && myIconifyButton.getParent() != null) {\n        rect = myIconifyButton.getBounds();\n      }\n      int titleW;\n\n      if (leftToRight) {\n        if (rect.x == 0) {\n          rect.x = window.getWidth() - window.getInsets().right - 2;\n        }\n        titleW = rect.x - xOffset - 4;\n        theTitle = SwingUtilities2.clipStringIfNecessary(\n          rootPane, fm, theTitle, titleW);\n      }\n      else {\n        titleW = xOffset - rect.x - rect.width - 4;\n        theTitle = SwingUtilities2.clipStringIfNecessary(\n          rootPane, fm, theTitle, titleW);\n        xOffset -= SwingUtilities2.stringWidth(rootPane, fm, theTitle);\n      }\n      int titleLength = SwingUtilities2.stringWidth(rootPane, fm, theTitle);\n      if (myIdeMenu == null) {\n        SwingUtilities2.drawString(rootPane, g, theTitle, xOffset, yOffset);\n        xOffset += leftToRight ? titleLength + 5 : -5;\n      }\n    }\n\n\n    //int w = width;\n    //int h = height;\n    //h--;\n    g.setColor(UIManager.getColor(\"MenuBar.darcula.borderColor\"));\n    //g.drawLine(0, h, w, h);\n    //h--;\n    //g.setColor(UIManager.getColor(\"MenuBar.darcula.borderShadowColor\"));\n    g.drawLine(0, getHeight()-1, getWidth(), getHeight()-1);\n  }","commit_id":"896a59ae495be51654dbead566ab5c3c15328e3d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public IdeRootPane(ActionManagerEx actionManager, DataManager dataManager, Application application, final IdeFrame frame) {\n    if (SystemInfo.isWindows && (UIUtil.isUnderDarcula() /*|| UIUtil.isUnderIntelliJLaF()*/) && frame instanceof IdeFrameImpl) {\n      //setUI(DarculaRootPaneUI.createUI(this));\n      setWindowDecorationStyle(FRAME);\n    }\n    myActionManager = actionManager;\n\n    myContentPane.add(myNorthPanel, BorderLayout.NORTH);\n\n    myContentPane.addMouseMotionListener(new MouseMotionAdapter() {}); // listen to mouse motion events for a11y\n\n    myStatusBarCustomComponentFactories = application.getExtensions(StatusBarCustomComponentFactory.EP_NAME);\n    myApplication = application;\n\n    createStatusBar(frame);\n\n    updateStatusBarVisibility();\n    updateToolbar();\n\n    myContentPane.add(myStatusBar, BorderLayout.SOUTH);\n\n    if (WindowManagerImpl.isFloatingMenuBarSupported()) {\n      if (!isDecoratedMenu()) {\n        menuBar = new IdeMenuBar(actionManager, dataManager);\n        getLayeredPane().add(menuBar, new Integer(JLayeredPane.DEFAULT_LAYER - 1));\n        if (frame instanceof IdeFrameEx) {\n          addPropertyChangeListener(WindowManagerImpl.FULL_SCREEN, new PropertyChangeListener() {\n            @Override public void propertyChange(PropertyChangeEvent evt) {\n              myFullScreen = ((IdeFrameEx)frame).isInFullScreen();\n            }\n          });\n        }\n      }\n    }\n    else {\n      setJMenuBar(new IdeMenuBar(actionManager, dataManager));\n    }\n\n    myGlassPane = new IdeGlassPaneImpl(this, true);\n    setGlassPane(myGlassPane);\n    myGlassPaneInitialized = true;\n\n    myGlassPane.setVisible(false);\n  }","id":54806,"modified_method":"public IdeRootPane(ActionManagerEx actionManager, DataManager dataManager, Application application, final IdeFrame frame) {\n    if (SystemInfo.isWindows && (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF()) && frame instanceof IdeFrameImpl) {\n      //setUI(DarculaRootPaneUI.createUI(this));\n      setWindowDecorationStyle(FRAME);\n    }\n    myActionManager = actionManager;\n\n    myContentPane.add(myNorthPanel, BorderLayout.NORTH);\n\n    myContentPane.addMouseMotionListener(new MouseMotionAdapter() {}); // listen to mouse motion events for a11y\n\n    myStatusBarCustomComponentFactories = application.getExtensions(StatusBarCustomComponentFactory.EP_NAME);\n    myApplication = application;\n\n    createStatusBar(frame);\n\n    updateStatusBarVisibility();\n    updateToolbar();\n\n    myContentPane.add(myStatusBar, BorderLayout.SOUTH);\n\n    if (WindowManagerImpl.isFloatingMenuBarSupported()) {\n      if (!isDecoratedMenu()) {\n        menuBar = new IdeMenuBar(actionManager, dataManager);\n        getLayeredPane().add(menuBar, new Integer(JLayeredPane.DEFAULT_LAYER - 1));\n        if (frame instanceof IdeFrameEx) {\n          addPropertyChangeListener(WindowManagerImpl.FULL_SCREEN, new PropertyChangeListener() {\n            @Override public void propertyChange(PropertyChangeEvent evt) {\n              myFullScreen = ((IdeFrameEx)frame).isInFullScreen();\n            }\n          });\n        }\n      }\n    }\n    else {\n      setJMenuBar(new IdeMenuBar(actionManager, dataManager));\n    }\n\n    myGlassPane = new IdeGlassPaneImpl(this, true);\n    setGlassPane(myGlassPane);\n    myGlassPaneInitialized = true;\n\n    myGlassPane.setVisible(false);\n  }","commit_id":"896a59ae495be51654dbead566ab5c3c15328e3d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Sets given icon to display between checkbox icon and text.\n   *\n   * @return true in case of success and false otherwise\n   */\n  public boolean setTextIcon(@NotNull Icon icon) {\n    if (UIUtil.isUnderDarcula()) {\n      return false;\n    }\n    ButtonUI ui = getUI();\n    if (ui instanceof BasicRadioButtonUI) {\n      Icon defaultIcon = ((BasicRadioButtonUI) ui).getDefaultIcon();\n      if (defaultIcon != null) {\n        MergedIcon mergedIcon = new MergedIcon(defaultIcon, 10, icon);\n        setIcon(mergedIcon);\n        return true;\n      }\n    }\n    return false;\n  }","id":54807,"modified_method":"/**\n   * Sets given icon to display between checkbox icon and text.\n   *\n   * @return true in case of success and false otherwise\n   */\n  public boolean setTextIcon(@NotNull Icon icon) {\n    if (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF()) {\n      return false;\n    }\n    ButtonUI ui = getUI();\n    if (ui instanceof BasicRadioButtonUI) {\n      Icon defaultIcon = ((BasicRadioButtonUI) ui).getDefaultIcon();\n      if (defaultIcon != null) {\n        MergedIcon mergedIcon = new MergedIcon(defaultIcon, 10, icon);\n        setIcon(mergedIcon);\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"a141b3e69135ee0b2afb0021cb174b6e1f1af21b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void updateBorder(@NotNull final EditorEx editor) {\n    if (editor.isOneLineMode()\n        && !Boolean.TRUE.equals(getClientProperty(\"JComboBox.isTableCellEditor\"))\n        && (SwingUtilities.getAncestorOfClass(JTable.class, this) == null || Boolean.TRUE.equals(getClientProperty(\"JBListTable.isTableCellEditor\")))) {\n      final Container parent = getParent();\n      if (parent instanceof JTable || parent instanceof CellRendererPane) return;\n\n      if (UIUtil.isUnderAquaLookAndFeel() || UIUtil.isUnderDarcula()) {\n        editor.setBorder(UIUtil.isUnderDarcula() ?  new DarculaEditorTextFieldBorder() : new MacUIUtil.EditorTextFieldBorder(this));\n        editor.addFocusListener(new FocusChangeListener() {\n          @Override\n          public void focusGained(Editor editor) {\n            repaint();\n          }\n\n          @Override\n          public void focusLost(Editor editor) {\n            repaint();\n          }\n        });\n      }\n      else if (UIUtil.isUnderAlloyLookAndFeel() || UIUtil.isUnderJGoodiesLookAndFeel()) {\n        editor.setBorder(BorderFactory.createCompoundBorder(UIUtil.getTextFieldBorder(), BorderFactory.createEmptyBorder(1, 1, 1, 1)));\n      }\n      else {\n        editor.setBorder(BorderFactory.createCompoundBorder(UIUtil.getTextFieldBorder(), BorderFactory.createEmptyBorder(2, 2, 2, 2)));\n      }\n    }\n  }","id":54808,"modified_method":"protected void updateBorder(@NotNull final EditorEx editor) {\n    if (editor.isOneLineMode()\n        && !Boolean.TRUE.equals(getClientProperty(\"JComboBox.isTableCellEditor\"))\n        && (SwingUtilities.getAncestorOfClass(JTable.class, this) == null || Boolean.TRUE.equals(getClientProperty(\"JBListTable.isTableCellEditor\")))) {\n      final Container parent = getParent();\n      if (parent instanceof JTable || parent instanceof CellRendererPane) return;\n\n      if (UIUtil.isUnderAquaLookAndFeel() || UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF()) {\n        editor.setBorder(UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF() ?  new DarculaEditorTextFieldBorder() : new MacUIUtil.EditorTextFieldBorder(this));\n        editor.addFocusListener(new FocusChangeListener() {\n          @Override\n          public void focusGained(Editor editor) {\n            repaint();\n          }\n\n          @Override\n          public void focusLost(Editor editor) {\n            repaint();\n          }\n        });\n      }\n      else if (UIUtil.isUnderAlloyLookAndFeel() || UIUtil.isUnderJGoodiesLookAndFeel()) {\n        editor.setBorder(BorderFactory.createCompoundBorder(UIUtil.getTextFieldBorder(), BorderFactory.createEmptyBorder(1, 1, 1, 1)));\n      }\n      else {\n        editor.setBorder(BorderFactory.createCompoundBorder(UIUtil.getTextFieldBorder(), BorderFactory.createEmptyBorder(2, 2, 2, 2)));\n      }\n    }\n  }","commit_id":"31527c65aa2914ad1c4c3069dcd3f5ed823d78c9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Color getBackgroundColor(boolean enabled, final EditorColorsScheme colorsScheme){\n    if (myEnforcedBgColor != null) return myEnforcedBgColor;\n    if (UIUtil.getParentOfType(CellRendererPane.class, this) != null && UIUtil.isUnderDarcula()) {\n      return getParent().getBackground();\n    }\n\n    if (UIUtil.isUnderDarcula()) return UIUtil.getTextFieldBackground();\n\n    return enabled\n           ? colorsScheme.getDefaultBackground()\n           : UIUtil.getInactiveTextFieldBackgroundColor();\n  }","id":54809,"modified_method":"private Color getBackgroundColor(boolean enabled, final EditorColorsScheme colorsScheme){\n    if (myEnforcedBgColor != null) return myEnforcedBgColor;\n    if (UIUtil.getParentOfType(CellRendererPane.class, this) != null && (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) {\n      return getParent().getBackground();\n    }\n\n    if (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF()) return UIUtil.getTextFieldBackground();\n\n    return enabled\n           ? colorsScheme.getDefaultBackground()\n           : UIUtil.getInactiveTextFieldBackgroundColor();\n  }","commit_id":"f4b288b2cae351228f604fd1a32c9be000e94488","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected boolean shouldHaveBorder() {\n    return UIManager.getBorder(\"ComboBox.border\") == null && !UIUtil.isUnderDarcula();\n  }","id":54810,"modified_method":"@Override\n  protected boolean shouldHaveBorder() {\n    return UIManager.getBorder(\"ComboBox.border\") == null && !UIUtil.isUnderDarcula() && !UIUtil.isUnderIntelliJLaF();\n  }","commit_id":"8cd2201e62fb6dace5c863a64a105506fed9d887","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void repaintComboBox() {\n    // TODO:\n    if (UIUtil.isUnderDarcula() || (SystemInfo.isMac && UIUtil.isUnderAquaLookAndFeel())) {\n      IdeFocusManager.getInstance(getProject()).doWhenFocusSettlesDown(new Runnable() {\n        @Override\n        public void run() {\n          final Container parent = getParent();\n          if (parent != null) parent.repaint();\n        }\n      });\n    }\n  }","id":54811,"modified_method":"private void repaintComboBox() {\n    // TODO:\n    if (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF() || (SystemInfo.isMac && UIUtil.isUnderAquaLookAndFeel())) {\n      IdeFocusManager.getInstance(getProject()).doWhenFocusSettlesDown(new Runnable() {\n        @Override\n        public void run() {\n          final Container parent = getParent();\n          if (parent != null) parent.repaint();\n        }\n      });\n    }\n  }","commit_id":"8cd2201e62fb6dace5c863a64a105506fed9d887","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ComboboxEditorTextField(Document document, Project project, FileType fileType, boolean isViewer) {\n    super(document, project, fileType, isViewer);\n    setOneLineMode(true);\n    if (UIUtil.isUnderDarcula()) { //todo[kb] make for all LaFs and color schemes ?\n      setBackground(UIUtil.getTextFieldBackground());\n    }\n  }","id":54812,"modified_method":"public ComboboxEditorTextField(Document document, Project project, FileType fileType, boolean isViewer) {\n    super(document, project, fileType, isViewer);\n    setOneLineMode(true);\n    if (UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF()) { //todo[kb] make for all LaFs and color schemes ?\n      setBackground(UIUtil.getTextFieldBackground());\n    }\n  }","commit_id":"8cd2201e62fb6dace5c863a64a105506fed9d887","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n * Updates <code>IPermissions<\/code> in the back end store.\n * @param permissions IPermission[]\n * @exception AuthorizationException\n */\npublic void updatePermissions(IPermission[] permissions)\nthrows AuthorizationException\n{\n    if (permissions.length > 0)\n    {\n        removeFromPermissionsCache(permissions);\n        getPermissionStore().update(permissions);\n    }\n}","id":54813,"modified_method":"/**\n * Updates <code>IPermissions<\/code> in the back end store.\n * @param permissions IPermission[]\n * @exception AuthorizationException\n */\npublic void updatePermissions(IPermission[] permissions)\nthrows AuthorizationException\n{\n    if (permissions.length > 0)\n    {\n        getPermissionStore().update(permissions);\n        if ( cachePermissions )\n            { removeFromPermissionsCache(permissions); }\n    }\n}","commit_id":"6875ebe92e91e0f73bc72eb496c49a0adde3cc0f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n * Factory method for IAuthorizationPrincipal.\n * @return org.jasig.portal.security.IAuthorizationPrincipal\n * @param key java.lang.String\n * @param type java.lang.Class\n */\npublic IAuthorizationPrincipal newPrincipal(String key, Class type)\n{\n    return new AuthorizationPrincipalImpl(key, type, this);\n}","id":54814,"modified_method":"/**\n * Factory method for IAuthorizationPrincipal.\n * First check the principal cache, and if not present, create the principal \n * and cache it.  \n * @return org.jasig.portal.security.IAuthorizationPrincipal\n * @param key java.lang.String\n * @param type java.lang.Class\n */\npublic IAuthorizationPrincipal newPrincipal(String key, Class type)\n{\n    String principalKey = getPrincipalString(type, key);\n    IAuthorizationPrincipal principal = (IAuthorizationPrincipal)getPrincipalCache().get(principalKey);\n    if ( principal == null )\n    {\n        synchronized (this)\n        {\n            principal = (IAuthorizationPrincipal)getPrincipalCache().get(key);\n            if ( principal == null )\n            {\n                principal = primNewPrincipal(key, type);\n                Map cache = copyPrincipalCache();\n                cache.put(principalKey, principal);\n                setPrincipalCache(cache);\n            }\n        }  // end synchronized\n    }\n    return principal;\n}","commit_id":"6875ebe92e91e0f73bc72eb496c49a0adde3cc0f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n * @return IPermission[]\n * @param principal org.jasig.portal.security.IAuthorizationPrincipal\n * @param owner String\n * @param activity String\n * @param target String\n */\nprivate IPermission[] primGetPermissionsForPrincipal\n    (IAuthorizationPrincipal principal,\n    String owner,\n    String activity,\n    String target)\nthrows AuthorizationException\n{\n    IPermission[] perms = primGetPermissionsForPrincipal(principal);\n    if ( owner == null && activity == null && target == null )\n        { return perms; }\n    ArrayList al = new ArrayList(perms.length);\n    for ( int i=0; i<perms.length; i++ )\n    {\n        if (\n            (owner == null || owner.equals(perms[i].getOwner())) &&\n            (activity == null || activity.equals(perms[i].getActivity())) &&\n            (target == null || target.equals(perms[i].getTarget()))\n           )\n            { al.add(perms[i]); }\n    }\n\n    return ((IPermission[])al.toArray(new IPermission[al.size()]));\n\n}","id":54815,"modified_method":"/**\n * @return IPermission[]\n * @param principal org.jasig.portal.security.IAuthorizationPrincipal\n * @param owner String\n * @param activity String\n * @param target String\n */\nprivate IPermission[] primGetPermissionsForPrincipal\n    (IAuthorizationPrincipal principal,\n    String owner,\n    String activity,\n    String target)\nthrows AuthorizationException\n{\n        LogService.log (LogService.DEBUG,\n          \"AuthorizationImpl.primGetPermissionsForPrincipal(): \" + \n          \"Principal: \" + principal + \" owner: \" + owner +\n          \" activity: \" + activity + \" target: \" + target);\n\n    \n    IPermission[] perms = primGetPermissionsForPrincipal(principal);\n    if ( owner == null && activity == null && target == null )\n        { return perms; }\n    ArrayList al = new ArrayList(perms.length);\n    for ( int i=0; i<perms.length; i++ )\n    {\n        if (\n            (owner == null || owner.equals(perms[i].getOwner())) &&\n            (activity == null || activity.equals(perms[i].getActivity())) &&\n            (target == null || target.equals(perms[i].getTarget()))\n           )\n            { al.add(perms[i]); }\n    }\n    \n    LogService.log (LogService.DEBUG,\n      \"AuthorizationImpl.primGetPermissionsForPrincipal(): \" + \n      \"# permissions retrieved: \" + al.size());\n\n\n    return ((IPermission[])al.toArray(new IPermission[al.size()]));\n\n}","commit_id":"6875ebe92e91e0f73bc72eb496c49a0adde3cc0f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n * Removes <code>IPermissions<\/code> for the <code>IAuthorizationPrincipals<\/code> from\n * the cache.\n * @param principals IAuthorizationPrincipal[]\n */\nprivate void removeFromPermissionsCache(IAuthorizationPrincipal[] principals)\n{\n    synchronized (permissionsCacheLock)\n    {\n        for ( int i=0; i<principals.length; i++ )\n            { permissionsCache.remove(principals[i]); }\n    }\n}","id":54816,"modified_method":"/**\n * Removes <code>IPermissions<\/code> for the <code>IAuthorizationPrincipals<\/code> from\n * the cache.\n * @param principals IAuthorizationPrincipal[]\n */\nprivate void removeFromPermissionsCache(IAuthorizationPrincipal[] principals) \nthrows AuthorizationException\n{\n    for ( int i=0; i<principals.length; i++ )\n        { cacheRemove(principals[i]); }\n}","commit_id":"6875ebe92e91e0f73bc72eb496c49a0adde3cc0f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n *\n */\nprivate void initialize() throws AuthorizationException\n{\n    String eMsg = null;\n    String factoryName =\n      PropertiesManager.getProperty(\"org.jasig.portal.security.IPermissionStore.implementation\");\n    String policyName =\n      PropertiesManager.getProperty(\"org.jasig.portal.security.IPermissionPolicy.defaultImplementation\");\n\n    if ( factoryName == null )\n    {\n        eMsg = \"AuthorizationImpl.initialize(): No entry for org.jasig.portal.security.IPermissionStore.implementation portal.properties.\";\n        LogService.log(LogService.ERROR, eMsg);\n        throw new AuthorizationException(eMsg);\n    }\n\n    if ( policyName == null )\n    {\n        eMsg = \"AuthorizationImpl.initialize(): No entry for org.jasig.portal.security.IPermissionPolicy.defaultImplementation portal.properties.\";\n        LogService.log(LogService.ERROR, eMsg);\n        throw new AuthorizationException(eMsg);\n    }\n\n    try\n    {\n        permissionStore = (IPermissionStore)Class.forName(factoryName).newInstance();\n    }\n    catch (Exception e)\n    {\n        eMsg = \"AuthorizationImpl.initialize(): Problem creating permission store... \" + e.getMessage();\n        LogService.log(LogService.ERROR, eMsg);\n        throw new AuthorizationException(eMsg);\n    }\n\n    try\n    {\n        defaultPermissionPolicy = (IPermissionPolicy)Class.forName(policyName).newInstance();\n    }\n    catch (Exception e)\n    {\n        eMsg = \"AuthorizationImpl.initialize(): Problem creating default permission policy... \" + e.getMessage();\n        LogService.log(LogService.ERROR, eMsg);\n        throw new AuthorizationException(eMsg);\n    }\n\n//    setPermissionStore(new RDBMPermissionImpl());\n//    setDefaultPermissionPolicy(new DefaultPermissionPolicy());\n}","id":54817,"modified_method":"/**\n *\n */\nprivate void initialize() throws AuthorizationException\n{\n    String eMsg = null;\n    String factoryName =\n      PropertiesManager.getProperty(\"org.jasig.portal.security.IPermissionStore.implementation\");\n    String policyName =\n      PropertiesManager.getProperty(\"org.jasig.portal.security.IPermissionPolicy.defaultImplementation\");\n    cachePermissions =\n      PropertiesManager.getPropertyAsBoolean(\"org.jasig.portal.security.IAuthorizationService.cachePermissions\");\n\n\n    if ( factoryName == null )\n    {\n        eMsg = \"AuthorizationImpl.initialize(): No entry for org.jasig.portal.security.IPermissionStore.implementation portal.properties.\";\n        LogService.log(LogService.ERROR, eMsg);\n        throw new AuthorizationException(eMsg);\n    }\n\n    if ( policyName == null )\n    {\n        eMsg = \"AuthorizationImpl.initialize(): No entry for org.jasig.portal.security.IPermissionPolicy.defaultImplementation portal.properties.\";\n        LogService.log(LogService.ERROR, eMsg);\n        throw new AuthorizationException(eMsg);\n    }\n\n    try\n    {\n        permissionStore = (IPermissionStore)Class.forName(factoryName).newInstance();\n    }\n    catch (Exception e)\n    {\n        eMsg = \"AuthorizationImpl.initialize(): Problem creating permission store... \" + e.getMessage();\n        LogService.log(LogService.ERROR, eMsg);\n        throw new AuthorizationException(eMsg);\n    }\n\n    try\n    {\n        defaultPermissionPolicy = (IPermissionPolicy)Class.forName(policyName).newInstance();\n    }\n    catch (Exception e)\n    {\n        eMsg = \"AuthorizationImpl.initialize(): Problem creating default permission policy... \" + e.getMessage();\n        LogService.log(LogService.ERROR, eMsg);\n        throw new AuthorizationException(eMsg);\n    }\n\n    try \n    { \n        PERMISSION_SET_TYPE = Class.forName(\"org.jasig.portal.security.IPermissionSet\");\n    }\n    catch (ClassNotFoundException cnfe)\n    {\n        eMsg = \"AuthorizationImpl.initialize(): Problem initializing service. \" + cnfe.getMessage();\n        LogService.log(LogService.ERROR, eMsg);\n        throw new AuthorizationException(eMsg);\n    }\n\n//    setPermissionStore(new RDBMPermissionImpl());\n//    setDefaultPermissionPolicy(new DefaultPermissionPolicy());\n}","commit_id":"6875ebe92e91e0f73bc72eb496c49a0adde3cc0f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n * Adds <code>IPermissions<\/code> to the back end store.\n * @param permissions IPermission[]\n * @exception AuthorizationException\n */\npublic void addPermissions(IPermission[] permissions)\nthrows AuthorizationException\n{\n    if (permissions.length > 0)\n    {\n        removeFromPermissionsCache(permissions);\n        getPermissionStore().add(permissions);\n    }\n}","id":54818,"modified_method":"/**\n * Adds <code>IPermissions<\/code> to the back end store.\n * @param permissions IPermission[]\n * @exception AuthorizationException\n */\npublic void addPermissions(IPermission[] permissions)\nthrows AuthorizationException\n{\n    if (permissions.length > 0)\n    {\n        getPermissionStore().add(permissions);\n        if ( cachePermissions )\n            { removeFromPermissionsCache(permissions); } \n    }\n}","commit_id":"6875ebe92e91e0f73bc72eb496c49a0adde3cc0f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n * Removes <code>IPermissions<\/code> from the back end store.\n * @param permissions IPermission[]\n * @exception AuthorizationException\n */\npublic void removePermissions(IPermission[] permissions)\nthrows AuthorizationException\n{\n    if (permissions.length > 0)\n    {\n        removeFromPermissionsCache(permissions);\n        getPermissionStore().delete(permissions);\n    }\n}","id":54819,"modified_method":"/**\n * Removes <code>IPermissions<\/code> from the back end store.\n * @param permissions IPermission[]\n * @exception AuthorizationException\n */\npublic void removePermissions(IPermission[] permissions)\nthrows AuthorizationException\n{\n    if (permissions.length > 0)\n    {\n        getPermissionStore().delete(permissions);\n        if ( cachePermissions )\n            { removeFromPermissionsCache(permissions); }  \n    }\n}","commit_id":"6875ebe92e91e0f73bc72eb496c49a0adde3cc0f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n * Returns the String used by an <code>IPermission<\/code> to represent an\n * <code>IAuthorizationPrincipal<\/code>.\n * @param principal org.jasig.portal.security.IAuthorizationPrincipal\n */\npublic String getPrincipalString(IAuthorizationPrincipal principal)\n{\n    Integer type = EntityTypes.getEntityTypeID(principal.getType());\n    return type + PERIOD_STRING + principal.getKey();\n}","id":54820,"modified_method":"/**\n * Returns the String used by an <code>IPermission<\/code> to represent an\n * <code>IAuthorizationPrincipal<\/code>.\n * @param principal org.jasig.portal.security.IAuthorizationPrincipal\n */\npublic String getPrincipalString(IAuthorizationPrincipal principal)\n{\n    return getPrincipalString(principal.getType(), principal.getKey());\n}","commit_id":"6875ebe92e91e0f73bc72eb496c49a0adde3cc0f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n * Adds <code>IPermissions<\/code> for the <code>IAuthorizationPrincipal<\/code> to the cache.\n * @param permissions IPermission[]\n * @param principals IAuthorizationPrincipal[]\n */\nprivate void addToPermissionsCache(IPermission[] permissions, IAuthorizationPrincipal principal)\n{\n    synchronized (permissionsCacheLock)\n    {\n        permissionsCache.put(principal, permissions);\n    }\n}","id":54821,"modified_method":"/**\n* Retrieves the <code>IPermissionSet<\/code> for the <code>IPermissionSet<\/code>\n* from the entity cache.\n*/\nprotected IPermissionSet cacheGet(IAuthorizationPrincipal principal) \nthrows AuthorizationException\n{\n    try\n    { \n        return (IPermissionSet)\n          EntityCachingService.instance().get(PERMISSION_SET_TYPE, principal.getPrincipalString()); \n    }\n    catch (CachingException ce)\n        { throw new AuthorizationException(\"Problem adding permissions for \" + principal + \" to cache: \" + ce.getMessage() ); }\n}","commit_id":"6875ebe92e91e0f73bc72eb496c49a0adde3cc0f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n * @return IPermission[]\n * @param principal org.jasig.portal.security.IAuthorizationPrincipal\n */\nprivate IPermission[] primGetPermissionsForPrincipal(IAuthorizationPrincipal principal)\nthrows AuthorizationException\n{\n    // Check the smart cache for the Permissions first\n    IPermission[] permissions = (IPermission[])permissionsCache.get(principal);\n    if ( permissions == null )\n    {\n        permissions = getUncachedPermissionsForPrincipal(principal, null, null, null);\n        addToPermissionsCache(permissions, principal);\n    }\n    return permissions;\n}","id":54822,"modified_method":"/**\n * Returns permissions for a principal.  First check the entity caching\n * service, and if the permissions have not been cached, retrieve and\n * cache them.  \n * @return IPermission[]\n * @param principal org.jasig.portal.security.IAuthorizationPrincipal\n */\nprivate IPermission[] primGetPermissionsForPrincipal(IAuthorizationPrincipal principal)\nthrows AuthorizationException\n{\n    if ( ! cachePermissions )\n        { return getUncachedPermissionsForPrincipal(principal, null, null, null);}\n        \n    IPermissionSet ps = null;\n    // Check the caching service for the Permissions first.\n    ps = cacheGet(principal);\n    \n    if ( ps == null )\n    synchronized ( principal )\n    {\n        ps = cacheGet(principal);\n        if ( ps == null )\n        {\n            IPermission[] permissions = \n              getUncachedPermissionsForPrincipal(principal, null, null, null);\n            ps = new PermissionSetImpl(permissions, principal);\n            cacheAdd(ps);\n        }\n    }      // end synchronized\n    return ps.getPermissions();\n}","commit_id":"6875ebe92e91e0f73bc72eb496c49a0adde3cc0f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n * @return java.lang.String\n */\npublic String getPrincipalString() \n{\n    if ( principalString == null )\n    {\n        principalString = getAuthorizationService().getPrincipalString(this);\n    }\n    return principalString;\n}","id":54823,"modified_method":"/**\n * @return java.lang.String\n */\npublic String getPrincipalString() \n{\n    return principalString;\n}","commit_id":"6875ebe92e91e0f73bc72eb496c49a0adde3cc0f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n * Constructor for ReferenceAuthorizationPrincipal.\n */\npublic AuthorizationPrincipalImpl(String newKey, Class newType, IAuthorizationService authService) \n{\n    super();\n    key = newKey;\n    type = newType;\n    authorizationService = authService;\n}","id":54824,"modified_method":"/**\n * Constructor for ReferenceAuthorizationPrincipal.\n */\npublic AuthorizationPrincipalImpl(String newKey, Class newType, IAuthorizationService authService) \n{\n    super();\n    key = newKey;\n    type = newType;\n    authorizationService = authService;\n    initialize();\n}","commit_id":"6875ebe92e91e0f73bc72eb496c49a0adde3cc0f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\r\n   * Returns all the edges between the vertexes iVertex1 and iVertex2 with label between the array of labels passed as iLabels and\r\n   * with class between the array of class names passed as iClassNames.\r\n   * \r\n   * @param iVertex1\r\n   *          First Vertex\r\n   * @param iVertex2\r\n   *          Second Vertex\r\n   * @param iLabels\r\n   *          Array of strings with the labels to get as filter\r\n   * @param iClassNames\r\n   *          Array of strings with the name of the classes to get as filter\r\n   * @return The Set with the common Edges between the two vertexes. If edges aren't found the set is empty\r\n   */\r\n  public Set<OIdentifiable> getEdgesBetweenVertexes(final OIdentifiable iVertex1, final OIdentifiable iVertex2,\r\n      final String[] iLabels, final String[] iClassNames) {\r\n\r\n    final Set<OIdentifiable> result = new HashSet<OIdentifiable>();\r\n\r\n    if (iVertex1 != null && iVertex2 != null) {\r\n      if (autoLock)\r\n        // LOCK VERTEX TO AVOID CONCURRENT ACCESS\r\n        acquireReadLock(iVertex1);\r\n      try {\r\n\r\n        // CHECK OUT EDGES\r\n        for (OIdentifiable e : getOutEdges(iVertex1)) {\r\n          final ODocument edge = (ODocument) e.getRecord();\r\n\r\n          if (checkEdge(edge, iLabels, iClassNames)) {\r\n            final OIdentifiable in = edge.<ODocument> field(\"in\");\r\n            if (in != null && in.equals(iVertex2))\r\n              result.add(edge);\r\n          }\r\n        }\r\n\r\n        // CHECK IN EDGES\r\n        for (OIdentifiable e : getInEdges(iVertex1)) {\r\n          final ODocument edge = (ODocument) e.getRecord();\r\n\r\n          if (checkEdge(edge, iLabels, iClassNames)) {\r\n            final OIdentifiable out = edge.<ODocument> field(\"out\");\r\n            if (out != null && out.equals(iVertex2))\r\n              result.add(edge);\r\n          }\r\n        }\r\n\r\n      } finally {\r\n        if (autoLock)\r\n          releaseReadLock(iVertex1);\r\n      }\r\n\r\n    }\r\n\r\n    return result;\r\n  }","id":54825,"modified_method":"/**\r\n   * Returns all the edges between the vertexes iVertex1 and iVertex2 with label between the array of labels passed as iLabels and\r\n   * with class between the array of class names passed as iClassNames.\r\n   * \r\n   * @param iVertex1\r\n   *          First Vertex\r\n   * @param iVertex2\r\n   *          Second Vertex\r\n   * @param iLabels\r\n   *          Array of strings with the labels to get as filter\r\n   * @param iClassNames\r\n   *          Array of strings with the name of the classes to get as filter\r\n   * @return The Set with the common Edges between the two vertexes. If edges aren't found the set is empty\r\n   */\r\n  public Set<OIdentifiable> getEdgesBetweenVertexes(final OIdentifiable iVertex1, final OIdentifiable iVertex2,\r\n      final String[] iLabels, final String[] iClassNames) {\r\n\r\n    final Set<OIdentifiable> result = new HashSet<OIdentifiable>();\r\n\r\n    if (iVertex1 != null && iVertex2 != null) {\r\n      acquireReadLock(iVertex1);\r\n      try {\r\n\r\n        // CHECK OUT EDGES\r\n        for (OIdentifiable e : getOutEdges(iVertex1)) {\r\n          final ODocument edge = (ODocument) e.getRecord();\r\n\r\n          if (checkEdge(edge, iLabels, iClassNames)) {\r\n            final OIdentifiable in = edge.<ODocument> field(\"in\");\r\n            if (in != null && in.equals(iVertex2))\r\n              result.add(edge);\r\n          }\r\n        }\r\n\r\n        // CHECK IN EDGES\r\n        for (OIdentifiable e : getInEdges(iVertex1)) {\r\n          final ODocument edge = (ODocument) e.getRecord();\r\n\r\n          if (checkEdge(edge, iLabels, iClassNames)) {\r\n            final OIdentifiable out = edge.<ODocument> field(\"out\");\r\n            if (out != null && out.equals(iVertex2))\r\n              result.add(edge);\r\n          }\r\n        }\r\n\r\n      } finally {\r\n        releaseReadLock(iVertex1);\r\n      }\r\n\r\n    }\r\n\r\n    return result;\r\n  }","commit_id":"f119ea70438e3ff3d72678086ce4c58441a445a7","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void removeVertex(final ODocument iVertex) {\r\n    final boolean safeMode = beginBlock();\r\n    try {\r\n\r\n      ODocument otherVertex;\r\n      Set<ODocument> otherEdges;\r\n\r\n      // REMOVE OUT EDGES\r\n      if (autoLock)\r\n        // LOCK VERTEX TO AVOID CONCURRENT ACCESS\r\n        acquireWriteLock(iVertex);\r\n      try {\r\n        Set<ODocument> edges = iVertex.field(VERTEX_FIELD_OUT);\r\n        if (edges != null) {\r\n          for (ODocument edge : edges) {\r\n            if (edge != null) {\r\n              otherVertex = edge.field(EDGE_FIELD_IN);\r\n              if (otherVertex != null) {\r\n                otherEdges = otherVertex.field(VERTEX_FIELD_IN);\r\n                if (otherEdges != null && otherEdges.remove(edge))\r\n                  save(otherVertex);\r\n              }\r\n              delete(edge);\r\n            }\r\n          }\r\n        }\r\n\r\n        // REMOVE IN EDGES\r\n        edges = iVertex.field(VERTEX_FIELD_IN);\r\n        if (edges != null) {\r\n          for (ODocument edge : edges) {\r\n            if (edge != null) {\r\n              otherVertex = edge.field(EDGE_FIELD_OUT);\r\n              if (otherVertex != null) {\r\n                otherEdges = otherVertex.field(VERTEX_FIELD_OUT);\r\n                if (otherEdges != null && otherEdges.remove(edge))\r\n                  save(otherVertex);\r\n              }\r\n              delete(edge);\r\n            }\r\n          }\r\n        }\r\n\r\n        // DELETE VERTEX AS DOCUMENT\r\n        delete(iVertex);\r\n\r\n      } finally {\r\n        if (autoLock)\r\n          releaseWriteLock(iVertex);\r\n      }\r\n\r\n      commitBlock(safeMode);\r\n\r\n    } catch (RuntimeException e) {\r\n      rollbackBlock(safeMode);\r\n      throw e;\r\n    }\r\n  }","id":54826,"modified_method":"public void removeVertex(final ODocument iVertex) {\r\n    final boolean safeMode = beginBlock();\r\n    try {\r\n\r\n      ODocument otherVertex;\r\n      Set<ODocument> otherEdges;\r\n\r\n      // REMOVE OUT EDGES\r\n      acquireWriteLock(iVertex);\r\n      try {\r\n\r\n        Set<ODocument> edges = iVertex.field(VERTEX_FIELD_OUT);\r\n        if (edges != null) {\r\n          for (ODocument edge : edges) {\r\n            if (edge != null) {\r\n              otherVertex = edge.field(EDGE_FIELD_IN);\r\n              if (otherVertex != null) {\r\n                otherEdges = otherVertex.field(VERTEX_FIELD_IN);\r\n                if (otherEdges != null && otherEdges.remove(edge))\r\n                  save(otherVertex);\r\n              }\r\n              delete(edge);\r\n            }\r\n          }\r\n        }\r\n\r\n        // REMOVE IN EDGES\r\n        edges = iVertex.field(VERTEX_FIELD_IN);\r\n        if (edges != null) {\r\n          for (ODocument edge : edges) {\r\n            if (edge != null) {\r\n              otherVertex = edge.field(EDGE_FIELD_OUT);\r\n              if (otherVertex != null) {\r\n                otherEdges = otherVertex.field(VERTEX_FIELD_OUT);\r\n                if (otherEdges != null && otherEdges.remove(edge))\r\n                  save(otherVertex);\r\n              }\r\n              delete(edge);\r\n            }\r\n          }\r\n        }\r\n\r\n        // DELETE VERTEX AS DOCUMENT\r\n        delete(iVertex);\r\n\r\n      } finally {\r\n        releaseWriteLock(iVertex);\r\n      }\r\n\r\n      commitBlock(safeMode);\r\n\r\n    } catch (RuntimeException e) {\r\n      rollbackBlock(safeMode);\r\n      throw e;\r\n    }\r\n  }","commit_id":"f119ea70438e3ff3d72678086ce4c58441a445a7","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  @SuppressWarnings(\"unchecked\")\r\n  public <THISDB extends ODatabase> THISDB open(final String iUserName, final String iUserPassword) {\r\n    super.open(iUserName, iUserPassword);\r\n    checkForGraphSchema();\r\n\r\n    if (autoLock && !(getStorage() instanceof OStorageEmbedded))\r\n      // NOT YET SUPPORETD REMOTE LOCKING\r\n      autoLock = false;\r\n\r\n    return (THISDB) this;\r\n  }","id":54827,"modified_method":"@Override\r\n  @SuppressWarnings(\"unchecked\")\r\n  public <THISDB extends ODatabase> THISDB open(final String iUserName, final String iUserPassword) {\r\n    super.open(iUserName, iUserPassword);\r\n    checkForGraphSchema();\r\n    return (THISDB) this;\r\n  }","commit_id":"f119ea70438e3ff3d72678086ce4c58441a445a7","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@SuppressWarnings(\"unchecked\")\r\n  public ODocument createEdge(final ODocument iOutVertex, final ODocument iInVertex, final String iClassName, Object... iFields) {\r\n    if (iOutVertex == null)\r\n      throw new IllegalArgumentException(\"iOutVertex is null\");\r\n\r\n    if (iInVertex == null)\r\n      throw new IllegalArgumentException(\"iInVertex is null\");\r\n\r\n    final OClass cls = checkEdgeClass(iClassName);\r\n\r\n    final boolean safeMode = beginBlock();\r\n    try {\r\n\r\n      final ODocument edge = new ODocument(cls).setOrdered(true);\r\n      edge.field(EDGE_FIELD_OUT, iOutVertex);\r\n      edge.field(EDGE_FIELD_IN, iInVertex);\r\n\r\n      if (iFields != null)\r\n        if (iFields.length == 1) {\r\n          Object f = iFields[0];\r\n          if (f instanceof Map<?, ?>)\r\n            edge.fields((Map<String, Object>) f);\r\n          else\r\n            throw new IllegalArgumentException(\r\n                \"Invalid fields: expecting a pairs of fields as String,Object or a single Map<String,Object>, but found: \" + f);\r\n        } else\r\n          // SET THE FIELDS\r\n          for (int i = 0; i < iFields.length; i += 2)\r\n            edge.field(iFields[i].toString(), iFields[i + 1]);\r\n\r\n      // OUT FIELD\r\n      if (autoLock)\r\n        // LOCK VERTEX TO AVOID CONCURRENT ACCESS\r\n        acquireWriteLock(iOutVertex);\r\n      try {\r\n        final Object outField = iOutVertex.field(VERTEX_FIELD_OUT);\r\n        final OMVRBTreeRIDSet out;\r\n        if (outField instanceof OMVRBTreeRIDSet) {\r\n          out = (OMVRBTreeRIDSet) outField;\r\n        } else if (outField instanceof Collection<?>) {\r\n          out = new OMVRBTreeRIDSet(iOutVertex, (Collection<OIdentifiable>) outField);\r\n          iOutVertex.field(VERTEX_FIELD_OUT, out);\r\n        } else {\r\n          out = new OMVRBTreeRIDSet(iOutVertex);\r\n          iOutVertex.field(VERTEX_FIELD_OUT, out);\r\n        }\r\n        out.add(edge);\r\n      } finally {\r\n        if (autoLock)\r\n          releaseWriteLock(iOutVertex);\r\n      }\r\n\r\n      // IN FIELD\r\n      if (autoLock)\r\n        // LOCK VERTEX TO AVOID CONCURRENT ACCESS\r\n        acquireWriteLock(iInVertex);\r\n      try {\r\n        final Object inField = iInVertex.field(VERTEX_FIELD_IN);\r\n        final OMVRBTreeRIDSet in;\r\n        if (inField instanceof OMVRBTreeRIDSet) {\r\n          in = (OMVRBTreeRIDSet) inField;\r\n        } else if (inField instanceof Collection<?>) {\r\n          in = new OMVRBTreeRIDSet(iInVertex, (Collection<OIdentifiable>) inField);\r\n          iInVertex.field(VERTEX_FIELD_IN, in);\r\n        } else {\r\n          in = new OMVRBTreeRIDSet(iInVertex);\r\n          iInVertex.field(VERTEX_FIELD_IN, in);\r\n        }\r\n        in.add(edge);\r\n      } finally {\r\n        if (autoLock)\r\n          releaseWriteLock(iInVertex);\r\n      }\r\n\r\n      edge.setDirty();\r\n\r\n      if (safeMode) {\r\n        save(edge);\r\n        commitBlock(safeMode);\r\n      }\r\n\r\n      return edge;\r\n\r\n    } catch (RuntimeException e) {\r\n      rollbackBlock(safeMode);\r\n      throw e;\r\n    }\r\n  }","id":54828,"modified_method":"@SuppressWarnings(\"unchecked\")\r\n  public ODocument createEdge(final ODocument iOutVertex, final ODocument iInVertex, final String iClassName, Object... iFields) {\r\n    if (iOutVertex == null)\r\n      throw new IllegalArgumentException(\"iOutVertex is null\");\r\n\r\n    if (iInVertex == null)\r\n      throw new IllegalArgumentException(\"iInVertex is null\");\r\n\r\n    final OClass cls = checkEdgeClass(iClassName);\r\n\r\n    final boolean safeMode = beginBlock();\r\n    try {\r\n\r\n      final ODocument edge = new ODocument(cls).setOrdered(true);\r\n      edge.field(EDGE_FIELD_OUT, iOutVertex);\r\n      edge.field(EDGE_FIELD_IN, iInVertex);\r\n\r\n      if (iFields != null)\r\n        if (iFields.length == 1) {\r\n          Object f = iFields[0];\r\n          if (f instanceof Map<?, ?>)\r\n            edge.fields((Map<String, Object>) f);\r\n          else\r\n            throw new IllegalArgumentException(\r\n                \"Invalid fields: expecting a pairs of fields as String,Object or a single Map<String,Object>, but found: \" + f);\r\n        } else\r\n          // SET THE FIELDS\r\n          for (int i = 0; i < iFields.length; i += 2)\r\n            edge.field(iFields[i].toString(), iFields[i + 1]);\r\n\r\n      // OUT FIELD\r\n      acquireWriteLock(iOutVertex);\r\n      try {\r\n\r\n        final Object outField = iOutVertex.field(VERTEX_FIELD_OUT);\r\n        final OMVRBTreeRIDSet out;\r\n        if (outField instanceof OMVRBTreeRIDSet) {\r\n          out = (OMVRBTreeRIDSet) outField;\r\n        } else if (outField instanceof Collection<?>) {\r\n          out = new OMVRBTreeRIDSet(iOutVertex, (Collection<OIdentifiable>) outField);\r\n          iOutVertex.field(VERTEX_FIELD_OUT, out);\r\n        } else {\r\n          out = new OMVRBTreeRIDSet(iOutVertex);\r\n          iOutVertex.field(VERTEX_FIELD_OUT, out);\r\n        }\r\n        out.add(edge);\r\n      } finally {\r\n        releaseWriteLock(iOutVertex);\r\n      }\r\n\r\n      // IN FIELD\r\n      acquireWriteLock(iInVertex);\r\n      try {\r\n\r\n        final Object inField = iInVertex.field(VERTEX_FIELD_IN);\r\n        final OMVRBTreeRIDSet in;\r\n        if (inField instanceof OMVRBTreeRIDSet) {\r\n          in = (OMVRBTreeRIDSet) inField;\r\n        } else if (inField instanceof Collection<?>) {\r\n          in = new OMVRBTreeRIDSet(iInVertex, (Collection<OIdentifiable>) inField);\r\n          iInVertex.field(VERTEX_FIELD_IN, in);\r\n        } else {\r\n          in = new OMVRBTreeRIDSet(iInVertex);\r\n          iInVertex.field(VERTEX_FIELD_IN, in);\r\n        }\r\n        in.add(edge);\r\n\r\n      } finally {\r\n        releaseWriteLock(iInVertex);\r\n      }\r\n\r\n      edge.setDirty();\r\n\r\n      if (safeMode) {\r\n        save(edge);\r\n        commitBlock(safeMode);\r\n      }\r\n\r\n      return edge;\r\n\r\n    } catch (RuntimeException e) {\r\n      rollbackBlock(safeMode);\r\n      throw e;\r\n    }\r\n  }","commit_id":"f119ea70438e3ff3d72678086ce4c58441a445a7","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\r\n   * Locks the record in shared mode to avoid concurrent writes.\r\n   * \r\n   * @param iRecord\r\n   *          Record to lock\r\n   * @return The current instance as fluent interface to allow calls in chain.\r\n   */\r\n  public OGraphDatabase acquireReadLock(final OIdentifiable iRecord) {\r\n    ((OStorageEmbedded) getStorage()).getLock().acquireSharedLock();\r\n    // ((OStorageEmbedded) getStorage()).acquireReadLock(iRecord.getIdentity());\r\n    return this;\r\n  }","id":54829,"modified_method":"/**\r\n   * Locks the record in shared mode to avoid concurrent writes.\r\n   * \r\n   * @param iRecord\r\n   *          Record to lock\r\n   * @return The current instance as fluent interface to allow calls in chain.\r\n   */\r\n  public OGraphDatabase acquireReadLock(final OIdentifiable iRecord) {\r\n    switch (lockMode) {\r\n    case DATABASE_LEVEL_LOCKING:\r\n      ((OStorage) getStorage()).getLock().acquireSharedLock();\r\n      break;\r\n    case RECORD_LEVEL_LOCKING:\r\n      ((OStorageEmbedded) getStorage()).acquireReadLock(iRecord.getIdentity());\r\n      break;\r\n    case NO_LOCKING:\r\n      break;\r\n    }\r\n    return this;\r\n  }","commit_id":"f119ea70438e3ff3d72678086ce4c58441a445a7","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@SuppressWarnings(\"unchecked\")\r\n  public boolean removeEdge(final OIdentifiable iEdge) {\r\n    if (iEdge == null)\r\n      return false;\r\n\r\n    final ODocument edge = iEdge.getRecord();\r\n    if (edge == null)\r\n      return false;\r\n\r\n    final boolean safeMode = beginBlock();\r\n    try {\r\n      // OUT VERTEX\r\n      final ODocument outVertex = edge.field(EDGE_FIELD_OUT);\r\n\r\n      if (autoLock)\r\n        acquireWriteLock(outVertex);\r\n      try {\r\n\r\n        if (outVertex != null) {\r\n          final Set<ODocument> out = ((Set<ODocument>) outVertex.field(VERTEX_FIELD_OUT));\r\n          if (out != null)\r\n            out.remove(edge);\r\n          save(outVertex);\r\n        }\r\n\r\n      } finally {\r\n        if (autoLock)\r\n          releaseWriteLock(outVertex);\r\n      }\r\n\r\n      // IN VERTEX\r\n      final ODocument inVertex = edge.field(EDGE_FIELD_IN);\r\n\r\n      if (autoLock)\r\n        acquireWriteLock(inVertex);\r\n      try {\r\n\r\n        if (inVertex != null) {\r\n          final Set<ODocument> in = ((Set<ODocument>) inVertex.field(VERTEX_FIELD_IN));\r\n          if (in != null)\r\n            in.remove(edge);\r\n          save(inVertex);\r\n        }\r\n\r\n      } finally {\r\n        if (autoLock)\r\n          releaseWriteLock(inVertex);\r\n      }\r\n\r\n      delete(edge);\r\n\r\n      commitBlock(safeMode);\r\n\r\n    } catch (RuntimeException e) {\r\n      rollbackBlock(safeMode);\r\n      throw e;\r\n    }\r\n    return true;\r\n  }","id":54830,"modified_method":"@SuppressWarnings(\"unchecked\")\r\n  public boolean removeEdge(final OIdentifiable iEdge) {\r\n    if (iEdge == null)\r\n      return false;\r\n\r\n    final ODocument edge = iEdge.getRecord();\r\n    if (edge == null)\r\n      return false;\r\n\r\n    final boolean safeMode = beginBlock();\r\n    try {\r\n      // OUT VERTEX\r\n      final ODocument outVertex = edge.field(EDGE_FIELD_OUT);\r\n\r\n      acquireWriteLock(outVertex);\r\n      try {\r\n\r\n        if (outVertex != null) {\r\n          final Set<ODocument> out = ((Set<ODocument>) outVertex.field(VERTEX_FIELD_OUT));\r\n          if (out != null)\r\n            out.remove(edge);\r\n          save(outVertex);\r\n        }\r\n\r\n      } finally {\r\n        releaseWriteLock(outVertex);\r\n      }\r\n\r\n      // IN VERTEX\r\n      final ODocument inVertex = edge.field(EDGE_FIELD_IN);\r\n\r\n      acquireWriteLock(inVertex);\r\n      try {\r\n\r\n        if (inVertex != null) {\r\n          final Set<ODocument> in = ((Set<ODocument>) inVertex.field(VERTEX_FIELD_IN));\r\n          if (in != null)\r\n            in.remove(edge);\r\n          save(inVertex);\r\n        }\r\n\r\n      } finally {\r\n        releaseWriteLock(inVertex);\r\n      }\r\n\r\n      delete(edge);\r\n\r\n      commitBlock(safeMode);\r\n\r\n    } catch (RuntimeException e) {\r\n      rollbackBlock(safeMode);\r\n      throw e;\r\n    }\r\n    return true;\r\n  }","commit_id":"f119ea70438e3ff3d72678086ce4c58441a445a7","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\r\n   * Retrieves the outgoing edges of vertex iVertex having label equals to iLabel.\r\n   * \r\n   * @param iVertex\r\n   *          Target vertex\r\n   * @param iLabel\r\n   *          Label to search\r\n   * @return\r\n   */\r\n  public Set<OIdentifiable> getOutEdges(final OIdentifiable iVertex, final String iLabel) {\r\n    final ODocument vertex = iVertex.getRecord();\r\n    checkVertexClass(vertex);\r\n\r\n    OMVRBTreeRIDSet result = null;\r\n\r\n    if (autoLock)\r\n      acquireReadLock(iVertex);\r\n    try {\r\n\r\n      final OMVRBTreeRIDSet set = vertex.field(VERTEX_FIELD_OUT);\r\n\r\n      if (iLabel == null)\r\n        // RETURN THE ENTIRE COLLECTION\r\n        if (set != null)\r\n          return Collections.unmodifiableSet(set);\r\n        else\r\n          return Collections.emptySet();\r\n\r\n      // FILTER BY LABEL\r\n      result = new OMVRBTreeRIDSet();\r\n      if (set != null)\r\n        for (OIdentifiable item : set) {\r\n          if (iLabel == null || iLabel.equals(((ODocument) item).field(LABEL)))\r\n            result.add(item);\r\n        }\r\n\r\n    } finally {\r\n      if (autoLock)\r\n        releaseReadLock(iVertex);\r\n    }\r\n\r\n    return result;\r\n  }","id":54831,"modified_method":"/**\r\n   * Retrieves the outgoing edges of vertex iVertex having label equals to iLabel.\r\n   * \r\n   * @param iVertex\r\n   *          Target vertex\r\n   * @param iLabel\r\n   *          Label to search\r\n   * @return\r\n   */\r\n  public Set<OIdentifiable> getOutEdges(final OIdentifiable iVertex, final String iLabel) {\r\n    final ODocument vertex = iVertex.getRecord();\r\n    checkVertexClass(vertex);\r\n\r\n    OMVRBTreeRIDSet result = null;\r\n\r\n    acquireReadLock(iVertex);\r\n    try {\r\n\r\n      final OMVRBTreeRIDSet set = vertex.field(VERTEX_FIELD_OUT);\r\n\r\n      if (iLabel == null)\r\n        // RETURN THE ENTIRE COLLECTION\r\n        if (set != null)\r\n          return Collections.unmodifiableSet(set);\r\n        else\r\n          return Collections.emptySet();\r\n\r\n      // FILTER BY LABEL\r\n      result = new OMVRBTreeRIDSet();\r\n      if (set != null)\r\n        for (OIdentifiable item : set) {\r\n          if (iLabel == null || iLabel.equals(((ODocument) item).field(LABEL)))\r\n            result.add(item);\r\n        }\r\n\r\n    } finally {\r\n      releaseReadLock(iVertex);\r\n    }\r\n\r\n    return result;\r\n  }","commit_id":"f119ea70438e3ff3d72678086ce4c58441a445a7","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\r\n   * Locks the record in exclusive mode to avoid concurrent access.\r\n   * \r\n   * @param iRecord\r\n   *          Record to lock\r\n   * @return The current instance as fluent interface to allow calls in chain.\r\n   */\r\n  public OGraphDatabase acquireWriteLock(final OIdentifiable iRecord) {\r\n    ((OStorageEmbedded) getStorage()).getLock().acquireExclusiveLock();\r\n    // ((OStorageEmbedded) getStorage()).acquireWriteLock(iRecord.getIdentity());\r\n    return this;\r\n  }","id":54832,"modified_method":"/**\r\n   * Locks the record in exclusive mode to avoid concurrent access.\r\n   * \r\n   * @param iRecord\r\n   *          Record to lock\r\n   * @return The current instance as fluent interface to allow calls in chain.\r\n   */\r\n  public OGraphDatabase acquireWriteLock(final OIdentifiable iRecord) {\r\n    switch (lockMode) {\r\n    case DATABASE_LEVEL_LOCKING:\r\n      ((OStorage) getStorage()).getLock().acquireExclusiveLock();\r\n      break;\r\n    case RECORD_LEVEL_LOCKING:\r\n      ((OStorageEmbedded) getStorage()).acquireWriteLock(iRecord.getIdentity());\r\n      break;\r\n    case NO_LOCKING:\r\n      break;\r\n    }\r\n    return this;\r\n  }","commit_id":"f119ea70438e3ff3d72678086ce4c58441a445a7","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public Set<OIdentifiable> getInEdges(final OIdentifiable iVertex, final String iLabel) {\r\n    final ODocument vertex = iVertex.getRecord();\r\n    checkVertexClass(vertex);\r\n\r\n    OMVRBTreeRIDSet result = null;\r\n\r\n    if (autoLock)\r\n      acquireReadLock(iVertex);\r\n    try {\r\n\r\n      final OMVRBTreeRIDSet set = vertex.field(VERTEX_FIELD_IN);\r\n\r\n      if (iLabel == null)\r\n        // RETURN THE ENTIRE COLLECTION\r\n        if (set != null)\r\n          return Collections.unmodifiableSet(set);\r\n        else\r\n          return Collections.emptySet();\r\n\r\n      // FILTER BY LABEL\r\n      result = new OMVRBTreeRIDSet();\r\n      if (set != null)\r\n        for (OIdentifiable item : set) {\r\n          if (iLabel == null || iLabel.equals(((ODocument) item).field(LABEL)))\r\n            result.add(item);\r\n        }\r\n\r\n    } finally {\r\n      if (autoLock)\r\n        releaseReadLock(iVertex);\r\n    }\r\n    return result;\r\n  }","id":54833,"modified_method":"public Set<OIdentifiable> getInEdges(final OIdentifiable iVertex, final String iLabel) {\r\n    final ODocument vertex = iVertex.getRecord();\r\n    checkVertexClass(vertex);\r\n\r\n    OMVRBTreeRIDSet result = null;\r\n\r\n    acquireReadLock(iVertex);\r\n    try {\r\n\r\n      final OMVRBTreeRIDSet set = vertex.field(VERTEX_FIELD_IN);\r\n\r\n      if (iLabel == null)\r\n        // RETURN THE ENTIRE COLLECTION\r\n        if (set != null)\r\n          return Collections.unmodifiableSet(set);\r\n        else\r\n          return Collections.emptySet();\r\n\r\n      // FILTER BY LABEL\r\n      result = new OMVRBTreeRIDSet();\r\n      if (set != null)\r\n        for (OIdentifiable item : set) {\r\n          if (iLabel == null || iLabel.equals(((ODocument) item).field(LABEL)))\r\n            result.add(item);\r\n        }\r\n\r\n    } finally {\r\n      releaseReadLock(iVertex);\r\n    }\r\n    return result;\r\n  }","commit_id":"f119ea70438e3ff3d72678086ce4c58441a445a7","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public Set<OIdentifiable> filterEdgesByProperties(final OMVRBTreeRIDSet iEdges, final Iterable<String> iPropertyNames) {\r\n    if (autoLock)\r\n      acquireReadLock(null);\r\n    try {\r\n\r\n      if (iPropertyNames == null)\r\n        // RETURN THE ENTIRE COLLECTION\r\n        if (iEdges != null)\r\n          return Collections.unmodifiableSet(iEdges);\r\n        else\r\n          return Collections.emptySet();\r\n\r\n      // FILTER BY PROPERTY VALUES\r\n      final OMVRBTreeRIDSet result = new OMVRBTreeRIDSet();\r\n      if (iEdges != null)\r\n        for (OIdentifiable item : iEdges) {\r\n          final ODocument doc = (ODocument) item;\r\n          for (String propName : iPropertyNames) {\r\n            if (doc.containsField(propName))\r\n              // FOUND: ADD IT\r\n              result.add(item);\r\n          }\r\n        }\r\n\r\n      return result;\r\n\r\n    } finally {\r\n      if (autoLock)\r\n        releaseReadLock(null);\r\n    }\r\n  }","id":54834,"modified_method":"public Set<OIdentifiable> filterEdgesByProperties(final OMVRBTreeRIDSet iEdges, final Iterable<String> iPropertyNames) {\r\n    acquireReadLock(null);\r\n    try {\r\n\r\n      if (iPropertyNames == null)\r\n        // RETURN THE ENTIRE COLLECTION\r\n        if (iEdges != null)\r\n          return Collections.unmodifiableSet(iEdges);\r\n        else\r\n          return Collections.emptySet();\r\n\r\n      // FILTER BY PROPERTY VALUES\r\n      final OMVRBTreeRIDSet result = new OMVRBTreeRIDSet();\r\n      if (iEdges != null)\r\n        for (OIdentifiable item : iEdges) {\r\n          final ODocument doc = (ODocument) item;\r\n          for (String propName : iPropertyNames) {\r\n            if (doc.containsField(propName))\r\n              // FOUND: ADD IT\r\n              result.add(item);\r\n          }\r\n        }\r\n\r\n      return result;\r\n\r\n    } finally {\r\n      releaseReadLock(null);\r\n    }\r\n  }","commit_id":"f119ea70438e3ff3d72678086ce4c58441a445a7","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\r\n   * Releases the exclusive lock against a record previously acquired by current thread.\r\n   * \r\n   * @param iRecord\r\n   *          Record to unlock\r\n   * @return The current instance as fluent interface to allow calls in chain.\r\n   */\r\n  public OGraphDatabase releaseWriteLock(final OIdentifiable iRecord) {\r\n    ((OStorageEmbedded) getStorage()).getLock().releaseExclusiveLock();\r\n    // ((OStorageEmbedded) getStorage()).releaseWriteLock(iRecord.getIdentity());\r\n    return this;\r\n  }","id":54835,"modified_method":"/**\r\n   * Releases the exclusive lock against a record previously acquired by current thread.\r\n   * \r\n   * @param iRecord\r\n   *          Record to unlock\r\n   * @return The current instance as fluent interface to allow calls in chain.\r\n   */\r\n  public OGraphDatabase releaseWriteLock(final OIdentifiable iRecord) {\r\n    switch (lockMode) {\r\n    case DATABASE_LEVEL_LOCKING:\r\n      ((OStorage) getStorage()).getLock().releaseExclusiveLock();\r\n      break;\r\n    case RECORD_LEVEL_LOCKING:\r\n      ((OStorageEmbedded) getStorage()).releaseWriteLock(iRecord.getIdentity());\r\n      break;\r\n    case NO_LOCKING:\r\n      break;\r\n    }\r\n    return this;\r\n  }","commit_id":"f119ea70438e3ff3d72678086ce4c58441a445a7","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/**\r\n   * Releases the shared lock against a record previously acquired by current thread.\r\n   * \r\n   * @param iRecord\r\n   *          Record to unlock\r\n   * @return The current instance as fluent interface to allow calls in chain.\r\n   */\r\n  public OGraphDatabase releaseReadLock(final OIdentifiable iRecord) {\r\n    ((OStorageEmbedded) getStorage()).getLock().releaseSharedLock();\r\n    // ((OStorageEmbedded) getStorage()).releaseReadLock(iRecord.getIdentity());\r\n    return this;\r\n  }","id":54836,"modified_method":"/**\r\n   * Releases the shared lock against a record previously acquired by current thread.\r\n   * \r\n   * @param iRecord\r\n   *          Record to unlock\r\n   * @return The current instance as fluent interface to allow calls in chain.\r\n   */\r\n  public OGraphDatabase releaseReadLock(final OIdentifiable iRecord) {\r\n    switch (lockMode) {\r\n    case DATABASE_LEVEL_LOCKING:\r\n      ((OStorage) getStorage()).getLock().releaseSharedLock();\r\n      break;\r\n    case RECORD_LEVEL_LOCKING:\r\n      ((OStorageEmbedded) getStorage()).releaseReadLock(iRecord.getIdentity());\r\n      break;\r\n    case NO_LOCKING:\r\n      break;\r\n    }\r\n    return this;\r\n  }","commit_id":"f119ea70438e3ff3d72678086ce4c58441a445a7","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public Set<OIdentifiable> filterEdgesByProperties(final OMVRBTreeRIDSet iEdges, final Map<String, Object> iProperties) {\r\n    if (autoLock)\r\n      acquireReadLock(null);\r\n    try {\r\n\r\n      if (iProperties == null)\r\n        // RETURN THE ENTIRE COLLECTION\r\n        if (iEdges != null)\r\n          return Collections.unmodifiableSet(iEdges);\r\n        else\r\n          return Collections.emptySet();\r\n\r\n      // FILTER BY PROPERTY VALUES\r\n      final OMVRBTreeRIDSet result = new OMVRBTreeRIDSet();\r\n      if (iEdges != null)\r\n        for (OIdentifiable item : iEdges) {\r\n          final ODocument doc = (ODocument) item;\r\n          for (Entry<String, Object> prop : iProperties.entrySet()) {\r\n            if (prop.getKey() != null && doc.containsField(prop.getKey())) {\r\n              if (prop.getValue() == null) {\r\n                if (doc.field(prop.getKey()) == null)\r\n                  // BOTH NULL: ADD IT\r\n                  result.add(item);\r\n              } else if (prop.getValue().equals(doc.field(prop.getKey())))\r\n                // SAME VALUE: ADD IT\r\n                result.add(item);\r\n            }\r\n          }\r\n        }\r\n\r\n      return result;\r\n    } finally {\r\n      if (autoLock)\r\n        releaseReadLock(null);\r\n    }\r\n  }","id":54837,"modified_method":"public Set<OIdentifiable> filterEdgesByProperties(final OMVRBTreeRIDSet iEdges, final Map<String, Object> iProperties) {\r\n    acquireReadLock(null);\r\n    try {\r\n\r\n      if (iProperties == null)\r\n        // RETURN THE ENTIRE COLLECTION\r\n        if (iEdges != null)\r\n          return Collections.unmodifiableSet(iEdges);\r\n        else\r\n          return Collections.emptySet();\r\n\r\n      // FILTER BY PROPERTY VALUES\r\n      final OMVRBTreeRIDSet result = new OMVRBTreeRIDSet();\r\n      if (iEdges != null)\r\n        for (OIdentifiable item : iEdges) {\r\n          final ODocument doc = (ODocument) item;\r\n          for (Entry<String, Object> prop : iProperties.entrySet()) {\r\n            if (prop.getKey() != null && doc.containsField(prop.getKey())) {\r\n              if (prop.getValue() == null) {\r\n                if (doc.field(prop.getKey()) == null)\r\n                  // BOTH NULL: ADD IT\r\n                  result.add(item);\r\n              } else if (prop.getValue().equals(doc.field(prop.getKey())))\r\n                // SAME VALUE: ADD IT\r\n                result.add(item);\r\n            }\r\n          }\r\n        }\r\n\r\n      return result;\r\n    } finally {\r\n      releaseReadLock(null);\r\n    }\r\n  }","commit_id":"f119ea70438e3ff3d72678086ce4c58441a445a7","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"/** Produce the repair log. This is idempotent. */\n    void handleLogRequest(VoltMessage message)\n    {\n        Iv2RepairLogRequestMessage req = (Iv2RepairLogRequestMessage)message;\n        List<RepairLog.Item> logs = m_repairLog.contents(req.isMPIRequest());\n\n        String whoami =\n            \"SP \" +  CoreUtils.hsIdToString(getHSId())\n            + \" handling repair log request id \" + req.getRequestId()\n            + \" for \" + CoreUtils.hsIdToString(message.m_sourceHSId) + \". \";\n\n        int seq = 0;\n        int ofTotal = logs.size() + 1;  // includes the ack.\n        tmLog.info(whoami + \"Responding with \" + ofTotal + \" repair log parts.\");\n\n        // always send an initial ack.\n        Iv2RepairLogResponseMessage header =\n            new Iv2RepairLogResponseMessage(\n                    req.getRequestId(),\n                    seq++,\n                    ofTotal,\n                    m_repairLog.getLastSpHandle(),\n                    null); // no payload. just an ack.\n        send(message.m_sourceHSId, header);\n\n        for (RepairLog.Item log : logs) {\n            Iv2RepairLogResponseMessage response =\n                new Iv2RepairLogResponseMessage(\n                        req.getRequestId(),\n                        seq++,\n                        ofTotal,\n                        log.getHandle(),\n                        log.getMessage());\n            send(message.m_sourceHSId, response);\n        }\n    }","id":54838,"modified_method":"/** Produce the repair log. This is idempotent. */\n    void handleLogRequest(VoltMessage message)\n    {\n        Iv2RepairLogRequestMessage req = (Iv2RepairLogRequestMessage)message;\n        List<Iv2RepairLogResponseMessage> logs = m_repairLog.contents(req.getRequestId(),\n                req.isMPIRequest());\n\n        tmLog.info(\"\"\n            + CoreUtils.hsIdToString(getHSId())\n            + \" handling repair log request id \" + req.getRequestId()\n            + \" for \" + CoreUtils.hsIdToString(message.m_sourceHSId) + \". \");\n\n        for (Iv2RepairLogResponseMessage log : logs) {\n            send(message.m_sourceHSId, log);\n        }\n    }","commit_id":"9ddef79119b4f03770c640f64b890d53e48dcb09","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public List<Item> contents(boolean forMPI)\n    {\n        List<Item> response = new LinkedList<Item>();\n        Iterator<Item> it = m_log.iterator();\n        while (it.hasNext()) {\n            Item i = it.next();\n            if (!forMPI || i.isMP()) {\n                response.add(i);\n            }\n        }\n        return response;\n    }","id":54839,"modified_method":"public List<Iv2RepairLogResponseMessage> contents(long requestId, boolean forMPI)\n    {\n        List<Item> items = new LinkedList<Item>();\n        Iterator<Item> it = m_log.iterator();\n        while (it.hasNext()) {\n            Item i = it.next();\n            if (!forMPI || i.isMP()) {\n                items.add(i);\n            }\n        }\n\n        int ofTotal = items.size() + 1;\n        tmLog.info(\"Responding with \" + ofTotal + \" repair log parts.\");\n        List<Iv2RepairLogResponseMessage> responses =\n            new LinkedList<Iv2RepairLogResponseMessage>();\n\n        int seq = 0;\n        Iv2RepairLogResponseMessage header =\n            new Iv2RepairLogResponseMessage(\n                    requestId,\n                    seq++,\n                    ofTotal,\n                    forMPI ? m_lastMpHandle : m_lastSpHandle,\n                    null); // no payload. just an ack.\n        responses.add(header);\n\n        Iterator<Item> itemator = items.iterator();\n        while (itemator.hasNext()) {\n            Item item = itemator.next();\n            Iv2RepairLogResponseMessage response =\n                new Iv2RepairLogResponseMessage(\n                        requestId,\n                        seq++,\n                        ofTotal,\n                        item.getHandle(),\n                        item.getMessage());\n            responses.add(response);\n        }\n        return responses;\n    }","commit_id":"9ddef79119b4f03770c640f64b890d53e48dcb09","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Test\n    public void testTruncationAfterPromotion()\n    {\n        RepairLog rl = new RepairLog();\n        VoltMessage m1 = truncInitMsg(0L, 1L);\n        rl.deliver(m1);\n        VoltMessage m2 = truncInitMsg(0L, 2L);\n        rl.deliver(m2);\n        assertEquals(2, rl.contents(false).size());\n        rl.setLeaderState(true);\n        assertEquals(0, rl.contents(false).size());\n    }","id":54840,"modified_method":"@Test\n    public void testTruncationAfterPromotion()\n    {\n        RepairLog rl = new RepairLog();\n        VoltMessage m1 = truncInitMsg(0L, 1L);\n        rl.deliver(m1);\n        VoltMessage m2 = truncInitMsg(0L, 2L);\n        rl.deliver(m2);\n        assertEquals(2, rl.contents(1L, false).size());\n        rl.setLeaderState(true);\n        assertEquals(0, rl.contents(1L, false).size());\n    }","commit_id":"9ddef79119b4f03770c640f64b890d53e48dcb09","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Test\n    public void testOfferCompleteMessage()\n    {\n        RepairLog rl = new RepairLog();\n\n        // trunc(trunc point, txnId).\n        VoltMessage m1 = truncCompleteMsg(0L, 1L);\n        rl.deliver(m1);\n        assertEquals(1, rl.contents(false).size());\n\n        VoltMessage m2 = truncCompleteMsg(0L, 2L);\n        rl.deliver(m2);\n        assertEquals(2, rl.contents(false).size());\n\n        // trim m1. add m3\n        VoltMessage m3 = truncCompleteMsg(1L, 3L);\n        rl.deliver(m3);\n        assertEquals(2, rl.contents(false).size());\n        assertEquals(m2, rl.contents(false).get(0).getMessage());\n        assertEquals(2L, rl.contents(false).get(0).getHandle());\n        assertEquals(m3, rl.contents(false).get(1).getMessage());\n        assertEquals(3L, rl.contents(false).get(1).getHandle());\n    }","id":54841,"modified_method":"@Test\n    public void testOfferCompleteMessage()\n    {\n        RepairLog rl = new RepairLog();\n\n        // trunc(trunc point, txnId).\n        VoltMessage m1 = truncCompleteMsg(0L, 1L);\n        rl.deliver(m1);\n        assertEquals(1, rl.contents(1L, false).size());\n\n        VoltMessage m2 = truncCompleteMsg(0L, 2L);\n        rl.deliver(m2);\n        assertEquals(2, rl.contents(1L, false).size());\n\n        // trim m1. add m3\n        VoltMessage m3 = truncCompleteMsg(1L, 3L);\n        rl.deliver(m3);\n        assertEquals(2, rl.contents(1L, false).size());\n        assertEquals(m2, rl.contents(1L, false).get(0).getPayload());\n        assertEquals(2L, rl.contents(1L, false).get(0).getHandle());\n        assertEquals(m3, rl.contents(1L, false).get(1).getPayload());\n        assertEquals(3L, rl.contents(1L, false).get(1).getHandle());\n    }","commit_id":"9ddef79119b4f03770c640f64b890d53e48dcb09","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Test\n    public void testOfferFragmentTaskMessage()\n    {\n        RepairLog rl = new RepairLog();\n\n        // trunc(trunc point, txnId).\n        VoltMessage m1 = truncFragMsg(0L, 1L);\n        rl.deliver(m1);\n        assertEquals(1, rl.contents(false).size());\n\n        VoltMessage m2 = truncFragMsg(0L, 2L);\n        rl.deliver(m2);\n        assertEquals(2, rl.contents(false).size());\n\n        // only the first message for a transaction is logged.\n        VoltMessage m2b = truncFragMsg(0L, 2L);\n        rl.deliver(m2b);\n        assertEquals(2, rl.contents(false).size());\n\n        // trim m1. add m3\n        VoltMessage m3 = truncFragMsg(1L, 3L);\n        rl.deliver(m3);\n        assertEquals(2, rl.contents(false).size());\n        assertEquals(m2, rl.contents(false).get(0).getMessage());\n        assertEquals(2L, rl.contents(false).get(0).getHandle());\n        assertEquals(m3, rl.contents(false).get(1).getMessage());\n        assertEquals(3L, rl.contents(false).get(1).getHandle());\n    }","id":54842,"modified_method":"@Test\n    public void testOfferFragmentTaskMessage()\n    {\n        RepairLog rl = new RepairLog();\n\n        // trunc(trunc point, txnId).\n        VoltMessage m1 = truncFragMsg(0L, 1L);\n        rl.deliver(m1);\n        assertEquals(1, rl.contents(1L, false).size());\n\n        VoltMessage m2 = truncFragMsg(0L, 2L);\n        rl.deliver(m2);\n        assertEquals(2, rl.contents(1L, false).size());\n\n        // only the first message for a transaction is logged.\n        VoltMessage m2b = truncFragMsg(0L, 2L);\n        rl.deliver(m2b);\n        assertEquals(2, rl.contents(1L, false).size());\n\n        // trim m1. add m3\n        VoltMessage m3 = truncFragMsg(1L, 3L);\n        rl.deliver(m3);\n        assertEquals(2, rl.contents(1L, false).size());\n        assertEquals(m2, rl.contents(1L, false).get(0).getPayload());\n        assertEquals(2L, rl.contents(1L, false).get(0).getHandle());\n        assertEquals(m3, rl.contents(1L, false).get(1).getPayload());\n        assertEquals(3L, rl.contents(1L, false).get(1).getHandle());\n    }","commit_id":"9ddef79119b4f03770c640f64b890d53e48dcb09","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Test\n    public void testOffer()\n    {\n        // offer some various messages to log and check\n        // that it keeps the expected ones.\n        RepairLog rl = new RepairLog();\n        VoltMessage m1 = nonTruncInitMsg();\n        VoltMessage m2 = nonTruncInitMsg();\n\n        rl.deliver(m1);\n        rl.deliver(m2);\n\n        List<RepairLog.Item> contents = rl.contents(false);\n        assertEquals(2, contents.size());\n        assertEquals(m1, contents.get(0).getMessage());\n        assertEquals(m2, contents.get(1).getMessage());\n    }","id":54843,"modified_method":"@Test\n    public void testOffer()\n    {\n        // offer some various messages to log and check\n        // that it keeps the expected ones.\n        RepairLog rl = new RepairLog();\n        VoltMessage m1 = nonTruncInitMsg();\n        VoltMessage m2 = nonTruncInitMsg();\n\n        rl.deliver(m1);\n        rl.deliver(m2);\n\n        List<Iv2RepairLogResponseMessage> contents = rl.contents(1l, false);\n        assertEquals(2, contents.size());\n        assertEquals(m1, contents.get(0).getPayload());\n        assertEquals(m2, contents.get(1).getPayload());\n    }","commit_id":"9ddef79119b4f03770c640f64b890d53e48dcb09","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Test\n    public void testOfferWithTruncation()\n    {\n        RepairLog rl = new RepairLog();\n\n        // add m1\n        VoltMessage m1 = truncInitMsg(0L, 1L);\n        rl.deliver(m1);\n        assertEquals(1, rl.contents(false).size());\n\n        // add m2\n        VoltMessage m2 = truncInitMsg(0L, 2L);\n        rl.deliver(m2);\n        assertEquals(2, rl.contents(false).size());\n\n        // trim m1. add m3\n        VoltMessage m3 = truncInitMsg(1L, 3L);\n        rl.deliver(m3);\n        assertEquals(2, rl.contents(false).size());\n        assertEquals(m2, rl.contents(false).get(0).getMessage());\n        assertEquals(2L, rl.contents(false).get(0).getHandle());\n        assertEquals(m3, rl.contents(false).get(1).getMessage());\n        assertEquals(3L, rl.contents(false).get(1).getHandle());\n\n    }","id":54844,"modified_method":"@Test\n    public void testOfferWithTruncation()\n    {\n        RepairLog rl = new RepairLog();\n\n        // add m1\n        VoltMessage m1 = truncInitMsg(0L, 1L);\n        rl.deliver(m1);\n        assertEquals(1, rl.contents(1L, false).size());\n\n        // add m2\n        VoltMessage m2 = truncInitMsg(0L, 2L);\n        rl.deliver(m2);\n        assertEquals(2, rl.contents(1L, false).size());\n\n        // trim m1. add m3\n        VoltMessage m3 = truncInitMsg(1L, 3L);\n        rl.deliver(m3);\n        assertEquals(2, rl.contents(1L, false).size());\n        assertEquals(m2, rl.contents(1L, false).get(0).getPayload());\n        assertEquals(2L, rl.contents(1L, false).get(0).getHandle());\n        assertEquals(m3, rl.contents(1L, false).get(1).getPayload());\n        assertEquals(3L, rl.contents(1L, false).get(1).getPayload());\n\n    }","commit_id":"9ddef79119b4f03770c640f64b890d53e48dcb09","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Test\n    public void testOfferUneededMessage()\n    {\n        RepairLog rl = new RepairLog();\n        VoltMessage m1 = truncInitMsg(0L, 1L);\n        rl.deliver(m1);\n        // deliver a non-logged message (this is the test).\n        rl.deliver(new FooMessage());\n        VoltMessage m2 = truncInitMsg(0L, 2L);\n        rl.deliver(m2);\n        assertEquals(2, rl.contents(false).size());\n        assertEquals(m1, rl.contents(false).get(0).getMessage());\n        assertEquals(m2, rl.contents(false).get(1).getMessage());\n    }","id":54845,"modified_method":"@Test\n    public void testOfferUneededMessage()\n    {\n        RepairLog rl = new RepairLog();\n        VoltMessage m1 = truncInitMsg(0L, 1L);\n        rl.deliver(m1);\n        // deliver a non-logged message (this is the test).\n        rl.deliver(new FooMessage());\n        VoltMessage m2 = truncInitMsg(0L, 2L);\n        rl.deliver(m2);\n        assertEquals(2, rl.contents(1L, false).size());\n        assertEquals(m1, rl.contents(1L, false).get(0).getPayload());\n        assertEquals(m2, rl.contents(1L, false).get(1).getPayload());\n    }","commit_id":"9ddef79119b4f03770c640f64b890d53e48dcb09","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void handle(Connection connection, InputStream dataStream) throws IOException {\n        final int workingVersion;\n        final ManagementRequestHeader requestHeader;\n        final MessageHandler handler;\n        ByteDataInput input = null;\n        try {\n            input = new SimpleByteDataInput(dataStream);\n\n            // Start by reading the request header\n            requestHeader = new ManagementRequestHeader(input);\n\n            // Work with the lowest protocol version\n            workingVersion = Math.min(ManagementProtocol.VERSION, requestHeader.getVersion());\n\n            byte handlerId = requestHeader.getOperationHandlerId();\n            if (handlerId == -1) {\n                throw new IOException(\"Management request failed.  Invalid handler id\");\n            }\n            handler = getHandlerForId(handlerId);\n            if (handler == null) {\n                String msg = \"Management request failed.  No handler found for id \" + handlerId;\n                throw new IOException(msg);\n            }\n            connection.setMessageHandler(handler);\n        } catch (IOException e) {\n            throw e;\n        } catch (Throwable t) {\n            throw new IOException(\"Failed to read request header\", t);\n        } finally {\n            safeClose(input);\n            safeClose(dataStream);\n        }\n\n        OutputStream dataOutput = null;\n        ByteDataOutput output = null;\n        try {\n            dataOutput = connection.writeMessage();\n            output = new SimpleByteDataOutput(dataOutput);\n\n            // Now write the response header\n            final ManagementResponseHeader responseHeader = new ManagementResponseHeader(workingVersion, requestHeader.getRequestId());\n            responseHeader.write(output);\n\n            output.close();\n            dataOutput.close();\n        } catch (IOException e) {\n            throw e;\n        } catch (Throwable t) {\n            throw new IOException(\"Failed to write management response headers\", t);\n        } finally {\n            safeClose(output);\n            safeClose(dataOutput);\n        }\n    }","id":54846,"modified_method":"@Override\n    public void handle(Connection connection, InputStream dataStream) throws IOException {\n        final ManagementRequestHeader requestHeader;\n        final MessageHandler handler;\n        ByteDataInput input = null;\n        int workingVersion = 1;\n        int responseId = ManagementProtocol.REMOTE_EXCEPTION;\n        try {\n            input = new SimpleByteDataInput(dataStream);\n\n            // Start by reading the request header\n            requestHeader = new ManagementRequestHeader(input);\n\n            // Work with the lowest protocol version\n            workingVersion = Math.min(ManagementProtocol.VERSION, requestHeader.getVersion());\n\n            byte handlerId = requestHeader.getOperationHandlerId();\n            if (handlerId == -1) {\n                throw new IOException(\"Management request failed.  Invalid handler id\");\n            }\n            handler = getHandlerForId(handlerId);\n            if (handler == null) {\n                String msg = \"Management request failed.  No handler found for id \" + handlerId;\n                throw new IOException(msg);\n            }\n            connection.setMessageHandler(handler);\n            responseId = requestHeader.getRequestId();\n        } catch (IOException e) {\n            throw e;\n        } catch (Throwable t) {\n            throw new IOException(\"Failed to read request header\", t);\n        } finally {\n            safeClose(input);\n            safeClose(dataStream);\n            writeResponseHeader(connection, workingVersion, responseId);\n        }\n    }","commit_id":"aa29d6d377d1b856393044ebd72cf8974bddd0d9","url":"https://github.com/wildfly/wildfly"},{"original_method":"/** {@inheritDoc} */\n    @Override\n    public void handle(Connection connection, InputStream input) throws IOException {\n        try {\n            connection.setMessageHandler(responseBodyHandler);\n            expectHeader(input, ManagementProtocol.RESPONSE_START);\n            byte responseCode = StreamUtils.readByte(input);\n            if (responseCode != getResponseCode()) {\n                throw new IOException(\"Invalid response code.  Expecting '\" + getResponseCode() + \"' received '\" + responseCode + \"'\");\n            }\n        } catch (Exception e) {\n            future.setException(e);\n        }\n    }","id":54847,"modified_method":"/** {@inheritDoc} */\n    @Override\n    public void handle(Connection connection, InputStream input) throws IOException {\n        try {\n            connection.setMessageHandler(responseBodyHandler);\n            byte header = StreamUtils.readByte(input);\n            if (header == ManagementProtocol.REMOTE_EXCEPTION) {\n                throw new IOException(\"Remote side caught an (unknown) exception and cannot process the request\");\n            }\n            expectHeader(header, ManagementProtocol.RESPONSE_START);\n            byte responseCode = StreamUtils.readByte(input);\n            if (responseCode != getResponseCode()) {\n                throw new IOException(\"Invalid response code.  Expecting '\" + getResponseCode() + \"' received '\" + responseCode + \"'\");\n            }\n        } catch (Exception e) {\n            future.setException(e);\n        }\n    }","commit_id":"aa29d6d377d1b856393044ebd72cf8974bddd0d9","url":"https://github.com/wildfly/wildfly"},{"original_method":"private static void expectHeader(final byte actual, int expected) throws IOException {\n        if (actual != (byte) expected) {\n            throw new IOException(\"Invalid byte token.  Expecting '\" + expected + \"' received '\" + actual + \"'\");\n        }\n    }","id":54848,"modified_method":"public static void expectHeader(final byte actual, int expected) throws IOException {\n        if (actual != (byte) expected) {\n            throw new IOException(\"Invalid byte token.  Expecting '\" + expected + \"' received '\" + actual + \"'\");\n        }\n    }","commit_id":"aa29d6d377d1b856393044ebd72cf8974bddd0d9","url":"https://github.com/wildfly/wildfly"},{"original_method":"public static ManagementResponseHeader create(final ManagementRequestHeader header) {\n        final int workingVersion = Math.min(ManagementProtocol.VERSION, header.getVersion());\n        return new ManagementResponseHeader(workingVersion, header.getRequestId(), null);\n    }","id":54849,"modified_method":"public static ManagementResponseHeader create(final ManagementRequestHeader header) {\n        return create(header, header.getRequestId());\n    }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void handleMessage(final Channel channel, final DataInput input, final ManagementProtocolHeader header) throws IOException {\n        final byte type = header.getType();\n        if(type == ManagementProtocol.TYPE_REQUEST) {\n            final ManagementRequestHeader request = (ManagementRequestHeader) header;\n            final byte id = request.getOperationId();\n\n            ManagementRequestHandler<ModelNode, Void> handler = clientHandler.getRequestHandler(id);\n            if (handler != null) {\n                clientHandler.handleMessage(channel, input, header);\n            }\n            switch(id) {\n                case DomainControllerProtocol.REGISTER_HOST_CONTROLLER_REQUEST:\n                    handler = new RegisterOperation();\n                    break;\n                case DomainControllerProtocol.UNREGISTER_HOST_CONTROLLER_REQUEST:\n                    handler = new UnregisterOperation();\n                    break;\n                case DomainControllerProtocol.GET_FILE_REQUEST:\n                    handler =  new GetFileOperation();\n                    break;\n            }\n            if(handler != null) {\n                clientHandler.runLocalRequestHandler(channel, input, request, handler);\n            } else if (proxyHandler != null) {\n                // Delegate to the proxy\n                proxyHandler.handleMessage(channel, input, header);\n            }\n\n        }\n    }","id":54850,"modified_method":"@Override\n    public void handleMessage(final Channel channel, final DataInput input, final ManagementProtocolHeader header) throws IOException {\n        final byte type = header.getType();\n        if(type == ManagementProtocol.TYPE_REQUEST) {\n            final ManagementRequestHeader request = (ManagementRequestHeader) header;\n            final byte id = request.getOperationId();\n\n            ManagementRequestHandler<ModelNode, Void> handler = clientHandler.getRequestHandler(id);\n            if (handler != null) {\n                clientHandler.handleMessage(channel, input, header);\n            }\n            switch(id) {\n                case DomainControllerProtocol.REGISTER_HOST_CONTROLLER_REQUEST:\n                    handler = new RegisterOperation();\n                    break;\n                case DomainControllerProtocol.UNREGISTER_HOST_CONTROLLER_REQUEST:\n                    handler = new UnregisterOperation();\n                    break;\n                case DomainControllerProtocol.GET_FILE_REQUEST:\n                    handler =  new GetFileOperation();\n                    break;\n            }\n            if(handler != null) {\n                clientHandler.runLocalRequestHandler(channel, input, request, handler);\n            } else if (proxyHandler != null) {\n                // Delegate to the proxy\n                proxyHandler.handleMessage(channel, input, header);\n            }\n\n        } else if (type == ManagementProtocol.TYPE_RESPONSE) {\n            if(proxyHandler != null) {\n                // the proxy is the only one requiring responses\n                proxyHandler.handleMessage(channel, input, header);\n            }\n        }\n    }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void cancelled() {\n            control.operationFailed(getResponse(\"cancelled\"));\n            prepareOrFailedLatch.countDown();\n        }","id":54851,"modified_method":"@Override\n        public void cancelled() {\n            operationFailed(getResponse(\"cancelled\"));\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    protected ManagementRequestHandler<Void, ExecuteRequestContext> getRequestHandler(byte operationType) {\n        if (operationType == ModelControllerProtocol.HANDLE_REPORT_REQUEST) {\n            return new HandleReportRequestHandler();\n        } else if (operationType == ModelControllerProtocol.OPERATION_FAILED_REQUEST) {\n            return new OperationFailedRequestHandler();\n        } else if (operationType == ModelControllerProtocol.OPERATION_COMPLETED_REQUEST) {\n            return new OperationCompletedRequestHandler();\n        } else if (operationType == ModelControllerProtocol.OPERATION_PREPARED_REQUEST) {\n            return new OperationPreparedRequestHandler();\n        } else if (operationType == ModelControllerProtocol.GET_INPUTSTREAM_REQUEST) {\n            return new ReadAttachmentInputStreamRequestHandler();\n        }\n        return super.getRequestHandler(operationType);\n    }","id":54852,"modified_method":"/** {@inheritDoc} */\n    @Override\n    protected ManagementRequestHandler<Void, ExecuteRequestContext> getRequestHandler(byte operationType) {\n        if (operationType == ModelControllerProtocol.HANDLE_REPORT_REQUEST) {\n            return new HandleReportRequestHandler();\n        } else if (operationType == ModelControllerProtocol.GET_INPUTSTREAM_REQUEST) {\n            return new ReadAttachmentInputStreamRequestHandler();\n        }\n        return super.getRequestHandler(operationType);\n    }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"public ExecuteRequestContext(final ModelNode operation, final OperationAttachments attachments, final OperationMessageHandler messageHandler, final ProxyOperationControl delegate) {\n            this.control = new ProxyOperationControl() {\n                @Override\n                public void operationFailed(ModelNode response) {\n                    if(completed.compareAndSet(false, true)) {\n                        delegate.operationFailed(response);\n                    }\n                    prepareOrFailedLatch.countDown();\n                }\n\n                @Override\n                public void operationCompleted(ModelNode response) {\n                    if(completed.compareAndSet(false, true)) {\n                        delegate.operationCompleted(response);\n                    }\n                }\n\n                @Override\n                public void operationPrepared(OperationTransaction transaction, ModelNode result) {\n                    delegate.operationPrepared(transaction, result);\n                    prepareOrFailedLatch.countDown();\n                }\n            };\n            this.operation = operation;\n            this.attachments = attachments;\n            this.messageHandler = messageHandler;\n        }","id":54853,"modified_method":"ExecuteRequestContext(final ModelNode operation, final OperationAttachments attachments,\n                                 final OperationMessageHandler messageHandler, final ProxyOperationControl delegate) {\n            this.operation = operation;\n            this.attachments = attachments;\n            this.messageHandler = messageHandler;\n            this.control = delegate;\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void handleRequest(final DataInput input, final ActiveOperation.ResultHandler<Void> resultHandler, final ManagementRequestContext<ExecuteRequestContext> context) throws IOException {\n            //\n        }","id":54854,"modified_method":"@Override\n        public void handleRequest(final DataInput input, final ActiveOperation.ResultHandler<Void> resultHandler, final ManagementRequestContext<ExecuteRequestContext> context) throws IOException {\n            final byte responseType = input.readByte();\n            final ModelNode response = new ModelNode();\n            response.readExternal(input);\n            // If not prepared the operation failed\n            final boolean prepared = responseType == ModelControllerProtocol.PARAM_OPERATION_PREPARED;\n            context.executeAsync(new ManagementRequestContext.AsyncTask<ExecuteRequestContext>() {\n\n                @Override\n                public void execute(ManagementRequestContext<ExecuteRequestContext> executeRequestContextManagementRequestContext) throws Exception {\n                    final ExecuteRequestContext executeRequestContext = context.getAttachment();\n                    if(prepared) {\n                        // operation-prepared, this will allow RemoteProxyController#execute to proceed\n                        executeRequestContext.operationPrepared(new ModelController.OperationTransaction() {\n\n                            @Override\n                            public void rollback() {\n                                done(false);\n                            }\n\n                            @Override\n                            public void commit() {\n                                done(true);\n                            }\n\n                            private void done(boolean commit) {\n                                final byte status = commit ? ModelControllerProtocol.PARAM_COMMIT : ModelControllerProtocol.PARAM_ROLLBACK;\n                                final ActiveOperation<Void, ExecuteRequestContext> activeOperation = RemoteProxyController.this.getActiveOperation(context.getOperationId());\n                                try {\n                                    // Send the CompleteTxRequest\n                                    RemoteProxyController.this.executeRequest(new CompleteTxRequest(status), channel, activeOperation);\n                                } catch (Exception e) {\n                                    resultHandler.failed(e);\n                                }\n                                try {\n                                    /// Await the operation completed notification\n                                    activeOperation.getResult().await();\n                                } catch (InterruptedException e) {\n                                    throw MESSAGES.transactionTimeout(commit ? \"commit\" : \"rollback\");\n                                }\n                            }\n                        }, response);\n                    } else {\n                        // Failed\n                        executeRequestContext.operationFailed(response);\n                        resultHandler.done(null);\n                    }\n                }\n            });\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void failed(final Exception e) {\n            control.operationFailed(getResponse(\"failed\"));\n            prepareOrFailedLatch.countDown();\n        }","id":54855,"modified_method":"@Override\n        public void failed(Exception e) {\n            operationFailed(getResponse(e.getMessage() != null ? e.getMessage() : \"failed\"));\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"private RemoteProxyController(final ExecutorService executorService, final PathAddress pathAddress,\n                                  final ProxyOperationAddressTranslator addressTranslator, final Channel channel) {\n        super(executorService);\n        this.pathAddress = pathAddress;\n        this.channel = channel;\n        this.addressTranslator = addressTranslator;\n    }","id":54856,"modified_method":"private RemoteProxyController(final ExecutorService executorService, final PathAddress pathAddress,\n                                  final ProxyOperationAddressTranslator addressTranslator, final Channel channel) {\n        super(executorService);\n        this.channel = channel;\n        this.pathAddress = pathAddress;\n        this.addressTranslator = addressTranslator;\n    }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"/** {@inheritDoc} */\n    @Override\n    public void execute(final ModelNode original, final OperationMessageHandler handler, final ProxyOperationControl control, final OperationAttachments attachments) {\n        // Translate the operation address first\n        final ModelNode operation = getOperationForProxy(original);\n        final ExecuteRequestContext context = new ExecuteRequestContext(operation, attachments, handler, control);\n        try {\n            final ActiveOperation<Void, RemoteProxyController.ExecuteRequestContext> support = super.registerActiveOperation(context, context);\n            super.executeRequest(new ExecuteRequest(), channel, support);\n            // Wait until the remote side completed all steps and sends the prepared\n            // result, or there is a failure\n            context.awaitPreparedOrFailed();\n\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }","id":54857,"modified_method":"/** {@inheritDoc} */\n    @Override\n    public void execute(final ModelNode original, final OperationMessageHandler handler, final ProxyOperationControl control, final OperationAttachments attachments) {\n        // Translate the operation address first\n        final ModelNode operation = getOperationForProxy(original);\n        final ExecuteRequestContext context = new ExecuteRequestContext(operation, attachments, handler, control);\n        try {\n            final ActiveOperation<Void, ExecuteRequestContext> support = super.registerActiveOperation(context, context);\n            super.executeRequest(new ExecuteRequest(), channel, support);\n            // Wait until we get a prepared or a failed response {@see ExecuteRequestHandler#handleRequest}\n            context.awaitPreparedOrFailed();\n\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        protected Channel.Receiver next() {\n            return new ManagementChannelReceiver() {\n\n                @Override\n                public void handleMessage(final Channel channel, final DataInput input, final ManagementProtocolHeader header) throws IOException {\n                    final byte type = header.getType();\n                    if(type == ManagementProtocol.TYPE_REQUEST) {\n                        final ManagementRequestHeader request = (ManagementRequestHeader) header;\n                        final byte op = request.getOperationId();\n                        if (op == DomainServerProtocol.GET_FILE_REQUEST) {\n                            AbstractMessageHandler<ModelNode, Void> operationHandler = new AbstractMessageHandler<ModelNode, Void>(executorService) {\n                                public void handleMessage(final Channel channel, final DataInput input, final ManagementProtocolHeader header) throws IOException {\n                                    final ActiveOperation<ModelNode, Void> support = super.registerActiveOperation(((ManagementRequestHeader)header).getBatchId(), null);\n                                    super.handleMessage(channel, input, header, support, new GetFileOperation());\n                                }\n                            };\n                            operationHandler.handleMessage(channel, input, header);\n                        } else {\n                            proxyHandler.handleMessage(channel, input, header);\n                        }\n                    }\n                }\n            };\n        }","id":54858,"modified_method":"@Override\n        protected Channel.Receiver next() {\n            return new ManagementChannelReceiver() {\n\n                @Override\n                public void handleMessage(final Channel channel, final DataInput input, final ManagementProtocolHeader header) throws IOException {\n                    final byte type = header.getType();\n                    if(type == ManagementProtocol.TYPE_REQUEST) {\n                        final ManagementRequestHeader request = (ManagementRequestHeader) header;\n                        final byte op = request.getOperationId();\n                        if (op == DomainServerProtocol.GET_FILE_REQUEST) {\n                            AbstractMessageHandler<ModelNode, Void> operationHandler = new AbstractMessageHandler<ModelNode, Void>(executorService) {\n                                public void handleMessage(final Channel channel, final DataInput input, final ManagementProtocolHeader header) throws IOException {\n                                    final ActiveOperation<ModelNode, Void> support = super.registerActiveOperation(((ManagementRequestHeader)header).getBatchId(), null);\n                                    super.handleMessage(channel, input, header, support, new GetFileOperation());\n                                }\n                            };\n                            operationHandler.handleMessage(channel, input, header);\n                        } else {\n                            proxyHandler.handleMessage(channel, input, header);\n                        }\n                    } else if(type == ManagementProtocol.TYPE_RESPONSE) {\n                        if(proxyHandler != null) {\n                            // the proxy is the only one requiring responses\n                            proxyHandler.handleMessage(channel, input, header);\n                        }\n                    }\n                }\n            };\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void operationCompleted(final ModelNode response) {\n            executeRequest(new OperationStatusRequest(response) {\n\n                @Override\n                public byte getOperationType() {\n                    return ModelControllerProtocol.OPERATION_COMPLETED_REQUEST;\n                }\n\n                @Override\n                public void handleRequest(DataInput input, ActiveOperation.ResultHandler<Void> resultHandler, ManagementRequestContext<ExecuteRequestContext> context) throws IOException {\n                    // Mark the active operation as complete.\n                    executeRequestContext.getResultHandler().done(null);\n                }\n            });\n\n        }","id":54859,"modified_method":"@Override\n        public void operationCompleted(final ModelNode response) {\n            requestContext.completed(response);\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"protected void doExecute(final ModelNode operation, final int attachmentsLength, final ManagementRequestContext<ExecuteRequestContext> context) {\n            final ExecuteRequestContext executeRequestContext = context.getAttachment();\n            final Integer batchId = executeRequestContext.getBatchId();\n            final AbstractModelControllerOperationHandler.OperationMessageHandlerProxy messageHandlerProxy = new AbstractModelControllerOperationHandler.OperationMessageHandlerProxy(context.getChannel(), batchId);\n            final ProxyOperationControlProxy control = new ProxyOperationControlProxy(context.getChannel(), batchId, executeRequestContext);\n            final AbstractModelControllerOperationHandler.OperationAttachmentsProxy attachmentsProxy = new AbstractModelControllerOperationHandler.OperationAttachmentsProxy(context.getChannel(), batchId, attachmentsLength);\n            final ModelNode result;\n            try {\n                result = controller.execute(\n                        operation,\n                        messageHandlerProxy,\n                        control,\n                        attachmentsProxy);\n            } catch (Exception e) {\n                final ModelNode failure = new ModelNode();\n                failure.get(OUTCOME).set(FAILED);\n                failure.get(FAILURE_DESCRIPTION).set(e.getClass().getName() + \":\" + e.getMessage());\n                control.operationFailed(failure);\n                attachmentsProxy.shutdown(e);\n                return;\n            }\n            if (result.hasDefined(FAILURE_DESCRIPTION)) {\n                control.operationFailed(result);\n            } else {\n                // The model controller will block in OperationControl.prepared until the {@code ProxyStepHandler}\n                // send a message to either commit or rollback the current operation\n                control.operationCompleted(result);\n            }\n        }","id":54860,"modified_method":"protected void doExecute(final ModelNode operation, final int attachmentsLength, final ManagementRequestContext<ExecuteRequestContext> context) {\n            final ExecuteRequestContext executeRequestContext = context.getAttachment();\n            // Set the response information\n            executeRequestContext.initialize(context);\n            final Integer batchId = executeRequestContext.getOperationId();\n            final AbstractModelControllerOperationHandler.OperationMessageHandlerProxy messageHandlerProxy = new AbstractModelControllerOperationHandler.OperationMessageHandlerProxy(context.getChannel(), batchId);\n            final ProxyOperationControlProxy control = new ProxyOperationControlProxy(executeRequestContext);\n            final AbstractModelControllerOperationHandler.OperationAttachmentsProxy attachmentsProxy = new AbstractModelControllerOperationHandler.OperationAttachmentsProxy(context.getChannel(), batchId, attachmentsLength);\n            final ModelNode result;\n            try {\n                // Execute the operation\n                result = controller.execute(\n                        operation,\n                        messageHandlerProxy,\n                        control,\n                        attachmentsProxy);\n            } catch (Exception e) {\n                final ModelNode failure = new ModelNode();\n                failure.get(OUTCOME).set(FAILED);\n                failure.get(FAILURE_DESCRIPTION).set(e.getClass().getName() + \":\" + e.getMessage());\n                control.operationFailed(failure);\n                attachmentsProxy.shutdown(e);\n                return;\n            }\n            if (result.hasDefined(FAILURE_DESCRIPTION)) {\n                control.operationFailed(result);\n            } else {\n                // controller.execute() will block in OperationControl.prepared until the {@code PoxyController}\n                // sent a CompleteTxRequest, which will either commit or rollback the operation\n                control.operationCompleted(result);\n            }\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void operationFailed(final ModelNode response) {\n            if (prepared) {\n                // the failure happened after we already sent a prepare message; i.e. on the\n                // return path following commit or rollback. This is really an \"operationCompleted\"\n                operationCompleted(response);\n            } else {\n                // Failure before we sent prepare message\n                executeRequest(new OperationStatusRequest(response) {\n\n                    @Override\n                    public byte getOperationType() {\n                        return ModelControllerProtocol.OPERATION_FAILED_REQUEST;\n                    }\n\n                    @Override\n                    public void handleRequest(DataInput input, ActiveOperation.ResultHandler<Void> resultHandler, ManagementRequestContext<ExecuteRequestContext> context) throws IOException {\n                        // Mark the active operation as complete. Even though the operation failed we don't want to throw an exception.\n                        executeRequestContext.getResultHandler().done(null);\n                    }\n\n                });\n            }\n        }","id":54861,"modified_method":"@Override\n        public void operationFailed(final ModelNode response) {\n            requestContext.failed(response);\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    protected ManagementRequestHeader validateRequest(ManagementProtocolHeader header) throws IOException {\n        final ManagementRequestHeader request =  super.validateRequest(header);\n        // Initialize the request context\n        if(request.getOperationId() == ModelControllerProtocol.EXECUTE_TX_REQUEST) {\n            final ExecuteRequestContext executeRequestContext = new ExecuteRequestContext();\n            final ActiveOperation<Void, ExecuteRequestContext> support = registerActiveOperation(request.getBatchId(), executeRequestContext);\n            executeRequestContext.setActiveOperation(support);\n\n        } else if (request.getOperationId() == ModelControllerProtocol.LEGACY_MASTER_HC_PING_REQUEST) {\n            registerActiveOperation(request.getBatchId(), new ExecuteRequestContext());\n        }\n        return request;\n    }","id":54862,"modified_method":"@Override\n    protected ManagementRequestHeader validateRequest(ManagementProtocolHeader header) throws IOException {\n        final ManagementRequestHeader request =  super.validateRequest(header);\n        // Initialize the request context\n        if(request.getOperationId() == ModelControllerProtocol.EXECUTE_TX_REQUEST) {\n            final ExecuteRequestContext executeRequestContext = new ExecuteRequestContext();\n            executeRequestContext.operation = registerActiveOperation(request.getBatchId(), executeRequestContext);\n        }\n        return request;\n    }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"public ProxyOperationControlProxy(final Channel channel, final int batchId, final ExecuteRequestContext executeRequestContext) {\n            this.batchId = batchId;\n            this.channel = channel;\n            this.executeRequestContext = executeRequestContext;\n        }","id":54863,"modified_method":"ProxyOperationControlProxy(ExecuteRequestContext requestContext) {\n            this.requestContext = requestContext;\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void handleRequest(final DataInput input, final ActiveOperation.ResultHandler<Void> resultHandler, final ManagementRequestContext<ExecuteRequestContext> context) throws IOException {\n            final byte commitOrRollback = input.readByte();\n            final ExecuteRequestContext executeRequestContext = context.getAttachment();\n            executeRequestContext.completeTx(commitOrRollback == ModelControllerProtocol.PARAM_COMMIT);\n            context.executeAsync(ProtocolUtils.<ExecuteRequestContext>emptyResponseTask());\n        }","id":54864,"modified_method":"@Override\n        public void handleRequest(final DataInput input, final ActiveOperation.ResultHandler<Void> resultHandler, final ManagementRequestContext<ExecuteRequestContext> context) throws IOException {\n            final ExecuteRequestContext executeRequestContext = context.getAttachment();\n            final byte commitOrRollback = input.readByte();\n\n            // Complete transaction, either commit or rollback\n            executeRequestContext.completeTx(context, commitOrRollback == ModelControllerProtocol.PARAM_COMMIT);\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"synchronized ActiveOperation.ResultHandler<Void> getResultHandler() {\n            return operation.getResultHandler();\n        }","id":54865,"modified_method":"ActiveOperation.ResultHandler<Void> getResultHandler() {\n            return operation.getResultHandler();\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void operationPrepared(final ModelController.OperationTransaction transaction, final ModelNode result) {\n            try {\n                prepared = true;\n                executeRequest(new OperationStatusRequest(result) {\n                    @Override\n                    public byte getOperationType() {\n                        return ModelControllerProtocol.OPERATION_PREPARED_REQUEST;\n                    }\n\n                    @Override\n                    protected void sendRequest(ActiveOperation.ResultHandler<Void> resultHandler, ManagementRequestContext<ExecuteRequestContext> context, FlushableDataOutput output) throws IOException {\n                        executeRequestContext.setActiveTX(transaction);\n                        super.sendRequest(resultHandler, context, output);\n                    }\n\n                    @Override\n                    public void handleRequest(DataInput input, ActiveOperation.ResultHandler<Void> resultHandler, ManagementRequestContext<ExecuteRequestContext> context) throws IOException {\n                        //\n                    }\n                });\n            } catch (Exception e) {\n                executeRequestContext.handleFailed(e);\n                throw new RuntimeException(e);\n            }\n\n            try {\n                // Block until we receive the {@code ModelControllerProtocol.COMPLETE_TX_REQUEST}\n                executeRequestContext.awaitTxCompleted();\n            } catch (InterruptedException e) {\n                executeRequestContext.handleFailed(e);\n                Thread.currentThread().interrupt();\n            }\n        }","id":54866,"modified_method":"@Override\n        public void operationPrepared(final ModelController.OperationTransaction transaction, final ModelNode result) {\n            requestContext.prepare(transaction, result);\n            try {\n                // Wait for the commit or rollback message\n                requestContext.txCompletedLatch.await();\n            } catch (InterruptedException e) {\n                requestContext.getResultHandler().failed(e);\n                Thread.currentThread().interrupt();\n            }\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void handleRequest(final DataInput input, final ActiveOperation.ResultHandler<Void> resultHandler, final ManagementRequestContext<ExecuteRequestContext> context) throws IOException {\n            final ModelNode operation = new ModelNode();\n            ProtocolUtils.expectHeader(input, ModelControllerProtocol.PARAM_OPERATION);\n            operation.readExternal(input);\n            ProtocolUtils.expectHeader(input, ModelControllerProtocol.PARAM_INPUTSTREAMS_LENGTH);\n            final int attachmentsLength = input.readInt();\n            // For backwards compatibility we have to send an empty response?\n            final ManagementResponseHeader response = ManagementResponseHeader.create(context.getRequestHeader());\n            final FlushableDataOutput os = context.writeMessage(response);\n            try {\n                os.write(ManagementProtocol.RESPONSE_END);\n                os.close();\n            } finally {\n                StreamUtils.safeClose(os);\n            }\n            // Execute the actual task\n            context.executeAsync(new ManagementRequestContext.AsyncTask<ExecuteRequestContext>() {\n                @Override\n                public void execute(ManagementRequestContext<ExecuteRequestContext> context) throws Exception {\n                    doExecute(operation, attachmentsLength, context);\n                }\n            });\n\n        }","id":54867,"modified_method":"@Override\n        public void handleRequest(final DataInput input, final ActiveOperation.ResultHandler<Void> resultHandler, final ManagementRequestContext<ExecuteRequestContext> context) throws IOException {\n            final ModelNode operation = new ModelNode();\n            ProtocolUtils.expectHeader(input, ModelControllerProtocol.PARAM_OPERATION);\n            operation.readExternal(input);\n            ProtocolUtils.expectHeader(input, ModelControllerProtocol.PARAM_INPUTSTREAMS_LENGTH);\n            final int attachmentsLength = input.readInt();\n            context.executeAsync(new ManagementRequestContext.AsyncTask<ExecuteRequestContext>() {\n\n                @Override\n                public void execute(ManagementRequestContext<ExecuteRequestContext> context) throws Exception {\n                    doExecute(operation, attachmentsLength, context);\n                }\n\n            });\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"synchronized void setActiveTX(ModelController.OperationTransaction activeTx) {\n            this.activeTx = activeTx;\n        }","id":54868,"modified_method":"synchronized void prepare(final ModelController.OperationTransaction tx, final ModelNode result) {\n            assert !prepared;\n            assert activeTx == null;\n            assert responseChannel != null;\n            try {\n                // 2) send the operation-prepared notification (just clear response info)\n                sendResponse(responseChannel, ModelControllerProtocol.PARAM_OPERATION_PREPARED, result);\n                activeTx = tx;\n                prepared = true;\n            } catch (IOException e) {\n                getResultHandler().failed(e);\n            } finally {\n                responseChannel = null;\n            }\n        }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    protected ManagementRequestHandler<Void, ExecuteRequestContext> getRequestHandler(byte operationType) {\n        switch(operationType) {\n            case ModelControllerProtocol.EXECUTE_TX_REQUEST:\n                return new ExecuteRequestHandler();\n            case ModelControllerProtocol.COMPLETE_TX_REQUEST:\n                return new CompleteTxOperationHandler();\n            case ModelControllerProtocol.LEGACY_MASTER_HC_PING_REQUEST:\n                return new LegacyMasterHcPingRequestHandler();\n        }\n        return super.getRequestHandler(operationType);\n    }","id":54869,"modified_method":"@Override\n    protected ManagementRequestHandler<Void, ExecuteRequestContext> getRequestHandler(byte operationType) {\n        switch(operationType) {\n            case ModelControllerProtocol.EXECUTE_TX_REQUEST:\n                return new ExecuteRequestHandler();\n            case ModelControllerProtocol.COMPLETE_TX_REQUEST:\n                return new CompleteTxOperationHandler();\n        }\n        return super.getRequestHandler(operationType);\n    }","commit_id":"280f4fa036e2e3fd10bdfe67b7f53edc315df773","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Returns a string representation of this event.\n     * @return a String containing the name of the event as well as the names\n     * of the old and new <tt>RegistrationState<\/tt>s\n     */\n    public String toString()\n    {\n        return \"RegistrationStateChangeEvent[ oldState=\"\n            + getOldState().getStateName()\n            + \"; newState=\"+ getNewState()\n            + \";reasonCode=\" + getReasonCode()\n            + \";reason=\" + getReason() + \"]\";\n    }","id":54870,"modified_method":"/**\n     * Returns a string representation of this event.\n     * @return a String containing the name of the event as well as the names\n     * of the old and new <tt>RegistrationState<\/tt>s\n     */\n    public String toString()\n    {\n        return \"RegistrationStateChangeEvent[ oldState=\"\n            + getOldState().getStateName()\n            + \"; newState=\"+ getNewState()\n            + \"; reasonCode=\" + getReasonCode()\n            + \"; reason=\" + getReason() + \"]\";\n    }","commit_id":"d7be117c09946bf02f260c6b0dfb09e1ca610382","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void run()\n        {\n            try {\n                presence.publishPresenceStatus(status, \"\");\n            }\n            catch (IllegalArgumentException e1)\n            {\n\n                logger.error(\"Error - changing status\", e1);\n            }\n            catch (IllegalStateException e1)\n            {\n\n                logger.error(\"Error - changing status\", e1);\n            }\n            catch (OperationFailedException e1)\n            {\n                \n                if (e1.getErrorCode()\n                    == OperationFailedException.GENERAL_ERROR)\n                {\n                    logger.error(\n                        \"General error occured while \"\n                        + \"publishing presence status.\",\n                        e1);\n                }\n                else if (e1.getErrorCode()\n                        == OperationFailedException\n                            .NETWORK_FAILURE) \n                {\n                    logger.error(\n                        \"Network failure occured while \"\n                        + \"publishing presence status.\",\n                        e1);\n                } \n                else if (e1.getErrorCode()\n                        == OperationFailedException\n                            .PROVIDER_NOT_REGISTERED) \n                {\n                    logger.error(\n                        \"Protocol provider must be\"\n                        + \"registered in order to change status.\",\n                        e1);\n                }\n            }\n        }","id":54871,"modified_method":"public void run()\n        {\n            try {\n                presence.publishPresenceStatus(status, \"\");\n            }\n            catch (IllegalArgumentException e1)\n            {\n                logger.error(\"Error - changing status\", e1);\n            }\n            catch (IllegalStateException e1)\n            {\n                logger.error(\"Error - changing status\", e1);\n            }\n            catch (OperationFailedException e1)\n            {\n                String msg;\n\n                switch (e1.getErrorCode())\n                {\n                case OperationFailedException.GENERAL_ERROR:\n                    msg\n                        = \"General error occured while \"\n                            + \"publishing presence status.\";\n                    break;\n                case OperationFailedException.NETWORK_FAILURE:\n                    msg\n                        = \"Network failure occured while \"\n                            + \"publishing presence status.\";\n                    break;\n                case OperationFailedException.PROVIDER_NOT_REGISTERED:\n                    msg\n                        = \"Protocol provider must be\"\n                            + \"registered in order to change status.\";\n                    break;\n                default:\n                    return;\n                }\n\n                logger.error(msg, e1);\n            }\n        }","commit_id":"d7be117c09946bf02f260c6b0dfb09e1ca610382","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Stops the timer that manages the connecting animated icon.\n     */\n    public void updateStatus(PresenceStatus presenceStatus)\n    {\n        logger.trace(\"Systray update status for provider: \"\n            + provider.getAccountID().getAccountAddress()\n            + \". The new status will be: \" + presenceStatus.getStatusName());\n\n        if (menu instanceof AbstractButton)\n            ((AbstractButton) menu).setIcon(new ImageIcon(presenceStatus\n                .getStatusIcon()));\n    }","id":54872,"modified_method":"public void updateStatus(PresenceStatus presenceStatus)\n    {\n        logger.trace(\"Systray update status for provider: \"\n            + provider.getAccountID().getAccountAddress()\n            + \". The new status will be: \" + presenceStatus.getStatusName());\n\n        if (menu instanceof AbstractButton)\n            ((AbstractButton) menu).setIcon(new ImageIcon(presenceStatus\n                .getStatusIcon()));\n    }","commit_id":"d7be117c09946bf02f260c6b0dfb09e1ca610382","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Change the status of the protocol according to\n     * the menu item selected\n     * @param evt the event containing the menu item name\n     */\n    public void actionPerformed(ActionEvent evt)\n    {\n        Object source = evt.getSource();\n        String itemName;\n        if (source instanceof Component)\n            itemName = ((Component) source).getName();\n        else\n            itemName = ((MenuComponent) source).getName();\n\n        if(itemName.equals(\"online\")) \n        {\n            if(!this.provider.isRegistered()) \n            {\n                new ProviderRegistration(provider).start();\n            }\n        }\n        else \n        {\n            if(    !this.provider.getRegistrationState()\n                            .equals(RegistrationState.UNREGISTERED)\n                && !this.provider.getRegistrationState()\n                            .equals(RegistrationState.UNREGISTERING))\n            {\n                new ProviderUnRegistration(this.provider).start();\n            }\n        }\n    }","id":54873,"modified_method":"/**\n     * Change the status of the protocol according to\n     * the menu item selected\n     * @param evt the event containing the menu item name\n     */\n    public void actionPerformed(ActionEvent evt)\n    {\n        Object source = evt.getSource();\n        String itemName;\n        if (source instanceof Component)\n            itemName = ((Component) source).getName();\n        else\n            itemName = ((MenuComponent) source).getName();\n\n        if(itemName.equals(\"online\")) \n        {\n            if(!this.provider.isRegistered()) \n            {\n                new ProviderRegistration(provider).start();\n            }\n        }\n        else \n        {\n            RegistrationState registrationState\n                = provider.getRegistrationState();\n\n            if(!RegistrationState.UNREGISTERED.equals(registrationState)\n                    && !RegistrationState.UNREGISTERING\n                            .equals(registrationState))\n            {\n                new ProviderUnRegistration(this.provider).start();\n            }\n        }\n    }","commit_id":"d7be117c09946bf02f260c6b0dfb09e1ca610382","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates an instance of <tt>StatusSimpleSelector<\/tt>\n     * \n     * @param protocolProvider the protocol provider\n     */\n    public StatusSimpleSelector(ProtocolProviderService protocolProvider,\n        boolean swing)\n    {\n        this.provider = protocolProvider;\n\n        /* the parent item */\n        String text = provider.getAccountID().getUserID();\n        if (swing)\n        {\n            JMenu menu = new JMenu(text);\n\n            ImageIcon icon =\n                new ImageIcon(protocolProvider.getProtocolIcon().getIcon(\n                    ProtocolIcon.ICON_SIZE_16x16));\n            if (!provider.isRegistered())\n            {\n                icon =\n                    new ImageIcon(LightGrayFilter.createDisabledImage(icon\n                        .getImage()));\n            }\n            menu.setIcon(icon);\n\n            this.menu = menu;\n        }\n        else\n        {\n            this.menu = new Menu(text);\n        }\n\n        /* the menu itself */\n        createMenuItem(\"impl.systray.ONLINE_STATUS\", \"online\");\n        createMenuItem(\"impl.systray.OFFLINE_STATUS\", \"offline\");\n    }","id":54874,"modified_method":"/**\n     * Creates an instance of <tt>StatusSimpleSelector<\/tt>\n     * \n     * @param protocolProvider the protocol provider\n     * @param swing\n     */\n    public StatusSimpleSelector(\n        ProtocolProviderService protocolProvider,\n        boolean swing)\n    {\n        this.provider = protocolProvider;\n\n        /* the parent item */\n        String text = provider.getAccountID().getUserID();\n        this.menu = swing ? new JMenu(text) : new Menu(text);\n        updateStatus();\n\n        /* the menu itself */\n        createMenuItem(\"impl.systray.ONLINE_STATUS\", \"online\");\n        createMenuItem(\"impl.systray.OFFLINE_STATUS\", \"offline\");\n    }","commit_id":"d7be117c09946bf02f260c6b0dfb09e1ca610382","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Stops the timer that manages the connecting animated icon.\n     */\n    public void updateStatus(PresenceStatus presenceStatus)\n    {\n        logger.trace(\"Systray update status for provider: \"\n            + provider.getAccountID().getAccountAddress()\n            + \". The new status will be: \" + presenceStatus.getStatusName());\n\n        if (menu instanceof AbstractButton)\n            ((AbstractButton) menu).setIcon(new ImageIcon(presenceStatus\n                .getStatusIcon()));\n    }","id":54875,"modified_method":"public void updateStatus()\n    {\n        if (menu instanceof AbstractButton)\n        {\n            byte[] iconBytes\n                = provider\n                    .getProtocolIcon().getIcon(ProtocolIcon.ICON_SIZE_16x16);\n\n            if ((iconBytes != null) && (iconBytes.length > 0))\n            {\n                ImageIcon icon = new ImageIcon(iconBytes);\n\n                if (!provider.isRegistered())\n                    icon\n                        = new ImageIcon(\n                                LightGrayFilter\n                                    .createDisabledImage(icon.getImage()));\n                ((AbstractButton) menu).setIcon(icon);\n            }\n        }\n    }","commit_id":"d7be117c09946bf02f260c6b0dfb09e1ca610382","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Adds the account corresponding to the given protocol provider to this\n     * menu.\n     * \n     * @param protocolProvider the protocol provider corresponding to the\n     *            account to add\n     */\n    private void addAccount(ProtocolProviderService protocolProvider)\n    {\n        OperationSetPresence presence =\n            (OperationSetPresence) protocolProvider\n                .getOperationSet(OperationSetPresence.class);\n        boolean swing = (menu instanceof JComponent);\n\n        if (presence == null)\n        {\n            StatusSimpleSelector simpleSelector =\n                new StatusSimpleSelector(protocolProvider, swing);\n\n            this.accountSelectors.put(protocolProvider.getAccountID(),\n                simpleSelector);\n            addMenuItem(menu, simpleSelector.getMenu());\n        }\n        else\n        {\n            StatusSelector statusSelector =\n                new StatusSelector(parentSystray, protocolProvider, presence,\n                    swing);\n\n            this.accountSelectors.put(protocolProvider.getAccountID(),\n                statusSelector);\n            addMenuItem(menu, statusSelector.getMenu());\n\n            presence\n                .addProviderPresenceStatusListener(new SystrayProviderPresenceStatusListener());\n        }\n    }","id":54876,"modified_method":"/**\n     * Adds the account corresponding to the given protocol provider to this\n     * menu.\n     * \n     * @param protocolProvider the protocol provider corresponding to the\n     *            account to add\n     */\n    private void addAccount(ProtocolProviderService protocolProvider)\n    {\n        OperationSetPresence presence\n            = (OperationSetPresence)\n                protocolProvider.getOperationSet(OperationSetPresence.class);\n        boolean swing = (menu instanceof JComponent);\n\n        if (presence == null)\n        {\n            StatusSimpleSelector simpleSelector =\n                new StatusSimpleSelector(protocolProvider, swing);\n\n            this.accountSelectors.put(protocolProvider.getAccountID(),\n                simpleSelector);\n            addMenuItem(menu, simpleSelector.getMenu());\n\n            protocolProvider.addRegistrationStateChangeListener(this);\n        }\n        else\n        {\n            StatusSelector statusSelector =\n                new StatusSelector(parentSystray, protocolProvider, presence,\n                    swing);\n\n            this.accountSelectors.put(protocolProvider.getAccountID(),\n                statusSelector);\n            addMenuItem(menu, statusSelector.getMenu());\n\n            presence.addProviderPresenceStatusListener(this);\n        }\n    }","commit_id":"d7be117c09946bf02f260c6b0dfb09e1ca610382","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n         * When a service is registered or unregistered, we update\n         * the provider tables and add/remove listeners (if it supports\n         * BasicInstantMessenging implementation)\n         *\n         * @param event ServiceEvent\n         */\n        public void serviceChanged(ServiceEvent event)\n        {\n            //if the event is caused by a bundle being stopped, we don't want to\n            //know\n            if(event.getServiceReference().getBundle().getState()\n                == Bundle.STOPPING)\n            {\n                return;\n            }\n\n            Object service = OsDependentActivator.bundleContext\n                .getService( event.getServiceReference());\n\n            if (! (service instanceof ProtocolProviderService))\n                return;\n\n            ProtocolProviderService provider = (ProtocolProviderService)service;\n\n            switch (event.getType())\n            {\n            case ServiceEvent.REGISTERED:\n                addAccount(provider);\n                break;\n\n            case ServiceEvent.UNREGISTERING:\n                removeAccount(provider);\n                break;\n            }\n        }","id":54877,"modified_method":"/**\n         * When a service is registered or unregistered, we update\n         * the provider tables and add/remove listeners (if it supports\n         * BasicInstantMessenging implementation)\n         *\n         * @param event ServiceEvent\n         */\n        public void serviceChanged(ServiceEvent event)\n        {\n            //if the event is caused by a bundle being stopped, we don't want to\n            //know\n            ServiceReference serviceRef = event.getServiceReference();\n\n            if(serviceRef.getBundle().getState() == Bundle.STOPPING)\n                return;\n\n            Object service\n                = OsDependentActivator.bundleContext.getService(serviceRef);\n\n            if (! (service instanceof ProtocolProviderService))\n                return;\n\n            ProtocolProviderService provider = (ProtocolProviderService)service;\n\n            switch (event.getType())\n            {\n            case ServiceEvent.REGISTERED:\n                addAccount(provider);\n                break;\n\n            case ServiceEvent.UNREGISTERING:\n                removeAccount(provider);\n                break;\n            }\n        }","commit_id":"d7be117c09946bf02f260c6b0dfb09e1ca610382","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * We fill the protocolProviderTable with all\n     * running protocol providers at the start of\n     * the bundle.\n     */\n    private void init()\n    {\n        OsDependentActivator.bundleContext\n            .addServiceListener(new ProtocolProviderServiceListener());\n\n        ServiceReference[] protocolProviderRefs = null;\n        try\n        {\n            protocolProviderRefs\n                = OsDependentActivator.bundleContext.getServiceReferences(\n                    ProtocolProviderService.class.getName(),null);\n        }\n        catch (InvalidSyntaxException ex)\n        {\n            // this shouldn't happen since we're providing no parameter string\n            // but let's log just in case.\n            logger .error(\"Error while retrieving service refs\", ex);\n            return;\n        }\n\n        // in case we found any\n        if (protocolProviderRefs != null)\n        {\n\n            for (int i = 0; i < protocolProviderRefs.length; i++)\n            {\n                ProtocolProviderService provider\n                    = (ProtocolProviderService) OsDependentActivator.bundleContext\n                        .getService(protocolProviderRefs[i]);\n\n                boolean isHidden =\n                    provider.getAccountID().getAccountProperty(\n                        ProtocolProviderFactory.IS_PROTOCOL_HIDDEN) != null;\n                \n                if(!isHidden)\n                    this.addAccount(provider);\n            }\n        }\n    }","id":54878,"modified_method":"/**\n     * We fill the protocolProviderTable with all\n     * running protocol providers at the start of\n     * the bundle.\n     */\n    private void init()\n    {\n        OsDependentActivator.bundleContext\n            .addServiceListener(new ProtocolProviderServiceListener());\n\n        ServiceReference[] protocolProviderRefs;\n        try\n        {\n            protocolProviderRefs\n                = OsDependentActivator.bundleContext.getServiceReferences(\n                    ProtocolProviderService.class.getName(),null);\n        }\n        catch (InvalidSyntaxException ex)\n        {\n            // this shouldn't happen since we're providing no parameter string\n            // but let's log just in case.\n            logger .error(\"Error while retrieving service refs\", ex);\n            return;\n        }\n\n        // in case we found any\n        if (protocolProviderRefs != null)\n        {\n\n            for (ServiceReference protocolProviderRef : protocolProviderRefs)\n            {\n                ProtocolProviderService provider\n                    = (ProtocolProviderService)\n                        OsDependentActivator\n                            .bundleContext.getService(protocolProviderRef);\n                boolean isHidden\n                    = provider\n                            .getAccountID()\n                                .getAccountProperty(\n                                    ProtocolProviderFactory.IS_PROTOCOL_HIDDEN)\n                        != null;\n                \n                if(!isHidden)\n                    this.addAccount(provider);\n            }\n        }\n    }","commit_id":"d7be117c09946bf02f260c6b0dfb09e1ca610382","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Removes the account corresponding to the given protocol provider from\n     * this menu.\n     * \n     * @param protocolProvider the protocol provider corresponding to the\n     *            account to remove.\n     */\n    private void removeAccount(ProtocolProviderService protocolProvider)\n    {\n        Object selector =\n            this.accountSelectors.get(protocolProvider.getAccountID());\n        Object selectorMenu;\n        if (selector instanceof StatusSimpleSelector)\n            selectorMenu = ((StatusSimpleSelector) selector).getMenu();\n        else\n            selectorMenu = ((StatusSelector) selector).getMenu();\n\n        if (menu instanceof Container)\n            ((Container) menu).remove((Component) selectorMenu);\n        else\n            ((MenuContainer) menu).remove((MenuComponent) selectorMenu);\n    }","id":54879,"modified_method":"/**\n     * Removes the account corresponding to the given protocol provider from\n     * this menu.\n     * \n     * @param protocolProvider the protocol provider corresponding to the\n     *            account to remove.\n     */\n    private void removeAccount(ProtocolProviderService protocolProvider)\n    {\n        Object selector =\n            this.accountSelectors.get(protocolProvider.getAccountID());\n        Object selectorMenu;\n        if (selector instanceof StatusSimpleSelector)\n            selectorMenu = ((StatusSimpleSelector) selector).getMenu();\n        else\n            selectorMenu = ((StatusSelector) selector).getMenu();\n\n        if (menu instanceof Container)\n            ((Container) menu).remove((Component) selectorMenu);\n        else\n            ((MenuContainer) menu).remove((MenuComponent) selectorMenu);\n\n        /*\n         * Remove the listeners installed in\n         * addAccount(ProtocolProviderService).\n         */\n        OperationSetPresence presence\n            = (OperationSetPresence)\n                protocolProvider.getOperationSet(OperationSetPresence.class);\n        if (presence != null)\n            presence.removeProviderPresenceStatusListener(this);\n        else\n            protocolProvider.removeRegistrationStateChangeListener(this);\n    }","commit_id":"d7be117c09946bf02f260c6b0dfb09e1ca610382","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Initializes the list of chat rooms.\n     */\n    public void loadList()\n    {\n        try\n        {\n            ServiceReference[] serRefs\n                = GuiActivator.bundleContext.getServiceReferences(\n                                        ProtocolProviderService.class.getName(),\n                                        null);\n\n            // If we don't have providers at this stage we just return.\n            if (serRefs == null)\n                return;\n\n            for (int i = 0; i < serRefs.length; i ++)\n            {\n                ServiceReference protocolProviderRef = serRefs[i];\n\n                ProtocolProviderService protocolProvider\n                    = (ProtocolProviderService) GuiActivator\n                        .bundleContext.getService(protocolProviderRef);\n\n                Object multiUserChatOpSet\n                    = protocolProvider\n                        .getOperationSet(OperationSetMultiUserChat.class);\n\n                if (multiUserChatOpSet != null)\n                {\n                    this.addChatProvider(protocolProvider);\n                }\n            }\n        }\n        catch (InvalidSyntaxException e)\n        {\n            logger.error(\"Failed to obtain service references.\", e);\n        }\n    }","id":54880,"modified_method":"/**\n     * Initializes the list of chat rooms.\n     */\n    public void loadList()\n    {\n        try\n        {\n            ServiceReference[] serRefs\n                = GuiActivator.bundleContext.getServiceReferences(\n                                        ProtocolProviderService.class.getName(),\n                                        null);\n\n            // If we don't have providers at this stage we just return.\n            if (serRefs == null)\n                return;\n\n            for (ServiceReference serRef : serRefs)\n            {\n                ProtocolProviderService protocolProvider\n                    = (ProtocolProviderService)\n                            GuiActivator.bundleContext.getService(serRef);\n\n                Object multiUserChatOpSet\n                    = protocolProvider\n                        .getOperationSet(OperationSetMultiUserChat.class);\n\n                if (multiUserChatOpSet != null)\n                {\n                    this.addChatProvider(protocolProvider);\n                }\n            }\n        }\n        catch (InvalidSyntaxException e)\n        {\n            logger.error(\"Failed to obtain service references.\", e);\n        }\n    }","commit_id":"f0d6c90e72b8bdd3473d17ab8de4289da3bb8cd3","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>ChatRoomWrapper<\/tt> that correspond to the given\n     * <tt>ChatRoom<\/tt>. If the list of chat rooms doesn't contain a\n     * corresponding wrapper - returns null.\n     *  \n     * @param chatRoom the <tt>ChatRoom<\/tt> that we're looking for\n     * @return the <tt>ChatRoomWrapper<\/tt> object corresponding to the given\n     * <tt>ChatRoom<\/tt>\n     */\n    public ChatRoomWrapper findChatRoomWrapperFromChatRoom(ChatRoom chatRoom)\n    {\n        for (ChatRoomProviderWrapper provider : providersList)\n        {\n            ChatRoomWrapper systemRoomWrapper = provider.getSystemRoomWrapper();\n\n            if (systemRoomWrapper.getChatRoom() != null\n                && systemRoomWrapper.getChatRoom().equals(chatRoom))\n            {\n                return systemRoomWrapper;\n            }\n            else\n            {\n                ChatRoomWrapper chatRoomWrapper\n                    = provider.findChatRoomWrapperForChatRoom(chatRoom);\n\n                if (chatRoomWrapper != null)\n                {\n                    // stored chatrooms has no chatroom, but their\n                    // id is the same as the chatroom we are searching wrapper for\n                    if(chatRoomWrapper.getChatRoom() == null)\n                    {\n                        chatRoomWrapper.setChatRoom(chatRoom);\n                    }\n\n                    return chatRoomWrapper;\n                }\n            }\n        }\n\n        return null;\n    }","id":54881,"modified_method":"/**\n     * Returns the <tt>ChatRoomWrapper<\/tt> that correspond to the given\n     * <tt>ChatRoom<\/tt>. If the list of chat rooms doesn't contain a\n     * corresponding wrapper - returns null.\n     *  \n     * @param chatRoom the <tt>ChatRoom<\/tt> that we're looking for\n     * @return the <tt>ChatRoomWrapper<\/tt> object corresponding to the given\n     * <tt>ChatRoom<\/tt>\n     */\n    public ChatRoomWrapper findChatRoomWrapperFromChatRoom(ChatRoom chatRoom)\n    {\n        for (ChatRoomProviderWrapper provider : providersList)\n        {\n            ChatRoomWrapper systemRoomWrapper = provider.getSystemRoomWrapper();\n            ChatRoom systemRoom = systemRoomWrapper.getChatRoom();\n\n            if ((systemRoom != null) && systemRoom.equals(chatRoom))\n            {\n                return systemRoomWrapper;\n            }\n            else\n            {\n                ChatRoomWrapper chatRoomWrapper\n                    = provider.findChatRoomWrapperForChatRoom(chatRoom);\n\n                if (chatRoomWrapper != null)\n                {\n                    // stored chatrooms has no chatroom, but their\n                    // id is the same as the chatroom we are searching wrapper\n                    // for\n                    if(chatRoomWrapper.getChatRoom() == null)\n                    {\n                        chatRoomWrapper.setChatRoom(chatRoom);\n                    }\n\n                    return chatRoomWrapper;\n                }\n            }\n        }\n\n        return null;\n    }","commit_id":"f0d6c90e72b8bdd3473d17ab8de4289da3bb8cd3","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Removes the corresponding server and all related chat rooms from this\n     * list.\n     * \n     * @param pps the <tt>ProtocolProviderService<\/tt> corresponding to the\n     * server to remove\n     */\n    public void removeChatProvider(ChatRoomProviderWrapper chatRoomProvider)\n    {\n        ConfigurationService configService\n            = GuiActivator.getConfigurationService();\n\n        String prefix = \"net.java.sip.communicator.impl.gui.accounts\";\n\n        Iterator<String> accountsIter = configService\n            .getPropertyNamesByPrefix(prefix, true).iterator();\n\n        while(accountsIter.hasNext())\n        {\n            String accountRootPropName = accountsIter.next();\n\n            String accountUID\n                = configService.getString(accountRootPropName);\n\n            if(accountUID.equals(chatRoomProvider.getProtocolProvider()\n                    .getAccountID().getAccountUniqueID()))\n            {\n                List<String> chatRooms = configService\n                    .getPropertyNamesByPrefix(\n                        accountRootPropName + \".chatRooms\", true);\n\n                Iterator<String> chatRoomsIter = chatRooms.iterator();\n\n                while(chatRoomsIter.hasNext())\n                {\n                    String chatRoomPropName = chatRoomsIter.next();\n\n                    configService.setProperty(\n                        chatRoomPropName + \".chatRoomName\",\n                        null);\n                }\n\n                configService.setProperty(accountRootPropName, null);\n            }\n        }\n    }","id":54882,"modified_method":"/**\n     * Removes the corresponding server and all related chat rooms from this\n     * list.\n     * \n     * @param chatRoomProvider the <tt>ChatRoomProviderWrapper<\/tt>\n     *            corresponding to the server to remove\n     */\n    private void removeChatProvider(ChatRoomProviderWrapper chatRoomProvider)\n    {\n        providersList.remove(chatRoomProvider);\n\n        ConfigurationService configService\n            = GuiActivator.getConfigurationService();\n        String prefix = \"net.java.sip.communicator.impl.gui.accounts\";\n        String providerAccountUID\n            = chatRoomProvider\n                    .getProtocolProvider().getAccountID().getAccountUniqueID();\n\n        for (String accountRootPropName\n                : configService.getPropertyNamesByPrefix(prefix, true))\n        {\n            String accountUID\n                = configService.getString(accountRootPropName);\n\n            if(accountUID.equals(providerAccountUID))\n            {\n                List<String> chatRooms\n                    = configService.getPropertyNamesByPrefix(\n                            accountRootPropName + \".chatRooms\",\n                            true);\n\n                for (String chatRoomPropName : chatRooms)\n                {\n                    configService.setProperty(\n                        chatRoomPropName + \".chatRoomName\",\n                        null);\n                }\n\n                configService.setProperty(accountRootPropName, null);\n            }\n        }\n    }","commit_id":"f0d6c90e72b8bdd3473d17ab8de4289da3bb8cd3","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates an instance of <tt>ChatRoomProviderWrapper<\/tt> by specifying\n     * the protocol provider, corresponding to the multi user chat account.\n     * \n     * @param protocolProvider protocol provider, corresponding to the multi\n     * user chat account.\n     */\n    public ChatRoomProviderWrapper(\n        ProtocolProviderService protocolProvider)\n    {\n        this.protocolProvider = protocolProvider;\n        this.systemRoomWrapper\n            = new ChatRoomWrapper(\n                this,\n                protocolProvider.getAccountID().getService(),\n                protocolProvider.getAccountID().getService());\n    }","id":54883,"modified_method":"/**\n     * Creates an instance of <tt>ChatRoomProviderWrapper<\/tt> by specifying\n     * the protocol provider, corresponding to the multi user chat account.\n     * \n     * @param protocolProvider protocol provider, corresponding to the multi\n     * user chat account.\n     */\n    public ChatRoomProviderWrapper(\n        ProtocolProviderService protocolProvider)\n    {\n        this.protocolProvider = protocolProvider;\n\n        String accountIdService = protocolProvider.getAccountID().getService();\n        this.systemRoomWrapper\n            = new ChatRoomWrapper(this, accountIdService, accountIdService);\n    }","commit_id":"f0d6c90e72b8bdd3473d17ab8de4289da3bb8cd3","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Handles <tt>ServiceEvent<\/tt>s triggered by adding or removing a\n     * ProtocolProviderService. Updates the list of available chat rooms and\n     * chat room servers.\n     *\n     * @param event The event to handle.\n     */\n    public void serviceChanged(ServiceEvent event)\n    {\n        // if the event is caused by a bundle being stopped, we don't want to\n        // know\n        if (event.getServiceReference().getBundle().getState()\n                == Bundle.STOPPING)\n        {\n            return;\n        }\n\n        Object service = GuiActivator.bundleContext.getService(event\n            .getServiceReference());\n\n        // we don't care if the source service is not a protocol provider\n        if (!(service instanceof ProtocolProviderService))\n        {\n            return;\n        }\n\n        ProtocolProviderService protocolProvider\n            = (ProtocolProviderService) service;\n\n        Object multiUserChatOpSet\n            = protocolProvider\n                .getOperationSet(OperationSetMultiUserChat.class);\n\n        // We don't care if there's no group chat operation set.\n        if (multiUserChatOpSet == null)\n        {\n            return;\n        }\n\n        if (event.getType() == ServiceEvent.REGISTERED)\n        {\n            chatRoomList.addChatProvider(protocolProvider);\n        }\n        else if (event.getType() == ServiceEvent.UNREGISTERING)\n        {\n            ChatRoomProviderWrapper chatRoomProvider\n                = chatRoomList.findServerWrapperFromProvider(protocolProvider);\n\n            if (chatRoomProvider != null)\n            {\n                chatRoomList.removeChatProvider(chatRoomProvider);\n            }\n        }\n    }","id":54884,"modified_method":"/**\n     * Handles <tt>ServiceEvent<\/tt>s triggered by adding or removing a\n     * ProtocolProviderService. Updates the list of available chat rooms and\n     * chat room servers.\n     *\n     * @param event The event to handle.\n     */\n    public void serviceChanged(ServiceEvent event)\n    {\n        // if the event is caused by a bundle being stopped, we don't want to\n        // know\n        if (event.getServiceReference().getBundle().getState()\n                == Bundle.STOPPING)\n        {\n            return;\n        }\n\n        Object service = GuiActivator.bundleContext.getService(event\n            .getServiceReference());\n\n        // we don't care if the source service is not a protocol provider\n        if (!(service instanceof ProtocolProviderService))\n        {\n            return;\n        }\n\n        ProtocolProviderService protocolProvider\n            = (ProtocolProviderService) service;\n\n        Object multiUserChatOpSet\n            = protocolProvider\n                .getOperationSet(OperationSetMultiUserChat.class);\n\n        // We don't care if there's no group chat operation set.\n        if (multiUserChatOpSet == null)\n        {\n            return;\n        }\n\n        if (event.getType() == ServiceEvent.REGISTERED)\n        {\n            chatRoomList.addChatProvider(protocolProvider);\n        }\n        else if (event.getType() == ServiceEvent.UNREGISTERING)\n        {\n            chatRoomList.removeChatProvider(protocolProvider);\n        }\n    }","commit_id":"f0d6c90e72b8bdd3473d17ab8de4289da3bb8cd3","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * The method is called by a ProtocolProvider implementation whenever a\n     * change in the registration state of the corresponding provider had\n     * occurred.\n     *\n     * @param evt ProviderStatusChangeEvent the event describing the status\n     *            change.\n     */\n    public void registrationStateChanged(RegistrationStateChangeEvent evt)\n    {\n        ProtocolProviderService protocolProvider = evt.getProvider();\n\n        AccountID accountID = protocolProvider.getAccountID();\n\n        logger.trace(\"Protocol provider: \" + protocolProvider\n            + \" changed its state to: \" + evt.getNewState().getStateName());\n\n        OperationSetPresence presence = mainFrame\n            .getProtocolPresenceOpSet(protocolProvider);\n\n        OperationSetMultiUserChat multiUserChat = mainFrame\n            .getMultiUserChatOpSet(protocolProvider);\n\n        if (evt.getNewState().equals(RegistrationState.REGISTERED))\n        {\n            if (presence != null)\n            {\n                presence.setAuthorizationHandler(new AuthorizationHandlerImpl(\n                    mainFrame));\n            }\n\n            if(multiUserChat != null)\n            {\n                GuiActivator.getUIService().getConferenceChatManager()\n                    .getChatRoomList().synchronizeOpSetWithLocalContactList(\n                        protocolProvider, multiUserChat);\n            }\n        }\n        else if (evt.getNewState().equals(\n            RegistrationState.AUTHENTICATION_FAILED))\n        {\n            if (evt.getReasonCode() == RegistrationStateChangeEvent\n                    .REASON_RECONNECTION_RATE_LIMIT_EXCEEDED)\n            {\n\n                String msgText = GuiActivator.getResources().getI18NString(\n                    \"service.gui.RECONNECTION_LIMIT_EXCEEDED\", new String[]\n                    { accountID.getUserID(), accountID.getService() });\n\n                new ErrorDialog(\n                    null,\n                    GuiActivator.getResources()\n                        .getI18NString(\"service.gui.ERROR\"),\n                    msgText).showDialog();\n            }\n            else if (evt.getReasonCode() == RegistrationStateChangeEvent\n                                                .REASON_NON_EXISTING_USER_ID)\n            {\n                String msgText = GuiActivator.getResources().getI18NString(\n                    \"service.gui.NON_EXISTING_USER_ID\",\n                    new String[]\n                    { protocolProvider.getProtocolDisplayName() });\n\n                new ErrorDialog(\n                    null,\n                    GuiActivator.getResources().getI18NString(\"service.gui.ERROR\"),\n                    msgText).showDialog();\n            }\n\n            logger.trace(evt.getReason());\n        }\n        else if (evt.getNewState().equals(RegistrationState.CONNECTION_FAILED))\n        {\n            String msgText = GuiActivator.getResources().getI18NString(\n                \"service.gui.CONNECTION_FAILED_MSG\",\n                new String[]\n                {   accountID.getUserID(),\n                    accountID.getService() });\n\n            int result = new MessageDialog(\n                null,\n                GuiActivator.getResources().getI18NString(\"service.gui.ERROR\"),\n                msgText,\n                GuiActivator.getResources().getI18NString(\"service.gui.RETRY\"),\n                false).showDialog();\n\n            if (result == MessageDialog.OK_RETURN_CODE)\n            {\n                this.login(protocolProvider);\n            }\n\n            logger.trace(evt.getReason());\n        }\n        else if (evt.getNewState().equals(RegistrationState.EXPIRED))\n        {\n            String msgText = GuiActivator.getResources().getI18NString(\n                \"service.gui.CONNECTION_EXPIRED_MSG\",\n                new String[]\n                { protocolProvider.getProtocolDisplayName() });\n\n            new ErrorDialog(null,\n                GuiActivator.getResources().getI18NString(\"service.gui.ERROR\"),\n                msgText).showDialog();\n\n            logger.error(evt.getReason());\n        }\n        else if (evt.getNewState().equals(RegistrationState.UNREGISTERED))\n        {\n            if (!manuallyDisconnected)\n            {\n                if (evt.getReasonCode() == RegistrationStateChangeEvent\n                                            .REASON_MULTIPLE_LOGINS)\n                {\n                    String msgText = GuiActivator.getResources().getI18NString(\n                        \"service.gui.MULTIPLE_LOGINS\",\n                        new String[]\n                        { accountID.getUserID(), accountID.getService() });\n\n                    new ErrorDialog(null,\n                        GuiActivator.getResources()\n                            .getI18NString(\"service.gui.ERROR\"),\n                        msgText).showDialog();\n                }\n                else if (evt.getReasonCode() == RegistrationStateChangeEvent\n                                            .REASON_CLIENT_LIMIT_REACHED_FOR_IP)\n                {\n                    String msgText = GuiActivator.getResources().getI18NString(\n                        \"service.gui.LIMIT_REACHED_FOR_IP\", new String[]\n                        { protocolProvider.getProtocolDisplayName() });\n\n                    new ErrorDialog(null,\n                        GuiActivator.getResources()\n                            .getI18NString(\"service.gui.ERROR\"),\n                        msgText).showDialog();\n                }\n                else if (evt.getReasonCode() == RegistrationStateChangeEvent\n                                            .REASON_USER_REQUEST)\n                {\n                    // do nothing\n                }\n                else\n                {\n                    String msgText = GuiActivator.getResources().getI18NString(\n                        \"service.gui.UNREGISTERED_MESSAGE\", new String[]\n                        { accountID.getUserID(), accountID.getService() });\n\n                    new ErrorDialog(null,\n                        GuiActivator.getResources()\n                            .getI18NString(\"service.gui.ERROR\"),\n                        msgText).showDialog();\n                }\n                logger.trace(evt.getReason());\n            }\n        }\n    }","id":54885,"modified_method":"/**\n     * The method is called by a ProtocolProvider implementation whenever a\n     * change in the registration state of the corresponding provider had\n     * occurred.\n     *\n     * @param evt ProviderStatusChangeEvent the event describing the status\n     *            change.\n     */\n    public void registrationStateChanged(RegistrationStateChangeEvent evt)\n    {\n        RegistrationState newState = evt.getNewState();\n        ProtocolProviderService protocolProvider = evt.getProvider();\n        AccountID accountID = protocolProvider.getAccountID();\n\n        logger.trace(\"Protocol provider: \" + protocolProvider\n            + \" changed its state to: \" + evt.getNewState().getStateName());\n\n        if (newState.equals(RegistrationState.REGISTERED))\n        {\n            OperationSetPresence presence = mainFrame\n                .getProtocolPresenceOpSet(protocolProvider);\n            OperationSetMultiUserChat multiUserChat = mainFrame\n                .getMultiUserChatOpSet(protocolProvider);\n\n            if (presence != null)\n            {\n                presence.setAuthorizationHandler(new AuthorizationHandlerImpl(\n                    mainFrame));\n            }\n\n            if(multiUserChat != null)\n            {\n                GuiActivator.getUIService().getConferenceChatManager()\n                    .getChatRoomList().synchronizeOpSetWithLocalContactList(\n                        protocolProvider, multiUserChat);\n            }\n        }\n        else if (newState.equals(RegistrationState.AUTHENTICATION_FAILED))\n        {\n            if (evt.getReasonCode() == RegistrationStateChangeEvent\n                    .REASON_RECONNECTION_RATE_LIMIT_EXCEEDED)\n            {\n\n                String msgText = GuiActivator.getResources().getI18NString(\n                    \"service.gui.RECONNECTION_LIMIT_EXCEEDED\", new String[]\n                    { accountID.getUserID(), accountID.getService() });\n\n                new ErrorDialog(\n                    null,\n                    GuiActivator.getResources()\n                        .getI18NString(\"service.gui.ERROR\"),\n                    msgText).showDialog();\n            }\n            else if (evt.getReasonCode() == RegistrationStateChangeEvent\n                                                .REASON_NON_EXISTING_USER_ID)\n            {\n                String msgText = GuiActivator.getResources().getI18NString(\n                    \"service.gui.NON_EXISTING_USER_ID\",\n                    new String[]\n                    { protocolProvider.getProtocolDisplayName() });\n\n                new ErrorDialog(\n                    null,\n                    GuiActivator.getResources().getI18NString(\"service.gui.ERROR\"),\n                    msgText).showDialog();\n            }\n\n            logger.trace(evt.getReason());\n        }\n        else if (newState.equals(RegistrationState.CONNECTION_FAILED))\n        {\n            String msgText = GuiActivator.getResources().getI18NString(\n                \"service.gui.CONNECTION_FAILED_MSG\",\n                new String[]\n                {   accountID.getUserID(),\n                    accountID.getService() });\n\n            int result = new MessageDialog(\n                null,\n                GuiActivator.getResources().getI18NString(\"service.gui.ERROR\"),\n                msgText,\n                GuiActivator.getResources().getI18NString(\"service.gui.RETRY\"),\n                false).showDialog();\n\n            if (result == MessageDialog.OK_RETURN_CODE)\n            {\n                this.login(protocolProvider);\n            }\n\n            logger.trace(evt.getReason());\n        }\n        else if (newState.equals(RegistrationState.EXPIRED))\n        {\n            String msgText = GuiActivator.getResources().getI18NString(\n                \"service.gui.CONNECTION_EXPIRED_MSG\",\n                new String[]\n                { protocolProvider.getProtocolDisplayName() });\n\n            new ErrorDialog(null,\n                GuiActivator.getResources().getI18NString(\"service.gui.ERROR\"),\n                msgText).showDialog();\n\n            logger.error(evt.getReason());\n        }\n        else if (newState.equals(RegistrationState.UNREGISTERED))\n        {\n            if (!manuallyDisconnected)\n            {\n                if (evt.getReasonCode() == RegistrationStateChangeEvent\n                                            .REASON_MULTIPLE_LOGINS)\n                {\n                    String msgText = GuiActivator.getResources().getI18NString(\n                        \"service.gui.MULTIPLE_LOGINS\",\n                        new String[]\n                        { accountID.getUserID(), accountID.getService() });\n\n                    new ErrorDialog(null,\n                        GuiActivator.getResources()\n                            .getI18NString(\"service.gui.ERROR\"),\n                        msgText).showDialog();\n                }\n                else if (evt.getReasonCode() == RegistrationStateChangeEvent\n                                            .REASON_CLIENT_LIMIT_REACHED_FOR_IP)\n                {\n                    String msgText = GuiActivator.getResources().getI18NString(\n                        \"service.gui.LIMIT_REACHED_FOR_IP\", new String[]\n                        { protocolProvider.getProtocolDisplayName() });\n\n                    new ErrorDialog(null,\n                        GuiActivator.getResources()\n                            .getI18NString(\"service.gui.ERROR\"),\n                        msgText).showDialog();\n                }\n                else if (evt.getReasonCode() == RegistrationStateChangeEvent\n                                            .REASON_USER_REQUEST)\n                {\n                    // do nothing\n                }\n                else\n                {\n                    String msgText = GuiActivator.getResources().getI18NString(\n                        \"service.gui.UNREGISTERED_MESSAGE\", new String[]\n                        { accountID.getUserID(), accountID.getService() });\n\n                    new ErrorDialog(null,\n                        GuiActivator.getResources()\n                            .getI18NString(\"service.gui.ERROR\"),\n                        msgText).showDialog();\n                }\n                logger.trace(evt.getReason());\n            }\n        }\n    }","commit_id":"f0d6c90e72b8bdd3473d17ab8de4289da3bb8cd3","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Implements the <tt>ServiceListener<\/tt> method. Verifies whether the\n     * passed event concerns a <tt>ProtocolProviderService<\/tt> and adds the\n     * corresponding UI controls.\n     *\n     * @param event The <tt>ServiceEvent<\/tt> object.\n     */\n    public void serviceChanged(ServiceEvent event)\n    {\n        // if the event is caused by a bundle being stopped, we don't want to\n        // know\n        if (event.getServiceReference().getBundle().getState()\n                == Bundle.STOPPING)\n        {\n            return;\n        }\n\n        Object service = GuiActivator.bundleContext.getService(event\n            .getServiceReference());\n\n        // we don't care if the source service is not a protocol provider\n        if (!(service instanceof ProtocolProviderService))\n        {\n            return;\n        }\n\n        if (event.getType() == ServiceEvent.REGISTERED)\n        {\n            this.handleProviderAdded((ProtocolProviderService) service);\n        }\n        else if (event.getType() == ServiceEvent.UNREGISTERING)\n        {\n            this.handleProviderRemoved((ProtocolProviderService) service);\n        }\n    }","id":54886,"modified_method":"/**\n     * Implements the <tt>ServiceListener<\/tt> method. Verifies whether the\n     * passed event concerns a <tt>ProtocolProviderService<\/tt> and adds the\n     * corresponding UI controls.\n     *\n     * @param event The <tt>ServiceEvent<\/tt> object.\n     */\n    public void serviceChanged(ServiceEvent event)\n    {\n        ServiceReference serviceRef = event.getServiceReference();\n\n        // if the event is caused by a bundle being stopped, we don't want to\n        // know\n        if (serviceRef.getBundle().getState() == Bundle.STOPPING)\n        {\n            return;\n        }\n\n        Object service = GuiActivator.bundleContext.getService(serviceRef);\n\n        // we don't care if the source service is not a protocol provider\n        if (!(service instanceof ProtocolProviderService))\n        {\n            return;\n        }\n\n        switch (event.getType())\n        {\n        case ServiceEvent.REGISTERED:\n            this.handleProviderAdded((ProtocolProviderService) service);\n            break;\n        case ServiceEvent.UNREGISTERING:\n            this.handleProviderRemoved((ProtocolProviderService) service);\n            break;\n        }\n    }","commit_id":"f0d6c90e72b8bdd3473d17ab8de4289da3bb8cd3","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * @see javax.servlet.GenericServlet#destroy()\n     */\n    public void destroy()\n    {\n        this.bundleContext.removeServiceListener(this);\n        this.unbindEventAdmin(this.eventAdminServiceId);\n        this.unbindConfigAdmin(this.configAdminServiceId);\n    }","id":54887,"modified_method":"/**\n     * @see javax.servlet.GenericServlet#destroy()\n     */\n    public void destroy()\n    {\n        this.bundleContext.removeServiceListener(this);\n        this.unbindEventAdmin(this.eventAdminServiceRef);\n        this.unbindConfigAdmin(this.configAdminServiceId);\n    }","commit_id":"6670225ff3a2a67193e81199512f3147d701cdc3","url":"https://github.com/apache/felix"},{"original_method":"private synchronized void unbindConfigAdmin(final Long id)\n    {\n        if ( this.configAdminServiceId != null && this.configAdminServiceId.equals(id) )\n        {\n            this.configAdminServiceId = null;\n            this.plugin.setConfigAdminAvailable(false);\n            if ( this.configListenerRegistration != null )\n            {\n                this.configListenerRegistration.unregister();\n                this.configListenerRegistration = null;\n            }\n        }\n    }","id":54888,"modified_method":"synchronized void unbindConfigAdmin(final Long id)\n    {\n        if ( this.configAdminServiceId != null && this.configAdminServiceId.equals(id) )\n        {\n            this.configAdminServiceId = null;\n            this.plugin.setConfigAdminAvailable(false);\n            if ( this.configListenerRegistration != null )\n            {\n                this.configListenerRegistration.unregister();\n                this.configListenerRegistration = null;\n            }\n        }\n    }","commit_id":"6670225ff3a2a67193e81199512f3147d701cdc3","url":"https://github.com/apache/felix"},{"original_method":"private synchronized void bindConfigAdmin(final Long id)\n    {\n        if ( this.configAdminServiceId != null )\n        {\n            this.unbindConfigAdmin(this.configAdminServiceId);\n        }\n        this.plugin.setConfigAdminAvailable(true);\n        this.configAdminServiceId = id;\n        this.configListenerRegistration = ConfigurationListener.create(this.bundleContext, this.plugin);\n    }","id":54889,"modified_method":"synchronized void bindConfigAdmin(final Long id)\n    {\n        if ( this.configAdminServiceId != null )\n        {\n            this.unbindConfigAdmin(this.configAdminServiceId);\n        }\n        this.plugin.setConfigAdminAvailable(true);\n        this.configAdminServiceId = id;\n        this.configListenerRegistration = ConfigurationListener.create(this.bundleContext, this.plugin);\n    }","commit_id":"6670225ff3a2a67193e81199512f3147d701cdc3","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * @see org.osgi.framework.ServiceListener#serviceChanged(org.osgi.framework.ServiceEvent)\n     */\n    public void serviceChanged(final ServiceEvent event)\n    {\n        final String[] objectClasses =  (String[])event.getServiceReference().getProperty(Constants.OBJECTCLASS);\n        if ( objectClasses != null)\n        {\n            for(int i=0; i<objectClasses.length; i++)\n            {\n                if ( objectClasses[i].equals(EVENT_ADMIN_CLASS_NAME) )\n                {\n                    final Long id = (Long)event.getServiceReference().getProperty(Constants.SERVICE_ID);\n                    if ( event.getType() == ServiceEvent.REGISTERED )\n                    {\n                        new Thread()\n                        {\n                            public void run()\n                            {\n                                try {\n                                    Thread.sleep(500);\n                                } catch (InterruptedException ignore) {}\n                                bindEventAdmin(id);\n                            }\n                        }.start();\n                    }\n                    else if ( event.getType() == ServiceEvent.UNREGISTERING )\n                    {\n                        new Thread()\n                        {\n                            public void run()\n                            {\n                                try {\n                                    Thread.sleep(500);\n                                } catch (InterruptedException ignore) {}\n                                unbindEventAdmin(id);\n                            }\n                        }.start();\n                    }\n                }\n                else if ( objectClasses[i].equals(CONFIGURATION_ADMIN_CLASS_NAME) )\n                {\n                    final Long id = (Long)event.getServiceReference().getProperty(Constants.SERVICE_ID);\n                    if ( event.getType() == ServiceEvent.REGISTERED )\n                    {\n                        new Thread()\n                        {\n                            public void run()\n                            {\n                                try {\n                                    Thread.sleep(500);\n                                } catch (InterruptedException ignore) {}\n                                bindConfigAdmin(id);\n                            }\n                        }.start();\n                    }\n                    else if ( event.getType() == ServiceEvent.UNREGISTERING )\n                    {\n                        new Thread()\n                        {\n                            public void run()\n                            {\n                                try {\n                                    Thread.sleep(500);\n                                } catch (InterruptedException ignore) {}\n                                unbindConfigAdmin(id);\n                            }\n                        }.start();\n                    }\n                }\n            }\n        }\n    }","id":54890,"modified_method":"/**\n     * @see org.osgi.framework.ServiceListener#serviceChanged(org.osgi.framework.ServiceEvent)\n     */\n    public void serviceChanged(final ServiceEvent event)\n    {\n        final ServiceReference ref = event.getServiceReference();\n        final String[] objectClasses =  (String[])ref.getProperty(Constants.OBJECTCLASS);\n        if ( objectClasses != null)\n        {\n            for(int i=0; i<objectClasses.length; i++)\n            {\n                if ( objectClasses[i].equals(EVENT_ADMIN_CLASS_NAME) )\n                {\n                    if ( event.getType() == ServiceEvent.REGISTERED )\n                    {\n                        new Thread()\n                        {\n                            public void run()\n                            {\n                                try {\n                                    Thread.sleep(500);\n                                } catch (InterruptedException ignore) {}\n                                bindEventAdmin(ref);\n                            }\n                        }.start();\n                    }\n                    else if ( event.getType() == ServiceEvent.UNREGISTERING )\n                    {\n                        new Thread()\n                        {\n                            public void run()\n                            {\n                                try {\n                                    Thread.sleep(500);\n                                } catch (InterruptedException ignore) {}\n                                unbindEventAdmin(ref);\n                            }\n                        }.start();\n                    }\n                }\n                else if ( objectClasses[i].equals(CONFIGURATION_ADMIN_CLASS_NAME) )\n                {\n                    final Long id = (Long)event.getServiceReference().getProperty(Constants.SERVICE_ID);\n                    if ( event.getType() == ServiceEvent.REGISTERED )\n                    {\n                        new Thread()\n                        {\n                            public void run()\n                            {\n                                try {\n                                    Thread.sleep(500);\n                                } catch (InterruptedException ignore) {}\n                                bindConfigAdmin(id);\n                            }\n                        }.start();\n                    }\n                    else if ( event.getType() == ServiceEvent.UNREGISTERING )\n                    {\n                        new Thread()\n                        {\n                            public void run()\n                            {\n                                try {\n                                    Thread.sleep(500);\n                                } catch (InterruptedException ignore) {}\n                                unbindConfigAdmin(id);\n                            }\n                        }.start();\n                    }\n                }\n            }\n        }\n    }","commit_id":"6670225ff3a2a67193e81199512f3147d701cdc3","url":"https://github.com/apache/felix"},{"original_method":"public OptionalFeaturesHandler(final PluginServlet plugin, final BundleContext context)\n    {\n        this.plugin = plugin;\n        this.bundleContext = context;\n        // check if event admin is already available\n        this.eventAdminServiceId = null;\n        final ServiceReference ref = this.bundleContext.getServiceReference(EVENT_ADMIN_CLASS_NAME);\n        if ( ref != null )\n        {\n            final Long id = (Long)ref.getProperty(Constants.SERVICE_ID);\n            bindEventAdmin(id);\n        }\n\n        // check if config admin is already available\n        this.configAdminServiceId = null;\n        final ServiceReference cfaRef = this.bundleContext.getServiceReference(CONFIGURATION_ADMIN_CLASS_NAME);\n        if ( cfaRef != null )\n        {\n            final Long id = (Long)cfaRef.getProperty(Constants.SERVICE_ID);\n            bindConfigAdmin(id);\n        }\n\n        // listen for event and config admin from now on\n        try {\n            context.addServiceListener(this, FILTER);\n        } catch (InvalidSyntaxException ise) {\n            // this should never happen as this is a constant, so we ignore it\n        }\n    }","id":54891,"modified_method":"public OptionalFeaturesHandler(final PluginServlet plugin, final BundleContext context)\n    {\n        this.plugin = plugin;\n        this.bundleContext = context;\n        // check if event admin is already available\n        final ServiceReference ref = this.bundleContext.getServiceReference(EVENT_ADMIN_CLASS_NAME);\n        if ( ref != null )\n        {\n            bindEventAdmin(ref);\n        }\n\n        // check if config admin is already available\n        this.configAdminServiceId = null;\n        final ServiceReference cfaRef = this.bundleContext.getServiceReference(CONFIGURATION_ADMIN_CLASS_NAME);\n        if ( cfaRef != null )\n        {\n            final Long id = (Long)cfaRef.getProperty(Constants.SERVICE_ID);\n            bindConfigAdmin(id);\n        }\n\n        // listen for event and config admin from now on\n        try {\n            context.addServiceListener(this, FILTER);\n        } catch (InvalidSyntaxException ise) {\n            // this should never happen as this is a constant, so we ignore it\n        }\n    }","commit_id":"6670225ff3a2a67193e81199512f3147d701cdc3","url":"https://github.com/apache/felix"},{"original_method":"private synchronized void unbindEventAdmin(final Long id)\n    {\n        if ( this.eventAdminServiceId != null && this.eventAdminServiceId.equals(id) )\n        {\n            this.eventAdminServiceId = null;\n            this.plugin.setEventAdminAvailable(false);\n            if ( this.eventHandlerRegistration != null )\n            {\n                this.eventHandlerRegistration.unregister();\n                this.eventHandlerRegistration = null;\n            }\n        }\n    }","id":54892,"modified_method":"synchronized void unbindEventAdmin(ServiceReference ref)\n    {\n        if ( this.eventAdminServiceRef != null && this.eventAdminServiceRef.equals(ref) )\n        {\n            bundleContext.ungetService(ref);\n            this.eventAdminServiceRef = null;\n            this.plugin.setEventAdmin(null);\n            if ( this.eventHandlerRegistration != null )\n            {\n                this.eventHandlerRegistration.unregister();\n                this.eventHandlerRegistration = null;\n            }\n        }\n    }","commit_id":"6670225ff3a2a67193e81199512f3147d701cdc3","url":"https://github.com/apache/felix"},{"original_method":"private void renderJSON( final PrintWriter pw ) throws IOException\n    {\n        List events = this.collector.getEvents();\n\n        StringBuffer statusLine = new StringBuffer();\n        statusLine.append( events.size() );\n        statusLine.append( \" Event\");\n        if ( events.size() != 1 )\n        {\n            statusLine.append('s');\n        }\n        statusLine.append( \" received\" );\n        if ( !events.isEmpty() )\n        {\n            statusLine.append( \" since \" );\n            Date d = new Date();\n            d.setTime( ( ( EventInfo ) events.get( 0 ) ).received );\n            statusLine.append( d );\n        }\n        statusLine.append( \". (Event admin: \" );\n        if ( !this.eventAdminAvailable )\n        {\n            statusLine.append(\"un\");\n        }\n        statusLine.append(\"available; Config admin: \");\n        if ( !this.configAdminAvailable )\n        {\n            statusLine.append(\"un\");\n        }\n        statusLine.append(\"available)\");\n\n        // Compute scale: startTime is 0, lastTimestamp is 100%\n        final long startTime = this.collector.getStartTime();\n        final long endTime = (events.size() == 0 ? startTime : ((EventInfo)events.get(events.size() - 1)).received);\n        final float scale = (endTime == startTime ? 100.0f : 100.0f / (endTime - startTime));\n\n        pw.write(\"{\");\n\n        jsonKey( pw, \"status\" );\n        jsonValue( pw, statusLine.toString() );\n        pw.write(',');\n        jsonKey( pw, \"data\" );\n\n        pw.write('[');\n\n        // display list in reverse order\n        for ( int index = events.size() - 1; index >= 0; index-- )\n        {\n            eventJson( pw, ( EventInfo ) events.get( index ), index, startTime, scale );\n            if ( index > 0 )\n            {\n                pw.write(',');\n            }\n        }\n\n        pw.write(']');\n\n        pw.write(\"}\");\n    }","id":54893,"modified_method":"private void renderJSON( final PrintWriter pw ) throws IOException\n    {\n        List events = this.collector.getEvents();\n\n        StringBuffer statusLine = new StringBuffer();\n        statusLine.append( events.size() );\n        statusLine.append( \" Event\");\n        if ( events.size() != 1 )\n        {\n            statusLine.append('s');\n        }\n        statusLine.append( \" received\" );\n        if ( !events.isEmpty() )\n        {\n            statusLine.append( \" since \" );\n            Date d = new Date();\n            d.setTime( ( ( EventInfo ) events.get( 0 ) ).received );\n            statusLine.append( d );\n        }\n        statusLine.append( \". (Event admin: \" );\n        if ( this.eventAdmin == null )\n        {\n            statusLine.append(\"un\");\n        }\n        statusLine.append(\"available; Config admin: \");\n        if ( !this.configAdminAvailable )\n        {\n            statusLine.append(\"un\");\n        }\n        statusLine.append(\"available)\");\n\n        // Compute scale: startTime is 0, lastTimestamp is 100%\n        final long startTime = this.collector.getStartTime();\n        final long endTime = (events.size() == 0 ? startTime : ((EventInfo)events.get(events.size() - 1)).received);\n        final float scale = (endTime == startTime ? 100.0f : 100.0f / (endTime - startTime));\n\n        pw.write(\"{\");\n\n        jsonKey( pw, \"status\" );\n        jsonValue( pw, statusLine.toString() );\n        pw.write(',');\n        jsonKey( pw, \"data\" );\n\n        pw.write('[');\n\n        // display list in reverse order\n        for ( int index = events.size() - 1; index >= 0; index-- )\n        {\n            eventJson( pw, ( EventInfo ) events.get( index ), index, startTime, scale );\n            if ( index > 0 )\n            {\n                pw.write(',');\n            }\n        }\n\n        pw.write(']');\n\n        pw.write(\"}\"); //$NON-NLS-1$\n    }","commit_id":"6670225ff3a2a67193e81199512f3147d701cdc3","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * @see javax.servlet.http.HttpServlet#doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    protected void doPost( HttpServletRequest req, HttpServletResponse resp )\n    throws ServletException, IOException\n    {\n        final String action = req.getParameter( PARAMETER_ACTION );\n        // for now we only have the clear action\n        if ( ACTION_CLEAR.equals( action ) )\n        {\n            this.collector.clear();\n        }\n        // we always send back the json data\n        resp.setContentType( \"application/json\" );\n        resp.setCharacterEncoding( \"utf-8\" );\n\n        renderJSON( resp.getWriter() );\n    }","id":54894,"modified_method":"/**\n     * @see javax.servlet.http.HttpServlet#doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    protected void doPost( HttpServletRequest req, HttpServletResponse resp )\n    throws ServletException, IOException\n    {\n        final String action = req.getParameter( PARAMETER_ACTION );\n        if ( ACTION_POST.equals(action) ) {\n            final Event event = newEvent(req);\n            eventAdmin.postEvent(event);\n        } else if (ACTION_SEND.equals(action)) {\n            final Event event = newEvent(req);\n            eventAdmin.sendEvent(event);\n        } else if ( ACTION_CLEAR.equals( action ) ) {\n            this.collector.clear();\n        }\n        // we always send back the json data\n        resp.setContentType( \"application/json\" ); //$NON-NLS-1$\n        resp.setCharacterEncoding( \"utf-8\" ); //$NON-NLS-1$\n\n        renderJSON( resp.getWriter() );\n    }","commit_id":"6670225ff3a2a67193e81199512f3147d701cdc3","url":"https://github.com/apache/felix"},{"original_method":"@Override\n\tpublic Object invoke() throws Exception {\n\t\tMap<String, Object> resultsMap = new LinkedHashMap<String, Object>();\n\n\t\tList<Map<String, Object>> jsonWebServiceActionMappingMaps =\n\t\t\t_buildJsonWebServiceActionMappingMaps();\n\n\t\tresultsMap.put(\"services\", jsonWebServiceActionMappingMaps);\n\n\t\tList<Map<String, Object>> types = _buildTypesList(_types);\n\n\t\tresultsMap.put(\"types\", types);\n\n\t\tresultsMap.put(\"context\", _contextPath);\n\t\tresultsMap.put(\"basePath\", _basePath);\n\t\tresultsMap.put(\"baseURL\", _baseURL);\n\t\tresultsMap.put(\"version\", ReleaseInfo.getVersion());\n\n\t\tif (_discover.length > 0) {\n\t\t\tresultsMap.put(\"discover\", _discover);\n\t\t}\n\n\t\treturn new DiscoveryContent(resultsMap);\n\t}","id":54895,"modified_method":"@Override\n\tpublic Object invoke() throws Exception {\n\t\tMap<String, Object> resultsMap = new LinkedHashMap<String, Object>();\n\n\t\tresultsMap.put(\"context\", _contextPath);\n\t\tresultsMap.put(\"basePath\", _basePath);\n\t\tresultsMap.put(\"baseURL\", _baseURL);\n\n\t\tif (_discover.length > 0) {\n\t\t\tresultsMap.put(\"discover\", _discover);\n\t\t}\n\n\t\tresultsMap.put(\"services\", _buildJsonWebServiceActionMappingMaps());\n\t\tresultsMap.put(\"types\", _buildTypesList(_types));\n\t\tresultsMap.put(\"version\", ReleaseInfo.getVersion());\n\n\t\treturn new DiscoveryContent(resultsMap);\n\t}","commit_id":"ad3028da4a40ef3f13ba13d6072854c136a8d905","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic Object invoke() throws Exception {\n\t\tMap<String, Object> resultsMap = new LinkedHashMap<String, Object>();\n\n\t\tList<Map<String, Object>> jsonWebServiceActionMappingMaps =\n\t\t\t_buildJsonWebServiceActionMappingMaps();\n\n\t\tresultsMap.put(\"services\", jsonWebServiceActionMappingMaps);\n\n\t\tList<Map<String, Object>> types = _buildTypesList(_types);\n\n\t\tresultsMap.put(\"types\", types);\n\n\t\tresultsMap.put(\"context\", _contextPath);\n\t\tresultsMap.put(\"basePath\", _basePath);\n\t\tresultsMap.put(\"baseURL\", _baseURL);\n\t\tresultsMap.put(\"version\", ReleaseInfo.getVersion());\n\n\t\tif (_discover.length > 0) {\n\t\t\tresultsMap.put(\"discover\", _discover);\n\t\t}\n\n\t\treturn new DiscoveryContent(resultsMap);\n\t}","id":54896,"modified_method":"@Override\n\tpublic Object invoke() throws Exception {\n\t\tMap<String, Object> resultsMap = new LinkedHashMap<String, Object>();\n\n\t\tresultsMap.put(\"context\", _contextPath);\n\t\tresultsMap.put(\"basePath\", _basePath);\n\t\tresultsMap.put(\"baseURL\", _baseURL);\n\n\t\tif (_discover.length > 0) {\n\t\t\tresultsMap.put(\"discover\", _discover);\n\t\t}\n\n\t\tresultsMap.put(\"services\", _buildJsonWebServiceActionMappingMaps());\n\t\tresultsMap.put(\"types\", _buildTypesList(_types));\n\t\tresultsMap.put(\"version\", ReleaseInfo.getVersion());\n\n\t\treturn new DiscoveryContent(resultsMap);\n\t}","commit_id":"5c847c7023fc06b3040f83d15f064cb01ad3b70d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic Object invoke() throws Exception {\n\t\tMap<String, Object> resultsMap = new LinkedHashMap<String, Object>();\n\n\t\tresultsMap.put(\"context\", _contextPath);\n\t\tresultsMap.put(\"basePath\", _basePath);\n\t\tresultsMap.put(\"baseURL\", _baseURL);\n\n\t\tif (_discover.length > 0) {\n\t\t\tresultsMap.put(\"discover\", _discover);\n\t\t}\n\n\t\tresultsMap.put(\"services\", _buildJsonWebServiceActionMappingMaps());\n\t\tresultsMap.put(\"types\", _buildTypesList(_types));\n\t\tresultsMap.put(\"version\", ReleaseInfo.getVersion());\n\n\t\treturn new DiscoveryContent(resultsMap);\n\t}","id":54897,"modified_method":"@Override\n\tpublic Object invoke() throws Exception {\n\t\tMap<String, Object> resultsMap = new LinkedHashMap<String, Object>();\n\n\t\tList<Map<String, Object>> jsonWebServiceActionMappingMaps =\n\t\t\t_buildJsonWebServiceActionMappingMaps();\n\n\t\tresultsMap.put(\"services\", jsonWebServiceActionMappingMaps);\n\n\t\tList<Map<String, Object>> types = _buildTypesList(_types);\n\n\t\tresultsMap.put(\"types\", types);\n\n\t\tresultsMap.put(\"context\", _contextPath);\n\t\tresultsMap.put(\"basePath\", _basePath);\n\t\tresultsMap.put(\"baseURL\", _baseURL);\n\t\tresultsMap.put(\"version\", ReleaseInfo.getVersion());\n\n\t\tif (_discover.length > 0) {\n\t\t\tresultsMap.put(\"discover\", _discover);\n\t\t}\n\n\t\treturn new DiscoveryContent(resultsMap);\n\t}","commit_id":"905542dcd0e097d1eef00111ff199e1dc174de4c","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public int read() throws IOException {\n        byte[] bytes = new byte[1];\n        Socket.recv(socket, bytes, 0, 1);\n        return bytes[0];\n    }","id":54898,"modified_method":"@Override\n    public int read() throws IOException {\n        byte[] bytes = new byte[1];\n        int result = Socket.recv(socket, bytes, 0, 1);\n        if (result == -1) {\n            return -1;\n        } else {\n            return bytes[0] & 0xFF;\n        }\n    }","commit_id":"af38917c2e2edbd1ff8f3443ca851fb179503b37","url":"https://github.com/apache/tomcat"},{"original_method":"public int recv(SocketChannel socketChannel) throws IOException {\n    isSend(false);\n\n    int numRead = 0;\n\n    if (mHeader.remaining() > 0) {\n      numRead = socketChannel.read(mHeader);\n      if (mHeader.remaining() == 0) {\n        mHeader.flip();\n        mFileId = mHeader.getInt();\n        mDataLength = mHeader.getInt();\n        mData = ByteBuffer.allocate(mDataLength);\n        LOG.info(\"recv(): mData: \" + mData);\n        if (mDataLength == 0) {\n          mIsMessageReady = true;\n        }\n      }\n    } else {\n      numRead = socketChannel.read(mData);\n      if (mData.remaining() == 0) {\n        mIsMessageReady = true;\n      }\n    }\n\n    return numRead;\n  }","id":54899,"modified_method":"public int recv(SocketChannel socketChannel) throws IOException {\n    isSend(false);\n\n    int numRead = 0;\n    if (mHeader.remaining() > 0) {\n      numRead = socketChannel.read(mHeader);\n      if (mHeader.remaining() == 0) {\n        mHeader.flip();\n        mFileId = mHeader.getInt();\n        mDataLength = mHeader.getInt();\n        mData = ByteBuffer.allocate(mDataLength);\n        LOG.info(\"recv(): mData: \" + mData + \" mFileId \" + mFileId);\n        if (mDataLength == 0) {\n          mIsMessageReady = true;\n        }\n      }\n    } else {\n      numRead = socketChannel.read(mData);\n      if (mData.remaining() == 0) {\n        mIsMessageReady = true;\n      }\n    }\n\n    return numRead;\n  }","commit_id":"2fe1061eac6218dcb6d1255f01f289fcd4097ca3","url":"https://github.com/amplab/tachyon"},{"original_method":"private ByteBuffer retrieveByteBufferFromRemoteMachine(InetSocketAddress address) \n      throws IOException {\n    SocketChannel socketChannel = SocketChannel.open();\n    socketChannel.connect(address);\n\n    LOG.info(\"Connected to remote machine \" + address + \" sent\");\n    DataServerMessage sendMsg = DataServerMessage.createPartitionRequestMessage(mId);\n    while (!sendMsg.finishSending()) {\n      sendMsg.send(socketChannel);\n    }\n\n    LOG.info(\"Data \" + mId + \" to remote machine \" + address + \" sent\");\n    \n    DataServerMessage recvMsg = DataServerMessage.createPartitionResponseMessage(false, mId);\n    while (!recvMsg.isMessageReady()) {\n      recvMsg.recv(socketChannel);\n    }\n    LOG.info(\"Data \" + mId + \" from remote machine \" + address + \" received\");\n\n    socketChannel.close();\n\n    if (recvMsg.getFileId() < 0) {\n      LOG.info(\"Data \" + recvMsg.getFileId() + \" is not in remote machine.\");\n      return null;\n    }\n\n    return recvMsg.getReadOnlyData();\n  }","id":54900,"modified_method":"private ByteBuffer retrieveByteBufferFromRemoteMachine(InetSocketAddress address) \n      throws IOException {\n    SocketChannel socketChannel = SocketChannel.open();\n    socketChannel.connect(address);\n\n    LOG.info(\"Connected to remote machine \" + address + \" sent\");\n    DataServerMessage sendMsg = DataServerMessage.createPartitionRequestMessage(mId);\n    while (!sendMsg.finishSending()) {\n      sendMsg.send(socketChannel);\n    }\n\n    LOG.info(\"Data \" + mId + \" to remote machine \" + address + \" sent\");\n    \n    DataServerMessage recvMsg = DataServerMessage.createPartitionResponseMessage(false, mId);\n    while (!recvMsg.isMessageReady()) {\n      int numRead = recvMsg.recv(socketChannel);\n      if (numRead == -1) {\n        break;\n      }\n    }\n    LOG.info(\"Data \" + mId + \" from remote machine \" + address + \" received\");\n\n    socketChannel.close();\n    \n    if (!recvMsg.isMessageReady()) {\n      LOG.info(\"Data \" + mId + \" from remote machine is not ready.\");\n      return null;\n    }\n\n    if (recvMsg.getFileId() < 0) {\n      LOG.info(\"Data \" + recvMsg.getFileId() + \" is not in remote machine.\");\n      return null;\n    }\n\n    return recvMsg.getReadOnlyData();\n  }","commit_id":"2fe1061eac6218dcb6d1255f01f289fcd4097ca3","url":"https://github.com/amplab/tachyon"},{"original_method":"public ByteBuffer readByteBuffer() \n      throws UnknownHostException, FileNotFoundException, IOException {\n    validateIO(true);\n\n    ByteBuffer ret = null;\n\n    ret = readByteBufferFromLocal();\n    if (ret == null) {\n      ret = readByteBufferFromRemote();\n    }\n\n    if (ret != null) {\n      return ret;\n    }\n\n    boolean recacheSucceed = recacheData();\n\n    if (recacheSucceed) {\n      ret = readByteBufferFromLocal();\n    }\n\n    if (ret == null) {\n      new IOException(\"Failed to read file \" + mClientFileInfo.getPath());\n    }\n    return ret;\n  }","id":54901,"modified_method":"public ByteBuffer readByteBuffer() \n      throws UnknownHostException, FileNotFoundException, IOException {\n    validateIO(true);\n\n    ByteBuffer ret = null;\n\n    ret = readByteBufferFromLocal();\n    if (ret == null) {\n      ret = readByteBufferFromRemote();\n    }\n\n    if (ret != null) {\n      return ret;\n    }\n\n    boolean recacheSucceed = recacheData();\n\n    if (recacheSucceed) {\n      ret = readByteBufferFromLocal();\n    }\n\n    if (ret == null) {\n      throw new IOException(\"Failed to read file \" + mClientFileInfo.getPath());\n    }\n    return ret;\n  }","commit_id":"2fe1061eac6218dcb6d1255f01f289fcd4097ca3","url":"https://github.com/amplab/tachyon"},{"original_method":"private ByteBuffer readByteBufferFromRemote() throws IOException {\n    ByteBuffer ret = null;\n\n    LOG.info(\"Try to find and read from remote workers.\");\n\n    mLocations = mTachyonClient.getFileLocations(mId);\n\n    if (mLocations == null) {\n      throw new IOException(\"Can not find location info: \" + mClientFileInfo.getPath() + \" \" + mId);\n    }\n\n    LOG.info(\"readByteBuffer() PartitionInfo \" + mLocations);\n\n    for (int k = 0 ;k < mLocations.size(); k ++) {\n      String host = mLocations.get(k).mHost;\n      if (host.equals(InetAddress.getLocalHost().getHostAddress())) {\n        String localFileName = mFolder.getPath() + \"/\" + mId;\n        LOG.error(\"Master thinks the local machine has data! But \" + localFileName + \" is not!\");\n      } else {\n        LOG.info(\"readByteBuffer() Read from remote machine: \" + host + \":\" +\n            mLocations.get(k).mPort);\n        try {\n          // TODO Using Config.WORKER_DATA_SERVER_PORT here is a bug. Fix it later.\n          ret = retrieveByteBufferFromRemoteMachine(\n              new InetSocketAddress(host, Config.WORKER_DATA_SERVER_PORT));\n          if (ret != null) {\n            break;\n          }\n        } catch (IOException e) {\n          LOG.error(e.getMessage());\n        }\n      }\n    }\n\n    if (ret != null) {\n      mSizeBytes = ret.limit();\n    }\n\n    return ret;\n  }","id":54902,"modified_method":"private ByteBuffer readByteBufferFromRemote() throws IOException {\n    ByteBuffer ret = null;\n\n    LOG.info(\"Try to find and read from remote workers.\");\n\n    mLocations = mTachyonClient.getFileLocations(mId);\n\n    if (mLocations == null) {\n      throw new IOException(\"Can not find location info: \" + mClientFileInfo.getPath() + \" \" + mId);\n    }\n\n    LOG.info(\"readByteBufferFromRemote() \" + mLocations);\n\n    for (int k = 0 ;k < mLocations.size(); k ++) {\n      String host = mLocations.get(k).mHost;\n      if (host.equals(InetAddress.getLocalHost().getHostAddress())) {\n        String localFileName = mFolder.getPath() + \"/\" + mId;\n        LOG.error(\"Master thinks the local machine has data! But \" + localFileName + \" is not!\");\n      } else {\n        LOG.info(\"readByteBufferFromRemote() : \" + host + \":\" + Config.WORKER_DATA_SERVER_PORT);\n        try {\n          // TODO Using Config.WORKER_DATA_SERVER_PORT here is a bug. Fix it later.\n          ret = retrieveByteBufferFromRemoteMachine(\n              new InetSocketAddress(host, Config.WORKER_DATA_SERVER_PORT));\n          if (ret != null) {\n            break;\n          }\n        } catch (IOException e) {\n          LOG.error(e.getMessage());\n        }\n      }\n    }\n\n    if (ret != null) {\n      mSizeBytes = ret.limit();\n      ret.order(ByteOrder.nativeOrder());\n    }\n\n    return ret;\n  }","commit_id":"2fe1061eac6218dcb6d1255f01f289fcd4097ca3","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n    public int read(boolean block, byte[] bytes, int off, int len)\n            throws IOException {\n        // TODO support non-blocking reads\n        return Socket.recv(socket, bytes, off, len);\n    }","id":54903,"modified_method":"@Override\n    public int read(boolean block, byte[] bytes, int off, int len)\n            throws IOException {\n        if (!block) {\n            Socket.optSet(socket, Socket.APR_SO_NONBLOCK, -1);\n        }\n        try {\n            int result = Socket.recv(socket, bytes, off, len);\n            if (result > 0) {\n                return result;\n            } else if (-result == Status.EAGAIN) {\n                return 0;\n            } else {\n                throw new IOException(sm.getString(\"apr.error\",\n                        Integer.valueOf(-result)));\n            }\n        } finally {\n            if (!block) {\n                Socket.optSet(socket, Socket.APR_SO_NONBLOCK, 0);\n            }\n        }\n    }","commit_id":"d6710a2a7d7b6ef73f4fa33418fb46f3f1baa461","url":"https://github.com/apache/tomcat"},{"original_method":"private static String[] parseVersionedString(String rawString) {\n    final String[] strings = rawString.split(VERSION_SEPARATOR);\n    try{\n      Integer.parseInt(strings[strings.length-1]);\n      return strings;\n    } catch (NumberFormatException e) {\n      return new String[]{rawString};\n    }\n  }","id":54904,"modified_method":"private static int parseVersionedString(String rawString) {\n    int result = 0;\n    int mul = 1;\n    char[] chars = rawString.toCharArray();\n    int lastCharNum = rawString.length() - 1;\n\n    for (int i = lastCharNum; i <= 0; i--) {\n      int digit = Character.digit(chars[i], 10);\n      if (digit != -1) {\n        result += digit * mul;\n        mul *= 10;\n      } else {\n        if (chars[i] == VERSION_SEPARATOR_CHAR) return result;\n        return NO_VERSION;\n      }\n    }\n    return NO_VERSION;\n  }","commit_id":"80ad0f9f4c877db0b02c81a756940e5178fef46d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getRole(String rawRole) {\n    final String[] roleNameVersion = parseVersionedString(rawRole);\n    LOG.assertLog(roleNameVersion != null && roleNameVersion.length > 0);\n    return roleNameVersion[0];\n  }","id":54905,"modified_method":"public static String getRole(String rawRole) {\n    return getBeforeSeparator(rawRole);\n  }","commit_id":"80ad0f9f4c877db0b02c81a756940e5178fef46d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getConceptFQName(String rawFqName) {\n    String[] fqNameVersion = parseVersionedString(rawFqName);\n    LOG.assertLog(fqNameVersion != null && fqNameVersion.length > 0);\n    return fqNameVersion[0];\n  }","id":54906,"modified_method":"public static String getConceptFQName(String rawFqName) {\n    return getBeforeSeparator(rawFqName);\n  }","commit_id":"80ad0f9f4c877db0b02c81a756940e5178fef46d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getLinkRole(String rawRole, SNode node, SModelVersionsInfo versionsInfo) {\n    final String[] roleNameVersion = parseVersionedString(rawRole);\n    LOG.assertLog(roleNameVersion != null && roleNameVersion.length > 0);\n    final String linkRole = roleNameVersion[0];\n    if (roleNameVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(roleNameVersion[roleNameVersion.length - 1]);\n        versionsInfo.addLinkRoleVersion(node, linkRole, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n    return linkRole;\n  }","id":54907,"modified_method":"public static String getLinkRole(String rawRole, SNode node, SModelVersionsInfo versionsInfo) {\n    int version = parseVersionedString(rawRole);\n    String linkRole = getBeforeSeparator(rawRole);\n    if (version != NO_VERSION) {\n      versionsInfo.addLinkRoleVersion(node, linkRole, version);\n    }\n    return linkRole;\n  }","commit_id":"80ad0f9f4c877db0b02c81a756940e5178fef46d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void fetchChildNodeRoleVersion(String rawRole, SNode childNode, SModelVersionsInfo versionsInfo) {\n    final String[] roleNameVersion = parseVersionedString(rawRole);\n    LOG.assertLog(roleNameVersion != null);\n    if (roleNameVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(roleNameVersion[roleNameVersion.length - 1]);\n        versionsInfo.addRoleVersion(childNode, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n  }","id":54908,"modified_method":"public static void fetchChildNodeRoleVersion(String rawRole, SNode childNode, SModelVersionsInfo versionsInfo) {\n    int version = parseVersionedString(rawRole);\n    if (version != NO_VERSION) {\n      versionsInfo.addRoleVersion(childNode, version);\n    }\n  }","commit_id":"80ad0f9f4c877db0b02c81a756940e5178fef46d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static int getReferenceToNodeVersion(SNode node, SModelReference targetModelReference) {\n    if (targetModelReference == null) { //target model reference is nullable in postponed references\n      return -1;\n    }\n    return node.getModel().getUsedVersion(targetModelReference);\n  }","id":54909,"modified_method":"public static int getReferenceToNodeVersion(SNode node, SModelReference targetModelReference) {\n    if (targetModelReference == null) return -1;//target model reference is nullable in postponed references\n    return node.getModel().getUsedVersion(targetModelReference);\n  }","commit_id":"80ad0f9f4c877db0b02c81a756940e5178fef46d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void fetchConceptVersion(String rawFqName, SNode node, SModelVersionsInfo versionsInfo) {\n    final String[] fqNameVersion = parseVersionedString(rawFqName);\n    LOG.assertLog(fqNameVersion != null);\n    if (fqNameVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(fqNameVersion[fqNameVersion.length-1]);\n        versionsInfo.addConceptNameVersion(node, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n  }","id":54910,"modified_method":"public static void fetchConceptVersion(String rawFqName, SNode node, SModelVersionsInfo versionsInfo) {\n    int version = parseVersionedString(rawFqName);\n    if (version != NO_VERSION) {\n      versionsInfo.addConceptNameVersion(node, version);\n    }\n  }","commit_id":"80ad0f9f4c877db0b02c81a756940e5178fef46d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getTargetNodeId(String targetId, String role, SNode node, SModelVersionsInfo versionsInfo) {\n    final String[] linkTargetVersion = parseVersionedString(targetId);\n    LOG.assertLog(linkTargetVersion != null && linkTargetVersion.length > 0);\n    final String linkRole = linkTargetVersion[0];\n    if (linkTargetVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(linkTargetVersion[linkTargetVersion.length - 1]);\n        versionsInfo.addLinkTargetIdVersion(node, role, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n    return linkRole;\n  }","id":54911,"modified_method":"public static String getTargetNodeId(String targetId, String role, SNode node, SModelVersionsInfo versionsInfo) {\n    final String linkRole = getBeforeSeparator(targetId);\n    int version = parseVersionedString(targetId);\n    if (version != NO_VERSION) {\n      versionsInfo.addLinkTargetIdVersion(node, role, version);\n    }\n    return linkRole;\n  }","commit_id":"80ad0f9f4c877db0b02c81a756940e5178fef46d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getPropertyName(Element propertyElement, SNode node, SModelVersionsInfo versionsInfo) {\n    final String[] propertyNameVersion = parseVersionedString(propertyElement.getAttributeValue(ModelPersistence.NAME));\n    LOG.assertLog(propertyNameVersion != null && propertyNameVersion.length > 0);\n    String propertyName = propertyNameVersion[0];\n    if (propertyNameVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(propertyNameVersion[propertyNameVersion.length - 1]);\n        versionsInfo.addPropertyVersion(node, propertyName, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n    return propertyName;\n  }","id":54912,"modified_method":"public static String getPropertyName(Element propertyElement, SNode node, SModelVersionsInfo versionsInfo) {\n    String raw = propertyElement.getAttributeValue(ModelPersistence.NAME);\n    String propertyName = getBeforeSeparator(raw);\n    int version = parseVersionedString(raw);\n    if (version != NO_VERSION) {\n      versionsInfo.addPropertyVersion(node, propertyName, version);\n    }\n    return propertyName;\n  }","commit_id":"80ad0f9f4c877db0b02c81a756940e5178fef46d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static int getRoleVersion(SNode node) {\n    int roleVersion = -1;\n    final SNode parent = node.getParent();\n    if (parent != null) {\n      roleVersion = VersionUtil.getNodeLanguageVersion(parent);\n    }\n    return roleVersion;\n  }","id":54913,"modified_method":"public static int getRoleVersion(SNode node) {\n    final SNode parent = node.getParent();\n    if (parent == null) return -1;\n    return VersionUtil.getNodeLanguageVersion(parent);\n  }","commit_id":"80ad0f9f4c877db0b02c81a756940e5178fef46d","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getConceptFQName(String rawFqName) {\n    return getBeforeSeparator(rawFqName);\n  }","id":54914,"modified_method":"public static String getConceptFQName(String rawFqName) {\n    String[] fqNameVersion = parseVersionedString(rawFqName);\n    LOG.assertLog(fqNameVersion != null && fqNameVersion.length > 0);\n    return fqNameVersion[0];\n  }","commit_id":"5102efb88730579b18bfebc945881ff423d32266","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getTargetNodeId(String targetId, String role, SNode node, SModelVersionsInfo versionsInfo) {\n    final String linkRole = getBeforeSeparator(targetId);\n    int version = parseVersionedString(targetId);\n    if (version != NO_VERSION) {\n      versionsInfo.addLinkTargetIdVersion(node, role, version);\n    }\n    return linkRole;\n  }","id":54915,"modified_method":"public static String getTargetNodeId(String targetId, String role, SNode node, SModelVersionsInfo versionsInfo) {\n    final String[] linkTargetVersion = parseVersionedString(targetId);\n    LOG.assertLog(linkTargetVersion != null && linkTargetVersion.length > 0);\n    final String linkRole = linkTargetVersion[0];\n    if (linkTargetVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(linkTargetVersion[linkTargetVersion.length - 1]);\n        versionsInfo.addLinkTargetIdVersion(node, role, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n    return linkRole;\n  }","commit_id":"5102efb88730579b18bfebc945881ff423d32266","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void fetchChildNodeRoleVersion(String rawRole, SNode childNode, SModelVersionsInfo versionsInfo) {\n    int version = parseVersionedString(rawRole);\n    if (version != NO_VERSION) {\n      versionsInfo.addRoleVersion(childNode, version);\n    }\n  }","id":54916,"modified_method":"public static void fetchChildNodeRoleVersion(String rawRole, SNode childNode, SModelVersionsInfo versionsInfo) {\n    final String[] roleNameVersion = parseVersionedString(rawRole);\n    LOG.assertLog(roleNameVersion != null);\n    if (roleNameVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(roleNameVersion[roleNameVersion.length - 1]);\n        versionsInfo.addRoleVersion(childNode, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n  }","commit_id":"5102efb88730579b18bfebc945881ff423d32266","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getPropertyName(Element propertyElement, SNode node, SModelVersionsInfo versionsInfo) {\n    String raw = propertyElement.getAttributeValue(ModelPersistence.NAME);\n    String propertyName = getBeforeSeparator(raw);\n    int version = parseVersionedString(raw);\n    if (version != NO_VERSION) {\n      versionsInfo.addPropertyVersion(node, propertyName, version);\n    }\n    return propertyName;\n  }","id":54917,"modified_method":"public static String getPropertyName(Element propertyElement, SNode node, SModelVersionsInfo versionsInfo) {\n    final String[] propertyNameVersion = parseVersionedString(propertyElement.getAttributeValue(ModelPersistence.NAME));\n    LOG.assertLog(propertyNameVersion != null && propertyNameVersion.length > 0);\n    String propertyName = propertyNameVersion[0];\n    if (propertyNameVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(propertyNameVersion[propertyNameVersion.length - 1]);\n        versionsInfo.addPropertyVersion(node, propertyName, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n    return propertyName;\n  }","commit_id":"5102efb88730579b18bfebc945881ff423d32266","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getRole(String rawRole) {\n    return getBeforeSeparator(rawRole);\n  }","id":54918,"modified_method":"public static String getRole(String rawRole) {\n    final String[] roleNameVersion = parseVersionedString(rawRole);\n    LOG.assertLog(roleNameVersion != null && roleNameVersion.length > 0);\n    return roleNameVersion[0];\n  }","commit_id":"5102efb88730579b18bfebc945881ff423d32266","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static int getReferenceToNodeVersion(SNode node, SModelReference targetModelReference) {\n    if (targetModelReference == null) return -1;//target model reference is nullable in postponed references\n    return node.getModel().getUsedVersion(targetModelReference);\n  }","id":54919,"modified_method":"public static int getReferenceToNodeVersion(SNode node, SModelReference targetModelReference) {\n    if (targetModelReference == null) { //target model reference is nullable in postponed references\n      return -1;\n    }\n    return node.getModel().getUsedVersion(targetModelReference);\n  }","commit_id":"5102efb88730579b18bfebc945881ff423d32266","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getLinkRole(String rawRole, SNode node, SModelVersionsInfo versionsInfo) {\n    int version = parseVersionedString(rawRole);\n    String linkRole = getBeforeSeparator(rawRole);\n    if (version != NO_VERSION) {\n      versionsInfo.addLinkRoleVersion(node, linkRole, version);\n    }\n    return linkRole;\n  }","id":54920,"modified_method":"public static String getLinkRole(String rawRole, SNode node, SModelVersionsInfo versionsInfo) {\n    final String[] roleNameVersion = parseVersionedString(rawRole);\n    LOG.assertLog(roleNameVersion != null && roleNameVersion.length > 0);\n    final String linkRole = roleNameVersion[0];\n    if (roleNameVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(roleNameVersion[roleNameVersion.length - 1]);\n        versionsInfo.addLinkRoleVersion(node, linkRole, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n    return linkRole;\n  }","commit_id":"5102efb88730579b18bfebc945881ff423d32266","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static int parseVersionedString(String rawString) {\n    int result = 0;\n    int mul = 1;\n    char[] chars = rawString.toCharArray();\n    int lastCharNum = rawString.length() - 1;\n\n    for (int i = lastCharNum; i <= 0; i--) {\n      int digit = Character.digit(chars[i], 10);\n      if (digit != -1) {\n        result += digit * mul;\n        mul *= 10;\n      } else {\n        if (chars[i] == VERSION_SEPARATOR_CHAR) return result;\n        return NO_VERSION;\n      }\n    }\n    return NO_VERSION;\n  }","id":54921,"modified_method":"private static String[] parseVersionedString(String rawString) {\n    final String[] strings = rawString.split(VERSION_SEPARATOR);\n    try{\n      Integer.parseInt(strings[strings.length-1]);\n      return strings;\n    } catch (NumberFormatException e) {\n      return new String[]{rawString};\n    }\n  }","commit_id":"5102efb88730579b18bfebc945881ff423d32266","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void fetchConceptVersion(String rawFqName, SNode node, SModelVersionsInfo versionsInfo) {\n    int version = parseVersionedString(rawFqName);\n    if (version != NO_VERSION) {\n      versionsInfo.addConceptNameVersion(node, version);\n    }\n  }","id":54922,"modified_method":"public static void fetchConceptVersion(String rawFqName, SNode node, SModelVersionsInfo versionsInfo) {\n    final String[] fqNameVersion = parseVersionedString(rawFqName);\n    LOG.assertLog(fqNameVersion != null);\n    if (fqNameVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(fqNameVersion[fqNameVersion.length-1]);\n        versionsInfo.addConceptNameVersion(node, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n  }","commit_id":"5102efb88730579b18bfebc945881ff423d32266","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static int getRoleVersion(SNode node) {\n    final SNode parent = node.getParent();\n    if (parent == null) return -1;\n    return VersionUtil.getNodeLanguageVersion(parent);\n  }","id":54923,"modified_method":"public static int getRoleVersion(SNode node) {\n    int roleVersion = -1;\n    final SNode parent = node.getParent();\n    if (parent != null) {\n      roleVersion = VersionUtil.getNodeLanguageVersion(parent);\n    }\n    return roleVersion;\n  }","commit_id":"5102efb88730579b18bfebc945881ff423d32266","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static int getRoleVersion(SNode node) {\n    int roleVersion = -1;\n    final SNode parent = node.getParent();\n    if (parent != null) {\n      roleVersion = VersionUtil.getNodeLanguageVersion(parent);\n    }\n    return roleVersion;\n  }","id":54924,"modified_method":"public static int getRoleVersion(SNode node) {\n    final SNode parent = node.getParent();\n    if (parent == null) return -1;\n    return VersionUtil.getNodeLanguageVersion(parent);\n  }","commit_id":"8b51358e5a72bed85c75890f52ff61bbf94a60c5","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static String[] parseVersionedString(String rawString) {\n    final String[] strings = rawString.split(VERSION_SEPARATOR);\n    try{\n      Integer.parseInt(strings[strings.length-1]);\n      return strings;\n    } catch (NumberFormatException e) {\n      return new String[]{rawString};\n    }\n  }","id":54925,"modified_method":"private static int parseVersionedString(String rawString) {\n    if(rawString.startsWith(Foreign.ID_PREFIX)) {\n      return NO_VERSION;\n    }\n    int result = 0;\n    int mul = 1;\n    char[] chars = rawString.toCharArray();\n    int lastCharNum = rawString.length() - 1;\n\n    for (int i = lastCharNum; i >= 0; i--) {\n      int digit = Character.digit(chars[i], 10);\n      if (digit != -1) {\n        result += digit * mul;\n        mul *= 10;\n      } else {\n        if (chars[i] == VERSION_SEPARATOR_CHAR) return result;\n        return NO_VERSION;\n      }\n    }\n    return NO_VERSION;\n  }","commit_id":"8b51358e5a72bed85c75890f52ff61bbf94a60c5","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getPropertyName(Element propertyElement, SNode node, SModelVersionsInfo versionsInfo) {\n    final String[] propertyNameVersion = parseVersionedString(propertyElement.getAttributeValue(ModelPersistence.NAME));\n    LOG.assertLog(propertyNameVersion != null && propertyNameVersion.length > 0);\n    String propertyName = propertyNameVersion[0];\n    if (propertyNameVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(propertyNameVersion[propertyNameVersion.length - 1]);\n        versionsInfo.addPropertyVersion(node, propertyName, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n    return propertyName;\n  }","id":54926,"modified_method":"public static String getPropertyName(Element propertyElement, SNode node, SModelVersionsInfo versionsInfo) {\n    String raw = propertyElement.getAttributeValue(ModelPersistence.NAME);\n    String propertyName = getBeforeSeparator(raw);      \n    int version = parseVersionedString(raw);\n    if (version != NO_VERSION) {\n      versionsInfo.addPropertyVersion(node, propertyName, version);\n    }\n    return propertyName;\n  }","commit_id":"8b51358e5a72bed85c75890f52ff61bbf94a60c5","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getLinkRole(String rawRole, SNode node, SModelVersionsInfo versionsInfo) {\n    final String[] roleNameVersion = parseVersionedString(rawRole);\n    LOG.assertLog(roleNameVersion != null && roleNameVersion.length > 0);\n    final String linkRole = roleNameVersion[0];\n    if (roleNameVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(roleNameVersion[roleNameVersion.length - 1]);\n        versionsInfo.addLinkRoleVersion(node, linkRole, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n    return linkRole;\n  }","id":54927,"modified_method":"public static String getLinkRole(String rawRole, SNode node, SModelVersionsInfo versionsInfo) {\n    int version = parseVersionedString(rawRole);\n    String linkRole = getBeforeSeparator(rawRole);\n    if (version != NO_VERSION) {\n      versionsInfo.addLinkRoleVersion(node, linkRole, version);\n    }\n    return linkRole;\n  }","commit_id":"8b51358e5a72bed85c75890f52ff61bbf94a60c5","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getConceptFQName(String rawFqName) {\n    String[] fqNameVersion = parseVersionedString(rawFqName);\n    LOG.assertLog(fqNameVersion != null && fqNameVersion.length > 0);\n    return fqNameVersion[0];\n  }","id":54928,"modified_method":"public static String getConceptFQName(String rawFqName) {\n    return getBeforeSeparator(rawFqName);\n  }","commit_id":"8b51358e5a72bed85c75890f52ff61bbf94a60c5","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void fetchConceptVersion(String rawFqName, SNode node, SModelVersionsInfo versionsInfo) {\n    final String[] fqNameVersion = parseVersionedString(rawFqName);\n    LOG.assertLog(fqNameVersion != null);\n    if (fqNameVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(fqNameVersion[fqNameVersion.length-1]);\n        versionsInfo.addConceptNameVersion(node, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n  }","id":54929,"modified_method":"public static void fetchConceptVersion(String rawFqName, SNode node, SModelVersionsInfo versionsInfo) {\n    int version = parseVersionedString(rawFqName);\n    if (version != NO_VERSION) {\n      versionsInfo.addConceptNameVersion(node, version);\n    }\n  }","commit_id":"8b51358e5a72bed85c75890f52ff61bbf94a60c5","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getRole(String rawRole) {\n    final String[] roleNameVersion = parseVersionedString(rawRole);\n    LOG.assertLog(roleNameVersion != null && roleNameVersion.length > 0);\n    return roleNameVersion[0];\n  }","id":54930,"modified_method":"public static String getRole(String rawRole) {\n    return getBeforeSeparator(rawRole);\n  }","commit_id":"8b51358e5a72bed85c75890f52ff61bbf94a60c5","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void fetchChildNodeRoleVersion(String rawRole, SNode childNode, SModelVersionsInfo versionsInfo) {\n    final String[] roleNameVersion = parseVersionedString(rawRole);\n    LOG.assertLog(roleNameVersion != null);\n    if (roleNameVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(roleNameVersion[roleNameVersion.length - 1]);\n        versionsInfo.addRoleVersion(childNode, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n  }","id":54931,"modified_method":"public static void fetchChildNodeRoleVersion(String rawRole, SNode childNode, SModelVersionsInfo versionsInfo) {\n    int version = parseVersionedString(rawRole);\n    if (version != NO_VERSION) {\n      versionsInfo.addRoleVersion(childNode, version);\n    }\n  }","commit_id":"8b51358e5a72bed85c75890f52ff61bbf94a60c5","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static String getTargetNodeId(String targetId, String role, SNode node, SModelVersionsInfo versionsInfo) {\n    final String[] linkTargetVersion = parseVersionedString(targetId);\n    LOG.assertLog(linkTargetVersion != null && linkTargetVersion.length > 0);\n    final String linkRole = linkTargetVersion[0];\n    if (linkTargetVersion.length > 1) {\n      try {\n        int version = Integer.parseInt(linkTargetVersion[linkTargetVersion.length - 1]);\n        versionsInfo.addLinkTargetIdVersion(node, role, version);\n      } catch (NumberFormatException e) {\n        LOG.error(e);\n      }\n    }\n    return linkRole;\n  }","id":54932,"modified_method":"public static String getTargetNodeId(String targetId, String role, SNode node, SModelVersionsInfo versionsInfo) {\n    final String linkRole = getBeforeSeparator(targetId);\n    int version = parseVersionedString(targetId);\n    if (version != NO_VERSION) {\n      versionsInfo.addLinkTargetIdVersion(node, role, version);\n    }\n    return linkRole;\n  }","commit_id":"8b51358e5a72bed85c75890f52ff61bbf94a60c5","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static int getReferenceToNodeVersion(SNode node, SModelReference targetModelReference) {\n    if (targetModelReference == null) { //target model reference is nullable in postponed references\n      return -1;\n    }\n    return node.getModel().getUsedVersion(targetModelReference);\n  }","id":54933,"modified_method":"public static int getReferenceToNodeVersion(SNode node, SModelReference targetModelReference) {\n    if (targetModelReference == null) return -1;//target model reference is nullable in postponed references\n    return node.getModel().getUsedVersion(targetModelReference);\n  }","commit_id":"8b51358e5a72bed85c75890f52ff61bbf94a60c5","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void handleGet(URI uri, ToadletContext ctx) throws ToadletContextClosedException, IOException, RedirectException {\n\t\t\n\t\tString path = uri.getPath();\n\t\tif(path.endsWith(\"myref.txt\")) {\n\t\t\tSimpleFieldSet fs = node.exportPublicFieldSet();\n\t\t\tStringWriter sw = new StringWriter();\n\t\t\tfs.writeTo(sw);\n\t\t\tthis.writeReply(ctx, 200, \"text/plain\", \"OK\", sw.toString());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tStringBuffer buf = new StringBuffer(1024);\n\t\t\n\t\t//HTTPRequest request = new HTTPRequest(uri);\n\n\t\tctx.getPageMaker().makeHead(buf, \"Darknet Connections\");\n\t\t\n\t\t// our reference\n\t\tbuf.append(\"<div class=\\\"infobox infobox-normal\\\">\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-header\\\">\\n\");\n\t\tbuf.append(\"<a href=\\\"myref.txt\\\">My Reference<\/a>\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-content\\\">\\n\");\n\t\tbuf.append(\"<pre id=\\\"reference\\\">\\n\");\n\t\tbuf.append(HTMLEncoder.encode(this.node.exportPublicFieldSet().toString()));\n\t\tbuf.append(\"<\/pre>\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\t\n\t\t// FIXME! We need some nice images\n\t\tPeerNode[] peerNodes = node.getDarknetConnections();\n\t\t\n\t\tlong now = System.currentTimeMillis();\n\t\t\n\t\tbuf.append(\"<div class=\\\"infobox infobox-normal\\\">\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-header\\\">\\n\");\n\t\tbuf.append(\"My Connections\");\n\t\tif (!path.endsWith(\"displaymessagetypes.html\"))\n\t\t{\n\t\t\tbuf.append(\" <a href=\\\"displaymessagetypes.html\\\">(more detailed)<\/a>\");\n\t\t}\n\t\tbuf.append(\"<\/div>\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-content\\\">\\n\");\n\t\tbuf.append(\"<form action=\\\".\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\\n\");\n\t\tStringBuffer buf2 = new StringBuffer(1024);\n\t\tbuf2.append(\"<table class=\\\"darknet_connections\\\">\\n\");\n\t\tbuf2.append(\"<tr><th>Status<\/th><th>Name<\/th><th><span title=\\\"Address:Port\\\" style=\\\"border-bottom:1px dotted;cursor:help;\\\">Address<\/span><\/th><th>Version<\/th><th>Location<\/th><th><span title=\\\"Temporarily disconnected. Other node busy? Wait time(s) remaining/total\\\" style=\\\"border-bottom:1px dotted;cursor:help;\\\">Backoff<\/span><\/th><th><span title=\\\"Number of minutes since the node was last seen in this session\\\" style=\\\"border-bottom:1px dotted;cursor:help;\\\">Idle<\/span><\/th><th><\/th><\/tr>\\n\");\n\t\t\n\t\tif (peerNodes.length == 0) {\n\t\t\tbuf2.append(\"<tr><td colspan=\\\"8\\\">No connections so far<\/td><\/tr>\\n\");\n\t\t\tbuf2.append(\"<\/table>\\n\");\n\t\t}\n\t\telse {\n\t\t\tfinal Integer CONNECTED = new Integer(0);\n\t\t\tfinal Integer BACKED_OFF = new Integer(1);\n\t\t\tfinal Integer TOO_NEW = new Integer(2);\n\t\t\tfinal Integer INCOMPATIBLE = new Integer(3);\n\t\t\tfinal Integer DISCONNECTED = new Integer(4);\n\t\t\t\n\t\t\tint numberOfConnected = 0;\n\t\t\tint numberOfBackedOff = 0;\n\t\t\tint numberOfTooNew = 0;\n\t\t\tint numberOfIncompatible = 0;\n\t\t\tint numberOfDisconnected = 0;\n\t\t\t\n\t\t\t// Create array\n\t\t\tObject[][] rows = new Object[peerNodes.length][];\n\t\t\tfor(int i=0;i<peerNodes.length;i++) {\n\t\t\t\tPeerNode pn = peerNodes[i];\n\t\t\t\tlong routingBackedOffUntil = pn.getRoutingBackedOffUntil();\n\t\t\t\tboolean routingBackedOffNow = (now < routingBackedOffUntil);\n\t\t\t\tint backoff = (int)(Math.max(routingBackedOffUntil - now, 0));\n\t\t\t\tlong idle = pn.lastReceivedPacketTime();\n\t\t\t\t\n\t\t\t\t// Elements must be HTML encoded.\n\t\t\t\tObject[] row = new Object[9];  // where [0] is the pn object!\n\t\t\t\trows[i] = row;\n\t\t\t\t\n\t\t\t\tObject status;\n\t\t\t\tif(pn.isConnected()) {\n\t\t\t\t\tstatus = CONNECTED;\n\t\t\t\t\tif(routingBackedOffNow) {\n\t\t\t\t\t\tstatus = BACKED_OFF;\n\t\t\t\t\t}\n\t\t\t\t} else if(pn.hasCompletedHandshake() && pn.isVerifiedIncompatibleNewerVersion()) {\n\t\t\t\t\tstatus = TOO_NEW;\n\t\t\t\t} else if(pn.hasCompletedHandshake() && !Version.checkGoodVersion(pn.getVersion())) {\n\t\t\t\t\tstatus = INCOMPATIBLE;\n\t\t\t\t} else {\n\t\t\t\t\tstatus = DISCONNECTED;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trow[0] = pn;\n\t\t\t\trow[1] = status;\n\t\t\t\trow[2] = HTMLEncoder.encode(pn.getName());\n\t\t\t\trow[3] = pn.getDetectedPeer() != null ? HTMLEncoder.encode(pn.getDetectedPeer().toString()) : \"(address unknown)\";\n\t\t\t\trow[4] = HTMLEncoder.encode(pn.getVersion());\n\t\t\t\trow[5] = new Double(pn.getLocation().getValue());\n\t\t\t\trow[6] = backoff/1000 + \"/\" + pn.getRoutingBackoffLength()/1000;\n\t\t\t\tif (idle == -1) row[7] = \" \";\n\t\t\t\telse row[7] = new Long((now - idle) / 60000);\n\t\t\t\trow[8] = \"<input type=\\\"checkbox\\\" name=\\\"delete_node_\"+pn.hashCode()+\"\\\" />\";\n\t\t\t}\n\t\n\t\t\t// Sort array\n\t\t\tArrays.sort(rows, new MyComparator());\n\t\t\t\n\t\t\t// Convert status codes into status strings\n\t\t\tfor(int i=0;i<rows.length;i++) {\n\t\t\t\tObject[] row = rows[i];\n\t\t\t\tInteger x = (Integer) row[1];\n\t\t\t\tif(x == CONNECTED) {\n\t\t\t\t\trow[1] = \"<span class=\\\"peer_connected\\\">CONNECTED<\/span>\";\n\t\t\t\t\tnumberOfConnected++;\n\t\t\t\t}\n\t\t\t\telse if(x == BACKED_OFF) {\n\t\t\t\t\trow[1] = \"<span class=\\\"peer_backedoff\\\">BACKED OFF<\/span>\";\n\t\t\t\t\tnumberOfBackedOff++;\n\t\t\t\t}\n\t\t\t\telse if(x == TOO_NEW) {\n\t\t\t\t\trow[1] = \"<span class=\\\"peer_too_new\\\">TOO NEW<\/span>\";\n\t\t\t\t\tnumberOfTooNew++;\n\t\t\t\t}\n\t\t\t\telse if(x == INCOMPATIBLE) {\n\t\t\t\t\trow[1] = \"<span class=\\\"peer_incompatible\\\">INCOMPATIBLE<\/span>\";\n\t\t\t\t\tnumberOfIncompatible++;\n\t\t\t\t}\n\t\t\t\telse if(x == DISCONNECTED) {\n\t\t\t\t\trow[1] = \"<span class=\\\"peer_disconnected\\\">DISCONNECTED<\/span>\";\n\t\t\t\t\tnumberOfDisconnected++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Turn array into HTML\n\t\t\tfor(int i=0;i<rows.length;i++) {\n\t\t\t\tObject[] row = rows[i];\n\t\t\t\tbuf2.append(\"<tr>\");\n\t\t\t\tfor(int j=1;j<row.length;j++) {  // skip index 0 as it's the PeerNode object\n\t\t\t\t\tbuf2.append(\"<td>\"+row[j]+\"<\/td>\");\n\t\t\t\t}\n\t\t\t\tbuf2.append(\"<\/tr>\\n\");\n\t\t\t\t\n\t\t\t\tif (path.endsWith(\"displaymessagetypes.html\"))\n\t\t\t\t{\n\t\t\t\t\tbuf2.append(\"<tr class=\\\"messagetypes\\\"><td colspan=\\\"8\\\">\\n\");\n\t\t\t\t\tbuf2.append(\"<table class=\\\"sentmessagetypes\\\">\\n\");\n\t\t\t\t\tbuf2.append(\"<tr><th>Sent Message Type<\/th><th>Count<\/th><\/tr>\\n\");\n\t\t\t\t\tfor (Enumeration keys=((PeerNode)row[0]).getLocalNodeSentMessagesToStatistic().keys(); keys.hasMoreElements(); )\n\t\t\t\t\t{\n\t\t\t\t\t\tObject curkey = keys.nextElement();\n\t\t\t\t\t\tbuf2.append(\"<tr><td>\");\n\t\t\t\t\t\tbuf2.append((String)curkey);\n\t\t\t\t\t\tbuf2.append(\"<\/td><td>\");\n\t\t\t\t\t\tbuf2.append(((Long)((PeerNode)row[0]).getLocalNodeSentMessagesToStatistic().get(curkey)) + \"\");\n\t\t\t\t\t\tbuf2.append(\"<\/td><\/tr>\\n\");\n\t\t\t\t\t}\n\t\t\t\t\tbuf2.append(\"<\/table>\\n\");\n\t\t\n\t\t\t\t\tbuf2.append(\"<table class=\\\"receivedmessagetypes\\\">\\n\");\n\t\t\t\t\tbuf2.append(\"<tr><th>Received Message Type<\/th><th>Count<\/th><\/tr>\\n\");\n\t\t\t\t\tfor (Enumeration keys=((PeerNode)row[0]).getLocalNodeReceivedMessagesFromStatistic().keys(); keys.hasMoreElements(); )\n\t\t\t\t\t{\n\t\t\t\t\t\tObject curkey = keys.nextElement();\n\t\t\t\t\t\tbuf2.append(\"<tr><td>\");\n\t\t\t\t\t\tbuf2.append((String)curkey);\n\t\t\t\t\t\tbuf2.append(\"<\/td><td>\");\n\t\t\t\t\t\tbuf2.append(((Long)((PeerNode)row[0]).getLocalNodeReceivedMessagesFromStatistic().get(curkey)) + \"\");\n\t\t\t\t\t\tbuf2.append(\"<\/td><\/tr>\\n\");\n\t\t\t\t\t}\n\t\t\t\t\tbuf2.append(\"<\/table>\\n\");\n\t\t\t\t\tbuf2.append(\"<\/td><\/tr>\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf2.append(\"<\/table>\\n\");\n\t\t\t//\n\t\t\tbuf.append(\"<table class=\\\"darknet_connections\\\">\\n\");\n\t\t\tbuf.append(\"<tr><td>\");\n\t\t\tboolean separatorNeeded = false;\n\t\t\tif (numberOfConnected != 0) {\n\t\t\t\tbuf.append(\"<span class=\\\"peer_connected\\\">CONNECTED: \" + numberOfConnected + \"<\/span>\");\n\t\t\t\tseparatorNeeded = true;\n\t\t\t}\n\t\t\tif (numberOfBackedOff != 0) {\n\t\t\t\tif (separatorNeeded)\n\t\t\t\t\tbuf.append(\" | \");\n\t\t\t\tbuf.append(\"<span class=\\\"peer_backedoff\\\">BACKED OFF: \" + numberOfBackedOff + \"<\/span>\");\n\t\t\t\tseparatorNeeded = true;\n\t\t\t}\n\t\t\tif (numberOfTooNew != 0) {\n\t\t\t\tif (separatorNeeded)\n\t\t\t\t\tbuf.append(\" | \");\n\t\t\t\tbuf.append(\"<span class=\\\"peer_too_new\\\">TOO NEW: \" + numberOfTooNew + \"<\/span>\");\n\t\t\t\tseparatorNeeded = true;\n\t\t\t}\n\t\t\tif (numberOfIncompatible != 0) {\n\t\t\t\tif (separatorNeeded)\n\t\t\t\t\tbuf.append(\" | \");\n\t\t\t\tbuf.append(\"<span class=\\\"peer_incompatible\\\">INCOMPATIBLE: \" + numberOfIncompatible + \"<\/span>\");\n\t\t\t\tseparatorNeeded = true;\n\t\t\t}\n\t\t\tif (numberOfDisconnected != 0) {\n\t\t\t\tif (separatorNeeded)\n\t\t\t\t\tbuf.append(\" | \");\n\t\t\t\tbuf.append(\"<span class=\\\"peer_disconnected\\\">DISCONNECTED: \" + numberOfDisconnected + \"<\/span>\");\n\t\t\t\tseparatorNeeded = true;\n\t\t\t}\n\t\t\tbuf.append(\"<\/td><\/tr>\\n\");\n\t\t\tbuf.append(\"<\/table>\\n\");\n\t\t\tbuf.append(buf2);\n\t\t\t//\n\t\t\tbuf.append(\"<input type=\\\"submit\\\" name=\\\"disconnect\\\" value=\\\"Disconnect from selected peers\\\" />\\n\");\n\t\t\tbuf.append(\"<\/form>\\n\");\n\t\t}\n\t\tbuf.append(\"<\/div>\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\t\n\t\t// new connection box\n\t\tbuf.append(\"<div class=\\\"infobox infobox-normal\\\">\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-header\\\">\\n\");\n\t\tbuf.append(\"Connect to another node\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-content\\\">\\n\");\n\t\tbuf.append(\"<form action=\\\".\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\\n\");\n\t\tbuf.append(\"Reference:<br />\\n\");\n\t\tbuf.append(\"<textarea name=\\\"ref\\\" rows=\\\"8\\\" cols=\\\"74\\\"><\/textarea>\\n\");\n\t\tbuf.append(\"<br />\\n\");\n\t\tbuf.append(\"or URL:\\n\");\n\t\tbuf.append(\"<input type=\\\"text\\\" name=\\\"url\\\" />\\n\");\n\t\tbuf.append(\"<br />\\n\");\n\t\tbuf.append(\"or file:\\n\");\n\t\tbuf.append(\"<input type=\\\"file\\\" name=\\\"reffile\\\" />\\n\");\n\t\tbuf.append(\"<br />\\n\");\n\t\tbuf.append(\"<input type=\\\"submit\\\" name=\\\"connect\\\" value=\\\"Connect\\\" />\\n\");\n\t\tbuf.append(\"<\/form>\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\t\n\t\tctx.getPageMaker().makeTail(buf);\n\t\t\n\t\tthis.writeReply(ctx, 200, \"text/html\", \"OK\", buf.toString());\n\t}","id":54934,"modified_method":"public void handleGet(URI uri, ToadletContext ctx) throws ToadletContextClosedException, IOException, RedirectException {\n\t\t\n\t\tString path = uri.getPath();\n\t\tif(path.endsWith(\"myref.txt\")) {\n\t\t\tSimpleFieldSet fs = node.exportPublicFieldSet();\n\t\t\tStringWriter sw = new StringWriter();\n\t\t\tfs.writeTo(sw);\n\t\t\tthis.writeReply(ctx, 200, \"text/plain\", \"OK\", sw.toString());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tStringBuffer buf = new StringBuffer(1024);\n\t\t\n\t\t//HTTPRequest request = new HTTPRequest(uri);\n\n\t\tctx.getPageMaker().makeHead(buf, \"Darknet Connections\");\n\t\t\n\t\t// our reference\n\t\tbuf.append(\"<div class=\\\"infobox infobox-normal\\\">\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-header\\\">\\n\");\n\t\tbuf.append(\"<a href=\\\"myref.txt\\\">My Reference<\/a>\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-content\\\">\\n\");\n\t\tbuf.append(\"<pre id=\\\"reference\\\">\\n\");\n\t\tbuf.append(HTMLEncoder.encode(this.node.exportPublicFieldSet().toString()));\n\t\tbuf.append(\"<\/pre>\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\t\n\t\t// FIXME! We need some nice images\n\t\tPeerNode[] peerNodes = node.getDarknetConnections();\n\t\t\n\t\tlong now = System.currentTimeMillis();\n\t\t\n\t\tbuf.append(\"<div class=\\\"infobox infobox-normal\\\">\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-header\\\">\\n\");\n\t\tbuf.append(\"My Connections\");\n\t\tif (!path.endsWith(\"displaymessagetypes.html\"))\n\t\t{\n\t\t\tbuf.append(\" <a href=\\\"displaymessagetypes.html\\\">(more detailed)<\/a>\");\n\t\t}\n\t\tbuf.append(\"<\/div>\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-content\\\">\\n\");\n\t\tbuf.append(\"<form action=\\\".\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\\n\");\n\t\tStringBuffer buf2 = new StringBuffer(1024);\n\t\tbuf2.append(\"<table class=\\\"darknet_connections\\\">\\n\");\n\t\tbuf2.append(\"<tr><th>Status<\/th><th>Name<\/th><th><span title=\\\"Address:Port\\\" style=\\\"border-bottom:1px dotted;cursor:help;\\\">Address<\/span><\/th><th>Version<\/th><th>Location<\/th><th><span title=\\\"Temporarily disconnected. Other node busy? Wait time(s) remaining/total\\\" style=\\\"border-bottom:1px dotted;cursor:help;\\\">Backoff<\/span><\/th><th><span title=\\\"Number of minutes since the node was last seen in this session\\\" style=\\\"border-bottom:1px dotted;cursor:help;\\\">Idle<\/span><\/th><th><\/th><\/tr>\\n\");\n\t\t\n\t\tif (peerNodes.length == 0) {\n\t\t\tbuf2.append(\"<tr><td colspan=\\\"8\\\">No connections so far<\/td><\/tr>\\n\");\n\t\t\tbuf2.append(\"<\/table>\\n\");\n\t\t\t//\n\t\t\tbuf.append(buf2);\n\t\t}\n\t\telse {\n\t\t\tfinal Integer CONNECTED = new Integer(0);\n\t\t\tfinal Integer BACKED_OFF = new Integer(1);\n\t\t\tfinal Integer TOO_NEW = new Integer(2);\n\t\t\tfinal Integer INCOMPATIBLE = new Integer(3);\n\t\t\tfinal Integer DISCONNECTED = new Integer(4);\n\t\t\t\n\t\t\tint numberOfConnected = 0;\n\t\t\tint numberOfBackedOff = 0;\n\t\t\tint numberOfTooNew = 0;\n\t\t\tint numberOfIncompatible = 0;\n\t\t\tint numberOfDisconnected = 0;\n\t\t\t\n\t\t\t// Create array\n\t\t\tObject[][] rows = new Object[peerNodes.length][];\n\t\t\tfor(int i=0;i<peerNodes.length;i++) {\n\t\t\t\tPeerNode pn = peerNodes[i];\n\t\t\t\tlong routingBackedOffUntil = pn.getRoutingBackedOffUntil();\n\t\t\t\tboolean routingBackedOffNow = (now < routingBackedOffUntil);\n\t\t\t\tint backoff = (int)(Math.max(routingBackedOffUntil - now, 0));\n\t\t\t\tlong idle = pn.lastReceivedPacketTime();\n\t\t\t\t\n\t\t\t\t// Elements must be HTML encoded.\n\t\t\t\tObject[] row = new Object[9];  // where [0] is the pn object!\n\t\t\t\trows[i] = row;\n\t\t\t\t\n\t\t\t\tObject status;\n\t\t\t\tif(pn.isConnected()) {\n\t\t\t\t\tstatus = CONNECTED;\n\t\t\t\t\tif(routingBackedOffNow) {\n\t\t\t\t\t\tstatus = BACKED_OFF;\n\t\t\t\t\t}\n\t\t\t\t} else if(pn.hasCompletedHandshake() && pn.isVerifiedIncompatibleNewerVersion()) {\n\t\t\t\t\tstatus = TOO_NEW;\n\t\t\t\t} else if(pn.hasCompletedHandshake() && !Version.checkGoodVersion(pn.getVersion())) {\n\t\t\t\t\tstatus = INCOMPATIBLE;\n\t\t\t\t} else {\n\t\t\t\t\tstatus = DISCONNECTED;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trow[0] = pn;\n\t\t\t\trow[1] = status;\n\t\t\t\trow[2] = HTMLEncoder.encode(pn.getName());\n\t\t\t\trow[3] = pn.getDetectedPeer() != null ? HTMLEncoder.encode(pn.getDetectedPeer().toString()) : \"(address unknown)\";\n\t\t\t\trow[4] = HTMLEncoder.encode(pn.getVersion());\n\t\t\t\trow[5] = new Double(pn.getLocation().getValue());\n\t\t\t\trow[6] = backoff/1000 + \"/\" + pn.getRoutingBackoffLength()/1000;\n\t\t\t\tif (idle == -1) row[7] = \" \";\n\t\t\t\telse row[7] = new Long((now - idle) / 60000);\n\t\t\t\trow[8] = \"<input type=\\\"checkbox\\\" name=\\\"delete_node_\"+pn.hashCode()+\"\\\" />\";\n\t\t\t}\n\t\n\t\t\t// Sort array\n\t\t\tArrays.sort(rows, new MyComparator());\n\t\t\t\n\t\t\t// Convert status codes into status strings\n\t\t\tfor(int i=0;i<rows.length;i++) {\n\t\t\t\tObject[] row = rows[i];\n\t\t\t\tInteger x = (Integer) row[1];\n\t\t\t\tif(x == CONNECTED) {\n\t\t\t\t\trow[1] = \"<span class=\\\"peer_connected\\\">CONNECTED<\/span>\";\n\t\t\t\t\tnumberOfConnected++;\n\t\t\t\t}\n\t\t\t\telse if(x == BACKED_OFF) {\n\t\t\t\t\trow[1] = \"<span class=\\\"peer_backedoff\\\">BACKED OFF<\/span>\";\n\t\t\t\t\tnumberOfBackedOff++;\n\t\t\t\t}\n\t\t\t\telse if(x == TOO_NEW) {\n\t\t\t\t\trow[1] = \"<span class=\\\"peer_too_new\\\">TOO NEW<\/span>\";\n\t\t\t\t\tnumberOfTooNew++;\n\t\t\t\t}\n\t\t\t\telse if(x == INCOMPATIBLE) {\n\t\t\t\t\trow[1] = \"<span class=\\\"peer_incompatible\\\">INCOMPATIBLE<\/span>\";\n\t\t\t\t\tnumberOfIncompatible++;\n\t\t\t\t}\n\t\t\t\telse if(x == DISCONNECTED) {\n\t\t\t\t\trow[1] = \"<span class=\\\"peer_disconnected\\\">DISCONNECTED<\/span>\";\n\t\t\t\t\tnumberOfDisconnected++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Turn array into HTML\n\t\t\tfor(int i=0;i<rows.length;i++) {\n\t\t\t\tObject[] row = rows[i];\n\t\t\t\tbuf2.append(\"<tr>\");\n\t\t\t\tfor(int j=1;j<row.length;j++) {  // skip index 0 as it's the PeerNode object\n\t\t\t\t\tbuf2.append(\"<td>\"+row[j]+\"<\/td>\");\n\t\t\t\t}\n\t\t\t\tbuf2.append(\"<\/tr>\\n\");\n\t\t\t\t\n\t\t\t\tif (path.endsWith(\"displaymessagetypes.html\"))\n\t\t\t\t{\n\t\t\t\t\tbuf2.append(\"<tr class=\\\"messagetypes\\\"><td colspan=\\\"8\\\">\\n\");\n\t\t\t\t\tbuf2.append(\"<table class=\\\"sentmessagetypes\\\">\\n\");\n\t\t\t\t\tbuf2.append(\"<tr><th>Sent Message Type<\/th><th>Count<\/th><\/tr>\\n\");\n\t\t\t\t\tfor (Enumeration keys=((PeerNode)row[0]).getLocalNodeSentMessagesToStatistic().keys(); keys.hasMoreElements(); )\n\t\t\t\t\t{\n\t\t\t\t\t\tObject curkey = keys.nextElement();\n\t\t\t\t\t\tbuf2.append(\"<tr><td>\");\n\t\t\t\t\t\tbuf2.append((String)curkey);\n\t\t\t\t\t\tbuf2.append(\"<\/td><td>\");\n\t\t\t\t\t\tbuf2.append(((Long)((PeerNode)row[0]).getLocalNodeSentMessagesToStatistic().get(curkey)) + \"\");\n\t\t\t\t\t\tbuf2.append(\"<\/td><\/tr>\\n\");\n\t\t\t\t\t}\n\t\t\t\t\tbuf2.append(\"<\/table>\\n\");\n\t\t\n\t\t\t\t\tbuf2.append(\"<table class=\\\"receivedmessagetypes\\\">\\n\");\n\t\t\t\t\tbuf2.append(\"<tr><th>Received Message Type<\/th><th>Count<\/th><\/tr>\\n\");\n\t\t\t\t\tfor (Enumeration keys=((PeerNode)row[0]).getLocalNodeReceivedMessagesFromStatistic().keys(); keys.hasMoreElements(); )\n\t\t\t\t\t{\n\t\t\t\t\t\tObject curkey = keys.nextElement();\n\t\t\t\t\t\tbuf2.append(\"<tr><td>\");\n\t\t\t\t\t\tbuf2.append((String)curkey);\n\t\t\t\t\t\tbuf2.append(\"<\/td><td>\");\n\t\t\t\t\t\tbuf2.append(((Long)((PeerNode)row[0]).getLocalNodeReceivedMessagesFromStatistic().get(curkey)) + \"\");\n\t\t\t\t\t\tbuf2.append(\"<\/td><\/tr>\\n\");\n\t\t\t\t\t}\n\t\t\t\t\tbuf2.append(\"<\/table>\\n\");\n\t\t\t\t\tbuf2.append(\"<\/td><\/tr>\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf2.append(\"<\/table>\\n\");\n\t\t\t//\n\t\t\tbuf.append(\"<table class=\\\"darknet_connections\\\">\\n\");\n\t\t\tbuf.append(\"<tr><td>\");\n\t\t\tboolean separatorNeeded = false;\n\t\t\tif (numberOfConnected != 0) {\n\t\t\t\tbuf.append(\"<span class=\\\"peer_connected\\\">CONNECTED: \" + numberOfConnected + \"<\/span>\");\n\t\t\t\tseparatorNeeded = true;\n\t\t\t}\n\t\t\tif (numberOfBackedOff != 0) {\n\t\t\t\tif (separatorNeeded)\n\t\t\t\t\tbuf.append(\" | \");\n\t\t\t\tbuf.append(\"<span class=\\\"peer_backedoff\\\">BACKED OFF: \" + numberOfBackedOff + \"<\/span>\");\n\t\t\t\tseparatorNeeded = true;\n\t\t\t}\n\t\t\tif (numberOfTooNew != 0) {\n\t\t\t\tif (separatorNeeded)\n\t\t\t\t\tbuf.append(\" | \");\n\t\t\t\tbuf.append(\"<span class=\\\"peer_too_new\\\">TOO NEW: \" + numberOfTooNew + \"<\/span>\");\n\t\t\t\tseparatorNeeded = true;\n\t\t\t}\n\t\t\tif (numberOfIncompatible != 0) {\n\t\t\t\tif (separatorNeeded)\n\t\t\t\t\tbuf.append(\" | \");\n\t\t\t\tbuf.append(\"<span class=\\\"peer_incompatible\\\">INCOMPATIBLE: \" + numberOfIncompatible + \"<\/span>\");\n\t\t\t\tseparatorNeeded = true;\n\t\t\t}\n\t\t\tif (numberOfDisconnected != 0) {\n\t\t\t\tif (separatorNeeded)\n\t\t\t\t\tbuf.append(\" | \");\n\t\t\t\tbuf.append(\"<span class=\\\"peer_disconnected\\\">DISCONNECTED: \" + numberOfDisconnected + \"<\/span>\");\n\t\t\t\tseparatorNeeded = true;\n\t\t\t}\n\t\t\tbuf.append(\"<\/td><\/tr>\\n\");\n\t\t\tbuf.append(\"<\/table>\\n\");\n\t\t\t//\n\t\t\tbuf.append(buf2);\n\t\t\t//\n\t\t\tbuf.append(\"<input type=\\\"submit\\\" name=\\\"disconnect\\\" value=\\\"Disconnect from selected peers\\\" />\\n\");\n\t\t\tbuf.append(\"<\/form>\\n\");\n\t\t}\n\t\tbuf.append(\"<\/div>\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\t\n\t\t// new connection box\n\t\tbuf.append(\"<div class=\\\"infobox infobox-normal\\\">\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-header\\\">\\n\");\n\t\tbuf.append(\"Connect to another node\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-content\\\">\\n\");\n\t\tbuf.append(\"<form action=\\\".\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\\n\");\n\t\tbuf.append(\"Reference:<br />\\n\");\n\t\tbuf.append(\"<textarea name=\\\"ref\\\" rows=\\\"8\\\" cols=\\\"74\\\"><\/textarea>\\n\");\n\t\tbuf.append(\"<br />\\n\");\n\t\tbuf.append(\"or URL:\\n\");\n\t\tbuf.append(\"<input type=\\\"text\\\" name=\\\"url\\\" />\\n\");\n\t\tbuf.append(\"<br />\\n\");\n\t\tbuf.append(\"or file:\\n\");\n\t\tbuf.append(\"<input type=\\\"file\\\" name=\\\"reffile\\\" />\\n\");\n\t\tbuf.append(\"<br />\\n\");\n\t\tbuf.append(\"<input type=\\\"submit\\\" name=\\\"connect\\\" value=\\\"Connect\\\" />\\n\");\n\t\tbuf.append(\"<\/form>\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\tbuf.append(\"<\/div>\\n\");\n\t\t\n\t\tctx.getPageMaker().makeTail(buf);\n\t\t\n\t\tthis.writeReply(ctx, 200, \"text/html\", \"OK\", buf.toString());\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"private void writeSizeCell(long dataSize, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tif(dataSize >= 0)\n\t\t\tbuf.append(SizeUtil.formatSize(dataSize));\n\t\telse\n\t\t\tbuf.append(\"UNKNOWN\");\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","id":54935,"modified_method":"private void writeSizeCell(long dataSize, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tif(dataSize >= 0)\n\t\t\tbuf.append(\"<span class=\\\"filesize_is\\\">\" + SizeUtil.formatSize(dataSize) + \"<\/span>\");\n\t\telse\n\t\t\tbuf.append(\"<span class=\\\"filesize_unknown\\\">unknown<\/span>\");\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"public void handleGet(URI uri, ToadletContext ctx) \n\tthrows ToadletContextClosedException, IOException, RedirectException {\n\t\t\n\t\tStringBuffer buf = new StringBuffer(2048);\n\t\t\n\t\tctx.getPageMaker().makeHead(buf, \"Queued Requests\");\n\t\t\n\t\t// First, get the queued requests, and separate them into different types.\n\t\t\n\t\tLinkedList completedDownloadToDisk = new LinkedList();\n\t\tLinkedList completedDownloadToTemp = new LinkedList();\n\t\tLinkedList completedUpload = new LinkedList();\n\t\tLinkedList completedDirUpload = new LinkedList();\n\t\t\n\t\tLinkedList failedDownload = new LinkedList();\n\t\tLinkedList failedUpload = new LinkedList();\n\t\tLinkedList failedDirUpload = new LinkedList();\n\t\t\n\t\tLinkedList uncompletedDownload = new LinkedList();\n\t\tLinkedList uncompletedUpload = new LinkedList();\n\t\tLinkedList uncompletedDirUpload = new LinkedList();\n\t\t\n\t\tClientRequest[] reqs = fcp.getGlobalRequests();\n\t\tLogger.minor(this, \"Request count: \"+reqs.length);\n\t\t\n\t\tfor(int i=0;i<reqs.length;i++) {\n\t\t\tClientRequest req = reqs[i];\n\t\t\tif(req instanceof ClientGet) {\n\t\t\t\tClientGet cg = (ClientGet) req;\n\t\t\t\tif(cg.hasSucceeded()) {\n\t\t\t\t\tif(cg.isDirect())\n\t\t\t\t\t\tcompletedDownloadToTemp.add(cg);\n\t\t\t\t\telse if(cg.isToDisk())\n\t\t\t\t\t\tcompletedDownloadToDisk.add(cg);\n\t\t\t\t\telse\n\t\t\t\t\t\t// FIXME\n\t\t\t\t\t\tLogger.error(this, \"Don't know what to do with \"+cg);\n\t\t\t\t} else if(cg.hasFinished()) {\n\t\t\t\t\tfailedDownload.add(cg);\n\t\t\t\t} else {\n\t\t\t\t\tuncompletedDownload.add(cg);\n\t\t\t\t}\n\t\t\t} else if(req instanceof ClientPut) {\n\t\t\t\tClientPut cp = (ClientPut) req;\n\t\t\t\tif(cp.hasSucceeded()) {\n\t\t\t\t\tcompletedUpload.add(cp);\n\t\t\t\t} else if(cp.hasFinished()) {\n\t\t\t\t\tfailedUpload.add(cp);\n\t\t\t\t} else {\n\t\t\t\t\tuncompletedUpload.add(cp);\n\t\t\t\t}\n\t\t\t} else if(req instanceof ClientPutDir) {\n\t\t\t\tClientPutDir cp = (ClientPutDir) req;\n\t\t\t\tif(cp.hasSucceeded()) {\n\t\t\t\t\tcompletedDirUpload.add(cp);\n\t\t\t\t} else if(cp.hasFinished()) {\n\t\t\t\t\tfailedDirUpload.add(cp);\n\t\t\t\t} else {\n\t\t\t\t\tuncompletedDirUpload.add(cp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(!(completedDownloadToTemp.isEmpty() && completedDownloadToDisk.isEmpty() &&\n\t\t\t\tcompletedUpload.isEmpty() && completedDirUpload.isEmpty())) {\n\t\t\twriteBigHeading(\"Completed requests\", buf);\n\t\t\t\n\t\t\tif(!completedDownloadToTemp.isEmpty()) {\n\t\t\t\twriteTableHead(\"Completed downloads to temporary space\", new String[] { \"\", \"Identifier\", \"Size\", \"Type\", \"Download\", \"Persistence\", \"Key\" }, buf );\n\t\t\t\tfor(Iterator i = completedDownloadToTemp.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getURI(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteDownloadCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!completedDownloadToDisk.isEmpty()) {\n\t\t\t\twriteTableHead(\"Completed downloads to disk\", new String[] { \"\", \"Identifier\", \"Filename\", \"Size\", \"Type\", \"Download\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=completedDownloadToDisk.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getURI(), buf);\n\t\t\t\t\twriteFilenameCell(p.getDestFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteDownloadCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\n\t\t\tif(!completedUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Completed uploads\", new String[] { \"\", \"Key\", \"Filename\", \"Size\", \"Type\", \"Persistence\", \"Identifier\" }, buf);\n\t\t\t\tfor(Iterator i=completedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPut p = (ClientPut) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getOrigFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!completedDirUpload.isEmpty()) {\n\t\t\t\t// FIXME include filename??\n\t\t\t\twriteTableHead(\"Completed directory uploads\", new String[] { \"\", \"Identifier\", \"Files\", \"Total Size\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=completedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPutDir p = (ClientPutDir) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\twriteNumberCell(p.getNumberOfFiles(), buf);\n\t\t\t\t\twriteSizeCell(p.getTotalDataSize(), buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t}\n\n\t\t/* FIXME color-coded progress bars.\n\t\t * It would be really nice to have a color-coded progress bar.\n\t\t * We can then show what part is successful, what part isn't tried yet,\n\t\t * what part has each different well known error code...\n\t\t */\n\t\t\n\t\tif(!(failedDownload.isEmpty() && failedUpload.isEmpty())) {\n\t\t\twriteBigHeading(\"Failed requests\", buf);\n\t\t\tif(!failedDownload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Failed downloads\", new String[] { \"\", \"Identifier\", \"Filename\", \"Size\", \"Type\", \"Success\", \"Reason\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=failedDownload.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getDestFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twriteFailureReasonCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!failedUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Failed uploads\", new String[] { \"\", \"Identifier\", \"Filename\", \"Size\", \"Type\", \"Success\", \"Reason\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=failedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPut p = (ClientPut) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getOrigFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twriteFailureReasonCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!failedDirUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Failed directory uploads\", new String[] { \"\", \"Identifier\", \"Files\", \"Total Size\", \"Success\", \"Reason\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=failedDirUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPutDir p = (ClientPutDir) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\twriteNumberCell(p.getNumberOfFiles(), buf);\n\t\t\t\t\twriteSizeCell(p.getTotalDataSize(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twriteFailureReasonCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(!(uncompletedDownload.isEmpty() && uncompletedUpload.isEmpty() && \n\t\t\t\tuncompletedDirUpload.isEmpty())) {\n\t\t\twriteBigHeading(\"Requests in progress\", buf);\n\t\t\tif(!uncompletedDownload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Downloads in progress\", new String[] { \"\", \"Identifier\", \"Filename\", \"Size\", \"Type\", \"Success\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i = uncompletedDownload.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getDestFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!uncompletedUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Uploads in progress\", new String[] { \"\", \"Identifier\", \"Filename\", \"Size\", \"Type\", \"Success\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i = uncompletedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPut p = (ClientPut) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getOrigFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!uncompletedDirUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Directory uploads in progress\", new String[] { \"\", \"Identifier\", \"Files\", \"Total Size\", \"Success\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=uncompletedDirUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPutDir p = (ClientPutDir) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\twriteNumberCell(p.getNumberOfFiles(), buf);\n\t\t\t\t\twriteSizeCell(p.getTotalDataSize(), buf);\n\t\t\t\t\twriteSuccessFractionCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t}\n\t\t\n\t\tctx.getPageMaker().makeTail(buf);\n\t\t\n\t\tthis.writeReply(ctx, 200, \"text/html\", \"OK\", buf.toString());\n\t}","id":54936,"modified_method":"public void handleGet(URI uri, ToadletContext ctx) \n\tthrows ToadletContextClosedException, IOException, RedirectException {\n\t\t\n\t\tStringBuffer buf = new StringBuffer(2048);\n\t\t\n\t\tctx.getPageMaker().makeHead(buf, \"Queued Requests\");\n\t\t\n\t\t// First, get the queued requests, and separate them into different types.\n\t\t\n\t\tLinkedList completedDownloadToDisk = new LinkedList();\n\t\tLinkedList completedDownloadToTemp = new LinkedList();\n\t\tLinkedList completedUpload = new LinkedList();\n\t\tLinkedList completedDirUpload = new LinkedList();\n\t\t\n\t\tLinkedList failedDownload = new LinkedList();\n\t\tLinkedList failedUpload = new LinkedList();\n\t\tLinkedList failedDirUpload = new LinkedList();\n\t\t\n\t\tLinkedList uncompletedDownload = new LinkedList();\n\t\tLinkedList uncompletedUpload = new LinkedList();\n\t\tLinkedList uncompletedDirUpload = new LinkedList();\n\t\t\n\t\tClientRequest[] reqs = fcp.getGlobalRequests();\n\t\tLogger.minor(this, \"Request count: \"+reqs.length);\n\t\t\n\t\tfor(int i=0;i<reqs.length;i++) {\n\t\t\tClientRequest req = reqs[i];\n\t\t\tif(req instanceof ClientGet) {\n\t\t\t\tClientGet cg = (ClientGet) req;\n\t\t\t\tif(cg.hasSucceeded()) {\n\t\t\t\t\tif(cg.isDirect())\n\t\t\t\t\t\tcompletedDownloadToTemp.add(cg);\n\t\t\t\t\telse if(cg.isToDisk())\n\t\t\t\t\t\tcompletedDownloadToDisk.add(cg);\n\t\t\t\t\telse\n\t\t\t\t\t\t// FIXME\n\t\t\t\t\t\tLogger.error(this, \"Don't know what to do with \"+cg);\n\t\t\t\t} else if(cg.hasFinished()) {\n\t\t\t\t\tfailedDownload.add(cg);\n\t\t\t\t} else {\n\t\t\t\t\tuncompletedDownload.add(cg);\n\t\t\t\t}\n\t\t\t} else if(req instanceof ClientPut) {\n\t\t\t\tClientPut cp = (ClientPut) req;\n\t\t\t\tif(cp.hasSucceeded()) {\n\t\t\t\t\tcompletedUpload.add(cp);\n\t\t\t\t} else if(cp.hasFinished()) {\n\t\t\t\t\tfailedUpload.add(cp);\n\t\t\t\t} else {\n\t\t\t\t\tuncompletedUpload.add(cp);\n\t\t\t\t}\n\t\t\t} else if(req instanceof ClientPutDir) {\n\t\t\t\tClientPutDir cp = (ClientPutDir) req;\n\t\t\t\tif(cp.hasSucceeded()) {\n\t\t\t\t\tcompletedDirUpload.add(cp);\n\t\t\t\t} else if(cp.hasFinished()) {\n\t\t\t\t\tfailedDirUpload.add(cp);\n\t\t\t\t} else {\n\t\t\t\t\tuncompletedDirUpload.add(cp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(!(completedDownloadToTemp.isEmpty() && completedDownloadToDisk.isEmpty() &&\n\t\t\t\tcompletedUpload.isEmpty() && completedDirUpload.isEmpty())) {\n\t\t\twriteBigHeading(\"Completed requests\", buf);\n\t\t\t\n\t\t\tif(!completedDownloadToTemp.isEmpty()) {\n\t\t\t\twriteTableHead(\"Completed downloads to temporary space\", new String[] { \"\", \"Identifier\", \"Size\", \"MIME-Type\", \"Download\", \"Persistence\", \"Key\" }, buf );\n\t\t\t\tfor(Iterator i = completedDownloadToTemp.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getURI(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteDownloadCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!completedDownloadToDisk.isEmpty()) {\n\t\t\t\twriteTableHead(\"Completed downloads to disk\", new String[] { \"\", \"Identifier\", \"Filename\", \"Size\", \"MIME-Type\", \"Download\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=completedDownloadToDisk.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getURI(), buf);\n\t\t\t\t\twriteFilenameCell(p.getDestFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteDownloadCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\n\t\t\tif(!completedUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Completed uploads\", new String[] { \"\", \"Key\", \"Filename\", \"Size\", \"MIME-Type\", \"Persistence\", \"Identifier\" }, buf);\n\t\t\t\tfor(Iterator i=completedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPut p = (ClientPut) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getOrigFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!completedDirUpload.isEmpty()) {\n\t\t\t\t// FIXME include filename??\n\t\t\t\twriteTableHead(\"Completed directory uploads\", new String[] { \"\", \"Identifier\", \"Files\", \"Total Size\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=completedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPutDir p = (ClientPutDir) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\twriteNumberCell(p.getNumberOfFiles(), buf);\n\t\t\t\t\twriteSizeCell(p.getTotalDataSize(), buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\twriteBigEnding(buf);\n\t\t}\n\n\t\t/* FIXME color-coded progress bars.\n\t\t * It would be really nice to have a color-coded progress bar.\n\t\t * We can then show what part is successful, what part isn't tried yet,\n\t\t * what part has each different well known error code...\n\t\t */\n\t\t\n\t\tif(!(failedDownload.isEmpty() && failedUpload.isEmpty())) {\n\t\t\twriteBigHeading(\"Failed requests\", buf);\n\t\t\tif(!failedDownload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Failed downloads\", new String[] { \"\", \"Identifier\", \"Filename\", \"Size\", \"MIME-Type\", \"Progress\", \"Reason\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=failedDownload.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getDestFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteProgressFractionCell(p, buf);\n\t\t\t\t\twriteFailureReasonCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!failedUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Failed uploads\", new String[] { \"\", \"Identifier\", \"Filename\", \"Size\", \"MIME-Type\", \"Progress\", \"Reason\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=failedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPut p = (ClientPut) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getOrigFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteProgressFractionCell(p, buf);\n\t\t\t\t\twriteFailureReasonCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!failedDirUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Failed directory uploads\", new String[] { \"\", \"Identifier\", \"Files\", \"Total Size\", \"Progress\", \"Reason\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=failedDirUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPutDir p = (ClientPutDir) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\twriteNumberCell(p.getNumberOfFiles(), buf);\n\t\t\t\t\twriteSizeCell(p.getTotalDataSize(), buf);\n\t\t\t\t\twriteProgressFractionCell(p, buf);\n\t\t\t\t\twriteFailureReasonCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\twriteBigEnding(buf);\n\t\t}\n\t\t\n\t\tif(!(uncompletedDownload.isEmpty() && uncompletedUpload.isEmpty() && \n\t\t\t\tuncompletedDirUpload.isEmpty())) {\n\t\t\twriteBigHeading(\"Requests in progress\", buf);\n\t\t\tif(!uncompletedDownload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Downloads in progress\", new String[] { \"\", \"Identifier\", \"Filename\", \"Size\", \"MIME-Type\", \"Progress\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i = uncompletedDownload.iterator();i.hasNext();) {\n\t\t\t\t\tClientGet p = (ClientGet) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getDestFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteProgressFractionCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!uncompletedUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Uploads in progress\", new String[] { \"\", \"Identifier\", \"Filename\", \"Size\", \"MIME-Type\", \"Progress\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i = uncompletedUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPut p = (ClientPut) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\tif(p.isDirect())\n\t\t\t\t\t\twriteDirectCell(buf);\n\t\t\t\t\telse\n\t\t\t\t\t\twriteFilenameCell(p.getOrigFilename(), buf);\n\t\t\t\t\twriteSizeCell(p.getDataSize(), buf);\n\t\t\t\t\twriteTypeCell(p.getMIMEType(), buf);\n\t\t\t\t\twriteProgressFractionCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\t\n\t\t\tif(!uncompletedDirUpload.isEmpty()) {\n\t\t\t\twriteTableHead(\"Directory uploads in progress\", new String[] { \"\", \"Identifier\", \"Files\", \"Total Size\", \"Progress\", \"Persistence\", \"Key\" }, buf);\n\t\t\t\tfor(Iterator i=uncompletedDirUpload.iterator();i.hasNext();) {\n\t\t\t\t\tClientPutDir p = (ClientPutDir) i.next();\n\t\t\t\t\twriteRowStart(buf);\n\t\t\t\t\twriteDeleteCell(p, buf);\n\t\t\t\t\twriteIdentifierCell(p, p.getFinalURI(), buf);\n\t\t\t\t\twriteNumberCell(p.getNumberOfFiles(), buf);\n\t\t\t\t\twriteSizeCell(p.getTotalDataSize(), buf);\n\t\t\t\t\twriteProgressFractionCell(p, buf);\n\t\t\t\t\twritePersistenceCell(p, buf);\n\t\t\t\t\twriteKeyCell(p.getFinalURI(), buf);\n\t\t\t\t\twriteRowEnd(buf);\n\t\t\t\t}\n\t\t\t\twriteTableEnd(buf);\n\t\t\t}\n\t\t\twriteBigEnding(buf);\n\t\t}\n\t\t\n\t\tctx.getPageMaker().makeTail(buf);\n\t\t\n\t\tthis.writeReply(ctx, 200, \"text/html\", \"OK\", buf.toString());\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"private void writeBigHeading(String string, StringBuffer buf) {\n\t\tbuf.append(\"<h1>\");\n\t\tbuf.append(string);\n\t\tbuf.append(\"<\/h1>\\n\");\n\t}","id":54937,"modified_method":"private void writeBigHeading(String header, StringBuffer buf) {\n\t\tbuf.append(\"<div class=\\\"infobox infobox-normal\\\">\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-header\\\">\\n\");\n\t\tbuf.append(header);\n\t\tbuf.append(\"<\/div>\\n\");\n\t\tbuf.append(\"<div class=\\\"infobox-content\\\">\\n\");\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"private void writeFilenameCell(File destFilename, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tif(destFilename == null)\n\t\t\tbuf.append(\"NONE\");\n\t\telse\n\t\t\tbuf.append(HTMLEncoder.encode(destFilename.toString()));\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","id":54938,"modified_method":"private void writeFilenameCell(File destFilename, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tif(destFilename == null)\n\t\t\tbuf.append(\"<span class=\\\"filename_none\\\">none<\/span>\");\n\t\telse\n\t\t\tbuf.append(\"<span class=\\\"filename_is\\\">\" + HTMLEncoder.encode(destFilename.toString()) + \"<\/span>\");\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"private void writeDirectCell(StringBuffer buf) {\n\t\tbuf.append(\"<td>DIRECT<\/td>\\n\");\n\t}","id":54939,"modified_method":"private void writeDirectCell(StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tbuf.append(\"<span class=\\\"filename_direct\\\">direct<\/span>\");\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"private void writeNumberCell(int numberOfFiles, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tbuf.append(numberOfFiles);\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","id":54940,"modified_method":"private void writeNumberCell(int numberOfFiles, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tbuf.append(\"<span class=\\\"number_of_files\\\">\" + numberOfFiles + \"<\/span>\");\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"private void writeSuccessFractionCell(ClientRequest p, StringBuffer buf) {\n\t\tdouble frac = p.getSuccessFraction();\n\t\tboolean b = p.isTotalFinalized();\n\t\tif(frac < 0) {\n\t\t\tbuf.append(\"<td>UNKNOWN<\/td>\\n\");\n\t\t} else {\n\t\t\tbuf.append(\"<td>\");\n\t\t\tif(b)\n\t\t\t\tbuf.append(\"<font color=\\\"green\\\">\");\n\t\t\tNumberFormat nf = NumberFormat.getInstance();\n\t\t\tnf.setMaximumFractionDigits(1);\n\t\t\tbuf.append(nf.format(frac*100));\n\t\t\tif(b)\n\t\t\t\tbuf.append(\"%<\/font><\/td>\");\n\t\t\telse\n\t\t\t\tbuf.append(\"%<\/td>\\n\");\n\t\t}\n\t}","id":54941,"modified_method":"private void writeProgressFractionCell(ClientRequest p, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tdouble frac = p.getSuccessFraction();\n\t\tboolean b = p.isTotalFinalized();\n\t\tif(frac < 0) {\n\t\t\tbuf.append(\"<span class=\\\"progress_fraction_unknown\\\">unknown<\/span>\");\n\t\t} else {\n\t\t\tif(b)\n\t\t\t\tbuf.append(\"<span class=\\\"progress_fraction_finalized\\\">\");\n\t\t\telse\n\t\t\t\tbuf.append(\"<span class=\\\"progress_fraction_not_finalized\\\">\");\n\t\t\tNumberFormat nf = NumberFormat.getInstance();\n\t\t\tnf.setMaximumFractionDigits(1);\n\t\t\tbuf.append(nf.format(frac*100));\n\t\t\tbuf.append(\"%<\/span>\");\n\t\t}\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"private void writeTableHead(String string, String[] strings, StringBuffer buf) {\n\t\tbuf.append(\"<h2>\");\n\t\tbuf.append(string);\n\t\tbuf.append(\"<\/h2>\\n\");\n\t\tbuf.append(\"<table border=\\\"0\\\">\\n\");\n\t\tbuf.append(\"<tr>\");\n\t\tfor(int i=0;i<strings.length;i++) {\n\t\t\tbuf.append(\"<th>\");\n\t\t\tbuf.append(strings[i]);\n\t\t\tbuf.append(\"<\/th>\");\n\t\t}\n\t\tbuf.append(\"\\n\");\n\t}","id":54942,"modified_method":"private void writeTableHead(String tabletitle, String[] strings, StringBuffer buf) {\n\t\tbuf.append(\"<div class=\\\"queue_tabletitle\\\">\" + tabletitle + \"<\/div>\");\n\t\tbuf.append(\"<table class=\\\"queue\\\">\\n\");\n\t\tbuf.append(\"<tr>\");\n\t\tfor(int i=0;i<strings.length;i++) {\n\t\t\tbuf.append(\"<th>\");\n\t\t\tbuf.append(strings[i]);\n\t\t\tbuf.append(\"<\/th>\");\n\t\t}\n\t\tbuf.append(\"<\/tr>\\n\");\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"private void writeKeyCell(FreenetURI uri, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tif(uri != null) {\n\t\t\tbuf.append(\"<a href=\\\"/\");\n\t\t\tString u = uri.toString(false);\n\t\t\tbuf.append(URLEncoder.encode(u));\n\t\t\tbuf.append(\"\\\">\");\n\t\t\t// FIXME too long? maybe only show the human readable bit?\n\t\t\tbuf.append(HTMLEncoder.encode(u));\n\t\t\tbuf.append(\"<\/a>\");\n\t\t} else {\n\t\t\tbuf.append(\"UNKNOWN\");\n\t\t}\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","id":54943,"modified_method":"private void writeKeyCell(FreenetURI uri, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tif(uri != null) {\n\t\t\tbuf.append(\"<span class=\\\"key_is\\\"><a href=\\\"/\");\n\t\t\tString u = uri.toString(false);\n\t\t\tbuf.append(URLEncoder.encode(u));\n\t\t\tbuf.append(\"\\\">\");\n\t\t\t// FIXME too long? maybe only show the human readable bit?\n\t\t\tbuf.append(HTMLEncoder.encode(u));\n\t\t\tbuf.append(\"<\/a><\/span>\");\n\t\t} else {\n\t\t\tbuf.append(\"<span class=\\\"key_unknown\\\">unknown<\/span>\");\n\t\t}\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"private void writeTypeCell(String type, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tif(type != null)\n\t\t\tbuf.append(type);\n\t\telse\n\t\t\tbuf.append(\"UNKNOWN\");\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","id":54944,"modified_method":"private void writeTypeCell(String type, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tif(type != null)\n\t\t\tbuf.append(\"<span class=\\\"mimetype_is\\\">\" + type + \"<\/span>\");\n\t\telse\n\t\t\tbuf.append(\"<span class=\\\"mimetype_unknown\\\">unknown<\/span>\");\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"private void writePersistenceCell(ClientRequest p, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tif(!p.isPersistent())\n\t\t\tbuf.append(\"<font color=\\\"black\\\">NONE<\/font>\");\n\t\telse if(!p.isPersistentForever())\n\t\t\tbuf.append(\"<font color=\\\"blue\\\">REBOOT<\/font>\");\n\t\telse\n\t\t\tbuf.append(\"<font color=\\\"green\\\">FOREVER<\/font>\");\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","id":54945,"modified_method":"private void writePersistenceCell(ClientRequest p, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tif(!p.isPersistent())\n\t\t\tbuf.append(\"<span class=\\\"persistence_none\\\">none<\/span>\");\n\t\telse if(!p.isPersistentForever())\n\t\t\tbuf.append(\"<span class=\\\"persistence_reboot\\\">reboot<\/span>\");\n\t\telse\n\t\t\tbuf.append(\"<span class=\\\"persistence_forever\\\">forever<\/span>\");\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"private void writeFailureReasonCell(ClientRequest p, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tString s = p.getFailureReason();\n\t\tif(s == null)\n\t\t\tbuf.append(\"UNKNOWN\");\n\t\telse\n\t\t\tbuf.append(s);\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","id":54946,"modified_method":"private void writeFailureReasonCell(ClientRequest p, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tString s = p.getFailureReason();\n\t\tif(s == null)\n\t\t\tbuf.append(\"<span class=\\\"failure_reason_unknown\\\">unknown<\/span>\");\n\t\telse\n\t\t\tbuf.append(\"<span class=\\\"failure_reason_is\\\">\" + s + \"<\/span>\");\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"private void writeIdentifierCell(ClientRequest p, FreenetURI uri, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tif(uri != null) {\n\t\t\tbuf.append(\"<a href=\\\"/\");\n\t\t\tbuf.append(uri.toString(false));\n\t\t\tbuf.append(\"\\\">\");\n\t\t}\n\t\tbuf.append(HTMLEncoder.encode(p.getIdentifier()));\n\t\tif(uri != null)\n\t\t\tbuf.append(\"<\/a>\");\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","id":54947,"modified_method":"private void writeIdentifierCell(ClientRequest p, FreenetURI uri, StringBuffer buf) {\n\t\tbuf.append(\"<td>\");\n\t\tif(uri != null) {\n\t\t\tbuf.append(\"<span class=\\\"identifier_with_uri\\\"><a href=\\\"/\");\n\t\t\tbuf.append(uri.toString(false));\n\t\t\tbuf.append(\"\\\">\");\n\t\t\tbuf.append(HTMLEncoder.encode(p.getIdentifier()));\n\t\t\tbuf.append(\"<\/a><\/span>\");\n\t\t}\n\t\telse {\n\t\t\tbuf.append(\"<span class=\\\"identifier_without_uri\\\">\");\n\t\t\tbuf.append(HTMLEncoder.encode(p.getIdentifier()));\n\t\t\tbuf.append(\"<\/span>\");\n\t\t}\n\t\tbuf.append(\"<\/td>\\n\");\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"public static String formatSize(long sz) {\n\t\t// First determine suffix\n\t\t\n\t\tString suffixes = \"kMGTPEZY\";\n\t\tlong s = 1;\n\t\tint i;\n\t\tfor(i=0;i<suffixes.length();i++) {\n\t\t\ts *= 1000;\n\t\t\tif(s > sz) {\n\t\t\t\tbreak;\n\t\t\t\t// Smaller than multiplier [i] - use the previous one\n\t\t\t}\n\t\t}\n\t\t\n\t\ts /= 1000; // we use the previous unit\n\t\tdouble mantissa = (double)sz / (double)s;\n\t\tString o = Double.toString(mantissa);\n\t\tif(o.indexOf('.') == 3)\n\t\t\to = o.substring(0, 3);\n\t\telse if(o.indexOf('.') > -1 && o.indexOf('E') == -1 && o.length() > 4)\n\t\t\to = o.substring(0, 4);\n\t\tif(i > 0) o += suffixes.charAt(i-1);\n\t\to += \"B\";\n\t\treturn o;\n\t}","id":54948,"modified_method":"public static String formatSize(long sz) {\n\t\t// First determine suffix\n\t\t\n\t\tString[] suffixes = {\"B\", \"KiB\",\"MiB\",\"GiB\",\"TiB\",\"PiB\",\"EiB\",\"ZiB\",\"YiB\"};\n\t\tlong s = 1;\n\t\tint i;\n\t\tfor(i=0;i<suffixes.length;i++) {\n\t\t\ts *= 1000;\n\t\t\tif(s > sz) {\n\t\t\t\tbreak;\n\t\t\t\t// Smaller than multiplier [i] - use the previous one\n\t\t\t}\n\t\t}\n\t\t\n\t\ts /= 1000; // we use the previous unit\n\t\tif (s == 1)  // Bytes?\n\t\t{\n\t\t\treturn sz + \" \" + suffixes[0];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdouble mantissa = (double)sz / (double)s;\n\t\t\tString o = Double.toString(mantissa);\n\t\t\tif(o.indexOf('.') == 3)\n\t\t\t\to = o.substring(0, 3);\n\t\t\telse if(o.indexOf('.') > -1 && o.indexOf('E') == -1 && o.length() > 4)\n\t\t\t\to = o.substring(0, 4);\n\t\t\to += \" \" + suffixes[i];\n\t\t\treturn o;\n\t\t}\n\t}","commit_id":"2a50af2c7d1c8c3a5ad945e6a509003db2cd8d7f","url":"https://github.com/freenet/fred"},{"original_method":"public void listBeans( PrintWriter writer, String qry )\n    {\n\n        Set<ObjectName> names = null;\n        try {\n            names=mBeanServer.queryNames(new ObjectName(qry), null);\n            writer.println(\"OK - Number of results: \" + names.size());\n            writer.println();\n        } catch (Exception e) {\n            writer.println(\"Error - \" + e.toString());\n            return;\n        }\n\n        Iterator<ObjectName> it=names.iterator();\n        while( it.hasNext()) {\n            ObjectName oname=it.next();\n            writer.println( \"Name: \" + oname.toString());\n\n            try {\n                MBeanInfo minfo=mBeanServer.getMBeanInfo(oname);\n                // can't be null - I think\n                String code=minfo.getClassName();\n                if (\"org.apache.commons.modeler.BaseModelMBean\".equals(code)) {\n                    code=(String)mBeanServer.getAttribute(oname, \"modelerType\");\n                }\n                writer.println(\"modelerType: \" + code);\n\n                MBeanAttributeInfo attrs[]=minfo.getAttributes();\n                Object value=null;\n\n                for( int i=0; i< attrs.length; i++ ) {\n                    if( ! attrs[i].isReadable() ) continue;\n                    if( ! isSupported( attrs[i].getType() )) continue;\n                    String attName=attrs[i].getName();\n                    if( \"modelerType\".equals( attName)) continue;\n                    if( attName.indexOf( \"=\") >=0 ||\n                            attName.indexOf( \":\") >=0 ||\n                            attName.indexOf( \" \") >=0 ) {\n                        continue;\n                    }\n\n                    try {\n                        value=mBeanServer.getAttribute(oname, attName);\n                    } catch( Throwable t) {\n                        log(\"Error getting attribute \" + oname +\n                            \" \" + attName + \" \" + t.toString());\n                        continue;\n                    }\n                    if( value==null ) continue;\n                    String valueString;\n                    try {\n                        Class<?> c = value.getClass();\n                        if (c.isArray()) {\n                            int len = Array.getLength(value);\n                            StringBuilder sb = new StringBuilder(\"Array[\" +\n                                    c.getComponentType().getName() + \"] of length \" + len);\n                            if (len > 0) {\n                                sb.append(\"\\r\\n\");\n                            }\n                            for (int j = 0; j < len; j++) {\n                                sb.append(\"\\t\");\n                                Object item = Array.get(value, j);\n                                if (item == null) {\n                                    sb.append(\"NULL VALUE\");\n                                } else {\n                                    try {\n                                        sb.append(escape(item.toString()));\n                                    }\n                                    catch (Throwable t) {\n                                        ExceptionUtils.handleThrowable(t);\n                                        sb.append(\"NON-STRINGABLE VALUE\");\n                                    }\n                                }\n                                if (j < len - 1) {\n                                    sb.append(\"\\r\\n\");\n                                }\n                            }\n                            valueString = sb.toString();\n                        }\n                        else {\n                            valueString = escape(value.toString());\n                        }\n                        writer.println( attName + \": \" + valueString);\n                    }\n                    catch (Throwable t) {\n                        ExceptionUtils.handleThrowable(t);\n                    }\n                }\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n            }\n            writer.println();\n        }\n\n    }","id":54949,"modified_method":"public void listBeans( PrintWriter writer, String qry )\n    {\n\n        Set<ObjectName> names = null;\n        try {\n            names=mBeanServer.queryNames(new ObjectName(qry), null);\n            writer.println(\"OK - Number of results: \" + names.size());\n            writer.println();\n        } catch (Exception e) {\n            writer.println(\"Error - \" + e.toString());\n            return;\n        }\n\n        String dump = MBeanDumper.dumpBeans(mBeanServer, names);\n        writer.print(dump);\n    }","commit_id":"7662947529fa2bb697e0764665e42332d036eaae","url":"https://github.com/apache/tomcat"},{"original_method":"public void getAttribute(PrintWriter writer, String onameStr, String att) {\n        try {\n            ObjectName oname = new ObjectName(onameStr);\n            Object value = mBeanServer.getAttribute(oname, att);\n            writer.println(\"OK - Attribute get '\" + onameStr + \"' - \" + att\n                    + \"= \" + escape(value.toString()));\n        } catch (Exception ex) {\n            writer.println(\"Error - \" + ex.toString());\n        }\n    }","id":54950,"modified_method":"public void getAttribute(PrintWriter writer, String onameStr, String att) {\n        try {\n            ObjectName oname = new ObjectName(onameStr);\n            Object value = mBeanServer.getAttribute(oname, att);\n            writer.println(\"OK - Attribute get '\" + onameStr + \"' - \" + att\n                    + \"= \" + MBeanDumper.escape(value.toString()));\n        } catch (Exception ex) {\n            writer.println(\"Error - \" + ex.toString());\n        }\n    }","commit_id":"7662947529fa2bb697e0764665e42332d036eaae","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * Test verifying that Tomcat correctly de-registers the MBeans it has\n     * registered.\n     * @author Marc Guillemot\n     */\n    @Test\n    public void testMBeanDeregistration() throws Exception {\n        final MBeanServer mbeanServer = Registry.getRegistry(null, null).getMBeanServer();\n        // Verify there are no Catalina or Tomcat MBeans\n        Set<ObjectName> onames = mbeanServer.queryNames(new ObjectName(\"Catalina:*\"), null);\n        MBeanDumper.listBeans(mbeanServer, onames);\n        assertEquals(\"Unexpected: \" + onames, 0, onames.size());\n        onames = mbeanServer.queryNames(new ObjectName(\"Tomcat:*\"), null);\n        MBeanDumper.listBeans(mbeanServer, onames);\n        assertEquals(\"Unexpected: \" + onames, 0, onames.size());\n\n        final Tomcat tomcat = getTomcatInstance();\n        final File contextDir = new File(getTemporaryDirectory(), \"webappFoo\");\n        addDeleteOnTearDown(contextDir);\n        if (!contextDir.mkdirs() && !contextDir.isDirectory()) {\n            fail(\"Failed to create: [\" + contextDir.toString() + \"]\");\n        }\n        tomcat.addContext(contextName, contextDir.getAbsolutePath());\n        tomcat.start();\n\n        // Verify there are no Catalina MBeans\n        onames = mbeanServer.queryNames(new ObjectName(\"Catalina:*\"), null);\n        MBeanDumper.listBeans(mbeanServer, onames);\n        assertEquals(\"Found: \" + onames, 0, onames.size());\n\n        // Verify there are the correct Tomcat MBeans\n        onames = mbeanServer.queryNames(new ObjectName(\"Tomcat:*\"), null);\n        ArrayList<String> found = new ArrayList<String>(onames.size());\n        for (ObjectName on: onames) {\n            found.add(on.toString());\n        }\n\n        // Create the list of expected MBean names\n        String protocol=\n            getTomcatInstance().getConnector().getProtocolHandlerClassName();\n        if (protocol.indexOf(\"Nio\") > 0) {\n            protocol = \"nio\";\n        } else if (protocol.indexOf(\"Apr\") > 0) {\n            protocol = \"apr\";\n        } else {\n            protocol = \"bio\";\n        }\n        ArrayList<String> expected = new ArrayList<String>(Arrays.asList(basicMBeanNames()));\n        expected.addAll(Arrays.asList(hostMBeanNames(\"localhost\")));\n        expected.addAll(Arrays.asList(contextMBeanNames(\"localhost\", contextName)));\n        expected.addAll(Arrays.asList(connectorMBeanNames(\"auto-1\", protocol)));\n        expected.addAll(Arrays.asList(optionalMBeanNames(\"localhost\")));\n\n        // Did we find all expected MBeans?\n        ArrayList<String> missing = new ArrayList<String>(expected);\n        missing.removeAll(found);\n        assertTrue(\"Missing Tomcat MBeans: \" + missing, missing.isEmpty());\n\n        // Did we find any unexpected MBeans?\n        List<String> additional = found;\n        additional.removeAll(expected);\n        assertTrue(\"Unexpected Tomcat MBeans: \" + additional, additional.isEmpty());\n\n        tomcat.stop();\n\n        // There should still be some Tomcat MBeans\n        onames = mbeanServer.queryNames(new ObjectName(\"Tomcat:*\"), null);\n        assertTrue(\"No Tomcat MBeans\", onames.size() > 0);\n\n        // add a new host\n        StandardHost host = new StandardHost();\n        host.setName(\"otherhost\");\n        tomcat.getEngine().addChild(host);\n\n        final File contextDir2 = new File(getTemporaryDirectory(), \"webappFoo2\");\n        addDeleteOnTearDown(contextDir2);\n        if (!contextDir2.mkdirs() && !contextDir2.isDirectory()) {\n            fail(\"Failed to create: [\" + contextDir2.toString() + \"]\");\n        }\n        tomcat.addContext(host, contextName + \"2\", contextDir2.getAbsolutePath());\n\n        tomcat.start();\n        tomcat.stop();\n        tomcat.destroy();\n\n        // There should be no Catalina MBeans and no Tomcat MBeans\n        onames = mbeanServer.queryNames(new ObjectName(\"Catalina:*\"), null);\n        MBeanDumper.listBeans(mbeanServer, onames);\n        assertEquals(\"Remaining: \" + onames, 0, onames.size());\n        onames = mbeanServer.queryNames(new ObjectName(\"Tomcat:*\"), null);\n        MBeanDumper.listBeans(mbeanServer, onames);\n        assertEquals(\"Remaining: \" + onames, 0, onames.size());\n    }","id":54951,"modified_method":"/**\n     * Test verifying that Tomcat correctly de-registers the MBeans it has\n     * registered.\n     * @author Marc Guillemot\n     */\n    @Test\n    public void testMBeanDeregistration() throws Exception {\n        final MBeanServer mbeanServer = Registry.getRegistry(null, null).getMBeanServer();\n        // Verify there are no Catalina or Tomcat MBeans\n        Set<ObjectName> onames = mbeanServer.queryNames(new ObjectName(\"Catalina:*\"), null);\n        log.info(MBeanDumper.dumpBeans(mbeanServer, onames));\n        assertEquals(\"Unexpected: \" + onames, 0, onames.size());\n        onames = mbeanServer.queryNames(new ObjectName(\"Tomcat:*\"), null);\n        log.info(MBeanDumper.dumpBeans(mbeanServer, onames));\n        assertEquals(\"Unexpected: \" + onames, 0, onames.size());\n\n        final Tomcat tomcat = getTomcatInstance();\n        final File contextDir = new File(getTemporaryDirectory(), \"webappFoo\");\n        addDeleteOnTearDown(contextDir);\n        if (!contextDir.mkdirs() && !contextDir.isDirectory()) {\n            fail(\"Failed to create: [\" + contextDir.toString() + \"]\");\n        }\n        tomcat.addContext(contextName, contextDir.getAbsolutePath());\n        tomcat.start();\n\n        // Verify there are no Catalina MBeans\n        onames = mbeanServer.queryNames(new ObjectName(\"Catalina:*\"), null);\n        log.info(MBeanDumper.dumpBeans(mbeanServer, onames));\n        assertEquals(\"Found: \" + onames, 0, onames.size());\n\n        // Verify there are the correct Tomcat MBeans\n        onames = mbeanServer.queryNames(new ObjectName(\"Tomcat:*\"), null);\n        ArrayList<String> found = new ArrayList<String>(onames.size());\n        for (ObjectName on: onames) {\n            found.add(on.toString());\n        }\n\n        // Create the list of expected MBean names\n        String protocol=\n            getTomcatInstance().getConnector().getProtocolHandlerClassName();\n        if (protocol.indexOf(\"Nio\") > 0) {\n            protocol = \"nio\";\n        } else if (protocol.indexOf(\"Apr\") > 0) {\n            protocol = \"apr\";\n        } else {\n            protocol = \"bio\";\n        }\n        ArrayList<String> expected = new ArrayList<String>(Arrays.asList(basicMBeanNames()));\n        expected.addAll(Arrays.asList(hostMBeanNames(\"localhost\")));\n        expected.addAll(Arrays.asList(contextMBeanNames(\"localhost\", contextName)));\n        expected.addAll(Arrays.asList(connectorMBeanNames(\"auto-1\", protocol)));\n        expected.addAll(Arrays.asList(optionalMBeanNames(\"localhost\")));\n\n        // Did we find all expected MBeans?\n        ArrayList<String> missing = new ArrayList<String>(expected);\n        missing.removeAll(found);\n        assertTrue(\"Missing Tomcat MBeans: \" + missing, missing.isEmpty());\n\n        // Did we find any unexpected MBeans?\n        List<String> additional = found;\n        additional.removeAll(expected);\n        assertTrue(\"Unexpected Tomcat MBeans: \" + additional, additional.isEmpty());\n\n        tomcat.stop();\n\n        // There should still be some Tomcat MBeans\n        onames = mbeanServer.queryNames(new ObjectName(\"Tomcat:*\"), null);\n        assertTrue(\"No Tomcat MBeans\", onames.size() > 0);\n\n        // add a new host\n        StandardHost host = new StandardHost();\n        host.setName(\"otherhost\");\n        tomcat.getEngine().addChild(host);\n\n        final File contextDir2 = new File(getTemporaryDirectory(), \"webappFoo2\");\n        addDeleteOnTearDown(contextDir2);\n        if (!contextDir2.mkdirs() && !contextDir2.isDirectory()) {\n            fail(\"Failed to create: [\" + contextDir2.toString() + \"]\");\n        }\n        tomcat.addContext(host, contextName + \"2\", contextDir2.getAbsolutePath());\n\n        tomcat.start();\n        tomcat.stop();\n        tomcat.destroy();\n\n        // There should be no Catalina MBeans and no Tomcat MBeans\n        onames = mbeanServer.queryNames(new ObjectName(\"Catalina:*\"), null);\n        log.info(MBeanDumper.dumpBeans(mbeanServer, onames));\n        assertEquals(\"Remaining: \" + onames, 0, onames.size());\n        onames = mbeanServer.queryNames(new ObjectName(\"Tomcat:*\"), null);\n        log.info(MBeanDumper.dumpBeans(mbeanServer, onames));\n        assertEquals(\"Remaining: \" + onames, 0, onames.size());\n    }","commit_id":"7662947529fa2bb697e0764665e42332d036eaae","url":"https://github.com/apache/tomcat"},{"original_method":"@Override public void collectTerm(String term) {\n            GeoHashUtils.decode(term, latlon);\n            terms.add(new GeoPoint(latlon[0], latlon[1]));\n        }","id":54952,"modified_method":"@Override public void collectTerm(String term) {\n            int comma = term.indexOf(',');\n            double lat = Double.parseDouble(term.substring(0, comma));\n            double lon = Double.parseDouble(term.substring(comma + 1));\n            terms.add(new GeoPoint(lat, lon));\n        }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void toXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject(name);\n        builder.field(\"type\", CONTENT_TYPE);\n        builder.field(\"path\", pathType.name().toLowerCase());\n        builder.field(\"lat_lon\", enableLatLon);\n        if (latMapper != null) {\n            builder.field(\"store\", latMapper.store().name().toLowerCase());\n        } else if (geohashMapper != null) {\n            builder.field(\"store\", geohashMapper.store().name().toLowerCase());\n        }\n        builder.field(\"precision\", precision);\n        if (precisionStep != null) {\n            builder.field(\"precision_step\", precisionStep);\n        }\n\n        builder.endObject();\n    }","id":54953,"modified_method":"@Override public void toXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject(name);\n        builder.field(\"type\", CONTENT_TYPE);\n        builder.field(\"path\", pathType.name().toLowerCase());\n        builder.field(\"lat_lon\", enableLatLon);\n        builder.field(\"geohash\", enableGeoHash);\n        builder.field(\"store\", geoStringMapper.store().name().toLowerCase());\n        builder.field(\"geohash_precision\", precision);\n        if (precisionStep != null) {\n            builder.field(\"precision_step\", precisionStep);\n        }\n\n        builder.endObject();\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void parseLatLon(ParseContext context, Double lat, Double lon) throws IOException {\n        context.externalValue(GeoHashUtils.encode(lat, lon, precision));\n        geohashMapper.parse(context);\n        if (enableLatLon) {\n            context.externalValue(lat);\n            latMapper.parse(context);\n            context.externalValue(lon);\n            lonMapper.parse(context);\n        }\n    }","id":54954,"modified_method":"private void parseLatLon(ParseContext context, Double lat, Double lon) throws IOException {\n        context.externalValue(lat.toString() + ',' + lon.toString());\n        geoStringMapper.parse(context);\n        if (enableGeoHash) {\n            context.externalValue(GeoHashUtils.encode(lat, lon, precision));\n            geohashMapper.parse(context);\n        }\n        if (enableLatLon) {\n            context.externalValue(lat);\n            latMapper.parse(context);\n            context.externalValue(lon);\n            lonMapper.parse(context);\n        }\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public GeoPointFieldMapper(String name, ContentPath.Type pathType, boolean enableLatLon, Integer precisionStep, int precision,\n                               NumberFieldMapper latMapper, NumberFieldMapper lonMapper, StringFieldMapper geohashMapper) {\n        this.name = name;\n        this.pathType = pathType;\n        this.enableLatLon = enableLatLon;\n        this.precisionStep = precisionStep;\n        this.precision = precision;\n\n        this.latMapper = latMapper;\n        this.lonMapper = lonMapper;\n        this.geohashMapper = geohashMapper;\n    }","id":54955,"modified_method":"public GeoPointFieldMapper(String name, ContentPath.Type pathType, boolean enableLatLon, boolean enableGeoHash, Integer precisionStep, int precision,\n                               NumberFieldMapper latMapper, NumberFieldMapper lonMapper, StringFieldMapper geohashMapper, StringFieldMapper geoStringMapper) {\n        this.name = name;\n        this.pathType = pathType;\n        this.enableLatLon = enableLatLon;\n        this.enableGeoHash = enableGeoHash;\n        this.precisionStep = precisionStep;\n        this.precision = precision;\n\n        this.latMapper = latMapper;\n        this.lonMapper = lonMapper;\n        this.geoStringMapper = geoStringMapper;\n        this.geohashMapper = geohashMapper;\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void parseGeohash(ParseContext context, String geohash) throws IOException {\n        context.externalValue(geohash);\n        geohashMapper.parse(context);\n        if (enableLatLon) {\n            double[] values = GeoHashUtils.decode(geohash);\n            context.externalValue(values[0]);\n            latMapper.parse(context);\n            context.externalValue(values[1]);\n            lonMapper.parse(context);\n        }\n    }","id":54956,"modified_method":"private void parseGeohash(ParseContext context, String geohash) throws IOException {\n        double[] values = GeoHashUtils.decode(geohash);\n        context.externalValue(Double.toString(values[0]) + ',' + Double.toString(values[1]));\n        geoStringMapper.parse(context);\n        if (enableGeoHash) {\n            context.externalValue(geohash);\n            geohashMapper.parse(context);\n        }\n        if (enableLatLon) {\n            context.externalValue(values[0]);\n            latMapper.parse(context);\n            context.externalValue(values[1]);\n            lonMapper.parse(context);\n        }\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public XContentMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            Builder builder = new Builder(name);\n\n            for (Map.Entry<String, Object> entry : node.entrySet()) {\n                String fieldName = Strings.toUnderscoreCase(entry.getKey());\n                Object fieldNode = entry.getValue();\n                if (fieldName.equals(\"path\")) {\n                    builder.pathType(parsePathType(name, fieldNode.toString()));\n                } else if (fieldName.equals(\"store\")) {\n                    builder.store(parseStore(name, fieldNode.toString()));\n                } else if (fieldName.equals(\"lat_lon\")) {\n                    builder.enableLatLon(XContentMapValues.nodeBooleanValue(fieldNode));\n                } else if (fieldName.equals(\"precision_step\")) {\n                    builder.precisionStep(XContentMapValues.nodeIntegerValue(fieldNode));\n                } else if (fieldName.equals(\"precision\")) {\n                    builder.precision(XContentMapValues.nodeIntegerValue(fieldNode));\n                }\n            }\n            return builder;\n        }","id":54957,"modified_method":"@Override public XContentMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            Builder builder = new Builder(name);\n\n            for (Map.Entry<String, Object> entry : node.entrySet()) {\n                String fieldName = Strings.toUnderscoreCase(entry.getKey());\n                Object fieldNode = entry.getValue();\n                if (fieldName.equals(\"path\")) {\n                    builder.pathType(parsePathType(name, fieldNode.toString()));\n                } else if (fieldName.equals(\"store\")) {\n                    builder.store(parseStore(name, fieldNode.toString()));\n                } else if (fieldName.equals(\"lat_lon\")) {\n                    builder.enableLatLon(XContentMapValues.nodeBooleanValue(fieldNode));\n                } else if (fieldName.equals(\"geohash\")) {\n                    builder.enableGeoHash(XContentMapValues.nodeBooleanValue(fieldNode));\n                } else if (fieldName.equals(\"precision_step\")) {\n                    builder.precisionStep(XContentMapValues.nodeIntegerValue(fieldNode));\n                } else if (fieldName.equals(\"geohash_precision\")) {\n                    builder.precision(XContentMapValues.nodeIntegerValue(fieldNode));\n                }\n            }\n            return builder;\n        }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public GeoPointFieldMapper build(BuilderContext context) {\n            ContentPath.Type origPathType = context.path().pathType();\n            context.path().pathType(pathType);\n\n            GeoHashFieldMapper geohashMapper = new GeoHashFieldMapper.Builder(name)\n                    .index(Field.Index.NOT_ANALYZED).omitNorms(true).omitTermFreqAndPositions(true).includeInAll(false).store(store).build(context);\n\n\n            NumberFieldMapper latMapper = null;\n            NumberFieldMapper lonMapper = null;\n\n            context.path().add(name);\n            if (enableLatLon) {\n                NumberFieldMapper.Builder latMapperBuilder = doubleField(Names.LAT).includeInAll(false);\n                NumberFieldMapper.Builder lonMapperBuilder = doubleField(Names.LON).includeInAll(false);\n                if (precisionStep != null) {\n                    latMapperBuilder.precisionStep(precisionStep);\n                    lonMapperBuilder.precisionStep(precisionStep);\n                }\n                latMapper = (NumberFieldMapper) latMapperBuilder.includeInAll(false).store(store).build(context);\n                lonMapper = (NumberFieldMapper) lonMapperBuilder.includeInAll(false).store(store).build(context);\n            }\n            context.path().remove();\n\n            context.path().pathType(origPathType);\n\n            return new GeoPointFieldMapper(name, pathType, enableLatLon, precisionStep, precision, latMapper, lonMapper, geohashMapper);\n        }","id":54958,"modified_method":"@Override public GeoPointFieldMapper build(BuilderContext context) {\n            ContentPath.Type origPathType = context.path().pathType();\n            context.path().pathType(pathType);\n\n            GeoStringFieldMapper geoStringMapper = new GeoStringFieldMapper.Builder(name)\n                    .index(Field.Index.NOT_ANALYZED).omitNorms(true).omitTermFreqAndPositions(true).includeInAll(false).store(store).build(context);\n\n\n            NumberFieldMapper latMapper = null;\n            NumberFieldMapper lonMapper = null;\n\n            context.path().add(name);\n            if (enableLatLon) {\n                NumberFieldMapper.Builder latMapperBuilder = doubleField(Names.LAT).includeInAll(false);\n                NumberFieldMapper.Builder lonMapperBuilder = doubleField(Names.LON).includeInAll(false);\n                if (precisionStep != null) {\n                    latMapperBuilder.precisionStep(precisionStep);\n                    lonMapperBuilder.precisionStep(precisionStep);\n                }\n                latMapper = (NumberFieldMapper) latMapperBuilder.includeInAll(false).store(store).build(context);\n                lonMapper = (NumberFieldMapper) lonMapperBuilder.includeInAll(false).store(store).build(context);\n            }\n            StringFieldMapper geohashMapper = null;\n            if (enableGeoHash) {\n                geohashMapper = stringField(Names.GEOHASH).index(Field.Index.NOT_ANALYZED).includeInAll(false).omitNorms(true).omitTermFreqAndPositions(true).build(context);\n            }\n            context.path().remove();\n\n            context.path().pathType(origPathType);\n\n            return new GeoPointFieldMapper(name, pathType, enableLatLon, enableGeoHash, precisionStep, precision, latMapper, lonMapper, geohashMapper, geoStringMapper);\n        }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void traverse(FieldMapperListener fieldMapperListener) {\n        geohashMapper.traverse(fieldMapperListener);\n        if (enableLatLon) {\n            latMapper.traverse(fieldMapperListener);\n            lonMapper.traverse(fieldMapperListener);\n        }\n    }","id":54959,"modified_method":"@Override public void traverse(FieldMapperListener fieldMapperListener) {\n        geoStringMapper.traverse(fieldMapperListener);\n        if (enableGeoHash) {\n            geohashMapper.traverse(fieldMapperListener);\n        }\n        if (enableLatLon) {\n            latMapper.traverse(fieldMapperListener);\n            lonMapper.traverse(fieldMapperListener);\n        }\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testGeoHashValue() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"geohash\", true).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", GeoHashUtils.encode(1.2, 1.3))\n                .endObject()\n                .copiedBytes());\n\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lat\"), nullValue());\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lon\"), nullValue());\n        MatcherAssert.assertThat(doc.doc().get(\"point\"), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n    }","id":54960,"modified_method":"@Test public void testGeoHashValue() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"geohash\", true).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", GeoHashUtils.encode(1.2, 1.3))\n                .endObject()\n                .copiedBytes());\n\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lat\"), nullValue());\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lon\"), nullValue());\n        MatcherAssert.assertThat(doc.doc().get(\"point.geohash\"), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n        MatcherAssert.assertThat(doc.doc().get(\"point\"), notNullValue());\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testLatLonValues() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", false).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startObject(\"point\").field(\"lat\", 1.2).field(\"lon\", 1.3).endObject()\n                .endObject()\n                .copiedBytes());\n\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lat\"), nullValue());\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lon\"), nullValue());\n        MatcherAssert.assertThat(doc.doc().get(\"point\"), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n    }","id":54961,"modified_method":"@Test public void testLatLonValues() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", false).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startObject(\"point\").field(\"lat\", 1.2).field(\"lon\", 1.3).endObject()\n                .endObject()\n                .copiedBytes());\n\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lat\"), nullValue());\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lon\"), nullValue());\n        MatcherAssert.assertThat(doc.doc().get(\"point\"), equalTo(\"1.2,1.3\"));\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testLatLonInOneValue() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", false).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", \"1.2,1.3\")\n                .endObject()\n                .copiedBytes());\n\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lat\"), nullValue());\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lon\"), nullValue());\n        MatcherAssert.assertThat(doc.doc().get(\"point\"), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n    }","id":54962,"modified_method":"@Test public void testLatLonInOneValue() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", false).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", \"1.2,1.3\")\n                .endObject()\n                .copiedBytes());\n\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lat\"), nullValue());\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lon\"), nullValue());\n        MatcherAssert.assertThat(doc.doc().get(\"point\"), equalTo(\"1.2,1.3\"));\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testLatLonArray() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startArray(\"point\").value(1.2).value(1.3).endArray()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lat\").getBinaryValue(), nullValue());\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\").getBinaryValue(), nullValue());\n        assertThat(doc.doc().get(\"point\"), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n    }","id":54963,"modified_method":"@Test public void testLatLonArray() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startArray(\"point\").value(1.2).value(1.3).endArray()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lat\").getBinaryValue(), nullValue());\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\").getBinaryValue(), nullValue());\n        assertThat(doc.doc().get(\"point\"), equalTo(\"1.2,1.3\"));\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testLatLonArrayArrayStored() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).field(\"store\", \"yes\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startArray(\"point\")\n                .startArray().value(1.2).value(1.3).endArray()\n                .startArray().value(1.4).value(1.5).endArray()\n                .endArray()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getFields(\"point.lat\").length, equalTo(2));\n        assertThat(doc.doc().getFields(\"point.lon\").length, equalTo(2));\n        assertThat(doc.doc().getFields(\"point.lat\")[0].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.2)));\n        assertThat(doc.doc().getFields(\"point.lon\")[0].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.3)));\n        assertThat(doc.doc().getFields(\"point\")[0].stringValue(), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n        assertThat(doc.doc().getFields(\"point.lat\")[1].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.4)));\n        assertThat(doc.doc().getFields(\"point.lon\")[1].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.5)));\n        assertThat(doc.doc().getFields(\"point\")[1].stringValue(), equalTo(GeoHashUtils.encode(1.4, 1.5)));\n    }","id":54964,"modified_method":"@Test public void testLatLonArrayArrayStored() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).field(\"store\", \"yes\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startArray(\"point\")\n                .startArray().value(1.2).value(1.3).endArray()\n                .startArray().value(1.4).value(1.5).endArray()\n                .endArray()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getFields(\"point.lat\").length, equalTo(2));\n        assertThat(doc.doc().getFields(\"point.lon\").length, equalTo(2));\n        assertThat(doc.doc().getFields(\"point.lat\")[0].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.2)));\n        assertThat(doc.doc().getFields(\"point.lon\")[0].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.3)));\n        assertThat(doc.doc().getFields(\"point\")[0].stringValue(), equalTo(\"1.2,1.3\"));\n        assertThat(doc.doc().getFields(\"point.lat\")[1].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.4)));\n        assertThat(doc.doc().getFields(\"point.lon\")[1].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.5)));\n        assertThat(doc.doc().getFields(\"point\")[1].stringValue(), equalTo(\"1.4,1.5\"));\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testLatLonInOneValueArray() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).field(\"store\", \"yes\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startArray(\"point\")\n                .value(\"1.2,1.3\")\n                .value(\"1.4,1.5\")\n                .endArray()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getFields(\"point.lat\").length, equalTo(2));\n        assertThat(doc.doc().getFields(\"point.lon\").length, equalTo(2));\n        assertThat(doc.doc().getFields(\"point.lat\")[0].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.2)));\n        assertThat(doc.doc().getFields(\"point.lon\")[0].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.3)));\n        assertThat(doc.doc().getFields(\"point\")[0].stringValue(), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n        assertThat(doc.doc().getFields(\"point.lat\")[1].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.4)));\n        assertThat(doc.doc().getFields(\"point.lon\")[1].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.5)));\n        assertThat(doc.doc().getFields(\"point\")[1].stringValue(), equalTo(GeoHashUtils.encode(1.4, 1.5)));\n    }","id":54965,"modified_method":"@Test public void testLatLonInOneValueArray() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).field(\"store\", \"yes\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startArray(\"point\")\n                .value(\"1.2,1.3\")\n                .value(\"1.4,1.5\")\n                .endArray()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getFields(\"point.lat\").length, equalTo(2));\n        assertThat(doc.doc().getFields(\"point.lon\").length, equalTo(2));\n        assertThat(doc.doc().getFields(\"point.lat\")[0].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.2)));\n        assertThat(doc.doc().getFields(\"point.lon\")[0].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.3)));\n        assertThat(doc.doc().getFields(\"point\")[0].stringValue(), equalTo(\"1.2,1.3\"));\n        assertThat(doc.doc().getFields(\"point.lat\")[1].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.4)));\n        assertThat(doc.doc().getFields(\"point.lon\")[1].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.5)));\n        assertThat(doc.doc().getFields(\"point\")[1].stringValue(), equalTo(\"1.4,1.5\"));\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testGeoHashValue() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", GeoHashUtils.encode(1.2, 1.3))\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().get(\"point\"), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n    }","id":54966,"modified_method":"@Test public void testGeoHashValue() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", GeoHashUtils.encode(1.2, 1.3))\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().get(\"point\"), notNullValue());\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testLatLonValuesStored() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).field(\"store\", \"yes\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startObject(\"point\").field(\"lat\", 1.2).field(\"lon\", 1.3).endObject()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lat\").getBinaryValue(), equalTo(Numbers.doubleToBytes(1.2)));\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\").getBinaryValue(), equalTo(Numbers.doubleToBytes(1.3)));\n        assertThat(doc.doc().get(\"point\"), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n    }","id":54967,"modified_method":"@Test public void testLatLonValuesStored() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).field(\"store\", \"yes\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startObject(\"point\").field(\"lat\", 1.2).field(\"lon\", 1.3).endObject()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lat\").getBinaryValue(), equalTo(Numbers.doubleToBytes(1.2)));\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\").getBinaryValue(), equalTo(Numbers.doubleToBytes(1.3)));\n        assertThat(doc.doc().getField(\"point.geohash\"), nullValue());\n        assertThat(doc.doc().get(\"point\"), equalTo(\"1.2,1.3\"));\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testLatLonInOneValue() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", \"1.2,1.3\")\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().get(\"point\"), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n    }","id":54968,"modified_method":"@Test public void testLatLonInOneValue() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", \"1.2,1.3\")\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().get(\"point\"), equalTo(\"1.2,1.3\"));\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testLatLonArrayStored() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).field(\"store\", \"yes\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startArray(\"point\").value(1.2).value(1.3).endArray()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lat\").getBinaryValue(), equalTo(Numbers.doubleToBytes(1.2)));\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\").getBinaryValue(), equalTo(Numbers.doubleToBytes(1.3)));\n        assertThat(doc.doc().get(\"point\"), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n    }","id":54969,"modified_method":"@Test public void testLatLonArrayStored() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).field(\"store\", \"yes\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startArray(\"point\").value(1.2).value(1.3).endArray()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lat\").getBinaryValue(), equalTo(Numbers.doubleToBytes(1.2)));\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\").getBinaryValue(), equalTo(Numbers.doubleToBytes(1.3)));\n        assertThat(doc.doc().get(\"point\"), equalTo(\"1.2,1.3\"));\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testLatLonInOneValueStored() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).field(\"store\", \"yes\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", \"1.2,1.3\")\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lat\").getBinaryValue(), equalTo(Numbers.doubleToBytes(1.2)));\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\").getBinaryValue(), equalTo(Numbers.doubleToBytes(1.3)));\n        assertThat(doc.doc().get(\"point\"), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n    }","id":54970,"modified_method":"@Test public void testLatLonInOneValueStored() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).field(\"store\", \"yes\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", \"1.2,1.3\")\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lat\").getBinaryValue(), equalTo(Numbers.doubleToBytes(1.2)));\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\").getBinaryValue(), equalTo(Numbers.doubleToBytes(1.3)));\n        assertThat(doc.doc().get(\"point\"), equalTo(\"1.2,1.3\"));\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testLatLonValues() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startObject(\"point\").field(\"lat\", 1.2).field(\"lon\", 1.3).endObject()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lat\").getBinaryValue(), nullValue());\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\").getBinaryValue(), nullValue());\n        assertThat(doc.doc().get(\"point\"), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n    }","id":54971,"modified_method":"@Test public void testLatLonValues() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startObject(\"point\").field(\"lat\", 1.2).field(\"lon\", 1.3).endObject()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lat\").getBinaryValue(), nullValue());\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\").getBinaryValue(), nullValue());\n        assertThat(doc.doc().getField(\"point.geohash\"), nullValue());\n        assertThat(doc.doc().get(\"point\"), equalTo(\"1.2,1.3\"));\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testArrayLatLonValues() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).field(\"store\", \"yes\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startArray(\"point\")\n                .startObject().field(\"lat\", 1.2).field(\"lon\", 1.3).endObject()\n                .startObject().field(\"lat\", 1.4).field(\"lon\", 1.5).endObject()\n                .endArray()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getFields(\"point.lat\").length, equalTo(2));\n        assertThat(doc.doc().getFields(\"point.lon\").length, equalTo(2));\n        assertThat(doc.doc().getFields(\"point.lat\")[0].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.2)));\n        assertThat(doc.doc().getFields(\"point.lon\")[0].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.3)));\n        assertThat(doc.doc().getFields(\"point\")[0].stringValue(), equalTo(GeoHashUtils.encode(1.2, 1.3)));\n        assertThat(doc.doc().getFields(\"point.lat\")[1].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.4)));\n        assertThat(doc.doc().getFields(\"point.lon\")[1].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.5)));\n        assertThat(doc.doc().getFields(\"point\")[1].stringValue(), equalTo(GeoHashUtils.encode(1.4, 1.5)));\n    }","id":54972,"modified_method":"@Test public void testArrayLatLonValues() throws Exception {\n        String mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").field(\"lat_lon\", true).field(\"store\", \"yes\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = MapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startArray(\"point\")\n                .startObject().field(\"lat\", 1.2).field(\"lon\", 1.3).endObject()\n                .startObject().field(\"lat\", 1.4).field(\"lon\", 1.5).endObject()\n                .endArray()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getFields(\"point.lat\").length, equalTo(2));\n        assertThat(doc.doc().getFields(\"point.lon\").length, equalTo(2));\n        assertThat(doc.doc().getFields(\"point.lat\")[0].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.2)));\n        assertThat(doc.doc().getFields(\"point.lon\")[0].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.3)));\n        assertThat(doc.doc().getFields(\"point\")[0].stringValue(), equalTo(\"1.2,1.3\"));\n        assertThat(doc.doc().getFields(\"point.lat\")[1].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.4)));\n        assertThat(doc.doc().getFields(\"point.lon\")[1].getBinaryValue(), equalTo(Numbers.doubleToBytes(1.5)));\n        assertThat(doc.doc().getFields(\"point\")[1].stringValue(), equalTo(\"1.4,1.5\"));\n    }","commit_id":"9077bb6528f843ca8042ff95f8fac47140ef5aa1","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public void parse(ParseContext context) throws IOException {\n        byte[] content = null;\n        String contentType = null;\n        int indexedChars = defaultIndexedChars;\n        boolean langDetect = defaultLangDetect;\n        String name = null;\n        String language = null;\n\n        XContentParser parser = context.parser();\n        XContentParser.Token token = parser.currentToken();\n        if (token == XContentParser.Token.VALUE_STRING) {\n            content = parser.binaryValue();\n        } else {\n            String currentFieldName = null;\n            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                if (token == XContentParser.Token.FIELD_NAME) {\n                    currentFieldName = parser.currentName();\n                } else if (token == XContentParser.Token.VALUE_STRING) {\n                    if (\"content\".equals(currentFieldName)) {\n                        content = parser.binaryValue();\n                    } else if (\"_content_type\".equals(currentFieldName)) {\n                        contentType = parser.text();\n                    } else if (\"_name\".equals(currentFieldName)) {\n                        name = parser.text();\n                    } else if (\"language\".equals(currentFieldName)) {\n                    \tlanguage = parser.text();\n                    }\n                } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                    if (\"_indexed_chars\".equals(currentFieldName) || \"_indexedChars\".equals(currentFieldName)) {\n                        indexedChars = parser.intValue();\n                    }\n                } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                    if (\"_detect_language\".equals(currentFieldName) || \"_detectLanguage\".equals(currentFieldName)) {\n                        langDetect = parser.booleanValue();\n                    }\n                }\n            }\n        }\n\n        // Throw clean exception when no content is provided Fix #23\n        if (content == null) {\n            throw new MapperParsingException(\"No content is provided.\");\n        }\n\n        Metadata metadata = new Metadata();\n        if (contentType != null) {\n            metadata.add(Metadata.CONTENT_TYPE, contentType);\n        }\n        if (name != null) {\n            metadata.add(Metadata.RESOURCE_NAME_KEY, name);\n        }\n\n        String parsedContent;\n        try {\n            // Set the maximum length of strings returned by the parseToString method, -1 sets no limit\n            parsedContent = tika().parseToString(new BytesStreamInput(content, false), metadata, indexedChars);\n        } catch (Throwable e) {\n            // #18: we could ignore errors when Tika does not parse data\n            if (!ignoreErrors) throw new MapperParsingException(\"Failed to extract [\" + indexedChars + \"] characters of text for [\" + name + \"]\", e);\n            return;\n        }\n\n        context.externalValue(parsedContent);\n        contentMapper.parse(context);\n\n        if (langDetect) {\n            try {\n                if (language != null) {\n                    metadata.add(Metadata.CONTENT_LANGUAGE, language);\n                } else {\n                    LanguageIdentifier identifier = new LanguageIdentifier(parsedContent);\n                    language = identifier.getLanguage();\n                }\n                context.externalValue(language);\n                languageMapper.parse(context);\n            } catch(Throwable t) {\n                logger.warn(\"Cannot detect language: {}\", t.getMessage());\n            }\n        }\n\n        try {\n            context.externalValue(name);\n            nameMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing name: {}\", e.getMessage());\n        }\n\n        try {\n            context.externalValue(metadata.get(Metadata.DATE));\n            dateMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing date: {}: {}\", e.getMessage(), context.externalValue());\n        }\n\n        try {\n            context.externalValue(metadata.get(Metadata.TITLE));\n            titleMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing title: {}: {}\", e.getMessage(), context.externalValue());\n        }\n\n        try {\n            context.externalValue(metadata.get(Metadata.AUTHOR));\n            authorMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing author: {}: {}\", e.getMessage(), context.externalValue());\n        }\n\n        try {\n            context.externalValue(metadata.get(Metadata.KEYWORDS));\n            keywordsMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing keywords: {}: {}\", e.getMessage(), context.externalValue());\n        }\n\n        try {\n            context.externalValue(metadata.get(Metadata.CONTENT_TYPE));\n            contentTypeMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing content_type: {}: {}\", e.getMessage(), context.externalValue());\n        }\n\n        try {\n            if (metadata.get(Metadata.CONTENT_LENGTH) != null) {\n                // We try to get CONTENT_LENGTH from Tika first\n                context.externalValue(metadata.get(Metadata.CONTENT_LENGTH));\n            } else {\n                // Otherwise, we use our byte[] length\n                context.externalValue(content.length);\n            }\n            contentLengthMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing content_length: {}: {}\", e.getMessage(), context.externalValue());\n        }\n    }","id":54973,"modified_method":"@Override\n    public void parse(ParseContext context) throws IOException {\n        byte[] content = null;\n        String contentType = null;\n        int indexedChars = defaultIndexedChars;\n        boolean langDetect = defaultLangDetect;\n        String name = null;\n        String language = null;\n\n        XContentParser parser = context.parser();\n        XContentParser.Token token = parser.currentToken();\n        if (token == XContentParser.Token.VALUE_STRING) {\n            content = parser.binaryValue();\n        } else {\n            String currentFieldName = null;\n            while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) {\n                if (token == XContentParser.Token.FIELD_NAME) {\n                    currentFieldName = parser.currentName();\n                } else if (token == XContentParser.Token.VALUE_STRING) {\n                    if (\"content\".equals(currentFieldName)) {\n                        content = parser.binaryValue();\n                    } else if (\"_content_type\".equals(currentFieldName)) {\n                        contentType = parser.text();\n                    } else if (\"_name\".equals(currentFieldName)) {\n                        name = parser.text();\n                    } else if (\"language\".equals(currentFieldName)) {\n                        // TODO should be _language\n                    \tlanguage = parser.text();\n                    }\n                } else if (token == XContentParser.Token.VALUE_NUMBER) {\n                    if (\"_indexed_chars\".equals(currentFieldName) || \"_indexedChars\".equals(currentFieldName)) {\n                        indexedChars = parser.intValue();\n                    }\n                } else if (token == XContentParser.Token.VALUE_BOOLEAN) {\n                    if (\"_detect_language\".equals(currentFieldName) || \"_detectLanguage\".equals(currentFieldName)) {\n                        langDetect = parser.booleanValue();\n                    }\n                }\n            }\n        }\n\n        // Throw clean exception when no content is provided Fix #23\n        if (content == null) {\n            throw new MapperParsingException(\"No content is provided.\");\n        }\n\n        Metadata metadata = new Metadata();\n        if (contentType != null) {\n            metadata.add(Metadata.CONTENT_TYPE, contentType);\n        }\n        if (name != null) {\n            metadata.add(Metadata.RESOURCE_NAME_KEY, name);\n        }\n\n        String parsedContent;\n        try {\n            // Set the maximum length of strings returned by the parseToString method, -1 sets no limit\n            parsedContent = tika().parseToString(new BytesStreamInput(content, false), metadata, indexedChars);\n        } catch (Throwable e) {\n            // #18: we could ignore errors when Tika does not parse data\n            if (!ignoreErrors) throw new MapperParsingException(\"Failed to extract [\" + indexedChars + \"] characters of text for [\" + name + \"]\", e);\n            return;\n        }\n\n        context.externalValue(parsedContent);\n        contentMapper.parse(context);\n\n        if (langDetect) {\n            try {\n                if (language != null) {\n                    metadata.add(Metadata.CONTENT_LANGUAGE, language);\n                } else {\n                    LanguageIdentifier identifier = new LanguageIdentifier(parsedContent);\n                    language = identifier.getLanguage();\n                }\n                context.externalValue(language);\n                languageMapper.parse(context);\n            } catch(Throwable t) {\n                logger.warn(\"Cannot detect language: {}\", t.getMessage());\n            }\n        }\n\n        try {\n            context.externalValue(name);\n            nameMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing name: {}\", e.getMessage());\n        }\n\n        try {\n            context.externalValue(metadata.get(Metadata.DATE));\n            dateMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing date: {}: {}\", e.getMessage(), context.externalValue());\n        }\n\n        try {\n            context.externalValue(metadata.get(Metadata.TITLE));\n            titleMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing title: {}: {}\", e.getMessage(), context.externalValue());\n        }\n\n        try {\n            context.externalValue(metadata.get(Metadata.AUTHOR));\n            authorMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing author: {}: {}\", e.getMessage(), context.externalValue());\n        }\n\n        try {\n            context.externalValue(metadata.get(Metadata.KEYWORDS));\n            keywordsMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing keywords: {}: {}\", e.getMessage(), context.externalValue());\n        }\n\n        try {\n            if (contentType != null) {\n                context.externalValue(contentType);\n            } else {\n                context.externalValue(metadata.get(Metadata.CONTENT_TYPE));\n            }\n            contentTypeMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing content_type: {}: {}\", e.getMessage(), context.externalValue());\n        }\n\n        try {\n            if (metadata.get(Metadata.CONTENT_LENGTH) != null) {\n                // We try to get CONTENT_LENGTH from Tika first\n                context.externalValue(metadata.get(Metadata.CONTENT_LENGTH));\n            } else {\n                // Otherwise, we use our byte[] length\n                context.externalValue(content.length);\n            }\n            contentLengthMapper.parse(context);\n        } catch(MapperParsingException e){\n            if (!ignoreErrors) throw e;\n            if (logger.isDebugEnabled()) logger.debug(\"Ignoring MapperParsingException catch while parsing content_length: {}: {}\", e.getMessage(), context.externalValue());\n        }\n    }","commit_id":"4b35501cf3a582b76616ea3472e2cd53e71a2fe9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * When we don't want to ignore errors\n     */\n    @Test(expected = MapperParsingException.class)\n    public void testMultipleAttachmentsWithEncryptedDocNotIgnoringErrors() throws Exception {\n        ignore_errors = false;\n\n        logger.info(\"creating index [test]\");\n        createIndex(\"test\");\n        ensureGreen();\n\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/multipledocs/test-mapping.json\");\n        byte[] html = copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/xcontent/htmlWithValidDateMeta.html\");\n        byte[] pdf = copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/xcontent/encrypted.pdf\");\n\n        client().admin().indices()\n                .putMapping(putMappingRequest(\"test\").type(\"person\").source(mapping)).actionGet();\n\n        index(\"test\", \"person\", jsonBuilder().startObject().field(\"file1\", html).field(\"file2\", pdf).field(\"hello\",\"world\").endObject());\n    }","id":54974,"modified_method":"/**\n     * When we don't want to ignore errors\n     */\n    @Test(expected = MapperParsingException.class)\n    public void testMultipleAttachmentsWithEncryptedDocNotIgnoringErrors() throws Exception {\n        ignore_errors = false;\n\n        logger.info(\"creating index [test]\");\n        createIndex(\"test\");\n\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/multipledocs/test-mapping.json\");\n        byte[] html = copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/xcontent/htmlWithValidDateMeta.html\");\n        byte[] pdf = copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/xcontent/encrypted.pdf\");\n\n        client().admin().indices()\n                .putMapping(putMappingRequest(\"test\").type(\"person\").source(mapping)).actionGet();\n\n        index(\"test\", \"person\", jsonBuilder().startObject().field(\"file1\", html).field(\"file2\", pdf).field(\"hello\",\"world\").endObject());\n    }","commit_id":"4b35501cf3a582b76616ea3472e2cd53e71a2fe9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * When we want to ignore errors (default)\n     */\n    @Test\n    public void testMultipleAttachmentsWithEncryptedDoc() throws Exception {\n        ignore_errors = true;\n        logger.info(\"creating index [test]\");\n        createIndex(\"test\");\n        ensureGreen();\n\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/multipledocs/test-mapping.json\");\n        byte[] html = copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/xcontent/htmlWithValidDateMeta.html\");\n        byte[] pdf = copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/xcontent/encrypted.pdf\");\n\n        client().admin().indices().putMapping(putMappingRequest(\"test\").type(\"person\").source(mapping)).actionGet();\n\n        index(\"test\", \"person\", jsonBuilder().startObject().field(\"file1\", html).field(\"file2\", pdf).field(\"hello\",\"world\").endObject());\n        refresh();\n\n\n        CountResponse countResponse = client().prepareCount(\"test\").setQuery(queryString(\"World\").defaultField(\"file1\")).execute().get();\n        assertThat(countResponse.getCount(), equalTo(1l));\n\n        countResponse = client().prepareCount(\"test\").setQuery(queryString(\"World\").defaultField(\"hello\")).execute().get();\n        assertThat(countResponse.getCount(), equalTo(1l));\n    }","id":54975,"modified_method":"/**\n     * When we want to ignore errors (default)\n     */\n    @Test\n    public void testMultipleAttachmentsWithEncryptedDoc() throws Exception {\n        ignore_errors = true;\n        logger.info(\"creating index [test]\");\n        createIndex(\"test\");\n\n        String mapping = copyToStringFromClasspath(\"/org/elasticsearch/index/mapper/multipledocs/test-mapping.json\");\n        byte[] html = copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/xcontent/htmlWithValidDateMeta.html\");\n        byte[] pdf = copyToBytesFromClasspath(\"/org/elasticsearch/index/mapper/xcontent/encrypted.pdf\");\n\n        client().admin().indices().putMapping(putMappingRequest(\"test\").type(\"person\").source(mapping)).actionGet();\n\n        index(\"test\", \"person\", jsonBuilder().startObject().field(\"file1\", html).field(\"file2\", pdf).field(\"hello\",\"world\").endObject());\n        refresh();\n\n\n        CountResponse countResponse = client().prepareCount(\"test\").setQuery(queryString(\"World\").defaultField(\"file1\")).execute().get();\n        assertThat(countResponse.getCount(), equalTo(1l));\n\n        countResponse = client().prepareCount(\"test\").setQuery(queryString(\"World\").defaultField(\"hello\")).execute().get();\n        assertThat(countResponse.getCount(), equalTo(1l));\n    }","commit_id":"4b35501cf3a582b76616ea3472e2cd53e71a2fe9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Before\n    public void createEmptyIndex() throws Exception {\n        logger.info(\"creating index [test]\");\n        createIndex(\"test\");\n        ensureGreen();\n    }","id":54976,"modified_method":"@Before\n    public void createEmptyIndex() throws Exception {\n        logger.info(\"creating index [test]\");\n        createIndex(\"test\");\n    }","commit_id":"4b35501cf3a582b76616ea3472e2cd53e71a2fe9","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n  @NotNull\n  public Collection<GitBranchTrackInfo> getBranchTrackInfos() {\n    return myBranchTrackInfos;\n  }","id":54977,"modified_method":"@Override\n  @NotNull\n  public Collection<GitBranchTrackInfo> getBranchTrackInfos() {\n    return myInfo.getBranchTrackInfos();\n  }","commit_id":"5ee51dc9c691a2cd019debed5117dc6ba24a4dd8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * @return local and remote branches in this repository.\n   */\n  @Override\n  @NotNull\n  public GitBranchesCollection getBranches() {\n    return new GitBranchesCollection(myBranches);\n  }","id":54978,"modified_method":"/**\n   * @return local and remote branches in this repository.\n   */\n  @Override\n  @NotNull\n  public GitBranchesCollection getBranches() {\n    GitRepoInfo info = myInfo;\n    return new GitBranchesCollection(info.getLocalBranches(), info.getRemoteBranches());\n  }","commit_id":"5ee51dc9c691a2cd019debed5117dc6ba24a4dd8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  public String toLogString() {\n    return String.format(\"GitRepository{myCurrentBranch=%s, myCurrentRevision='%s', myState=%s, myRootDir=%s}\",\n                         myCurrentBranch, myCurrentRevision, myState, getRoot());\n  }","id":54979,"modified_method":"@NotNull\n  @Override\n  public String toLogString() {\n    return String.format(\"GitRepository \" + getRoot() + \" : \" + myInfo);\n  }","commit_id":"5ee51dc9c691a2cd019debed5117dc6ba24a4dd8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void update() {\n    File configFile = new File(VfsUtilCore.virtualToIoFile(myGitDir), \"config\");\n    GitConfig config = GitConfig.read(myPlatformFacade, configFile);\n    myRemotes = config.parseRemotes();\n    readRepository(myRemotes);\n    myBranchTrackInfos = config.parseTrackInfos(myBranches.getLocalBranches(), myBranches.getRemoteBranches());\n    notifyListeners();\n  }","id":54980,"modified_method":"@Override\n  public void update() {\n    myInfo = readRepoInfo(this, myPlatformFacade, myReader, myInfo);\n  }","commit_id":"5ee51dc9c691a2cd019debed5117dc6ba24a4dd8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void readRepository(@NotNull Collection<GitRemote> remotes) {\n    myState = myReader.readState();\n    myCurrentRevision = myReader.readCurrentRevision();\n    myCurrentBranch = myReader.readCurrentBranch();\n    myBranches = myReader.readBranches(remotes);\n  }","id":54981,"modified_method":"private static TempState readRepository(GitRepositoryReader reader, @NotNull Collection<GitRemote> remotes) {\n    return new TempState(reader.readState(), reader.readCurrentRevision(), reader.readCurrentBranch(), reader.readBranches(remotes));\n  }","commit_id":"5ee51dc9c691a2cd019debed5117dc6ba24a4dd8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  @NotNull\n  public Collection<GitRemote> getRemotes() {\n    return myRemotes;\n  }","id":54982,"modified_method":"@Override\n  @NotNull\n  public Collection<GitRemote> getRemotes() {\n    return myInfo.getRemotes();\n  }","commit_id":"5ee51dc9c691a2cd019debed5117dc6ba24a4dd8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  @Nullable\n  public GitLocalBranch getCurrentBranch() {\n    return myCurrentBranch;\n  }","id":54983,"modified_method":"@Override\n  @Nullable\n  public GitLocalBranch getCurrentBranch() {\n    return myInfo.getCurrentBranch();\n  }","commit_id":"5ee51dc9c691a2cd019debed5117dc6ba24a4dd8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean refreshIncomingChanges() throws IOException, VcsException {\n    return !myProject.isDisposed() && new RefreshIncomingChangesOperation(this, myProject).invoke();\n  }","id":54984,"modified_method":"public boolean refreshIncomingChanges() throws IOException, VcsException {\n    if (myProject.isDisposed()) return false;\n    \n    DiffProvider diffProvider = myVcs.getDiffProvider();\n    if (diffProvider == null) return false;\n    \n    return new RefreshIncomingChangesOperation(this, myProject, diffProvider).invoke();\n  }","commit_id":"f5509ad4024ce0e4370c79104cca506ec89277dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean invoke() throws VcsException, IOException {\n      final DiffProvider diffProvider = myChangesCacheFile.myVcs.getDiffProvider();\n      if (diffProvider == null) return false;\n\n      myChangesCacheFile.myLocation.onBeforeBatch();\n      final Collection<FilePath> incomingFiles = myChangesCacheFile.myChangesProvider.getIncomingFiles(myChangesCacheFile.myLocation);\n\n      myAnyChanges = false;\n      myChangesCacheFile.openStreams();\n      myChangesCacheFile.loadHeader();\n      myCurrentRevisions = new FactoryMap<VirtualFile, VcsRevisionNumber>() {\n        protected VcsRevisionNumber create(final VirtualFile key) {\n          return diffProvider.getCurrentRevision(key);\n        }\n      };\n      try {\n        IncomingChangeState.header(myChangesCacheFile.myLocation.toPresentableString());\n\n        final List<IncomingChangeListData> list = myChangesCacheFile.loadIncomingChangeListData();\n        boolean shouldChangeHeader;\n        if (incomingFiles != null && incomingFiles.isEmpty()) {\n          // we should just delete any partial files\n          shouldChangeHeader = ! list.isEmpty();\n          for (IncomingChangeListData data : list) {\n            myChangesCacheFile.saveIncoming(data, true);\n          }\n        } else {\n          shouldChangeHeader = refreshIncomingInFile(incomingFiles, list);\n        }\n\n        IncomingChangeState.footer();\n        if (shouldChangeHeader) {\n          myChangesCacheFile.writeHeader();\n        }\n      }\n      finally {\n        myChangesCacheFile.myLocation.onAfterBatch();\n        myChangesCacheFile.closeStreams();\n      }\n      return myAnyChanges;\n    }","id":54985,"modified_method":"public boolean invoke() throws VcsException, IOException {\n      myChangesCacheFile.myLocation.onBeforeBatch();\n      final Collection<FilePath> incomingFiles = myChangesCacheFile.myChangesProvider.getIncomingFiles(myChangesCacheFile.myLocation);\n\n      myAnyChanges = false;\n      myChangesCacheFile.openStreams();\n      myChangesCacheFile.loadHeader();\n      try {\n        IncomingChangeState.header(myChangesCacheFile.myLocation.toPresentableString());\n\n        final List<IncomingChangeListData> list = myChangesCacheFile.loadIncomingChangeListData();\n        boolean shouldChangeHeader;\n        if (incomingFiles != null && incomingFiles.isEmpty()) {\n          // we should just delete any partial files\n          shouldChangeHeader = ! list.isEmpty();\n          for (IncomingChangeListData data : list) {\n            myChangesCacheFile.saveIncoming(data, true);\n          }\n        } else {\n          shouldChangeHeader = refreshIncomingInFile(incomingFiles, list);\n        }\n\n        IncomingChangeState.footer();\n        if (shouldChangeHeader) {\n          myChangesCacheFile.writeHeader();\n        }\n      }\n      finally {\n        myChangesCacheFile.myLocation.onAfterBatch();\n        myChangesCacheFile.closeStreams();\n      }\n      return myAnyChanges;\n    }","commit_id":"f5509ad4024ce0e4370c79104cca506ec89277dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"RefreshIncomingChangesOperation(ChangesCacheFile changesCacheFile, Project project) {\n      myChangesCacheFile = changesCacheFile;\n      myProject = project;\n      myClManager = ChangeListManagerImpl.getInstanceImpl(project);\n    }","id":54986,"modified_method":"RefreshIncomingChangesOperation(ChangesCacheFile changesCacheFile, Project project, final DiffProvider diffProvider) {\n      myChangesCacheFile = changesCacheFile;\n      myProject = project;\n      myClManager = ChangeListManagerImpl.getInstanceImpl(project);\n      myCurrentRevisions = new FactoryMap<VirtualFile, VcsRevisionNumber>() {\n        protected VcsRevisionNumber create(final VirtualFile key) {\n          return diffProvider.getCurrentRevision(key);\n        }\n      };\n    }","commit_id":"f5509ad4024ce0e4370c79104cca506ec89277dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void relayout(boolean updateFolding) {\n    assert SwingUtilities.isEventDispatchThread() : \"LeftEditorHighlighter.relayout() should be executed in eventDispatchThread\";\n    SNode editedNode = myEditorComponent.getEditedNode();\n    // additional check - during editor dispose process some Folding area painters can be removed calling relayout()..\n    if (myEditorComponent.isDisposed() || (editedNode != null && jetbrains.mps.util.SNodeOperations.isDisposed(editedNode))) {\n      return;\n    }\n    if (myRightToLeft) {\n      recalculateFoldingAreaWidth();\n      updateSeparatorLinePosition();\n      if (updateFolding) {\n        for (AbstractFoldingAreaPainter painter : myFoldingAreaPainters) {\n          painter.relayout();\n        }\n        // wee need to recalculateIconRenderersWidth only if one of collections was folded/unfolded\n        recalculateIconRenderersWidth();\n      }\n      recalculateTextColumnWidth();\n    } else {\n      recalculateTextColumnWidth();\n      if (updateFolding) {\n        for (AbstractFoldingAreaPainter painter : myFoldingAreaPainters) {\n          painter.relayout();\n        }\n        // wee need to recalculateIconRenderersWidth only if one of collections was folded/unfolded\n        recalculateIconRenderersWidth();\n      }\n      recalculateFoldingAreaWidth();\n      updateSeparatorLinePosition();\n    }\n    updatePreferredSize();\n  }","id":54987,"modified_method":"public void relayout(boolean updateFolding) {\n    assert SwingUtilities.isEventDispatchThread() : \"LeftEditorHighlighter.relayout() should be executed in eventDispatchThread\";\n    final SNode editedNode = myEditorComponent.getEditedNode();\n    // additional check - during editor dispose process some Folding area painters can be removed calling relayout()..\n    if (myEditorComponent.isDisposed()) return;\n    if (editedNode != null) {\n      boolean disposed = ModelAccess.instance().runReadAction(new Computable<Boolean>() {\n        @Override\n        public Boolean compute() {\n          return !SNodeUtil.isAccessible(editedNode, MPSModuleRepository.getInstance());\n        }\n      });\n      if (disposed) return;\n    }\n    if (myRightToLeft) {\n      recalculateFoldingAreaWidth();\n      updateSeparatorLinePosition();\n      if (updateFolding) {\n        for (AbstractFoldingAreaPainter painter : myFoldingAreaPainters) {\n          painter.relayout();\n        }\n        // wee need to recalculateIconRenderersWidth only if one of collections was folded/unfolded\n        recalculateIconRenderersWidth();\n      }\n      recalculateTextColumnWidth();\n    } else {\n      recalculateTextColumnWidth();\n      if (updateFolding) {\n        for (AbstractFoldingAreaPainter painter : myFoldingAreaPainters) {\n          painter.relayout();\n        }\n        // wee need to recalculateIconRenderersWidth only if one of collections was folded/unfolded\n        recalculateIconRenderersWidth();\n      }\n      recalculateFoldingAreaWidth();\n      updateSeparatorLinePosition();\n    }\n    updatePreferredSize();\n  }","commit_id":"a40efb09310f61a5ef339124ee7f7064fa64c90d","url":"https://github.com/JetBrains/MPS"},{"original_method":"private TextEditorHighlightingPass[] getPasses(int[] passesToIgnore) {\n    if (myCompiled) {\n      passesToIgnore = EXCEPT_OVERRIDDEN;\n    }\n    else if (myProject.isDisposed() || !DaemonCodeAnalyzer.getInstance(myProject).isHighlightingAvailable(myFile)) {\n      return TextEditorHighlightingPass.EMPTY_ARRAY;\n    }\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    renewFile();\n    if (myFile == null) return TextEditorHighlightingPass.EMPTY_ARRAY;\n\n    TextEditorHighlightingPassRegistrarEx passRegistrar = TextEditorHighlightingPassRegistrarEx.getInstanceEx(myProject);\n\n    List<TextEditorHighlightingPass> createdPasses = passRegistrar.instantiatePasses(myFile, myEditor, passesToIgnore);\n    return createdPasses.toArray(new TextEditorHighlightingPass[createdPasses.size()]);\n  }","id":54988,"modified_method":"private TextEditorHighlightingPass[] getPasses(int[] passesToIgnore) {\n    if (myProject.isDisposed()) return TextEditorHighlightingPass.EMPTY_ARRAY;\n    if (myCompiled) {\n      passesToIgnore = EXCEPT_OVERRIDDEN;\n    }\n    else if (!DaemonCodeAnalyzer.getInstance(myProject).isHighlightingAvailable(myFile)) {\n      return TextEditorHighlightingPass.EMPTY_ARRAY;\n    }\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    renewFile();\n    if (myFile == null) return TextEditorHighlightingPass.EMPTY_ARRAY;\n\n    TextEditorHighlightingPassRegistrarEx passRegistrar = TextEditorHighlightingPassRegistrarEx.getInstanceEx(myProject);\n\n    List<TextEditorHighlightingPass> createdPasses = passRegistrar.instantiatePasses(myFile, myEditor, passesToIgnore);\n    return createdPasses.toArray(new TextEditorHighlightingPass[createdPasses.size()]);\n  }","commit_id":"c3109ed66add53cb25d673eab07250b97824564c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void updateFinished() {\n    myDumb = false;\n    try {\n      if (!myProject.isDisposed()) {\n        myPublisher.exitDumbMode();\n        FileEditorManagerEx.getInstanceEx(myProject).refreshIcons();\n      }\n    }\n    finally {\n      // It may happen that one of the pending runWhenSmart actions triggers new dumb mode;\n      // in this case we should quit processing pending actions and postpone them until the newly started dumb mode finishes.\n      while (!myDumb) {\n        final Runnable runnable;\n        synchronized (myRunWhenSmartQueue) {\n          if (myRunWhenSmartQueue.isEmpty()) {\n            break;\n          }\n          runnable = myRunWhenSmartQueue.pullFirst();\n        }\n        try {\n          runnable.run();\n        }\n        catch (Throwable e) {\n          LOG.error(e);\n        }\n      }\n    }\n  }","id":54989,"modified_method":"private void updateFinished() {\n    myDumb = false;\n    if (myProject.isDisposed()) return;\n\n    try {\n      myPublisher.exitDumbMode();\n      FileEditorManagerEx.getInstanceEx(myProject).refreshIcons();\n    }\n    finally {\n      // It may happen that one of the pending runWhenSmart actions triggers new dumb mode;\n      // in this case we should quit processing pending actions and postpone them until the newly started dumb mode finishes.\n      while (!myDumb) {\n        final Runnable runnable;\n        synchronized (myRunWhenSmartQueue) {\n          if (myRunWhenSmartQueue.isEmpty()) {\n            break;\n          }\n          runnable = myRunWhenSmartQueue.pullFirst();\n        }\n        try {\n          runnable.run();\n        }\n        catch (Throwable e) {\n          LOG.error(e);\n        }\n      }\n    }\n  }","commit_id":"99b16f3621d58d08b681792477cd7ee7a94717bc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void checkToolWindowStatuses(@NotNull final Project project) {\n    assert !project.isDisposed();\n\n    DumbService.getInstance(project).smartInvokeLater(new Runnable() {\n      public void run() {\n        if (project.isDisposed()) {\n          return;\n        }\n        final PsiManager psiManager = PsiManager.getInstance(myProject);\n        if (psiManager.isDisposed()) {\n          return;\n        }\n        for (LibraryDependentToolWindow libraryToolWindow : Extensions.getExtensions(LibraryDependentToolWindow.EXTENSION_POINT_NAME)) {\n          if (libraryToolWindow.getLibrarySearchHelper().isLibraryExists(project)) {\n            ensureToolWindowExists(libraryToolWindow);\n          }\n          else {\n            ToolWindow toolWindow = myToolWindowManager.getToolWindow(libraryToolWindow.id);\n            if (toolWindow != null) {\n              myToolWindowManager.unregisterToolWindow(libraryToolWindow.id);\n            }\n          }\n        }\n      }\n    });\n  }","id":54990,"modified_method":"private void checkToolWindowStatuses(@NotNull final Project project) {\n    assert !project.isDisposed();\n\n    DumbService.getInstance(project).smartInvokeLater(new Runnable() {\n      public void run() {\n        final PsiManager psiManager = PsiManager.getInstance(myProject);\n        if (psiManager.isDisposed()) {\n          return;\n        }\n        for (LibraryDependentToolWindow libraryToolWindow : Extensions.getExtensions(LibraryDependentToolWindow.EXTENSION_POINT_NAME)) {\n          if (libraryToolWindow.getLibrarySearchHelper().isLibraryExists(project)) {\n            ensureToolWindowExists(libraryToolWindow);\n          }\n          else {\n            ToolWindow toolWindow = myToolWindowManager.getToolWindow(libraryToolWindow.id);\n            if (toolWindow != null) {\n              myToolWindowManager.unregisterToolWindow(libraryToolWindow.id);\n            }\n          }\n        }\n      }\n    });\n  }","commit_id":"99b16f3621d58d08b681792477cd7ee7a94717bc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void projectOpened() {\n    final PropertyChangeListener myListener = new PropertyChangeListener() {\n      public void propertyChange(final PropertyChangeEvent evt) {\n        String propertyName = evt.getPropertyName();\n        if (EncodingManager.PROP_NATIVE2ASCII_SWITCH.equals(propertyName) ||\n            EncodingManager.PROP_PROPERTIES_FILES_ENCODING.equals(propertyName)\n          ) {\n          DumbService.getInstance(myProject).smartInvokeLater(new Runnable(){\n            public void run() {\n              ApplicationManager.getApplication().runWriteAction(new Runnable(){\n                public void run() {\n                  if (myProject.isDisposed()) return;\n                  Collection<VirtualFile> filesToRefresh = FileBasedIndex.getInstance()\n                    .getContainingFiles(FileTypeIndex.NAME, PropertiesFileType.INSTANCE, GlobalSearchScope.allScope(myProject));\n                  VirtualFile[] virtualFiles = VfsUtil.toVirtualFileArray(filesToRefresh);\n                  FileDocumentManager.getInstance().saveAllDocuments();\n\n                  //force to re-detect encoding\n                  for (VirtualFile virtualFile : virtualFiles) {\n                    virtualFile.setCharset(null);\n                  }\n                  FileDocumentManager.getInstance().reloadFiles(virtualFiles);\n                }\n              });\n            }\n          });\n        }\n      }\n    };\n    EncodingManager.getInstance().addPropertyChangeListener(myListener,myProject);\n  }","id":54991,"modified_method":"public void projectOpened() {\n    final PropertyChangeListener myListener = new PropertyChangeListener() {\n      public void propertyChange(final PropertyChangeEvent evt) {\n        String propertyName = evt.getPropertyName();\n        if (EncodingManager.PROP_NATIVE2ASCII_SWITCH.equals(propertyName) ||\n            EncodingManager.PROP_PROPERTIES_FILES_ENCODING.equals(propertyName)\n          ) {\n          DumbService.getInstance(myProject).smartInvokeLater(new Runnable(){\n            public void run() {\n              ApplicationManager.getApplication().runWriteAction(new Runnable(){\n                public void run() {\n                  Collection<VirtualFile> filesToRefresh = FileBasedIndex.getInstance()\n                    .getContainingFiles(FileTypeIndex.NAME, PropertiesFileType.INSTANCE, GlobalSearchScope.allScope(myProject));\n                  VirtualFile[] virtualFiles = VfsUtil.toVirtualFileArray(filesToRefresh);\n                  FileDocumentManager.getInstance().saveAllDocuments();\n\n                  //force to re-detect encoding\n                  for (VirtualFile virtualFile : virtualFiles) {\n                    virtualFile.setCharset(null);\n                  }\n                  FileDocumentManager.getInstance().reloadFiles(virtualFiles);\n                }\n              });\n            }\n          });\n        }\n      }\n    };\n    EncodingManager.getInstance().addPropertyChangeListener(myListener,myProject);\n  }","commit_id":"99b16f3621d58d08b681792477cd7ee7a94717bc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public synchronized void runPostStartupActivities() {\n    final Application app = ApplicationManager.getApplication();\n\n    if (myPostStartupActivitiesPassed) return;\n\n    runActivities(myDumbAwarePostStartupActivities);\n    DumbService.getInstance(myProject).runWhenSmart(new Runnable() {\n      public void run() {\n        //noinspection SynchronizeOnThis\n        synchronized (StartupManagerImpl.this) {\n          app.assertIsDispatchThread();\n          if (myProject.isDisposed()) return;\n          runActivities(myDumbAwarePostStartupActivities); // they can register activities while in the dumb mode\n          runActivities(myNotDumbAwarePostStartupActivities);\n          myPostStartupActivitiesPassed = true;\n        }\n      }\n    });\n\n    Registry.get(\"ide.firstStartup\").setValue(false);\n  }","id":54992,"modified_method":"public synchronized void runPostStartupActivities() {\n    final Application app = ApplicationManager.getApplication();\n\n    if (myPostStartupActivitiesPassed) return;\n\n    runActivities(myDumbAwarePostStartupActivities);\n    DumbService.getInstance(myProject).runWhenSmart(new Runnable() {\n      public void run() {\n        //noinspection SynchronizeOnThis\n        synchronized (StartupManagerImpl.this) {\n          app.assertIsDispatchThread();\n          runActivities(myDumbAwarePostStartupActivities); // they can register activities while in the dumb mode\n          runActivities(myNotDumbAwarePostStartupActivities);\n          myPostStartupActivitiesPassed = true;\n        }\n      }\n    });\n\n    Registry.get(\"ide.firstStartup\").setValue(false);\n  }","commit_id":"99b16f3621d58d08b681792477cd7ee7a94717bc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void runPostStartupActivitiesFromExtensions() {\n    final StartupActivity[] extensions = Extensions.getExtensions(StartupActivity.POST_STARTUP_ACTIVITY);\n    if (extensions.length == 0) {\n      return;\n    }\n\n    final List<Runnable> dumbAwareActivities = new ArrayList<Runnable>();\n    final List<Runnable> normalActivities = new ArrayList<Runnable>();\n    for (final StartupActivity extension : extensions) {\n      final Runnable runnable = new Runnable() {\n        public void run() {\n          if (!myProject.isDisposed()) {\n            extension.runActivity(myProject);\n          }\n        }\n      };\n      if (extension instanceof DumbAware) {\n        dumbAwareActivities.add(runnable);\n      }\n      else {\n        normalActivities.add(runnable);\n      }\n    }\n\n    runActivities(dumbAwareActivities);\n\n    if (!normalActivities.isEmpty()) {\n      DumbService.getInstance(myProject).runWhenSmart(new Runnable() {\n        public void run() {\n          if (!myProject.isDisposed()) {\n            runActivities(normalActivities);\n          }\n        }\n      });\n    }\n  }","id":54993,"modified_method":"public void runPostStartupActivitiesFromExtensions() {\n    final StartupActivity[] extensions = Extensions.getExtensions(StartupActivity.POST_STARTUP_ACTIVITY);\n    if (extensions.length == 0) {\n      return;\n    }\n\n    final List<Runnable> dumbAwareActivities = new ArrayList<Runnable>();\n    final List<Runnable> normalActivities = new ArrayList<Runnable>();\n    for (final StartupActivity extension : extensions) {\n      final Runnable runnable = new Runnable() {\n        public void run() {\n          if (!myProject.isDisposed()) {\n            extension.runActivity(myProject);\n          }\n        }\n      };\n      if (extension instanceof DumbAware) {\n        dumbAwareActivities.add(runnable);\n      }\n      else {\n        normalActivities.add(runnable);\n      }\n    }\n\n    runActivities(dumbAwareActivities);\n\n    if (!normalActivities.isEmpty()) {\n      DumbService.getInstance(myProject).runWhenSmart(new Runnable() {\n        public void run() {\n          runActivities(normalActivities);\n        }\n      });\n    }\n  }","commit_id":"99b16f3621d58d08b681792477cd7ee7a94717bc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void fileTypesChanged(@NotNull FileTypeEvent e){\n      // this invokeLater guaranties that this code will be invoked after\n      // PSI gets the same event.\n      DumbService.getInstance(myProject).smartInvokeLater(new Runnable() {\n        @Override\n        public void run() {\n          if (myProject.isDisposed()) return;\n\n          ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){\n            @Override\n            public void run(){\n              if (myAllTodos == null) return;\n\n              ApplicationManager.getApplication().runReadAction(\n                new Runnable(){\n                  @Override\n                  public void run(){\n                    for (TodoPanel panel : myPanels) {\n                      panel.rebuildCache();\n                    }\n                  }\n                }\n              );\n              ApplicationManager.getApplication().invokeLater(new Runnable(){\n                @Override\n                public void run(){\n                  for (TodoPanel panel : myPanels) {\n                    panel.updateTree();\n                  }\n                }\n              }, ModalityState.NON_MODAL);\n            }\n          }, IdeBundle.message(\"progress.looking.for.todos\"), false, myProject);\n        }\n      });\n    }","id":54994,"modified_method":"@Override\n    public void fileTypesChanged(@NotNull FileTypeEvent e){\n      // this invokeLater guaranties that this code will be invoked after\n      // PSI gets the same event.\n      DumbService.getInstance(myProject).smartInvokeLater(new Runnable() {\n        @Override\n        public void run() {\n          ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable(){\n            @Override\n            public void run(){\n              if (myAllTodos == null) return;\n\n              ApplicationManager.getApplication().runReadAction(\n                new Runnable(){\n                  @Override\n                  public void run(){\n                    for (TodoPanel panel : myPanels) {\n                      panel.rebuildCache();\n                    }\n                  }\n                }\n              );\n              ApplicationManager.getApplication().invokeLater(new Runnable(){\n                @Override\n                public void run(){\n                  for (TodoPanel panel : myPanels) {\n                    panel.updateTree();\n                  }\n                }\n              }, ModalityState.NON_MODAL);\n            }\n          }, IdeBundle.message(\"progress.looking.for.todos\"), false, myProject);\n        }\n      });\n    }","commit_id":"99b16f3621d58d08b681792477cd7ee7a94717bc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@DB\n    protected void createBaseImageAsync(VolumeInfo volume, PrimaryDataStore dataStore, TemplateInfo template, AsyncCallFuture<VolumeApiResult> future) {\n\n        DataObject templateOnPrimaryStoreObj = dataStore.create(template);\n        CreateBaseImageContext<CreateCmdResult> context = new CreateBaseImageContext<CreateCmdResult>(null, volume,\n                dataStore,\n                template,\n                future, templateOnPrimaryStoreObj);\n        AsyncCallbackDispatcher<VolumeServiceImpl, CopyCommandResult> caller = AsyncCallbackDispatcher.create(this);\n        caller.setCallback(caller.getTarget().copyBaseImageCallback(null, null))\n        .setContext(context);\n\n        try {\n         \ttemplateOnPrimaryStoreObj.processEvent(Event.CreateOnlyRequested);\n        } catch (Exception e) {\n        \ttry {\n        \t    templateOnPrimaryStoreObj = waitForTemplateDownloaded(dataStore, template);\n        \t} catch(Exception e1) {\n        \t    s_logger.debug(\"wait for template:\" + template.getId() + \" downloading finished, but failed\");\n        \t    VolumeApiResult result = new VolumeApiResult(volume);\n        \t    result.setResult(e1.toString());\n        \t    caller.complete(result);\n        \t    return;\n        \t}\n        \tif (templateOnPrimaryStoreObj == null) {\n        \t    VolumeApiResult result = new VolumeApiResult(volume);\n                result.setResult(\"wait for template:\" + template.getId() + \" downloading finished, but failed\");\n                caller.complete(result);\n                return;\n        \t} else {\n        \t    s_logger.debug(\"waiting for template:\" + template.getId() + \" downloading finished, success\");\n        \t    VolumeApiResult result = new VolumeApiResult(volume);\n        \t    future.complete(result);\n        \t    return;\n        \t}\n        }\n\n\n        try {\n            motionSrv.copyAsync(template, templateOnPrimaryStoreObj, caller);\n        } catch (Exception e) {\n            s_logger.debug(\"failed to create template on storage\", e);\n            templateOnPrimaryStoreObj.processEvent(Event.OperationFailed);\n            VolumeApiResult result = new VolumeApiResult(volume);\n            result.setResult(e.toString());\n            future.complete(result);\n        }\n        return;\n    }","id":54995,"modified_method":"@DB\n    protected void createBaseImageAsync(VolumeInfo volume, PrimaryDataStore dataStore, TemplateInfo template, AsyncCallFuture<VolumeApiResult> future) {\n\n        DataObject templateOnPrimaryStoreObj = dataStore.create(template);\n        CreateBaseImageContext<CreateCmdResult> context = new CreateBaseImageContext<CreateCmdResult>(null, volume,\n                dataStore,\n                template,\n                future, templateOnPrimaryStoreObj);\n        AsyncCallbackDispatcher<VolumeServiceImpl, CopyCommandResult> caller = AsyncCallbackDispatcher.create(this);\n        caller.setCallback(caller.getTarget().copyBaseImageCallback(null, null))\n        .setContext(context);\n\n        try {\n         \ttemplateOnPrimaryStoreObj.processEvent(Event.CreateOnlyRequested);\n        } catch (Exception e) {\n        \ttry {\n        \t    templateOnPrimaryStoreObj = waitForTemplateDownloaded(dataStore, template);\n        \t} catch(Exception e1) {\n        \t    s_logger.debug(\"wait for template:\" + template.getId() + \" downloading finished, but failed\");\n        \t    VolumeApiResult result = new VolumeApiResult(volume);\n        \t    result.setResult(e1.toString());\n        \t    future.complete(result);\n        \t    return;\n        \t}\n        \tif (templateOnPrimaryStoreObj == null) {\n        \t    VolumeApiResult result = new VolumeApiResult(volume);\n                result.setResult(\"wait for template:\" + template.getId() + \" downloading finished, but failed\");\n                future.complete(result);\n                return;\n        \t} else {\n        \t    s_logger.debug(\"waiting for template:\" + template.getId() + \" downloading finished, success\");\n        \t    createVolumeFromBaseImageAsync(volume, templateOnPrimaryStoreObj, dataStore, future);\n        \t    return;\n        \t}\n        }\n\n\n        try {\n            motionSrv.copyAsync(template, templateOnPrimaryStoreObj, caller);\n        } catch (Exception e) {\n            s_logger.debug(\"failed to create template on storage\", e);\n            templateOnPrimaryStoreObj.processEvent(Event.OperationFailed);\n            VolumeApiResult result = new VolumeApiResult(volume);\n            result.setResult(e.toString());\n            future.complete(result);\n        }\n        return;\n    }","commit_id":"0e28772957d2e317bc3f0197c2e567ce1c914123","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n\t\tpublic boolean search(SearchPhrase phrase, final SearchResultMatcher resultMatcher) throws IOException {\n\t\t\tif(phrase.isLastWord(ObjectType.STREET)) {\n\t\t\t\tStreet s =  (Street) phrase.getLastSelectedWord().getResult().object;\n\t\t\t\tBinaryMapIndexReader file = phrase.getLastSelectedWord().getResult().file;\n\t\t\t\tString lw = phrase.getLastWord();\n\t\t\t\tNameStringMatcher sm = phrase.getNameStringMatcher();\n\t\t\t\tif (cacheBuilding != s) {\n\t\t\t\t\tcacheBuilding = s;\n\t\t\t\t\tSearchRequest<Building> sr = BinaryMapIndexReader\n\t\t\t\t\t\t\t.buildAddressRequest(new ResultMatcher<Building>() {\n\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic boolean publish(Building object) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic boolean isCancelled() {\n\t\t\t\t\t\t\t\t\treturn resultMatcher.isCancelled();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\tfile.preloadBuildings(s, sr);\n\t\t\t\t\tCollections.sort(s.getBuildings(), new Comparator<Building>() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic int compare(Building o1, Building o2) {\n\t\t\t\t\t\t\tint i1 = Algorithms.extractFirstIntegerNumber(o1.getName());\n\t\t\t\t\t\t\tint i2 = Algorithms.extractFirstIntegerNumber(o2.getName());\n\t\t\t\t\t\t\tif (i1 == i2) {\n\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn Algorithms.compare(i1, i2);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tfor(Building b : s.getBuildings()) {\n\t\t\t\t\tSearchResult res = new SearchResult(phrase);\n\t\t\t\t\tboolean interpolation = b.belongsToInterpolation(lw);\n\t\t\t\t\tif(!sm.matches(b.getName()) && !interpolation) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tres.localeName = b.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\tres.otherNames = b.getAllNames(true);\n\t\t\t\t\tres.object = b;\n\t\t\t\t\tres.file = file;\n\t\t\t\t\tres.priorityDistance = 0;\n\t\t\t\t\tres.objectType = ObjectType.HOUSE;\n\t\t\t\t\tif(interpolation) {\n\t\t\t\t\t\tres.location = b.getLocation(b.interpolation(lw));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres.location = b.getLocation();\n\t\t\t\t\t}\n\t\t\t\t\tres.preferredZoom = 17;\n\t\t\t\t\tresultMatcher.publish(res);\n\t\t\t\t}\n\t\t\t\tif(!Algorithms.isEmpty(lw) && !Character.isDigit(lw.charAt(0))) {\n\t\t\t\t\tfor(Street street : s.getIntersectedStreets()) {\n\t\t\t\t\t\tSearchResult res = new SearchResult(phrase);\n\t\t\t\t\t\tif(!sm.matches(street.getName()) && !sm.matches(street.getAllNames(true))) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres.otherNames = street.getAllNames(true);\n\t\t\t\t\t\tres.localeName = street.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\t\tres.object = street;\n\t\t\t\t\t\tres.file = file;\n\t\t\t\t\t\tres.priorityDistance = 0;\n\t\t\t\t\t\tres.objectType = ObjectType.STREET_INTERSECTION;\n\t\t\t\t\t\tres.location = street.getLocation();\n\t\t\t\t\t\tres.preferredZoom = 16;\n\t\t\t\t\t\tresultMatcher.publish(res);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\treturn true;\n\t\t}","id":54996,"modified_method":"@Override\n\t\tpublic boolean search(SearchPhrase phrase, final SearchResultMatcher resultMatcher) throws IOException {\n\t\t\tStreet s = null;\n\t\t\tint priority = 1;\n\t\t\tif(phrase.isLastWord(ObjectType.STREET)) {\n\t\t\t\ts =  (Street) phrase.getLastSelectedWord().getResult().object;\n\t\t\t}\n\t\t\tif(isLastWordCityGroup(phrase)) {\n\t\t\t\tpriority = 3;\n\t\t\t\tObject o = phrase.getLastSelectedWord().getResult().object;\n\t\t\t\tif(o instanceof City) {\n\t\t\t\t\tList<Street> streets = ((City) o).getStreets();\n\t\t\t\t\tif(streets.size() == 1) {\n\t\t\t\t\t\ts = streets.get(0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor(Street st : streets) {\n\t\t\t\t\t\t\tif(st.getName().equals(((City) o).getName()) ||\n\t\t\t\t\t\t\t\t\tst.getName().equals(\"<\"+((City) o).getName()+\">\")) {\n\t\t\t\t\t\t\t\ts = st;\n\t\t\t\t\t\t\t\tbreak;\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(s != null) {\n\t\t\t\tBinaryMapIndexReader file = phrase.getLastSelectedWord().getResult().file;\n\t\t\t\tString lw = phrase.getLastWord();\n\t\t\t\tNameStringMatcher sm = phrase.getNameStringMatcher();\n\t\t\t\tif (cacheBuilding != s) {\n\t\t\t\t\tcacheBuilding = s;\n\t\t\t\t\tSearchRequest<Building> sr = BinaryMapIndexReader\n\t\t\t\t\t\t\t.buildAddressRequest(new ResultMatcher<Building>() {\n\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic boolean publish(Building object) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\tpublic boolean isCancelled() {\n\t\t\t\t\t\t\t\t\treturn resultMatcher.isCancelled();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\tfile.preloadBuildings(s, sr);\n\t\t\t\t\tCollections.sort(s.getBuildings(), new Comparator<Building>() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic int compare(Building o1, Building o2) {\n\t\t\t\t\t\t\tint i1 = Algorithms.extractFirstIntegerNumber(o1.getName());\n\t\t\t\t\t\t\tint i2 = Algorithms.extractFirstIntegerNumber(o2.getName());\n\t\t\t\t\t\t\tif (i1 == i2) {\n\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn Algorithms.compare(i1, i2);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tfor(Building b : s.getBuildings()) {\n\t\t\t\t\tSearchResult res = new SearchResult(phrase);\n\t\t\t\t\tboolean interpolation = b.belongsToInterpolation(lw);\n\t\t\t\t\tif(!sm.matches(b.getName()) && !interpolation) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tres.localeName = b.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\tres.otherNames = b.getAllNames(true);\n\t\t\t\t\tres.object = b;\n\t\t\t\t\tres.file = file;\n\t\t\t\t\tres.priority = priority;\n\t\t\t\t\tres.priorityDistance = 0;\n\t\t\t\t\tres.objectType = ObjectType.HOUSE;\n\t\t\t\t\tif(interpolation) {\n\t\t\t\t\t\tres.location = b.getLocation(b.interpolation(lw));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres.location = b.getLocation();\n\t\t\t\t\t}\n\t\t\t\t\tres.preferredZoom = 17;\n\t\t\t\t\tresultMatcher.publish(res);\n\t\t\t\t}\n\t\t\t\tif(!Algorithms.isEmpty(lw) && !Character.isDigit(lw.charAt(0))) {\n\t\t\t\t\tfor(Street street : s.getIntersectedStreets()) {\n\t\t\t\t\t\tSearchResult res = new SearchResult(phrase);\n\t\t\t\t\t\tif(!sm.matches(street.getName()) && !sm.matches(street.getAllNames(true))) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tres.otherNames = street.getAllNames(true);\n\t\t\t\t\t\tres.localeName = street.getName(phrase.getSettings().getLang(), true);\n\t\t\t\t\t\tres.object = street;\n\t\t\t\t\t\tres.file = file;\n\t\t\t\t\t\tres.priorityDistance = 0;\n\t\t\t\t\t\tres.objectType = ObjectType.STREET_INTERSECTION;\n\t\t\t\t\t\tres.location = street.getLocation();\n\t\t\t\t\t\tres.preferredZoom = 16;\n\t\t\t\t\t\tresultMatcher.publish(res);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\treturn true;\n\t\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic boolean search(SearchPhrase phrase, SearchResultMatcher resultMatcher) throws IOException {\n\t\t\tresults.clear();\n\t\t\tNameStringMatcher nm = phrase.getNameStringMatcher();\n\t\t\tfor (PoiFilter pf : topVisibleFilters) {\n\t\t\t\tif (Algorithms.isEmpty(phrase.getLastWord()) || nm.matches(pf.getTranslation())) {\n\t\t\t\t\tresults.add(pf);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!Algorithms.isEmpty(phrase.getLastWord())) {\n\t\t\t\tIterator<Entry<String, PoiType>> it = translatedNames.entrySet().iterator();\n\t\t\t\twhile (it.hasNext()) {\n\t\t\t\t\tEntry<String, PoiType> e = it.next();\n\t\t\t\t\tif (nm.matches(e.getKey())) {\n\t\t\t\t\t\tresults.add(e.getValue());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (AbstractPoiType p : results) {\n\t\t\t\tSearchResult res = new SearchResult(phrase);\n\t\t\t\tres.localeName = p.getTranslation();\n\t\t\t\tres.object = p;\n\t\t\t\tres.priority = 2;\n\t\t\t\tres.objectType = ObjectType.POI_TYPE;\n\t\t\t\tresultMatcher.publish(res);\n\t\t\t}\n\t\t\treturn true;\n\t\t}","id":54997,"modified_method":"@Override\n\t\tpublic boolean search(SearchPhrase phrase, SearchResultMatcher resultMatcher) throws IOException {\n//\t\t\tresults.clear();\n//\t\t\tfinal net.osmand.Collator clt = OsmAndCollator.primaryCollator();\n\t\t\tTreeSet<AbstractPoiType> results = new TreeSet<>(new Comparator<AbstractPoiType>() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(AbstractPoiType o1, AbstractPoiType o2) {\n\t\t\t\t\treturn o1.getKeyName().compareTo(o2.getKeyName());\n\t\t\t\t}\n\t\t\t});\n\t\t\tNameStringMatcher nm = phrase.getNameStringMatcher();\n\t\t\tfor (PoiFilter pf : topVisibleFilters) {\n\t\t\t\tif (Algorithms.isEmpty(phrase.getLastWord()) || nm.matches(pf.getTranslation())) {\n\t\t\t\t\tresults.add(pf);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!Algorithms.isEmpty(phrase.getLastWord())) {\n\t\t\t\tIterator<Entry<String, PoiType>> it = translatedNames.entrySet().iterator();\n\t\t\t\twhile (it.hasNext()) {\n\t\t\t\t\tEntry<String, PoiType> e = it.next();\n\t\t\t\t\tif (nm.matches(e.getKey())) {\n\t\t\t\t\t\tresults.add(e.getValue());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (AbstractPoiType p : results) {\n\t\t\t\tSearchResult res = new SearchResult(phrase);\n\t\t\t\tres.localeName = p.getTranslation();\n\t\t\t\tres.object = p;\n\t\t\t\tres.priority = 5;\n\t\t\t\tres.priorityDistance = 0;\n\t\t\t\tres.objectType = ObjectType.POI_TYPE;\n\t\t\t\tresultMatcher.publish(res);\n\t\t\t}\n\t\t\treturn true;\n\t\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic int getSearchPriority(SearchPhrase p) {\n\t\t\treturn 1;\n\t\t}","id":54998,"modified_method":"@Override\n\t\tpublic int getSearchPriority(SearchPhrase p) {\n\t\t\tif(isLastWordCityGroup(p)) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic boolean search(SearchPhrase phrase, SearchResultMatcher resultMatcher) {\n\t\t\tfor (BinaryMapIndexReader bmir : phrase.getOfflineIndexes()) {\n\t\t\t\tif (bmir.getRegionCenter() != null) {\n\t\t\t\t\tSearchResult sr = new SearchResult(phrase);\n\t\t\t\t\tsr.localeName = bmir.getRegionName();\n\t\t\t\t\tsr.object = bmir;\n\t\t\t\t\tsr.file = bmir;\n\t\t\t\t\tsr.priority = 3;\n\t\t\t\t\tsr.objectType = ObjectType.REGION;\n\t\t\t\t\tsr.location = bmir.getRegionCenter();\n\t\t\t\t\tsr.preferredZoom = 6;\n\t\t\t\t\tif (phrase.getLastWord().length() <= 1 && phrase.isNoSelectedType()) {\n\t\t\t\t\t\tresultMatcher.publish(sr);\n\t\t\t\t\t} else if (phrase.getNameStringMatcher().matches(sr.localeName)) {\n\t\t\t\t\t\tresultMatcher.publish(sr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}","id":54999,"modified_method":"@Override\n\t\tpublic boolean search(SearchPhrase phrase, SearchResultMatcher resultMatcher) {\n\t\t\tfor (BinaryMapIndexReader bmir : phrase.getOfflineIndexes()) {\n\t\t\t\tif (bmir.getRegionCenter() != null) {\n\t\t\t\t\tSearchResult sr = new SearchResult(phrase);\n\t\t\t\t\tsr.localeName = bmir.getRegionName();\n\t\t\t\t\tsr.object = bmir;\n\t\t\t\t\tsr.file = bmir;\n\t\t\t\t\tsr.priority = 10;\n\t\t\t\t\tsr.objectType = ObjectType.REGION;\n\t\t\t\t\tsr.location = bmir.getRegionCenter();\n\t\t\t\t\tsr.preferredZoom = 6;\n\t\t\t\t\tif (phrase.getLastWord().length() <= 1 && phrase.isNoSelectedType()) {\n\t\t\t\t\t\tresultMatcher.publish(sr);\n\t\t\t\t\t} else if (phrase.getNameStringMatcher().matches(sr.localeName)) {\n\t\t\t\t\t\tresultMatcher.publish(sr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}","commit_id":"f7736d626360b74b804267e0b8b3e64560acd31c","url":"https://github.com/osmandapp/Osmand"}]